if (typeof kony == "undefined") {
  kony = {
    api: {},
    app: {},
    globals: {},
    system: {},
    widgets: {},
    io: {},
    constants: {
      KONY_WIDGET_TYPE: "kwidgettype",
      SELECTED_ITEM: "selecteditem",
      IMAGE_PATH: "images",
      RESOURCES_PATH: "resources",
      TRANSLATION_PATH: "strings",
      TRANSLATION_EXT: "js",
      MODE: "s",
      RUNMODE: "debug",
      APPSTATE: 0
    }
  };
  konychannel = "wap";
  kiden = "useragent";
  $KI = kony.api;
  $KW = kony.widgets;
  $KG = kony.globals;
  $KIO = kony.io;
  $KG.allforms = {};
  $KG.appbehaviors = {};
  $KG.widgetPositions = {};
  $KG.cwtexists = [];
  $KG.retina = "";
  $KG.imagecat = "";
  $KG.uniqueId = 0;
  $KG.animStyleSheet = ""
}
app = {
  headers: {},
  footers: {}
};
$KI.print = kony.print = function(a) {
  if (kony.constants.RUNMODE == "debug") {
    if (kony.constants.MODE == "s") {
      if (typeof JSON != "undefined" && typeof a == "object") {
        console.log(JSON.stringify(a, $KU.jsonReplacer))
      } else {
        console.log(a)
      }
    } else {
      alert(a)
    }
  }
};
if (typeof console === "undefined") {
  var alertFallback = false;
  var warnFallback = false;
  var errorFallback = false;
  console = {};
  console.log = function(a) {
    alertFallback && alert(a)
  };
  console.warn = function(a) {
    warnFallback && alert(a)
  };
  console.error = function(a) {
    errorFallback && alert(a)
  }
}
kony.appinit = {
  index: 0,
  JSMapFileCount: 0,
  head: document.getElementsByTagName("head")[0],
  foldertype: IndexJL ? "LuaFiles" : "JSFiles",
  vendor: (/trident/gi).test(navigator.userAgent) ? "ms" : (/webkit/i).test(navigator.userAgent) ? "webkit" : (/firefox/i).test(navigator.userAgent) ? "Moz" : "opera" in window ? "o" : ((/msie/i).test(navigator.userAgent) || (/rv:([1][1-9])/i).test(navigator.userAgent)) ? "ms" : "",
  isIE: window.navigator.appVersion.match(/MSIE (\d+)/) != null || (/rv:([1][1-9])/i).test(navigator.userAgent),
  isIE7: window.navigator.appVersion.match(/MSIE (\d+)/) != null && RegExp.$1 == "7",
  isIE8: window.navigator.appVersion.match(/MSIE (\d+)/) != null && RegExp.$1 == "8",
  isIE9: window.navigator.appVersion.match(/MSIE (\d+)/) != null && RegExp.$1 == "9",
  isIE10: navigator.userAgent.match(/MSIE (\d+)/) != null && RegExp.$1 == "10",
  isIE11: (/rv:([1][1-9])/i).test(navigator.userAgent),
  isFirefox: window.navigator.userAgent.indexOf("Firefox") >= 0,
  isChrome: window.navigator.userAgent.indexOf("Chrome") >= 0,
  isSafari: (window.navigator.userAgent.indexOf("Safari") >= 0) && !(window.navigator.userAgent.indexOf("Chrome") >= 0),
  isOpera: window.navigator.userAgent.indexOf("Opera") >= 0,
  isAndroid: (/android/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isIDevice: (/iphone|ipad/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPhone: (/iphone/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPod: (/ipod/gi).test(navigator.userAgent),
  isiPad: (/ipad/gi).test(navigator.userAgent),
  isPlaybook: (/playbook/gi).test(navigator.userAgent),
  isBlackBerry: ((/bb10/gi).test(navigator.userAgent) || (/blackberry/gi).test(navigator.userAgent)) && typeof bbnth == "undefined",
  isBlackBerry10: (/bb10/gi).test(navigator.userAgent),
  isBlackBerryNTH: (/blackberry/gi).test(navigator.userAgent) && typeof bbnth != "undefined" && bbnth,
  isTouchPad: (/hp-tablet/gi).test(navigator.userAgent),
  isWindowsPhone: (/Windows Phone/gi).test(navigator.userAgent),
  isWindowsTouch: (/Windows/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent) || ((/trident/gi).test(navigator.userAgent)),
  isWindowsTablet: (/Windows NT/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent),
  isTablet: (/hp-tablet|ipad|playbook/gi).test(navigator.userAgent) || ((/android/gi).test(navigator.userAgent) && !(/mobile/gi).test(navigator.userAgent)),
  isMob: (/mobile/gi).test(navigator.userAgent),
  syncFiles: ["jslib/tparty/cal/yahoo-dom-event.js", "jslib/konytextfieldwidget.js"],
  syncJSFiles: ["jslib/konyconstants.js", "jslib/konywidgetdefault.js", "jslib/konyJSLib/ui/konyuiBaseClasses.js", "jslib/konyJSLib/ui/konyuiForm.js", "jslib/konyJSLib/ui/konyuiBox.js"],
  syncLuaFiles: ["jslib/konyLuaLib/ui/windowBaseClasses.js", "jslib/konyLuaLib/ui/windowForm.js", "jslib/konyLuaLib/ui/windowBox.js"],
  asyncViewFiles: ["jslib/konyconstcommon.js", "jslib/konymodel.js", "jslib/konycore.js", "jslib/konysystem.js", "jslib/konyapi.js", "jslib/konymodule.js", "jslib/konytableapi.js", "jslib/konyosapi.js", "jslib/konystringapi.js", "jslib/konymathapi.js", "jslib/konyutils.js", "jslib/konyi18n.js", "jslib/konywidgets.js", "jslib/konytouchwidgets.js", "jslib/konyformwidget.js", "jslib/konyappmenu.js", "jslib/konynetwork.js", "jslib/konyworker.js", "jslib/konylabelwidget.js", "jslib/konybuttonwidget.js", "jslib/konysliderwidget.js", "jslib/konytextfieldautocomplete.js", "jslib/konytextfieldpassword.js", "jslib/konycomboboxgroup.js", "jslib/konyradiobuttongroup.js", "jslib/konylistboxgroup.js", "jslib/konytextareawidget.js", "jslib/konycheckboxgroup.js", "jslib/konylinkwidget.js", "jslib/konyboxwidget.js", "jslib/konyvboxwidget.js", "jslib/konyflexlayoutengine.js", "jslib/konyflexcontainerwidget.js", "jslib/konyflexscrollcontainerwidget.js", "jslib/konylinewidget.js", "jslib/konysegmentwidget.js", "jslib/konyimagewidget.js", "jslib/konyHorizontalImagewidget.js", "jslib/konyHorizontalImageGallerywidget.js", "jslib/konyslotviewwidget.js", "jslib/konybrowserwidget.js", "jslib/konydatagridwidget.js", "jslib/konymapwidget.js", "jslib/konytabwidget.js", "jslib/konyswitchwidget.js", "jslib/konypopup.js", "jslib/konyphone.js", "jslib/konyscrollerwidget.js", "jslib/konyrichtextwidget.js", "jslib/konyscrollboxwidget.js", "jslib/konymediawidget.js", "jslib/konythemesapi.js", "jslib/tparty/cal/calendar-min.js", "jslib/tparty/cal/element-min.js", "jslib/tparty/cal/container-min.js", "jslib/konycalendarwidget.js", "jslib/konyanimations.js", "jslib/konyhybridapi.js", "jslib/konydatabaseapi.js", "jslib/konydatastoreapi.js", "jslib/konygeolocationapi.js", "jslib/konyphoneapi.js", "jslib/konytimerapi.js", "jslib/konypickerview.js", "jslib/konypickerwidget.js", "jslib/konycrypto.js", "jslib/tparty/crypto/cryptojslib-min.js", "jslib/tparty/requirejs/require-min.js"],
  asyncJSFiles: ["jslib/konyJSLib/core/konyJSUtils.js", "jslib/konyJSLib/ui/konyuiBasicWidgets.js", "jslib/konyJSLib/ui/konyuiFlexContainer.js", "jslib/konyJSLib/ui/konyuiCalendar.js", "jslib/konyJSLib/ui/konyuiDataGrid.js", "jslib/konyJSLib/ui/konyuiGroupWidgets.js", "jslib/konyJSLib/ui/konyuiImage.js", "jslib/konyJSLib/ui/konyuiImageGallery.js", "jslib/konyJSLib/ui/konyuiHorizontalImageStrip.js", "jslib/konyJSLib/ui/konyuiMap.js", "jslib/konyJSLib/ui/konyuiBrowser.js", "jslib/konyJSLib/ui/konyuiRichText.js", "jslib/konyJSLib/ui/konyuiScrollBox.js", "jslib/konyJSLib/ui/konyuiSegmentedUI.js", "jslib/konyJSLib/ui/konyuiText.js", "jslib/konyJSLib/ui/konyuiPopup.js", "jslib/konyJSLib/ui/konyuiTabPane.js", "jslib/konyJSLib/ui/konyuiSlider.js", "jslib/konyJSLib/ui/konyuiVideo.js", ],
  JSMapList: ["jslib/konyJSLib/core/konyJSMapping.js", "jslib/konyJSLib/core/konyapplication.js"],
  asyncLuaFiles: ["jslib/konyLuaLib/ui/konyWidgetNativeMapping.js", "jslib/konyLuaLib/ui/windowBasicWidgets.js", "jslib/konyLuaLib/ui/windowCalendar.js", "jslib/konyLuaLib/ui/windowDataGrid.js", "jslib/konyLuaLib/ui/windowForm.js", "jslib/konyLuaLib/ui/windowGallery.js", "jslib/konyLuaLib/ui/windowGroupWidgets.js", "jslib/konyLuaLib/ui/windowHorizontalImageStrip.js", "jslib/konyLuaLib/ui/windowImage.js", "jslib/konyLuaLib/ui/windowMap.js", "jslib/konyLuaLib/ui/windowPopup.js", "jslib/konyLuaLib/ui/windowRichText.js", "jslib/konyLuaLib/ui/windowScrollBox.js", "jslib/konyLuaLib/ui/windowSegmentedUI.js", "jslib/konyLuaLib/ui/windowText.js", "jslib/konyLuaLib/ui/windowBrowser.js", "jslib/konyLuaLib/ui/windowTabPane.js", "jslib/konyLuaLib/ui/windowSlider.js", "jslib/konyLuaLib/ui/windowVideo.js"],
  initializeWidgets: function() {
    var a = [$KW.Form, $KW.HBox, $KW.VBox, $KW.Button, $KW.Image, $KW.Label, $KW.TextField, $KW.ComboBox, $KW.ListBox, $KW.Link, $KW.RichText, $KW.CheckBoxGroup, $KW.RadioButtonGroup, $KW.Map, $KW.HStrip, $KW.IGallery, $KW.Phone, $KW.Segment, $KW.Appmenu, $KW.ScrollBox, $KW.TabPane, $KW.Calendar, $KW.Switch, $KW.TextArea, $KW.DataGrid, $KW.FlexScrollContainer, $KW.MenuContainer, $KW.PickerView, $KW.Slider, $KW.Line, $KW.FlexContainer, $KW.FlexScrollContainer];
    for (var b = 0; b < a.length; b++) {
      if (a[b]) {
        a[b].initialize && a[b].initialize()
      }
    }
  },
  loadlibrarysync: function() {
    var a = kony.appinit;
    if (!($KI.themes)) {
      if (kony.appinit.index == 0 && (kony.appinit.isIE || !kony.appinit.useTransition)) {
        if (!window.jQuery) {
          kony.appinit.syncFiles.push("jslib/tparty/jquery.js")
        }
      }
      if (a.index > 0) {
        console.log("File loaded in sync: " + a.syncFiles[a.index - 1] + "  number: " + a.index)
      }
      if (a.index == a.syncFiles.length) {
        (kony.appinit.isIE7 || kony.appinit.isIE8) && kony.appinit.asyncViewFiles.push("jslib/tparty/polyfill.js");
        a.loadlibraryasync(a.asyncViewFiles, a.ondone);
        return
      }
      kony.appinit.loadScript(kony.appinit.syncFiles[kony.appinit.index], kony.appinit.loadlibrarysync);
      a.index++
    } else {
      $KG.skipproxy = true;
      a.verifyhref()
    }
  },
  ondone: function() {
    var a = kony.appinit;
    console.log("File loaded in async: " + a.asyncViewFiles[a.index] + "  number: " + a.index);
    a.index++;
    if (a.index == a.asyncViewFiles.length) {
      IndexJL ? a.verifyhref() : kony.appinit.loadJSMap();
      return
    }
  },
  loadlibraryasync: function(d, a) {
    var c = kony.appinit;
    c.index = 0;
    for (var b = 0; b < d.length; b++) {
      c.loadScript(d[b], a)
    }
  },
  loadJSMap: function() {
    var a = kony.appinit;
    a.JSMapList[a.JSMapFileCount] && a.loadScript(a.JSMapList[a.JSMapFileCount], a.loadJSMap);
    a.JSMapFileCount++;
    (a.JSMapFileCount == 2) && a.verifyhref()
  },
  loadScript: function(b, c) {
    var a = document.createElement("script");
    if (kony.appinit.isIE7 || kony.appinit.isIE8 || kony.appinit.isIE9 || (kony.appinit.isWindowsPhone && !kony.appinit.isIE10)) {
      a.src = $KG.platformver + b + "?ver=" + $KG.version
    } else {
      a.src = $KG.platformver + b
    }
    a.type = "text/javascript";
    if (!a.addEventListener) {
      a.onreadystatechange = function() {
        (this.readyState == "complete" || this.readyState == "loaded") && c()
      }
    } else {
      a.onload = c
    }
    kony.appinit.head.appendChild(a)
  },
  mergeDownloadLists: function() {
    var a = kony.appinit;
    var b = "sync" + a.foldertype;
    var c = "async" + a.foldertype;
    a.syncFiles = a.syncFiles.concat(a[b]);
    a.asyncViewFiles = a.asyncViewFiles.concat(a[c])
  },
  loadCSS: function() {
    var c = "konywebkit.css";
    if (window.navigator.appVersion.match(/MSIE (\d+)/) != null) {
      var a = parseInt(RegExp.$1);
      c = a == 7 ? "konyie7.css" : (a == 8 ? "konyie8.css" : (a == 9 ? "konyie9.css" : "konyie10.css"))
    } else {
      if (kony.appinit.vendor == "webkit") {
        c = "konywebkit.css"
      } else {
        if (kony.appinit.vendor == "Moz") {
          c = "konyfirefox.css"
        } else {
          if (kony.appinit.vendor == "o") {
            c = "konyopera.css"
          } else {
            if (kony.appinit.isIE11) {
              c = "konyie10.css"
            }
          }
        }
      }
    }
    c = c + "?ver=" + $KG.version;
    var b = document.createElement("link");
    b.setAttribute("rel", "stylesheet");
    b.setAttribute("type", "text/css");
    b.setAttribute("href", $KG.platformver + c);
    kony.appinit.head.appendChild(b)
  },
  appcacheeventhndlr: function(a) {
    if (!a) {
      a = window.event
    }
    switch (a.type) {
      case "checking":
        console.log("Checking for Manifest Version");
        break;
      case "downloading":
        console.log("Downloading of Manifest Resources");
        break;
      case "progress":
        break;
      case "cached":
        console.log("Manifest Resources loading done");
        break;
      case "noupdate":
        console.log("No Change in Manifest File");
        break;
      case "updateready":
        console.log("New manifest resources downloaded,swap the cache");
        try {
          window.applicationCache.swapCache();
          window.location.reload()
        } catch (b) {
          console.log("invalid state: swapping the cache")
        }
        break;
      case "obsolete":
        console.log("Cache Manifest file not found. So deleting app cache");
        break;
      case "error":
        console.log("Error while loading app cache");
        break;
      default:
        console.log("Appcache Event not supported")
    }
  },
  verifyhref: function(b) {
    kony.appinit.useTransition = (typeof(document.body || document.documentElement).style[kony.appinit.vendor + "Transition"] == "string");
    var h = document.getElementsByName("_konyAppProperties")[0];
    if (h && h.value && h.value !== "null") {
      window._konyAppProperties = JSON.parse($KU.getDecodedPropValue(h.value))
    } else {
      window._konyAppProperties = undefined
    }
    var g = document.getElementsByName("_reqParams")[0];
    if (g && g.value && g.value !== "null") {
      kony.globals.konyParams = JSON.parse($KU.getDecodedPropValue(g.value))
    }
    var n = document.getElementsByName("_reqHeaders")[0];
    if (n && n.value && n.value !== "null") {
      var m = [];
      var l = "";
      l = JSON.parse($KU.getDecodedPropValue(n.value).replace(/"="/g, '":"'));
      for (p in l) {
        l[p] = decodeURIComponent(l[p])
      }
      kony.globals.httpheaders = l;
      if (Object.keys) {
        m = Object.keys(kony.globals.httpheaders)
      } else {
        for (var d in kony.globals.httpheaders) {
          m.push(d)
        }
      }
      for (var f = 0; f < m.length; f++) {
        kony.globals.httpheaders[m[f]] = unescape(kony.globals.httpheaders[m[f]])
      }
    }
    var a = window.location.search.slice(1);
    if (a == "") {
      var e = window.location.hash.slice(2);
      var k = null;
      try {
        k = sessionStorage.getItem("klastform")
      } catch (c) {}
      $KG.__launchmode = 1;
      if (e != "") {
        if (k == e) {
          console.log("verifyhref:Last Form Stored: " + k)
        } else {
          console.log("verifyhref:Last Form Stored: " + k + " Hash: " + e)
        }
        if (b) {
          kony.appinit.hashflowshowform()
        } else {
          kony.appinit.loadappjs(kony.appinit.hashflowshowform)
        }
      } else {
        if (k != null) {
          try {
            sessionStorage.removeItem("klastform");
            sessionStorage.removeItem("kmodel")
          } catch (c) {}
          kony.print("verifyhref: Deleted Existing sessionStorage")
        }
        if (b) {
          kony.appinit.deeplinkflow()
        } else {
          kony.appinit.loadappjs(kony.appinit.deeplinkflow)
        }
      }
    } else {
      $KG.__launchmode = 3;
      if (b) {
        kony.appinit.deeplinkflow()
      } else {
        kony.appinit.loadappjs(kony.appinit.deeplinkflow)
      }
    }
  },
  restorespamodel: function() {
    try {
      var b = sessionStorage.getItem("kmodel");
      var a = ""
    } catch (c) {}
    if (b) {
      a = JSON.parse(b)
    }
    if (a) {
      kony.print("restorespamodel:Model Reloaded");
      return true
    } else {
      kony.print("restorespamodel:Case of Corrupt Model");
      return true
    }
  },
  appstartup: function() {
    setTimeout("kony.appinit.disablesplash()", 1500)
  },
  hashflowshowform: function() {
    var c = null;
    try {
      c = sessionStorage.getItem("klastform")
    } catch (b) {}
    if (kony.appinit.restorespamodel() && c) {
      var a = window[c];
      kony.print("hashflowshowform: Display Form " + a.id);
      a && $KW.Form.show(a)
    } else {
      kony.print("hashflowshowform:ERROR recovering model so landing on Home Page");
      kony.appinit.deeplinkflow()
    }
  },
  deeplinkflow: function() {
    var f = window.location.search.slice(1);
    var e = {};
    var a = f.split("&");
    kony.print("deeplinkflow: args:" + a.join());
    for (var c = 0; c < a.length; c++) {
      var k = a[c].replace(/\+/g, " ").split("=");
      var h = decodeURIComponent(k[0]);
      var g = decodeURIComponent(k[1]);
      if (h) {
        e[h] = g
      }
    }
    var j = window.location.href.split("?");
    var d = f.search("kdeeplink=");
    e.deeplinkpath = j[0];
    e.deepLinkPath = j[0];
    e.reqheaders = kony.globals.httpheaders;
    if (kony.globals.konyParams) {
      for (var b in kony.globals.konyParams) {
        e[b] = kony.globals.konyParams[b]
      }
    }
    $KG.kdeepobj = e;
    if (d == -1) {
      kony.print("deeplinkflow:newsession")
    } else {
      kony.print("deeplinkflow:insession")
    }
    setTimeout("kony.appinit.disablesplash()", 1500)
  },
  loadappjs: function(a) {
    var b = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "appjs/appie.js" : "appjs/app.js";
    kony.appinit.loadScript(b, a)
  },
  disablesplash: function() {
    kony.print("disabling splash");
    if (!(kony.appinit.isIE8 || kony.appinit.isIE9)) {
      $KG.animStyleSheet = $KU.createStyleSheet("animSheet")
    }
    kony.appinit.initializeheaders();
    var a = $KG.__konyappevents;
    kony.appinit.konyLoadFunctionalModules();
    kony.print("appmode:not hybrid,invoking initializeapp");
    initializeApp && initializeApp()
  },
  setAppHeaderRef: function() {
    var a = function(f) {
      for (var d in f) {
        var g = f[d];
        var e = f[d] = window[g][d];
        $KU.setChildren(g, e, e.children)
      }
    };
    var c = kony.app.headers;
    c && a(c);
    var b = kony.app.footers;
    b && a(b)
  },
  setChildren: function(d, c, b) {
    if (b && b.length > 0) {
      for (var a = 0; a < b.length; a++) {
        c[b[a]] = window[d][b[a]];
        this.setChildren(d, c, window[d][b[a]].children)
      }
    }
  },
  setImageBasedDP: function() {
    var a = "";
    if ($KU.isAndroid) {
      var b = window.devicePixelRatio;
      if (!$KU.isTablet) {
        if (b <= 1) {
          a = "320/"
        } else {
          if (b > 1 && b <= 1.5) {
            a = "360/"
          } else {
            if (b > 1.5 && b <= 2) {
              a = "400/"
            } else {
              if (b > 2) {
                a = "440/"
              }
            }
          }
        }
      } else {
        if (b <= 1) {
          a = "mdpi/"
        } else {
          if (b <= 1.5) {
            a = "hdpi/"
          } else {
            if (b > 1.5) {
              a = "xhdpi/"
            }
          }
        }
      }
    } else {
      if ($KU.isWindowsPhone) {
        a = "320/"
      } else {
        if ($KU.isBlackBerry || $KU.isBlackBerryNTH) {
          var c = window.orientation;
          var a = window.innerWidth + "/";
          if (c) {
            a = Math.min(window.innerWidth, window.innerHeight)
          }
          if (c && parseInt(a, 10) > 250) {
            a = "360/"
          } else {
            if (c || parseInt(a, 10) < 340) {
              a = "320/"
            } else {
              a = "360/"
            }
          }
          if (window.devicePixelRatio > 2) {
            a = "440/"
          }
        }
      }
    }
    if (typeof spaMarkup != "undefined" && spaMarkup && spaMarkup === "spaiphone") {
      a = ""
    }
    $KG.imagecat = a;
    if ($KG.imagewhiledownloading) {
      new Image().src = $KU.getImageURL($KG.imagewhiledownloading)
    }
    new Image().src = $KU.getImageURL("imgload.gif")
  },
  initializeheaders: function(a) {
    if (kony.constants.APPSTATE == 0) {
      kony.app && kony.appinit.setAppHeaderRef()
    }
  },
  initializeMainContainer: function() {
    var a = $KU.getElementById("__MainContainer");
    if (!a) {
      var b = document.createElement("div");
      b.setAttribute("id", "__MainContainer");
      document.body.appendChild(b)
    }
    kony.events.registerDocumentEvents()
  },
  prepareHttpHeaders: function() {
    var a = document.getElementById("isnewsession");
    if (a != null) {
      kony.appinit.isNewSession = a.innerHTML
    }
    var b = document.getElementById("sessionId");
    if (b != null) {
      kony.appinit.sessionId = a.innerHTML
    }
  },
  initappcache: function() {
    kony.appinit.prepareHttpHeaders();
    $KG.imagecat = "";
    $KG.retina = "";
    kony.appinit.useTransition = (typeof(document.body || document.documentElement).style[kony.appinit.vendor + "Transition"] == "string");
    kony.appinit.syncJSFiles.push("jslib/konyJSLib/ui/konyuiMenuContainer.js");
    kony.appinit.asyncViewFiles.push("jslib/konymenucontainerwidget.js", "jslib/konygridlayout.js");
    kony.appinit.mergeDownloadLists();
    if (document.documentElement.getAttribute("manifest") && !!window.applicationCache) {
      var a = ["checking", "downloading", "progress", "cached", "noupdate", "updateready", "obsolete", "error"];
      for (var b = 0; b < a.length; b++) {
        window.applicationCache.addEventListener(a[b], kony.appinit.appcacheeventhndlr, false)
      }
    } else {}
    kony.appinit.loadlibrarysync()
  },
  konyLoadFunctionalModules: function() {
    if ($KG.functionalModules) {
      var a = $KG.functionalModules;
      for (var b in a) {
        if (b && (b !== "KonydefaultModules") && (a[b].cache || a[b].loadOnStartUp)) {
          kony.modules.loadModule(b)
        }
      }
    }
  }
};
$KI.os = {
  platform: function() {
    var c = {};
    var b = $KG.imagecat;
    b = b.substring(0, b.length - 1);
    var a = $KU.getPlatform();
    if (a.name == "iphone") {
      if (window.devicePixelRatio == 1) {
        b = "320"
      } else {
        b = "640"
      }
    }
    c.name = "thinclient";
    c.model = "";
    c.version = a.version;
    c.deviceWidth = screen.availWidth;
    c.deviceHeight = screen.availHeight;
    c.screenWidth = $KU.getWindowWidth();
    c.screenHeight = $KU.getWindowHeight();
    c.hascamera = false;
    c.hasgps = (navigator.geolocation != undefined ? true : false);
    c.hastouchsupport = $KU.isTouchSupported;
    c.hasorientationsupport = $KU.isOrientationSupported;
    c.iswifiavailable = (navigator.onLine != undefined ? navigator.onLine : true);
    c.type = "spa";
    c.imagecat = b;
    c.deviceid = "";
    c.category = a.name;
    c.userAgent = navigator.userAgent;
    c.ip = "";
    if ($KG.httpheaders) {
      c.httpheaders = JSON.stringify($KG.httpheaders)
    }
    return c
  },
  useragent: function() {
    return navigator.userAgent
  },
  setapplicationmode: function(a) {
    $KG.appmode = a;
    if (a == 2 || a == 3) {
      $KG.platformver = ""
    }
  },
  getapplicationmode: function(a) {
    var a = $KG.appmode;
    return !!a ? a : 1
  }
};
kony.decrement = function(a) {
  if (typeof(a) === "number") {
    return a - 1
  } else {
    return a
  }
};
kony.increment = function(a) {
  if (typeof(a) === "number") {
    return a + 1
  } else {
    return a
  }
};
kony.decrementIndices = function(b) {
  var a = [];
  for (var c = 0; c < b.length; c++) {
    a[c] = b[c] - 1
  }
  return a
};
kony.incrementIndices = function(b) {
  var a = [];
  for (var c = 0; c < b.length; c++) {
    a[c] = b[c] + 1
  }
  return a
};

function containerWidgetExtendAdd(a) {
  this.setparent(a);
  this.ownchildrenref = this.ownchildrenref.concat(a);
  this.createhierarchy(a)
}

function containerWidgetExtendAddAt(b, a) {
  a = a < IndexJL ? IndexJL : (a - IndexJL > this.ownchildrenref.length ? this.ownchildrenref.length + 1 : a - IndexJL);
  this.children.splice(a, 0, b.id);
  this.ownchildrenref.splice(a, 0, b);
  b.parent = this;
  this.createhierarchy([b])
}

function containerWidgetExtendRemove(a) {
  _konyConstNS.ContainerWidget.prototype.removeReferences.call(this, a);
  boxWidgetExtendRemoveUpdate.call(this, a, true)
}

function containerWidgetExtendRemoveAt(a) {
  var b = null;
  if (a >= IndexJL && a - IndexJL <= this.ownchildrenref.length) {
    var b = this.ownchildrenref[a - IndexJL];
    b && _konyConstNS.ContainerWidget.prototype.remove.call(this, b)
  }
  boxWidgetExtendRemoveUpdate.call(this, b, true);
  return b
}

function containerWidgetExtendSetParent(b) {
  for (var a = 0; a < b.length; a++) {
    this.children.push(b[a].id);
    b[a].parent = this
  }
}

function containerWidgetExtendCreateHierarchy(c) {
  for (var a = 0; a < c.length; a++) {
    var b = c[a];
    if (b.id !== this.id) {
      this[b.id] = b
    }
    if (this.wType == "TabPane") {
      b.pf = this.pf
    } else {
      b.pf = this.id
    }
  }
}

function containerWidgetExtendRemoveReferences(c) {
  delete this[c.id];
  if (this.children.remove) {
    this.children.remove(c.id)
  } else {
    var d = this.children;
    if (d.indexOf(c.id) >= 0) {
      d && d.splice(d.indexOf(c.id), 1)
    }
  }
  var b = this.ownchildrenref;
  var a = (kony.appinit.isIE7 || kony.appinit.isIE8) ? jQuery.inArray(c, b) : b.indexOf(c);
  b && b.splice(a, 1);
  removeAllReferences(c)
}

function removeAllReferences(a) {
  var d = window[a.pf];
  if (d) {
    if (a instanceof _konyConstNS.ContainerWidget) {
      var c = a.widgets();
      for (var b = 0; b < c.length; b++) {
        delete d[c[b].id];
        if (c[b] instanceof _konyConstNS.ContainerWidget) {
          removeAllReferences(c[b])
        }
      }
    } else {
      delete d[a.id]
    }
  }
}

function containerWidgetExtendRemoveAll() {
  containerWidgetExtendRemoveAllReferences.call(this);
  this.ownchildrenref = [];
  this.children = []
}

function containerWidgetExtendRemoveAllReferences() {
  var b = this.widgets();
  for (var a = 0; a < b.length; a++) {
    var c = b[a];
    delete this[c.id];
    var d = window[this.pf];
    d && (delete d[c.id])
  }
}

function boxWidgetExtendAdd(a) {
  _konyConstNS.ContainerWidget.prototype.add.call(this, a);
  if ($KG.allforms[this.pf]) {
    $KG.allforms[this.pf].createFormLevelHierarchy(a)
  } else {
    if (window[this.pf]) {
      var b = window[this.pf];
      _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(b, b.ownchildrenref)
    }
  }
  if (this.wType == "ScrollBox") {
    _konyConstNS.Box.prototype.updateBoxWeight.call(this, a)
  }
  $KW.HBox.addChild(this, a)
}

function boxWidgetExtendAddAt(b, a) {
  _konyConstNS.ContainerWidget.prototype.addAt.call(this, b, a);
  $KG.allforms[this.pf] && $KG.allforms[this.pf].createFormLevelHierarchy([b]);
  if (this.wType == "ScrollBox") {
    _konyConstNS.Box.prototype.updateBoxWeight.call(this, b)
  }
  $KW.HBox.addChildat(this, [b], a)
}

function boxWidgetExtendRemove(b) {
  if (b) {
    $KW.HBox.DOMremove(this, b);
    var a = this.ownchildrenref.indexOf(b);
    _konyConstNS.ContainerWidget.prototype.remove.call(this, b);
    if (a != -1) {
      $KU.onWidgetRemove(this, a)
    }
  }
}

function boxWidgetExtendRemoveAt(b) {
  $KW.HBox.DOMremove(this, this.ownchildrenref[b - IndexJL]);
  var a = _konyConstNS.ContainerWidget.prototype.removeAt.call(this, b);
  $KU.onWidgetRemove(this, b);
  return a
}

function boxWidgetExtendRemoveAll() {
  if (this.widgets().length > 0) {
    $KW.HBox.DOMremoveAll(this);
    _konyConstNS.ContainerWidget.prototype.removeAll.call(this)
  }
}

function boxWidgetExtendUpdateBoxWeight(b) {
  if (b.length) {
    for (var a = 0; a < b.length; ++a) {
      this.totalWt += b[a].containerweight
    }
  } else {
    if (b.containerweight) {
      this.totalWt += b.containerweight
    }
  }
  $KW[this.wType]["updateView"](this, "totalWt", this.totalWt)
}

function boxWidgetExtendRemoveUpdate(c, a) {
  if (this.wType == "ScrollBox") {
    this.totalWt = 0;
    for (var b = 0; b < this.children.length; ++b) {
      this.totalWt += this[this.children[b]].containerweight
    }
    $KW[this.wType]["updateView"](this, "totalWt", this.totalWt)
  }
}

function formWidgetExtendAdd(b) {
  _konyConstNS.ContainerWidget.prototype.add.call(this, b);
  this.createFormLevelHierarchy(b);
  try {
    $KW.Form.addChild(this, b)
  } catch (a) {}
}

function formWidgetExtendAddAt(b, a) {
  _konyConstNS.ContainerWidget.prototype.addAt.call(this, b, a);
  this.createFormLevelHierarchy([b]);
  a = a < IndexJL ? 0 : ((a > this.children.length) ? this.children.length : a - IndexJL);
  $KW.Form.addChildAt(this, b, a)
}

function formWidgetExtendRemove(b) {
  if (b) {
    $KW.Form.DOMremove(this, b);
    var a = this.ownchildrenref.indexOf(b);
    _konyConstNS.ContainerWidget.prototype.remove.call(this, b);
    if (a != -1) {
      $KU.onWidgetRemove(this, a)
    }
  }
}

function formWidgetExtendRemoveAt(b) {
  $KW.Form.DOMremoveAt(this, b - IndexJL);
  var a = _konyConstNS.ContainerWidget.prototype.removeAt.call(this, b);
  $KU.onWidgetRemove(this, b);
  return a
}

function formWidgetExtendRemoveAll(a) {
  if (this.widgets().length > 0) {
    $KW.Form.DOMremoveAll(this);
    _konyConstNS.ContainerWidget.prototype.removeAll.call(this)
  }
}

function formWidgetExtendCreateFormLevelHierarchy(c) {
  for (var a = 0; a < c.length; a++) {
    var b = c[a];
    this[b.id] = b;
    if (this.wType == "TabPane") {
      b.pf = this.pf
    } else {
      b.pf = this.id
    }
  }
  _konyConstNS.Form2.getallboxes.call(this, c);
  for (var a = 0; a < this.allboxes.length; a++) {
    var d = this.allboxes[a].ownchildrenref;
    this.createhierarchy.call(this, d)
  }
  this.allboxes = []
}

function formWidgetExtendCommonHeaderFooterSetup(a) {
  var d = {};
  d.children = [];
  for (var b = IndexJL; b < this[a].length; b++) {
    if (app && !app[a][this[a][b].id]) {
      app[a][this[a][b].id] = this[a][b]
    }
    var c = this[a][b];
    if (c.wType == "VBox" && this.wType == "Form") {
      throw new KonyError(1102, "WidgetError", "Widget cannot be created due to invalid input data")
    }
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(this, [c]);
    _konyConstNS.ContainerWidget.prototype.createhierarchy.call(c, [c]);
    app[a][this[a][b].id].isheader = true;
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(app[a][this[a][b].id], [].slice.call([this[a][b]]));
    d.children[b] = this[a][b].id;
    d[this[a][b].id] = this[a][b]
  }
  d.pf = this.id;
  d.id = this[a.substr(0, 6)] = [this.id, a.substr(0, 6)].join("_");
  $KG[d.id] = d
}

function formWidgetExtendGetAllBoxes(b) {
  for (var a = 0; a < b.length; a++) {
    var c = b[a];
    if (c.ownchildrenref) {
      this.allboxes.push(c);
      _konyConstNS.Form2.getallboxes.call(this, c.ownchildrenref)
    }
  }
}

function formWidgetExtendaddHeaderorFooter() {
  var b = [].slice.call(arguments[0]);
  for (var a = 0; a < b.length; a++) {
    if (b[a].wType == "VBox" && this.wType == "Form") {
      throw new KonyError(1102, "WidgetError", "Widget cannot be created due to invalid input data")
    }
  }
  _konyConstNS.ContainerWidget.prototype.createhierarchy.call(this, b);
  _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(this, b)
};
kony.model = {
  update: function(f, b, h) {
    if (f == undefined || f == null) {
      kony.print("kony.model.update:Error in Model,value is undefined or null");
      return
    }
    if (f.wType == undefined || (f[b] && f[b]["wType"])) {
      if ((kony.appinit.isIE7 || kony.appinit.isIE8) && (b == "rowTemplate" || b == "sectionHeaderTemplate")) {
        b = b.toLowerCase()
      }
      f[b] = h
    } else {
      var d = f;
      var g = d.wType;
      if (g == "TPW") {
        var i = d.widgetName.split(".");
        var c = window;
        for (var e = 0; e < i.length; e++) {
          c = c[i[e]]
        }
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          d[b] = h
        }
        c.modelChange && c.modelChange(f, b, h)
      } else {
        b = b.toLowerCase();
        var a = d[b];
        $KI.i18n && $KI.i18n.checkI18nStatus(d, b);
        d[b] = h;
        if (kony.appinit.isIE8) {
          if (b == "padding" || b == "skin" || b == "left" || b == "right" || b == "top" || b == "bottom" || b == "width" || b == "height" || b == "minheight" || b == "minwidth" || b == "maxheight" || b == "maxwidth" || b == "centerx" || b == "centery") {
            $KU.setLayoutConfig(d, h, a)
          }
        }
        this.updateView(d, b, h, a)
      }
    }
  },
  updateView: function(n, r, F, f) {
    var c;
    if (n.wType == "Form") {
      c = document.getElementById(n.id)
    } else {
      if (n.wType == "Popup") {
        c = document.getElementById(n.id + "_body")
      } else {
        c = $KU.getNodeByModel(n)
      }
    }
    if (!c) {
      c = document.getElementById(n.pf + "_" + n.id + "_Body")
    }
    switch (r) {
      case "onhover":
        new $KI.HoverInit(n);
        break;
      case "skin":
        if (n.wType == "Form") {
          var o;
          if (!$KG.needScroller && !$KU.isBlackBerryNTH) {
            document.body.className = F || ""
          } else {
            if ($KU.isBlackBerryNTH) {
              o = document.getElementById(n.id + "_container")
            } else {
              o = document.getElementById(n.id + "_scroller")
            }
          }
          if (o) {
            $KU.removeClassName(o, f);
            $KU.addClassName(o, F)
          }
        } else {
          if (n.wType == "Tab") {
            c = $KU.getElementById(n.pf + "_" + n.id + "_Body")
          } else {
            if (c && n.wType == "Image") {
              c = c.parentNode
            }
          }
        }
        if (c) {
          var C = $KW.skins.getDefaultSkin(n);
          $KU.removeClassName(c, f || C);
          $KU.addClassName(c, F || C);
          if (n.wType == "Line") {
            $KW.Line.applySkin(c, F)
          }
          if (n.wType == "Calendar") {
            c.children[0].style.color = "inherit"
          }
          if ($KU.isFlexWidget(n) && !(n.wType == "FlexContainer" && !n.clipbounds)) {
            c = $KW.Utils.getWidgetNode(n).parentNode;
            if (!c) {
              return
            }
            $KU.removeClassName(c, f || C);
            $KU.addClassName(c, F || C)
          }
        } else {
          $KW.Utils.updateDOMSkin(n, F, f)
        }
        if (n.wType == "Label") {
          $KW.Label.updateView(n, "linespacing", n.linespacing)
        }
        break;
      case "focusskin":
      case "rowfocusskin":
      case "activefocusskin":
        $KW.Utils.updateFocusSkin(n, n.rowfocusskin ? "rowfocusskin" : "focusskin");
        break;
      case "hoverskin":
        $KW.Utils.updateFocusSkin(n, "hoverskin");
        break;
      case "tooltip":
        c && (c.title = F);
        break;
      case "isvisible":
        $KW.Widget.setvisibility(n, F);
        break;
      case "margin":
        if (c && !$KU.isFlexWidget(n)) {
          $KW.skins.setMarginPadding(c, r, n, F);
          if (n.wType == "ScrollBox") {
            var h = $KG[n.pf + "_" + n.id + "_scroller"];
            h && h.refresh()
          }
        }
        break;
      case "padding":
        if ($KU.isFlexContainer(n) || n.wType == "Slider" || n.wType == "Switch") {
          return
        }
        if (n.wType == "Segment") {
          if (n.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            var v = c.childNodes[0].childNodes;
            for (var z = IndexJL; z < v.length; z++) {
              c = v[z].childNodes[0];
              c.style[r] = $KU.joinArray(F, "% ") + "%"
            }
            return
          }
        }
        if (n.wType == "DataGrid") {
          var H = $KU.isFlexWidget(n);
          var p = c.rows;
          for (var z = 0; z < p.length; z++) {
            for (var w = 0; w < p[z].cells.length; w++) {
              if (H) {
                $KW.Utils.setPaddingByParent(n, p[z].cells[w])
              } else {
                p[z].cells[w].style[r] = $KU.joinArray(F, "% ") + "%"
              }
            }
          }
          return
        }
        if (n.wType == "Image") {
          c = c.parentNode
        }
        if (c) {
          var E = c;
          c = (n.wType == "Form") ? c.parentNode : c;
          c = (n.wType == "Popup") ? c.firstChild : c;
          if ($KU.isFlexWidget(n)) {
            $KW.Utils.setPaddingByParent(n, c)
          } else {
            c.style[r] = $KU.joinArray(F, "% ") + "%"
          }
          if (n.wType == "ScrollBox") {
            if (n.scrollDirection == constants.SCROLLBOX_SCROLL_VERTICAL || n.scrollDirection == constants.SCROLLBOX_SCROLL_BOTH) {
              $KU.setScrollHeight(n)
            }
          }
          if (n.wType == "VBox" || n.wType == "HBox") {
            var d = c.style.margin;
            c.style.margin = "1px";
            setTimeout(function() {
              c.style.margin = d
            }, 10)
          }
        }
        break;
      case "containerweight":
        if (c) {
          c = c.parentNode;
          if (n.wType == "Image") {
            c = c.parentNode
          }
          if (n.wType == "Slider") {
            c = c.parentNode.parentNode
          }
          if (n.wType == "HStrip") {
            if (c.parentNode.parentNode.parentNode && c.parentNode.parentNode.parentNode.className.indexOf("kcell") != -1) {
              c = c.parentNode.parentNode.parentNode
            }
          }
          $KU.removeClassName(c, "kwt" + f);
          $KU.addClassName(c, "kwt" + F);
          if ($KG.appbehaviors.adherePercentageStrictly == true) {
            var y = kony.model.getWidgetModel(n.pf, n.parent && n.parent.id);
            if (y && y.wType == "HBox") {
              $KU.removeClassName(c.parentNode.lastChild, "kwt" + y.dummyNodeWidth);
              y.dummyNodeWidth = $KW.HBox.getExtraNodeWidth(y);
              $KU.addClassName(c.parentNode.lastChild, "kwt" + y.dummyNodeWidth)
            }
          }
          if (n.wType == "HStrip") {
            var m = c.parentNode;
            if (m.childNodes.length == 1) {
              cell.style.display = "inline-block"
            }
          } else {
            if (n.wType == "Switch") {
              (function(e) {
                var i = window.setTimeout(function() {
                  $KW.Switch.adjustSwitchWidth(e);
                  $KW.Switch.adjustSwitchHeight(e);
                  window.clearTimeout(i);
                  delete i
                }, 0)
              })(n.pf)
            } else {
              if (n.wType == "ScrollBox") {
                var x = c.childNodes[0].id;
                var u = x.substring(0, x.lastIndexOf("_"));
                $KW.ScrollBox.adjustArrowPosition(u)
              } else {
                if (n.wType == "Slider") {
                  $KW[n.wType]["updateView"](n, "containerweight")
                }
              }
            }
          }
        }
        var G = $KG.allforms[n.pf];
        if (!G) {
          return
        }
        var a = n.parent;
        if (a && a.wType == "ScrollBox") {
          $KW.ScrollBox.recalculateScrollBoxWidth(a)
        }
        break;
      case "containerheightreference":
      case "containerheight":
        var l = n.needScroller;
        $KU.updateScrollFlag(n);
        var t = $KU.getNodeByModel(n);
        if (t) {
          if (n.wType == "Popup") {
            var B = document.getElementById(n.id + "_container")
          }
          $KU.setScrollHeight(n, t);
          if (n.wType == "Popup") {
            $KW.Popup.adjustPopupDimensions(n, B.childNodes[1] || B.childNodes[0])
          }
        }
        break;
      case "backgroundimage":
        $KW.Utils.updateNormalImage(n);
        break;
      case "contentalignment":
        var b = $KW.skins.getContentAlignment(n);
        if (c) {
          c.style.textAlign = b;
          if (n.wType == "Calendar" && $KU.isIE10 && c.firstChild) {
            c.firstChild.style.textAlign = b;
            var k = c.firstChild.style.paddingRight;
            c.firstChild.className += " updateTextAlignment";
            window.setTimeout(function() {
              $KU.removeClassName(c.firstChild, "updateTextAlignment");
              c.firstChild.style.paddingRight = k
            }, 100)
          }
          if (n.wType == "Calendar" && $KU.isIE9 && c.firstChild) {
            c.firstChild.value += ""
          }
        }
        break;
      case "accessibilityConfig":
        if (!c || n.wType == "RadioButtonGroup" || n.wType == "CheckBoxGroup") {
          return
        }
        $KU.addAriatoElement(c, F, n, f);
        break;
      case "zindex":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          if ($KU.isFlexWidget(n)) {
            c.parentNode.style.zIndex = F
          } else {
            c.style.zIndex = F
          }
        }
        break;
      case "opacity":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          if ($KU.isFlexWidget(n)) {
            c.parentNode.style.opacity = F
          } else {
            c.style.opacity = F
          }
        }
        break;
      case "transform":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          var A = $KW.animUtils.applyTransform(n, F);
          if ($KU.isFlexWidget(n)) {
            c.parentNode.style[vendor + "Transform"] = A
          } else {
            c.style[vendor + "Transform"] = A
          }
        }
        break;
      case "anchorpoint":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          if (F) {
            if ((F.x < 0) || (F.x > 1) || (F.y < 0) || (F.y > 1)) {
              return
            }
            if ($KU.isFlexWidget(n)) {
              c.parentNode.style[vendor + "TransformOrigin"] = (F.x * 100) + "% " + (F.y * 100) + "% "
            } else {
              c.style[vendor + "TransformOrigin"] = (F.x * 100) + "% " + (F.y * 100) + "% "
            }
          } else {
            if ($KU.isFlexWidget(n)) {
              c.parentNode.style[vendor + "TransformOrigin"] = "50% 50%"
            } else {
              c.style[vendor + "TransformOrigin"] = "50% 50%"
            }
          }
        }
        break;
      case "touchstart":
      case "touchmove":
      case "touchend":
        if (n.touches && n.touches[r] && n.touches[r].callback === F) {
          break
        }
        $KW.Utils.removetouch(n, r, false);
        $KW.Utils.updateModelWithTouches(n, r, F);
        var c = $KW.Utils.getWidgetNode(n);
        if (c && n.touches[r]) {
          if (c.id && c.id.indexOf("_scroller") > 0) {
            c = c.childNodes[0]
          }
          n.touches[r]["instance"] = new $KW.touch.TouchEvents(n, c, r, F)
        }
        break;
      case "backgroundcolor":
      case "bordercolor":
        var s = $KW.skins.validateHexValue(F);
        if (s) {
          if (kony.appinit.isIE8) {
            F = F.substring(0, 6)
          }
          var q = $KW.skins.convertHexValuetoRGBA(F)
        }
        var c = $KW.Utils.getWidgetNode(n);
        if (r == "backgroundcolor") {
          c && (c.style.background = q)
        } else {
          if (r == "bordercolor") {
            c && (c.style.borderColor = q)
          }
        }
        break;
      case "borderwidth":
        var c = $KW.Utils.getWidgetNode(n);
        c && (c.style.borderWidth = F + "px");
        break;
      case "cornerradius":
        var c = $KW.Utils.getWidgetNode(n);
        c && (c.style.borderRadius = F + "px");
        break;
      default:
        var D = (n.wType == "Tab") ? "TabPane" : n.wType;
        var g = $KW[D];
        g.updateView && g.updateView(n, r, F, f)
    }
  },
  getWidgetModel: function(e, d, f, b) {
    if (!e) {
      return null
    }
    var a = kony.model.getWidgetRef(e);
    if (f && a) {
      if (d) {
        var c = a[f];
        if (b) {
          return c[b]["header"][d]
        } else {
          return c[d]
        }
      }
    }
    if (d && e != d) {
      var c;
      if (typeof a != "undefined") {
        c = a[d]
      } else {
        c = window[d]
      }
      return c
    }
    return a
  },
  getWidgetRef: function(a) {
    var b = $KG.allforms[a];
    if (b && ["Form", "Form2"].contains(b.wType)) {
      return b
    } else {
      return ($KG[a] || window[a])
    }
  }
};
kony.events = {
  widgetEventMap: {},
  hiddenIFrame: null,
  isFrameworkEventsRegistered: false,
  KUnloadEvent: function(c, a, b, d) {
    this.kFormID = c;
    this.kWidgetID = a;
    this.kWidgetType = b;
    this.kEventHandler = d
  },
  addEvent: function(a, b, c) {
    kony.events.widgetEventMap[b] = kony.events.widgetEventMap[b] || {};
    kony.events.widgetEventMap[b][a] = c
  },
  getEventHandler: function(M) {
    M = M || window.event;
    var H = M.target || M.srcElement;
    var F = true;
    var n;
    if ($KG.__idletimeout && $KG.__idletimeout["enabled"]) {
      var L = $KI.appevents.resettimer();
      if (L === false) {
        return
      }
    }
    if (M.type != "mousedown") {
      $KW.Appmenu && $KW.Appmenu.hidemoreappmenuitems()
    }
    if (H.getAttribute("w-type") == "Calendar" || H.getAttribute("kwidgettype") == "Calendar") {
      if (kony.appinit.isIE8 || kony.appinit.isIE9 || kony.appinit.isIE10) {
        var u = kony.utils.getModelByNode(H.parentElement);
        if (u) {
          var k = u.focusSkin;
          if (k) {
            if (M.type == "mousedown" && H.nodeName == "INPUT" && H.parentElement.getAttribute("kWidgetType") == "Calendar") {
              kony.utils.addClassName(H.parentElement, k)
            }
            if (M.type == "mouseup" && H.nodeName == "INPUT" && H.parentElement.getAttribute("kWidgetType") == "Calendar") {
              kony.utils.removeClassName(H.parentElement, k)
            }
          }
        }
      }
    }
    if (H.getAttribute("w-type") != "Calendar" && H.getAttribute("kwidgettype") != "Calendar") {
      $KW.Calendar && $KW.Calendar.__dp.destroyCalendar()
    }
    if (H.getAttribute("w-type-inactive")) {
      return
    }
    var s = document.querySelectorAll("div[" + kony.constants.KONY_WIDGET_TYPE + "='MenuContainer']"),
      t = null;
    for (var A = 0; A < s.length; A++) {
      if (M.type == "click") {
        (function(p) {
          var i = $KU.getModelByNode(p);
          if (!i) {
            i = p.id.split("_");
            i.splice(0, 1);
            i = window[i.join("_")]
          }
          if (i.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
            p.style.visibility = "hidden"
          }
        })(s[A])
      }
    }
    var J = document.querySelectorAll("div.dw"),
      g = null;
    for (var O = 0; O < J.length; O++) {
      g = $KG[J[O].id.replace("_picker", "")];
      g && g.hide()
    }
    if (!$KG.nativeScroll && M.type == "click" && typeof cvox == "undefined" && ($KU.isTouchSupported || $KU.isPointerSupported) && $KG.targetWidget && ($KG.moved || ($KG.targetWidget && H != $KG.targetWidget))) {
      if (H.tagName == "A" && H.getAttribute("href")) {
        kony.events.stopPropagation(M);
        kony.events.preventDefault(M)
      }
      $KG.targetWidget = "";
      $KG.moved = false;
      var v = M.srcElement;
      if ((v.getAttribute && v.getAttribute("kwidgettype") == "Calendar") || (v.parentNode && v.parentNode.getAttribute && v.parentNode.getAttribute("kwidgettype") == "Calendar")) {} else {
        return
      }
    }
    if (H) {
      var m = H.getAttribute(kony.constants.KONY_WIDGET_TYPE);
      if (H.tagName == "A") {
        n = [H.innerText, H.getAttribute("href")]
      }
      if (H.getAttribute("tpwidgettype")) {
        $KW.Popup && $KW.Popup.dismissPopup();
        return
      } else {
        if (!m) {
          var w = H.childNodes[0];
          if (H.getAttribute("index") && w && w.getAttribute("kwidgettype") == "Segment") {
            H = w;
            m = "Segment"
          } else {
            var z = $KU.getParentByAttribute(H, kony.constants.KONY_WIDGET_TYPE);
            if (H && H.tagName == "CANVAS" && ($KU.isIE10 || $KU.isIE11) && z && z.getAttribute("kwidgettype") == "googlemap") {
              return
            }
            var B = $KU.getParentByAttribute(H, "tpwidgettype");
            H = z;
            if (!H || B) {
              $KW.Popup && $KW.Popup.dismissPopup();
              return
            }
            m = H.getAttribute(kony.constants.KONY_WIDGET_TYPE)
          }
        }
      }
      if (m == "RadioButtonGroup" || m == "CheckBoxGroup" || m == "ComboBox" || m == "ListBox") {
        if ($KU.preventClickEvent(M, H)) {
          return
        }
      }
      var r = $KU.getContainerForm(H);
      if (M.type == "contextmenu") {
        var e = (H.getAttribute("kcontextmenuid")) ? H : $KU.getParentByAttribute(H, "kcontextmenuid");
        if (!e) {
          return
        }
        var b = $KU.getModelByNode(e);
        if (b && b.contextmenu && b.contextmenu.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
          kony.events.preventDefault(M);
          e = document.getElementById(b.pf + "_" + b.contextmenu.id);
          if (typeof b.onrightclick === "function" && b.contextmenu) {
            if (["MenuContainer", "Segment", "DataGrid"].indexOf(b.wType) >= 0) {
              var c = $KW.Utils.getIndexAttrNameByContainerModel(b),
                G = null,
                D = null,
                f = null,
                R = null,
                E = null;
              G = $KU.getParentByAttribute(H, c).getAttribute(c).split(",");
              if (b.wType === "DataGrid") {
                f = $KU.getParentByAttribute(event.srcElement, "colindex").getAttribute("colindex");
                if (f) {
                  var l = f.split(",");
                  b.onrightclick(b, l[0] * 1, l[1] * 1)
                }
              } else {
                if (b.wType === "Segment") {
                  R = $KU.getParentByAttribute(event.srcElement, "secindex");
                  if (R) {
                    R = R.getAttribute("secindex");
                    var N = R.split(",");
                    b.onrightclick(b, N[0] * 1, N[1] * 1, b.selectedState)
                  } else {
                    E = $KU.getParentByAttribute(event.srcElement, "index").getAttribute("index");
                    b.onrightclick(b, null * 1, E * 1, b.selectedState)
                  }
                } else {
                  D = $KW.Utils.getRowDataByContainerModelAndIndex(b, G);
                  b.onrightclick(b, G, D)
                }
              }
            } else {
              b.onrightclick(b)
            }
          }
          var x = document.getElementById("__MainContainer");
          if (!x) {
            x = document.body
          }
          if (e) {
            x.removeChild(e)
          }
          var Q = document.createElement("div");
          var y = new $KW.WidgetGenerationContext(b.pf);
          b.contextmenu.pf = b.pf;
          Q.innerHTML = $KW.MenuContainer.render(b.contextmenu, y);
          e = Q.firstChild;
          x.appendChild(e);
          e.style.visibility = "visible";
          e.style.position = "fixed";
          e.style.top = ((M.clientY || M.pageY) + 1) + "px";
          e.style.left = ((M.clientX || M.pageX) + 1) + "px"
        }
        return
      }
      if (!r || (window[r] && window[r].wType != "Popup")) {
        var d = document.querySelectorAll("div[name='nonmodalpopup']");
        for (var P = 0; P < d.length; P++) {
          var C = d[P].childNodes[0];
          var b = window[C.id];
          if (b.minimizeonlostfocus) {
            $KW.Popup.minimize(document.getElementById("minmax_" + C.id), M)
          } else {
            if (b && !b.retaindisplayonlostfocus) {
              $KW.Popup.dismiss(b);
              return
            }
          }
        }
      } else {
        var j = document.getElementById(r + "_container");
        if (j && $KW.Popup.zindex) {
          j.style["z-index"] = ++$KW.Popup.zindex
        }
      }
      var q = $KU.getModelByNode(H);
      var I = kony.events.widgetEventMap[m];
      if (I && I[M.type]) {
        var h = H.getAttribute("kdisabled");
        if (h == "true") {
          kony.events.preventDefault(M);
          return
        }
        var o = I[M.type];
        if (m == "RichText") {
          if (!q.onclick) {
            F = false
          }
        }
        var a = M.target || M.srcElement;
        if (!(m == "TextField" || m == "CheckBoxGroup" || m == "TextArea" || m == "RadioButtonGroup" || (m == "DataGrid" && a.type == "checkbox"))) {
          if (F) {
            kony.events.stopPropagation(M);
            kony.events.preventDefault(M)
          }
        }
        var K = document.querySelectorAll("div[name='SelectOptions']");
        if (K) {
          for (var P = 0; P < K.length; P++) {
            if (K[P].style.display == "block") {
              if (H.id != K[P].parentNode.id) {
                K[P].style.display = "none"
              }
            }
          }
        }
        if (m == "RichText" && n) {
          o(M, H, n)
        } else {
          o(M, H, a)
        }
        if (!kony.system.activity.hasActivity()) {
          $KW.Utils.removeBlockUISkin();
          $KW.unLoadWidget()
        }
      }
    }
  },
  addEventListener: function(a, b, d, c) {
    if (!a) {
      return
    }
    if (!d) {
      d = kony.events.getEventHandler
    }
    if (!c) {
      c = false
    }
    if (a.addEventListener) {
      a.addEventListener(b, d, c)
    } else {
      if (a.attachEvent) {
        a.attachEvent("on" + b, d)
      }
    }
  },
  removeEventListener: function(a, b, d, c) {
    if (!a) {
      return
    }
    if (!d) {
      d = kony.events.getEventHandler
    }
    if (!c) {
      c = false
    }
    if (a.removeEventListener) {
      a.removeEventListener(b, d, c)
    } else {
      if (a.attachEvent) {
        a.detachEvent("on" + b, d)
      }
    }
  },
  preventDefault: function(a) {
    if (!a) {
      return
    }
    if (a.preventDefault) {
      a.preventDefault()
    } else {
      a.returnValue = false
    }
  },
  stopPropagation: function(a) {
    if (!a) {
      return
    }
    if (a.stopPropagation) {
      a.stopPropagation()
    } else {
      a.cancelBubble = true
    }
  },
  ontouchstartHandler: function(b) {
    if (($KU.isIE || $KU.isPointerSupported ? b : b.changedTouches) && !$KG.nativeScroll) {
      var a = b.changedTouches ? (b.changedTouches[0].target || b.changedTouches[0].srcElement) : (b.target || b.srcElement);
      if (a.nodeType == 3) {
        a = a.parentNode
      }
      $KG.targetWidget = a;
      $KG.moved = false
    }
  },
  ontouchmoveHandler: function(a) {
    if (!$KG.nativeScroll) {
      $KG.moved = true
    }
  },
  registerDocumentEvents: function() {
    var a = ($KU.isWindowsPhone && $KU.isIE9) ? document : document.getElementById("__MainContainer");
    kony.events.addEventListener(a, "click");
    kony.events.addEventListener(a, "contextmenu");
    kony.events.addEventListener(a, "mousedown");
    kony.events.addEventListener(a, "mouseup");
    kony.events.addEventListener(a, "change");
    kony.events.addEventListener(a, "keydown");
    kony.events.addEventListener(a, "keyup");
    if ($KG.useNativeScroll) {
      kony.events.addEventListener(a, "touchstart", function() {});
      kony.events.addEventListener(a, "touchmove", function() {})
    }
    kony.appinit.initializeWidgets();
    kony.events.orientationregistration();
    kony.events.addEventListener(window, "unload", kony.events.unregisterListeners);
    window.onbeforeunload = function(b) {
      if (window.refreshMessage) {
        setTimeout(function() {
          $KG.__appservice && $KG.__appservice({
            isRefresh: true,
            refreshForm: $KG.__currentForm
          })
        }, 500);
        return refreshMessage
      }
    };
    kony.events.isFrameworkEventsRegistered = true;
    kony.events.formDisableonModalPopup()
  },
  formDisableonModalPopup: function() {
    if (kony.appinit.isIE8) {
      $(document).focusin(function() {
        var a = document.querySelector("div.popupcontainer form");
        if (a) {
          var b = document.getElementById(a.id);
          if (b && !b.contains(event.srcElement)) {
            b.tabIndex = -1;
            b.focus()
          }
        }
      })
    } else {
      kony.events.addEventListener(document, "focus", function(d) {
        var b = document.querySelector("div.popupcontainer form");
        if (b) {
          console.log(b + " " + b.id);
          var c = document.getElementById(b.id);
          if (c && !c.contains(d.target)) {
            d.stopPropagation();
            if (kony.appinit.isChrome) {
              var a = c.querySelector("select,input,a,textarea");
              a && a.focus()
            } else {
              c.tabIndex = -1;
              c.focus()
            }
          }
        }
      }, true)
    }
  },
  unregisterListeners: function(b) {
    var a = $KU.isWindowsPhone ? document : document.getElementById("__MainContainer");
    kony.events.removeEventListener(a, "click");
    kony.events.removeEventListener(a, "touchstart");
    kony.events.removeEventListener(a, "touchmove");
    kony.events.removeEventListener(a, "change");
    kony.events.removeEventListener(a, "keydown");
    kony.events.removeEventListener(a, "keyup");
    kony.events.removeEventListener(a, "touchstart");
    kony.events.removeEventListener(a, "mousedown");
    kony.events.removeEventListener(a, "mouseup");
    if ($KU.hashChange) {
      kony.events.removeEventListener(window, "hashchange")
    }
    $KW.Form.delistSystemTimerActions()
  },
  windowOrientationChange: function() {
    var d = $KU.getWindowWidth();
    var c = $KU.getWindowHeight();
    var b = window.event;
    if (Math.abs($KG.__oldWindowWidth - d) < 5 || Math.abs($KG.__oldWindowHeight - c) < 5) {
      return
    }
    $KG.__oldWindowWidth = d;
    $KG.__oldWindowHeight = c;
    var a = $KU.detectOrientation();
    if (a != undefined && a == $KG.__orientation) {
      return
    } else {
      $KG.__orientation = a
    }
    if ($KG.__currentForm) {
      window.clearTimeout(kony.events.orientationTimeoutId);
      kony.events.orientationTimeoutId = setTimeout(function() {
        var g = kony.events.widgetEventMap || {};
        for (var e in g) {
          var h = g[e];
          var f = h.onorientationchange || h.onresize;
          f && f($KG.__currentForm.id, $KG.__orientation)
        }
        $KW.Form.resizeForm($KG.__currentForm.id, true)
      }, $KU.orientationDelay)
    }
  },
  orientationregistration: function() {
    $KG.__orientation = $KU.detectOrientation();
    $KG.__oldWindowWidth = $KU.getWindowWidth();
    $KG.__oldWindowHeight = $KU.getWindowHeight();
    var a = ($KU.isOrientationSupported && !$KU.isAndroid) ? "orientationchange" : "resize";
    kony.events.addEventListener(window, a, kony.events.windowOrientationChange)
  },
  executeBoxEvent: function(c, f, t, i, h) {
    if (f && t) {
      var n = null,
        o = null,
        k = null,
        l = null,
        a = c,
        s = null,
        e;
      var q = $KW.Utils.getTemplateByContainerModelAndRowData(t, f, i, h);
      while (a) {
        var d = t.widgetdatamap ? f[t.widgetdatamap[a.id]] : f[a.id];
        n = $KU.cloneObj(d);
        if (typeof n !== "undefined") {
          if (typeof n === "string") {
            n = (a.wType === "Image") ? {
              src: n
            } : {
              text: n
            }
          }
          if (!IndexJL) {
            for (var m in n) {
              if (n.hasOwnProperty(m) && m !== m.toLowerCase()) {
                n[m.toLowerCase()] = n[m]
              }
            }
            if (t.wType == "Segment") {
              e = {
                sectionIndex: t.currentIndex[0],
                rowIndex: t.currentIndex[1],
                widgetInfo: d
              }
            }
          }
          k = n.onclick || a.onclick;
          if (k && n.enable !== false) {
            s = $KU.extend(n, a);
            l = $KU.returnEventReference(s.onclick);
            if (l && s.blockeduiskin) {
              $KW.Utils.applyBlockUISkin(s)
            }
            o = $KU.getNodeByModel(s);
            (!s.containerID && s.wType != "Segment") && $KW.HBox.setProgressIndicator(o);
            l && (e ? l.call(s, s, e) : l.call(s, s));
            return true
          }
        } else {
          if (a.onclick) {
            l = $KU.returnEventReference(a.onclick);
            if (l && a.blockeduiskin) {
              $KW.Utils.applyBlockUISkin(a)
            }
            o = $KU.getNodeByModel(a);
            (!a.containerID && a.wType != "Segment") && $KW.HBox.setProgressIndicator(o);
            l && l.call(a, a);
            return true
          }
        }
        a = a.parent;
        if (!a) {
          return false
        }
      }
    } else {
      var r = c.pf;
      var g = c;
      var b = window[r];
      while (g) {
        if (g.onclick || (g.parent && r == g.parent.id && g.parent.wType != "HBox") || g.id == b.id) {
          if (g.onclick) {
            var j = $KU.returnEventReference(g.onclick);
            g.blockeduiskin && $KW.Utils.applyBlockUISkin(g);
            var o = $KU.getNodeByModel(g);
            (!g.containerID && g.wType != "Segment") && $KW.HBox.setProgressIndicator(o);
            j && j.call(g, g);
            return true
          }
          return false
        }
        g = g.parent
      }
      return false
    }
  },
  browserback: {
    currentHash: window.location.hash,
    HASH_PREFIX: "#_",
    handleBrowserBackEvent: function() {
      var a = false;
      var d;
      if (kony.appinit.isIE7 && kony.events.hiddenIFrame && kony.events.hiddenIFrame.location.hash && kony.events.hiddenIFrame.location.hash != location.hash) {
        a = true;
        d = kony.bm.getFormId(kony.events.hiddenIFrame.location.hash)
      } else {
        if (location.hash && kony.events.browserback.currentHash && location.hash !== kony.events.browserback.currentHash) {
          a = true;
          d = kony.bm.getFormId(location.hash)
        }
      }
      var b = $KG.__currentForm;
      if (a) {
        var c = $KG.__currentForm && $KU.returnEventReference(b.ondeviceback);
        if (c) {
          location.hash = kony.events.browserback.HASH_PREFIX + b.id;
          c();
          return
        }
        var e = window[d];
        if (e && e.wType == "Form" && d !== b.id) {
          e.isfromBrowserBack = true;
          $KW.Form.show(e)
        } else {
          location.hash = kony.events.browserback.HASH_PREFIX + b.id
        }
      }
    },
    updateURLWithLocation: function(c) {
      if (c) {
        var b = kony.bm.getFormId(kony.events.browserback.currentHash);
        if (b !== c) {
          location.hash = kony.events.browserback.currentHash = this.HASH_PREFIX + c
        }
        if (!$KG.__previousForm && kony.appinit.isIE7) {
          var d = document.createElement("IFRAME");
          d.style.display = "none";
          d.setAttribute("src", "javascript:0");
          document.body.parentNode.appendChild(d);
          kony.events.hiddenIFrame = d.contentWindow;
          var a = window.setInterval(function() {
            if (d.contentWindow.document.readyState == "complete") {
              kony.events.browserback.setHistory();
              window.clearInterval(a)
            }
          }, 100)
        } else {
          if (kony.appinit.isIE7) {
            this.setHistory()
          }
        }
      }
    },
    setHistory: function() {
      if (kony.events.hiddenIFrame.location.hash != location.hash) {
        kony.events.hiddenIFrame.document.open();
        kony.events.hiddenIFrame.document.close();
        kony.events.hiddenIFrame.location.hash = location.hash
      }
    }
  }
};
window.onload = function() {
  setTimeout(function() {
    window.scrollTo(0, 1)
  }, 100)
};
kony.system.activity = {
  activityCounter: 0,
  increment: function() {
    this.activityCounter++
  },
  decrement: function() {
    if (this.activityCounter != 0) {
      this.activityCounter--
    }
  },
  hasActivity: function() {
    if (this.activityCounter > 0) {
      return true
    } else {
      return false
    }
  }
};
kony.system.timers = {
  timerActions: new Array(),
  TimerAction: function(a, b) {
    this.actionName = a;
    this.frequency = b;
    this.timer = null;
    this.elapsedTimeSinceLastCall = 0
  },
  registerTimerAction: function(a) {
    if (this.timerActions.containsTimerAction(a) === false) {
      this.timerActions.push(a)
    }
  },
  executeTimerActions: function() {
    if (this.timerActions.length > 0) {
      for (var b = 0; b < this.timerActions.length; b++) {
        var a = this.timerActions[b];
        a.timer = setInterval(a.actionName, a.frequency)
      }
    }
  },
  removeTimerAction: function(b) {
    var c = new Array();
    if (this.timerActions.length > 0) {
      for (var a = 0; a < this.timerActions.length; a++) {
        if (this.timerActions[a].actionName !== b.actionName) {
          c.push(this.timerActions[a])
        }
      }
      this.timerActions = c
    }
  },
  clearTimerAction: function(b) {
    if (this.timerActions.length > 0) {
      for (var a = 0; a < this.timerActions.length; a++) {
        b = this.timerActions[a];
        clearTimeout(b.timer)
      }
    }
  }
};
$KI.HoverInit = function(a) {
  var b = this.node = $KU.getNodeByModel(a);
  if (b) {
    b.onmouseenter = b.onmousemove = b.onmouseout = this.eventListener.bind(this)
  }
};
$KI.HoverInit.prototype = {
  eventListener: function(a) {
    $KI.HoverEvent.executeHoverEvent(a, this.node)
  }
};
$KI.HoverEvent = {
  mouseOut: function(c, b) {
    if (c == b) {
      return false
    }
    var a = b;
    while (a) {
      a = a.parentNode;
      if (a == c) {
        return false
      }
    }
    return true
  },
  mouseIn: function(b, c, a) {
    if (b.contains(c)) {
      return false
    } else {
      return true
    }
  },
  executeHoverEvent: function(o, m) {
    var o = o || window.event;
    var u = o.currentTarget || m;
    if (!u) {
      return
    }
    var h = $KU.getModelByNode(u),
      l = u.getAttribute("kcontainerID");
    if (!h) {
      return
    }
    var v = (o.toElement) ? o.toElement : o.toElement;
    var t = (o.fromElement) ? o.fromElement : o.fromElement;
    if (o.type == "mousemove" || (o.type == "mouseenter" && $KI.HoverEvent.mouseIn(u, t, v)) || (o.type == "mouseout" && $KI.HoverEvent.mouseOut(u, v))) {
      var b = {};
      b.event = o.type;
      if (o.type === "mouseenter") {
        b.eventType = 0
      } else {
        if (o.type === "mousemove") {
          b.eventType = 1
        } else {
          if (o.type === "mouseout") {
            b.eventType = 2
          }
        }
      }
      b.pageX = o.pageX || o.clientX;
      b.pageY = o.pageY || o.clientY;
      b.screenX = o.clientX || null;
      b.screenY = o.clientY || null;
      if (l) {
        var s = $KU.getContainerForm(u);
        var w = $KU.getModelByNode(document.getElementById(s + "_" + l));
        var k = $KU.returnEventReference(h.onhover);
        if (w.wType == "DataGrid") {
          var r = $KU.getParentByAttribute(u, "colindex");
          var d = $KU.getParentByAttribute(u, "index");
          if (d && d.getAttribute("index")) {
            if (parseInt(d.getAttribute("index")) == 0) {
              b.rowIndex = -1
            } else {
              b.rowIndex = parseInt(r.getAttribute("colindex").split(",")[0])
            }
            b.columnIndex = parseInt(r.getAttribute("colindex").split(",")[1])
          }
          var x = w.columnids[b.columnIndex];
          var f = b.rowIndex == -1 ? w.columnHeadersConfig[b.columnIndex] : w.data[b.rowIndex][x];
          var a = b.rowIndex == -1 ? f.columnheadertemplate.data : (w.widgetdatamap ? f[w.widgetdatamap[h.id]] : f[h.id]);
          k = a ? (a.onHover || a.onhover) : k
        } else {
          if (w.wType == "Segment") {
            if (w.viewtype == "pageview") {
              var q = $KU.getParentByAttribute(u, "index");
              b.sectionIndex = 0;
              b.rowIndex = q.getAttribute("index")
            } else {
              var q = $KU.getParentByTagName(u, "li");
              if (q.getAttribute("secindex")) {
                b.sectionIndex = q.getAttribute("secindex") ? parseInt(q.getAttribute("secindex").split(",")[0]) : "";
                b.rowIndex = q.getAttribute("secindex") ? parseInt(q.getAttribute("secindex").split(",")[1]) : ""
              } else {
                if (q.getAttribute("index")) {
                  b.sectionIndex = 0;
                  b.rowIndex = q.getAttribute("index") ? parseInt(q.getAttribute("index").split(",")[0]) : ""
                }
              }
              if ((w.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) || (w.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR)) {
                b.selectionState = false;
                var e = w.selectedIndices;
                if (e) {
                  for (var p = 0; p < e.length; p++) {
                    if (b.sectionIndex == e[p][0]) {
                      var g = e[p][1];
                      for (var n = 0; n < g.length; n++) {
                        if (b.rowIndex == g[n]) {
                          b.selectionState = true
                        }
                      }
                    }
                  }
                }
              }
            }
            var c = w.hasSections ? (b.rowIndex == -1 ? w.data[b.sectionIndex][IndexJL + 0] : w.data[b.sectionIndex][IndexJL + 1][b.rowIndex]) : w.data[b.rowIndex];
            var a = w.widgetdatamap ? c[w.widgetdatamap[h.id]] : c[h.id];
            k = a ? (a.onHover || a.onhover) : k
          }
        }
        k && k.call(h, h, b)
      } else {
        if (h.onhover) {
          h.onhover(h, b)
        }
      }
    }
  }
};
$KI.setappevents = function(o) {
  if ($KG.appmode == constants.APPLICATION_MODE_HYBRID) {
    var t;
    if (IndexJL) {
      t = window.appinit
    } else {
      t = window.appInit
    }
    t && t();
    return
  }
  $KG.__konyappevents = o;
  var q = o.preappinit || null;
  var e = o.init || null;
  var s = o.postappinit || null;
  var g = o.appservice || null;
  var a = o.showstartupform || null;
  var h = o.deeplink || null;
  var l = {};
  var c = null;
  var p = {};
  p.launchparams = {};
  var m;
  if (window.location.hash) {
    var r = kony.bm.getFormId(window.location.hash);
    if (r) {
      l.formID = r;
      var u = kony.bm.getBMState(r);
      if (u) {
        for (var n in u) {
          l[n] = u[n]
        }
      }
    }
  }
  p.launchmode = $KG.__launchmode;
  if ($KG.kdeepobj) {
    p.launchparams = $KG.kdeepobj
  }
  for (var d in l) {
    p.launchparams[d] = l[d]
  }
  q && q(p);
  e = $KU.returnEventReference(e);
  e && e(l);
  l.isRefresh = false;
  l.isNewSPASession = (kony.appinit.isNewSession == "true") ? true : false;
  if (window.location.hash) {
    var f = window[window.location.hash.substring(2)];
    if (f && !l.isNewSPASession) {
      l.isRefresh = true;
      l.refreshForm = f
    }
  }
  for (var d in l) {
    p.launchparams[d] = l[d]
  }
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    for (var j in $KG.allforms) {
      var b = $KG.allforms[j];
      if (b.addWidgets && !b.addWidgetsdone) {
        b.ownchildrenref = [];
        b.children = [];
        b.addWidgets();
        b.addWidgetsdone = true
      }
    }
  }
  if (s) {
    c = s(p)
  }
  if (h || g) {
    if (g) {
      $KG.__appservice = g;
      c = g(p)
    } else {
      if (h) {
        c = h($KG.kdeepobj)
      }
    }
  }
  if ((c == null) || (c.length == 0)) {
    a && a(p)
  } else {
    if (typeof c == "string") {
      m = $KG.allforms[c]
    } else {
      m = c
    }
    if (IndexJL == 1) {
      m && $KW.Form.handleshow(m)
    } else {
      m && m.show()
    }
  }
  document.body.setAttribute("aria-busy", "false")
};
$KI.window = {
  openURL: function(d, e, c) {
    $KW.unLoadWidget();
    if (e) {
      if (e.innewwindow == true) {
        var a = "_blank";
        var b = "";
        b = (e.width ? "width =" + e.width + "px," : "") + (e.height ? "height=" + e.height + "px," : "");
        if (!e.menubar && typeof e.menubar !== "undefined") {
          b = b + "menubar = no, "
        }
        if (!e.statusbar && typeof e.statusbar !== "undefined") {
          b = b + "statusbar = no, "
        }
        if (!e.toolbar && typeof e.toolbar !== "undefined") {
          b = b + "toolbar = no, "
        }
        if (!e.titlebar && typeof e.titlebar !== "undefined") {
          b = b + "titlebar = no"
        }
        window.open(d, a, b)
      } else {
        window.open(d)
      }
    } else {
      window.open(d)
    }
  },
  alert: function(c, e, b) {
    if (c === null) {
      return
    }
    var f = c;
    var a = e || null;
    var g = b || null;
    if (c.message || c.alerttype || c.alertType) {
      g = c.alerttype || c.alertType;
      f = c.message;
      a = c.alerthandler || c.alertHandler || null
    }
    if (g === constants.ALERT_TYPE_INFO || g === constants.ALERT_TYPE_ERROR || !g) {
      alert(f);
      a && a()
    } else {
      if (g === constants.ALERT_TYPE_CONFIRMATION) {
        var d = confirm(f);
        a && a(d)
      }
    }
  },
  openMediaURL: function() {},
  showLoadingScreen: function() {
    var j = arguments[0];
    var h = arguments[1] || "";
    var f = arguments[2] || "fullscreen";
    var k = (arguments[3] === false) ? false : true;
    var c = (arguments[4] === false) ? false : true;
    h = h ? "<label style='padding-left:20px; font-size: 16px; text-align:center;width:100%;display:inline-block'>" + h + "</label>" : "";
    var e = "<div id ='__wrapperDiv' style='top:50%;width:100%;position:fixed;'>";
    var d = document.getElementById("__loadingScreenDiv");
    var g = d || document.createElement("div");
    g.id = "__loadingScreenDiv";
    g.setAttribute("style", "");
    g.style.backgroundPosition = "center";
    g.style.width = "100%";
    g.style.position = "fixed";
    if (!j && c) {
      g.style.backgroundImage = "url('" + $KU.getImageURL("loading.gif") + "')";
      g.style.backgroundRepeat = "no-repeat"
    }
    g.innerHTML = e + h + "</div>";
    g.style.display = "block";
    var b = document.getElementById("__MainContainer");
    if (b) {
      b.appendChild(g)
    } else {
      return
    }
    var a = g.childNodes[0];
    if (a.childNodes[0]) {
      a.style.marginTop = -(a.childNodes[0].offsetHeight / 2) + "px"
    }
    if (f == "fullscreen" || k) {
      g.className = j || "";
      g.style.top = 0;
      g.style.left = 0;
      g.style.bottom = 0;
      g.style.height = "100%"
    } else {
      a.className = j || "";
      g.style.top = "50%"
    }
    g.tabIndex = -1;
    g.focus();
    kony.events.addEventListener(document, "keydown", $KI.window.preventBGFocus)
  },
  preventBGFocus: function(b) {
    if (!b) {
      b = window.event
    }
    var a = document.getElementById("__loadingScreenDiv");
    if (a && a.style.display != "none") {
      kony.events.preventDefault(b)
    }
  },
  dismissLoadingScreen: function() {
    var a = document.getElementById("__loadingScreenDiv");
    if (a) {
      a.style.display = "none"
    }
    kony.events.removeEventListener(document, "keydown", $KI.window.preventBGFocus)
  }
};
$KI.exit = function() {
  if ($KU.isIDevice || !$KU.isMob) {
    window.open("about:blank", "_self", "");
    window.close()
  }
};
$KI.appreset = function() {
  console.warn("appreset not supported in SPA")
};
$KI.assert = function(b, a) {
  if (null === args1 || false === args2) {
    if (arguments.length > 1) {
      if (typeof(args2) === "string") {
        throw new Error(args2)
      } else {
        throw new Error("Invalid argument to assert")
      }
    } else {
      throw new Error("Assertion failed")
    }
  } else {
    return b
  }
};
$KI.type = function(b) {
  var a;
  if (typeof(b) == "undefined" || b + "" == "null") {
    a = IndexJL ? "nil" : "null"
  } else {
    if (typeof(b) === "boolean") {
      a = "boolean"
    } else {
      if (typeof(b) === "number") {
        a = "number"
      } else {
        if (typeof(b) === "string") {
          a = "string"
        } else {
          if (typeof(b) === "function") {
            a = "function"
          } else {
            a = IndexJL ? "table" : "object"
          }
        }
      }
    }
  }
  return a
};
$KI.converttobase64 = function(a) {
  return $KU.getBase64(a)
};
$KI.converttorawbytes = function() {
  console.warn("converttorawbytes api not supported in SPA")
};
$KI.setappheaders = function(a) {
  kony.app.headers = {};
  if (IndexJL) {
    a.splice(0, 1)
  }
  for (i = 0; i < a.length; i++) {
    kony.app.headers[a[i].id] = a[i];
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(a[i], a[i].ownchildrenref)
  }
};
$KI.setappfooters = function(a) {
  kony.app.footers = {};
  if (IndexJL) {
    a.splice(0, 1)
  }
  for (i = 0; i < a.length; i++) {
    kony.app.footers[a[i].id] = a[i];
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(a[i], a[i].ownchildrenref)
  }
};
$KI.setapplicationcallbacks = function() {
  console.warn("setapplicationcallbacks API is not supported on SPA")
};
$KI.setapplicationbehaviors = function(b) {
  if (!$KG.appbehaviors) {
    $KG.appbehaviors = b
  } else {
    for (var a in b) {
      $KG.appbehaviors[a] = b[a]
    }
  }
};
$KI.setupWidgetDataRecording = function() {
  $KG.appbehaviors.recording = true
};

function tobeimplemented(a) {
  console.warn(a + "  API to be implemented Yet")
}
KonyError = function(a, b, c) {
  this.errorCode = this.errorcode = a;
  this.name = b;
  this.message = c
};
KonyError.prototype = new Error();
KonyError.prototype.constructor = KonyError;
kony.getError = function(a) {
  return a
};
kony.bm = {
  FORM_PREFIX: "#_",
  GSTATE_PREFIX: "/",
  __global_state__: {},
  __check_args__: function(a, c) {
    if (a.length != c) {
      throw new Error("Invalid number of arguments. Expected: " + c + ", Given: " + a.length)
    }
    for (var b in a) {
      if (typeof(a[b]) === "undefined") {
        throw new Error("Invalid arg[" + b + "] in " + a)
      }
    }
  },
  __initialized__: false,
  __init__: function() {
    var b = window.location.href;
    if (b.indexOf("http") == 0) {
      b = kony.bm.__get_hash__(b)
    }
    var a = kony.bm.__get_raw_state__(b);
    if (a) {
      kony.bm.__global_state__ = JSON.parse(decodeURI(a))
    }
    kony.bm.__initialized__ = true
  },
  __update_hash__: function() {
    var a = JSON.stringify(kony.bm.__global_state__);
    var b = kony.bm.getFormId(window.location.hash);
    window.location.hash = kony.bm.FORM_PREFIX + b + kony.bm.GSTATE_PREFIX + encodeURI(a)
  },
  __get_hash__: function(a) {
    return a.substr(a.indexOf(kony.bm.FORM_PREFIX))
  },
  __get_raw_state__: function(c) {
    var b = c;
    var d = b.indexOf(kony.bm.GSTATE_PREFIX);
    var a = "";
    if (d > 0) {
      a = b.substr(b.indexOf(kony.bm.GSTATE_PREFIX) + kony.bm.GSTATE_PREFIX.length)
    }
    return a
  },
  getFormId: function(b) {
    var a = b;
    if (!a) {
      a = location.hash
    }
    var c = a.substr(a.indexOf(kony.bm.FORM_PREFIX) + kony.bm.FORM_PREFIX.length);
    var e = c.indexOf(kony.bm.GSTATE_PREFIX);
    var d;
    if (e < 0) {
      d = c
    } else {
      d = c.substr(0, e)
    }
    return d
  },
  setBMState: function(b, a) {
    kony.bm.__check_args__(arguments, 2);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    kony.bm.__global_state__[b] = a;
    kony.bm.__update_hash__()
  },
  resetBMState: function(a) {
    kony.bm.__check_args__(arguments, 1);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    delete kony.bm.__global_state__[a];
    kony.bm.__update_hash__()
  },
  addBMState: function(d, a, c) {
    kony.bm.__check_args__(arguments, 3);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    var b = kony.bm.getBMState(d);
    if (!b) {
      b = {};
      kony.bm.setBMState(d, b)
    }
    b[a] = c;
    kony.bm.__update_hash__()
  },
  removeBMState: function(c, a) {
    kony.bm.__check_args__(arguments, 2);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    var b = kony.bm.getBMState(c);
    if (b) {
      delete b[a];
      kony.bm.__update_hash__()
    }
  },
  getBMState: function(a) {
    kony.bm.__check_args__(arguments, 1);
    if (!kony.bm.__initialized) {
      kony.bm.__init__()
    }
    return kony.bm.__global_state__[a]
  }
};
$KI.phone = {
  dial: function(b) {
    $KW.unLoadWidget();
    var c;
    var a = $KU.getPlatform();
    if (a.name == "iphone" && a.version >= "5" && a.version < "8") {
      c = "tel://" + b
    } else {
      c = "tel:" + b
    }
    window.location.href = c
  },
  myLocation: function() {
    console.warn("DEPRECATED API. Instead use geolocation.")
  },
  openmediagallery: function(f, c, d) {
    if (!window.File || !window.FileReader || !window.FileList) {
      kony.print("openMediaGallery error:: 2103, Cannot open media gallery. Not supported.");
      return
    }
    var b = document.createElement("input");
    b.type = "file";
    b.setAttribute("style", "display:none;");
    b.setAttribute("id", "openmediagallery");
    if (c && c.mimetype) {
      b.setAttribute("accept", c.mimetype)
    }
    var e = document.getElementsByTagName("form")[0];
    e.appendChild(b);
    kony.events.addEventListener(b, "change", a);
    b.click();

    function a() {
      kony.events.removeEventListener(b, "change", a);
      e.removeChild(b);
      if (f && f instanceof Function) {
        var g = new FileReader();
        g.onload = function(i) {
          var l = new Uint8Array(i.target.result);
          var k = 32768,
            j = 0,
            h = "",
            m;
          while (j < l.length) {
            m = l.subarray(j, Math.min(j + k, l.length));
            h += String.fromCharCode.apply(null, m);
            j += k
          }
          f(h)
        };
        g.onerror = function(h) {
          if (h.target.error instanceof FileError) {
            switch (h.target.error.code) {
              case FileError.NOT_FOUND_ERR:
                kony.print("openMediaGallery error:: The file resource couldn't be found at the time the read was processed.");
                break;
              case FileError.NOT_READABLE_ERR:
                kony.print("openMediaGallery error:: 2101, The resource couldn't be read. Insufficient Permissions.");
                break;
              case FileError.ENCODING_ERR:
                kony.print("openMediaGallery error:: The resource couldn't be encoded.");
                break;
              case FileError.SECURITY_ERR:
              default:
                kony.print("openMediaGallery error:: The file resource is unsafe/changed/other unspecified security error.")
            }
          } else {
            kony.print("openMediaGallery error:: " + h.target.error.name + ", " + h.target.error.message)
          }
        };
        g.readAsArrayBuffer(this.files[0])
      } else {
        kony.print("openMediaGallery error:: callback function not provided.")
      }
    }
  }
};
$KI.timer = {
  timerinfo: {},
  callbackclosure: function(b) {
    var a = b;
    return function() {
      var c = $KI.timer.timerinfo[a]["cb"];
      typeof c == "function" && c()
    }
  },
  schedule: function(h, b, c, e) {
    var a = $KI.timer.timerinfo;
    if (h && !a[h]) {
      a[h] = {};
      a[h]["cb"] = b;
      a[h]["repeat"] = e;
      var g = $KI.timer.callbackclosure(h);
      var f = c * 1000;
      var d = (e === true) ? "setInterval" : "setTimeout";
      timerid = window[d](g, f);
      a[h]["timerid"] = timerid
    } else {
      console.error("timerId is mandatory or duplicate timer id")
    }
  },
  cancel: function(d) {
    var a = $KI.timer.timerinfo;
    if (a[d]) {
      var c = a[d].timerid;
      var b = (a[d]["repeat"] === true) ? "clearInterval" : "clearTimeout";
      window[b](c);
      a[d] = null
    } else {
      console.error("timerId is mandatory");
      return null
    }
  },
  setcallback: function(c, b) {
    var a = $KI.timer.timerinfo;
    if (a[c]) {
      a[c].cb = b
    }
  }
};
$KI.appevents = (function() {
  var a = {
    id: null,
    value: 0,
    cb: null,
    enabled: false,
    expired: false,
    lastInteraction: 0
  };
  return {
    timercb: function() {
      var c = $KW.Form.getCurrentForm();
      var b = null;
      a.expired = true;
      a.enabled = false;
      if (c.enabledforidletimeout) {
        if (a.cb) {
          b = a.cb;
          a.cb = null;
          b(c)
        }
      }
    },
    registerforidletimeout: function(c, b) {
      if (!a.enabled) {
        a.value = c * 60 * 1000;
        a.id = setTimeout($KI.appevents.timercb, a.value);
        a.lastInteraction = new Date().getTime();
        a.enabled = true;
        a.expired = false;
        a.cb = b;
        $KG.__idletimeout = a
      }
    },
    unregisterforidletimeout: function() {
      clearTimeout(a.id);
      a.enabled = false;
      $KG.__idletimeout = ""
    },
    resettimer: function() {
      var b = new Date().getTime();
      if ((b - a.lastInteraction) >= a.value) {
        $KI.appevents.timercb();
        return
      } else {
        clearTimeout(a.id);
        a.id = setTimeout($KI.appevents.timercb, a.value);
        a.lastInteraction = b
      }
    }
  }
})();
$KI.geolocation = {
  getcurrentposition: function(a, c, b) {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(a, c, b)
    }
  },
  watchposition: function(a, c, b) {
    if (navigator.geolocation) {
      return (navigator.geolocation.watchPosition(a, c, b))
    }
  },
  clearwatch: function(a) {
    if (navigator.geolocation) {
      navigator.geolocation.clearWatch(a)
    }
  }
};

$KI.os.time = function() {
  var a = (new Date()).toTimeString();
  return a.slice(0, a.indexOf(" "))
};
$KI.os.diffdatetime = function(g, f) {
  if (typeof(g) !== "string" || typeof(f) !== "string") {
    throw new Error("Invalid argument(s) to os.diffdatetime")
  }
  var e = g.split(":");
  e[2] = e[2] - 0;
  var d = f.split(":");
  d[2] = d[2] - 0;
  var b = 86400;
  var c = e[0] * 3600 + e[1] * 60 + e[2];
  var a = d[0] * 3600 + d[1] * 60 + d[2];
  return (c > b || a > b) ? null : c - a
};
$KI.os.date = function() {
  var a;
  var b = new Date();
  if (0 === arguments.length) {
    var h = b.toTimeString();
    a = $KI.os.padZero(b.getMonth() + 1) + "/" + $KI.os.padZero(b.getDate()) + "/" + $KI.os.padZero(b.getFullYear() % 100) + " " + h.slice(0, h.indexOf(" "));
    return a
  } else {
    if (typeof(arguments[0]) == "string") {
      if (arguments[0].toLowerCase().indexOf("dd") != -1) {
        return $KI.os.formatDate(arguments[0], b)
      } else {
        var g = arguments[0].charAt(0) === "!";
        var d = g ? 1 : 0;
        if ("*" === arguments[0].charAt(d) && "t" === arguments[0].charAt(d + 1)) {
          var c = g ? b.getUTCDate() : b.getDate();
          var f = (g ? b.getUTCMonth() : b.getMonth()) + 1;
          var e = g ? b.getUTCFullYear() : b.getFullYear();
          a = new Object();
          a.year = e;
          a.month = f;
          a.day = c;
          a.hour = g ? b.getUTCHours() : b.getHours();
          a.min = g ? b.getUTCMinutes() : b.getMinutes();
          a.sec = g ? b.getUTCSeconds() : b.getSeconds();
          a.wday = g ? b.getUTCDay() : b.getDay() + 1;
          a.yday = $KU.getDayOfYear(c, f, e);
          a.isdst = g ? false : $KI.os.checkForDst();
          return a
        } else {
          return null
        }
      }
    } else {
      return null
    }
  }
};
$KI.os.tocurrency = function(a) {
  a -= 0;
  if (isNaN(a)) {
    throw new Error("Invalid argument to os.tocurrency")
  }
  if (a < 0) {
    a *= -1
  }
  var d = a.toFixed(3);
  d = d.substr(0, d.length - 1);
  var c = "";
  for (var b = 0; b < d.length - 4; b++) {
    c += d.charAt(b);
    if ((d.length - b - 1) % 3 === 0) {
      c += ","
    }
  }
  for (; b < d.length; b++) {
    c += d.charAt(b)
  }
  return "$" + c
};
$KI.os.tonumber = function(a) {
  if (arguments.length != 1) {
    throw new Error("Invalid argument to os.tonumber")
  }
  if (typeof(a) === "number") {
    return a
  } else {
    if (typeof(a) === "string") {
      var c = a.replace(/^\s*/, "").replace(/\s*$/, "");
      if (c === "") {
        return null
      } else {
        var b = c - 0;
        return (isNaN(b) ? null : b)
      }
    } else {
      return null
    }
  }
};
$KI.os.freememory = function() {
  return 100 * 1024 * 1024
};
$KI.os.comparedates = function(c, a, f) {
  if (c == null || a == null || f == null || !$KU.isValidDate(c, f) || !$KU.isValidDate(a, f)) {
    return null
  }
  var e = $KU.getDate(c, f);
  var b = $KU.getDate(a, f);
  var d = 24 * 60 * 60 * 1000;
  return parseInt((e.getTime() - b.getTime()) / d)
};
$KI.os.addtodate = function(a, d, b, e) {
  if (a == null || d == null || b == null || e == null) {
    return null
  }
  var k = a;
  var f = d.split(" ")[0];
  var m = b;
  var j = e;
  var i = k.split(" ");
  var l = i[0].split("/");
  var g = i[1];
  if (!$KU.isValidDate(i[0], f)) {
    return null
  }
  if (g) {
    var n = g.split(":");
    var c = 86400;
    var h = n[0] * 3600 + n[1] * 60 + (n[2] - 0);
    if (h > c) {
      return null
    }
  }
  var o = $KU.getDate(k, f);
  if (o) {
    switch (m) {
      case "years":
        o.setFullYear(o.getFullYear() + j);
        break;
      case "months":
        o.setMonth(o.getMonth() + j);
        break;
      case "days":
        o.setDate(o.getDate() + j);
        break;
      case "hours":
        o.setHours(o.getHours() + j);
        break;
      case "minutes":
        o.setMinutes(o.getMinutes() + j);
        break;
      default:
        break
    }
    if ($KI.os.isleapyear([a, f]) && o.getMonth() >= 1 && (m == "years" || (m == "months" && (j == -12 || j == 12)))) {
      o.setDate(o.getDate() - 1)
    }
    return $KI.os.formatDate(f, o) + (g ? " " + o.toTimeString().split(" ")[0] : "")
  }
  return null
};
$KI.os.isleapyear = function(d, e) {
  var c;
  var a = new Date();
  c = a.getFullYear();
  if (typeof(d) == "string" && typeof(e) == "string") {
    if (!$KU.isValidDate(d, e)) {
      return false
    }
    var b = d.split("/")[2];
    c = (b.length == 2) ? parseInt(a.getFullYear().toString().substr(0, 2) + b) : parseInt(b)
  }
  if ((c % 400 == 0) || ((c % 4 == 0) && (c % 100 != 0))) {
    return true
  } else {
    return false
  }
};
$KI.os.formatdate = function(z, s, l) {
  var j;
  if (z == null || s == null || l == null) {
    return null
  } else {
    if (typeof(z) === "string" && typeof(s) === "string" && typeof(l) === "string") {
      var e = z;
      var d = s;
      var n = l;
      var a = d.indexOf("dd");
      var v = d.indexOf("mm");
      var w = (d.indexOf("yyyy") != -1) ? d.indexOf("yyyy") : d.indexOf("yy");
      if ((d == "dd/mm/yyyy" && !$KU.isValidDate(e, d)) || a == -1 || v == -1 || w == -1 || d.indexOf("ddd") != -1 || d.indexOf("mmm") != -1) {
        return null
      }
      var i = d.charAt(a - 1);
      var u = d.charAt(a + 2);
      u = (u == "(") ? "" : u;
      var y = d.charAt(v - 1);
      var g = d.charAt(v + 2);
      var b = d.charAt(w - 1);
      var o = d.charAt(w + 4);
      var t = (i == "") ? e.indexOf(i, a - 1) : e.indexOf(i, a - 2) + 1;
      var k = (y == "") ? e.indexOf(y, v - 1) : e.indexOf(y, v - 2) + 1;
      var f = (b == "") ? e.indexOf(b, w - 1) : ((e.indexOf(b, w - 2) != -1) ? e.indexOf(b, w - 2) + 1 : e.indexOf(b, w - 4) + 1);
      var x = (u != "") ? e.indexOf(u, a) : e.indexOf(u, a + 2);
      var q = (g != "") ? e.indexOf(g, v) : e.indexOf(g, v + 2);
      var h = (o != "") ? e.indexOf(o, w) : e.indexOf(o, w + 4);
      var r = e.substring(t, x);
      var m = e.substring(k, q);
      var p = e.substring(f, h);
      if ((p.length == 2 && n.indexOf("yyyy") != -1)) {
        var c = new Date().getFullYear().toString().substr(0, 2) + p
      }
      n = n.replace(/dd/, $KI.os.padZero(parseInt(r, 10)));
      n = n.replace(/mm/, $KI.os.padZero(parseInt(m, 10)));
      n = n.replace(/(yyyy|yy)/, c ? c : ((n.indexOf("yyyy") == -1 && p.length == 4) ? p.substr(2, 2) : p));
      return n
    }
  }
  return null
};
$KI.os.isvaliddate = function(a, b) {
  return (arguments.length != 2 || a == null || b == null) ? false : $KU.isValidDate(a, b)
};
$KI.os.checkForDst = function() {
  var h = new Date();
  var a = new Date(h.getFullYear(), 0, 1, 0, 0, 0, 0);
  var g = a.toGMTString();
  var i = new Date(g.substring(0, g.lastIndexOf(" ") - 1));
  var d = (a - i) / (1000 * 60 * 60);
  var f = new Date(h.getFullYear(), 6, 1, 0, 0, 0, 0);
  g = f.toGMTString();
  var e = new Date(g.substring(0, g.lastIndexOf(" ") - 1));
  var c = (f - e) / (1000 * 60 * 60);
  var b;
  if (d == c) {
    return false
  } else {
    return true
  }
};
$KI.os.datecomponents = function(d, h) {
  var b;
  var g;
  if (arguments.length == 0) {
    g = new Date()
  } else {
    if (d != null && h != null) {
      if (!$KU.isValidDate(d, h)) {
        return null
      }
      g = $KU.getDate(d, h);
      var a = h.split("/")[2]
    }
  }
  if (g) {
    var c = g.getDate();
    var f = g.getMonth() + 1;
    var e = (a && a.length == 2) ? parseInt(g.getFullYear().toString().substr(2, 2)) : g.getFullYear();
    b = new Object();
    b.year = e;
    b.month = f;
    b.day = c;
    b.hour = g.getHours();
    b.min = g.getMinutes();
    b.sec = g.getSeconds();
    b.wday = g.getDay() + 1;
    b.yday = $KU.getDayOfYear(c, f, e);
    b.isdst = $KI.os.checkForDst();
    return b
  } else {
    return null
  }
};
$KI.os.padZero = function(a) {
  return a < 10 ? ("0" + a) : a
};
$KI.os.formatDate = function(b, a) {
  b = b.toLowerCase();
  b = b.replace(/dd/, $KI.os.padZero(a.getDate()));
  b = b.replace(/mm/, $KI.os.padZero(a.getMonth() + 1));
  return b.replace(/(yyyy|yy)/, b.indexOf("yyyy") == -1 ? a.getFullYear().toString().substr(2, 2) : a.getFullYear())
};
$KI.os.getappcontext = function() {
  var b = {};
  var a = "standalone" in window.navigator && window.navigator.standalone ? 1 : 0;
  b.launchmode = a;
  return b
};
$KI.os.hasgpssupport = function() {
  return "navigator" in window && "geolocation" in navigator
};
$KI.os.hascamerasupport = function() {
  return false
};
$KI.os.hastouchsupport = function() {
  return false
};
$KI.os.hasorientationsupport = function() {
  return false
};
$KI.os.hasaccelerometersupport = function() {
  return false
};
$KI.os.httpheaders = function() {
  if ($KG.httpheaders) {
    return JSON.stringify($KG.httpheaders)
  }
};
$KI.os.getdevicecurrentorientation = function() {
  var a = $KU.detectOrientation();
  return (a == "portrait") ? constants.DEVICE_ORIENTATION_PORTRAIT : constants.DEVICE_ORIENTATION_LANDSCAPE
};
$KI.os.setapplicationscrollmode = function(b) {
  if (!b) {
    return
  }
  var d = $KU.getPlatform();
  var o = d.name.toLowerCase();
  var e = d.version;
  if (o == "blackberryNTH" || (o == "windowsphone" && $KU.isIE9)) {
    return
  }
  var a = b.customscroll;
  var n = b.mixedscroll;
  var g = b.nativescroll;
  var f;
  if (n) {
    var m = n.platforms;
    if (m) {
      for (var l = IndexJL; l < m.length; l++) {
        var d = m[l];
        if (o == d.name.toLowerCase()) {
          var k = d.useragents;
          if (k) {
            for (var h = IndexJL; h < k.length; h++) {
              if (navigator.userAgent.toLowerCase().indexOf(k[h].toLowerCase()) != -1) {
                $KG.useMixedScroll = true;
                f = true;
                break
              }
            }
            if (f) {
              break
            }
          }
          var c = d.versions;
          if ((!k && !c) || c[IndexJL] == -1) {
            $KG.useMixedScroll = true;
            break
          }
          for (var h = IndexJL; h < c.length; h++) {
            if (e == c[h]) {
              $KG.useMixedScroll = true;
              break
            }
          }
        }
      }
    }
  }
  if (g && !f) {
    var m = g.platforms;
    if (m) {
      for (var l = IndexJL; l < m.length; l++) {
        var d = m[l];
        if (o == d.name.toLowerCase()) {
          var k = d.useragents;
          if (k) {
            for (var h = IndexJL; h < k.length; h++) {
              if (navigator.userAgent.toLowerCase().indexOf(k[h].toLowerCase()) != -1) {
                $KG.useNativeScroll = true;
                $KG.useMixedScroll = false;
                f = true;
                break
              }
            }
            if (f) {
              break
            }
          }
          var c = d.versions;
          if ((!k && !c) || c[IndexJL] == -1) {
            if (!$KG.useMixedScroll) {
              $KG.useNativeScroll = true
            }
            break
          }
          for (var h = IndexJL; h < c.length; h++) {
            if (e == c[h]) {
              $KG.useNativeScroll = true;
              $KG.useMixedScroll = false;
              break
            }
          }
        }
      }
    }
  }
  if (!$KG.useMixedScroll && !$KG.useNativeScroll) {
    $KG.useCustomScroll = true
  }
};
$KI.os.print = function(a, f) {
  if (a && a.id && !(a.wType === "Form")) {
    var c = document.getElementById(a.id);
    if (a.wType && a.wType === "Popup") {
      c = document.getElementById(a.id + "_body")
    }
    if (!c) {
      c = $KU.getNodeByModel(a)
    }
    if (c) {
      var g;
      if (a.wType && a.wType === "Popup") {
        var h = document.getElementById(a.id + "_container");
        if (h && h.className) {
          c.className = h.className
        }
        g = c.style.height;
        c.style.height = "auto"
      }
      var d = c.outerHTML;
      if (g !== "undefined") {
        c.style.height = g
      }
      var j = window.open();
      if (j) {
        j.document.write("<!DOCTYPE html><html>");
        j.document.write("<head>");
        var b = document.styleSheets;
        for (var e = 0; e < b.length; e++) {
          if (b[e].href) {
            j.document.write("<link rel='stylesheet' href='");
            j.document.write(b[e].href);
            j.document.write("' type='text/css'></link>")
          }
        }
        if (kony.appinit.isSafari) {
          j.document.write("<style>table{table-layout: auto !important;} .ktable {table-layout: auto !important;} .kcell {display: table !important;}</style>")
        }
        j.document.write("</head>");
        if (kony.appinit.isSafari) {
          j.document.write("<body style='" + window.document.body.style.cssText + "' >")
        } else {
          j.document.write("<body>")
        }
        j.document.write(d);
        setTimeout(function() {
          j.document.write("</body>");
          j.document.write("</html>");
          j.document.close();
          j.focus();
          j.print()
        }, 1000);
        setTimeout(function() {
          j.close()
        }, 2000)
      } else {
        kony.print("Allow popup to open for this site.")
      }
    }
  } else {
    if (a && !(a.wType && a.wType === "Form")) {
      var j = window.open();
      if (j) {
        j.document.write(a);
        j.onload = new function() {
          j.document.close();
          j.focus();
          j.print()
        };
        if (f) {
          setTimeout(function() {
            j.close()
          }, 2000)
        }
      } else {
        kony.print("Allow popup to open for this site.")
      }
    } else {
      window.print()
    }
  }
};
$KI.os.addbookmark = function(b, f, e) {
  var b = b || window.location.href.split("#")[0];
  b = b.split("?")[0];
  if (e && e instanceof Object) {
    var a = "";
    for (var g in e) {
      a += escape(g) + "=" + escape(e[g]) + "&"
    }
    a && (a = a.substring(0, a.length - 1))
  }
  try {
    f = f || document.title;
    b += a ? ("?" + a) : "";
    if ((typeof window.sidebar == "object") && (typeof window.sidebar.addPanel == "function")) {
      window.sidebar.addPanel(f, b, "")
    } else {
      if (kony.appinit.isIE && typeof window.external == "object") {
        window.external.AddFavorite(b, f)
      } else {
        if (kony.appinit.isOpera) {
          var d = document.createElement("a");
          d.setAttribute("href", b);
          d.setAttribute("title", f);
          d.setAttribute("rel", "sidebar");
          d.click()
        }
      }
    }
  } catch (c) {
    console.log(c)
  }
};
$KIO.FileSystem = $KIO.fs = {
  callback: function() {},
  ieFileUploadObj: {},
  init: function() {
    if (!$KU.isAjaxUploadSupported) {
      var a = "<iframe id='konyiframeElem' name='konyiframeElem' src='about:blank' style='opacity:0;width:0px;height:0px;' ></iframe>";
      var b = document.createElement("div");
      b.innerHTML = a;
      document.body.appendChild(b)
    }
  },
  browse: function(h, j) {
    if (!h instanceof Object || !j instanceof Function) {
      return
    }
    this.callback = j;
    var i = "";
    if ($KU.isAjaxUploadSupported) {
      var b = document.getElementById("konyFileElem");
      if (!b) {
        i = "<form name='uploadForm'><input type='file' multiple id='konyFileElem' onchange='$KIO.fs.afterBrowse(arguments[0])' onclick='uploadForm.reset();' style='opacity:0;width:0px;height:0px;' /></form>";
        var a = document.createElement("div");
        a.innerHTML = i;
        document.body.appendChild(a);
        b = document.getElementById("konyFileElem")
      }
      if (h.selectMultipleFiles == false) {
        b.removeAttribute("multiple")
      } else {
        b.setAttribute("multiple", "multiple")
      }
      if (h.filter) {
        b.setAttribute("accept", h.filter.join(","))
      } else {
        b.removeAttribute("accept")
      }
      b.click()
    } else {
      var g = document.getElementById("konyiframeElem").contentWindow || document.getElementById("konyiframeElem").documentWindow;
      var e = g.document.getElementById("uploadForm");
      if (!e) {
        var a = document.createElement("div");
        a.innerHTML = '<form id="uploadForm" method="POST" action="" enctype="multipart/form-data" ></form>';
        if (g.document.body) {
          g.document.body.appendChild(a)
        }
        e = g.document.getElementById("uploadForm")
      }
      var d = new Date().getTime();
      var f = document.createElement("input");
      f.setAttribute("type", "file");
      f.setAttribute("name", "file_" + d);
      f.setAttribute("id", "file_" + d);
      f.setAttribute("onchange", "window.parent.$KIO.fs.afterBrowse(this)");
      f.setAttribute("onclick", "uploadForm.reset()");
      e.appendChild(f);
      var c = g.document.getElementsByTagName("input");
      c = c[c.length - 1];
      if (c) {
        c.click()
      }
    }
  },
  afterBrowse: function(d) {
    var b = [];
    if ($KU.isAjaxUploadSupported) {
      for (var c = 0, g; g = d.target.files[c]; ++c) {
        b.push(new $KIO.File(g))
      }
    } else {
      var h = d.value;
      var e = h.substring(h.lastIndexOf("\\") + 1);
      var a = h.substring(0, h.lastIndexOf("\\"));
      a = a.substring(a.lastIndexOf("\\") + 1);
      b.push(new $KIO.File({
        name: e,
        fullPath: h,
        parent: a,
        file: d
      }))
    }
    $KIO.fs.callback(d, b)
  },
  uploadFiles: function(m, n, e, j) {
    if (!m || !n || (n && n.length < 1)) {
      return
    }
    var d = [];
    for (var g = 0, k; k = n[g]; ++g) {
      d.push({
        file: k,
        status: null,
        uploadBytes: null
      })
    }
    if ($KU.isAjaxUploadSupported) {
      for (var l = 0; l < d.length; l++) {
        this.uploadFile(m, d, l, e, j)
      }
    } else {
      var c = document.getElementById("konyiframeElem");
      if ($KU.isIE) {
        c.attachEvent("onload", $KIO.fs.ieCallback);
        c.attachEvent("onerror", $KIO.fs.ieErrorCallback)
      } else {
        c.onload = $KIO.fs.ieCallback;
        c.onerror = $KIO.fs.ieErrorCallback
      }
      $KIO.fs.ieFileUploadObj.state = d;
      $KIO.fs.ieFileUploadObj.url = m;
      $KIO.fs.ieFileUploadObj.callback = e;
      var o = /^(http|https):\/\/?/;
      if (!o.test(m)) {
        $KIO.fs.ieErrorCallback();
        return
      }
      var b = document.getElementById("konyiframeElem");
      var h = b.contentWindow || b.documentWindow;
      var a = h.document.getElementById("uploadForm");
      a.action = m;
      a.submit()
    }
  },
  uploadFile: function(b, a, j, k, c) {
    try {
      var h = a[j].file;
      var g = new FormData();
      g.append(h.name, h.file);
      var m = /^(http|https):\/\/?/;
      if (!m.test(b)) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        k && k(b, a);
        return
      }
      var l = new XMLHttpRequest();
      l.open("POST", b, true);
      l.upload.onloadstart = function(f) {
        a[j].status = constants.FILE_UPLOAD_START_STATE;
        a[j].uploadBytes = 0;
        k && k(b, a)
      };
      l.upload.onprogress = function(f) {
        if (f.lengthComputable) {
          a[j].uploadBytes = f.loaded
        }
        a[j].status = constants.FILE_UPLOAD_PROGRESS_STATE;
        k && k(b, a)
      };
      l.upload.onerror = function(f) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        a[j].uploadBytes = 0;
        k && k(b, a)
      };
      l.upload.onabort = function(f) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        k && k(b, a)
      };
      l.onload = function(f) {
        if (this.status == 200) {
          a[j].status = constants.FILE_UPLOAD_COMPLETE_STATE;
          a[j].uploadBytes = a[j].file.size;
          k && k(b, a)
        }
      };
      l.onerror = function(f) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        a[j].uploadBytes = 0;
        k && k(b, a)
      };
      var d = setTimeout(function() {
        l.abort()
      }, constants.UPLOAD_MAX_WAIT_TIME);
      l.onreadystatechange = function() {
        if (l.readyState != 4) {
          return
        }
        clearTimeout(d);
        if (l.status != 200) {
          a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
          a[j].uploadBytes = 0;
          k && k(b, a)
        }
      };
      l.send(g)
    } catch (i) {
      console.log(i.message)
    }
  },
  ieCallback: function() {
    var c = $KIO.fs.ieFileUploadObj;
    try {
      var a = document.getElementById("konyiframeElem").contentWindow.document.body.innerHTML;
      if (a) {
        for (var b = 0; b < c.state.length; b++) {
          c.state[b].status = constants.FILE_UPLOAD_COMPLETE_STATE
        }
        c.callback && c.callback(c.url, c.state);
        console.log(a)
      }
    } catch (d) {
      console.log(d.message);
      for (var b = 0; b < c.state.length; b++) {
        c.state[b].status = constants.FILE_UPLOAD_ERROR_STATE
      }
      c.callback && c.callback(c.url, c.state)
    }
  },
  ieErrorCallback: function() {
    var b = $KIO.fs.ieFileUploadObj;
    for (var a = 0; a < b.state.length; a++) {
      b.state[a].status = constants.FILE_UPLOAD_ERROR_STATE
    }
    b.callback && b.callback(b.url, b.state)
  }
};
$KIO.File = function(a) {
  if ($KU.isAjaxUploadSupported) {
    this.name = a.name;
    this.file = a
  } else {
    for (var b in a) {
      this[b] = a[b]
    }
  }
  this.readable = true;
  this.writable = false;
  if (a.lastModifiedDate) {
    this.modificationTime = new Date(a.lastModifiedDate).toISOString()
  }
  if (a.size) {
    this.size = a.size
  }
  return this
};

$KW.CheckBoxGroupViews = {
  render: function(a, b) {
    if (a.itemorientation) {
      a.orientation = a.itemorientation
    }
    var d = $KW.Utils.getMasterData(a);
    var c = $KW.skins.getWidgetSkinList(a, b, d);
    var f = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='" + $KW.skins.getMarginSkin(a, b) + $KW.skins.getPaddingSkin(a) + (b.ispercent === false ? "display:inline-block" : "") + "'>";
    a.context = b;
    if ((a.viewtype == "tableview" || a.viewtype == "toggleview") && !kony.appinit.isIE8) {
      f += this.renderViews(a, d, b)
    } else {
      f += this.generateList(a, d, b)
    }
    f += "</div>";
    return f
  },
  renderViews: function(a, f, c) {
    var g = "";
    if (f.length > IndexJL) {
      a.selectedkeys && $KW.Utils.setSelectedValueProperty(a, f, "selectedkeys");
      if (a.viewtype == "toggleview") {
        g += "<div class='ktable kwt100' style='border: 1px solid gray; border-radius: 10px; overflow: hidden; '>"
      }
      for (var b = IndexJL; b < (f.length); b++) {
        if (f[b][IndexJL] != null && f[b][1 + IndexJL] != null) {
          var d = (a.selectedkeys && $KU.inArray(a.selectedkeys, f[b][IndexJL])[0]) ? "checked" : "";
          var j = "middleleftalign";
          if (a.viewtype == "tableview") {
            g += "<div style ='border:none;height:auto;' class='kwt100 middleleftalign kheight' index='" + f[b][IndexJL] + "' >";
            var h;
            if (d == "checked") {
              h = $KU.getImageURL(a.checkedimage)
            } else {
              h = $KU.getImageURL(a.uncheckedimage)
            }
            g += "<label class='kwt90'  name = '" + a.id + "_label' kformname='" + a.pf + "' kwidgettype='" + a.wType + "'  style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            g += f[b][1 + IndexJL];
            g += "</label>";
            g += "<img  kformname='" + a.pf + "' kwidgettype='" + a.wType + "'  src= '" + h + "' style='float: right; margin-right: 10px' >";
            g += "</div>";
            g += "<div style='border-top: 1px solid gray'></div>"
          } else {
            if (a.viewtype == "toggleview") {
              g += "<div style ='margin-right:2px; border-right:1px solid gray;' class =' kcell kheight middlecenteralign' >";
              g += "<div class='' kformname='" + a.pf + "' kwidgettype='" + a.wType + "'    style='  padding-left: 5px; vertical-align: middle; display: inline-block;'>";
              g += f[b][1 + IndexJL];
              g += "</div></div>"
            }
          }
        }
      }
      if (a.viewtype == "toggleview") {
        g += "</div>"
      }
    }
    return g
  },
  changeImage: function(b, a) {
    if (b.getAttribute("checked") == "true") {
      b.childNodes[1].src = $KU.getImageURL(a.uncheckedimage);
      b.setAttribute("checked", "false")
    } else {
      b.childNodes[1].src = $KU.getImageURL(a.checkedimage);
      b.setAttribute("checked", "true")
    }
  },
  changeSkin: function(b, a) {
    if (b.getAttribute("checked") == "true") {
      b.setAttribute("checked", "false");
      $KU.removeClassName(b, a.focusskin);
      $KU.addClassName(b, a.skin)
    } else {
      b.setAttribute("checked", "true");
      $KU.removeClassName(b, a.skin);
      $KU.addClassName(b, a.focusskin)
    }
  },
  eventHandlerViews: function(a, h, d) {
    var g = h.parentNode.parentNode;
    var b = h.parentNode;
    if (d) {
      if (d.viewtype == "tableview" && !kony.appinit.isIE8) {
        $KW.CheckBoxGroupViews.changeImage(b, d)
      } else {
        $KW.CheckBoxGroupViews.changeSkin(b, d)
      }
      if (g.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(d, h, false)
      } else {
        var f = d.selectedkeys || (IndexJL == 1 ? [null] : []);
        $KW.Utils.setSelectedKeys(d, b.getAttribute("checked"), f, b.getAttribute("index"));
        $KW.Utils.setSelectedValueProperty(d, $KW.Utils.getMasterData(d), "selectedkeys");
        var c = $KU.returnEventReference(d.onselection);
        c && c.call(d, d)
      }
    }
  }
};

function accessorDescriptor(b, a) {
  var c = {
    enumerable: true,
    configurable: true
  };
  c[b] = a;
  return c
}

function defineGetter(b, c, a) {
  if (kony.appinit.isIE8 || kony.appinit.isIE7) {
    return
  }
  if (Object.defineProperty) {
    return Object.defineProperty(b, c, accessorDescriptor("get", a))
  }
  if (Object.prototype.__defineGetter__) {
    return b.__defineGetter__(c, a)
  }
  throw new Error("browser does not support getters")
}

function defineSetter(a, c, b) {
  if (kony.appinit.isIE8 || kony.appinit.isIE7) {
    return
  }
  if (Object.defineProperty) {
    return Object.defineProperty(a, c, accessorDescriptor("set", b))
  }
  if (Object.prototype.__defineSetter__) {
    return a.__defineSetter__(c, b)
  }
  throw new Error("browser does not support setters")
}

function ieSetProperty(c, a, b) {
  kony.model.update(c, a, b)
}

function ieGetProperty(b, a) {
  if (!b) {
    return null
  }
  if (b.wType) {
    a = (b[a] instanceof Object && b[a].wType) ? a : a.toLowerCase()
  }
  return b[a]
}
var vendor = (/webkit/i).test(navigator.userAgent) ? "webkit" : (/firefox/i).test(navigator.userAgent) ? "Moz" : "opera" in window ? "o" : ((/msie/i).test(navigator.userAgent) || (/rv:([1][0-9])/i).test(navigator.userAgent)) ? "ms" : "";
var nextFrame = window.requestAnimationFrame || window[vendor + "RequestAnimationFrame"] || function(a) {
    return setTimeout(a, 1)
  };
var cancelFrame = window.cancelAnimationFrame || window[vendor + "CancelRequestAnimationFrame"] || clearTimeout;
$KU = kony.utils = {
  getAllDefaults: function(a) {
    return kony.defaults.getAllDefaults(a)
  },
  mergeProperties: function(b, c, f) {
    var d = b[f];
    if (d && typeof d == "object" && !d.wType) {
      c[f] = c[f] || {};
      for (var a in d) {
        $KU.mergeProperties(d, c[f], a)
      }
    } else {
      c[f] = d
    }
  },
  mergeDefaults: function(b, a) {
    var c = owl.deepCopy(a);
    if (b instanceof Object) {
      for (var d in b) {
        if (b.hasOwnProperty(d)) {
          if (typeof c[d] == "undefined" || c[d] == null || $KU.isArray(c[d])) {
            c[d] = b[d]
          } else {
            $KU.mergeProperties(b, c, d)
          }
        }
      }
    }
    if (typeof c.id == "undefined" || c.id == null) {
      c.id = "konyRandomId" + ($KG.uniqueId++)
    }
    return c
  },
  equals: function(c, b) {
    if (Object.prototype.toString.call(c) !== Object.prototype.toString.call(b)) {
      return false
    } else {
      if (Object.prototype.toString.call(c) === "[object Array]") {
        if (c.length !== b.length) {
          return false
        }
        for (var d = 0; d < b.length; d++) {
          if (!$KU.equals(c[d], b[d])) {
            return false
          }
        }
        return true
      } else {
        if (Object.prototype.toString.call(c) === "[object Object]") {
          for (var a in b) {
            if (Object.prototype.toString.call(b[a]) !== "[object Function]") {
              if (!$KU.equals(c[a], b[a])) {
                return false
              }
            }
          }
          return true
        } else {
          if (Object.prototype.toString.call(b) !== "[object Function]") {
            return (c === b)
          }
        }
      }
    }
  },
  isArray: function(a) {
    return (Object.prototype.toString.call(a) === "[object Array]")
  },
  addArray: function(b, a) {
    b.push.apply(b, a);
    return b
  },
  arrayIndex: function(a, c) {
    for (var b = 0; b < a.length; b++) {
      if ($KU.equals(a[b], c)) {
        return b
      }
    }
    return -1
  },
  inArray: function(d, c, b) {
    var a = -1;
    if (d) {
      a = $KU.arrayIndex(d, c)
    }
    if (b) {
      return (a == -1) ? false : true
    } else {
      return (a == -1) ? [false, -1] : [true, a]
    }
  },
  removeArray: function(c) {
    var g, d = arguments,
      b = d.length,
      f;
    while (b > 1 && c && c.length) {
      g = d[--b];
      while ((f = c.indexOf(g)) != -1) {
        c.splice(f, 1)
      }
    }
    return c
  },
  joinArray: function(a, b) {
    b = b || ",";
    return a[1 + IndexJL] + b + a[2 + IndexJL] + b + a[3 + IndexJL] + b + a[0 + IndexJL]
  },
  mergeObjects: function(f, d) {
    var f = f || {};
    var c = {};
    if (d) {
      var a, b;
      for (a in d) {
        b = d[a];
        if (c[a] !== b) {
          f[a] = b
        }
      }
    }
    return f
  },
  convertObjectToArray: function(c) {
    var a = [];
    for (var b in c) {
      a[b] = c[b]
    }
    return a
  },
  getkeys: function(a) {
    return (Object.keys && Object.keys(a)) || (function() {
        var b = [];
        for (var c in a) {
          b.push(c)
        }
        return b
      }())
  },
  getKey: function(c, b) {
    for (var a in c) {
      if (c[a] === b) {
        return a
      }
    }
  },
  adjustNodeIndex: function(c, f, a) {
    var d = c.childNodes;
    f = f - IndexJL;
    f = (d.length > f) ? f : (d.length - 1);
    if (d && d.length > 0) {
      for (var b = f; b < d.length; b++) {
        d[b].setAttribute(a, b + IndexJL)
      }
    }
  },
  toggleVisibilty: function(c, f, a, d) {
    var b = $KU.isFlexWidget(a);
    if (d != false) {
      if (b || (a.wType == "Segment" && a.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW)) {
        c = c.parentNode
      }
    }
    if (f && f.length > 0 && a.isvisible) {
      this.removeClassName(c, "hide")
    } else {
      this.addClassName(c, "hide")
    }
  },
  removeClassNames: function(c, a) {
    if (!c) {
      return
    }
    if (c.tagName) {
      c = [c]
    }
    if (!c.length) {
      return
    }
    for (var b = 0; b < c.length; b++) {
      $KU.removeClassName(c[b], a)
    }
  },
  addClassNames: function(c, a) {
    if (!c) {
      return
    }
    if (c.tagName) {
      c = [c]
    }
    if (!c.length) {
      return
    }
    for (var b = 0; b < c.length; b++) {
      $KU.addClassName(c[b], a)
    }
  },
  removeClassName: function(c, a) {
    if (c.classList && a) {
      c.classList.remove(a)
    } else {
      if ($KU.hasClassName(c, a)) {
        var b = c.className;
        c.className = b.replace(new RegExp("(^|\\s+)" + a + "(\\s+|$)"), " ")
      }
    }
  },
  hasClassName: function(b, a) {
    return (b.classList && a) ? b.classList.contains(a) : (b.className.length > 0 && (b.className == a || new RegExp("(^|\\s)" + a + "(\\s|$)").test(b.className)))
  },
  addClassName: function(b, a) {
    if (b.classList && a) {
      b.classList.add(a)
    } else {
      if (!$KU.hasClassName(b, a)) {
        b.className += (b.className ? " " : "") + a
      }
    }
  },
  getElementById: function(b, a) {
    return (typeof b == "string") ? ((a || document).getElementById(b) || null) : null
  },
  getPosition: function(a, c) {
    var f = 0,
      d = 0,
      b = a.getBoundingClientRect();
    if (b) {
      f = b.left;
      d = b.top
    }
    if (!(c && c.ismodal)) {
      if (window.pageYOffset) {
        f += window.pageXOffset;
        d += window.pageYOffset
      } else {
        if (a.ownerDocument.documentElement.scrollTop) {
          f += a.ownerDocument.documentElement.scrollLeft;
          d += a.ownerDocument.documentElement.scrollTop
        } else {
          if (document.body.scrollTop) {
            f += document.body.scrollLeft;
            d += document.body.scrollTop
          }
        }
      }
    }
    if (a.ownerDocument.documentElement.clientTop) {
      f -= a.ownerDocument.documentElement.clientLeft;
      d -= a.ownerDocument.documentElement.clientTop
    } else {
      if (document.body.clientTop) {
        f -= document.body.clientLeft;
        d -= document.body.clientTop
      }
    }
    return {
      top: d,
      left: f,
      bottom: d + a.offsetHeight,
      right: f + a.offsetWidth,
      width: a.offsetWidth,
      height: a.offsetHeight
    }
  },
  getAnchorPosition: function(d, i) {
    var f = d.context;
    var c = 0,
      g = 0;
    var h = document.getElementsByTagName("body")[0].offsetWidth;
    var k = document.getElementsByTagName("body")[0].offsetHeight;
    var b = document.getElementsByTagName("body")[0].getAttribute("bodyalign");
    var j = screen.width - h;
    var a = 0;
    if (f.widget.wType == "Form") {
      a = $KU.getPosition(document.getElementById(f.widget.id))
    } else {
      a = $KU.getPosition($KU.getNodeByModel(f.widget, d))
    }
    if (!b) {
      b = "left"
    }
    if (f.anchor == "bottom") {
      if ((a.bottom + i.offsetHeight > k) && (d.wType != "Calendar")) {
        g = a.bottom - (a.bottom + i.offsetHeight - k)
      } else {
        g = a.bottom
      }
      if (a.left + i.offsetWidth > h) {
        c = 0
      } else {
        c = a.left
      }
    }
    if (f.anchor == "top") {
      if (a.top - i.offsetHeight < 0) {
        g = 0
      } else {
        g = a.top - i.offsetHeight
      }
      if (a.left + i.offsetWidth > h) {
        c = 0
      } else {
        c = a.left
      }
    }
    if (f.anchor == "left") {
      if (a.top + i.offsetHeight > k) {
        g = a.top - (a.top + i.offsetHeight - k)
      } else {
        g = a.top
      }
      if (b == "left") {
        if (a.left - i.offsetWidth < 0) {
          c = 0
        } else {
          c = a.left - i.offsetWidth
        }
      }
      if (b == "center") {
        if (a.left - i.offsetWidth < j / 2) {
          c = j / 2
        } else {
          c = a.left - i.offsetWidth
        }
      }
      if (b == "right") {
        if (a.left - i.offsetWidth < j) {
          c = 0
        } else {
          c = a.left - i.offsetWidth - j
        }
      }
    }
    if (f.anchor == "right") {
      if (a.top + i.offsetHeight > k) {
        g = a.top - (a.top + i.offsetHeight - k)
      } else {
        g = a.top
      }
      if (b == "left") {
        if (a.left + a.width + i.offsetWidth > h) {
          c = a.left + a.width - (a.left + a.width + i.offsetWidth - h)
        } else {
          c = a.left + a.width
        }
      }
      if (b == "center") {
        if (a.left + a.width + i.offsetWidth > h + j / 2) {
          c = a.left + a.width - (a.left + a.width + i.offsetWidth - h);
          c = c + j / 2
        } else {
          c = a.left + a.width
        }
      }
      if (b == "right") {
        if (a.left + a.width + i.offsetWidth > h + j) {
          c = a.left + a.width - (a.left + a.width + i.offsetWidth - h)
        } else {
          c = a.left + a.width - j
        }
      }
    }
    return {
      leftPos: c,
      topPos: g
    }
  },
  getNodeByModel: function(a) {
    if (a) {
      var b = a.tabId || "";
      if (b) {
        return document.getElementById(a.pf + "_" + b + "_" + a.id)
      } else {
        return document.getElementById(a.pf + "_" + a.id) || document.getElementById(a.id)
      }
    } else {
      return null
    }
  },
  getElementID: function(b, a) {
    return (b && typeof b == "string") ? (a ? b.substring(b.lastIndexOf("_") + 1, b.length) : b.substring(b.indexOf("_") + 1, b.length)) : null
  },
  getModelByNode: function(f) {
    var b = (f && f.getAttribute("id") && f.getAttribute("id").split("_").length == 3) ? this.getElementID(f.getAttribute("id"), true) : this.getElementID(f.getAttribute("id"));
    if (f.getAttribute("kwidgettype") == "CalendarText") {
      b = f.id.split("_")[0]
    }
    var c = f.getAttribute("ktabpaneid");
    var d = f.getAttribute("kformname");
    var a = f.getAttribute("ktabid");
    return kony.model.getWidgetModel(d, b, c, a)
  },
  getModelByScroller: function(a) {
    var b = a.substring(0, a.lastIndexOf("_"));
    var c = $KU.getElementById(b);
    return $KU.getModelByNode(c)
  },
  getNextSibling: function(b) {
    var a = b.nextSibling;
    while (a.nodeType != 1) {
      a = a.nextSibling
    }
    return a
  },
  applyFade: function(c, a, b) {
    c.style[vendor + "AnimationDuration"] = b + "ms";
    c.style[vendor + "AnimationName"] = a;
    if (a == "fadeIn") {
      c.style.display = ""
    } else {
      c.style.display = "none";
      c.style[vendor + "AnimationName"] = "none"
    }
  },
  getParentByAttribute: function(c, b) {
    var d = c;
    while (d) {
      var a = d.getAttribute && d.getAttribute(b);
      if (a) {
        return d
      }
      d = d.parentNode
    }
  },
  getParentByAttributeValue: function(c, b, d) {
    var f = c;
    while (f) {
      var a = f.getAttribute && f.getAttribute(b);
      if (a == d) {
        return f
      }
      f = f.parentNode
    }
  },
  getParentByTagName: function(b, a) {
    while (b && (b.nodeType != 1 || b.nodeName.toLowerCase() != a)) {
      b = b.parentNode
    }
    return b
  },
  getParentModel: function(a) {
    return a.parent
  },
  getContainerForm: function(f) {
    var a = f.getAttribute("kcontainerid");
    if (a) {
      var g = f;
      var h;
      while (g) {
        h = g.id && g.id.split("_")[1];
        if (h == a && g.getAttribute("kformname")) {
          return g.getAttribute("kformname")
        }
        g = g.parentNode
      }
    } else {
      var d = f.getAttribute("kformname");
      if (d) {
        var c = window[d];
        if (c.wType == "Form" || c.wType == "Popup") {
          return d
        } else {
          var b = $KU.getNodeByModel(c);
          return b.parentNode.getAttribute("kformname")
        }
      }
    }
    return ""
  },
  cloneObj: function(a) {
    if (typeof(a) != "object" || a == null) {
      return a
    }
    var c = a.constructor();
    for (var b in a) {
      if (a.hasOwnProperty(b)) {
        c[b] = this.cloneObj(a[b])
      }
    }
    return c
  },
  returnEventReference: function(a) {
    return typeof(a) == "function" ? a : (typeof(a) == "string" ? window[a] : undefined)
  },
  returnObjectReference: function(a) {
    return typeof(a) == "object" ? a : (typeof(a) == "string" ? window[a] : undefined)
  },
  getStringFromBase64: function(t) {
    var j = {},
      h, n = 0,
      m, p, g = 0,
      o, d = "",
      q = String.fromCharCode,
      k = t.length;
    var f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (h = 0; h < 64; h++) {
      j[f.charAt(h)] = h
    }
    for (p = 0; p < k; p++) {
      m = j[t.charAt(p)];
      n = (n << 6) + m;
      g += 6;
      while (g >= 8) {
        ((o = (n >>> (g -= 8)) & 255) || (p < (k - 2))) && (d += q(o))
      }
    }
    return d
  },
  getDecodedPropValue: function(a) {
    if (!(a.substr(0, 1) == "{")) {
      a = $KU.getStringFromBase64(a)
    }
    return a
  },
  getBase64: function(j) {
    if (!j) {
      return j
    }
    if ("btoa" in window) {
      return window.btoa(unescape(encodeURIComponent(j)))
    }
    var d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var c, b, a, n, m, l, k, o, h = 0,
      p = 0,
      g = "",
      f = [];
    do {
      c = j.charCodeAt(h++) & 255;
      b = j.charCodeAt(h++) & 255;
      a = j.charCodeAt(h++) & 255;
      o = c << 16 | b << 8 | a;
      n = o >> 18 & 63;
      m = o >> 12 & 63;
      l = o >> 6 & 63;
      k = o & 63;
      f[p++] = d.charAt(n) + d.charAt(m) + d.charAt(l) + d.charAt(k)
    } while (h < j.length);
    g = f.join("");
    switch (j.length % 3) {
      case 1:
        g = g.slice(0, -2) + "==";
        break;
      case 2:
        g = g.slice(0, -1) + "=";
        break
    }
    return g
  },
  isValidDate: function(f, g) {
    var a = {};
    f = f.split("/");
    g = g.split("/");
    for (var d = 0, b = g.length; d < b; d++) {
      a[g[d]] = f[d]
    }
    var c = new Date(a.yyyy || ((a.yy * 1) + 2000), a.mm - 1, a.dd);
    if (Object.prototype.toString.call(c) === "[object Date]" && (c.getFullYear() == (a.yyyy || ((a.yy * 1) + 2000)) && c.getFullYear() >= 1900 && c.getFullYear() <= 2100 && c.getMonth() + 1 == a.mm && c.getDate() == a.dd)) {
      return true
    } else {
      return false
    }
  },
  daysArray: function(c) {
    var b = new Date().getFullYear();
    for (var a = 1; a <= c; a++) {
      this[a] = new Date(b, c, 0).getDate()
    }
    return this
  },
  daysInFebruary: function(a) {
    return new Date(a, 2, 0).getDate()
  },
  isInteger: function(b) {
    var a;
    for (a = 0; a < b.length; a++) {
      var d = b.charAt(a);
      if (((d < "0") || (d > "9"))) {
        return false
      }
    }
    return true
  },
  getInt: function(a) {
    var b = parseInt(a);
    return b == null || isNaN(b) ? 0 : b
  },
  getDate: function(b, f) {
    var a;
    if (typeof b === "string" && typeof f === "string") {
      var c = b.split("/");
      var d = new Date().getFullYear().toString().substr(0, 2);
      if (f.indexOf("yyyy") == -1 || c[2].length == 2) {
        c[2] = d + c[2]
      }
      if (f == "mm/dd/yyyy" || f == "mm/dd/yy") {
        a = new Date(c[0] + "/" + c[1] + "/" + c[2])
      } else {
        a = new Date(c[1] + "/" + c[0] + "/" + c[2])
      }
      return a
    }
  },
  getDayOfYear: function(a, c, b) {
    return (Math.ceil((new Date(b, c - 1, a) - new Date(b, 0, 1)) / 86400000)) + 1
  },
  getIntegerDirection: function(a) {
    switch (a) {
      case "LEFT":
        return 1;
      case "RIGHT":
        return 2;
      case "UP":
        return 3;
      case "DOWN":
        return 4
    }
  },
  getSwipeDirection: function(b, a) {
    var d = Math.atan2(-a, -b);
    var f = Math.round(d * 180 / Math.PI);
    if (f < 0) {
      f = 360 - Math.abs(f)
    }
    var c;
    if ((f <= 45) && (f >= 0)) {
      c = $KW.touch.TouchContext.LEFT
    } else {
      if ((f <= 360) && (f >= 315)) {
        c = $KW.touch.TouchContext.LEFT
      } else {
        if ((f >= 135) && (f <= 225)) {
          c = $KW.touch.TouchContext.RIGHT
        } else {
          if ((f > 45) && (f < 135)) {
            c = $KW.touch.TouchContext.UP
          } else {
            c = $KW.touch.TouchContext.DOWN
          }
        }
      }
    }
    return c
  },
  getDistanceMoved: function(d, b) {
    var c = Math.abs(d);
    var a = Math.abs(b);
    return (Math.round(Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2))))
  },
  isMobile: function() {
    if (navigator.userAgent.match(/Mobile/i) && (navigator.userAgent.match(/AppleWebKit/i) || navigator.userAgent.match(/Phone/i))) {
      return true
    }
  },
  getPlatform: function() {
    if (!$KU.platform) {
      var a = {};
      a.name = $KU.getPlatformName();
      a.version = $KU.getPlatformVersion(a.name);
      $KU.platform = a
    }
    return $KU.platform
  },
  getPlatformName: function() {
    if (kony.appinit.isIE) {
      return "IE"
    }
    if (kony.appinit.isFirefox) {
      return "Firefox"
    }
    if (kony.appinit.isChrome) {
      return "Chrome"
    }
    if (kony.appinit.isSafari) {
      return "Safari"
    }
    if (kony.appinit.isOpera) {
      return "Opera"
    } else {
      return ""
    }
  },
  getPlatformVersion: function(b) {
    var a = "";
    var c = navigator.userAgent;
    switch (b) {
      case "IE":
        c.match(/MSIE ([0-9]+)/);
        a = RegExp.$1;
        break;
      case "Firefox":
        c.match(/Firefox[\/\s](\d+\.\d+)/);
        a = RegExp.$1;
        break;
      case "Chrome":
        c.match(/Chrome\/([0-9]+)/);
        a = RegExp.$1;
        break;
      case "Safari":
      case "Opera":
        c.match(/Version\/(\d+\.\d+)/);
        a = RegExp.$1;
        break;
      default:
        a = 0
    }
    return a
  },
  detectDevice: function() {
    var b = $KU.getPlatform();
    var a = b.name;
    var d = b.version;
    if (a == "iphone" || a == "ipad") {
      $KU.iOS = true;
      if (d < "5") {
        $KU.iOS4 = true
      }
    }
    var c = $KU.orientationDelayMatrix[a];
    if ($KU.isAndroid) {
      if ($KU.isAndroid_SonyXPeria) {
        c = $KU.orientationDelayMatrix.SonyXPeria
      } else {
        if ($KU.isAndroid_Galaxy && $KU.isMob) {
          if (window.devicePixelRatio && window.devicePixelRatio > 1.5) {
            c = 500
          } else {
            c = $KU.orientationDelayMatrix.GT
          }
        } else {
          if ($KU.isAndroid_Nexus) {
            c = $KU.orientationDelayMatrix.Nexus
          }
        }
      }
    }
    $KU.orientationDelay = c || 100;
    if (a == "blackberryNTH") {
      $KG.nativeScroll = true;
      $KG.disableTransition = true
    } else {
      if (a == "windowsphone" && $KU.isIE9) {
        $KG.nativeScroll = true;
        $KG.disableTransition = true
      }
    }
    if ($KG.useNativeScroll) {
      $KG.nativeScroll = true;
      $KG.disableTransition = false
    }
    if ($KG.nativeScroll) {
      $KG.needScroller = false
    } else {
      $KG.needScroller = true;
      document.body.style.overflowY = "hidden"
    }
  },
  detectOrientation: function() {
    var a = window.orientation;
    if (typeof a == "undefined" && window.matchMedia) {
      if (window.matchMedia("(orientation: portrait)").matches) {
        a = "portrait"
      } else {
        if (window.matchMedia("(orientation: landscape)").matches) {
          a = "landscape"
        } else {
          a = ""
        }
      }
    } else {
      switch (a) {
        case 0:
        case 180:
          a = ($KU.isAndroid && $KU.isTablet) ? "landscape" : "portrait";
          break;
        case 90:
        case -90:
          a = ($KU.isAndroid && $KU.isTablet) ? "portrait" : "landscape";
          break
      }
    }
    return a
  },
  getBrowserLanguage: function() {
    var b;
    var a = kony.globals.httpheaders;
    if (a && a["Accept-Language"]) {
      b = a["Accept-Language"].split(",")[0]
    } else {
      b = navigator.language || navigator.userLanguage || $KG.defaultlocale
    }
    return b
  },
  domRefresh: function(a) {
    if (a) {
      var b = a.style.margin;
      a.style.margin = "1px";
      setTimeout(function() {
        a.style.margin = b
      }, 10)
    }
  },
  convertjsontoluaobject: function(a) {
    var b = a;
    if (typeof a == "object") {
      b = JSON.stringify(a, $KU.jsonReplacer)
    }
    if (typeof b == "string") {
      obj1 = JSON.parse(b, function(c, d) {
        if (d instanceof Array) {
          d.splice(0, 0, null)
        }
        return d
      });
      return obj1
    } else {
      return a
    }
  },
  getWindowWidth: function() {
    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
  },
  getWindowHeight: function() {
    return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
  },
  getScrollBarWidth: function() {
    var c = document.createElement("p");
    c.style.width = "100%";
    c.style.height = "200px";
    var d = document.createElement("div");
    d.style.position = "absolute";
    d.style.top = "0px";
    d.style.left = "0px";
    d.style.visibility = "hidden";
    d.style.width = "200px";
    d.style.height = "150px";
    d.style.overflow = "hidden";
    d.appendChild(c);
    document.body.appendChild(d);
    var b = c.offsetWidth;
    d.style.overflow = "scroll";
    var a = c.offsetWidth;
    if (b == a) {
      a = d.clientWidth
    }
    document.body.removeChild(d);
    return (b - a)
  },
  convertluatojsonobject: function(a) {
    if (typeof a == "object") {
      luastr = JSON.stringify(a, $KU.jsonReplacer);
      obj2 = JSON.parse(luastr, function(b, c) {
        if (c instanceof Array) {
          c.splice(0, 1)
        }
        return c
      });
      return obj2
    } else {
      return a
    }
  },
  getImageCenterAlign: function(g, c, f) {
    if (g.naturalWidth) {
      var d = f ? f.spanHeight : g.parentNode.clientHeight;
      var b = f ? f.imgHeight : g.offsetHeight;
      var a = parseInt(d, 10) - parseInt(b, 10);
      if (c) {
        if (a > 0) {
          g.style.marginTop = a / 2 + "px"
        } else {
          g.style.marginTop = ""
        }
      } else {
        return a / 2
      }
    }
  },
  setImgAspectRatio: function(g, h, a, p) {
    if (!h) {
      return
    }
    var r = $KU.isFlexWidget(g);
    var j, c, i;
    if (g.wType == "Image" && r) {
      j = $KU.getReferenceWidth(g, h, a.width);
      c = $KU.getReferenceHeight(g, h, a.height)
    } else {
      j = g.referencewidth;
      c = g.referenceheight
    }
    var k = $KW.Image.getNaturalDimensions(h);
    var l = k.width;
    var m = k.height;
    var o = l / m;
    var d = $KU.isPositiveInteger(j);
    var q = $KU.isPositiveInteger(c);
    if (!isNaN(o) && (d || q)) {
      j = j;
      c = c;
      if (l > j || m > c) {
        var b = (d && (l > j)) ? j : l;
        var n = c;
        var f = ((b / o) < n || !q) ? (b / o) : false;
        if (f == false) {
          b = (n * o <= j || !d) ? n * o : b
        } else {
          n = f
        }
        if (n > 0 && n < 1) {
          n = 1
        }
        if (b > 0 && b < 1) {
          b = 1
        }
        if (typeof p == "undefined") {
          if (r) {
            h.style.width = b + "px";
            h.style.height = n + "px"
          } else {
            if (g.wType == "HStrip" && g.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_SLOTVIEW) {
              h.style.width = b + "px";
              h.style.height = n + "px"
            } else {
              h.style.width = h.parentNode.style.width = b + "px";
              h.style.height = h.parentNode.style.height = n + "px"
            }
          }
        } else {
          if (r) {
            a.width = b + "px";
            a.height = n + "px"
          }
        }
      } else {
        if (p == false && r) {
          a.width = l + "px";
          a.height = m + "px"
        }
      }
    }
    if (p == false) {
      return a
    }
  },
  setImgDimensions: function(b, g, f, c) {
    var a = $KU.getReferenceWidth(b, g, f.width);
    var d = $KU.getReferenceHeight(b, g, f.height);
    if (c == false) {
      return {
        width: "100%",
        height: +"100%"
      }
    }
    if (a >= 0) {
      g.style.width = "100%";
      if (d >= 0) {
        g.style.height = "100%"
      }
    }
  },
  getReferenceWidth: function(a, d, c) {
    var i = a.referencewidth;
    if (a.wType == "Image" && $KU.isFlexWidget(a)) {
      var h = {
        value: parseFloat(c),
        unit: $KU.getUnit(c)
      };
      i = $KU.getValueByParentFrame(a, h, "x");
      var b = d.parentNode;
      var f = parseInt($KU.getStyle(b, "border-right-width"), 10) + parseInt($KU.getStyle(b, "border-right-width"), 10);
      var g = parseInt($KU.getStyle(b, "padding-left"), 10) + parseInt($KU.getStyle(b, "padding-right"), 10);
      i = i - g - f
    }
    return i
  },
  getReferenceHeight: function(b, h, a) {
    var g = b.referenceheight;
    if (b.wType == "Image" && $KU.isFlexWidget(b)) {
      var i = {
        value: parseFloat(a),
        unit: $KU.getUnit(a)
      };
      g = $KU.getValueByParentFrame(b, i, "y");
      var d = h.parentNode;
      var c = parseInt($KU.getStyle(d, "border-top-width"), 10) + parseInt($KU.getStyle(d, "border-bottom-width"), 10);
      var f = parseInt($KU.getStyle(d, "padding-top"), 10) + parseInt($KU.getStyle(d, "padding-bottom"), 10);
      g = g - f - c
    }
    return g
  },
  imgLoadHandler: function(k, t) {
    k = k || window.event;
    if (!kony.appinit.isIE7 && !kony.appinit.isIE8) {
      t = k.target ? k.target : k.srcElement
    }
    if (!t) {
      return
    }
    if (!t.parentNode || (t.parentNode && !t.parentNode.parentNode)) {
      return
    }
    var a = t.getAttribute("ktabpaneid");
    var d = t.getAttribute("kwidgettype");
    var s = (d == "Image") ? $KU.getElementID(t.getAttribute("id")) : t.getAttribute("id");
    var g;
    if (d != "Image") {
      s = s.split("_")[1];
      g = t.src;
      g && (g = g.substring(g.lastIndexOf("/") + 1, g.length))
    }
    var j = t.getAttribute("ktabid");
    var h;
    if (j) {
      h = kony.model.getWidgetModel(t.getAttribute("kformname"), $KU.getElementID(s), a, j)
    } else {
      h = kony.model.getWidgetModel(t.getAttribute("kformname"), s, a)
    }
    if (d == "Image") {
      g = h.src
    }
    if (k.type == "load") {
      var b = true;
      if ($KU.inArray($KU.imgCache, g, true)) {
        b = false
      } else {
        $KU.imgCache.push(g)
      }
      if (h.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        $KU.setImgAspectRatio(h, t)
      }
      if (d == "IGallery") {
        t.style.display = ""
      }
      t.style.visibility = "visible";
      t.style.opacity = 1;
      h.loaded = true;
      if (h.animInfo) {
        var o = h.animInfo;
        o.instance.animate(h, o.animConfig, o.animCallback)
      }
      if (b || (t && t.parentNode && t.parentNode.style.background.indexOf("url") != -1)) {
        var l = t.parentNode;
        if (l) {
          if (l.style.removeProperty) {
            l.style.removeProperty("background")
          } else {
            l.style.background = "none"
          }
        }
      }
      if (d == "Image") {
        if (h.scrollBoxID) {
          var m = h.pf + "_" + h.scrollBoxID + "_scroller";
          var p = $KU.getElementById(m);
          if (p) {
            var f = $KG[m];
            f && f.refresh()
          }
        }
        var c = $KU.returnEventReference(t.getAttribute("ondownloadcomplete"));
        c && c.call(h, h, g, true)
      }
    } else {
      t.onerror = "";
      t.style.opacity = 1;
      var r = t.parentNode;
      r && (r.style.background = "none");
      if (d == "Image") {
        h.base64 = null
      }
      if (h.imagewhenfailed) {
        t.src = $KU.getImageURL(h.imagewhenfailed)
      }
      var c = $KU.returnEventReference(t.getAttribute("ondownloadcomplete"));
      c && c.call(h, h, g, false)
    }
    if (d == "HStrip" && (h.viewtype == "stripview" || h.viewtype == "pageview")) {
      h.count++;
      if (h.masterdata.length - IndexJL == h.count) {
        h.count = 0;
        if (h.viewtype == "stripview" && h.scrollInstance) {
          var n = t.getAttribute("kformname") + "_" + s + "_scrollee";
          n = document.getElementById(n);
          if (n) {
            n.style.width = "auto"
          }
          $KW.HStrip.refreshScroller(h)
        } else {
          if (h.view == "pageview") {
            var i = document.getElementById(t.getAttribute("kformname") + "_" + s);
            i.style.height = "auto";
            i.style.height = i.clientHeight + "px"
          }
        }
        var q = document.getElementById(t.getAttribute("kformname") + "_" + s + "_scrollFades");
        q && $KW.touch.setHeight(q.childNodes[0].childNodes[0]);
        q && $KW.touch.setHeight(q.childNodes[1].childNodes[0])
      }
    }
    if (t.parentNode) {
      t.parentNode.parentNode.style["font-size"] = "0px"
    }
    $KU.onImageLoadComplete(h, t)
  },
  onImageLoadComplete: function(h, i) {
    var d, b;
    var j = i.getAttribute("kcontainerID");
    if (j) {
      b = $KW.Utils.getContainerModelById(i, j)
    }
    d = h.parent;
    if ($KU.isFlexWidget(h)) {
      h.layoutConfig = {
        self: true,
        children: false
      };
      if (i.getAttribute("kcontainerid")) {
        var g = $KU.getParentByAttributeValue(i, "kwidgettype", d.wType);
        if (g) {
          if (b.wType == "Segment" && $KU.isFlexWidget(b) && !b.needScroller) {
            b.layoutConfig = {
              self: true,
              children: false
            };
            $KW.FlexContainer.forceLayout(b.parent)
          } else {
            $KW.FlexContainer.forceLayout(d, g.parentNode)
          }
        }
      } else {
        $KW.FlexContainer.forceLayout(d)
      }
    }
    if (b) {
      var f = window[b.pf];
      if (f && f.wType == "Popup") {
        var c = $KU.getElementById(f.id + "_container");
        if (c) {
          var l = f.ismodal ? c.getElementsByTagName("form")[0] : c;
          $KW.Popup.adjustPopupDimensions(f, l)
        }
      }
      if (b.wType == "MenuContainer" && b.viewtype == constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW) {
        var a = $KU.getParentByAttribute(i, "menuindex");
        if (a) {
          var k = a.getAttribute("menuindex");
          if (k && k.split(",").length > 1) {
            i.style.visibility = "hidden"
          }
        }
      }
    }
  },
  getImageURL: function(c) {
    if (c) {
      if (c.startsWith("http")) {
        return c
      } else {
        var a = "";
        var b = "";
        if ($KG.imagecat) {
          a = $KG.imagecat
        }
        if ($KG.platformver) {
          b = $KG.platformver
        }
        return b + "images/" + $KG.retina + a + c
      }
    }
    return ""
  },
  getCSSPropertyFromRule: function(d, b) {
    var a = $KW.Utils.getKonyStyleSheetIndex(document.styleSheets);
    var h = document.styleSheets[a];
    var g = h.rules || h.cssRules;
    for (var c = 0; c < g.length; c++) {
      var f = g[c];
      if (f.selectorText == ("." + d)) {
        return ((f.style.getPropertyValue && f.style.getPropertyValue(b)) || f.style[b])
      }
    }
    return null
  },
  imagePreloader: function(b, c) {
    var a = new Image();
    a.src = b;
    a.onload = c;
    a.onerror = c
  },
  getInnerHeight: function(a) {
    setTimeout(function() {
      $KG.__innerHeight = window.innerHeight
    }, a)
  },
  getgesturePosition: function(b, h, c, f, d, g) {
    var a;
    if (b <= (c - d) / 3 && h <= (f - g) / 3) {
      a = 1
    } else {
      if (b > (c - d) / 3 && b <= (c - d) * 2 / 3 && h <= (f - g) / 3) {
        a = 2
      } else {
        if (b > (c - d) * 2 / 3 && h <= (f - g) / 3) {
          a = 3
        } else {
          if (b <= (c - d) / 3 && h > (f - g) / 3 && h <= (f - g) * 2 / 3) {
            a = 4
          } else {
            if (b > (c - d) / 3 && b <= (c - d) * 2 / 3 && h > (f - g) / 3 && h <= (f - g) * 2 / 3) {
              a = 5
            } else {
              if (b > (c - d) * 2 / 3 && h > (f - g) / 3 && h <= (f - g) * 2 / 3) {
                a = 6
              } else {
                if (b <= (c - d) / 3 && h > (f - g) * 2 / 3) {
                  a = 7
                } else {
                  if (b > (c - d) / 3 && b <= (c - d) * 2 / 3 && h > (f - g) * 2 / 3) {
                    a = 8
                  } else {
                    if (b > (c - d) * 2 / 3 && h > (f - g) * 2 / 3) {
                      a = 9
                    } else {
                      if (b == (c - d) / 2 && h == (f - g) / 2) {
                        a = 10
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return a
  },
  addThirdPartyMeta: function(a) {
    if (a && typeof a == "object") {
      if (!$KG.thirdPartyWidgetsMeta) {
        $KG.thirdPartyWidgetsMeta = {}
      }
      $KG.thirdPartyWidgetsMeta[a.id] = a
    }
  },
  getWidgetTypeByNameSapce: function(a) {
    if (a && typeof a == "string") {
      a = a.split(".");
      return a[a.length - 1]
    } else {
      return ""
    }
  },
  getStyle: function(a, d) {
    try {
      var b = "";
      if (document.defaultView && document.defaultView.getComputedStyle) {
        b = document.defaultView.getComputedStyle(a, "").getPropertyValue(d)
      } else {
        if (a.currentStyle) {
          d = d.replace(/\-(\w)/g, function(f, g) {
            return g.toUpperCase()
          });
          b = a.currentStyle[d]
        } else {
          b = a.style[d]
        }
      }
    } catch (c) {}
    return b
  },
  getContainerParentDivMappings: function() {
    return {
      Form: 1,
      Popup: 1,
      ScrollBox: 0,
      HBox: 0,
      VBox: 0,
      Line: 0,
      TabPane: 0,
      Image: 2,
      Slider: 3,
      FlexContainer: 1,
      FlexScrollContainer: 2
    }
  },
  returnParentChildBloatAdjustedNode: function(d, b) {
    var c = $KU.getContainerParentDivMappings();
    for (var a = typeof c[d.wType] == "undefined" ? 1 : c[d.wType]; a > 0; --a) {
      b = b.parentNode
    }
    return b
  },
  extend: function(c, b) {
    for (var a in b) {
      if (typeof c[a] == "undefined") {
        c[a] = b[a]
      }
    }
    return c
  },
  fireEvent: function(c, b, d) {
    if (document.createEventObject) {
      var a = document.createEventObject();
      a.data = d;
      return c.fireEvent("on" + b, a)
    } else {
      var a = document.createEvent("HTMLEvents");
      a.data = d;
      a.initEvent(b, true, true);
      return !c.dispatchEvent(a)
    }
  },
  elementIndex: function(b) {
    var a = 0;
    while (b && b.previousSibling) {
      b = b.previousSibling;
      a++
    }
    return a
  },
  closestElement: function(b, a, c) {
    while (b && b.tagName) {
      var d = b.getAttribute(a);
      if (a === "class") {
        if ($KU.hasClassName(b, c)) {
          return b
        }
      } else {
        if (arguments.length === 3) {
          if (b.getAttribute(a) === c) {
            return b
          }
        } else {
          if (arguments.length === 2) {
            if (b.hasAttribute(a)) {
              return b
            }
          }
        }
      }
      b = b.parentNode
    }
    return null
  },
  filterElements: function(b, d) {
    var c = [];
    if (b.length) {
      if (d === "visible") {
        for (var a = 0; a < b.length; a++) {
          if (b[a].style.display !== "none") {
            c.push(b[a])
          }
        }
      }
    }
    return c
  },
  mediaSupport: function() {
    var a = document.createElement("video");
    return {
      mpeg4: "" !== a.canPlayType('video/mp4; codecs="mp4v.20.8"'),
      h264: "" !== (a.canPlayType('video/mp4; codecs="avc1.42E01E"') || a.canPlayType('video/mp4; codecs="avc1.42E01E, mp4a.40.2"')),
      ogg: "" !== a.canPlayType('video/ogg; codecs="theora"'),
      webm: "" !== a.canPlayType('video/webm; codecs="vp8, vorbis"')
    }
  },
  getFunctionName: function(a) {
    return a.name ? a.name : a.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
  },
  nativeScrollMatrix: {
    iphone: "5",
    ipad: "5",
    android: "2.3.6",
    blackberry: "7",
    desktop: "0"
  },
  isAndroid: (/android/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isIDevice: (/iphone|ipad/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPhone: (/iphone/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPod: (/ipod/gi).test(navigator.userAgent),
  isiPad: (/ipad/gi).test(navigator.userAgent),
  isIOS7: (/(iPad|iPhone);.*CPU.*OS 7_\d/i).test(navigator.userAgent),
  isIOSgt6: (/(iPad|iPhone);.*CPU.*OS ([7-9]|[1-9][0-9])_\d/i).test(navigator.userAgent),
  isPlaybook: (/playbook/gi).test(navigator.userAgent),
  isBlackBerry: ((/blackberry/gi).test(navigator.userAgent) || (/BB10/gi).test(navigator.userAgent)) && typeof bbnth == "undefined",
  isBlackBerryNTH: (/blackberry/gi).test(navigator.userAgent) && typeof bbnth != "undefined" && bbnth,
  isTouchPad: (/hp-tablet/gi).test(navigator.userAgent),
  isWindowsPhone: (/Windows Phone/gi).test(navigator.userAgent),
  isWindowsTouch: ((/Windows/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent)) || ((/trident/gi).test(navigator.userAgent)),
  isWindowsTablet: (/Windows NT/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent),
  isIE: (/MSIE/gi).test(navigator.userAgent),
  isIE9: navigator.userAgent.match(/MSIE (\d+)/) != null && RegExp.$1 == "9",
  isIE10: navigator.userAgent.match(/MSIE (\d+)/) != null && RegExp.$1 == "10",
  isIE11: (/rv:([1][1-9])/i).test(navigator.userAgent),
  isMob: (/mobile/gi).test(navigator.userAgent),
  isTablet: (/hp-tablet|ipad|playbook/gi).test(navigator.userAgent) || (((/android/gi).test(navigator.userAgent) || (/Windows NT/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent)) && !(/mobile/gi).test(navigator.userAgent)),
  isAndroid_SonyXPeria: (/android/gi).test(navigator.userAgent) && (/SonyEricsson/gi).test(navigator.userAgent),
  isAndroid_Galaxy: (/android/gi).test(navigator.userAgent) && (/GT/gi).test(navigator.userAgent),
  isAndroid_HTC: (/android/gi).test(navigator.userAgent) && (/HTC/gi).test(navigator.userAgent),
  isAndroid_Nexus: (/android/gi).test(navigator.userAgent) && (/Nexus/gi).test(navigator.userAgent),
  orientationDelayMatrix: {
    iphone: 100,
    ipad: 100,
    blackberry: 100,
    android: 250,
    GT: 150,
    SonyXPeria: 100,
    Nexus: 500,
    androidtablet: 300
  },
  isTouchSupported: (("ontouchstart" in window) || window.DocumentTouch && document instanceof DocumentTouch) && typeof bbnth == "undefined",
  isPointerSupported: navigator.msPointerEnabled,
  isOrientationSupported: "onorientationchange" in window,
  placeholderSupported: ("placeholder" in document.createElement("input")),
  vendor: ((/webkit/i).test(navigator.userAgent) ? "webkit" : (/firefox/i).test(navigator.userAgent) ? "moz" : "opera" in window ? "o" : (/msie/i).test(navigator.userAgent) ? "ms" : ""),
  has3d: "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MSCSSMatrix" in window && "m11" in new MSCSSMatrix(),
  hasTransform: "webkitTransform" in document.documentElement.style || "msTransform" in document.documentElement.style || "transform" in document.documentElement.style,
  hasWebkitTransform: "webkitTransform" in document.documentElement.style,
  hasMsTransform: "msTransform" in document.documentElement.style,
  hashChange: "onhashchange" in window,
  translatableWidgets: ["Button", "Label", "Link", "RichText", "TextArea", "TextField", "Phone"],
  segmentKeyMap: {
    visible: "isvisible",
    enable: "disabled"
  },
  dpi: window.devicePixelRatio || 1,
  minTouchMoveDisplacement: (window.devicePixelRatio || 1) * 6,
  swipeDuration: 500,
  imgCache: [],
  isAjaxUploadSupported: window.File && window.FileList && new XMLHttpRequest().upload,
  defaultunit: "%",
  flexUnits: ["%", "px", "dp"],
  contentDrivenWidgets: ["Label", "Button", "RichText", "Link", "Phone"],
  widgetsWidthMap: {
    HBox: "200dp",
    VBox: "200dp",
    ScrollBox: "200dp",
    TabPane: "100%",
    Calendar: "200dp",
    DataGrid: "100%",
    CheckBoxGroup: "100%",
    RadioButtonGroup: "260dp",
    Slider: "260dp",
    Switch: "200dp",
    HStrip: "200dp",
    IGallery: "200dp",
    Segment: "100%",
    Browser: "100%",
    Line: "50dp",
    Map: "100%",
    FlexContainer: "100%",
    FlexScrollContainer: "100%",
    TPW: "200dp",
    TextField: "260dp",
    TextArea: "260dp",
    ComboBox: "260dp",
    ListBox: "260dp"
  },
  widgetsHeightMap: {
    Segment: "120dp",
    Browser: "220dp",
    Map: "75%",
    TabPane: "220dp",
    FlexContainer: "220dp",
    FlexScrollContainer: "220dp",
    Line: "2dp",
    Slider: "100dp",
    ListBox: "40dp",
    ComboBox: "40dp",
    CheckBoxGroup: "120dp",
    RadioButtonGroup: "40dp",
    TextArea: "120dp",
    TextField: "40dp",
    DataGrid: "120dp"
  },
  changeFlag: false,
  needOptimization: true,
  setMainHeight: function() {
    var a = $KU.getElementById("__MainContainer");
    if (a) {
      a.style.height = window.innerHeight + "px"
    }
  },
  getI18NValue: function(d) {
    var a = /\((\'|\")([^)]+)(\'|\")\)/;
    var c = a.exec(d);
    var b = "";
    if (c && c[2]) {
      b = c[2]
    }
    return (b && $KI.i18n.getlocalizedstring(b)) || ""
  },
  createa11yDynamicElement: function() {
    var b = document.getElementById("ariaTag");
    if (!b) {
      var a = "<span  id='ariaTag' style='opacity:0;display:inline-block;height:0;width:0'  aria-live='assertive'></span>";
      b = b || document.createElement("div");
      b.innerHTML = a;
      document.body.appendChild(b.firstChild)
    }
  },
  changea11yDynamicElement: function(b) {
    var a = document.getElementById("ariaTag");
    window.setTimeout(function() {
      if (a) {
        a.removeAttribute("aria-hidden");
        a.innerHTML = b;
        window.setTimeout(function() {
          a.setAttribute("aria-hidden", "true")
        }, 10)
      }
    }, 100);
    if (a) {
      a.innerHTML = "title set"
    }
  },
  isRoleRequired: function(a) {
    if ($KU.isiPhone && (a.wType === "HBox" || a.wType === "Label" || a.wType === "VBox" || a.wType == "Segment" || a.wType == "ScrollBox" || a.wType == "HStrip" || a.wType == "Slider" || a.wType == "RichText" || a.wType == "FlexContainer" || a.wType == "FlexScrollContainer")) {
      return true
    } else {
      return false
    }
  },
  addAriatoElement: function(d, b, f, a) {
    if (d && a && a.a11yARIA) {
      for (attr in a.a11yARIA) {
        d.removeAttribute(attr)
      }
    }
    if (d && b) {
      var c = (b.a11yLabel || b.a11yLabel == "") ? b.a11yLabel : b.hint;
      var g = b.a11yValue;
      if (c != null && typeof c != undefined && c.trim() == "") {
        if (f.wType != "Calendar") {
          c = " "
        } else {
          c = f.date ? f.date : f.placeholder
        }
      }
      if (g != null && typeof g != undefined && g.trim() == "") {
        g = " "
      }
      if (f.wType != "Calendar") {
        c = c ? c + " " + (g ? g : "") : (g ? g : null)
      }
      if (c) {
        if (f.wType == "Image") {
          d.setAttribute("alt", c)
        } else {
          d.setAttribute("aria-label", c)
        }
        if ($KU.isRoleRequired(f)) {
          d.setAttribute("role", "option")
        }
      } else {
        if (f.wType == "Image") {
          d.removeAttribute("alt")
        } else {
          if (f.wType != "Calendar") {
            d.removeAttribute("aria-label")
          } else {
            c = f.date ? f.date : f.placeholder;
            d.setAttribute("aria-label", c)
          }
        }
        if ($KU.isRoleRequired(f)) {
          d.removeAttribute("role")
        }
        if (!c && f.wType == "Switch") {
          $KW.Switch.addA11YAttribute(f, d, true)
        }
      }
      var h = b.a11yHint || "";
      if (h.trim() != "") {
        if (!($KU.isBlackBerryNTH || $KU.isBlackBerry)) {
          var i = f.pf + "_" + f.id + "_hint";
          d.setAttribute("aria-describedby", i);
          $KU.createHintWrapper(f, i, h);
          if ($KU.isRoleRequired(f)) {
            d.setAttribute("role", "option")
          }
        }
      } else {
        d.removeAttribute("aria-describedby");
        if ($KU.isRoleRequired(f) && !c) {
          d.removeAttribute("role")
        }
        if (!c && f.wType == "Switch") {
          $KW.Switch.addA11YAttribute(f, d, true)
        }
      }
      b.a11yHidden ? d.setAttribute("aria-hidden", true) : d.removeAttribute("aria-hidden");
      b.required ? d.setAttribute("aria-required", b.required) : d.removeAttribute("aria-required");
      if (b.a11yARIA) {
        for (attr in b.a11yARIA) {
          d.setAttribute(attr, b.a11yARIA[attr])
        }
      }
    } else {
      if (f.wType == "Image") {
        d.removeAttribute("alt")
      } else {
        if (f.wType == "Calendar") {
          d.childNodes[1].alt = "Calendar"
        } else {
          d.removeAttribute("aria-label");
          if (f.wType == "Switch") {
            $KW.Switch.addA11YAttribute(f, d)
          }
        }
      }
      d.removeAttribute("aria-hidden");
      d.removeAttribute("aria-describedby");
      d.removeAttribute("aria-required");
      if ($KU.isRoleRequired(f)) {
        d.removeAttribute("role")
      }
    }
  },
  createHintWrapper: function(c, h, f) {
    var d = c.pf + "_hint";
    var g = document.getElementById(d);
    if (f) {
      var b = "<div id='" + h + "'>" + f + "</div>";
      var a = document.getElementById(h);
      if (!g) {
        var g = document.createElement("div");
        g.id = d;
        g.style.display = "none";
        document.body.appendChild(g)
      }
      if (a) {
        if (a.textContent) {
          a.textContent = f
        } else {
          a.innerText = f
        }
      } else {
        g.innerHTML += b
      }
    }
  },
  getAccessibilityValues: function(d, a, l, k) {
    var g = a || d.accessibilityconfig;
    if (l && l != "") {
      l = l ? "_" + l : "";
      g = a
    }
    var n = " ";
    if (g) {
      var b = (g.a11yLabel || g.a11yLabel == "") ? g.a11yLabel : g.hint;
      var c = g.a11yValue;
      var j = g.a11yHint;
      var f = k || "";
      var m = "";
      if (l) {
        m = d.pf + "_" + d.id + f + l + "_hint"
      } else {
        m = d.pf + "_" + d.id + f + "_hint"
      }
      if (b != null && typeof b != undefined && b.trim() == "") {
        b = " "
      }
      if (c != null && typeof c != undefined && c.trim() == "") {
        c = " "
      }
      if (d.wType != "Calendar") {
        b = b ? b + " " + (c ? c : "") : (c ? c : null);
        b = b ? (d.wType == "Image" ? "  alt='" + b + "' " : "  aria-label='" + b + "' ") : ""
      } else {
        b = b ? b : "";
        b = b + " " + (d.date ? d.date : d.placeholder);
        b = b ? ("aria-label='" + b + "' ") : ""
      }
      if (b && $KU.isRoleRequired(d)) {
        b += "  role='option'"
      }
      var i = "";
      if (j) {
        i = " aria-describedby='" + m + "' ";
        if ($KU.isRoleRequired(d)) {
          b += "  role='option'"
        }
      }
      var h = g.a11yHidden ? " aria-hidden ='" + true + "'" : "";
      $KU.createHintWrapper(d, m, j);
      if (g.a11yARIA) {
        for (attr in g.a11yARIA) {
          n += attr + "= '" + g.a11yARIA[attr] + "' "
        }
      }
      if (d.wType == "HBox" || d.wType == "VBox") {
        n += " tabindex=-1 "
      }
      n += (b + "  " + i + " " + h)
    } else {
      if (d.wType == "Calendar") {
        b = "Calendar " + d.placeholder;
        b = ("aria-label='" + b + "' ");
        n = (b)
      }
    }
    return n
  },
  setScrollBoxesHeight: function(f, d) {
    var a = document.querySelectorAll("#" + f + " div[kwidgettype='" + d + "']");
    for (var c = 0; c < a.length; c++) {
      var b = $KU.getModelByNode(a[c]);
      $KU.setScrollHeight(b, a[c])
    }
  },
  setScrollHeight: function(l, n) {
    var b = l.parent;
    var c = window[l.pf];
    n = n || $KU.getNodeByModel(l);
    var h = n;
    if (!h) {
      return
    }
    if ((b && (b.wType == "FlexContainer" || b.wType == "FlexScrollContainer")) || (c && c.wType == "Form" && c.layouttype != kony.flex.VBOX_LAYOUT)) {
      h.style.overflowY = "auto";
      return
    }
    var g = $KU.getElementById(n.id + "_parent");
    var p = $KW.stringifyScrolldirection[l.scrolldirection];
    var o;
    if (l.wType == "Segment" && l.viewType == "pageview" && l.needpageindicator) {
      o = document.getElementById(l.pf + "_" + l.id + "_footer");
      o && $KU.removeClassName(o, "hide")
    }
    if ((p != "horizontal" && l.wType == "ScrollBox") || l.needScroller) {
      var j = l.containerheight >= 0 ? l.containerheight : l.container_height;
      j = parseFloat(j);
      var a = 0;
      if ($KU.isPositiveInteger(j) && (l.containerheightreference || l.heightreference)) {
        if ([l.containerheightreference, l.heightreference].contains(1)) {
          var f = document.getElementById($KG.__currentForm.id + "_scroller");
          var i = (f && f.offsetHeight) || $KU.getWindowHeight();
          a = Math.round((j * i) / 100)
        } else {
          if ([l.containerheightreference, l.heightreference].contains(2)) {
            var b = $KU.getParentModel(l);
            var k = $KU.getNodeByModel(b);
            var m = (k && k.offsetWidth) || h.parentNode.offsetWidth;
            a = Math.round((j * m) / 100)
          } else {
            if ([l.containerheightreference, l.heightreference].contains(3)) {
              a = Math.round((j * screen.height) / 100)
            }
          }
        }
        var d = padding = 0;
        if (g) {
          d = parseInt($KU.getStyle(g, "border-top-width").replace("px", ""), 10) + parseInt($KU.getStyle(g, "border-bottom-width").replace("px", ""), 10);
          padding = parseInt($KU.getStyle(g, "padding-top").replace("px", ""), 10) + parseInt($KU.getStyle(g, "padding-bottom").replace("px", ""), 10);
          g.style.height = a + "px"
        }
        a = a - d - padding;
        h.style.height = a + "px";
        if (l.wType == "Segment" && l.viewType == "pageview" && l.containerheight == 0) {
          o && $KU.addClassName(o, "hide")
        }
      }
    } else {
      if (l.wType == "Segment" && l.screenLevelWidget == true) {
        return
      }
      if (l.wType == "Segment" || l.wType == "TabPane" || l.wType == "ScrollBox" || l.wType == "Browser" || l.wType == "Popup") {
        a = "auto"
      } else {
        if (l.wType == "Map") {
          a = "500px"
        }
      }
      h.style.height = a
    }
    if ((l.containerheight || l.containerheight == 0) && l.wType != "ScrollBox") {
      n.style.overflowY = "auto"
    }
  },
  isFlexWidget: function(b) {
    var c = b.parent;
    if (c) {
      var a = c.wType;
      if (a == "FlexContainer" || a == "FlexScrollContainer" || (a == "Form" && c.layouttype && c.layouttype != kony.flex.VBOX_LAYOUT && c.layouttype != constants.CONTAINER_LAYOUT_GRID)) {
        return true
      }
    }
    return false
  },
  isFlexContainer: function(b) {
    if (b) {
      var a = b.wType;
      if (a == "FlexContainer" || a == "FlexScrollContainer" || (a == "Form" && b.layouttype && b.layouttype != kony.flex.VBOX_LAYOUT && b.layouttype != constants.CONTAINER_LAYOUT_GRID)) {
        return true
      }
    }
    return false
  },
  onEventHandler: function(a) {
    var b = $KU.isFlexWidget(a);
    if (b) {
      var c = window[a.pf];
      if (c) {
        $KW.Form.initializeAllFlexContainers(c);
        $KW.Form.initializeFlexContainersInTemplate(c)
      }
    }
  },
  updateGestureTempList: function(a, d) {
    var f = $KG.gestureTemplates || [];
    if (d && d.length > IndexJL) {
      f = a.rowtemplate ? [a.rowtemplate.id] : [];
      for (var b = IndexJL; b < d.length; b++) {
        var c = d[b].template;
        if (c && !f.contains(c.id)) {
          f.push(c.id)
        }
      }
    }
    $KG.gestureTemplates = f
  },
  setMainHeight: function() {
    var a = $KU.getElementById("__MainContainer");
    if (a) {
      a.style.height = window.innerHeight + "px"
    }
  },
  getComputedValue: function(a, b) {
    if (!this.isValidCSSLength(b)) {
      return null
    }
    var c = this.getValueAndUnit(a, b);
    return c.value + c.unit
  },
  splitValueAndUnit: function(c) {
    if (c && typeof c == "string") {
      var a = $KU.flexUnits;
      for (var b = 0; b < a.length; b++) {
        if (c.lastIndexOf(a[b]) != -1) {
          c = parseFloat(c);
          unit = a[b];
          break
        }
      }
    }
    return {
      value: c,
      unit: unit
    }
  },
  escapeHTMLSpecialEntities: function(g) {
    if (typeof g !== "string") {
      return g
    }
    if ($KG.appbehaviors && $KG.appbehaviors.skipEscapeHtml == true) {
      return g
    }
    var d = "";
    var f = ($KG.appbehaviors && $KG.appbehaviors.escapeHtml == true) ? true : false;
    if (!f) {
      d = g.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&rsquo;").replace(/"/g, "&rdquo;")
    } else {
      var a = {
        34: "quot",
        38: "amp",
        39: "apos",
        60: "lt",
        62: "gt",
        160: "nbsp",
        161: "iexcl",
        162: "cent",
        163: "pound",
        164: "curren",
        165: "yen",
        166: "brvbar",
        167: "sect",
        168: "uml",
        169: "copy",
        170: "ordf",
        171: "laquo",
        172: "not",
        173: "shy",
        174: "reg",
        175: "macr",
        176: "deg",
        177: "plusmn",
        178: "sup2",
        179: "sup3",
        180: "acute",
        181: "micro",
        182: "para",
        183: "middot",
        184: "cedil",
        185: "sup1",
        186: "ordm",
        187: "raquo",
        188: "frac14",
        189: "frac12",
        190: "frac34",
        191: "iquest",
        192: "Agrave",
        193: "Aacute",
        194: "Acirc",
        195: "Atilde",
        196: "Auml",
        197: "Aring",
        198: "AElig",
        199: "Ccedil",
        200: "Egrave",
        201: "Eacute",
        202: "Ecirc",
        203: "Euml",
        204: "Igrave",
        205: "Iacute",
        206: "Icirc",
        207: "Iuml",
        208: "ETH",
        209: "Ntilde",
        210: "Ograve",
        211: "Oacute",
        212: "Ocirc",
        213: "Otilde",
        214: "Ouml",
        215: "times",
        216: "Oslash",
        217: "Ugrave",
        218: "Uacute",
        219: "Ucirc",
        220: "Uuml",
        221: "Yacute",
        222: "THORN",
        223: "szlig",
        224: "agrave",
        225: "aacute",
        226: "acirc",
        227: "atilde",
        228: "auml",
        229: "aring",
        230: "aelig",
        231: "ccedil",
        232: "egrave",
        233: "eacute",
        234: "ecirc",
        235: "euml",
        236: "igrave",
        237: "iacute",
        238: "icirc",
        239: "iuml",
        240: "eth",
        241: "ntilde",
        242: "ograve",
        243: "oacute",
        244: "ocirc",
        245: "otilde",
        246: "ouml",
        247: "divide",
        248: "oslash",
        249: "ugrave",
        250: "uacute",
        251: "ucirc",
        252: "uuml",
        253: "yacute",
        254: "thorn",
        255: "yuml",
        402: "fnof",
        913: "Alpha",
        914: "Beta",
        915: "Gamma",
        916: "Delta",
        917: "Epsilon",
        918: "Zeta",
        919: "Eta",
        920: "Theta",
        921: "Iota",
        922: "Kappa",
        923: "Lambda",
        924: "Mu",
        925: "Nu",
        926: "Xi",
        927: "Omicron",
        928: "Pi",
        929: "Rho",
        931: "Sigma",
        932: "Tau",
        933: "Upsilon",
        934: "Phi",
        935: "Chi",
        936: "Psi",
        937: "Omega",
        945: "alpha",
        946: "beta",
        947: "gamma",
        948: "delta",
        949: "epsilon",
        950: "zeta",
        951: "eta",
        952: "theta",
        953: "iota",
        954: "kappa",
        955: "lambda",
        956: "mu",
        957: "nu",
        958: "xi",
        959: "omicron",
        960: "pi",
        961: "rho",
        962: "sigmaf",
        963: "sigma",
        964: "tau",
        965: "upsilon",
        966: "phi",
        967: "chi",
        968: "psi",
        969: "omega",
        977: "thetasym",
        978: "upsih",
        982: "piv",
        8226: "bull",
        8230: "hellip",
        8242: "prime",
        8243: "Prime",
        8254: "oline",
        8260: "frasl",
        8472: "weierp",
        8465: "image",
        8476: "real",
        8482: "trade",
        8501: "alefsym",
        8592: "larr",
        8593: "uarr",
        8594: "rarr",
        8595: "darr",
        8596: "harr",
        8629: "crarr",
        8656: "lArr",
        8657: "uArr",
        8658: "rArr",
        8659: "dArr",
        8660: "hArr",
        8704: "forall",
        8706: "part",
        8707: "exist",
        8709: "empty",
        8711: "nabla",
        8712: "isin",
        8713: "notin",
        8715: "ni",
        8719: "prod",
        8721: "sum",
        8722: "minus",
        8727: "lowast",
        8730: "radic",
        8733: "prop",
        8734: "infin",
        8736: "ang",
        8743: "and",
        8744: "or",
        8745: "cap",
        8746: "cup",
        8747: "int",
        8756: "there4",
        8764: "sim",
        8773: "cong",
        8776: "asymp",
        8800: "ne",
        8801: "equiv",
        8804: "le",
        8805: "ge",
        8834: "sub",
        8835: "sup",
        8836: "nsub",
        8838: "sube",
        8839: "supe",
        8853: "oplus",
        8855: "otimes",
        8869: "perp",
        8901: "sdot",
        8968: "lceil",
        8969: "rceil",
        8970: "lfloor",
        8971: "rfloor",
        9001: "lang",
        9002: "rang",
        9674: "loz",
        9824: "spades",
        9827: "clubs",
        9829: "hearts",
        9830: "diams",
        338: "OElig",
        339: "oelig",
        352: "Scaron",
        353: "scaron",
        376: "Yuml",
        710: "circ",
        732: "tilde",
        8194: "ensp",
        8195: "emsp",
        8201: "thinsp",
        8204: "zwnj",
        8205: "zwj",
        8206: "lrm",
        8207: "rlm",
        8211: "ndash",
        8212: "mdash",
        8216: "lsquo",
        8217: "rsquo",
        8218: "sbquo",
        8220: "ldquo",
        8221: "rdquo",
        8222: "bdquo",
        8224: "dagger",
        8225: "Dagger",
        8240: "permil",
        8249: "lsaquo",
        8250: "rsaquo",
        8364: "euro"
      };
      for (var c = 0; c < g.length; c++) {
        var b = g.charCodeAt(c);
        if (a[b]) {
          d += "&" + a[b] + ";"
        } else {
          d += g[c]
        }
      }
    }
    return d
  },
  getValueAndUnit: function(c, g) {
    var a = $KU.isFlexContainer(c) ? c : c.parent;
    var f = a.defaultunit || kony.flex.DEFAULT_UNIT;
    if (g && typeof g == "string") {
      var b = $KU.flexUnits;
      for (var d = 0; d < b.length; d++) {
        if (g.lastIndexOf(b[d]) != -1) {
          g = parseFloat(g);
          f = b[d];
          break
        }
      }
    }
    g = parseFloat(g);
    if (f == kony.flex.PX) {
      g = g / $KU.dpi
    }
    if (f == kony.flex.DP) {
      f = "px"
    }
    return {
      value: g,
      unit: f
    }
  },
  getUnit: function(c) {
    var a = $KU.flexUnits;
    for (var b = 0; b < a.length; b++) {
      if (c.lastIndexOf(a[b]) != -1) {
        unit = a[b];
        return unit
      }
    }
  },
  getValueByParentFrame: function(b, h, c, a) {
    var g = a || b.parent.frame;
    var f = h.value;
    var d = h.unit;
    if (d == kony.flex.PERCENTAGE && g) {
      if (c == "x") {
        f = (f * g.width) / 100
      } else {
        if (c == "y") {
          f = (f * g.height) / 100
        }
      }
    }
    return f
  },
  createStyleSheet: function(b) {
    var a = document.createElement("style");
    a.type = "text/css";
    a.rel = "stylesheet";
    a.id = b;
    document.head && document.head.appendChild(a);
    return a.sheet
  },
  updateScrollFlag: function(b) {
    var c = b.parent || b;
    var a = parseFloat(b.containerheight);
    b.needScroller = $KU.isFlexContainer(c) || !!($KU.isPositiveInteger(a) && b.containerheightreference)
  },
  isValidCSSLength: function(a) {
    return /^[-+]?([0-9]+)(\.[0-9]+)?(px|%|dp)?$/.test(a)
  },
  isPositiveInteger: function(a) {
    return (typeof a == "number" && a >= 0)
  },
  onEventHandler: function(a) {
    var b = window[a.pf];
    if (b) {
      $KW.Form.initializeAllFlexContainers(b)
    }
  },
  setLayoutConfig: function(a, c, b) {
    if (c != b) {
      a.layoutConfig = {
        self: true,
        children: false
      }
    }
    this.updateAutoGrowFlexConfig(a)
  },
  updateAutoGrowFlexConfig: function(a) {
    var b = a.parent;
    if (b && b.wType == "FlexContainer" && b.autogrowHeight) {
      b.layoutConfig = {
        self: true,
        children: true
      };
      this.updateAutoGrowFlexConfig(b)
    }
  },
  updateLayoutConfig: function(a) {
    a.layoutConfig = {
      self: true,
      children: false
    }
  },
  layoutNewWidgets: function(a, c) {
    if (c && c.length > 0) {
      this.updateWidgetsConfig(a, c);
      var b = $KU.isFlexContainer(a);
      if (b) {
        $KW.FlexContainer.adjustFlexContainer(a)
      } else {
        $KW.Form.initializeFlexContainersInBox(a)
      }
    }
  },
  updateWidgetsConfig: function(c, f) {
    if (f && f.length > 0) {
      for (var b = 0; b < f.length; b++) {
        var a = f[b];
        var d = $KU.isFlexWidget(a);
        (d || a.wType == "Segment") && this.updateLayoutConfig(a);
        if (a.wType == "FlexContainer" || a.wType == "FlexScrollContainer") {
          a.layoutConfig.children = true
        } else {
          a.ownchildrenref && this.updateWidgetsConfig(a, a.ownchildrenref)
        }
      }
    }
  },
  onWidgetRemove: function(c, b) {
    if ($KU.isFlexContainer(c) && c.layouttype && c.layouttype != kony.flex.FREE_FORM) {
      var a = c.ownchildrenref[b];
      if (a) {
        this.updateLayoutConfig(a)
      }
    }
  },
  checkProp: function(a, m, k) {
    var d = "Webkit Moz O ms";
    var b = d.split(" ");
    var j = a.charAt(0).toUpperCase() + a.slice(1),
      h = (a + " " + b.join(j + " ") + j).split(" ");
    var n = this.nativeTestProps(h, m);
    if (typeof n != "undefined") {
      return n
    }
    var c, a, l;
    if (!$KU.testNode) {
      $KU.testNode = document.createElement("test")
    }
    var g = $KU.testNode.style;
    for (c in h) {
      a = h[c];
      l = g[a];
      if (!this.contains(a, "-") && g[a] !== undefined) {
        if (!k && typeof m != "undefined") {
          try {
            g[a] = m
          } catch (f) {}
          if (g[a] != l) {
            return true
          }
        } else {
          return true
        }
      }
    }
    return false
  },
  nativeTestProps: function(b, c) {
    var a = b.length;
    if ("CSS" in window && "supports" in window.CSS) {
      while (a--) {
        if (window.CSS.supports(this.domToHyphenated(b[a]), c)) {
          return true
        }
      }
      return false
    }
    return undefined
  },
  domToHyphenated: function(a) {
    return a.replace(/([A-Z])/g, function(c, b) {
      return "-" + b.toLowerCase()
    }).replace(/^ms-/, "-ms-")
  },
  jsonReplacer: function(a, b) {
    if (a === "parent" || a == "rowtemplate" || a == "rowTemplate") {
      return b && (b.id || b)
    } else {
      if (a == "scrollerInstance" || a == "scrollingevents" || a == "scrollingEvents" || a == "ownchildrenref" || a == "touches") {
        return undefined
      }
    }
    return b
  },
  contains: function(b, a) {
    return !!~("" + b).indexOf(a)
  },
  preventClickEvent: function(c, d) {
    var a = c.type;
    var b = d.tagName;
    if (b == "INPUT" || b == "SELECT") {
      if (a == "change") {
        $KU.changeFlag = true
      } else {
        if (a == "click" && $KU.changeFlag) {
          $KU.changeFlag = false;
          return true
        }
      }
    }
    return false
  },
  getTextTrasform: function(a, c) {
    var b = "";
    if (!$KU.isAutoCapitalizeSupported) {
      switch (a.autocapitalize) {
        case constants.TEXTBOX_AUTO_CAPITALIZE_WORDS:
        case constants.TEXTAREA_AUTO_CAPITALIZE_WORDS:
          b = "capitalize";
          break;
        case constants.TEXTBOX_AUTO_CAPITALIZE_ALL:
        case constants.TEXTAREA_AUTO_CAPITALIZE_ALL:
          b = "uppercase";
          break;
        case constants.TEXTBOX_AUTO_CAPITALIZE_SENTENCES:
        case constants.TEXTBOX_AUTO_CAPITALIZE_NONE:
        case constants.TEXTAREA_AUTO_CAPITALIZE_SENTENCES:
        case constants.TEXTAREA_AUTO_CAPITALIZE_NONE:
          b = "none";
          break
      }
    }
    return b
  }
};
var Arraycontains = function(c) {
  var a = this.length;
  if (a == 0) {
    return false
  } else {
    for (var b = 0; b < a; b++) {
      if (this[b] == c) {
        return true
      }
    }
  }
  return false
};
var ArraycontainsTimerAction = function(c) {
  var a = this.length;
  if (a == 0) {
    return false
  } else {
    for (var b = 0; b < a; b++) {
      if ((this[b].actionName == c.actionName)) {
        return true
      }
    }
  }
  return false
};
var Arrayremove = function(c) {
  var a = this.length;
  if (a == 0) {
    return null
  } else {
    for (var b = 0; b < a; b++) {
      if (this[b] == c) {
        return this.removeRange(b)
      }
    }
  }
  return this
};
var ArrayremoveRange = function(c, b) {
  var a = this.slice((b || c) + 1 || this.length);
  this.length = c < 0 ? this.length + c : c;
  return this.push.apply(this, a)
};
try {
  Object.defineProperty(Array.prototype, "contains", {
    value: Arraycontains,
    enumerable: false
  });
  Object.defineProperty(Array.prototype, "containsTimerAction", {
    value: ArraycontainsTimerAction,
    enumerable: false
  });
  Object.defineProperty(Array.prototype, "remove", {
    value: Arrayremove,
    enumerable: false
  });
  Object.defineProperty(Array.prototype, "removeRange", {
    value: ArrayremoveRange,
    enumerable: false
  })
} catch (e) {
  Array.prototype.contains = Arraycontains;
  Array.prototype.containsTimerAction = ArraycontainsTimerAction;
  Array.prototype.remove = Arrayremove;
  Array.prototype.removeRange = ArrayremoveRange
}
String.prototype.trim = function() {
  return this.replace(/^\s+|\s+$/g, "")
};
String.prototype.ltrim = function() {
  return this.replace(/^\s+/, "")
};
String.prototype.rtrim = function() {
  return this.replace(/\s+$/, "")
};
String.prototype.startsWith = function(a) {
  return this.slice(0, a.length) === a
};
kony.json = {
  concat: function(c, b) {
    for (var a in b) {
      c[a] = b[a]
    }
    return c
  }
};
if (!Function.prototype.bind) {
  Function.prototype.bind = function(a) {
    if (typeof this !== "function") {
      throw new TypeError("Function.prototype.bind - what is trying to be fBound is not callable")
    }
    var f = Array.prototype.slice.call(arguments, 1),
      d = this,
      b = function() {},
      c = function() {
        return d.apply(this instanceof b ? this : a || window, f.concat(Array.prototype.slice.call(arguments)))
      };
    b.prototype = this.prototype;
    c.prototype = new b();
    return c
  }
}
var elemInput = document.createElement("input");
$KU.isAutoCapitalizeSupported = "autocapitalize" in elemInput;
var translateOpen = "translate" + ($KU.has3d ? "3d(" : "(");
var translateClose = $KU.has3d ? ",0)" : ")";
$KU.flexbox = false;
owl = (function() {
  function c() {}

  function i(j) {
    if (typeof j == "object") {
      c.prototype = j;
      return new c()
    } else {
      return j
    }
  }

  function h(l) {
    if (typeof l !== "object") {
      return l
    } else {
      var k = l.valueOf();
      if (l != k) {
        return new l.constructor(k)
      } else {
        if (l instanceof l.constructor && l.constructor !== Object) {
          var m = i(l.constructor.prototype);
          for (var j in l) {
            if (l.hasOwnProperty(j)) {
              m[j] = l[j]
            }
          }
        } else {
          var m = {};
          for (var j in l) {
            m[j] = l[j]
          }
        }
        return m
      }
    }
  }
  var g = [];

  function f(j) {
    for (var k in j) {
      this[k] = j[k]
    }
  }
  f.prototype = {
    constructor: f,
    canCopy: function(j) {
      return false
    },
    create: function(j) {},
    populate: function(k, l, j) {}
  };

  function b() {
    this.copiedObjects = [];
    thisPass = this;
    this.recursiveDeepCopy = function(j) {
      return thisPass.deepCopy(j)
    };
    this.depth = 0
  }
  b.prototype = {
    constructor: b,
    maxDepth: 256,
    cacheResult: function(k, j) {
      this.copiedObjects.push([k, j])
    },
    getCachedResult: function(m) {
      var k = this.copiedObjects;
      var l = k.length;
      for (var j = 0; j < l; j++) {
        if (k[j][0] === m) {
          return k[j][1]
        }
      }
      return undefined
    },
    deepCopy: function(m) {
      if (m === null) {
        return null
      }
      if (typeof m !== "object") {
        return m
      }
      var l = this.getCachedResult(m);
      if (l) {
        return l
      }
      for (var k = 0; k < g.length; k++) {
        var j = g[k];
        if (j.canCopy(m)) {
          return this.applyDeepCopier(j, m)
        }
      }
      throw new Error("no DeepCopier is able to copy " + m)
    },
    applyDeepCopier: function(k, l) {
      var j = k.create(l);
      this.cacheResult(l, j);
      this.depth++;
      if (this.depth > this.maxDepth) {
        throw new Error("Exceeded max recursion depth in deep copy.")
      }
      k.populate(this.recursiveDeepCopy, l, j);
      this.depth--;
      return j
    }
  };

  function a(k, l) {
    var j = new b();
    if (l) {
      j.maxDepth = l
    }
    return j.deepCopy(k)
  }
  a.DeepCopier = f;
  a.deepCopiers = g;
  a.register = function(j) {
    if (!(j instanceof f)) {
      j = new f(j)
    }
    g.unshift(j)
  };
  a.register({
    canCopy: function(j) {
      return true
    },
    create: function(j) {
      if (j instanceof j.constructor) {
        return i(j.constructor.prototype)
      } else {
        return {}
      }
    },
    populate: function(k, m, j) {
      for (var l in m) {
        if (m.hasOwnProperty(l) && l != "gestures") {
          j[l] = k(m[l])
        }
      }
      return j
    }
  });
  a.register({
    canCopy: function(j) {
      return (j instanceof Array)
    },
    create: function(j) {
      return new j.constructor()
    },
    populate: function(k, m, j) {
      for (var l = 0; l < m.length; l++) {
        j.push(k(m[l]))
      }
      return j
    }
  });
  a.register({
    canCopy: function(j) {
      return (j instanceof Date)
    },
    create: function(j) {
      return new Date(j)
    }
  });

  function d(j) {
    if (window.Node) {
      return j instanceof Node
    } else {
      if (j === document) {
        return true
      }
      return (typeof j.nodeType === "number" && j.attributes && j.childNodes && j.cloneNode)
    }
  }
  a.register({
    canCopy: function(j) {
      return d(j)
    },
    create: function(j) {
      if (j === document) {
        return document
      }
      return j.cloneNode(false)
    },
    populate: function(k, m, j) {
      if (m === document) {
        return document
      }
      if (m.childNodes && m.childNodes.length) {
        for (var l = 0; l < m.childNodes.length; l++) {
          var n = k(m.childNodes[l]);
          j.appendChild(n)
        }
      }
    }
  });
  return {
    DeepCopyAlgorithm: b,
    copy: h,
    clone: i,
    deepCopy: a
  }
})();
$KI.i18n = {
  setcurrentlocaleasync: function(b, a, c, d) {
    if (!b) {
      console.warn("No locale specified");
      return
    }
    $KG.oldlocale = $KI.i18n.getcurrentlocale();
    $KI.i18n.initializeI18n(b, null, a, c, d)
  },
  setdefaultlocaleasync: function(b, a, f, h) {
    if (!b) {
      console.warn("No locale specified");
      return
    }
    try {
      var c = (localStorage && localStorage.getItem("i18nVersion")) || "";
      if (!$KG.i18nVersion || c != $KG.i18nVersion) {
        try {
          localStorage.setItem("i18nVersion", $KG.i18nVersion)
        } catch (g) {
          if (localStorage && (g.name == "QUOTA_EXCEEDED_ERR" || g.name == "QuotaExceededError")) {
            if (localStorage.length === 0) {
              console.warn("Private Browsing is switched ON")
            } else {
              console.warn("Data storage limit has exceeded")
            }
          } else {
            console.warn("localStorage is not available")
          }
        }
        $KI.i18n.cleanupI18nCache()
      }
    } catch (d) {}
    $KG.oldlocale = $KG.defaultlocale;
    $KG.defaultlocale = b;
    var b = $KI.i18n.determineCurrentLocale();
    $KI.i18n.initializeI18n(b, null, a, f, h)
  },
  setdefaultlocale: function() {
    var a = arguments[0] || null,
      h = arguments[1] || null,
      b = arguments[2] || null,
      g = arguments[3] || null;
    if (!a) {
      console.warn("No locale specified");
      return
    }
    if (g) {
      $KG.locales = $KG.locales.split(",");
      try {
        var c = (localStorage && localStorage.getItem("i18nVersion")) || "";
        if (!$KG.i18nVersion || c != $KG.i18nVersion) {
          try {
            localStorage.setItem("i18nVersion", $KG.i18nVersion)
          } catch (f) {
            if (localStorage && (f.name == "QUOTA_EXCEEDED_ERR" || f.name == "QuotaExceededError")) {
              if (localStorage.length === 0) {
                console.warn("Private Browsing is switched ON")
              } else {
                console.warn("Data storage limit has exceeded")
              }
            } else {
              console.warn("localStorage is not available")
            }
          }
          $KI.i18n.cleanupI18nCache()
        }
      } catch (d) {}
    }
    var a = $KI.i18n.determineCurrentLocale();
    $KI.i18n.initializeI18n(a, g, h, b)
  },
  setcurrentlocale: function(a) {
    if (!a) {
      return
    }
    $KI.i18n.initializeI18n(a)
  },
  getcurrentlocale: function() {
    return $KG.currentlocale
  },
  getsupportedlocales: function() {
    console.warn("getsupportedlocales: Not supported!");
    var a = $KU.getBrowserLanguage();
    return IndexJL ? [null, a] : [a]
  },
  getcurrentdevicelocale: function() {
    var c = $KU.getBrowserLanguage();
    var a = c.split("-");
    var b = {};
    b.language = a[0];
    b.country = a[1];
    b.name = c;
    return b
  },
  updateresourcebundle: function(j, i) {
    if (!i || !j) {
      return
    }
    var a = {};
    var f = $KG.appid + "_" + i;
    try {
      if ($KG[f]) {
        a = $KG[f]
      } else {
        if (localStorage) {
          var b = localStorage.getItem(f);
          if (b) {
            a = JSON.parse(b)
          }
        }
      }
    } catch (d) {}
    $KU.mergeObjects(a, j);
    try {
      try {
        if (!$KG[f]) {
          var h = JSON.stringify(a);
          localStorage.setItem(f, h)
        }
      } catch (g) {
        $KG[f] = a;
        if (localStorage && (g.name == "QUOTA_EXCEEDED_ERR" || g.name == "QuotaExceededError")) {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        } else {
          console.warn("localStorage is not available")
        }
      }
    } catch (d) {}
    if ($KG[f]) {
      $KG[f] = a
    }
    if ($KG.currentlocale == i) {
      $KG.i18nArray = $KU.convertObjectToArray(a)
    }
    var c = $KG.locales;
    if (!$KU.inArray(c, i, true)) {
      c.push(i)
    }
  },
  setresourcebundle: function(c, b) {
    if (!b || !c) {
      return
    }
    var d = JSON.stringify(c);
    var g = $KG.appid + "_" + b;
    try {
      try {
        localStorage.setItem(g, d)
      } catch (i) {
        $KG[g] = c;
        if (localStorage && (i.name == "QUOTA_EXCEEDED_ERR" || i.name == "QuotaExceededError")) {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        } else {
          console.warn("localStorage is not available")
        }
      }
    } catch (f) {}
    if ($KG.currentlocale == b) {
      var h = JSON.parse(d);
      $KG.i18nArray = $KU.convertObjectToArray(h)
    }
    var a = $KG.locales;
    if (!$KU.inArray(a, b, true)) {
      a.push(b)
    }
  },
  deleteresourcebundle: function(a) {
    var c = $KG.appid + "_" + a;
    try {
      localStorage && localStorage.removeItem(c)
    } catch (b) {}
    $KG[c] = "";
    if ($KG.currentlocale == a) {
      $KG.i18nArray = []
    }
    $KU.removeArray($KG.locales, a)
  },
  isresourcebundlepresent: function(a) {
    if (!a) {
      return false
    }
    var b = $KU.inArray($KG.locales, a, true);
    if (b) {
      return true
    } else {
      var d = $KG.appid + "_" + a;
      var e = null;
      try {
        e = (localStorage && localStorage.getItem(d)) || $KG[d]
      } catch (c) {}
      if (e) {
        return true
      } else {
        return false
      }
    }
  },
  islocalesupportedbydevice: function(a) {
    console.warn("islocalesupportedbydevice: Method Not supported");
    return false
  },
  getlocalizedstring: function(a) {
    var b = $KG.i18nArray[a];
    return typeof(b) == "undefined" ? null : b
  },
  determineCurrentLocale: function() {
    var d = $KG.locales;
    var g = $KG.defaultlocale;
    var f = $KU.getBrowserLanguage();
    var c = f.replace("-", "_");
    var e = "";
    var a = $KU.inArray(d, c, true);
    if (a) {
      e = c
    } else {
      var f = c.split("_")[0];
      var b = $KU.inArray(d, f, true);
      if (b) {
        e = f
      } else {
        e = g
      }
    }
    return e
  },
  initializeI18n: function(i, b, e, g, c) {
    if (!$KG.i18nArray) {
      $KG.i18nArray = []
    }
    var f = $KG.appid + "_" + i;
    var a;
    try {
      if (localStorage) {
        a = localStorage.getItem(f)
      }
    } catch (d) {}
    if (!a) {
      $KI.i18n.getResource(i, b, e, g, c)
    } else {
      var h = JSON.parse(a);
      $KG.i18nArray = $KU.convertObjectToArray(h);
      $KG.i18nInitialized = true;
      $KG.currentlocale = i;
      b && b();
      e && e($KG.oldlocale, i, c)
    }
  },
  getResource: function(k, b, f, j, c) {
    var d = "";
    if ($KG.appmode == constants.APPLICATION_MODE_NATIVE) {
      d = $KG.platformver + kony.constants.RESOURCES_PATH + "/" + kony.constants.TRANSLATION_PATH + "/" + k + "." + kony.constants.TRANSLATION_EXT + "?ver=" + $KG.version
    } else {
      d = kony.constants.RESOURCES_PATH + "/" + kony.constants.TRANSLATION_PATH + "/" + k + "." + kony.constants.TRANSLATION_EXT + "?ver=" + $KG.version
    }
    var h = document.getElementsByTagName("head")[0];
    var i = document.createElement("script");
    i.src = d;
    var a = setTimeout(function() {
      console.error("Timeout while loading resource bundle.");
      $KG.i18nInitialized = true;
      b && b()
    }, 60000);
    var g = function() {
      kony.print("i18n resource loaded successfully");
      clearTimeout(a);
      $KG.i18nInitialized = true;
      $KG.currentlocale = k;
      if (typeof i18nObject != "undefined" && i18nObject) {
        $KI.i18n.insertDB(i18nObject, k);
        i18nObject = ""
      }
      b && b();
      f && f($KG.oldlocale, $KI.i18n.getcurrentlocale(), c)
    };
    var e = function() {
      console.error("An error has occurred while loading i18 locales");
      clearTimeout(a);
      $KG.i18nInitialized = true;
      b && b();
      j && j($KG.oldlocale, $KI.i18n.getcurrentlocale(), c)
    };
    if (!i.addEventListener) {
      i.onreadystatechange = function() {
        if (this.readyState == "complete" || this.readyState == "loaded") {
          i.onreadystatechange = null;
          g()
        }
      }
    } else {
      i.onload = g;
      i.onerror = e
    }
    h.appendChild(i)
  },
  insertDB: function(f, b) {
    var d = $KG.appid + "_" + b;
    var h, a;
    if (typeof f == "string") {
      h = JSON.parse(f);
      a = f
    } else {
      h = f;
      a = JSON.stringify(f)
    }
    try {
      try {
        localStorage.setItem(d, a)
      } catch (g) {
        $KG[d] = h;
        localStorage && localStorage.removeItem("i18nVersion");
        if (localStorage && (g.name == "QUOTA_EXCEEDED_ERR" || g.name == "QuotaExceededError")) {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        } else {
          console.warn("localStorage is not available")
        }
      }
    } catch (c) {}
    $KG.i18nArray = $KU.convertObjectToArray(h)
  },
  translateFormModel: function(a) {
    for (var c in a) {
      var b = a[c];
      if (typeof b != "object" || $KU.isArray(b) || !b) {
        continue
      }
      if ($KU.inArray($KU.translatableWidgets, b.wType, true)) {
        if (b.i18n_text && b.i18n_text.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
          b.canUpdateUI = false;
          b.text = $KU.getI18NValue(b.i18n_text);
          b.canUpdateUI = true
        }
      }
    }
  },
  checkI18nStatus: function(a, b) {
    if (!$KG.localization || typeof a != "object" || $KU.isArray(a)) {
      return
    }
    if (b == "text" && a.i18n_text) {
      a.i18n_text = ""
    }
  },
  cleanupI18nCache: function() {
    var e = $KG.locales;
    for (var b = 0; b < e.length; b++) {
      var a = e[b];
      var d = $KG.appid + "_" + a;
      try {
        localStorage && localStorage.removeItem(d)
      } catch (c) {}
      $KG[d] = ""
    }
  },
  getI18nTitle: function(a) {
    var b = a.title;
    if (a.i18n_title && a.i18n_title.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
      return $KU.getI18NValue(a.i18n_title)
    } else {
      return b
    }
  }
};
$KW.formTransitionsMatrix = {
  topCenter: "slidetopin",
  bottomCenter: "slidebottomin",
  rightCenter: "sliderightin",
  leftCenter: "slideleftin",
  fadeAnimation: "fadein"
};
$KW.formEndTransitionsMatrix = {
  rightCenter: "sliderightout",
  leftCenter: "slideleftout",
  topCenter: "slidetopout",
  bottomCenter: "slidebottomout",
  fadeAnimation: "fadeout"
};
$KW.stringifyScrolldirection = {
  1: "horizontal",
  2: "vertical",
  3: "both",
  4: "none"
};
$KW.Widget = {
  setvisibility: function(d, k) {
    if (d) {
      if (d.parent && d.parent.wType == "TabPane") {
        return
      }
      d.isvisible = k;
      var f, l, c;
      if (d.wType == "Tab") {
        c = kony.model.getWidgetModel(d.pf, d.parent && d.parent.id);
        if (c.view === "tabview") {
          f = $KU.getElementById(d.pf + "_" + d.id + "_Li");
          l = $KU.getElementById(d.pf + "_" + d.id + "_Body")
        } else {
          f = $KU.getNodeByModel(d)
        }
      } else {
        f = $KW.Utils.getWidgetNode(d)
      }
      if (f) {
        if (d.wType == "CheckBoxGroup" || d.wType == "ComboBox" || d.wType == "RadioButtonGroup" || d.wType == "ListBox" || d.wType == "Segment") {
          var e = d.masterdata || d.data || $KW.Utils.getMasterData(d);
          if (!e || (e && e.length <= 0)) {
            k = false
          }
        }
        var m = $KU.isFlexWidget(d);
        var n = m ? f.parentNode : f;
        if (k.toString() == "false") {
          $KU.addClassName(n, "hide")
        } else {
          $KU.removeClassName(n, "hide");
          if (d.wType == "Tab" && c.view === "tabview") {
            f.style.display = "inline"
          }
        }
        this.onVisibilityChange(d, k);
        if (d.viewtype && d.viewtype == "pageview") {
          d.isvisible && $KW.touch.computeWidths($KU.getNodeByModel(d), d);
          f.nextSibling && $KU.toggleVisibilty(f.nextSibling, d.data || d.masterdata, d, false)
        }
        if (k && d.viewtype == "stripview") {
          $KW.HStrip.refreshScroller(d, f)
        }
        if (k && d.wType === "Switch") {
          $KW.Switch.adjustWidth(d, f, false);
          $KW.Switch.adjustHeight(d, f)
        }
        if (k && d.wType === "Calendar") {
          $KW.Calendar.setCalElementStyle(f.childNodes[0], true);
          k && $KW.Calendar.adjustCalendars(d)
        }
        if (k && d.wType == "Slider") {
          var a = $KU.getNodeByModel(d);
          $KW.Slider.imgLoad(a.childNodes[0])
        }
        k && d.ownchildrenref && $KW.Utils.reinitializeWidgets(d);
        if (typeof google != "undefined") {
          $KW.Utils.resizeMap(d)
        }
      } else {
        c = kony.model.getWidgetModel(d.pf, d.parent && d.parent.id);
        if (c && c.viewtype === "tabview") {
          f = $KU.getElementById(d.pf + "_" + d.id + "_Li");
          l = $KU.getElementById(d.pf + "_" + d.id + "_Body");
          if (k.toString() == "false") {
            $KU.addClassName(f, "hide")
          } else {
            $KU.removeClassName(f, "hide");
            if (c.viewtype === "tabview") {
              f.style.display = "inline"
            }
          }
        } else {
          f = $KU.getNodeByModel(d)
        }
      }
      if (l) {
        var h = f.getAttribute("index");
        if (k == false || k == "false") {
          $KU.addClassName(l, "hide")
        } else {
          if (c && ((c.activetab - IndexJL) == parseInt(h))) {
            $KU.removeClassName(l, "hide")
          }
        }
      }
      if (k) {
        if (d.id) {
          var b = d.pf || "";
          var j = $KU.getElementById(b + "_" + d.id);
          var g = j && j.querySelectorAll("#" + b + " div[kwidgettype='Line'][direction='V']");
          if (g && g.length > 0) {
            $KW.Line.initializeView(b)
          }
        }
      }
    }
  },
  onVisibilityChange: function(a, b) {
    $KU.updateLayoutConfig(a);
    $KU.updateAutoGrowFlexConfig(a);
    b && a.ownchildrenref && $KU.updateWidgetsConfig(a, a.ownchildrenref)
  },
  setenabled: function(h, n) {
    if (!h || typeof n != "boolean") {
      return
    }
    h.disabled = !n;
    var b = h.pf + "_" + h.id;
    if ((h.wType == "Tab" || h.name == "kony.ui.Tab")) {
      if (h.parent.viewtype == "tabview") {
        var k = $KU.getElementById(b + "_A");
        if (k) {
          k.disabled = !n;
          k.setAttribute("kdisabled", !n);
          var a = $KU.getElementById(b + "_Body");
          a.setAttribute("kdisabled", !n);
          b = b + "_Body"
        }
      }
      if (h.parent.viewtype == "collapsibleview") {
        b = b + "_Tab"
      }
    }
    var c = document.querySelectorAll("#" + b + ", #" + b + " [kwidgettype]");
    var d, m, e;
    for (i = 0; i < c.length; i++) {
      d = c[i];
      m = d.getAttribute("kwidgettype");
      e = d.getAttribute("tpwidgettype");
      if ($KU.isWindowsPhone && $KU.isIE9 && d.tagName == "SELECT") {
        for (var g = 0; g < d.childNodes.length; g++) {
          d.children[g].disabled = !n
        }
      }
      if (m != "Link" && m != "Label" && m != "HBox" && m != "VBox") {
        d.disabled = !n
      }
      if (m == "RichText") {
        var l = document.querySelectorAll("#" + d.id + " a")
      }
      if (m == "RichText" && l && !n) {
        d.ishref = true;
        d.innerHTML = d.innerHTML.replace(/href=["'].*?["']/g, "href='javascript:void(0)'")
      } else {
        if (d.ishref) {
          d.innerHTML = h.text
        }
      }
      if (m == "Link") {
        d.setAttribute("kdisabled", !n)
      }
      if (m == "ComboBox" && d.childNodes[0] && d.childNodes[0].tagName == "INPUT") {
        d.childNodes[0].disabled = !n
      }
      if ((m == "RadioButtonGroup" || m == "CheckBoxGroup") && d.tagName == "INPUT" && h.itemorientation == "vertical") {
        d.parentNode.setAttribute("kdisabled", !n)
      }
      if (h.wType == "Label") {
        var f = !!(n && h.textCopyable) ? "text" : "none";
        if ("MozUserSelect" in d.style) {
          d.style.MozUserSelect = f
        } else {
          if ("webkitUserSelect" in d.style) {
            d.style.webkitUserSelect = f
          } else {
            if ("msUserSelect" in d.style) {
              d.style.msUserSelect = f
            }
          }
        }
      }
      if (m == "Video") {
        if (n) {
          d.oncontextmenu = "";
          d.playing && d.paused && d.play();
          if (h.controls) {
            d.setAttribute("controls", "controls")
          }
        } else {
          d.playing && d.pause();
          d.removeAttribute("controls");
          d.oncontextmenu = function() {
            return false
          }
        }
      }
      d.setAttribute("kdisabled", !n);
      if (h.wType === "Map" && (d.getAttribute("kwidgettype") === "Map" || d.getAttribute("kwidgettype") === "googlemap")) {
        h.disabled = !n;
        $KW.Map.setEnabledMap(h, d)
      }
    }
  },
  setfocus: function(c, d, b) {
    var a = (b) ? b : $KU.getNodeByModel(c);
    a && $KW.Utils.scrollToElement(c, a)
  },
  addgesturerecognizer: function(a, b, d, e) {
    if (!a) {
      return null
    }
    var c = $KW.Utils.updateModelWithGesture(a, b, d, e);
    return (new $KW.touch.gesture(a, c)).gestureIdentifier
  },
  setgesturerecognizer: function(b, c, e, f) {
    if (!b) {
      return null
    }
    var a = (c == 1 ? (e.taps == 1 ? 10 : 11) : c);
    $KW.Widget.removegesturerecognizer(b, a);
    var d = $KW.Utils.updateModelWithGesture(b, c, e, f);
    return (new $KW.touch.gesture(b, d)).gestureIdentifier
  },
  removegesturerecognizer: function(c, d) {
    var b = d;
    if (typeof(d) === "string") {
      var a = ($KG.gestures && $KG.gestures[d]) ? $KG.gestures[d] : null;
      if (!a) {
        return
      }
      c = a.widgetModel;
      d = a.gestureType;
      delete $KG.gestures[b]
    }
    if (!c) {
      return
    }
    if (d == constants.GESTURE_TYPE_TAP) {
      $KW.Utils.removegesture(c, 10, true, b);
      $KW.Utils.removegesture(c, 11, true, b)
    } else {
      $KW.Utils.removegesture(c, d, true, b)
    }
  },
  setgesturerecognizerforallforms: function(b, d, e) {
    var a = (b == 1 ? (d.taps == 1 ? 10 : 11) : b);
    $KW.Widget.removegesturerecognizerforallforms(a);
    var c = $KW.Utils.updateModelWithGesture("", b, d, e);
    return (new $KW.touch.gesture("", c)).gestureIdentifier
  },
  addgesturerecognizerforallforms: function(a, c, d) {
    var b = $KW.Utils.updateModelWithGesture("", a, c, d);
    return (new $KW.touch.gesture("", b)).gestureIdentifier
  },
  removegesturerecognizerforallforms: function(c) {
    if (typeof c == "string") {
      var a = ($KG.gestures && $KG.gestures[c]) ? $KG.gestures[c] : null;
      if (!a) {
        return
      }
      var b = c;
      c = a.gestureType;
      delete $KG.gestures[b]
    }
    $KW.Widget.removegesturerecognizer($KG, c)
  },
  getPreferredSize: function(d, b) {
    var a = {
      width: 0,
      height: 0
    };
    var c = $KW.Utils.getWidgetNode(d);
    if (c && b) {
      a.width = this.getPreferredWidth(d, c, b.width);
      a.height = this.getPreferredHeight(d, c, b.height);
      var e = c.parentNode;
      e.style.maxWidth = e.style.maxHeight = ""
    }
    return a
  },
  getPreferredWidth: function(e, f, g, h) {
    var a = f.parentNode;
    var c = a.style.width;
    var j = $KW.Utils.getDefaultWidth(e);
    a.style.width = j ? j : "auto";
    if (g != Number.MAX_VALUE) {
      a.style.maxWidth = g + "px"
    }
    if (!j) {
      var b = f.style.whiteSpace;
      f.style.whiteSpace = "nowrap";
      f.style.whiteSpace = (a.offsetWidth >= g) ? "pre-wrap" : "nowrap"
    }
    var d = a.offsetWidth;
    if (h == false) {
      a.style.width = c;
      if (!j) {
        f.style.whiteSpace = b
      }
    }
    return d
  },
  getPreferredHeight: function(e, f, l, m) {
    var j, k;
    var b = f.parentNode;
    var h = b.style.height;
    var a = $KW.Utils.getDefaultHeight(e);
    if (e.wType == "Segment" && e.viewtype == constants.SEGUI_VIEW_TYPE_TABLEVIEW) {
      if (e.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
        a = "auto";
        if (l == Number.MAX_VALUE) {
          e.needScroller = false;
          var d = $KG[f.id];
          d && d.destroy()
        }
      }
    }
    if (e.wType == "FlexContainer" && e.autogrowMode == kony.flex.AUTOGROW_HEIGHT && e.canMeasureChildrenHeight) {
      e.autogrowHeight = true;
      var g = e.parent;
      if (g && g.autogrowHeight && g.canMeasureChildrenHeight) {
        return b.offsetHeight
      }
      a = "auto"
    }
    b.style.height = a ? a : "auto";
    if (e.wType == "Image") {
      var n = f.childNodes[0];
      if (m == false) {
        j = n.style.width;
        k = n.style.height
      }
      n.style.height = n.style.width = "auto"
    }
    if (l != Number.MAX_VALUE) {
      b.style.maxHeight = l + "px"
    }
    var c = b.offsetHeight;
    if (m == false) {
      if (e.wType == "Image") {
        n.style.width = j;
        n.style.height = k
      }
      b.style.height = h
    }
    return c
  },
  convertPointToWidget: function(d, b, c) {
    var a = $KW.FlexLayoutEngine.toPointwidget(c, d, b.x, "x");
    var e = $KW.FlexLayoutEngine.toPointwidget(c, d, b.y, "y");
    return {
      x: a.value + a.unit,
      y: e.value + e.unit
    }
  },
  convertPointFromWidget: function(d, b, c) {
    var a = $KW.FlexLayoutEngine.toPointwidget(d, c, b.x, "x");
    var e = $KW.FlexLayoutEngine.toPointwidget(d, c, b.y, "y");
    return {
      x: a.value + a.unit,
      y: e.value + e.unit
    }
  }
};
$KW.skins = {
  getBaseStyle: function(c, a) {
    var b = "";
    if (c.backgroundColor) {
      var d = $KW.skins.validateHexValue(c.backgroundColor);
      if (d) {
        b += "background : " + $KW.skins.convertHexValuetoRGBA(c.backgroundColor) + "; "
      }
    }
    if (c.borderColor) {
      var d = $KW.skins.validateHexValue(c.borderColor);
      if (d) {
        b += "border-color : " + $KW.skins.convertHexValuetoRGBA(c.borderColor) + "; "
      }
    }
    if (c.borderWidth) {
      b += "border-width : " + c.borderWidth + "px; "
    }
    if (c.cornerRadius) {
      b += "border-radius : " + c.cornerRadius + "px; "
    }
    if (c.wType != "DataGrid") {
      b += $KW.skins.getMarginSkin(c, a)
    }
    if (c.wType != "Browser" && c.wType != "Segment" && c.wType != "FlexContainer" && c.wType != "FlexScrollContainer") {
      b += $KW.skins.getPaddingSkin(c)
    }
    return b
  },
  getMarginSkin: function(b, a) {
    if ($KU.isFlexWidget(b)) {
      return ""
    }
    a = a || {};
    var d = b.parent;
    var c = b.margin;
    if ($KG.appbehaviors && $KG.appbehaviors.applyMarginPaddingInBCGMode == true) {
      if ($KU.isArray(c)) {
        return "margin:" + $KU.joinArray(c, "% ") + "%;"
      } else {
        return "margin:0;"
      }
    } else {
      if ((!d || (d.wType == "HBox" && a.ispercent == false)) || (d.wType != "HBox" && !(d.wType == "ScrollBox" && d.orientation == constants.BOX_LAYOUT_HORIZONTAL))) {
        if ($KU.isArray(c)) {
          return "margin:" + $KU.joinArray(c, "% ") + "%;"
        } else {
          return "margin:0;"
        }
      } else {
        return ""
      }
    }
  },
  getChildMarginAsPaddingSkin: function(b) {
    var e = $KU.getParentModel(b);
    if (($KG.appbehaviors.applyMarginPaddingInBCGMode == true)) {
      return ""
    }
    var d = b.margin;
    var a = 0;
    if ($KU.isArray(d) && e && e.wType == "ScrollBox" && e.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
      var c = e.totalWt;
      while (a < 4) {
        d[a] = c && (d[a] * 100) / c;
        a++
      }
      return "padding:" + $KU.joinArray(d, "% ") + "%;"
    }
    if ($KU.isArray(d)) {
      return "padding:" + $KU.joinArray(d, "% ") + "%;"
    } else {
      return ""
    }
  },
  getPaddingSkin: function(c) {
    if (c.wType != "DataGrid" && ($KU.isFlexContainer(c) || $KU.isFlexWidget(c))) {
      return ""
    }
    var f = c.parent;
    var e = c.padding;
    var d = c.margin;
    if ((typeof($KG.appbehaviors.parentLevelPadding) == "undefined" || $KG.appbehaviors.parentLevelPadding == true) && $KG.appbehaviors.applyMarginPaddingInBCGMode == false && f != null && f.wType == "HBox" && f.percent == true) {
      if (e && $KU.isArray(e) && d && $KU.isArray(d)) {
        var g = 100 / (c.containerweight - (parseInt(d[0 + IndexJL]) + parseInt(d[2 + IndexJL])));
        var a = [];
        var h = c.padding;
        for (var b = 0; b < h.length; b++) {
          a[b] = h[b] * g
        }
        return "padding:" + $KU.joinArray(a, "% ") + "%;"
      }
    } else {
      if ($KU.isArray(e)) {
        return "padding:" + $KU.joinArray(e, "% ") + "%;"
      } else {
        return "padding:0%;"
      }
    }
  },
  setMarginPadding: function(e, c, f, b, a) {
    var e = $KW.Utils.getWidgetNode(f);
    if (e) {
      if (typeof a != "number") {
        a = 100
      }
      var g = $KW.skins.getMarPadAdjustedContainerWeightSkin(f, a);
      e.className = e.className.replace(/\kwt/g, "_");
      var d = f.parent;
      if (($KG.appbehaviors && $KG.appbehaviors.applyMarginPaddingInBCGMode == false) && (d && d.percent && (d.wType == "HBox" || (d.wType == "ScrollBox" && d.orientation == constants.BOX_LAYOUT_HORIZONTAL)))) {
        $KU.addClassName(e, "kwt100");
        c = "padding";
        e = e.parentNode;
        e.style[c] = $KU.joinArray(b, "% ") + "%"
      } else {
        if (!((d.wType == "HBox" || d.wType == "ScrollBox") && !d.percent)) {
          $KU.addClassName(e, g)
        }
        e.style[c] = $KU.joinArray(b, "% ") + "%"
      }
    }
  },
  getMarAdjustedContainerWeightSkin: function(c, b) {
    var a = b || ((c.wType == "HBox") ? "100" : c.containerweight);
    if (a) {
      var d = c.margin;
      if (d) {
        a -= (parseInt(d[0 + IndexJL]) + parseInt(d[2 + IndexJL]))
      }
      if (c.padding && kony.appinit.isIE7) {
        var e = c.padding;
        a -= (parseInt(e[0 + IndexJL]) + parseInt(e[2 + IndexJL]))
      }
      $KW.skins.addWidthRule(a);
      return "kwt" + a
    } else {
      return "kwt100"
    }
  },
  addWidthRule: function(a) {
    if (a > 100 && $KG.cwtexists.indexOf(a) == -1) {
      $KG.cwtexists.push(a);
      var b = window.document.styleSheets;
      var e = $KW.Utils.getKonyStyleSheetIndex(b);
      if (e != -1) {
        var c = b[e];
        var d = c.cssRules || c.rules;
        if (c.insertRule) {
          c.insertRule(".kwt" + a + "{width:" + a + "%;}", d.length)
        } else {
          c.addRule(".kwt" + a, "width:" + a + "%;")
        }
      }
    }
  },
  getMarPadAdjustedContainerWeightSkin: function(c, b) {
    var a = b || c.containerweight;
    if (a) {
      try {
        var d = c.margin;
        if (d) {
          a -= (parseInt(d[0 + IndexJL]) + parseInt(d[2 + IndexJL]))
        }
        if (c.padding && kony.appinit.isIE7) {
          var g = c.padding;
          a -= (parseInt(g[0 + IndexJL]) + parseInt(g[2 + IndexJL]))
        }
        return "kwt" + a
      } catch (f) {
        console.error("Error occured in getting container weight " + f)
      }
    } else {
      return "kwt100"
    }
  },
  getWidgetSkin: function(c, b) {
    var e;
    if (b && b.container) {
      var d = b.container.widgetsData;
      var a = d[c.id];
      if (a && a.skin) {
        e = a.skin
      }
    }
    return e || c.skin || this.getDefaultSkin(c) || ""
  },
  getDefaultSkin: function(a) {
    var b = "";
    if (a.wType == "Link" || a.wType == "Label" || a.wType == "Button" || a.wType == "DataGrid" || a.wType == "RichText" || a.wType == "CheckBoxGroup" || a.wType == "RadioButtonGroup" || a.wType == "ComboBox" || a.wType == "ListBox" || a.wType == "Switch") {
      b = "konycustomcss"
    }
    return b
  },
  getWidgetSkinList: function(c, a, d) {
    var e = [];
    a = a || {};
    if (!(c.wType == "FlexContainer" && c.parent && c.parent.wType == "TabPane")) {
      e.push(this.getWidgetWeight(c, a));
      if (c.wType != "Form") {
        e.push(this.getWidgetSkin(c, a))
      }
    }
    var b = $KU.isFlexWidget(c);
    if (!b && (!$KW.Utils.isWidgetVisible(c, a) || (d && d.length <= IndexJL))) {
      e.push("hide")
    }
    return e.join(" ")
  },
  getVisibilitySkin: function(a) {
    var b = $KU.isFlexWidget(a);
    return (!b && !a.isvisible) ? " hide " : ""
  },
  getWidgetWeight: function(b, a) {
    var c = b.parent;
    if (c && ((c.wType == "HBox" || c.wType == "ScrollBox") && c.percent == false) || $KU.isFlexWidget(b)) {
      return ""
    }
    if (c && ($KG.appbehaviors && $KG.appbehaviors.applyMarginPaddingInBCGMode == false && c.wType == "HBox")) {
      return "kwt100"
    } else {
      return this.getMarAdjustedContainerWeightSkin(b, 100)
    }
  },
  getWidgetSelectionSkin: function(a) {
    if (a.wType == "Label" || a.wType == "Button" || a.wType == "Line" || a.wType == "Link" || a.wType == "Switch" || a.wType == "ListBox" || a.wType == "CheckBoxGroup" || a.wType == "ComboBox" || a.wType == "RadioButtonGroup" || a.wType == "Calendar") {
      return (a.wType == "Label" && a.textCopyable) ? "enableSelection" : "disableSelection"
    }
    return ""
  },
  getSplitSkinsBetweenWidgetAndParentDiv: function(d, c) {
    var f = new Array();
    var e = "";
    var b = "";
    var g = "";
    if (d.wType == "HBox" || d.wType == "VBox") {
      g = this.getMarPadAdjustedContainerWeightSkin(d, 100)
    } else {
      g = this.getMarAdjustedContainerWeightSkin(d, 100)
    }
    var a = this.getWidgetSkin(d, c);
    f[0] = e + " " + b + "  " + a + " ";
    f[1] = g;
    f[2] = e + " " + b + "  " + a + " " + g;
    return f
  },
  getWidgetAlignmentSkin: function(a) {
    var b = (a.wType == "IGallery" ? "middleleftalign" : "middlecenteralign");
    if (a.wType == "HBox" || a.wType == "ScrollBox") {
      return this.getBoxAlignment(a)
    }
    return this.getAlignment(a.widgetalign || a.widgetalignment) || b
  },
  getAlignment: function(a) {
    switch (parseInt(a)) {
      case 1:
        return "topleftalign";
      case 2:
        return "topcenteralign";
      case 3:
        return "toprightalign";
      case 4:
        return "middleleftalign";
      case 5:
        return "middlecenteralign";
      case 6:
        return "middlerightalign";
      case 7:
        return "bottomleftalign";
      case 8:
        return "bottomcenteralign";
      case 9:
        return "bottomrightalign"
    }
    return ""
  },
  getContentAlignment: function(a, b) {
    var b = b || a.contentalignment;
    if (a.wType == "DataGrid") {
      return this.getAlignment(b)
    }
    switch (parseInt(b)) {
      case 1:
      case 4:
      case 7:
        return "left";
      case 2:
      case 5:
      case 8:
        return "center";
      case 3:
      case 6:
      case 9:
        return "right"
    }
    return "left"
  },
  getBoxAlignment: function(b) {
    var a = "middlecenteralign";
    if (b.wType == "VBox") {
      switch (parseInt(b.widgetdirection)) {
        case 0:
          a = "topcenteralign";
          break;
        case 1:
          a = "middlecenteralign";
          break;
        case 2:
          a = "bottomcenteralign";
          break
      }
    } else {
      switch (parseInt(b.widgetdirection)) {
        case constants.BOX_LAYOUT_ALIGN_FROM_LEFT:
          a = "middleleftalign";
          break;
        case constants.BOX_LAYOUT_ALIGN_FROM_CENTER:
          a = "middlecenteralign";
          break;
        case constants.BOX_LAYOUT_ALIGN_FROM_RIGHT:
          a = "middlerightalign";
          break
      }
    }
    return a
  },
  validateHexValue: function(a) {
    return (/(^[0-9A-F]{8}$)|(^[0-9A-F]{6}$)/i.test(a))
  },
  convertHexValuetoRGBA: function(h) {
    var f = h.charAt(0) + h.charAt(1);
    var e = h.charAt(2) + h.charAt(3);
    var c = h.charAt(4) + h.charAt(5);
    var d = 0;
    if (h.length == 6) {
      return "#" + f + e + c
    }
    if (h.length > 6 && h.length <= 8) {
      d = h.charAt(6) + h.charAt(7)
    }
    f = parseInt(f, 16);
    e = parseInt(e, 16);
    c = parseInt(c, 16);
    d = ((100 - parseInt(d, 16)) / 100).toFixed(2);
    return "rgba(" + f + "," + e + "," + c + "," + d + ")"
  }
};
$KW.Utils = {
  getBaseHtml: function(f, e, k, h, l) {
    var c = f.tabId || "";
    var j = e.tabID || "";
    var d = k ? f.id : (f.pf + (c && ("_" + c)) + "_" + f.id);
    var o = e.tabpaneID || "";
    var p = (e.container && e.container.id) || "";
    var b = f.tooltip || "";
    var n = this.isWidgetDisabled(f, e) || false;
    if (p && (f.wType == "Calendar")) {
      d = d + "_" + e.container.counter
    }
    if (o) {
      f.tabpaneId = o
    }
    if (p) {
      f.containerId = p
    }
    var g = n ? (" kdisabled='true' " + ((f.wType != "Image" && f.wType != "HBox" && f.wType != "VBox" && f.wType != "Link" && f.wType != "Label") ? "disabled=" + n : "")) : "";
    var a = f.contextmenu || "";
    var q = $KU.getAccessibilityValues(f);
    var m = "";
    if (f.onhover) {
      m = "onmouseenter= '$KI.HoverEvent.executeHoverEvent(event, this)' onmousemove= '$KI.HoverEvent.executeHoverEvent(event, this)' onmouseout= '$KI.HoverEvent.executeHoverEvent(event, this)'"
    }
    if (f.wType == "Image" || f.wType == "Switch" || f.wType == "Link" || f.wType == "Label" || f.wType == "RichText" && f.wType != "ScrollBox") {
      q += " tabindex='0'"
    }
    return q + " id='" + d + "' kwidgettype='" + f.wType + "' kformname='" + f.pf + "'" + (o && " ktabpaneid='" + o + "'") + (j && " ktabid='" + j + "'") + (p && " kcontainerID = '" + p + "'") + (a && " kcontextmenuid = '" + a.id + "'") + g + (b ? " title= '" + b + "'" : "") + m + " "
  },
  isWidgetDisabled: function(a, b) {
    if (b && b.container && b.container.widgetsData) {
      return this.isContainerWidgetDisabled(a, b)
    }
    if (a.disabled) {
      return true
    }
    var d = a.pf;
    var c = a.parent;
    while (c) {
      if (c.disabled || (d == (c.parent && c.parent.id))) {
        return c.disabled
      }
      c = c.parent
    }
  },
  isContainerWidgetDisabled: function(a, c) {
    var f = c.container.widgetsData;
    var b = f[a.id];
    if (b && b.enable != undefined && b.enable == false) {
      return true
    }
    var h = a.pf;
    var e, d;
    var g = a.parent;
    while (g) {
      e = f[g.id];
      d = (e && e.enable != undefined && e.enable == false);
      if (d || (c.container.id == g.id)) {
        return d
      }
      g = g.parent
    }
  },
  isWidgetVisible: function(a, c) {
    if (c && c.container && c.container.widgetsData) {
      var d = c.container.widgetsData;
      var b = d[a.id];
      if (b) {
        return (b.visible != undefined ? b.visible : a.isvisible)
      }
    }
    return a.isvisible
  },
  initializeNewWidgets: function(m) {
    if (m && m.length > 0) {
      for (var e = 0; e < m.length; e++) {
        var d = m[e];
        var j = d.wType;
        switch (j) {
          case "Segment":
            var g = $KU.getNodeByModel(d);
            if (g) {
              if (d.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
                $KG[g.id] = new $KW.touch.pageviewScroller(g, {
                  widgetModel: d
                });
                $KW.touch.computeWidths(g, d)
              }
              if (d.screenLevelWidget || d.needScroller) {
                d.needScroller && $KU.setScrollHeight(d, g)
              }
            }
            break;
          case "HStrip":
            var c = $KU.getNodeByModel(d);
            if (c) {
              if (d.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW) {
                $KW.HStrip.initializeStripView(c)
              }
              if (d.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_PAGEVIEW) {
                $KG[c.id] = new $KW.touch.pageviewScroller(c, {
                  widgetModel: d
                });
                $KW.HStrip.initializePageView(d, false, c);
                $KW.touch.computeWidths(c, d)
              }
              if (d.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_SLOTVIEW) {
                $KW.HStrip.initializeSlotView(d)
              }
            }
            break;
          case "ScrollBox":
            var o = $KU.getNodeByModel(d);
            if (o) {
              var n = o.parentNode.parentNode;
              $KW.Scroller.initialize([n], "ScrollBox");
              $KU.setScrollHeight(d, o)
            }
            break;
          case "FlexScrollContainer":
            break;
          case "Slider":
            var b = $KU.getNodeByModel(d);
            if (b) {
              $KW.Slider.attachSliderEvents(b.childNodes[0]);
              kony.events.addEventListener(b.parentNode, "click", $KW.Slider.slideClick)
            }
            break;
          case "Switch":
            var h = $KU.getNodeByModel(d);
            if (h) {
              $KW.Switch.adjustWidth(d, h, true);
              $KW.Switch.adjustHeight(d, h)
            }
            break;
          case "Video":
            if ($KU.isAndroid) {
              var a = $KU.getNodeByModel(d);
              kony.events.addEventListener(a, "click", function(p) {
                p = p || window.event;
                p.srcElement.play()
              }, false)
            }
            break;
          case "TabPane":
            var l = $KU.getNodeByModel(d);
            l && $KW.TabPane.setTabsHeight(l.id);
            $KW.touch.computeSnapWidths(l.id, "Tabpane");
            if (d.needScroller && l) {
              $KU.setScrollHeight(d, l)
            }
            break;
          case "Map":
            $KW.Map.loadMapScripts();
            $KW.Map.setUpInteractiveCanvasMap();
            $KW.Map.setMapsHeight(d.pf);
            break;
          case "Browser":
            var f = $KU.getNodeByModel(d);
            if (f && d.needScroller) {
              $KU.setScrollHeight(d, f)
            }
            break;
          case "Label":
            var k = $KU.getNodeByModel(d);
            if (k && d.linespacing) {
              $KW.Label.updateLineHeight(d, k)
            }
            break
        }
        if (d.ownchildrenref) {
          this.initializeNewWidgets(d.ownchildrenref);
          $KW.Utils.initializeGestures(d)
        }
        $KW.Utils.initializeGestures({
          newwidget: d
        })
      }
    }
  },
  reinitializeWidgets: function(b) {
    var h = b.ownchildrenref;
    for (var f = 0; f < h.length; f++) {
      var c = h[f];
      var g = c.wType;
      switch (g) {
        case "ScrollBox":
          var j = $KU.getNodeByModel(c);
          $KW.ScrollBox["updateView"](c, "totalWt", c.totalWt);
          $KU.setScrollHeight(c, j);
          break;
        case "Slider":
          var a = $KU.getNodeByModel(c);
          $KW.Slider.imgLoad(a.childNodes[0]);
          break;
        case "Calendar":
          var e = $KU.getNodeByModel(c);
          $KW.Calendar.setCalElementStyle(e.childNodes[0], true);
          break;
        case "Switch":
          var d = $KU.getNodeByModel(c);
          $KW.Switch.adjustWidth(c, d, false);
          $KW.Switch.adjustHeight(c, d);
          break;
        case "DataGrid":
          break
      }
      if (c.ownchildrenref) {
        this.reinitializeWidgets(c)
      }
    }
  },
  resizeMap: function(b) {
    var c = document.querySelector("#" + b.pf + " div[kwidgettype='googlemap']");
    if (c) {
      var a = $KU.getModelByNode(c);
      if (a.mapSource == "non-native") {
        google.maps.event.trigger($KW.Map.map, "resize")
      }
    }
  },
  updateContent: function(c, k, j, b, e, l) {
    var h = c[k];
    if (c.wType == "Segment" && c.hasSections && h && !["setdata", "removeall"].contains(b)) {
      $KW.Segment.updateSectionContent(h, j, b, e, l);
      return
    }
    switch (b) {
      case "setdata":
        c.canUpdateUI = false;
        c[k] = j;
        c.canUpdateUI = true;
        break;
      case "setdataat":
        c[k] && c[k].length > e && c[k].splice(e, 1, j);
        break;
      case "addall":
        var f = IndexJL ? [null] : [];
        var g;
        c.canUpdateUI = false;
        c[k] = c[k] || f;
        if (IndexJL && !j[0] && (j[1] && !j[1].template)) {
          g = $KU.cloneObj(j);
          g.shift()
        }
        c.canUpdateUI = true;
        $KU.addArray(c[k], g || j);
        break;
      case "addat":
      case "adddataat":
        if (c[k]) {
          var a = c[k].length - IndexJL;
          e = (e <= IndexJL) ? IndexJL : (e > a ? a + 1 : e);
          if ($KU.isArray(j)) {
            for (var d = IndexJL; d < j.length; d++) {
              c[k].splice(e++, 0, j[d])
            }
          } else {
            if (!c[k] || c[k].length <= IndexJL) {
              c[k] = (IndexJL) ? [null] : [];
              c[k].push(j)
            } else {
              c[k].splice(e, 0, j)
            }
          }
        }
        break;
      case "removeall":
        c.canUpdateUI = false;
        c[k] = j;
        c.canUpdateUI = true;
        if (c.wType == "Segment" && c.behavior != "default") {
          c.selectedindices = null
        }
        break;
      case "removeat":
        (c[k] && c[k].length >= e && c[k][e]) && c[k].splice(e, 1);
        break
    }
  },
  updateContainerData: function(f, b, e) {
    var d = $KU.getParentByAttribute(b, "index");
    if (d) {
      var a = d.parentNode.parentNode;
      var c = $KU.getModelByNode(a);
      $KW[c.wType].updateData(f, b, c, d, e)
    } else {
      $KW.MenuContainer && $KW.MenuContainer.eventHandler(f, b)
    }
  },
  updateContainerMasterData: function(b, d, g, a) {
    var e = b.widgetdatamap;
    if (e) {
      e = $KU.isArray(e) ? e[IndexJL] : e
    }
    var f = e ? e[g.id] : g.id;
    var c = d[f];
    if (c instanceof Object) {
      if (g.wType == "Calendar") {
        c.date = g.date;
        c.day = g.day;
        c.month = g.month;
        c.year = g.year;
        c.datecomponents = g.datecomponents;
        c.dateComponents = g.datecomponents
      } else {
        if (g.wType == "CheckBoxGroup") {
          $KW.Utils.setSelectedKeys(c, a.checked, (c.selectedkeys || c.selectedKeys) || (IndexJL == 1 ? [null] : []), a.value);
          $KW.Utils.setSelectedValueProperty(c, (c.masterData || c.masterdata), "selectedkeys");
          c.selectedKeys = c.selectedkeys;
          c.selectedKeyValues = c.selectedkeyvalues
        } else {
          if (g.wType == "RadioButtonGroup" || g.wType == "ComboBox") {
            c.selectedkey = g.selectedkey;
            c.selectedKey = g.selectedkey;
            $KW.Utils.setSelectedValueProperty(c, c.masterData || c.masterdata, "selectedkey")
          } else {
            if (g.wType == "TextField" || g.wType == "TextArea") {
              c.text = g.text
            }
          }
        }
      }
    } else {
      if (g.wType != "Link" && (g.wType == "TextField" || g.wType == "TextArea")) {
        d[f] = g.text
      }
    }
    this.updateChildModel(g, c);
    if (g.wType == "ComboBox") {
      $KW.ComboBox.resetOption(g, a, g.masterdata)
    }
    if (g.ondone || g.onDone) {
      $KU.returnEventReference(g.ondone || g.onDone)(g)
    } else {
      if (g.onSelection || g.onselection) {
        $KU.returnEventReference(g.onselection || g.onSelection)(g)
      }
    }
  },
  updateContainerDataInDOM: function(b, d) {
    var a = $KW.Utils.getContainerModelById(b, d);
    if (a) {
      if (a.wType == "Segment") {
        var c;
        var j = $KU.getParentByAttribute(b, "index");
        var e = parseInt(j.getAttribute("index"));
        if (a.hasSections) {
          var g = j.getAttribute("secindex").split(",");
          var h = parseInt(g[0]);
          var f = parseInt(g[1]);
          c = (f == -1) ? a.data[h][IndexJL] : a.data[h][IndexJL + 1][f]
        } else {
          c = a.data[e]
        }
        b.dataObj = {
          data: c,
          map: a.widgetdatamap,
          containerModel: a
        }
      }
    }
  },
  getContainerModelById: function(b, a) {
    var c = b;
    if (a) {
      var d;
      while (c) {
        d = c.id;
        if (d) {
          d = d.substring(d.lastIndexOf("_") + 1)
        }
        if (d == a) {
          break
        }
        c = c.parentNode
      }
    }
    return c ? $KU.getModelByNode(c) : ""
  },
  getSegProperty: function(b) {
    var a = $KU.segmentKeyMap[b];
    return a || b
  },
  updateChildModel: function(e, c) {
    e.canUpdateUI = false;
    if (c instanceof Object) {
      var b = (e.wType == "RadioButtonGroup" || e.wType == "ComboBox" || e.wType == "CheckBoxGroup" || e.wType == "ListBox");
      if (b) {
        e.masterdata = "";
        e.masterdatamap = "";
        if (e.wType == "RadioButtonGroup" || e.wType == "ComboBox") {
          e.selectedkey = null;
          !IndexJL && (c.selectedkey = c.selectedKey)
        }
        if (e.wType == "CheckBoxGroup" || e.wType == "ListBox") {
          e.selectedkeys = null;
          !IndexJL && (c.selectedkeys = c.selectedKeys)
        }
      }
      for (var d in c) {
        var a = $KW.Utils.getSegProperty(d).toLowerCase();
        if (a == "disabled") {
          e[a] = !c[d]
        } else {
          e[a] = c[d]
        }
        if (e.wType == "Image") {
          if (d == "base64") {
            e.srcType = 2
          } else {
            if (d == "src") {
              e.srcType = 1
            }
          }
        }
        if (e.wType == "HBox" || e.wType == "VBox") {
          if (c.isVisible != undefined) {
            e.isvisible = c.isVisible
          }
        }
        if (b && c.masterData && c.masterData.length > IndexJL && (a == "selectedkeys" || a == "selectedkey")) {
          $KW.Utils.setSelectedValueProperty(c, c.masterData, a, c[d])
        }
      }
    } else {
      if (e.wType != "Image") {
        e.text = c
      } else {
        e.src = c;
        e.srcType = 1
      }
    }
    e.canUpdateUI = true
  },
  updateLayoutData: function(e, c, g) {
    if (g instanceof Object) {
      for (var f in g) {
        if (f != "template" && f != "children" && f != "metaInfo") {
          var b = f;
          if (e.widgetdatamap) {
            b = kony.utils.getKey(e.widgetdatamap, f)
          }
          var d = c.parent;
          var a = d ? d[b] : c[b];
          if (a) {
            this.updateChildModel(a, g[f])
          }
        }
      }
    }
  },
  setSelectedKeys: function(b, d, c, e) {
    var a = $KU.inArray(c, e);
    if (d && !a[0]) {
      c.push(e)
    } else {
      if (a[0]) {
        c.splice(a[1], 1)
      }
    }
    b.selectedkeys = c.length > IndexJL ? c : null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      b.selectedKeys = b.selectedkeys
    }
  },
  setSelectedValueProperty: function(c, k, h, g) {
    switch (h) {
      case "selectedkey":
        var e = g || c.selectedkey;
        for (var d = IndexJL; d < (k.length); d++) {
          var j = k[d][IndexJL];
          if (e == j) {
            c.selectedkeyvalue = k[d];
            if (kony.appinit.isIE7 || kony.appinit.isIE8 || g) {
              c.selectedKeyValue = c.selectedkeyvalue
            }
            break
          }
        }
        break;
      case "selectedkeys":
        var a = [];
        var b = g || c.selectedkeys;
        var f = false;
        if (IndexJL == 1) {
          a = [null]
        }
        for (d = IndexJL; d < (k.length); d++) {
          var j = k[d][IndexJL];
          if ($KU.inArray(b, j)[0]) {
            a.push(k[d]);
            f = true
          }
        }
        c.selectedkeyvalues = f ? a : null;
        if (kony.appinit.isIE7 || kony.appinit.isIE8 || g) {
          c.selectedKeyValues = c.selectedkeyvalues
        }
        break
    }
  },
  getMasterData: function(d) {
    var g = $KU.cloneObj(d.masterdata);
    if (!g) {
      var f = d.masterdatamap;
      if (f) {
        g = this.convertmap(d.masterdatamap)
      }
    }
    if (g) {
      var e;
      if (d.needsectionheaders) {
        var a;
        for (var c = IndexJL; c < g.length; c++) {
          a = g[c][1 + IndexJL];
          for (var b = IndexJL; b < a.length; b++) {
            if (g[c][1 + IndexJL] && typeof(e) != "number" && g[c][1 + IndexJL].toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
              g[c][1 + IndexJL] = $KU.getI18NValue(g[c][1 + IndexJL])
            }
          }
        }
      } else {
        for (var c = IndexJL; c < g.length; c++) {
          if (g[c][1 + IndexJL] && typeof(g[c][1 + IndexJL]) != "number" && g[c][1 + IndexJL].toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
            g[c][1 + IndexJL] = $KU.getI18NValue(g[c][1 + IndexJL])
          }
        }
      }
    }
    return g || []
  },
  convertmap: function(b) {
    var f = b.length;
    var j = b[f - 2];
    var g = b[f - 1];
    var c = b[IndexJL];
    var k = [];
    if (IndexJL == 1) {
      k = [null]
    }
    for (var e = IndexJL; e < (c.length); e++) {
      var h = c[e][j];
      var a = c[e][g];
      var d = c[e]["accessibilityConfig"];
      if (a != "" && h != "") {
        if (IndexJL == 1) {
          k.push([null, h, a])
        } else {
          k.push(d ? [h, a, d] : [h, a])
        }
      }
    }
    return k
  },
  updateDOMSkin: function(d, e, g) {
    var c = $KU.getNodeByModel(d);
    if (!c) {
      return
    }
    if (d.wType == "Phone") {
      var b = c.childNodes[0];
      $KU.removeClassName(b, g);
      $KU.addClassName(b, e)
    }
    if (d.wType == "Switch") {
      var a = c.childNodes[0];
      var f = c.childNodes[2];
      $KU.removeClassName(a, g + "on");
      $KU.removeClassName(f, g + "off");
      $KU.addClassName(a, e + "on");
      $KU.addClassName(f, e + "off")
    }
    if (d.wType == "ScrollBox") {
      while (c.parentNode.id != d.pf + "_" + d.id + "_parent") {
        c = c.parentNode
      }
    }
    $KU.removeClassName(c, g);
    $KU.addClassName(c, e)
  },
  updateFocusSkin: function(c, b) {
    var a = c[b];
    var g;
    if (c.wType === "TabPane") {
      a = c.activefocusskin
    }
    var h, f;
    var e = "#" + c.pf + "_" + c.id;
    switch (c.wType) {
      case "TextArea":
      case "RichText":
      case "TextField":
        h = e;
        break;
      case "RadioButtonGroup":
      case "CheckBoxGroup":
        h = e + ">div";
        break;
      case "DataGrid":
        h = e + " tbody tr";
        break;
      case "Segment":
        h = e + " [index]";
        break;
      case "Calendar":
        h = e;
        break;
      case "HStrip":
      case "IGallery":
        h = e + "_img";
        break;
      case "TabPane":
        if (c.viewtype && (c.viewtype === "tabview")) {
          a = a + "lia";
          g = c.activefocusskin + "li";
          h = e + "_Header li div[kwidgettype]";
          f = e + "_Header li"
        } else {
          h = e + " div[active]"
        }
        break;
      case "MenuContainer":
        h = e + " .KMenu li > div";
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          h = e + " .KMenu LI > DIV"
        }
        break;
      default:
        h = e
    }
    var d = (b == "focusskin" || b == "rowfocusskin") ? ":active" : ":hover";
    if (c.wType == "TextField" || c.wType == "TextArea") {
      d = (b == "focusskin") ? ":focus" : ":hover";
      d += (!kony.appinit.isIE7 && !kony.appinit.isIE8 && d == ":focus" ? ":not([kdisabled='true'])" : "")
    } else {
      d = (b == "focusskin" || b == "rowfocusskin") ? ":active" : ":hover";
      d += (!kony.appinit.isIE7 && !kony.appinit.isIE8 && d == ":active" ? ":not([kdisabled='true'])" : "")
    }
    h += d;
    this.applyStyle(a, h, c.wType);
    if (c.wType == "MenuContainer") {
      this.applyStyle(a, e + " .KMenu li td > div:hover", c.wType);
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        this.applyStyle(a, e + " .KMenu LI TD > DIV:hover", c.wType)
      }
    }
    if (c.viewtype && (c.viewtype == "tabview")) {
      f += d;
      this.applyStyle(g, f)
    }
    if (c.wType == "ListBox") {
      this.applyStyle(a + " option", h + " option")
    }
  },
  applyStyle: function(e, h, a) {
    var b = window.document.styleSheets;
    var g = this.getKonyStyleSheetIndex(b);
    if (g != -1) {
      var d = b[g];
      var c = this.getClassIndex(d, e, a);
      this.removeCSSRule(d, h, a);
      if (c != -1) {
        var f = d.cssRules || d.rules;
        if (d.insertRule) {
          d.insertRule(h + "{" + f.item(c).style.cssText + "}", f.length)
        } else {
          d.addRule(h, f.item(c).style.cssText)
        }
      } else {
        kony.print("Specified skin: " + e + " is  not defined in kony.css")
      }
    } else {
      kony.print("Style class not found!")
    }
  },
  removeCSSRule: function(b, c) {
    var a = this.getClassIndex(b, c);
    if (a != -1) {
      if (b.deleteRule) {
        b.deleteRule(a)
      } else {
        b.removeRule(a)
      }
    }
  },
  getKonyStyleSheetIndex: function(f) {
    var d = $KG.imagecat;
    for (var b = 0; b < f.length; b++) {
      var a = f[b].href;
      if (a) {
        var e = a && a.split("/");
        var c = e[e.length - 1];
        if (c && c.indexOf("kony") != -1 && c.indexOf("konyspaiphoneretina") == -1) {
          if (d) {
            if (a.match(d.substring(0, d.length - 1) + ".css")) {
              return b
            }
          } else {
            return b
          }
        }
      }
    }
    console.warn("SPA Stylesheet could not be loaded");
    return -1
  },
  getClassIndex: function(f, d, a) {
    var g = f.cssRules || f.rules;
    var e = 1;
    var c = 0;
    if (d.indexOf("#") == -1) {
      d = "." + d;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        if (a && a != "MenuContainer") {
          e = 2
        }
      }
    }
    for (var b = 0; b < g.length; b++) {
      if (g[b].selectorText == d) {
        e--;
        c = b;
        if (e == 0) {
          return b
        }
      }
    }
    if ((kony.appinit.isIE8 || kony.appinit.isIE7) && c > 0 && e == 1) {
      return c
    }
    return -1
  },
  getScrolledHeight: function() {
    var b = (navigator.appName.indexOf("Netscape") != -1);
    var a = b ? pageYOffset : document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;
    return a
  },
  getViewPortHeight: function() {
    var b = (navigator.appName.indexOf("Netscape") != -1);
    var a = b ? innerHeight : document.documentElement && document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight;
    return a
  },
  getViewPortWidth: function() {
    var b = (navigator.appName.indexOf("Netscape") != -1);
    var a = b ? innerWidth : document.documentElement && document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth;
    return a
  },
  applyBlockUISkin: function(c) {
    var r = this.getScrolledHeight();
    var n = this.getViewPortHeight();
    var j = n + r - 15;
    n = n / 2 + r;
    var s = this.getViewPortWidth();
    s = s / 2;
    if (kony.appinit.isIE8) {
      var g = document.getElementById("blurDiv");
      if (g) {
        return
      }
    }
    var d = undefined;
    var h = undefined;
    var t = undefined;
    if (!c) {
      if (!$KG.blockedSkinModel) {
        return
      }
      d = $KU.getElementById("blurDiv");
      if (!d) {
        console && console.error && console.error("wrong call . look into it");
        return
      }
      c = $KG.blockedSkinModel;
      h = $KG.blockedSkinWidth;
      t = $KG.blockedSkinHeight
    }
    var l = d || document.createElement("div");
    $KG.blockedSkinModel = c;
    l.id = "blurDiv";
    l.className = c.blockeduiskin;
    l.style.position = "fixed";
    var o = window.innerHeight;
    var f = screen.availHeight;
    l.style.backgroundImage = "none";
    !d && document.body.appendChild(l);
    var a = l || $KU.getElementById("blurDiv");
    l.style.backgroundImage = "";
    var b = $KU.getStyle(a, "font-family");
    var m = t || $KU.getStyle(a, "height");
    var p = h || $KU.getStyle(a, "width");
    if (!t) {
      $KG.blockedSkinHeight = m
    }
    if (!h) {
      $KG.blockedSkinWidth = p
    }
    m = m.replace("px", "");
    p = p.replace("px", "");
    l.style.width = "100%";
    var q;
    if ($KG.nativeScroll) {
      var e = document.getElementById("__MainContainer").clientHeight;
      if (e < (window.innerHeight || document.body.clientHeight)) {
        q = (window.innerHeight || document.body.clientHeight) + "px"
      } else {
        q = e + "px"
      }
    } else {
      q = "100%"
    }
    l.style.height = q;
    if (b == "Helvetica") {
      a.style.backgroundImage = "";
      if (p != "auto") {
        a.style.backgroundPosition = (s - (p / 2)) + "px " + (r) + "px"
      }
    } else {
      if (b == "Verdana") {
        if (p != "auto") {
          a.style.backgroundPosition = (s - (p / 2)) + "px " + (n - (m / 2)) + "px"
        }
      } else {
        var k = this.getViewPortHeight() + r;
        if (p != "auto") {
          a.style.backgroundPosition = (s - (p / 2)) + "px " + (k - m) + "px"
        }
      }
    }
  },
  removeBlockUISkin: function() {
    $KG.blockedSkinModel = undefined;
    $KG.blockedSkinWidth = $KG.blockedSkinHeight = undefined;
    var a = $KU.getElementById("blurDiv");
    a && a.parentNode.removeChild(a)
  },
  setProgressIndicator: function(e, a) {
    var c = $KU.getElementById("__progressdiv");
    if (c) {
      c.parentNode.removeChild(c)
    }
    var b = $KU.getModelByNode(e);
    var f = (a && a.skin) || (b && b.skin);
    var d = document.createElement("div");
    d.setAttribute("id", "__progressdiv");
    d.setAttribute("progressindicator", "true");
    d.setAttribute("progressskin", f);
    d.setAttribute("style", "width:" + e.clientWidth + "px;height:" + e.clientHeight + "px;position:absolute;opacity:0.6;");
    return d
  },
  updateNormalImage: function(c) {
    var e = $KU.getNodeByModel(c);
    if (!e || !c.backgroundimage) {
      return
    }
    var b = c.backgroundimage;
    var d = $KW.Utils.getNormalImageStyle(c);
    if (b.index) {
      e = document.querySelectorAll("#" + e.id)[b.index - 1]
    }
    var a = $KU.getImageURL(b.imageurl);
    $KU.imagePreloader(a, function(g, f) {
      return function(j) {
        j = j || window.event;
        var p = j.target || j.srcElement;
        var n = $KU.getModelByNode(g);
        var s = n.backgroundimage;
        if (j.type == "error") {
          if (s.imagewhenfailed) {
            var q = $KU.getImageURL(s.imagewhenfailed);
            var m = s.heightwidth;
            g.style.background = "url(" + q + ") no-repeat center center";
            if (m) {
              g.style.height = m[1] + "px"
            }
            return
          }
        }
        g.setAttribute("style", f);
        g.style.display = (n.isvisible ? "" : "none");
        if (s && s.maintainaspectratio) {
          var r = p.naturalHeight || p.height;
          var o = p.naturalWidth || p.width;
          var l = o / r;
          if (!isNaN(l)) {
            g.setAttribute("aspect-ratio", l);
            var k = g.clientWidth;
            var h = Math.round(1 / l * k);
            g.style.height = h + "px"
          }
        }
      }
    }(e, d))
  },
  getNormalImageStyle: function(c) {
    var d = "";
    var b = c.backgroundimage;
    if (b) {
      var e = b.maintainaspectratio;
      var f = b.heightwidth;
      var a = $KU.getImageURL(b.imageurl);
      d += "background-image: url(" + a + "); background-repeat: no-repeat; "
    }
    if (e) {
      d += "background-size:contain; "
    }
    if (f) {
      d += (e ? "" : " width:" + f[2] + "px;") + "height:" + f[1] + "px;"
    }
    return d
  },
  convertPhoneAlphabetToNumber: function(a) {
    var d = a.length;
    a = a.toLowerCase();
    var c = "";
    for (var b = 0; b < d; b++) {
      var e = a.charAt(b);
      if (c.length > 10) {
        break
      }
      switch (e) {
        case "0":
          c += "0";
          break;
        case "1":
          c += "1";
          break;
        case "2":
          c += "2";
          break;
        case "3":
          c += "3";
          break;
        case "4":
          c += "4";
          break;
        case "5":
          c += "5";
          break;
        case "6":
          c += "6";
          break;
        case "7":
          c += "7";
          break;
        case "8":
          c += "8";
          break;
        case "9":
          c += "9";
          break;
        case "a":
        case "b":
        case "c":
          c += "2";
          break;
        case "d":
        case "e":
        case "f":
          c += "3";
          break;
        case "g":
        case "h":
        case "i":
          c += "4";
          break;
        case "j":
        case "k":
        case "l":
          c += "5";
          break;
        case "m":
        case "n":
        case "o":
          c += "6";
          break;
        case "p":
        case "q":
        case "r":
        case "s":
          c += "7";
          break;
        case "t":
        case "u":
        case "v":
          c += "8";
          break;
        case "w":
        case "x":
        case "y":
        case "z":
          c += "9";
          break
      }
    }
    return c
  },
  getCurrentPosition: function() {
    if (self.pageYOffset) {
      return self.pageYOffset
    }
    if (document.documentElement && document.documentElement.scrollTop) {
      return document.documentElement.scrollTop
    }
    if (document.body.scrollTop) {
      return document.body.scrollTop
    }
    return 0
  },
  scrollTo: function(b, a) {
    if (a && a != "undefined") {
      a = $KU.getElementById(a);
      a.scrollTop = b
    } else {
      window.scrollTo(0, b)
    }
  },
  scrollToElement: function(g, c) {
    var h, a;
    var k = "";
    var d = window[g.pf];
    if (d && d.wType == "Popup") {
      var b;
      var j = $KU.getElementById(d.id + "_titlebar");
      if (j) {
        b = $KU.getElementById(d.id + "_body")
      } else {
        b = d.ismodal ? $KU.getElementById(d.id) : $KU.getElementById(d.id + "_container")
      }
      k = b.id;
      h = b.scrollTop;
      a = this.getOffset(c).top - b.offsetTop
    } else {
      if (d.wType == "Calendar" && c.className.indexOf("grid_Cal_Main") > -1) {
        c = document.querySelectorAll(".grid_Cal_Main")[0]
      } else {
        h = this.getCurrentPosition();
        a = this.getOffset(c).top
      }
    }
    var f = c.getBoundingClientRect();
    if (!(f && f.top >= 0 && f.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {
      this.animateY(h, a, k)
    }
    try {
      c.focus()
    } catch (l) {}
  },
  animateY: function(h, a, j) {
    var b = a > h ? a - h : h - a;
    if (b < 100) {
      $KW.Utils.scrollTo(a, j);
      try {
        el.focus()
      } catch (l) {}
      return
    }
    var f = Math.round(b / 100);
    if (f >= 20) {
      f = 20
    }
    var d = Math.round(b / 25);
    var k = a > h ? h + d : h - d;
    var c = 0;
    if (a > h) {
      for (var g = h; g < a; g += d) {
        setTimeout("$KW.Utils.scrollTo(" + k + ", '" + j + "')", c * f);
        k += d;
        if (k > a) {
          k = a
        }
        c++
      }
    } else {
      for (var g = h; g > a; g -= d) {
        setTimeout("$KW.Utils.scrollTo(" + k + ", '" + j + "')", c * f);
        k -= d;
        if (k < a) {
          k = a
        }
        c++
      }
    }
  },
  getOffset: function(a) {
    var c = a.offsetLeft,
      b = a.offsetTop;
    while (a = a.offsetParent) {
      c += a.offsetLeft;
      b += a.offsetTop
    }
    return {
      left: c,
      top: b
    }
  },
  initializeTemplateGestures: function() {
    if ($KG.gestureTemplates) {
      for (var a = IndexJL; a < $KG.gestureTemplates.length; a++) {
        window[$KG.gestureTemplates[a]] && $KW.Utils.initializeGestures(window[$KG.gestureTemplates[a]]);
        window[$KG.gestureTemplates[a]] && $KW.Utils.initializeGestures({
          templatebox: window[$KG.gestureTemplates[a]]
        })
      }
    }
  },
  initializeGestures: function(l) {
    for (var a in l) {
      var c = l[a];
      if (!c || typeof c != "object" || $KU.isArray(c) || c.id == l.id) {
        continue
      }
      var h = c.gestures;
      if (h) {
        for (var b in h) {
          var n = h[b];
          if (n) {
            for (var f in n) {
              var j = n[f];
              $KW.Utils.removegesture(c, j.gestureType, false, j.gestureIdentifier, j.gestureObj);
              new $KW.touch.gesture(c, j)
            }
          }
        }
      }
      var g = c.touches;
      if (g) {
        for (var b in g) {
          var e = g[b];
          if (e) {
            $KW.Utils.removetouch(c, b, false);
            var d = $KW.Utils.getWidgetNode(c);
            if (d) {
              if (d.id && d.id.indexOf("_scroller") > 0) {
                d = d.childNodes[0]
              }
              c.touches[b]["instance"] = new $KW.touch.TouchEvents(c, d, b, e.callback)
            }
          }
        }
      }
    }
    var m = l.gestures;
    if (m) {
      for (var b in m) {
        var n = m[b];
        if (n) {
          for (var f in n) {
            var j = n[f];
            $KW.Utils.removegesture(l, j.gestureType, false, j.gestureIdentifier, j.gestureObj);
            new $KW.touch.gesture(l, j)
          }
        }
      }
    }
  },
  updateModelWithGesture: function(b, c, e, f) {
    if (!b) {
      b = $KG
    }
    if (!b.gestures) {
      b.gestures = {}
    }
    var a = (c == 1 ? (e.taps == 1 ? 10 : 11) : c);
    if (!b.gestures[a]) {
      b.gestures[a] = []
    }
    var d = {
      gestureObj: e,
      callback: f,
      gestureType: c
    };
    d.gestureIdentifier = (Math.round(new Date().valueOf() * Math.random())) + "";
    b.gestures[a][d.gestureIdentifier] = d;
    return d
  },
  removegesture: function(f, a, c, j, g) {
    var b = (a == 1 ? (g.taps == 1 ? 10 : 11) : a);
    if (f.gestures && f.gestures[b]) {
      var l = f.gestures[b];
      if (j && typeof(j) === "string") {
        l[j]["instance"].removeGesture(a, c);
        if (c) {
          delete l[j]
        }
        return
      }
      for (var d in l) {
        try {
          l[d]["instance"].removeGesture(a, c)
        } catch (h) {
          if (console && console.error) {
            console.error(" remove Gesture " + h)
          }
        }
      }
      if (c) {
        f.gestures[b] = []
      }
    }
  },
  updateModelWithTouches: function(a, b, c) {
    if (!a) {
      a = $KG
    }
    if (!a.touches) {
      a.touches = {}
    }
    if (c) {
      a.touches[b] = {
        callback: c
      }
    } else {
      a.touches[b] = undefined
    }
  },
  removetouch: function(a, c, b) {
    if (a.touches && a.touches[c] && a.touches[c]["instance"]) {
      a.touches[c]["instance"].removeTouch(c, b)
    }
  },
  initializeScrollEvents: function(a, b) {
    for (var c = 0; c < a.length; c++) {
      var d = a[c];
      b = b || $KU.getModelByNode(d);
      if (!b.onScrollStart && !b.onScrolling && !b.onScrollEnd) {
        return
      }
      b.scrollInstance = new $KW.touch.TouchEvents(b, d, "scroll")
    }
  },
  scrollInterface: (function() {
    var a = this;
    var d = true;
    var f = {
      scrollLeft: NaN,
      scrollTop: NaN,
      clientHeight: NaN,
      clientWidth: NaN
    };
    var g = "scrollLeft";
    var e = "scrollTop";
    var c = "clientHeight";
    var j = "clientWidth";
    var b = {
      getScrollX: function() {
        return f[g]
      },
      getScrollY: function() {
        return f[e]
      },
      getClientH: function() {
        return f[c]
      },
      getClientW: function() {
        return f[j]
      }
    };

    function h() {
      if (typeof a.pageXOffset == "number") {
        f = a;
        e = "pageYOffset";
        g = "pageXOffset";
        c = "innerHeight";
        j = "innerWidth"
      } else {
        if ((typeof document.compatMode == "string") && (document.compatMode.indexOf("CSS") >= 0) && (document.documentElement) && (typeof document.documentElement.scrollLeft == "number")) {
          f = document.documentElement
        } else {
          if ((document.body) && (typeof document.body.scrollLeft == "number")) {
            f = document.body
          }
        }
      }
      d = false
    }
    return (function() {
      if (d) {
        h()
      }
      return b
    })
  })()(),
  handleLayout: function(a, d, e) {
    var c = a.context;
    var g = c.tabpaneID;
    c.container = a;
    c.template_generator = d;
    c.tabpaneID = "";
    if (!d.pf) {
      _konyConstNS.Form2.addHeaderorFooter.call(d, d)
    }
    d.isTemplate = true;
    var b = owl.deepCopy(d);
    $KW.Utils.updateLayoutData(a, b, e);
    c.setTopLevelBox(true);
    var f = $KW[b.wType].render(b, c);
    c.setTopLevelBox(false);
    c.tabpaneID = g;
    c.container = "";
    c.template_generator = "";
    return f
  },
  belongsToSegment: function(a) {
    var b = document.getElementById([a.getAttribute("kformname"), a.getAttribute("kcontainerID")].join("_"));
    return b && (b.getAttribute("kwidgettype") == "Segment")
  },
  setScrollWidth: function(c, b) {
    var a = (c.scrollbar == "arrows") ? b.childNodes[1] : b.childNodes[0];
    a.style.width = (a.clientWidth - parseInt($KU.getStyle(b, "padding-right").replace("px", ""), 10) - parseInt($KU.getStyle(b, "padding-left").replace("px", ""), 10)) + "px";
    var d = $KG[c.pf + "_" + c.id + "_scroller"];
    d && d.refresh()
  },
  getTemplateByContainerModelAndRowData: function(c, e, a, b) {
    if (c.wType == "MenuContainer") {
      return e.template || c.menutemplate
    } else {
      if (c.wType == "Segment") {
        if (a) {
          return c.sectionheadertemplate
        } else {
          return e.template || c.rowtemplate
        }
      } else {
        if (c.wType == "DataGrid") {
          if (c.selectedIndex >= IndexJL) {
            var d = c.columnheadersconfig[c.selectedcellindex[0]];
            if (b == "0") {
              return d.columnheadertemplate.template
            }
            return d.columndatatemplate
          }
        }
      }
    }
  },
  getRowDataByContainerModelAndIndex: function(b, a) {
    if (b.wType === "MenuContainer") {
      return $KW.MenuContainer.getDetails(b, a, "item")
    } else {
      if (b.wType === "Segment") {
        return $KW.Segment.getRowDataByIndex(b, a)
      } else {
        if (b.wType === "DataGrid") {}
      }
    }
  },
  getIndexAttrNameByContainerModel: function(a) {
    if (a.wType === "MenuContainer") {
      return "menuindex"
    } else {
      if (a.wType === "Segment") {
        return "index"
      } else {
        if (a.wType === "DataGrid") {
          return "index"
        }
      }
    }
  },
  getOffsetParent: function(b) {
    var a = b.offsetParent || document.documentElement;
    while (a && (!(b.nodeName && b.nodeName.toLowerCase() == "html") && $KU.getStyle(b, "position") === "static")) {
      a = a.offsetParent
    }
    return a || document.documentElement
  },
  getOffset: function(c) {
    var b, d, a = {
      top: 0,
      left: 0
    };
    b = this.getOffsetParent(c);
    d = this.getPosition(c);
    a = this.getPosition(b);
    a.top += $KU.getStyle(b, "borderTopWidth");
    a.left += $KU.getStyle(b, "borderLeftWidth");
    return {
      top: d.top - a.top,
      left: d.left - a.left
    }
  },
  getPosition: function(c) {
    var b = {
        top: 0,
        left: 0
      },
      a = document.documentElement;
    if (typeof c.getBoundingClientRect !== "undefined") {
      b = c.getBoundingClientRect()
    }
    return {
      top: b.top + window.pageYOffset - a.clientTop,
      left: b.left + window.pageXOffset - a.clientLeft
    }
  },
  setFlexContainerStyle: function(m, f) {
    var n, o, l, a;
    var b = m.width;
    b = $KU.isValidCSSLength(b) ? b : $KW.Utils.getDefaultWidth(m, false);
    var d = m.parent;
    if (!d && f.dataObj) {
      d = f.dataObj.containerModel.parent;
      a = f.dataObj.containerModel;
      l = $KW.Utils.getWidgetNode(a)
    } else {
      if (!d) {
        l = f.parentNode
      } else {
        l = $KW.Utils.getWidgetNode(d)
      }
    }
    if (d && d.wType == "TabPane" && $KU.isFlexWidget(d)) {
      a = d;
      d = d.parent
    }
    var c = f;
    if (d && b) {
      var j = $KU.getValueAndUnit(m, b);
      n = j.value;
      o = j.unit;
      if (o == kony.flex.PERCENTAGE) {
        n = (n * l.offsetWidth) / 100
      }
      if (d.percent == false) {
        c.style.width = n + "px"
      } else {
        if (m.hexpand == false) {
          if (n <= c.parentNode.offsetWidth) {
            c.style.width = n + "px"
          }
        }
      }
    }
    var p = m.height;
    if (!$KU.isValidCSSLength(p)) {
      if (m.wType == "FlexContainer" && m.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
        m.layoutModel = {};
        m.autogrowHeight = true;
        p = this.getComputedPreferredHeight(m, f, $KW.FlexLayoutEngine.getAutoGrowFlexHeight(m, f)) + "dp"
      } else {
        p = $KW.Utils.getDefaultHeight(m, false)
      }
    }
    if (p) {
      var j = $KU.getValueAndUnit(m, p);
      n = j.value;
      o = j.unit;
      if (o == kony.flex.PERCENTAGE) {
        if (a && a.wType == "Segment" && !a.needScroller && a.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
          n = 100
        } else {
          if (d && $KU.isFlexContainer(d)) {
            n = (n * l.offsetHeight) / 100
          } else {
            n = (n * l.offsetWidth) / 100
          }
        }
      }
      if (a && a.wType == "Segment" && a.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW && a.needpageindicator) {
        var e = parseInt($KU.getStyle(l, "border-top-width"), 10) + parseInt($KU.getStyle(l, "border-bottom-width"), 10);
        c.style.height = (n - l.childNodes[1].offsetHeight - e) + "px"
      } else {
        if (a && (a.wType == "TabPane") && (!(a.viewconfig.tabViewConfig) || (a.viewconfig.tabViewConfig && (a.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_TOP || a.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_BOTTOM)))) {
          var h = 0;
          if (a.viewtype === "tabview" || a.viewtype === "pageview") {
            var k = $KU.getElementById(a.pf + "_" + a.id + "_Header");
            h = k.offsetHeight
          } else {
            var k = $KU.getElementById(m.pf + "_" + m.id + "_Header");
            h = k.offsetHeight
          }
          c.style.height = (n - h) + "px"
        } else {
          c.style.height = n + "px"
        }
      }
    }
    if (m.wType == "FlexScrollContainer") {
      var g = c.childNodes[0].childNodes[0];
      g.style.width = c.clientWidth + "px";
      g.style.height = c.clientHeight + "px"
    }
    if (m.wType == "FlexContainer") {
      c.childNodes[0].style.height = "100%"
    }
  },
  getFlexLayoutStyle: function(a) {
    var b = [];
    b.push("position:absolute");
    a.zindex && b.push("z-index:" + a.zindex);
    if ($KU.hasTransform) {
      if ($KU.hasWebkitTransform) {
        b.push("-webkit-transform:" + $KW.animUtils.applyTransform(a, a.transform))
      } else {
        b.push("transform:" + $KW.animUtils.applyTransform(a, a.transform))
      }
    }(typeof a.opacity != "undefined") && b.push("opacity:" + a.opacity);
    if (a.wType != "FlexContainer" || a.clipbounds) {
      b.push("border: 0px !important");
      b.push("background: transparent !important")
    }
    return b.join(";")
  },
  getWidth: function(a, o, f, q, r) {
    var e = a.parent;
    var k = false;
    var m;
    var d = o.width;
    if (d) {
      m = (d.value < 0 ? 0 : d.value) + d.unit;
      k = true
    }
    if (!k) {
      var t;
      var h = 0;
      var s = Number.MAX_VALUE;
      var l = o.minWidth;
      var j = o.maxWidth;
      if (l) {
        h = $KU.getValueByParentFrame(a, l, "x");
        h = h < 0 ? 0 : h
      }
      if (j) {
        s = $KU.getValueByParentFrame(a, j, "x");
        s = s < 0 ? 0 : s
      }
      if (e.layouttype == kony.flex.FREE_FORM) {
        var b = e.frame.width;
        var g, c, v;
        if (o.centerX) {
          g = $KU.getValueByParentFrame(a, o.centerX, "x")
        }
        if (o.left) {
          c = $KU.getValueByParentFrame(a, o.left, "x")
        }
        if (o.right) {
          v = $KU.getValueByParentFrame(a, o.right, "x")
        }
        if (o.centerX && o.left) {
          t = (g - c) * 2
        } else {
          if (o.centerX && o.right) {
            t = (b - g - v) * 2
          } else {
            if (o.left && o.right) {
              t = b - c - v
            }
          }
        }
        if (t != undefined) {
          var n = parseInt($KU.getStyle(q, "border-right-width"), 10);
          t = t - n;
          t = (t < 0 ? 0 : t)
        }
      }
      var u = (t != undefined) ? t : $KW.Widget.getPreferredWidth(a, f.childNodes[0], s, r);
      m = this.enforceGivenDimension(u, h, s) + "px"
    }
    if (d || t != undefined) {
      $KW.Utils.setPreferredWidth(a, f)
    }
    if (r == undefined) {
      f.style.width = m
    } else {
      var p = [];
      p.push("width:" + m);
      return p
    }
  },
  enforceGivenDimension: function(a, c, d) {
    var b = a;
    if (c <= d) {
      if (a < c) {
        b = c
      }
      if (a > d) {
        b = d
      }
    }
    return b
  },
  getHeight: function(c, s, g, v, w) {
    var f = c.parent;
    var k = false;
    var o;
    if (c.wType == "FlexContainer") {
      c.autogrowHeight = false
    }
    var a = s.height;
    if (a) {
      o = (a.value < 0 ? 0 : a.value) + a.unit;
      k = true
    }
    if (!k) {
      var l;
      var e = 0;
      var p = Number.MAX_VALUE;
      var b = s.minHeight;
      var q = s.maxHeight;
      if (b) {
        e = $KU.getValueByParentFrame(c, b, "y");
        e = e < 0 ? 0 : e
      }
      if (q) {
        p = $KU.getValueByParentFrame(c, q, "y");
        p = p < 0 ? 0 : p
      }
      if (f.layouttype == kony.flex.FREE_FORM) {
        var x = f.frame.height;
        var j, m, h;
        if (s.centerY) {
          j = $KU.getValueByParentFrame(c, s.centerY, "y")
        }
        if (s.top) {
          m = $KU.getValueByParentFrame(c, s.top, "y")
        }
        if (s.bottom) {
          h = $KU.getValueByParentFrame(c, s.bottom, "y")
        }
        if (s.centerY && s.top) {
          l = (j - m) * 2
        } else {
          if (s.centerY && s.bottom) {
            l = (x - j - h) * 2
          } else {
            if (s.top && s.bottom) {
              l = x - m - h
            }
          }
        }
        if (typeof l != "undefined") {
          var r = parseInt($KU.getStyle(v, "border-bottom-width"), 10);
          l = l - r;
          o = (l < 0 ? 0 : l)
        }
      }
      var n = (typeof l != "undefined") ? l : $KW.Widget.getPreferredHeight(c, g.childNodes[0], p, w);
      if (c.wType == "Image" && c.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        if (typeof l == "undefined") {
          var t = g.childNodes[0];
          var d = {
            width: t.offsetWidth + "px",
            height: t.offsetHeight + "px"
          };
          d = $KU.setImgAspectRatio(c, t.childNodes[0], d, false);
          n = parseInt(d.height, 10)
        }
      }
      o = this.enforceGivenDimension(n, e, p) + "px"
    }
    if (w == undefined) {
      g.style.height = o;
      if (c.wType == "Segment" && c.viewtype == constants.SEGUI_VIEW_TYPE_TABLEVIEW && !c.needScroller && (k || typeof l != "undefined" || q)) {
        c.needScroller = true;
        $KW.Scroller.initialize([g.childNodes[0]], "Segment")
      }
    } else {
      var u = [];
      u.push("height:" + o);
      return u
    }
  },
  setDimensions: function(b, a, h) {
    if (a) {
      a = a.childNodes[0];
      var c = b.parent;
      if (a && b.wType != "Switch") {
        a.style.width = "100%";
        a.style.height = "100%";
        if (b.wType == "FlexContainer") {
          a.childNodes[0].style.height = "100%"
        }
      }
      if (b.wType == "Image") {
        a.style.display = "block";
        var g = a.childNodes[0];
        var f = {
          width: a.offsetWidth + "px",
          height: a.offsetHeight + "px"
        };
        if (b.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          $KU.setImgAspectRatio(b, g, f);
          $KU.getImageCenterAlign(g, true)
        } else {
          if (b.imagescalemode == constants.IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS) {
            $KU.setImgDimensions(b, g, f)
          }
        }
      } else {
        if (b.wType == "Switch") {
          var d = $KU.getNodeByModel(b);
          $KW.Switch.adjustWidth(b, d, true);
          $KW.Switch.adjustHeight(b, d)
        } else {
          if (b.wType == "Slider") {
            var e = $KU.getNodeByModel(b);
            $KW.Slider.imgLoad(e.childNodes[0])
          }
        }
      }
    }
  },
  getDefaultWidth: function(b, a) {
    if (b.wType == "Browser" && !b.htmlstring) {
      return ""
    }
    var c = $KU.widgetsWidthMap[b.wType];
    if (c) {
      return (a == false) ? c : $KU.getComputedValue(b, c)
    }
    return ""
  },
  getDefaultHeight: function(b, a) {
    var c = $KU.widgetsHeightMap[b.wType];
    if (c) {
      return (a == false) ? c : $KU.getComputedValue(b, c)
    }
    return ""
  },
  setPreferredWidth: function(b, a) {
    var c = $KU.inArray($KU.contentDrivenWidgets, b.wType)[0];
    if (c) {
      var d = a.childNodes[0];
      d.style.whiteSpace = "pre-wrap"
    }
  },
  getChildHeight: function(c, b) {
    if (c.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
      if (c.wType == "FlexContainer") {
        c.autogrowHeight = true;
        var a = b.childNodes[0].getAttribute("kcontainerID");
        a && $KW.Utils.updateContainerDataInDOM(b, a);
        return this.getComputedPreferredHeight(c, b, $KW.FlexLayoutEngine.getAutoGrowFlexHeight(c, b))
      } else {
        if (c.wType == "Segment") {
          b.parentNode.style.height = "auto";
          return this.getComputedPreferredHeight(c, b, $KW.Segment.getAutoGrowSegmentHeight(c, b))
        }
      }
    } else {
      return this.getComputedPreferredHeight(c, b)
    }
  },
  getComputedPreferredHeight: function(e, d, j) {
    var c = e.layoutModel;
    var h = 0;
    var f = Number.MAX_VALUE;
    var g = c.minHeight;
    var b = c.maxHeight;
    if (g) {
      h = $KU.getValueByParentFrame(e, g, "y");
      h = h < 0 ? 0 : h
    }
    if (b) {
      f = $KU.getValueByParentFrame(e, b, "y");
      f = f < 0 ? 0 : f
    }
    if (typeof j == "undefined") {
      j = $KW.Widget.getPreferredHeight(e, d, f);
      if (e.wType == "Image" && e.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        var a = {
          width: d.offsetWidth + "px",
          height: d.offsetHeight + "px"
        };
        a = $KU.setImgAspectRatio(e, d.childNodes[0], a, false);
        j = parseInt(a.height, 10)
      }
    }
    return this.enforceGivenDimension(j, h, f)
  },
  getWidgetDimensions: function(c, b) {
    var e = c.parent;
    if (e && e.frame && typeof e.frame.x != "undefined") {
      var g = b.style.width;
      var d = {
        value: parseFloat(g),
        unit: $KU.getUnit(g)
      };
      g = $KU.getValueByParentFrame(c, d, "x");
      var a = b.style.height;
      var f = {
        value: parseFloat(a),
        unit: $KU.getUnit(a)
      };
      a = $KU.getValueByParentFrame(c, f, "y")
    } else {
      var g = b.offsetWidth;
      var a = b.offsetHeight
    }
    return {
      width: g,
      height: a
    }
  },
  getWidgetFrame: function(b, a, e) {
    var d = (typeof e == "undefined") ? $KW.Utils.getOffset(a) : {
      top: 0,
      left: 0
    };
    var c = this.getWidgetDimensions(b, a);
    return {
      x: parseInt(d.left, 10),
      y: parseInt(d.top, 10),
      width: c.width,
      height: c.height
    }
  },
  setWidgetPosition: function(b, c, a) {
    a = a || $KU.getNodeByModel(b);
    a.style.left = a.style.right = a.style.top = a.style.bottom = "";
    for (var d in c) {
      a.style[d] = c[d]
    }
    if (!a.style.left) {
      a.style.left = "0px"
    }
    if (!a.style.top) {
      a.style.top = "0px"
    }
  },
  saveWidgetFrame: function(a) {
    if (a.wType == "FlexContainer" || a.wType == "FlexScrollContainer") {
      a.oldFrame = owl.deepCopy(a.frame)
    }
  },
  getWidgetNode: function(b, a) {
    if (!b) {
      return null
    }
    var d;
    var c = b.tabId;
    if (c) {
      d = b.pf + "_" + c + "_" + b.id
    } else {
      d = (b.pf ? b.pf + "_" : "") + b.id
    }
    if (b.wType == "Calendar") {
      return a ? a.querySelector("div[kwidgetid=" + d + "]") : document.getElementById(d)
    }
    var e = a ? a.querySelector("#" + d) : document.getElementById(d);
    return $KW.Utils.getWidgetNodeFromNodeByModel(b, e)
  },
  getWidgetNodeFromNodeByModel: function(a, c) {
    if (c) {
      var d = {
        Image: 1,
        Slider: 2,
        FlexContainer: 1,
        DataGrid: 1
      };
      if (a.wType == "Segment" && a.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
        d.Segment = 1
      }
      for (var b = typeof d[a.wType] == "undefined" ? 0 : d[a.wType]; b > 0; --b) {
        c = c.parentNode
      }
      return c
    } else {
      return null
    }
  },
  getWidgetIndex: function(a) {
    var b = a.parent;
    if (b) {
      var d = b.widgets();
      for (var c = 0; c < d.length; c++) {
        if (a.id == d[c].id) {
          return c
        }
      }
    }
    return -1
  },
  setPaddingByParent: function(c, b) {
    if ($KU.isFlexContainer(c) || c.wType == "Slider" || c.wType == "Switch") {
      return
    }
    var f = c.parent;
    var g = c.padding;
    if (f && g && $KU.isArray(g)) {
      var a = "";
      var e = f.frame.width;
      for (var d = 1; d < g.length; d++) {
        a += parseInt((g[d] * e) / 100, 10) + "px "
      }
      a += parseInt((g[0] * e) / 100, 10) + "px ";
      b.style.padding = a
    }
  }
};
$KW.WidgetGenerationContext = function(a) {
  this.formID = a;
  this.topLevelBox = null
};
$KW.WidgetGenerationContext.prototype.setTopLevelBox = function(a) {
  this.topLevelBox = a
};
$KW.unLoadWidget = function() {
  var a = document.querySelector('[selected="progress"]') || document.querySelector('[selected="progressindtr"]');
  if (a) {
    a.removeAttribute("selected")
  }
  a = document.querySelector('[progressindicator="true"]');
  if (a) {
    a.parentNode.removeChild(a)
  }
  $KW.Utils.removeBlockUISkin();
  var c = $KG[kony.constants.SELECTED_ITEM];
  if (c) {
    var b = $KU.getElementById(c.kWidgetID);
    var d = c.kEventHandler;
    d && d(b)
  }
  delete $KG[kony.constants.SELECTED_ITEM]
};
$KW.Camera = {
  render: function(b, a) {
    return ""
  }
};
$KW.Advertisement = {
  render: function(b, a) {
    return ""
  }
};
$KW.SeatMap = {
  render: function(b, a) {
    return ""
  }
};
$KW.MenuItem = {
  render: function(b, a) {
    return ""
  }
};
$KW.TPW = {
  render: function(d, b) {
    var a = "";
    if (typeof d == "object") {
      var g = d.pf + "_" + d.id;
      $KU.addThirdPartyMeta({
        id: g,
        tpwModel: d
      });
      var c = $KU.getWidgetTypeByNameSapce(d.widgetName);
      var f = $KW.skins.getWidgetSkin(d, b) + " " + $KW.skins.getMarPadAdjustedContainerWeightSkin(d, 100);
      var e = "";
      e += $KW.skins.getMarginSkin(d, b) + " " + $KW.skins.getPaddingSkin(d);
      if (d.isvisible == false || !d.isvisible == "false" || d.isVisible == false || !d.isVisible == "false") {
        e += "display:none;"
      }
      a += "<div id='" + g + "' class='" + f + "' tpwidgettype='" + c + "' style='" + e + "'></div>";
      return a
    }
  },
  renderWidget: function(b) {
    if ($KG.thirdPartyWidgetsMeta) {
      for (var e in $KG.thirdPartyWidgetsMeta) {
        var g = document.getElementById($KG.thirdPartyWidgetsMeta[e].id);
        if (g && $KG.thirdPartyWidgetsMeta[e].tpwModel.pf == b) {
          var a = $KG.thirdPartyWidgetsMeta[e].tpwModel;
          var d = a.widgetName.split(".");
          var f = window;
          for (var c = 0; c < d.length; c++) {
            f = f[d[c]]
          }
          if (f && typeof f.initializeWidget == "function") {
            f.initializeWidget(g, a)
          } else {}
        }
      }
    }
  }
};
if (!Array.prototype.indexOf) {
  Array.prototype.indexOf = function(d, c) {
    if (c == null) {
      c = 0
    } else {
      if (c < 0) {
        c = Math.max(0, this.length + c)
      }
    }
    for (var b = c, a = this.length; b < a; b++) {
      if (this[b] === d) {
        return b
      }
    }
    return -1
  }
};
$KW.touch = {
  computeSnapWidths: function(g, f, a) {
    var e = document.querySelectorAll("#" + g + " div[name='touchcontainer_" + f + "']");
    for (var b = 0; b < e.length; b++) {
      var d = e[b];
      var c = $KU.getModelByNode(d);
      if (f == "Tabpane") {
        c = $KU.getModelByNode(d.parentNode)
      }
      $KW.touch.computeWidths(d, c)
    }
  },
  computeWidths: function(b, g) {
    var c = b.children[0];
    var a = c.children;
    var d = a.length;
    c.style.width = d * 100 + "%";
    var i = 0;
    var e = 0;
    var h = 100 / d;
    if (a.length > 0) {
      for (var f = 0; f < a.length; f++) {
        a[f].style.display = "inline";
        if (g.wType == "Segment" || g.wType == "TabPane") {
          a[f].style.width = h + "%";
          if (g.wType == "TabPane") {
            if ($KU.isIE) {
              a[f].style.styleFloat = "left"
            } else {
              a[f].style.cssFloat = "left"
            }
          }
        } else {
          a[f].style.width = Math.floor(a[f].clientWidth / d) + "px"
        }
      }
      a[0].style.display = "block";
      e = a[0].clientWidth
    }
    if (window.orientation === 90 || window.orientation === -90) {
      i = e / screen.height
    } else {
      if (window.orientation === 0 || window.orientation === 180) {
        i = e / screen.width
      }
    }
    b.setAttribute("imageWidth", e);
    b.setAttribute("ratio", i);
    if (!g.swipeContext) {
      g.swipeContext = {}
    }
    var k = g.swipeContext;
    k.imageWidth = e;
    k.widthRatio = i;
    k.wType = g.wType;
    if (g.focusedindex) {
      if (g.wType === "Segment") {
        k.currentPage = g.focusedindex - IndexJL
      } else {
        k.currentPage = Math.ceil(g.focusedindex / g.recperpage) - IndexJL
      }
    } else {
      k.currentPage = 0;
      if (g.wType == "TabPane") {
        k.currentPage = g.activetab;
        g.swipeContext.currentPage = k.currentPage
      }
    }
    $KW.touch.scrollImages(c, k.imageWidth * k.currentPage, $KU.swipeDuration, true);
    $KW.touch.updatePageIndicator(b, k, g)
  },
  updateFocusedIndex: function(c, b) {
    c.focusedindex = c.swipeContext.currentPage + IndexJL;
    c.focuseditem = (c.data && c.data[c.focusedindex]) || (c.masterdata && c.masterdata[c.focusedindex]);
    if (b && c.ongesture) {
      var d = $KU.returnEventReference(c.ongesture);
      var a = (b == "next" ? 1 : (b == "previous" ? 2 : -1));
      d.call(c, c, a)
    }
  },
  updatePageIndicator: function(b, i, d) {
    var f = i.currentPage;
    var h = kony.utils.getElementById(b.id + "_footer");
    if (h && h.childNodes[0]) {
      var l = h.childNodes[0];
      var k = l.childNodes[0];
      var g = k.childNodes;
      for (var c = 0; c < g.length; c++) {
        var e = g[c].childNodes[0];
        var a = (c == f) ? (d.pageondotimage ? d.pageondotimage : "whitedot.gif") : (d.pageoffdotimage ? d.pageoffdotimage : "blackdot.gif");
        if (e.src && e.src.substring(e.src.lastIndexOf("/") + 1) == a) {
          continue
        }
        e.src = $KU.getImageURL(a)
      }
    }(d.wType == "HStrip") && $KW.touch.updateArrows(b, i, d)
  },
  updateArrows: function(e, d, c) {
    var b = e.childNodes[1];
    if (b) {
      var f = b.childNodes[0];
      var g = b.childNodes[1];
      var a = e.childNodes[0].childNodes.length;
      if (d.currentPage == IndexJL) {
        f.style.display = "none"
      } else {
        f.style.display = ""
      }
      if (d.currentPage == (IndexJL ? a : a - 1)) {
        g.style.display = "none"
      } else {
        g.style.display = ""
      }
    }
  },
  previousPage: function(a) {
    var f = a.parentNode.getAttribute("wType");
    var j = a.id.substr(0, a.id.lastIndexOf("_"));
    var b = (f == "HStrip") ? a.parentNode.parentNode : document.getElementById(j);
    var h = $KU.getModelByNode(b);
    var e = a.parentNode.parentNode.childNodes[1];
    var k = a.childNodes[0].getAttribute("type") == "VImg" ? true : false;
    var d = h.scrollInstance || $KG[e.id];
    if (d) {
      var c = e.childNodes[0];
      if (k) {
        var g = Math.abs(d.y) < e.clientHeight ? 0 : (d.y + e.clientHeight);
        d.animateTo(0, g)
      } else {
        var i = Math.abs(d.x) < e.clientWidth ? 0 : (d.x + e.clientWidth);
        d.animateTo(i, 0)
      }
    }
  },
  nextPage: function(a) {
    var f = a.parentNode.getAttribute("wType");
    var k = a.id.substr(0, a.id.lastIndexOf("_"));
    var b = (f == "HStrip") ? a.parentNode.parentNode : document.getElementById(k);
    var h = $KU.getModelByNode(b);
    var e = a.parentNode.parentNode.childNodes[1];
    var l = a.childNodes[0].getAttribute("type") == "VImg" ? true : false;
    var d = h.scrollInstance || $KG[e.id];
    if (d) {
      var c = e.childNodes[0];
      c.style[vendor + "Transition"] = "-" + vendor + "-transform 0.5s ";
      if (l) {
        var j = c.clientHeight - Math.abs(d.y) - e.clientHeight;
        var g = j < e.clientHeight ? (d.y - j) : (d.y - e.clientHeight);
        d.animateTo(0, g)
      } else {
        var j = c.clientWidth - Math.abs(d.x) - e.clientWidth;
        var i = j < e.clientWidth ? (d.x - j) : (d.x - e.clientWidth);
        d.animateTo(i, 0)
      }
    }
  },
  fadeHImages: function(b) {
    var d = "display:none;";
    var a = $KU.getImageURL(b.leftarrowimage);
    var c = $KU.getImageURL(b.rightarrowimage);
    var e = b.pf + "_" + b.id;
    var f = "<div id='" + e + "_scrollFades_H' class='scroll_view' wType='" + b.wType + "'><div id='" + e + "_leftimg' class='scroll_fades leftfade' style='" + d + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.previousPage(this)'" : "") + "><img type='HImg' src='" + a + "' onload='$KW.touch.setHeight(this)' ></div><div id='" + e + "_rightimg' class='scroll_fades rightfade' style='" + d + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.nextPage(this)'" : "") + "><img type='HImg' src='" + c + "' onload='$KW.touch.setHeight(this)' ></div></div>";
    return f
  },
  fadeVImages: function(b) {
    var c = "display:none;";
    var a = $KU.getImageURL(b.toparrowimage);
    var f = $KU.getImageURL(b.bottomarrowimage);
    var d = b.pf + "_" + b.id;
    var e = "<div id='" + d + "_scrollFades_V' class='scroll_view' style='height:inherit;' wType='" + b.wType + "'><div id='" + d + "_topimg' class='scroll_fades topfade' style='" + c + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.previousPage(this)'" : "") + "><img type='VImg' src='" + a + "' onload='$KW.touch.setHeight(this)' ></div><div id='" + d + "_bottomimg' class='scroll_fades bottomfade' style='" + c + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.nextPage(this)'" : "") + "><img type='VImg' src='" + f + "' onload='$KW.touch.setHeight(this)' ></div></div>";
    return e
  },
  setHeight: function(c) {
    var b = c.parentNode;
    c.naturalHeight = c.naturalHeight || c.height;
    c.naturalWidth = c.naturalWidth || c.width;
    b.style.height = c.naturalHeight + "px";
    b.style.width = c.naturalWidth + "px";
    var a = c.getAttribute("type");
    if (a == "HImg") {
      b.style.top = Math.floor((b.parentNode.offsetHeight - c.naturalHeight) / 2) + "px"
    } else {
      b.style.left = Math.floor((b.parentNode.offsetWidth - c.naturalWidth) / 2) + "px"
    }
  },
  orientationHandler: function(s, a, d) {
    var r = document.querySelectorAll("#" + s + " div[name='touchcontainer_" + d + "']");
    var u = $KU.getPlatform().name;
    for (var o = 0; o < r.length; o++) {
      var f = r[o];
      var l = f.id;
      var h = $KU.getModelByNode(f);
      var g = h.swipeContext;
      if (!g) {
        continue
      }
      var t = f.children[0];
      var p = t.children;
      var b = p.length;
      if (b > 0) {
        t.style.width = b * 100 + "%";
        var q = 0;
        for (var n = 0; n < p.length; n++) {
          if (n != (g.currentPage + 1)) {
            p[n].style.display = "none"
          }
        }
        var e = screen.height * g.widthRatio + "px";
        var c = screen.width * g.widthRatio + "px";
        for (var m = 0; m < p.length; m++) {
          if (u == "android" || u == "blackberry") {
            if (a === "landscape") {
              p[m].style.width = c
            } else {
              if (a === "portrait") {
                p[m].style.width = c
              }
            }
          } else {
            if (a === "landscape") {
              p[m].style.width = e
            } else {
              if (a === "portrait") {
                p[m].style.width = c
              }
            }
          }
        }
        q = p[0].parentNode.clientWidth / b;
        g.imageWidth = q;
        f.setAttribute("imageWidth", q);
        if (g.currentPage === (b - 1)) {
          $KW.touch.previousImage(f, g, true);
          $KW.touch.nextImage(f, g, true)
        } else {
          $KW.touch.nextImage(f, g, true);
          $KW.touch.previousImage(f, g, true)
        }
        for (var n = 0; n < p.length; n++) {
          p[n].style.display = "inline"
        }
      }
    }
  },
  previousImage: function(c, e, a) {
    var d = c.children[0];
    e.currentPage = Math.max(e.currentPage - 1, 0);
    $KW.touch.scrollImages(d, e.imageWidth * e.currentPage, $KU.swipeDuration, a);
    if (e.wType == "TabPane") {
      var f = $KU.getModelByNode(d.parentNode.parentNode);
      f.activetab = Math.max(f.activetab - 1, 0);
      f.activetabs[IndexJL] = f.activetab;
      var b = f.children[f.activetab];
      $KW.TabPane.changeActiveTabSkin(f, b);
      $KW.touch.updatePageIndicator(c.parentNode, e, f)
    }
  },
  nextImage: function(d, f, a) {
    var e = d.children[0];
    var b = e.children.length;
    f.currentPage = Math.min(f.currentPage + 1, b - 1);
    $KW.touch.scrollImages(e, f.imageWidth * f.currentPage, $KU.swipeDuration, a);
    if (f.wType == "TabPane") {
      var g = $KU.getModelByNode(e.parentNode.parentNode);
      g.activetab = Math.min(g.activetab + 1, b - 1);
      g.activetabs[IndexJL] = g.activetab;
      var c = g.children[g.activetab];
      $KW.TabPane.changeActiveTabSkin(g, c);
      $KW.touch.updatePageIndicator(d.parentNode, f, g)
    }
  },
  scrollImages: function(c, f, e, a, b) {
    if (!a) {
      c.style[vendor + "Transition"] = "-" + vendor + "-transform " + (e / 1000).toFixed(1) + "s "
    } else {
      c.style[vendor + "Transition"] = "-" + vendor + "-transform 0 0"
    }
    var d = (f < 0 ? "" : "-") + Math.abs(f).toString();
    if (kony.appinit.useTransition) {
      c.style[vendor + "Transform"] = translateOpen + d + "px,0" + translateClose
    } else {
      $("#" + c.parentNode.id + " div:first").animate({
        left: d + "px"
      }, e)
    }
    if (b && b.tabPaneModel && b.tabID) {
      $KW.TabPane.changeActiveTabSkin(b.tabPaneModel, b.tabID)
    }
  },
  navigationDotsHandler: function(e) {
    var a = parseInt(e.getAttribute("index"), 10);
    var g = e.parentNode.parentNode.parentNode.getAttribute("id");
    g = g.substr(0, g.lastIndexOf("_footer"));
    var f = $KU.getElementById(g);
    var b = $KU.getModelByNode(f);
    if (!b) {
      return
    }
    var d = null;
    if (b.wType == "Segment") {
      d = f.children[0];
      b.selectedRows = (IndexJL) ? [null, [null, IndexJL, a]] : [
        [IndexJL, a]
      ];
      $KW.Segment.setSelectedItemsAndIndices(b)
    } else {
      if (b.wType == "HStrip") {
        d = f.children[0];
        a -= 1
      } else {
        d = f.children[1].children[0];
        b.activetab = b.currentPage;
        b.activetabs[IndexJL] = b.activetab
      }
    }
    var c = b.swipeContext;
    c.currentPage = parseInt(a) - IndexJL;
    $KW.touch.scrollImages(d, c.imageWidth * c.currentPage, $KU.swipeDuration, false);
    $KW.touch.updatePageIndicator(f, c, b);
    if (b.wType == "Segment" && b.viewType == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      b.onswipe && b.onswipe(b, -1, b.focusedindex, b.selectedState)
    }
  },
  TouchContext: function() {},
  preventDefault: function(a) {
    kony.events.preventDefault(a)
  }
};
$KW.touch.TouchContext.UP = "UP";
$KW.touch.TouchContext.DOWN = "DOWN";
$KW.touch.TouchContext.LEFT = "LEFT";
$KW.touch.TouchContext.RIGHT = "RIGHT";
$KW.touch.pageviewScroller = function(b, a) {
  this.element = b;
  this.handleEventListener = this.handleEvent.bind(this);
  if ("ontouchstart" in window) {
    kony.events.addEventListener(b, "touchstart", this, false)
  } else {
    if ($KU.isPointerSupported) {
      if ("onpointerdown" in window) {
        kony.events.addEventListener(b, "pointerdown", this, false)
      } else {
        kony.events.addEventListener(b, "MSPointerDown", this, false)
      }
    } else {
      kony.events.addEventListener(b, "mousedown", this.handleEventListener)
    }
  }
  this.widgetModel = a.widgetModel
};
$KW.touch.pageviewScroller.prototype = {
  handleEvent: function(a) {
    switch (a.type) {
      case "touchstart":
      case "mousedown":
      case "MSPointerDown":
      case "pointerdown":
        this.onTouchStart(a);
        break;
      case "touchmove":
      case "mousemove":
      case "MSPointerMove":
      case "pointermove":
        this.onTouchMove(a);
        break;
      case "touchend":
      case "touchcancel":
      case "mouseup":
      case "MSPointerUp":
      case "MSPointerCancel":
      case "pointerup":
      case "pointercancel":
        this.onTouchEnd(a);
        break;
      case "mouseout":
        this.onMouseOut(a);
        break
    }
  },
  onTouchStart: function(b) {
    var c = b.touches && b.touches[0] || b;
    if ($KU.isTouchSupported) {
      kony.events.addEventListener(this.element, "touchmove", this, false);
      kony.events.addEventListener(this.element, "touchend", this, false);
      kony.events.addEventListener(this.element, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.addEventListener(this.element, "pointermove", this, false);
          kony.events.addEventListener(this.element, "pointerup", this, false);
          kony.events.addEventListener(this.element, "pointercancel", this, false)
        } else {
          kony.events.addEventListener(this.element, "MSPointerMove", this, false);
          kony.events.addEventListener(this.element, "MSPointerUp", this, false);
          kony.events.addEventListener(this.element, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.addEventListener(this.element, "mousemove", this.handleEventListener);
        kony.events.addEventListener(this.element, "mouseup", this.handleEventListener);
        kony.events.addEventListener(this.element, "mouseout", this.handleEventListener)
      }
    }
    this.x = this.lastx = this.startX = c.pageX || c.clientX;
    this.y = this.lasty = this.startY = c.pageY || c.clientY;
    var a = this.widgetModel.swipeContext;
    if (!a) {
      a = new Object();
      a.imageWidth = this.element.getAttribute("imageWidth");
      a.widthRatio = this.element.getAttribute("ratio");
      a.currentPage = 0
    }
  },
  onTouchMove: function(c) {
    var g = c.touches && c.touches[0] || c;
    var a = g.pageX || g.clientX;
    var j = g.pageY || g.clientY;
    var f = a - this.startX;
    var e = j - this.startY;
    this.lastx, this.lasty = this.x, this.y;
    this.x = a;
    this.y = j;
    var h = $KU.getSwipeDirection(f, e);
    var b = $KU.getDistanceMoved(f, e);
    var d = this.element.children[0];
    var i = this.widgetModel.swipeContext;
    if ($KG.nativeScroll) {
      if (Math.abs(f) >= Math.abs(e)) {
        kony.events.preventDefault(c)
      } else {
        return
      }
    } else {
      kony.events.preventDefault(c)
    }
    if (h == $KW.touch.TouchContext.LEFT) {
      $KW.touch.scrollImages(d, (i.imageWidth * i.currentPage) + b, 0)
    } else {
      if (h == $KW.touch.TouchContext.RIGHT) {
        $KW.touch.scrollImages(d, (i.imageWidth * i.currentPage) - b, 0)
      }
    }
    if (this.widgetModel.wType != "TabPane") {
      $KW.touch.updateFocusedIndex(this.widgetModel)
    }
  },
  onTouchEnd: function(e) {
    this.detachEvents();
    var h = e.changedTouches && e.changedTouches[0] || e;
    var g = h.pageX || h.clientX;
    var f = h.pageY || h.clientY;
    var b = g - this.lastx;
    var a = f - this.lasty;
    var d = this.widgetModel.swipeContext;
    var c;
    if (b <= -7) {
      $KW.touch.nextImage(this.element, d, false);
      c = "next"
    } else {
      if (b >= 7) {
        $KW.touch.previousImage(this.element, d, false);
        c = "previous"
      }
    }
    $KW.touch.updatePageIndicator(this.element, d, this.widgetModel);
    if (this.widgetModel.wType != "TabPane") {
      $KW.touch.updateFocusedIndex(this.widgetModel, c)
    }
    if (c) {
      if (this.widgetModel.wType == "Segment" && this.widgetModel.viewType == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
        this.widgetModel.onswipe && this.widgetModel.onswipe(this.widgetModel, -1, this.widgetModel.focusedindex, this.widgetModel.selectedState)
      } else {
        this.widgetModel.onswipe && this.widgetModel.onswipe(this.widgetModel)
      }
    }
  },
  detachEvents: function() {
    if ($KU.isTouchSupported) {
      kony.events.removeEventListener(this.element, "touchmove", this, false);
      kony.events.removeEventListener(this.element, "touchend", this, false);
      kony.events.removeEventListener(this.element, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.removeEventListener(this.element, "pointermove", this, false);
          kony.events.removeEventListener(this.element, "pointerup", this, false);
          kony.events.removeEventListener(this.element, "pointercancel", this, false)
        } else {
          kony.events.removeEventListener(this.element, "MSPointerMove", this, false);
          kony.events.removeEventListener(this.element, "MSPointerUp", this, false);
          kony.events.removeEventListener(this.element, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.removeEventListener(this.element, "mousemove", this.handleEventListener);
        kony.events.removeEventListener(this.element, "mouseup", this.handleEventListener);
        kony.events.removeEventListener(this.element, "mouseout", this.handleEventListener)
      }
    }
  },
  onMouseOut: function(a) {
    this.onTouchEnd(a)
  },
  destroy: function() {
    if (this.element) {
      if ($KU.isTouchSupported) {
        kony.events.removeEventListener(this.element, "touchstart", this, false);
        kony.events.removeEventListener(this.element, "touchcancel", this, false)
      } else {
        if ($KU.isPointerSupported) {
          if ("onpointerdown" in window) {
            kony.events.removeEventListener(this.element, "pointerdown", this, false);
            kony.events.removeEventListener(this.element, "pointercancel", this, false)
          } else {
            kony.events.removeEventListener(this.element, "MSPointerDown", this, false);
            kony.events.removeEventListener(this.element, "MSPointerCancel", this, false)
          }
        } else {
          kony.events.removeEventListener(this.element, "mousedown", this.handleEventListener);
          kony.events.removeEventListener(this.element, "mouseout", this.handleEventListener)
        }
      }
    }
  }
};
$KW.touch.konyScroller = function(e, b) {
  var f = this;
  f.wrapper = document.getElementById(e);
  var d = b.widgetModel;
  f.scroller = f.wrapper.children[0];
  f.options = {
    hScroll: false,
    vScroll: false,
    hScrollbar: false,
    vScrollbar: false,
    bounce: true,
    hBounce: true,
    vBounce: true,
    fixedScrollbar: !$KU.isIDevice,
    hideScrollbar: true,
    fadeScrollbar: $KU.isIDevice && $KU.has3d,
    scrollbarClass: "",
    checkDOMChanges: false,
    useTransform: true,
    x: 0,
    y: 0,
    topOffset: 0,
    bottomOffset: 0,
    onBeforeScrollStart: function(g) {},
    onRefresh: null,
    onScrollStart: null,
    onScrollMove: null,
    onScrollEnd: null
  };
  for (var c in b) {
    f.options[c] = b[c]
  }
  f.x = f.options.x;
  f.y = f.options.y;
  f.pullDownOffset = f.options.topOffset || 0;
  f.pullUpOffset = f.options.bottomOffset || 0;
  f.options.hBounce = f.options.bounce ? (typeof b.hBounce === "undefined" ? true : b.hBounce) : false;
  f.options.vBounce = f.options.bounce ? (typeof b.vBounce === "undefined" ? true : b.vBounce) : false;
  f.options.vScrollbar = f.options.vScroll && f.options.vScrollbar;
  f.options.hScrollbar = f.options.hScroll && f.options.hScrollbar;
  f.options.useTransform = $KU.hasTransform ? f.options.useTransform : false;
  f.scroller.style[vendor + "TransitionProperty"] = f.options.useTransform ? ("-" + vendor + "-transform") : "top left";
  f.scroller.style[vendor + "TransitionDuration"] = "0";
  f.scroller.style[vendor + "TransformOrigin"] = "0 0";
  if (f.options.useTransform) {
    f.scroller.style[vendor + "Transform"] = translateOpen + (f.x - (f.options.hScroll ? f.pullDownOffset : 0)) + "px," + (f.y - (f.options.vScroll ? f.pullDownOffset : 0)) + "px" + translateClose;
    if (!f.options.scrollbox) {
      f.scroller.style.position = "absolute"
    }
  } else {
    if (kony.appinit.isFirefox || kony.appinit.isIE7 || kony.appinit.isIE8 || kony.appinit.isOpera) {
      f.scroller.style.cssText += ";position:relative;top:" + (f.y - (f.options.vScroll ? f.pullDownOffset : 0)) + "px;left:" + (f.x - (f.options.hScroll ? f.pullDownOffset : 0)) + "px"
    } else {
      f.scroller.style.cssText += ";position:absolute;top:" + (f.y - (f.options.vScroll ? f.pullDownOffset : 0)) + "px;left:" + (f.x - (f.options.hScroll ? f.pullDownOffset : 0)) + "px"
    }
  }
  f.refresh();
  if (f.options.showImages) {
    if (f.options.hScroll) {
      f.toggleFadeImgs()
    }
  }
  var a = f.wrapper.getAttribute("kformname");
  if (!a && !f.options.scrollbox) {
    kony.events.addEventListener(document, "touchmove", $KW.touch.preventDefault)
  }
  f.handleEventListener = f.handleEvent.bind(f);
  if (!f.options.disableUserScroll) {
    if ($KU.isTouchSupported) {
      kony.events.addEventListener(f.scroller, "touchstart", f, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.addEventListener(f.scroller, "pointerdown", f, false)
        } else {
          kony.events.addEventListener(f.scroller, "MSPointerDown", f, false)
        }
      } else {
        kony.events.addEventListener(f.scroller, "mousedown", f.handleEventListener);
        kony.events.addEventListener(f.scroller, "mouseout", f.handleEventListener)
      }
    }
  }
  if ($KU.isOrientationSupported && !$KU.isAndroid) {
    kony.events.addEventListener(window, "orientationchange", f, false)
  } else {
    kony.events.addEventListener(window, "resize", f.handleEventListener)
  }
  if (f.options.checkDOMChanges) {
    f.checkDOMTime = setInterval(function() {
      f._checkDOMChanges()
    }, 1000)
  }
};
$KW.touch.konyScroller.prototype = {
  x: 0,
  y: 0,
  steps: [],
  aniTime: null,
  _checkDOMChanges: function() {
    var a = document.getElementById(this.scroller.id);
    if (a === null) {
      return
    }
    var e, c;
    var d = this.options.widgetModel;
    var b = d.wType;
    var g = ((b == "Form" || b == "Popup") && $KU.isFlexContainer(d));
    if (g) {
      var f = document.getElementById(d.id);
      e = f.scrollHeight;
      c = f.scrollWidth
    } else {
      if (b == "FlexScrollContainer") {
        e = a.childNodes[0].scrollHeight;
        c = a.childNodes[0].scrollWidth
      } else {
        e = a.offsetHeight;
        c = a.offsetWidth
      }
    }
    if (this.moved || this.animating || (this.scrollerW == c * 1 && this.scrollerH == e * 1)) {
      return
    }
    if (this.options.hScroll == true) {
      if (g || b == "FlexScrollContainer") {
        a.style.width = (c / a.parentNode.offsetWidth) * 100 + "%"
      } else {
        a.style.width = (a.scrollWidth / a.parentNode.offsetWidth) * 100 + "%"
      }
    }
    if (this.options.vScroll == true) {
      if (g || b == "FlexScrollContainer") {
        a.style.height = e + "px"
      }
    }
    this.refresh()
  },
  refresh: function() {
    var e = this;
    if (this.refreshDisabled) {
      return
    }
    e.wrapperW = e.wrapper.clientWidth || 1;
    e.wrapperH = e.wrapper.clientHeight || 1;
    e.minScrollY = e.options.vScroll ? -e.pullDownOffset : 0;
    e.maxBiasY = e.options.vScroll ? -e.pullUpOffset : 0;
    e.minScrollX = e.options.hScroll ? -e.pullDownOffset : 0;
    e.maxBiasX = e.options.hScroll ? -e.pullUpOffset : 0;
    e.scrollerW = Math.round(e.minScrollX + e.scroller.scrollWidth + e.maxBiasX);
    e.scrollerH = Math.round(e.minScrollY + e.scroller.scrollHeight + +e.maxBiasY);
    var f = e.options.widgetModel;
    var h = 0;
    var a = 0;
    var i = f.frame;
    if (f.wType == "FlexScrollContainer" && i) {
      var g = f.widgets();
      if (g.length > 0) {
        var b = g[g.length - 1];
        if (f.layouttype == kony.flex.FLOW_HORIZONTAL) {
          var d = $KW.FlexLayoutEngine.getComputedValue(b, i, b.right, "x");
          if (d) {
            h = $KU.getValueByParentFrame(b, d, "x")
          }
        }
        if (f.layouttype == kony.flex.FLOW_VERTICAL) {
          var d = $KW.FlexLayoutEngine.getComputedValue(b, i, b.bottom, "y");
          if (d) {
            a = $KU.getValueByParentFrame(b, d, "y")
          }
        }
      }
    }
    e.maxScrollX = (e.wrapperW - e.scrollerW) + e.minScrollX - h;
    e.maxScrollY = (e.wrapperH - e.scrollerH) + e.minScrollY - a;
    e.dirX = 0;
    e.dirY = 0;
    if (e.options.onRefresh) {
      e.options.onRefresh.call(e)
    }
    e.hScroll = e.options.hScroll && e.maxScrollX < 0;
    e.vScroll = e.options.vScroll && (!e.hScroll || e.scrollerH > e.wrapperH);
    e.hScrollbar = e.hScroll && e.options.hScrollbar;
    e.vScrollbar = e.vScroll && e.options.vScrollbar && e.scrollerH > e.wrapperH;
    var c = e._offset(e.wrapper);
    e.wrapperOffsetLeft = -c.left;
    e.wrapperOffsetTop = -c.top;
    e.scroller.style[$KU.vendor + "TransitionDuration"] = "0";
    e._scrollbar("h");
    e._scrollbar("v");
    e._resetPos(200);
    if (e.options.showImages) {
      if (e.options.vScroll) {
        e.toggleVFadeImgs()
      }
      if (e.options.hScroll) {
        e.toggleFadeImgs()
      }
    }
  },
  handleEvent: function(b) {
    var a = this;
    if ($KG.__idletimeout && $KG.__idletimeout.enabled) {
      $KI.appevents.resettimer()
    }
    if (b.type != "orientationchange" && b.type != "resize") {
      if (b && b.target && b.target.getAttribute && (b.target.getAttribute("kwidgettype") == "Khstrip" || b.target.getAttribute("kwidgettype") == "ScrollBox")) {
        this.angularDirection = true
      }
    } else {
      this.angularDirection = false
    }
    switch (b.type) {
      case "touchstart":
      case "mousedown":
      case "MSPointerDown":
      case "pointerdown":
        a.onTouchStart(b);
        break;
      case "touchmove":
      case "mousemove":
      case "MSPointerMove":
      case "pointermove":
        a.onTouchMove(b);
        break;
      case "touchend":
      case "touchcancel":
      case "mouseup":
      case "MSPointerUp":
      case "MSPointerCancel":
      case "pointerup":
      case "pointercancel":
        a.onTouchEnd(b);
        break;
      case "mouseout":
        a.onMouseOut(b);
        break;
      case "orientationchange":
      case "resize":
        a.resize(b);
        break
    }
  },
  resize: function() {
    var a = this;
    if (!a.options.scrollbox) {
      $KW.Scroller.setHeight(a.options.formid)
    }
    setTimeout(function() {
      a.refresh()
    }, $KU.isAndroid ? 200 : 0)
  },
  onTouchStart: function(b) {
    var c = b.target || b.srcElement;
    c = $KU.getParentByAttribute(c, kony.constants.KONY_WIDGET_TYPE);
    if (c) {
      var a = $KU.getContainerForm(c) || (c.getAttribute && c.getAttribute("kformname"));
      if ($KW.Popup && $KW.Popup.dismissPopup(a)) {
        kony.events.stopPropagation(b, true);
        kony.events.preventDefault(b);
        return
      }
    }
    var d = b.touches && b.touches[0] || b;
    if (this.options.scrollbox) {
      kony.events.ontouchstartHandler(b);
      if (!this.options.HStrip && (typeof this.options.bubbleEvents == "undefined" || !this.options.bubbleEvents)) {
        kony.events.stopPropagation(b)
      }
    }
    if (this.options.onBeforeScrollStart) {
      this.options.onBeforeScrollStart.call(this, b)
    }
    this.extendTouchStart(d);
    this.dragging = false;
    this.startfired = false;
    this.tracking = true
  },
  onTouchMove: function(a) {
    this.dragging = true;
    this.tracking = true;
    var b = a.touches && a.touches[0] || a;
    if (this.options.scrollbox) {
      kony.events.ontouchmoveHandler(a)
    }
    this.extendTouchMove(b, a)
  },
  onTouchEnd: function(a) {
    this.dragging = false;
    this.tracking = false;
    var b = a.touches && a.touches[0] || a;
    this.extendTouchEnd(b)
  },
  onMouseOut: function(b) {
    var a = b.relatedTarget || b.srcElement;
    if (!a) {
      this.onTouchEnd(b);
      return
    }
    while (a = a.parentNode) {
      if (a == this.wrapper) {
        return
      }
    }
    this.onTouchEnd(b)
  },
  extendTouchStart: function(d) {
    this.moved = false;
    this.animating = false;
    this.distX = 0;
    this.distY = 0;
    this.absDistX = 0;
    this.absDistY = 0;
    var a, c;
    if (this.options.useTransform) {
      var b = getComputedStyle(this.scroller, null)[vendor + "Transform"].replace(/[^0-9-.,]/g, "").split(",");
      a = b[4] * 1;
      c = b[5] * 1
    } else {
      a = $KU.getStyle(this.scroller, "left").replace(/[^0-9-]/g, "") * 1;
      c = $KU.getStyle(this.scroller, "top").replace(/[^0-9-]/g, "") * 1
    }
    this.startX = this.x;
    this.startY = this.y;
    this.pointX = d.pageX || d.clientX;
    this.pointY = d.pageY || d.clientY;
    this.startTime = new Date().valueOf();
    if ($KU.isTouchSupported) {
      kony.events.addEventListener(this.scroller, "touchmove", this, false);
      kony.events.addEventListener(this.scroller, "touchend", this, false);
      kony.events.addEventListener(this.scroller, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.addEventListener(window, "pointermove", this, false);
          kony.events.addEventListener(window, "pointerup", this, false);
          kony.events.addEventListener(window, "pointercancel", this, false)
        } else {
          kony.events.addEventListener(window, "MSPointerMove", this, false);
          kony.events.addEventListener(window, "MSPointerUp", this, false);
          kony.events.addEventListener(window, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.addEventListener(this.scroller, "mousemove", this.handleEventListener);
        kony.events.addEventListener(this.scroller, "mouseup", this.handleEventListener)
      }
    }
    this.startEventFired = false;
    this.direction = ""
  },
  extendTouchMove: function(f, b) {
    b = b || f;
    var e = (f.pageX || f.clientX) - this.pointX,
      c = (f.pageY || f.clientY) - this.pointY,
      a = this.x + e,
      l = this.y + c,
      g, d, h = new Date().valueOf();
    var i = $KU.getSwipeDirection(e, c);
    if (this.angularDirection) {
      if ((this.vScroll && (i != $KW.touch.TouchContext.UP && i != $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i != $KW.touch.TouchContext.LEFT && i != $KW.touch.TouchContext.RIGHT))) {
        return
      }
    }
    if (this.options.onScrollStart && !this.startEventFired && ((this.vScroll && (i == $KW.touch.TouchContext.UP || i == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i == $KW.touch.TouchContext.LEFT || i == $KW.touch.TouchContext.RIGHT)))) {
      this.options.onScrollStart.call(this, b)
    }
    this.startEventFired = true;
    if ((typeof this.options.bubbleEvents != "undefined" && this.options.bubbleEvents) && ((this.vScroll && (i == $KW.touch.TouchContext.UP || i == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i == $KW.touch.TouchContext.LEFT || i == $KW.touch.TouchContext.RIGHT)))) {
      kony.events.stopPropagation(b)
    }
    if ($KG.nativeScroll) {
      if (Math.abs(e) >= Math.abs(c)) {
        kony.events.preventDefault(f)
      } else {
        return
      }
    } else {
      kony.events.preventDefault(b)
    }
    if ($KG.appbehaviors[constants.API_LEVEL] >= constants.API_LEVEL_6000 && !this.vScroll && !this.hScroll) {
      return
    }
    this.direction = i;
    this.pointX = f.pageX || f.clientX;
    this.pointY = f.pageY || f.clientY;
    if (a > this.minScrollX || a < this.maxScrollX) {
      a = this.options.hBounce ? this.x + (e / 2) : a >= this.minScrollX || this.maxScrollX >= 0 ? this.minScrollX : this.maxScrollX
    }
    if (l > this.minScrollY || l < this.maxScrollY) {
      l = this.options.vBounce ? this.y + (c / 2) : l >= this.minScrollY || this.maxScrollY >= 0 ? this.minScrollY : this.maxScrollY
    }
    var k = this.absDistX || Math.abs(e);
    var j = this.absDistY || Math.abs(c);
    if (k < $KU.minTouchMoveDisplacement && j < $KU.minTouchMoveDisplacement) {
      this.distX += e;
      this.distY += c;
      this.absDistX = Math.abs(this.distX);
      this.absDistY = Math.abs(this.distY);
      return
    }
    if (this.absDistX > this.absDistY + 5) {
      l = this.y;
      c = 0
    } else {
      if (this.absDistY > this.absDistX + 5) {
        a = this.x;
        e = 0
      }
    }
    this.moved = true;
    this.animateTo(a, l);
    if (h - this.startTime > 300) {
      this.startTime = h;
      this.startX = this.x;
      this.startY = this.y
    }
    if (this.options.onScrollMove && ((this.vScroll && (i == $KW.touch.TouchContext.UP || i == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i == $KW.touch.TouchContext.LEFT || i == $KW.touch.TouchContext.RIGHT)))) {
      this.options.onScrollMove.call(this, b)
    }
  },
  extendTouchEnd: function(h) {
    if ($KU.isTouchSupported) {
      kony.events.removeEventListener(this.scroller, "touchmove", this, false);
      kony.events.removeEventListener(this.scroller, "touchend", this, false);
      kony.events.removeEventListener(this.scroller, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.removeEventListener(window, "pointermove", this, false);
          kony.events.removeEventListener(window, "pointerdown", this, false);
          kony.events.removeEventListener(window, "pointercancel", this, false)
        } else {
          kony.events.removeEventListener(window, "MSPointerMove", this, false);
          kony.events.removeEventListener(window, "MSPointerDown", this, false);
          kony.events.removeEventListener(window, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.removeEventListener(this.scroller, "mousemove", this.handleEventListener);
        kony.events.removeEventListener(this.scroller, "mouseup", this.handleEventListener)
      }
    }
    if (this.moved && this.options.onScrollTouchReleased && ((this.vScroll && (this.direction == $KW.touch.TouchContext.UP || this.direction == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (this.direction == $KW.touch.TouchContext.LEFT || this.direction == $KW.touch.TouchContext.RIGHT)))) {
      this.options.onScrollTouchReleased.call(this)
    }
    var g = {
        dist: 0,
        time: 0
      },
      f = {
        dist: 0,
        time: 0
      },
      e = (new Date().valueOf()) - this.startTime,
      d = this.x,
      b = this.y,
      a;
    var c = this.direction;
    if (this.angularDirection) {
      if ((this.vScroll && (c != $KW.touch.TouchContext.UP && c != $KW.touch.TouchContext.DOWN)) || (this.hScroll && (c != $KW.touch.TouchContext.LEFT && c != $KW.touch.TouchContext.RIGHT))) {
        return
      }
    }
    this.direction = c;
    if (e < 300) {
      g = d ? this._momentum(d - this.startX, e, -this.x, (this.maxScrollX < 0 ? this.scrollerW - this.wrapperW + this.x - this.minScrollX : 0), this.options.hBounce ? this.wrapperW : 0) : g;
      f = b ? this._momentum(b - this.startY, e, -this.y, (this.maxScrollY < 0 ? this.scrollerH - this.wrapperH + this.y - this.minScrollY : 0), this.options.vBounce ? this.wrapperH : 0) : f;
      d = this.x + g.dist;
      b = this.y + f.dist;
      if ((this.x > this.minScrollX && d > this.minScrollX) || (this.x < this.maxScrollX && d < this.maxScrollX)) {
        g = {
          dist: 0,
          time: 0
        }
      }
      if ((this.y > this.minScrollY && b > this.minScrollY) || (this.y < this.maxScrollY && b < this.maxScrollY)) {
        f = {
          dist: 0,
          time: 0
        }
      }
    }
    if (g.dist || f.dist) {
      a = Math.max(Math.max(g.time, f.time), 10);
      this.scrollTo(Math.round(d), Math.round(b), a);
      return
    }
    this._resetPos(200)
  },
  animateTo: function(b, d) {
    var a = (this.options.hScroll || this.contentoffsetmove) && !isNaN(b) ? b : 0;
    var c = (this.options.vScroll || this.contentoffsetmove) && !isNaN(d) ? d : 0;
    if (this.options.useTransform) {
      this.scroller.style[vendor + "Transform"] = translateOpen + a + "px," + c + "px" + translateClose
    } else {
      a = Math.round(a);
      c = Math.round(c);
      this.scroller.style.left = a + "px";
      this.scroller.style.top = c + "px"
    }
    this.x = a;
    this.y = c;
    if (this.options.showImages) {
      if (this.options.vScroll) {
        this.toggleVFadeImgs()
      }
      if (this.options.hScroll) {
        this.toggleFadeImgs()
      }
    }
    this._scrollbarPos("h");
    this._scrollbarPos("v")
  },
  toggleFadeImgs: function() {
    var b = this.options.widgetID;
    var h = this.options.formid;
    var f = h + "_" + b;
    var c = $KU.getElementById(f + "_scrollee");
    if (!c) {
      return
    }
    var g = c.scrollWidth + c.offsetLeft + (c.offsetWidth - c.clientWidth);
    var i = Math.min(0, $KU.getElementById(f + "_scroller").clientWidth - g);
    var a = $KU.getElementById(f + "_leftimg");
    var e = $KU.getElementById(f + "_rightimg");
    a && $KW.touch.setHeight(a.childNodes[0]);
    e && $KW.touch.setHeight(e.childNodes[0]);
    var d = -this.x;
    if (d > c.offsetLeft) {
      a && $KU.applyFade(a, "fadeIn", 500)
    } else {
      a && $KU.applyFade(a, "fadeOut", 1000)
    }
    if (d < -i) {
      e && $KU.applyFade(e, "fadeIn", 500)
    } else {
      e && $KU.applyFade(e, "fadeOut", 1000)
    }
  },
  toggleVFadeImgs: function() {
    var b = this.options.widgetID;
    var j = this.options.formid;
    var i = j + "_" + b;
    var d = $KU.getElementById(i + "_scrollee");
    var f = d.scrollHeight + d.offsetTop + (d.offsetHeight - d.clientHeight);
    var a = Math.min(0, $KU.getElementById(i + "_scroller").clientHeight - f);
    var c = $KU.getElementById(i + "_topimg");
    var g = $KU.getElementById(i + "_bottomimg");
    var e = -this.y;
    if (e > d.offsetTop) {
      c && $KU.applyFade(c, "fadeIn", 500)
    } else {
      c && $KU.applyFade(c, "fadeOut", 1000)
    }
    if (e < -a) {
      g && $KU.applyFade(g, "fadeIn", 500)
    } else {
      g && $KU.applyFade(g, "fadeOut", 1000)
    }
  },
  _scrollbarPos: function(a, d) {
    var c = this,
      e = a == "h" ? c.x : c.y,
      b;
    if (!c[a + "Scrollbar"] || ((this.direction == "LEFT" || this.direction == "RIGHT") && !this.options.scrollbox)) {
      return
    }
    e = c[a + "ScrollbarProp"] * e;
    if (e < 0) {
      if (!c.options.fixedScrollbar) {
        b = c[a + "ScrollbarIndicatorSize"] + Math.round(e * 3);
        if (b < 8) {
          b = 8
        }
        c[a + "ScrollbarIndicator"].style[a == "h" ? "width" : "height"] = b + "px"
      }
      e = 0
    } else {
      if (e > c[a + "ScrollbarMaxScroll"]) {
        if (!c.options.fixedScrollbar) {
          b = c[a + "ScrollbarIndicatorSize"] - Math.round((e - c[a + "ScrollbarMaxScroll"]) * 3);
          if (b < 8) {
            b = 8
          }
          c[a + "ScrollbarIndicator"].style[a == "h" ? "width" : "height"] = b + "px";
          e = c[a + "ScrollbarMaxScroll"] + (c[a + "ScrollbarIndicatorSize"] - b)
        } else {
          e = c[a + "ScrollbarMaxScroll"]
        }
      }
    }
    c[a + "ScrollbarWrapper"].style[vendor + "TransitionDelay"] = "0";
    c[a + "ScrollbarWrapper"].style.opacity = d && c.options.hideScrollbar ? "0" : "1";
    if (c.options.useTransform) {
      c[a + "ScrollbarIndicator"].style[vendor + "Transform"] = translateOpen + (a == "h" ? e + "px,0" : "0," + e + "px") + translateClose
    } else {
      if (a == "h") {
        c[a + "ScrollbarIndicator"].style.left = e + "px";
        c[a + "ScrollbarIndicator"].style.top = 0
      } else {
        c[a + "ScrollbarIndicator"].style.left = 0;
        c[a + "ScrollbarIndicator"].style.top = e + "px"
      }
    }
  },
  _scrollbar: function(a) {
    var c = this,
      d = document,
      b;
    if (!c[a + "Scrollbar"]) {
      if (c[a + "ScrollbarWrapper"]) {
        if ($KU.hasTransform) {
          c[a + "ScrollbarIndicator"].style[vendor + "Transform"] = ""
        }
        c[a + "ScrollbarWrapper"].parentNode.removeChild(c[a + "ScrollbarWrapper"]);
        c[a + "ScrollbarWrapper"] = null;
        c[a + "ScrollbarIndicator"] = null
      }
      return
    }
    if (!c[a + "ScrollbarWrapper"]) {
      b = d.createElement("div");
      if (c.options.scrollbarClass) {
        b.className = c.options.scrollbarClass + a.toUpperCase()
      } else {
        b.style.cssText = "position:absolute;z-index:100;" + (a == "h" ? "height:7px;bottom:1px;left:2px;right:" + (c.vScrollbar ? "7" : "2") + "px" : "width:7px;bottom:" + (c.hScrollbar ? "7" : "2") + "px;top:2px;right:1px")
      }
      b.style.cssText += ";pointer-events:none;-" + vendor + "-transition-property:opacity;-" + vendor + "-transition-duration:" + (c.options.fadeScrollbar ? "350ms" : "0") + ";overflow:hidden; opacity:" + (c.options.hideScrollbar ? "0" : "1");
      c.wrapper.appendChild(b);
      c[a + "ScrollbarWrapper"] = b;
      b = d.createElement("div");
      if (!c.options.scrollbarClass) {
        b.style.cssText = "position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9); -" + vendor + "-background-clip:padding-box;-" + vendor + "-box-sizing:border-box; " + (a == "h" ? "height:100%" : "width:100%") + "; -" + vendor + "-border-radius:3px;border-radius:3px"
      }
      if (c.options.useTransform) {
        b.style.cssText += ";pointer-events:none;-" + vendor + "-transition-property:-" + vendor + "-transform; -" + vendor + "-transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);-" + vendor + "-transition-duration:0;-" + vendor + "-transform:" + translateOpen + "0,0" + translateClose
      }
      c[a + "ScrollbarWrapper"].appendChild(b);
      c[a + "ScrollbarIndicator"] = b
    }
    if (a == "h") {
      c.hScrollbarSize = c.hScrollbarWrapper.clientWidth;
      c.hScrollbarIndicatorSize = Math.max(Math.round(c.hScrollbarSize * c.hScrollbarSize / c.scrollerW), 8);
      c.hScrollbarIndicator.style.width = c.hScrollbarIndicatorSize + "px";
      c.hScrollbarMaxScroll = c.hScrollbarSize - c.hScrollbarIndicatorSize;
      c.hScrollbarProp = c.hScrollbarMaxScroll / c.maxScrollX
    } else {
      c.vScrollbarSize = c.vScrollbarWrapper.clientHeight;
      c.vScrollbarIndicatorSize = Math.max(Math.round(c.vScrollbarSize * c.vScrollbarSize / c.scrollerH), 8);
      c.vScrollbarIndicator.style.height = c.vScrollbarIndicatorSize + "px";
      c.vScrollbarMaxScroll = c.vScrollbarSize - c.vScrollbarIndicatorSize;
      c.vScrollbarProp = c.vScrollbarMaxScroll / c.maxScrollY
    }
    c._scrollbarPos(a, true)
  },
  _resetPos: function(c) {
    var a = this,
      d = a.x >= a.minScrollX ? a.minScrollX : a.x < a.maxScrollX ? a.maxScrollX : a.x,
      b = a.y >= a.minScrollY || a.maxScrollY > 0 ? a.minScrollY : a.y < a.maxScrollY ? a.maxScrollY : a.y;
    if (d == a.x && b == a.y) {
      if (a.moved) {
        a.moved = false;
        if (a.options.onScrollEnd && !a.contentoffsetmove && ((this.vScroll && (this.direction == $KW.touch.TouchContext.UP || this.direction == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (this.direction == $KW.touch.TouchContext.LEFT || this.direction == $KW.touch.TouchContext.RIGHT)))) {
          a.options.onScrollEnd.call(a)
        }
      }
      if (a.hScrollbar && a.options.hideScrollbar) {
        a.hScrollbarWrapper.style[vendor + "TransitionDelay"] = "100ms";
        a.hScrollbarWrapper.style.opacity = "0"
      }
      if (a.vScrollbar && a.options.hideScrollbar) {
        a.vScrollbarWrapper.style[vendor + "TransitionDelay"] = "100ms";
        a.vScrollbarWrapper.style.opacity = "0"
      }
      return
    }
    a.scrollTo(d, b, c || 0)
  },
  scrollTo: function(a, h, g, f) {
    var e = this,
      d = a,
      c, b;
    e.stop();
    if (!d.length) {
      d = [{
        x: a,
        y: h,
        time: g,
        relative: f
      }]
    }
    for (c = 0, b = d.length; c < b; c++) {
      if (d[c].relative) {
        d[c].x = e.x - d[c].x;
        d[c].y = e.y - d[c].y
      }
      e.steps.push({
        x: d[c].x,
        y: d[c].y,
        time: d[c].time || 0
      })
    }
    e._startAni()
  },
  scrollToElement: function(b, d, c, a) {
    if (!b) {
      return
    }
    if (!d) {
      d = 1000
    }
    var h = this;
    pos = h._offset(b);
    pos.left += h.wrapperOffsetLeft;
    pos.top += h.wrapperOffsetTop;
    pos.left = pos.left >= h.minScrollX ? h.minScrollX : pos.left <= h.maxScrollX ? h.maxScrollX : pos.left;
    pos.top = pos.top >= h.minScrollY ? h.minScrollY : pos.top <= h.maxScrollY ? h.maxScrollY : pos.top;
    d = d === undefined ? Math.max(Math.abs(pos.left) * 2, Math.abs(pos.top) * 2) : d;
    if (this.scrollerH > this.wrapperH || this.scrollerW > this.wrapperW) {
      var f = 0;
      var g = 0;
      var j = false;
      if (((Math.abs(this.y) + this.wrapperH) < (b.offsetTop + b.offsetHeight)) || (b.offsetTop < Math.abs(this.y)) || ($KU.isWindowsPhone && !c && !a)) {
        if (c) {
          return pos.top
        }
        f = pos.top;
        j = true
      }
      if (((Math.abs(this.x) + this.wrapperW) < (b.offsetLeft + b.offsetWidth)) || (b.offsetLeft < Math.abs(this.x)) || ($KU.isWindowsPhone && !a)) {
        g = pos.left;
        j = true
      }
      if (j) {
        h.scrollTo(g, f, d)
      }
      if (kony.appinit.isiPhone) {
        b.focus()
      } else {
        setTimeout(function() {
          try {
            b.focus()
          } catch (k) {}
        }, d)
      }
    } else {
      if ($KU.isWindowsTablet) {
        setTimeout(function() {
          try {
            b.focus()
          } catch (k) {}
        }, 0)
      } else {
        try {
          b.focus()
        } catch (i) {}
      }
    }
    if (c) {
      return null
    }
    return pos
  },
  stop: function() {
    cancelFrame(this.aniTime);
    this.steps = [];
    this.moved = false;
    this.animating = false
  },
  _startAni: function() {
    var g = this,
      b = g.x,
      a = g.y,
      e = new Date().valueOf(),
      f, d;
    if (g.animating) {
      return
    }
    if (!g.steps.length) {
      g._resetPos(400);
      return
    }
    f = g.steps.shift();
    if (f.x == b && f.y == a) {
      f.time = 0
    }
    g.animating = true;
    g.moved = true;
    (function c() {
      var h = new Date().valueOf(),
        j, i;
      if (h >= e + f.time) {
        g.animateTo(f.x, f.y);
        g.animating = false;
        g._startAni();
        return
      }
      if (h === e) {
        h++
      }
      h = (h - e) / f.time - 1;
      d = Math.sqrt(1 - h * h);
      j = (f.x - b) * d + b;
      i = (f.y - a) * d + a;
      g.animateTo(j, i);
      if (g.animating) {
        g.aniTime = nextFrame(c)
      }
    })()
  },
  _momentum: function(h, c, f, a, k) {
    var i = ($KU.isWindowsTouch ? 4 : 1);
    var g = 0.0006,
      d = Math.abs(h) / c * i,
      b = (d * d) / (2 * g),
      j = 0,
      e = 0;
    if (h > 0 && b > f) {
      e = k / (6 / (b / d * g));
      f = f + e;
      d = d * f / b;
      b = f
    } else {
      if (h < 0 && b > a) {
        e = k / (6 / (b / d * g));
        a = a + e;
        d = d * a / b;
        b = a
      }
    }
    b = b * (h < 0 ? -1 : 1);
    j = d / g;
    return {
      dist: b,
      time: Math.round(j)
    }
  },
  _offset: function(a) {
    var d = -a.offsetLeft,
      c = -a.offsetTop;
    try {
      while (a = a.offsetParent) {
        if (this.options.useTransform == false && a.id && a.id.lastIndexOf("_scrollee") != -1) {
          continue
        }
        d -= a.offsetLeft;
        c -= a.offsetTop
      }
    } catch (b) {}
    return {
      left: d,
      top: c
    }
  },
  destroy: function() {
    this.hScrollbar = false;
    this.vScrollbar = false;
    this._scrollbar("h");
    this._scrollbar("v");
    if (this.scroller) {
      if ($KU.isTouchSupported) {
        kony.events.removeEventListener(this.scroller, "touchstart", this, false);
        kony.events.removeEventListener(this.scroller, "touchcancel", this, false)
      } else {
        if ($KU.isPointerSupported) {
          if ("onpointerdown" in window) {
            kony.events.removeEventListener(this.scroller, "pointerdown", this, false);
            kony.events.removeEventListener(this.scroller, "pointercancel", this, false)
          } else {
            kony.events.removeEventListener(this.scroller, "MSPointerDown", this, false);
            kony.events.removeEventListener(this.scroller, "MSPointerCancel", this, false)
          }
        } else {
          kony.events.removeEventListener(this.scroller, "mousedown", this);
          kony.events.removeEventListener(this.scroller, "mouseout", this)
        }
      }
    }
    if ($KU.isOrientationSupported) {
      kony.events.removeEventListener(window, "orientationchange", this, false)
    } else {
      kony.events.removeEventListener(window, "resize", this)
    }
    if (this.options.checkDOMChanges) {
      clearInterval(this.checkDOMTime)
    }
    var a = this.wrapper.getAttribute("kformname");
    if (!a && !this.options.scrollbox) {
      kony.events.removeEventListener(document, "touchmove", $KW.touch.preventDefault)
    }
  }
};
$KW.touch.StickyScroller = function() {
  var e = this;
  var a = document.forms;
  var c = a[0];
  if (a.length == 2) {
    c = a[1]
  }
  var f = c.id;
  var b = $KG.__currentForm.header;
  var d = $KG.__currentForm.footer;
  var g = "konyappmenudiv";
  this.wrapper = document.getElementById(f);
  this.header = document.getElementById(b);
  this.footer = document.getElementById(d);
  this.appmenu = document.getElementById(g);
  if (this.appmenu && this.footer) {
    this.footer.style.bottom = this.appmenu.clientHeight + "px"
  }
  setTimeout(function() {
    e.follow()
  }, 0);
  kony.events.addEventListener(window, "scroll", this, false)
};
$KW.touch.StickyScroller.prototype = {
  handleEvent: function(a) {
    switch (a.type) {
      case "scroll":
        this.follow(a);
        break
    }
  },
  follow: function() {
    var d = window.scrollX || document.documentElement.scrollLeft;
    var c = window.scrollY || document.documentElement.scrollTop;
    this.headerH = this.header ? this.header.clientHeight : 0;
    this.footerH = this.footer ? this.footer.clientHeight : 0;
    this.appmenuH = this.appmenu ? this.appmenu.clientHeight : 0;
    this.wrapper.style.top = -(this.footerH + this.appmenuH) + "px";
    if (this.header) {
      var b = c;
      this.header.style[vendor + "Transform"] = translateOpen + d + "px," + b + "px" + translateClose
    }
    if (this.footer) {
      var e = (window.innerHeight || document.body.clientHeight) + c - (this.footerH) - (this.headerH);
      this.footer.style.bottom = this.y1 + this.appmenuH + "px";
      this.footer.style[vendor + "Transform"] = translateOpen + d + "px," + e + "px" + translateClose
    }
    if (this.appmenu) {
      var a = (window.innerHeight || document.body.clientHeight) + c - (this.footerH) - (this.headerH) - (this.appmenuH);
      this.appmenu.style[vendor + "Transform"] = translateOpen + d + "px," + a + "px" + translateClose
    }
  },
  destroy: function() {
    kony.events.removeEventListener(window, "scroll", this, false)
  }
};
$KW.touch.gesture = function(b, e) {
  var d = e.gestureType,
    f = e.gestureObj,
    g = e.callback;
  var c = (b ? document.querySelectorAll("#" + b.pf + "_" + b.id) : document);
  if (["Form", "Form2"].contains(b.wType)) {
    if ($KG.nativeScroll) {
      c = document.getElementById(b.id)
    } else {
      c = document.querySelector('div[id="' + b.id + '_scroller"]')
    }
  }
  if (!b) {
    b = $KG
  }
  if (!$KG.gestures) {
    $KG.gestures = {}
  }
  this.gestureIdentifier = e.gestureIdentifier;
  $KG.gestures[this.gestureIdentifier] = {
    widgetModel: b,
    gestureType: d
  };
  this.widgetModel = b;
  this.gestureType = d;
  switch (this.gestureType) {
    case constants.GESTURE_TYPE_TAP:
    case 10:
    case 11:
      this.TAP = true;
      break;
    case constants.GESTURE_TYPE_SWIPE:
      this.SWIPE = true;
      break;
    case constants.GESTURE_TYPE_LONGPRESS:
      this.LONGPRESS = true;
      break;
    case constants.GESTURE_TYPE_PAN:
      this.PAN = true;
      break;
    case constants.GESTURE_TYPE_ROTATION:
      this.ROTATION = true;
      break;
    case constants.GESTURE_TYPE_PINCH:
      this.PINCH = true;
      break
  }
  this.gestureObj = f;
  this.callback = g;
  this.fingers = f.fingers || 1;
  this.taps = f.taps || 1;
  this.longTapDelay = parseInt(f.pressDuration, 10) * 1000 || 1000;
  this.swipedistance = (f.swipedistance || 50) * $KU.dpi;
  this.continuousEvents = f.continuousEvents || false;
  e.instance = this;
  if (!c || (typeof c.length == "number" && c.length == 0)) {
    return this.gestureIdentifier
  }
  if (typeof c.length != "number" || ($KG.nativeScroll && ["Form", "Form2"].contains(b.wType))) {
    this.widget = [c]
  } else {
    this.widget = c
  }
  for (var a = 0; a < this.widget.length; a++) {
    if (this.gestureType === constants.GESTURE_TYPE_PAN || this.gestureType === constants.GESTURE_TYPE_ROTATION || this.gestureType === constants.GESTURE_TYPE_PINCH) {
      kony.events.addEventListener(this.widget[a], "gesturestart", this, false)
    } else {
      if ($KU.isPointerSupported) {
        kony.events.addEventListener(this.widget[a], "MSPointerDown", this, false)
      } else {
        kony.events.addEventListener(this.widget[a], "touchstart", this, false)
      }
    }
  }
  return this.gestureIdentifier
};
$KW.touch.gesture.prototype = {
  removeGesture: function(c, d) {
    clearTimeout(this.touchTimer);
    clearTimeout(this.longPressTimer);
    if (d != false) {
      this.widgetModel.gestures[c] = ""
    }
    var b = this.widget;
    for (var a = 0; b && a < b.length; a++) {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.removeEventListener(b[a], "pointerdown", this, false);
          kony.events.removeEventListener(b[a], "pointermove", this, false);
          kony.events.removeEventListener(b[a], "pointerup", this, false);
          kony.events.removeEventListener(b[a], "pointercancel", this, false)
        } else {
          kony.events.removeEventListener(b[a], "MSPointerDown", this, false);
          kony.events.removeEventListener(b[a], "MSPointerMove", this, false);
          kony.events.removeEventListener(b[a], "MSPointerUp", this, false);
          kony.events.removeEventListener(b[a], "MSPointerCancel", this, false)
        }
      } else {
        kony.events.removeEventListener(b[a], "touchstart", this, false);
        kony.events.removeEventListener(b[a], "touchmove", this, false);
        kony.events.removeEventListener(b[a], "touchend", this, false);
        kony.events.removeEventListener(b[a], "gesturestart", this, false);
        kony.events.removeEventListener(b[a], "gesturechange", this, false);
        kony.events.removeEventListener(b[a], "gestureend", this, false);
        kony.events.removeEventListener(b[a], "touchcancel", this, false)
      }
    }
  },
  handleEvent: function(a) {
    switch (a.type) {
      case "touchstart":
      case "MSPointerDown":
      case "pointerdown":
        this.onTouchStart(a);
        break;
      case "touchmove":
      case "MSPointerMove":
      case "pointermove":
        this.onTouchMove(a);
        break;
      case "touchend":
      case "MSPointerUp":
      case "pointerup":
      case "touchcancel":
      case "MSPointerCancel":
      case "pointercancel":
        this.onTouchEnd(a);
        break;
      case "gesturestart":
        this.onGestureStart(a);
        break;
      case "gesturechange":
        this.onGestureChange(a);
        break;
      case "gestureend":
        this.onGestureEnd(a);
        break
    }
  },
  onTouchStart: function(c) {
    var e = c.touches && c.touches[0] || c;
    this.currentTouch = c;
    if ($KU.isPointerSupported) {
      if ("onpointerdown" in window) {
        kony.events.addEventListener(c.currentTarget, "pointermove", this, false);
        kony.events.addEventListener(c.currentTarget, "pointerup", this, false);
        kony.events.addEventListener(c.currentTarget, "pointercancel", this, false)
      } else {
        kony.events.addEventListener(c.currentTarget, "MSPointerMove", this, false);
        kony.events.addEventListener(c.currentTarget, "MSPointerUp", this, false);
        kony.events.addEventListener(c.currentTarget, "MSPointerCancel", this, false)
      }
    } else {
      kony.events.addEventListener(c.currentTarget, "touchmove", this, false);
      kony.events.addEventListener(c.currentTarget, "touchend", this, false);
      kony.events.addEventListener(c.currentTarget, "touchcancel", this, false)
    }
    this.x1 = e.pageX;
    this.y1 = e.pageY;
    var a = new Date().valueOf();
    var d = a - (this.doubleTimer || a);
    this.last = this.doubleTimer = a;
    if (d > 0 && d <= 250) {
      this.isDoubleTap = true
    } else {
      this.isDoubleTap = false
    }
    this.touchTimer && clearTimeout(this.touchTimer);
    this.curTarget = c.currentTarget;
    var b = this;
    this.LONGPRESS && (this.longPressTimer = setTimeout(function() {
      b.onLongTap(b.curTarget)
    }, this.longTapDelay))
  },
  onTouchMove: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.x2 = b.pageX;
    this.y2 = b.pageY
  },
  onTouchEnd: function(g) {
    var h = g.touches && g.touches[0] || g;
    var f = this;
    this.currentTouch = g;
    if ($KU.isPointerSupported) {
      if ("onpointerdown" in window) {
        kony.events.removeEventListener(g.currentTarget, "pointermove", this, false);
        kony.events.removeEventListener(g.currentTarget, "pointerup", this, false);
        kony.events.removeEventListener(g.currentTarget, "pointercancel", this, false)
      } else {
        kony.events.removeEventListener(g.currentTarget, "MSPointerMove", this, false);
        kony.events.removeEventListener(g.currentTarget, "MSPointerUp", this, false);
        kony.events.removeEventListener(g.currentTarget, "MSPointerCancel", this, false)
      }
    } else {
      kony.events.removeEventListener(g.currentTarget, "touchmove", this, false);
      kony.events.removeEventListener(g.currentTarget, "touchend", this, false);
      kony.events.removeEventListener(g.currentTarget, "touchcancel", this, false)
    }
    if (this.isDoubleTap && this.TAP && this.taps == 2) {
      kony.print("DOUBLE TAP");
      this.executeCallback(g.currentTarget);
      delete this.doubleTimer
    }
    var d = (this.x2 ? this.x2 : this.x1) - this.x1;
    var b = (this.y2 ? this.y2 : this.y1) - this.y1;
    if ((this.x2 > 0 && d != 0) || (this.y2 > 0 && b != 0)) {
      if (this.SWIPE) {
        var c = Math.abs(d);
        var a = Math.abs(b);
        if (c > this.swipedistance || a > this.swipedistance) {
          var e = $KU.getSwipeDirection(d, b);
          kony.print("SWIPE: " + e);
          this.executeCallback(g.currentTarget, e)
        }
      }
      this.x1 = this.x2 = this.y1 = this.y2 = 0
    } else {
      if (this.last) {
        if (this.TAP && this.taps == 1) {
          if (this.widgetModel.gestures && this.widgetModel.gestures[10] && this.widgetModel.gestures[11]) {
            this.touchTimer = setTimeout(function() {
              if ($KG.gestures[f.gestureIdentifier]) {
                var j = false;
                var i = f.widgetModel.gestures[11];
                for (var k in i) {
                  j = i[k].instance.isDoubleTap
                }
                if (!j) {
                  f.executeCallback(g.currentTarget)
                }
              }
            }, 250)
          } else {
            if ($KG.gestures[f.gestureIdentifier]) {
              kony.print("TAP");
              f.executeCallback(g.currentTarget)
            }
          }
        }
      }
    }
    this.last = 0
  },
  onTouchCancel: function() {},
  onGestureStart: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.currentTouch = a;
    kony.events.addEventListener(a.currentTarget, "gesturechange", this, false);
    kony.events.addEventListener(a.currentTarget, "gestureend", this, false);
    this.x1 = b.pageX;
    this.y1 = b.pageY;
    this.gestureStartTime = new Date().valueOf();
    this.excecuteGestureEvent(a, 1)
  },
  onGestureChange: function(a) {
    if (!a) {
      return
    }
    if (this.continuousEvents) {
      var b = a.touches && a.touches[0] || a;
      this.x2 = b.pageX;
      this.y2 = b.pageY;
      this.excecuteGestureEvent(a, 2)
    }
  },
  onGestureEnd: function(a) {
    kony.events.removeEventListener(a.currentTarget, "gesturechange", this, false);
    kony.events.removeEventListener(a.currentTarget, "gestureend", this, false);
    var b = a.touches && a.touches[0] || a;
    this.x2 = b.pageX;
    this.y2 = b.pageY;
    this.excecuteGestureEvent(a, 3)
  },
  excecuteGestureEvent: function(b, f) {
    if (this.ROTATION) {
      this.rotation = b.rotation;
      this.executeCallback(b.currentTarget, null, f)
    }
    this.scale = b.scale;
    if (this.PINCH && b.scale !== 1) {
      if (f && f > 1) {
        var a = new Date().valueOf();
        var c = (a - this.gestureStartTime) / 1000;
        this.velocity = (1 - b.scale) / c;
        this.velocityX = (this.x2 - this.x1) / c;
        this.velocityY = (this.y2 - this.y1) / c
      }
      try {
        this.executeCallback(b.currentTarget, null, f)
      } catch (d) {}
    }
    if (this.PAN) {
      this.executeCallback(b.currentTarget, null, f)
    }
  },
  onLongTap: function(a) {
    if (this.last && this.LONGPRESS) {
      var b = new Date().valueOf() - this.last;
      if (b >= this.longTapDelay) {
        if ($KG.gestures[this.gestureIdentifier]) {
          kony.print("LONGPRESS: " + this.longTapDelay + "ms");
          this.executeCallback(a)
        }
      }
    }
  },
  executeCallback: function(n, o, r) {
    if (this.callback) {
      var f = {};
      var b = $KU.cloneObj(this.gestureObj);
      f.gestureType = this.gestureType;
      f.gesturesetUpParams = b;
      f.gestureState = r;
      f.rotation = this.rotation ? (-this.rotation) : 0;
      f.velocity = this.velocity || 0;
      f.velocityX = this.velocityX || 0;
      f.velocityY = this.velocityY || 0;
      f.scale = this.scale || 1;
      var e = n && (n !== document) ? n : (this.widget.length ? this.widget[0] : this.widget);
      var q = $KW.Utils.getOffset(e);
      var i = (this.currentTouch.touches && this.currentTouch.touches[0]) || this.currentTouch;
      f.gesturePosition = $KU.getgesturePosition(i.pageX, i.pageY, e.clientWidth, e.clientHeight, q.left, q.top);
      if (f.gestureType == constants.GESTURE_TYPE_SWIPE) {
        f.swipeDirection = $KU.getIntegerDirection(o)
      }
      f.gestureX = this.x2 || this.x1;
      f.gestureY = this.y2 || this.y1;
      f.widgetWidth = e.clientWidth;
      f.widgetHeight = e.clientHeight;
      if (f.gestureType == constants.GESTURE_TYPE_PAN) {
        f.translationX = Math.abs(f.gestureX - this.x1);
        f.translationY = Math.abs(f.gestureY - this.y1)
      }
      var l = this.widgetModel;
      if (n && (n !== document)) {
        var h = n.getAttribute("kcontainerid");
        var c = "";
        if (h) {
          c = n;
          while (c && !(c.id.split("_")[1] === h)) {
            c = c.parentNode
          }
        }
        var a = {};
        if (c && c.getAttribute("kwidgettype") === "Segment") {
          var d = $KU.getParentByTagName(n, "li");
          var g = $KU.getModelByNode(c);
          var k;
          a.widgetInfo = g;
          if (g.hasSections) {
            var j = d.getAttribute("secindex").split(",");
            a.rowIndex = +j[1];
            a.sectionIndex = +j[0];
            rowdata = g.data[a.sectionIndex][IndexJL + 1][a.rowIndex]
          } else {
            a.rowIndex = +d.getAttribute("index");
            a.sectionIndex = 0;
            rowdata = g.data[a.rowIndex]
          }
          var p = rowdata && rowdata[g.widgetdatamap[this.widgetModel.id]];
          l = $KU.extend({}, this.widgetModel);
          if (p) {
            l = $KU.extend(l, p)
          }
        }
      }
      var m = this.widgetModel.__currentForm;
      if (m) {
        this.callback(m, f)
      } else {
        if (n) {
          this.callback(l, f, a)
        } else {
          this.callback(this.widgetModel, f)
        }
      }
    }
  }
};
$KW.touch.events = {};
(function() {
  var a = false;
  if (a) {
    $KW.touch.events.touchstart = "touchstart";
    $KW.touch.events.touchmove = "touchmove";
    $KW.touch.events.touchend = "touchend";
    $KW.touch.events.touchcancel = "touchcancel"
  } else {
    $KW.touch.events.touchstart = "mousedown";
    $KW.touch.events.touchmove = "mousemove";
    $KW.touch.events.touchend = "mouseup";
    $KW.touch.events.touchcancel = "mouseout"
  }
  if (document.addEventListener) {
    $KW.touch.events.eventListener = "addEventListener"
  } else {
    $KW.touch.events.eventListener = "attachEvent";
    $KW.touch.events.touchstart = "mousedown";
    $KW.touch.events.touchmove = "mousemove";
    $KW.touch.events.touchend = "mouseup";
    $KW.touch.events.touchcancel = "mouseout"
  }
  var b = navigator.msPointerEnabled;
  if (b) {
    if ("onpointerdown" in window) {
      $KW.touch.events.touchstart = "pointerdown";
      $KW.touch.events.touchmove = "pointermove";
      $KW.touch.events.touchend = "pointerup"
    } else {
      $KW.touch.events.touchstart = "MSPointerDown";
      $KW.touch.events.touchmove = "MSPointerMove";
      $KW.touch.events.touchend = "MSPointerUp"
    }
  }
  if (document.removeEventListener) {
    $KW.touch.events.removeEventListener = "removeEventListener"
  } else {
    $KW.touch.events.removeEventListener = "detachEvent"
  }
})();
$KW.touch.TouchEvents = function(c, d, b, e) {
  var a = $KW.touch.events.touchstart;
  switch (b) {
    case "touchstart":
      a = $KW.touch.events.touchstart;
      break;
    case "touchmove":
      a = $KW.touch.events.touchmove;
      break;
    case "touchend":
      a = $KW.touch.events.touchend;
      break;
    case "touchcancel":
      a = $KW.touch.events.touchcancel;
      break;
    case "scroll":
      a = "scroll";
      break
  }
  if (e || b == "scroll") {
    if (e) {
      this.callback = e
    }
    this.widgetModel = c;
    this.widgetNode = d;
    this.widgetTopNode = $KW.Utils.getWidgetNodeFromNodeByModel(c, d) || d;
    this.handleEventListener = this.handleEvent.bind(this);
    kony.events.addEventListener(d, a, this.handleEventListener, false);
    if (b == "scroll") {
      kony.events.addEventListener(d, kony.appinit.isFirefox ? "DOMMouseScroll" : "mousewheel", this.handleEventListener, false);
      this.isScrolling = false
    }
  } else {
    kony.events.removeEventListener(d, a, this.handleEventListener, false)
  }
};
$KW.touch.TouchEvents.prototype = {
  removeTouch: function(b, c) {
    if (c != false) {
      this.widgetModel.touches[b] = ""
    }
    var d = this.widgetNode;
    var a = $KW.touch.events.touchstart;
    switch (b) {
      case "touchstart":
        a = $KW.touch.events.touchstart;
        break;
      case "touchmove":
        a = $KW.touch.events.touchmove;
        break;
      case "touchend":
        a = $KW.touch.events.touchend;
        break;
      case "touchcancel":
        a = $KW.touch.events.touchcancel;
        break
    }
    kony.events.removeEventListener(d, a, this.handleEventListener, false)
  },
  handleEvent: function(c) {
    if (c.type == "scroll" || c.type == "mousewheel" || c.type == "DOMMouseScroll") {
      this.handleScrollEvent(c)
    } else {
      var e = (c.touches && c.touches[0]) || (c.changedTouches && c.changedTouches[0]) || c;
      var a = e.pageX || e.clientX;
      var b = e.pageY || e.clientY;
      var d = $KW.Utils.getPosition(this.widgetTopNode);
      a = a - d.left;
      b = b - d.top;
      this.callback.call(this.widgetModel, this.widgetModel, a, b)
    }
  },
  handleScrollEvent: function(e) {
    var f = this.widgetModel;
    if (!f.enableScrolling) {
      return
    }
    var d = f.frame;
    var h = this.widgetNode;
    var b = d.width;
    var l = d.height;
    var o = (f.wType == "Form") ? "vertical" : $KW.stringifyScrolldirection[f.scrolldirection];
    var k = true;
    var n = b + h.scrollLeft;
    var j = l + h.scrollTop;
    var i = false;
    if ((e.wheelDelta && e.wheelDelta > 0) || (e.detail && e.detail < 0)) {
      i = true
    }
    var g = (h.scrollLeft == 0 && i);
    var c = (h.scrollTop == 0 && i);
    if (o == "horizontal") {
      if (n >= h.scrollWidth || c) {
        k = false
      }
    } else {
      if (o == "vertical") {
        if (j >= h.scrollHeight || g) {
          k = false
        }
      } else {
        if (o == "both") {
          if (n >= h.scrollWidth && j >= h.scrollHeight || (g && c)) {
            k = false
          }
        } else {
          if (o == "none") {
            k = false
          }
        }
      }
    }
    if (k) {
      if (!this.isScrolling) {
        var a = f.onScrollStart;
        if (a) {
          a.call(f, f)
        }
        this.isScrolling = true
      }
      var m = f.onScrolling;
      m && m.call(f, f);
      this.timer && clearTimeout(this.timer);
      this.timer = setTimeout(this.scrollEndCaller.bind(this), 100)
    }
  },
  scrollEndCaller: function() {
    var a = this.widgetModel;
    this.isScrolling = false;
    var b = a.onScrollEnd;
    b && b.call(a, a)
  }
};
$KW.touch.Drag = function(a, d, f, e, c, b) {
  this.model = a;
  this.widget = d;
  this.dragEvent = c;
  this.dragableElement = f;
  this.containerElement = e || document;
  this.moveElement = b || f;
  if (f) {
    kony.events.addEventListener(f, $KW.touch.events.touchstart, this.handleEvent.bind(this))
  }
};
$KW.touch.Drag.prototype = {
  addDrag: function() {
    if (this.dragableElement) {
      kony.events.addEventListener(this.dragableElement, $KW.touch.events.touchstart, this.handleEvent.bind(this))
    }
  },
  removeDrag: function() {
    this.dragableElement[kony.widgets.touch.events.removeEventListener]($KW.touch.events.touchstart, this, false)
  },
  handleEvent: function(a) {
    switch (a.type) {
      case $KW.touch.events.touchstart:
        return this.onTouchStart(a);
        break;
      case $KW.touch.events.touchmove:
        return this.onTouchMove(a);
        break;
      case $KW.touch.events.touchend:
        return this.onTouchEnd(a);
        break;
      case $KW.touch.events.touchcancel:
        return this.onTouchCancel(a);
        break
    }
  },
  onTouchStart: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.x1 = b.pageX || b.clientX;
    this.y1 = b.pageY || b.clientY;
    if (this.model && this.model.wType == "Popup") {
      if (this.dragableElement.className == "resizearea") {
        this.offsetX = this.moveElement.offsetWidth;
        this.offsetY = this.moveElement.childNodes[0].children[1].clientHeight
      } else {
        this.dragableElement.style.cursor = "move";
        this.offsetX = $KU.getInt(this.moveElement.offsetLeft);
        this.offsetY = $KU.getInt(this.moveElement.offsetTop)
      }
      this.dragEvent(this, $KW.touch.events.touchstart)
    } else {
      kony.events.stopPropagation(a);
      this.dragEvent(this.moveElement, this.x1, this.y1, "1")
    }
    this.handleEventListener = this.handleEvent.bind(this);
    kony.events.addEventListener(this.containerElement, $KW.touch.events.touchmove, this.handleEventListener);
    kony.events.addEventListener(this.containerElement, $KW.touch.events.touchend, this.handleEventListener);
    document.onselectstart = function() {
      return false
    };
    this.dragableElement.ondragstart = function() {
      return false
    };
    return false
  },
  onTouchMove: function(d) {
    var f = d.touches && d.touches[0] || d;
    this.x2 = f.pageX || f.clientX;
    this.y2 = f.pageY || f.clientY;
    if (this.model && this.model.wType == "Popup") {
      var b = this.offsetX + this.x2 - this.x1;
      var c = this.offsetY + this.y2 - this.y1;
      var a = (document.documentElement.clientHeight || window.innerHeight || document.body.clientHeight) - this.widget.clientHeight;
      var e = (document.documentElement.clientWidth || window.innerWidth || document.body.clientWidth) - this.widget.clientWidth;
      if (this.dragableElement.className == "resizearea") {
        this.moveElement.style.width = Math.max(b, 150) + "px";
        this.moveElement.childNodes[0].children[1].style.height = Math.max(c, 100) + "px"
      } else {
        if (b < 0) {
          this.moveElement.style.left = "0px"
        } else {
          if (b > e) {
            this.moveElement.style.left = e + "px"
          } else {
            this.moveElement.style.left = (this.offsetX + this.x2 - this.x1) + "px"
          }
        }
        if (c < 0) {
          this.moveElement.style.top = "0px"
        } else {
          if (c > a) {
            this.moveElement.style.top = a + "px"
          } else {
            this.moveElement.style.top = (this.offsetY + this.y2 - this.y1) + "px"
          }
        }
      }
      this.dragEvent(this, $KW.touch.events.touchmove)
    } else {
      this.dragEvent(this.moveElement, this.x2, this.y2, "2")
    }
  },
  onTouchEnd: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.x3 = b.pageX || b.clientX;
    this.y3 = b.pageY || b.clientY;
    if (this.model && this.model.wType == "Popup") {
      this.dragEvent(this, $KW.touch.events.touchend)
    } else {
      this.dragEvent(this.moveElement, this.x3, this.y3, "3")
    }
    document.onselectstart = null;
    this.dragableElement.ondragstart = null;
    this.removeEvents()
  },
  onTouchCancel: function() {
    this.dragEvent(this, $KW.touch.events.touchend);
    this.removeEvents()
  },
  removeEvents: function() {
    this.dragableElement.style.cursor = "auto";
    kony.events.removeEventListener(this.containerElement, kony.widgets.touch.events.touchmove, this.handleEventListener);
    kony.events.removeEventListener(this.containerElement, kony.widgets.touch.events.touchend, this.handleEventListener)
  }
};
constants = {
  ALERT_TYPE_CONFIRMATION: "confirmation",
  ALERT_TYPE_ERROR: "error",
  ALERT_TYPE_INFO: "info",
  APPLICATION_MODE_NATIVE: 1,
  APPLICATION_MODE_HYBRID: 2,
  APPLICATION_MODE_WRAPPER: 3,
  API_LEVEL: "APILevel",
  API_LEVEL_6000: 6000,
  BOX_LAYOUT_HORIZONTAL: 1,
  BOX_LAYOUT_VERTICAL: 2,
  BOX_LAYOUT_ALIGN_FROM_LEFT: 3,
  BOX_LAYOUT_ALIGN_FROM_CENTER: 4,
  BOX_LAYOUT_ALIGN_FROM_RIGHT: 5,
  BOX_POSITION_AS_HEADER: 1,
  BOX_POSTION_AS_FOOTER: 2,
  BOX_POSITION_AS_NORMAL: 3,
  BOX_POSITION_AS_SCREENLEVEL_SEG_HEADER: 4,
  BOX_POSITION_AS_SCREENLEVEL_SEG_FOOTER: 5,
  CHECKBOX_ITEM_ORIENTATION_VERTICAL: "vertical",
  CHECKBOX_ITEM_ORIENTATION_HORIZONTAL: 2,
  CHECKBOX_VIEW_TYPE_DEFAULTTVIEW: "defaultview",
  CHECKBOX_VIEW_TYPE_CUSTOMVIEW: "customview",
  CHECKBOX_VIEW_TYPE_LISTVIEW: 0,
  CHECKBOX_VIEW_TYPE_TABLEVIEW: "tableview",
  CHECKBOX_VIEW_TYPE_TOGGLEVIEW: "toggleview",
  CHECKBOX_VIEW_TYPE_ONSCREENWHEEL: 3,
  COMBOBOX_VIEW_TYPE_LISTVIEW: 0,
  COMBOBOX_VIEW_TYPE_TABLEVIEW: "tableview",
  COMBOBOX_VIEW_TYPE_TOGGLEVIEW: "toggleview",
  COMBOBOX_VIEW_TYPE_ONSCREENWHEEL: 3,
  CONTAINER_HEIGHT_BY_FORM_REFERENCE: 1,
  CONTAINER_HEIGHT_BY_PARENT_WIDTH: 2,
  CONTAINER_HEIGHT_BY_DEVICE_REFERENCE: 3,
  CALENDAR_VIEW_TYPE_DEFAULT: "default",
  CALENDAR_VIEW_TYPE_GRID_POPUP: "popup",
  CALENDAR_VIEW_TYPE_GRID_ONSCREEN: "onscreen",
  CALENDAR_DATE_FORMAT_DEFAULT: "dd/MM/yyyy",
  DEVICE_ORIENTATION_PORTRAIT: 1,
  DEVICE_ORIENTATION_LANDSCAPE: 2,
  FORM_TYPE_STATIC: 1,
  FORM_TYPE_DYNAMIC: 2,
  FORM_TYPE_NATIVE: 3,
  FORM_DISPLAY_ORIENTATION_PORTRAIT: 1,
  FORM_DISPLAY_ORIENTATION_LANDSCAPE: 2,
  FORM_DISPLAY_ORIENTATION_BOTH: 3,
  FORM_DEVICE_ORIENTATION_PORTRAIT: 1,
  FORM_DEVICE_ORIENTATION_LANDSCAPE: 2,
  FORM_ADJUST_RESIZE: 1,
  FORM_ADJUST_PAN: 2,
  FORM_FORWARD_NAVIGATION: 1,
  HTTP_METHOD_GET: "get",
  HTTP_METHOD_POST: "post",
  HTTP_RESPONSE_TYPE_TEXT: "application/text",
  HTTP_RESPONSE_TYPE_JSON: "application/json",
  HTTP_RESPONSE_TYPE_DOCUMENT: "application/xml",
  HTTP_RESPONSE_TYPE_RAWDATA: "image/png",
  HTTP_READY_STATE_UNSENT: 0,
  HTTP_READY_STATE_OPENED: 1,
  HTTP_READY_STATE_HEADERS_RECEIVED: 2,
  HTTP_READY_STATE_LOADING: 3,
  HTTP_READY_STATE_DONE: 4,
  IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS: 0,
  IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO: "maintainaspectratio",
  IMAGE_SCALE_MODE_CROP: 2,
  IMAGE_GLOSSY_EFFECT_DEFAULT: 0,
  IMAGE_GLOSSY_EFFECT_RADIAL: 1,
  IMAGE_GLOSSY_EFFECT_LINEAR: 2,
  LOADING_SCREEN_POSITION_FULL_SCREEN: "fullscreen",
  LOADING_SCREEN_POSITION_ONLY_CENTER: "center",
  LISTBOX_VIEW_TYPE_LISTVIEW: 0,
  LISTBOX_VIEW_TYPE_TABLEVIEW: 1,
  LISTBOX_VIEW_TYPE_TOGGLEVIEW: 2,
  LISTBOX_VIEW_TYPE_ONSCREENWHEEL: 3,
  LISTBOX_VIEW_TYPE_SPINNER: 4,
  MAP_PROVIDER_GOOGLE: "google",
  MAP_SOURCE_NON_NATIVE: "non-native",
  MAP_SOURCE_NATIVE: "native",
  MAP_SOURCE_STATIC: "static",
  MAP_VIEW_MODE_NORMAL: 1,
  MAP_VIEW_MODE_SATELLITE: 2,
  MAP_VIEW_MODE_HYBRID: 3,
  MAP_VIEW_MODE_TERRAIN: 7,
  MAP_VIEW_MODE_POLYGON: 5,
  MAP_HEIGHT_BY_FORM_REFERENCE: 1,
  MAP_HEIGHT_BY_PARENT_WIDTH: 2,
  NETWORK_TYPE_ANY: "ANY",
  NETWORK_TYPE_ETHERNET: "ETHERNET",
  NETWORK_TYPE_WIFI: "WIFI",
  NETWORK_TYPE_3G: "3G",
  POPUP_TYPE_NATIVE: 1,
  POPUP_TYPE_SPA: 2,
  POPUP_TYPE_TC: 3,
  RADIOGROUP_ITEM_ORIENTATION_VERTICAL: "vertical",
  RADIOGROUP_ITEM_ORIENTATION_HORIZONTAL: 2,
  RADIOBUTTON_VIEW_TYPE_DEFAULTTVIEW: "defaultview",
  RADIOBUTTON_VIEW_TYPE_CUSTOMVIEW: "customview",
  SCROLLBOX_HEIGHT_BY_FORM_REFERENCE: 1,
  SCROLLBOX_HEIGHT_BY_PARENT_WIDTH: 2,
  SCROLLBOX_SCROLL_HORIZONTAL: 1,
  SCROLLBOX_SCROLL_VERTICAL: 2,
  SCROLLBOX_SCROLL_BOTH: 3,
  SCROLLBOX_SCROLL_NONE: 4,
  SEGUI_VIEW_TYPE_TABLEVIEW: "tableview",
  SEGUI_VIEW_TYPE_PAGEVIEW: "pageview",
  SEGUI_DEFAULT_BEHAVIOR: 0,
  SEGUI_SINGLE_SELECT_BEHAVIOR: 1,
  SEGUI_MULTI_SELECT_BEHAVIOR: 2,
  TEXTBOX_INPUT_MODE_ANY: "A",
  TEXTBOX_INPUT_MODE_NUMERIC: "N",
  TEXTBOX_INPUT_MODE_PASSWORD: "P",
  TEXTBOX_KEY_BOARD_STYLE_DEFAULT: "A",
  TEXTBOX_KEY_BOARD_STYLE_EMAIL: "emailpad",
  TEXTBOX_KEY_BOARD_STYLE_URL: "urlpad",
  TEXTBOX_KEY_BOARD_STYLE_CHAT: "chatpad",
  TEXTBOX_KEY_BOARD_STYLE_DECIMAL: "number",
  TEXTBOX_KEY_BOARD_STYLE_NUMBER_PAD: "digitpad",
  TEXTBOX_KEY_BOARD_STYLE_PHONE_PAD: "telpad",
  TEXTBOX_VIEW_TYPE_DEFAULT: "default",
  TEXTBOX_VIEW_TYPE_SEARCH_VIEW: "search",
  TEXTBOX_AUTO_CAPITALIZE_NONE: "none",
  TEXTBOX_AUTO_CAPITALIZE_WORDS: "words",
  TEXTBOX_AUTO_CAPITALIZE_SENTENCES: "sentences",
  TEXTBOX_AUTO_CAPITALIZE_ALL: "characters",
  TEXTBOX_DEFAULT_PLATFORM_HEIGHT: 1,
  TEXTBOX_FONT_METRICS_DRIVEN_HEIGHT: 2,
  TEXTBOX_CUSTOM_HEIGHT: 3,
  CONTAINER_HEIGHT_BY_FORM_REFERENCE: 1,
  CONTAINER_HEIGHT_BY_PARENT_WIDTH: 2,
  TEXTAREA_INPUT_MODE_ANY: "A",
  TEXTAREA_INPUT_MODE_NUMERIC: "N",
  TEXTAREA_KEY_BOARD_STYLE_DEFAULT: "A",
  TEXTAREA_KEY_BOARD_STYLE_EMAIL: "emailpad",
  TEXTAREA_KEY_BOARD_STYLE_URL: "urlpad",
  TEXTAREA_KEY_BOARD_STYLE_CHAT: "chatpad",
  TEXTAREA_KEY_BOARD_STYLE_DECIMAL: "number",
  TEXTAREA_KEY_BOARD_STYLE_NUMBER_PAD: "number",
  TEXTAREA_KEY_BOARD_STYLE_PHONE_PAD: "telpad",
  TEXTAREA_AUTO_CAPITALIZE_NONE: "none",
  TEXTAREA_AUTO_CAPITALIZE_WORDS: "words",
  TEXTAREA_AUTO_CAPITALIZE_SENTENCES: "sentences",
  TEXTAREA_AUTO_CAPITALIZE_ALL: "characters",
  HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW: "stripview",
  HORIZONTAL_IMAGESTRIP_VIEW_TYPE_SLOTVIEW: "slotview",
  HORIZONTAL_IMAGESTRIP_VIEW_TYPE_PAGEVIEW: "pageview",
  WIDGET_ALIGN_TOP_LEFT: 1,
  WIDGET_ALIGN_TOP_CENTER: 2,
  WIDGET_ALIGN_TOP_RIGHT: 3,
  WIDGET_ALIGN_MIDDLE_LEFT: 4,
  WIDGET_ALIGN_CENTER: 5,
  WIDGET_ALIGN_MIDDLE_RIGHT: 6,
  WIDGET_ALIGN_BOTTOM_LEFT: 7,
  WIDGET_ALIGN_BOTTOM_CENTER: 8,
  WIDGET_ALIGN_BOTTOM_RIGHT: 9,
  CONTENT_ALIGN_TOP_LEFT: 1,
  CONTENT_ALIGN_TOP_CENTER: 2,
  CONTENT_ALIGN_TOP_RIGHT: 3,
  CONTENT_ALIGN_MIDDLE_LEFT: 4,
  CONTENT_ALIGN_CENTER: 5,
  CONTENT_ALIGN_MIDDLE_RIGHT: 6,
  CONTENT_ALIGN_BOTTOM_LEFT: 7,
  CONTENT_ALIGN_BOTTOM_CENTER: 8,
  CONTENT_ALIGN_BOTTOM_RIGHT: 9,
  GESTURE_TYPE_TAP: 1,
  GESTURE_TYPE_SWIPE: 2,
  GESTURE_TYPE_LONGPRESS: 3,
  GESTURE_TYPE_PAN: 4,
  GESTURE_TYPE_ROTATION: 5,
  GESTURE_TYPE_PINCH: 6,
  BROWSER_REQUEST_METHOD_GET: "get",
  BROWSER_REQUEST_METHOD_POST: "post",
  TABPANE_VIEW_TYPE_TABVIEW: "tabview",
  TABPANE_VIEW_TYPE_COLLAPSIBLEVIEW: "collapsibleview",
  TABPANE_VIEW_TYPE_PAGEVIEW: "pageview",
  TABPANE_COLLAPSIBLE_IMAGE_POSITION_RIGHT: "right",
  TABPANE_COLLAPSIBLE_IMAGE_POSITION_LEFT: "left",
  TABPANE_COLLAPSIBLE_TABNAME_ALIGNMENT_RIGHT: "right",
  TABPANE_COLLAPSIBLE_TABNAME_ALIGNMENT_LEFT: "left",
  TABPANE_COLLAPSIBLE_TABNAME_ALIGNMENT_CENTER: "center",
  TAB_HEADER_POSITION_TOP: "top",
  TAB_HEADER_POSITION_BOTTOM: "bottom",
  TAB_HEADER_POSITION_LEFT: "left",
  TAB_HEADER_POSITION_RIGHT: "right",
  ONHOVER_MOUSE_ENTER: 0,
  ONHOVER_MOUSE_MOVE: 1,
  ONHOVER_MOUSE_LEAVE: 2,
  DATAGRID_COLUMN_TYPE_TEXT: "text",
  DATAGRID_COLUMN_TYPE_IMAGE: "image",
  DATAGRID_COLUMN_TYPE_TEMPLATE: "template",
  CONTAINER_LAYOUT_GRID: 5,
  IMAGE_GALLERY_VIEW_TYPE_PAGEVIEW: "pageview",
  COMBOBOX_VIEW_TYPE_EDITVIEW: "editableview",
  DATAGRID_SCROLLBAR_NONE: 0,
  DATAGRID_SCROLLBAR_VERTICAL: 1,
  FILE_UPLOAD_START_STATE: 0,
  FILE_UPLOAD_PROGRESS_STATE: 1,
  FILE_UPLOAD_COMPLETE_STATE: 2,
  FILE_UPLOAD_ERROR_STATE: 3,
  UPLOAD_MAX_WAIT_TIME: 120000,
  MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW: 1,
  MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW: 2,
  MENU_CONTAINER_VIEW_TYPE_TREEVIEW: 3,
  MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW: 4,
  MENUCONTAINER_POSITION_AS_HORIZONTAL: "horizontal",
  MENUCONTAINER_POSITION_AS_VERTICAL: "vertical",
  SLIDER_HORIZONTAL_ORIENTATION: "horizontal",
  SLIDER_VERTICAL_ORIENTATION: "vertical",
  SLIDER_VIEW_TYPE_DEFAULT: "default",
  SLIDER_VIEW_TYPE_PROGRESS: "progress"
};
kony.flex = {
  DEFAULT_UNIT: "%",
  DP: "dp",
  PX: "px",
  PERCENTAGE: "%",
  FREE_FORM: 1,
  FLOW_HORIZONTAL: 2,
  FLOW_VERTICAL: 3,
  VBOX_LAYOUT: 4,
  USE_PREFERRED_SIZE: "preferred",
  USE_AVAILABLE_SPACE: "available",
  SCROLL_HORIZONTAL: 1,
  SCROLL_VERTICAL: 2,
  SCROLL_BOTH: 3,
  SCROLL_NONE: 4,
  AUTOGROW_HEIGHT: 1,
  AUTOGROW_NONE: 0
};
kony.anim = {
  FILL_MODE_FORWARDS: "forwards",
  FILL_MODE_BACKWARDS: "backwards",
  FILL_MODE_BOTH: "both",
  FILL_MODE_NONE: "none",
  DIRECTION_NONE: "normal",
  DIRECTION_REVERSE: "reverse",
  DIRECTION_ALTERNATE: "alternate",
  DIRECTION_ALTERNATE_REVERSE: "alternate-reverse",
  EASE: "ease",
  EASE_IN: "ease-in",
  EASE_OUT: "ease-out",
  EASE_IN_OUT: "ease-in-out",
  LINEAR: "linear"
};
$KI.net = {
  postdataparams: function(d) {
    var b = "",
      c;
    for (var a in d) {
      if (d.hasOwnProperty(a) && a != "httpheaders") {
        c = d[a];
        kony.print("postdataparams:key  = " + a + "  value  =  " + c);
        b += a + "=" + encodeURIComponent(c);
        b += "&"
      }
    }
    return b
  },
  FormData: function() {
    var a = "",
      b = this;
    b.append = function(c, d) {
      if (c == "undefined" || c == "") {
        throw new Error("FormData append Error: key cannot be empty")
      }
      if (a == "") {
        a = c + "=" + d
      } else {
        a += "&" + (c + "=" + d)
      }
    }, b.toString = function() {
      return a
    }
  },
  HttpRequest: function() {
    var a = false,
      d = null,
      b = 0,
      c = this,
      f = null,
      e = null;
    if (window.XMLHttpRequest) {
      f = new XMLHttpRequest()
    } else {
      f = new ActiveXObject("Microsoft.XMLHTTP")
    }
    c.onReadyStateChange = null;
    c.readyState = undefined;
    c.response = "";
    c.responseType = "";
    c.status = null;
    c.statusText = null;
    c.timeout = 0;
    f.onreadystatechange = function() {
      switch (f.readyState) {
        case 0:
          !!c.onReadyStateChange && c.onReadyStateChange();
        case 1:
          c.readyState = f.readyState;
          c.response = "";
          !!c.onReadyStateChange && c.onReadyStateChange();
        case 2:
          c.readyState = f.readyState;
          c.response = "";
          !!c.onReadyStateChange && c.onReadyStateChange();
        case 3:
          c.readyState = f.readyState;
          c.response = "";
          !!c.onReadyStateChange && c.onReadyStateChange();
          break;
        case 4:
          c.status = f.status;
          c.statusText = "Request Completed";
          c.readyState = f.readyState;
          c.response = f.responseText;
          if (f.status === 200) {
            c.statusText += ": OK";
            clearTimeout(e)
          }
          if (f.status === 400) {
            c.statusText += ": Error";
            clearTimeout(e)
          }!!c.onReadyStateChange && c.onReadyStateChange();
          break;
        default:
          throw new Error("Unknown Error : XMLHttpRequest Error")
      }
    };
    c.timeoutFunction = function() {
      c.abort();
      c.readyState = f.readyState;
      c.status = 0;
      c.statusText = "Request timed out";
      c.response = "";
      !!c.onReadyStateChange && c.onReadyStateChange()
    };
    c.open = function(j, h, i, k, g) {
      if (!j && j !== "GET" && j !== "POST") {
        throw new Error("Syntax Error : Request Method is not defined");
        return
      }
      if (!h) {
        throw new Error("Syntax Error : URL is not defined");
        return
      }
      i = ((i === true) || (i === false)) && i || true;
      d = j;
      a = true;
      f.open(d, h, i, k, g)
    };
    c.send = function(g) {
      if (a === false) {
        throw new Error("InvalidStateError : 'send' called before 'open' ");
        return
      }
      if (b > 1) {
        throw new Error("InvalidStateError : 'send' called more than once ");
        return
      }
      if (g instanceof kony.net.FormData) {
        g = g.toString()
      }
      b++;
      f.timeout = !!c.timeout && c.timeout;
      e = setTimeout(c.timeoutFunction, c.timeout);
      f.send(g)
    };
    c.abort = function() {
      f.abort()
    };
    c.setRequestHeader = function(h, g) {
      if (a === false) {
        throw new Error("InvalidStateError : 'setRequestHeader' called before 'open' ");
        return
      }
      if (b > 1) {
        throw new Error("InvalidStateError : 'setRequestHeader' called after 'send' ");
        return
      }
      f.setRequestHeader(h, g)
    };
    c.getResponseHeader = function(g) {
      return !!f.getResponseHeader(g) && f.getResponseHeader(g) || null
    };
    c.getAllResponseHeaders = function() {
      return !!f.getAllResponseHeaders() && f.getAllResponseHeaders() || null
    }
  },
  sethttpheaders: function(c, f) {
    var d = [],
      e, a = 0;
    for (var b in f) {
      if (f.hasOwnProperty(b) && f[b]) {
        e = f[b] ? f[b] : "";
        d.push(b);
        kony.print("sethttpheaders: key: " + b + "value: " + e);
        c.setRequestHeader(b, e)
      }
    }
    return d
  },
  loadJSFile: function(d, c, g) {
    var a = 0;
    var f = 30000;
    var b = {
      type: "GET",
      url: d,
      timeout: f,
      paramstr: null,
      callback: g,
      info: ""
    };
    kony.print("loadJSFile: options: " + b);
    return (function e() {
      function h(k) {
        if (k) {
          k()
        }
      }
      var j = false;
      var i = new XMLHttpRequest();
      i.open(b.type, b.url, c);
      i.onLoaded = function() {
        if (this.userCancelled) {
          kony.print(" onLoaded: on Abort Mission");
          this.onAbort()
        }
      };
      i.onInteractive = function() {
        if (this.userCancelled) {
          kony.print(" onInteractive: on Abort Mission");
          this.onAbort()
        } else {
          if (!this.firstByte) {
            this.firstByte = true
          }
        }
      };
      i.onAbort = function(k) {
        kony.print(" onInteractive: <- Abort Mission");
        if (this.userCancelled) {
          this.userCancelled = false;
          this.ignoreCallback = true;
          rettable = {
            opstatus: 1,
            errcode: 1022,
            errmsg: "Request cancelled by user"
          };
          kony.print(" onInteractive: Abort Mission Success")
        }
        kony.print(" onInteractive: -> Abort Mission")
      };
      i.onTimeout = function() {
        j = true;
        rettable = {
          opstatus: 1,
          errcode: 1014,
          errmsg: "Request timed out"
        };
        kony.print("Request timed out.")
      };
      i.onreadystatechange = function() {
        switch (!this.ignoreCallback && i.readyState) {
          case 1:
            kony.print("onreadystatechange: ReadyState 1");
            i.onLoaded(i);
            break;
          case 2:
            kony.print("onreadystatechange: ReadyState 2");
            i.onInteractive(i);
            break;
          case 3:
            kony.print("onreadystatechange: ReadyState 3");
            i.onAbort(i);
            break;
          case 4:
            kony.print("onreadystatechange: ReadyState 4");
            if (!j) {
              i.onComplete(i);
              i = null
            }
            break;
          default:
            kony.print("onreadystatechange: ReadyState Invalid: " + i.readyState)
        }
      };
      i.addResponseText = function(l) {
        rettable = l.responseText;
        if (typeof document != "undefined") {
          var k = document.createElement("script");
          k.type = "text/javascript";
          k.text = l.responseText;
          document.getElementsByTagName("head")[0].appendChild(k);
          if (b.callback) {
            b.callback()
          }
          document.getElementsByTagName("head")[0].removeChild(k)
        }
      };
      i.onComplete = function(k) {
        window.clearTimeout(k.timeoutid);
        kony.print("status: " + k.status + "readystate: " + k.readyState);
        this.firstByte = false;
        if (this.userCancelled) {
          kony.print(" onComplete: on Abort Mission");
          this.onAbort();
          return
        }
        if (k.status == 200) {
          if (k.responseText && k.responseText.length > 0) {
            i.addResponseText(k)
          } else {
            kony.print("errcode: 1013, No JS Code");
            rettable = {
              opstatus: "1",
              errcode: "1013",
              errmsg: "Request returned no JS code"
            }
          }
        } else {
          if (k.status == 0 || (/5+/.test(k.status.toString()) == true)) {
            if (k.responseText && k.responseText.length > 0) {
              i.addResponseText(k);
              return
            }
            kony.print("errcode: 1012, Request Failed");
            rettable = {
              opstatus: 1,
              errcode: "1012",
              errmsg: "Request Failed"
            }
          } else {
            if (/4+/.test(k.status.toString()) == true) {
              kony.print("errcode: 1012, Request Failed");
              rettable = {
                opstatus: 1,
                errcode: "1015",
                errmsg: "Request Failed"
              }
            } else {
              if (k.responseText != "") {
                kony.print("Status != 200 but response exists");
                rettable = k.responseText
              } else {
                kony.print("Empty response received.")
              }
            }
          }
        }
      };
      i.timeoutid = setTimeout(i.onTimeout, b.timeout);
      i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      if (typeof(headerobj) == "object") {
        b.httpheaders = $KI.net.sethttpheaders(i, headerobj)
      }
      i.send(b.paramstr);
      return i
    })()
  },
  invokeserviceasync: function(s, u, g, r, c, j) {
    var o = 0;
    var m = null;
    var t = j || 60000;
    var v = window.location.protocol + "//" + window.location.host;
    var l = "";
    var a = "";
    var b = $KG.appmode;
    var f = $KI.props.getProperty(null, "appmiddlewarecontext") || ((typeof appConfig != "undefined") && appConfig && appConfig.middlewareContext) || ((typeof config != "undefined") && config && config.middlewarecontext) || "middleware";
    kony.print("invokeServiceAsync<- " + s);
    kony.print("middlewarecontext<- " + f);
    if (b == constants.APPLICATION_MODE_NATIVE) {
      var q = s.indexOf(f);
      if (q != -1) {
        a = s.slice(0, q)
      }
      if ($KG.skipproxy || ($KI.net.checkOriginandPostOrigin(v, a) && s)) {
        l = v + "/" + f + "/MWServlet"
      } else {
        l = v + "/" + $KG.appid + "/spa";
        kony.print("using proxy: URL " + l);
        if (u) {
          u._desturl = s
        } else {
          u = {};
          u._desturl = s;
          kony.print("Without postdata " + s)
        }
      }
      u.rcid = $KG.rcid || ""
    }
    var p = u && u.httpheaders;
    var e = (u && $KI.net.postdataparams(u)) || "";
    kony.print("invokeServiceAsync: URL: " + s);
    kony.print("invokeServiceAsync: Args are: " + e);
    kony.print("middleware origin: " + a);
    kony.print("location origin: " + v);
    if (s && s.indexOf("/IST") != -1 || s.indexOf("/CMS") != -1) {
      l = s
    } else {
      if (s) {
        if (typeof document != "undefined") {
          var h = document.createElement("a");
          h.href = s;
          if (h.origin == v) {
            l = s
          }
        }
      }
    }
    if (b == constants.APPLICATION_MODE_HYBRID || b == constants.APPLICATION_MODE_WRAPPER) {
      l = s;
      kony.print("!!!!!!!!!!appmode hybrid/wrapper: " + l)
    }
    var k = u && u.httpconfig;
    if (k && k.timeout && !isNaN(k.timeout)) {
      t = parseInt(k.timeout) * 1000
    }
    var d = {
      type: "POST",
      url: l,
      timeout: t,
      paramstr: e,
      callback: g,
      info: r || null
    };
    if (c && typeof c != "undefined" && "GET".toLowerCase() === c.toLowerCase()) {
      d.type = "GET";
      d.url = d.url + "?" + e
    }
    kony.print("invokeServiceAsync: options: " + d);
    kony.system.activity.increment();
    return (function n() {
      function i(C, z, A, B) {
        if (z == 300 || z == 400) {
          kony.system.activity.decrement()
        }
        if (!kony.system.activity.hasActivity()) {
          if (typeof $KW !== "undefined") {
            $KW.Utils.removeBlockUISkin();
            $KW.unLoadWidget()
          }
        }
        if (C) {
          C(z, A, B)
        }
      }
      var x = false;
      var w = new XMLHttpRequest();
      w.open(d.type, d.url, true);
      w.onLoaded = function() {
        if (this.userCancelled) {
          kony.print(" onLoaded: on Abort Mission");
          this.onAbort()
        } else {
          i(d.callback, 100, null)
        }
      };
      w.onInteractive = function() {
        if (this.userCancelled) {
          kony.print(" onInteractive: on Abort Mission");
          this.onAbort()
        } else {
          if (!this.firstByte) {
            this.firstByte = true;
            i(d.callback, 200, null)
          }
        }
      };
      w.onAbort = function(z) {
        kony.print(" onInteractive: <- Abort Mission");
        if (this.userCancelled) {
          this.userCancelled = false;
          this.ignoreCallback = true;
          m = {
            opstatus: 1,
            errcode: 1022,
            errmsg: "Request cancelled by user"
          };
          i(d.callback, 300, m);
          kony.print(" onInteractive: Abort Mission Success")
        }
        kony.print(" onInteractive: -> Abort Mission")
      };
      w.onTimeout = function() {
        if (w.userCancelled) {
          w.onAbort()
        } else {
          x = true;
          m = {
            opstatus: 1,
            errcode: 1014,
            errmsg: "Request timed out"
          };
          i(d.callback, 400, m)
        }
      };
      w.onreadystatechange = function() {
        switch (!this.ignoreCallback && w.readyState) {
          case 1:
            kony.print("onreadystatechange: ReadyState 1");
            w.onLoaded(w);
            break;
          case 2:
            kony.print("onreadystatechange: ReadyState 2");
            w.onInteractive(w);
            break;
          case 3:
            kony.print("onreadystatechange: ReadyState 3");
            w.onAbort(w);
            break;
          case 4:
            kony.print("onreadystatechange: ReadyState 4");
            if (!x) {
              w.onComplete(w);
              w = null
            }
            break;
          default:
            kony.print("onreadystatechange: ReadyState Invalid: " + w.readyState)
        }
      };
      w.onComplete = function(A) {
        window.clearTimeout(A.timeoutid);
        kony.print("status: " + A.status + "readystate: " + A.readyState + "res: " + A.response);
        this.firstByte = false;
        if (this.userCancelled) {
          kony.print(" onComplete: on Abort Mission");
          this.onAbort();
          return
        }
        if (A.status == 200) {
          if (A.responseText && A.responseText.length > 0) {
            m = A.responseText;
            try {
              if (IndexJL == 1) {
                m = $KU.convertjsontoluaobject(m)
              } else {
                m = JSON.parse(m)
              }
            } catch (z) {
              kony.print("errcode: 1013, Invalid JSON string - Unable to parse the returned JSON from server");
              m = {
                opstatus: "1",
                errcode: "1013",
                errmsg: "Middleware returned invalid JSON string",
                response: m
              }
            }
          } else {
            kony.print("errcode: 1013, Invalid JSON string");
            m = {
              opstatus: "1",
              errcode: "1013",
              errmsg: "Middleware returned invalid JSON string"
            }
          }
        } else {
          if (A.status == 0 || A.status == 12200 || (/5+/.test(A.status.toString()) == true)) {
            if (typeof navigator.onLine !== "undefined" && !navigator.onLine) {
              kony.print("errcode: 1011, Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity.");
              m = {
                opstatus: 1,
                errcode: "1011",
                errmsg: "Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity."
              }
            } else {
              kony.print("errcode: 1012, Request Failed");
              m = {
                opstatus: 1,
                errcode: "1012",
                errmsg: "Request Failed"
              }
            }
          } else {
            if (/4+/.test(A.status.toString()) == true) {
              kony.print("errcode: 1015, Cannot find host");
              m = {
                opstatus: 1,
                errcode: "1015",
                errmsg: "Cannot find host"
              }
            } else {
              if (A.responseText != "") {
                kony.print("Status != 200 but response exists");
                m = A.responseText
              } else {
                kony.print("Empty response received.")
              }
            }
          }
        }
        i(d.callback, 400, m, d.info)
      };
      w.timeoutid = setTimeout(w.onTimeout, d.timeout);
      if (typeof(p) == "object") {
        if (d.url.indexOf("/spa") > 0) {
          w.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          var y = p["Content-Type"];
          if (typeof y != "undefined") {
            delete p["Content-Type"]
          }
        } else {
          if (typeof p["Content-Type"] == "undefined") {
            p["Content-Type"] = "application/x-www-form-urlencoded"
          }
        }
        d.httpheaders = $KI.net.sethttpheaders(w, p);
        if (d.httpheaders.length > 0 && d.url.indexOf("/spa") > 0) {
          if (typeof y != "undefined") {
            d.httpheaders["Content-Type"] = y
          }
          d.paramstr = d.paramstr + "kCustomHeaders=" + d.httpheaders
        }
      }
      if ("POST".toLowerCase() === (d.type).toLowerCase()) {
        w.send(d.paramstr)
      } else {
        w.send()
      }
      return w
    })();
    kony.print("invokeServiceAsync-> ")
  },
  invokeService: function(r, t, f, q, g) {
    var l = 0;
    var k = null;
    var s = g || 60000;
    var v = window.location.protocol + "//" + window.location.host;
    var j = "";
    var a = "";
    var b = $KG.appmode;
    var e = $KI.props.getProperty(null, "appmiddlewarecontext") || ((typeof appConfig != "undefined") && appConfig && appConfig.middlewareContext) || ((typeof config != "undefined") && config && config.middlewarecontext) || "middleware";
    kony.print("invokeServiceAsync<- ");
    if (b == constants.APPLICATION_MODE_NATIVE) {
      var o = r.indexOf(e);
      if (o != -1) {
        a = r.slice(0, o)
      }
      if ($KG.skipproxy || ($KI.net.checkOriginandPostOrigin(v, a) && r)) {
        j = v + "/" + e + "/MWServlet"
      } else {
        j = v + "/" + $KG.appid + "/spa";
        kony.print("using proxy: URL " + j);
        if (t) {
          t._desturl = r
        } else {
          t = {};
          t._desturl = r;
          kony.print("Without postdata " + r)
        }
      }
      t.rcid = $KG.rcid || ""
    }
    var n = t && t.httpheaders;
    var d = (t && $KI.net.postdataparams(t)) || "";
    if (r.indexOf("/IST") != -1 || r.indexOf("/CMS") != -1) {
      j = r
    }
    kony.print("invokeServiceAsync: URL: " + r);
    kony.print("invokeServiceAsync: Args are: " + d);
    kony.print("middleware origin: " + a);
    kony.print("location origin: " + v);
    if (b == constants.APPLICATION_MODE_HYBRID || b == constants.APPLICATION_MODE_WRAPPER) {
      j = r;
      kony.print("!!!!!!!!!!appmode hybrid/wrapper: " + j)
    }
    var c = {
      type: "POST",
      url: j,
      timeout: s,
      paramstr: d,
      callback: f,
      info: q || null
    };
    kony.system.activity.increment();
    var h = false;
    var u = new XMLHttpRequest();
    u.open(c.type, c.url, false);
    if (typeof(n) == "object") {
      if (c.url.indexOf("/spa") > 0) {
        u.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        var p = n["Content-Type"];
        if (typeof p != "undefined") {
          delete n["Content-Type"]
        }
      } else {
        if (typeof n["Content-Type"] == "undefined") {
          n["Content-Type"] = "application/x-www-form-urlencoded"
        }
      }
      c.httpheaders = $KI.net.sethttpheaders(u, n);
      if (c.httpheaders.length > 0 && c.url.indexOf("/spa") > 0) {
        if (typeof p != "undefined") {
          c.httpheaders["Content-Type"] = p
        }
        c.paramstr = c.paramstr + "kCustomHeaders=" + c.httpheaders
      }
    }
    u.send(c.paramstr);
    kony.print("status: " + u.status + "readystate: " + u.readyState + "res: " + u.response);
    if (u.status == 200) {
      if (u.responseText && u.responseText.length > 0) {
        kony.print(" onComplete: JSON obj: " + u.responseText);
        k = u.responseText;
        try {
          if (IndexJL == 1) {
            k = $KU.convertjsontoluaobject(k)
          } else {
            k = JSON.parse(k)
          }
          kony.print(" onComplete: Lua obj: " + JSON.stringify(k))
        } catch (m) {
          kony.print("errcode: 1013, Invalid JSON string - Unable to parse the returned JSON from server");
          k = {
            opstatus: "1",
            errcode: "1013",
            errmsg: "Middleware returned invalid JSON string",
            response: k
          }
        }
      } else {
        kony.print("errcode: 1013, Invalid JSON string");
        k = {
          opstatus: "1",
          errcode: "1013",
          errmsg: "Middleware returned invalid JSON string"
        }
      }
    } else {
      if (u.status == 0 || (/5+/.test(u.status.toString()) == true)) {
        if (typeof navigator.onLine !== "undefined" && !navigator.onLine) {
          kony.print("errcode: 1011, Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity.");
          k = {
            opstatus: 1,
            errcode: "1011",
            errmsg: "Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity."
          }
        } else {
          kony.print("errcode: 1012, Request Failed");
          k = {
            opstatus: 1,
            errcode: "1012",
            errmsg: "Request Failed"
          }
        }
      } else {
        if (/4+/.test(u.status.toString()) == true) {
          kony.print("errcode: 1015, Cannot find host");
          k = {
            opstatus: 1,
            errcode: "1015",
            errmsg: "Cannot find host"
          }
        } else {
          if (u.responseText != "") {
            kony.print("Status != 200 but response exists");
            k = u.responseText
          } else {
            kony.print("Empty response received.")
          }
        }
      }
    }
    if (typeof $KW !== "undefined") {
      $KW.Utils.removeBlockUISkin();
      $KW.unLoadWidget()
    }
    return k
  },
  cancel: function(a) {
    kony.print("networkcancel<- ");
    if (a) {
      a.userCancelled = true;
      a.abort();
      kony.print("Request aborted on user request")
    }
    kony.print("networkcancel-> ")
  },
  checkOriginandPostOrigin: function(a, b) {
    return a.replace(/([^=]*):(80|443){1}(.*)/, "$1$3") == b.replace(/([^=]*):(80|443){1}(.*)/, "$1$3") ? true : false
  },
  isNetworkAvailable: function(a) {
    if (!!a) {
      if (a === constants.NETWORK_TYPE_ANY) {
        if (typeof navigator.onLine !== "undefined") {
          return navigator.onLine
        } else {
          return false
        }
      } else {
        if (a === constants.NETWORK_TYPE_3G || a === constants.NETWORK_TYPE_WIFI || a === constants.NETWORK_TYPE_ETHERNET) {
          return false
        } else {
          throw new Error("Invalid Network Type")
        }
      }
    } else {
      throw new Error("Invalid Network Type")
    }
  },
  setNetworkCallbacks: function(a) {
    if (a && a.statusChange) {
      if (typeof window.ononline === "object") {
        window.addEventListener("online", function() {
          a.statusChange(navigator.onLine)
        }, false)
      }
      if (typeof window.onoffline === "object") {
        window.addEventListener("offline", function() {
          a.statusChange(navigator.onLine)
        }, false)
      }
    } else {
      throw new Error("Invalid Input : config is not of valid type")
    }
  },
  getActiveNetworkType: function() {
    if (typeof navigator.onLine === "undefined") {
      return constants.NETWORK_TYPE_ANY
    } else {
      if (navigator.onLine) {
        return constants.NETWORK_TYPE_ANY
      } else {
        return null
      }
    }
  },
  getCookies: function(b) {
    console.log("getCookies: " + b);
    if (b) {
      if (window && b.indexOf(window.location.origin) != -1) {
        var a = document && document.cookie;
        if (a && a.length > 0) {
          return a.split(";")
        }
      }
    }
    return null
  },
  clearCookies: function(c, e) {
    var a = document && document.cookie.split(";");
    c = c || document.URL;
    if (window && c.indexOf(window.location.origin) != -1) {
      e = e || a;
      if (e) {
        var g = window.location.pathname.split("/");
        for (var d = 0; d < e.length; d++) {
          var f = "/";
          var h = e[d].trim();
          if (document.cookie.indexOf(h) != -1) {
            for (var b = 0; b < g.length; b++) {
              f += ((f.substr(-1) != "/") ? "/" : "") + g[b];
              if (h.indexOf("=") != -1) {
                document.cookie = h + "; expires=Thu, 01-Jan-1970 00:00:01 GMT;path=" + f + ";"
              } else {
                document.cookie = h + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT;path=" + f + ";"
              }
              if (document.cookie.indexOf(h) == -1) {
                break
              }
            }
          }
        }
      }
    } else {
      throw new KonyError(1005, "invalid input url", "invalid input url")
    }
  }
};
$KI.props = {
  getProperty: function(b, a) {
    if (typeof _konyAppProperties != "undefined" && _konyAppProperties != null && a) {
      return _konyAppProperties[a] || null
    }
  }
};
kony.modules = {
  loadModule: function(b) {
    if (typeof $KG.functionalModules[b] === "undefined") {
      return false
    }
    try {
      var c = $KG.functionalModules[b];
      if (c.loaded == 1) {
        return true
      }
      c.loaded = 1;
      if (kony.modules.preInitCheck(b)) {
        return true
      }
      if (typeof importScripts === "function") {
        importScripts(b + "_kfm.js");
        kony.modules.moduleCallback(b)
      } else {
        var a = $KG.platformver + "appjs/" + b + (kony.appinit.isIE8 ? "ie" : "") + "_kfm.js";
        $KI.net.loadJSFile(a, false, function(g) {
          try {
            kony.modules.addScript(g);
            kony.modules.moduleCallback(b)
          } catch (f) {
            kony.print("Unable to load module " + b + ". Error " + f.message)
          }
        })
      }
      if ($KG.functionalModules[b].loaded === 1) {
        return true
      } else {
        return false
      }
    } catch (d) {
      kony.print(d.message);
      return false
    }
  },
  preInitCheck: function(c) {
    var d = $KG.functionalModules[c];
    for (var b = 0; b < d.depends.length; b++) {
      var a = d.depends[b];
      if (typeof $KG.functionalModules[a] == "undefined") {
        throw new Error("Invalid module : " + a)
      }
      if (typeof $KG.functionalModules[a].loaded == "undefined") {
        if (!kony.modules.loadModule(a)) {
          throw new Error("Unable to load module : " + a)
        }
      }
    }
    return false
  },
  moduleCallback: function(a) {
    var b = $KG.functionalModules[a];
    if (typeof b !== "undefined") {
      var c = null;
      if (typeof(b.init) === "string") {
        c = window[b.init];
        if (typeof c !== "function") {
          b.inProgress = false;
          b.loaded = undefined;
          throw new Error("Invalid module init function : " + a)
        }
      }
      if (typeof b.errorcode === "undefined" && c !== null) {
        c()
      }
      b.inProgress = false;
      b.loaded = 1
    }
  },
  loadModuleAsync: function(d, h, a) {
    try {
      var f = $KG.functionalModules[d];
      if (typeof f === "undefined") {
        return a(d, 1250)
      }
      var c = function(i) {
        if (typeof f.loaded == "undefined") {
          try {
            kony.modules.moduleCallback(d)
          } catch (j) {
            i = 1251
          }
        }
        if (i) {
          a(d, i)
        } else {
          h(d)
        }
      };
      if (f.loaded == 1) {
        h(d);
        return true
      }
      if (f.inProgress) {
        return
      }
      f.inProgress = true;
      kony.modules.loadDependentModules(d, h, a);
      if (typeof importScripts === "function") {
        importScripts(d + "_kfm.js");
        c()
      } else {
        var b = $KG.platformver + "appjs/" + d + (kony.appinit.isIE8 ? "ie" : "") + "_kfm.js";
        $KI.net.loadJSFile(b, true, function(e) {
          kony.modules.checkForDependents(d, e, c)
        })
      }
    } catch (g) {
      a(d, 1251)
    }
  },
  checkForDependents: function(j, c, f, a) {
    var g = true;
    var e = null;
    var h = $KG.functionalModules[j];
    if (typeof h.errorcode !== "undefined") {
      e = h.errorcode
    }
    if (typeof a === "undefined") {
      a = 0
    } else {
      if (a > 30) {
        f(1251);
        return
      } else {
        a++
      }
    }
    for (var d = 0; d < h.depends.length; d++) {
      var b = h.depends[d];
      if (typeof $KG.functionalModules[b] !== "undefined") {
        if (typeof $KG.functionalModules[b].loaded == "undefined") {
          g = false
        }
        if (typeof $KG.functionalModules[b].errorcode !== "undefined") {
          e = $KG.functionalModules[b].errorcode
        }
      }
    }
    if (g && e === null) {
      if (c === null) {
        f()
      } else {
        kony.modules.addScript(c, f)
      }
    } else {
      if (e !== null) {
        f(e)
      } else {
        setTimeout(function() {
          kony.modules.checkForDependents(j, c, f, a)
        }, 100)
      }
    }
  },
  loadDependentModules: function(e, f, b) {
    var d = $KG.functionalModules[e];
    for (var c = 0; c < d.depends.length; c++) {
      var a = d.depends[c];
      if (typeof $KG.functionalModules[a] === "undefined") {
        b(e, 1250)
      } else {
        if (typeof $KG.functionalModules[a].loaded == "undefined" && $KG.functionalModules[a].inProgress !== true) {
          kony.modules.loadModuleAsync(a, kony.modules.onLoadComplete, kony.modules.onLoadComplete)
        }
      }
    }
    return false
  },
  onLoadComplete: function(b, a) {
    $KG.functionalModules[b].errorcode = a
  },
  addScript: function(c, d) {
    var a = document.createElement("script");
    a.type = "text/javascript";
    a.text = c;
    try {
      document.getElementsByTagName("head")[0].appendChild(a);
      if (d) {
        d()
      }
    } catch (b) {
      if (d) {
        d(b)
      }
    } finally {
      document.getElementsByTagName("head")[0].removeChild(a)
    }
  }
};
kony.modules.loadFunctionalModule = kony.modules.loadModule;
kony.modules.loadFunctionalModuleAsync = kony.modules.loadModuleAsync;
$KI.db = {
  changeversion: function(b, e, f, d, c, a) {
    if (window.openDatabase) {
      if (b) {
        b.changeVersion(e, f, d, c, a)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  executesql: function(e, a, d, b, c) {
    if (window.openDatabase) {
      if (e) {
        if (d && d[0] === null) {
          d = d.slice(1)
        }
        e.executeSql(a, d, b, c)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  opendatabase: function(d, b, h, f, a) {
    var c = this.db || null;
    a = a || kony_dummyForDBCallback;
    try {
      if (window.openDatabase) {
        if (!c) {
          c = openDatabase(d, b, h, f, a);
          this.db = c
        }
      } else {
        kony.print("Web Databases not supported")
      }
    } catch (g) {
      if (g == 2) {
        kony.print("opendatabase:Invalid database version.")
      } else {
        kony.print("opendatabase:Unknown error " + g + ".")
      }
      return null
    }
    return c
  },
  readtransaction: function(b, d, c, a) {
    if (window.openDatabase) {
      if (b) {
        b.readTransaction(d, c, a)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  sqlresultsetrowitem: function(c, a, b) {
    if (window.openDatabase) {
      if (b < a.rows.length) {
        return a.rows.item(b)
      } else {
        return null
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  transaction: function(b, d, c, a) {
    if (window.openDatabase) {
      if (b) {
        b.transaction(d, c, a)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  }
};

function kony_dummyForDBCallback() {};
try {
  if (typeof(localStorage) === "object" || kony.appinit.isIE7) {
    $KI.ds = {
      save: function(d, f, a) {
        if (localStorage) {
          try {
            localStorage.setItem(f, JSON.stringify(d))
          } catch (c) {
            if (c.name == "QUOTA_EXCEEDED_ERR") {
              var b = 0,
                g = "";
              if (localStorage.length === 0) {
                b = 707;
                g = "Private Browsing is switched ON"
              } else {
                b = 708;
                g = "Data storage limit has exceeded"
              }
              return {
                errcode: b,
                errmsg: g
              }
            }
          }
        } else {
          kony.print("localStorage not supported")
        }
      },
      read: function(b) {
        if (localStorage) {
          var a = JSON.parse(localStorage.getItem(b) || "null");
          return a
        } else {
          kony.print("localStorage readitem failed");
          return null
        }
      },
      Delete: function(a) {
        if (localStorage) {
          localStorage.removeItem(a);
          return true
        } else {
          kony.print("localStorage delete failed");
          return false
        }
      }
    };
    $KI.localstorage = {
      key: function(a) {
        return (localStorage.key(a - IndexJL))
      },
      getitem: function(b) {
        var a = JSON.parse(localStorage.getItem(b) || "null");
        return a
      },
      setitem: function(d, b) {
        var a = d,
          f = b;
        if (typeof d == "object") {
          for (x in d) {
            a = x
          }
          f = d[x]
        }
        try {
          localStorage.setItem(a, JSON.stringify(f))
        } catch (c) {
          if (c.name == "QUOTA_EXCEEDED_ERR") {
            if (localStorage.length === 0) {
              console.warn("Private Browsing is switched ON")
            } else {
              console.warn("Data storage limit has exceeded")
            }
          }
        }
      },
      removeitem: function(a) {
        localStorage.removeItem(a)
      },
      clear: function() {
        localStorage.clear()
      },
      length: function() {
        return localStorage.length
      }
    }
  } else {
    kony.print("localStorage not supported")
  }
} catch (e) {
  $KI.ds = {
    save: function() {},
    read: function(a) {},
    Delete: function(a) {}
  }
};
$KW.Scroller = {
  initializeFormScroller: function(b) {
    var a = document.querySelectorAll("#" + b + "[kwidgettype='KFormScroller'] ,#" + b + " div[kwidgettype='KFormScroller']");
    a && this.initialize(a, "Form")
  },
  initializeScrollBoxes: function(b) {
    var a = document.querySelectorAll("#" + b + " div[kwidgettype='KScrollBox']");
    a && this.initialize(a, "ScrollBox")
  },
  initializeFlexScrollContainers: function(b) {
    var a = document.querySelectorAll("#" + b + " div[kwidgettype='KFlexScrollContainer']");
    a && this.initialize(a, "FlexScrollContainer")
  },
  initialize: function(A, L) {
    if ($KG.stickyScroll) {
      var d = new $KW.touch.StickyScroller();
      $KG[$KG.__currentForm + "_scroller"] = d;
      return
    } else {
      if ($KG.nativeScroll && L == "Form") {
        var v = document.forms;
        var J = v[0];
        if (v.length == 2) {
          J = v[1]
        }
        return
      }
    }
    for (var G = 0; G < A.length; G++) {
      var g = A[G].id;
      var E = g.substring(0, g.lastIndexOf("_"));
      var o = A[G];
      var b = document.getElementById(E);
      var x = o.getAttribute("widgetType");
      var h = o.getAttribute("swipeDirection");
      var j;
      if (L == "Form") {
        j = window[E]
      } else {
        j = $KU.getModelByNode(b)
      }
      var s;
      j.pf && (s = window[j.pf]);
      var q = {};
      q.checkDOMChanges = true;
      q.widgetModel = j;
      if (L == "Form" && $KU.isFlexContainer(j)) {
        h = "vertical"
      }
      if (h == "vertical") {
        q.vScroll = true;
        q.scrollbox = true
      } else {
        if (h == "horizontal") {
          q.hScroll = true;
          q.scrollbox = true
        } else {
          if (h == "both") {
            q.vScroll = true;
            q.hScroll = true;
            q.scrollbox = true
          } else {
            if (L !== "FlexScrollContainer") {
              q.vScroll = true;
              q.hScroll = true;
              q.scrollbox = true
            }
          }
        }
      }
      if (L == "Form") {
        q.scrollbox = false
      }
      if (L == "FlexScrollContainer" || (L == "Form" && $KU.isFlexContainer(j))) {
        (L == "Form") && $KW.Scroller.setHeight(E);
        q.formid = j.pf;
        q.vBounce = j.allowverticalbounce;
        q.hBounce = j.allowhorizontalbounce;
        q.bounce = j.bounces;
        q.disableUserScroll = !j.enablescrolling;
        q.hideScrollbar = true;
        if (h == "horizontal") {
          q.hScrollbar = j.horizontalscrollindicator
        } else {
          if (h == "vertical") {
            q.vScrollbar = j.verticalscrollindicator
          } else {
            if (h == "both") {
              q.hScrollbar = j.horizontalscrollindicator;
              q.vScrollbar = j.verticalscrollindicator
            } else {
              q.hScrollbar = false;
              q.vScrollbar = false
            }
          }
        }
        if (j.onscrollstart) {
          q.onscrollstart = j.onscrollstart;
          q.onScrollStart = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrollstart.call(i.widgetModel, i.widgetModel)
          }
        }
        if (j.onscrolling) {
          q.onscrolling = j.onscrolling;
          q.onScrollMove = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrolling.call(i.widgetModel, i.widgetModel)
          }
        }
        if (j.onscrolltouchreleased) {
          q.onscrolltouchreleased = j.onscrolltouchreleased;
          q.onScrollTouchReleased = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrolltouchreleased.call(i.widgetModel, i.widgetModel)
          }
        }
        if (j.onscrollend) {
          q.onscrollend = j.onscrollend;
          q.onScrollEnd = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrollend.call(i.widgetModel, i.widgetModel)
          }
        }
      } else {
        if (x == "form") {
          $KW.Scroller.setHeight(E);
          q.vScrollbar = true;
          q.formid = E;
          q.scrollbox = false;
          q.bounce = (j.scrollbounce != undefined) ? j.scrollbounce : true;
          if ($KG.nativeScroll && (j.wType === "Popup")) {
            o.style.overflowY = "auto";
            continue
          }
        } else {
          var j = $KU.getModelByNode(b);
          if ($KG.nativeScroll && j) {
            var n, l;
            switch (j.scrollDirection) {
              case 1:
                n = "auto";
                l = "hidden";
                break;
              case 2:
                n = "hidden";
                l = "auto";
                break;
              case 3:
                n = "auto";
                l = "auto";
                break;
              case 4:
                n = "hidden";
                l = "hidden";
              default:
                n = "";
                l = ""
            }
            var H = o.style;
            H.overflowX = n;
            H.overflowY = l;
            continue
          }
          q.scrollbox = true;
          q.formid = j.pf;
          q.bounce = j.scrollbounce != undefined ? j.scrollbounce : true;
          q.disableUserScroll = (j.scrolldirection == constants.SCROLLBOX_SCROLL_NONE);
          if (j.scrollbar == "arrows") {
            q.showImages = true;
            q.widgetID = j.id
          } else {
            if (j.scrollbar == "scrollbar") {
              if (j.autohidescrollbar === false) {
                q.hideScrollbar = false
              }
              if (h == "horizontal") {
                q.hScrollbar = true
              } else {
                if (h == "vertical") {
                  q.vScrollbar = true
                } else {
                  if (h == "both") {
                    q.hScrollbar = true;
                    q.vScrollbar = true
                  }
                }
              }
            }
          }
          var m = j.scrollingevents;
          if (m) {
            var K, t, C, u;
            var f = 0,
              a = 0;
            var B = "",
              D = "",
              F = "";
            var y = "#" + j.pf + "_" + j.id + "_pullDown";
            var e = "#" + j.pf + "_" + j.id + "_pullUp";
            K = document.querySelector(y);
            K && (f = K.offsetHeight);
            t = document.querySelector(e);
            t && (a = t.offsetHeight);
            !m.onpull && (C = true);
            !m.onpush && (u = true);
            B = function() {
              var M = this.options.pullDownEl;
              var i = this.options.pullUpEl;
              if (M && M.className.match("loading")) {
                M.className = "";
                M.querySelector(".pullDownLabel").innerHTML = "Pull down to refresh.."
              } else {
                if (i && i.className.match("loading")) {
                  i.className = "";
                  i.querySelector(".pullUpLabel").innerHTML = "Pull up to refresh.."
                }
              }
            };
            D = function() {
              var M = this.options.pullDownEl;
              var i = this.options.pullUpEl;
              if (M) {
                if (((this.options.vScroll && this.y > 5) || (this.options.hScroll && this.x > 5)) && !M.className.match("flip")) {
                  M.className = "flip";
                  C = false;
                  M.querySelector(".pullDownLabel").innerHTML = "Release to refresh..";
                  if (this.options.vScroll) {
                    this.minScrollY = 0
                  } else {
                    this.minScrollX = 0
                  }
                } else {
                  if (((this.options.vScroll && this.y < 5) || (this.options.hScroll && this.x < 5)) && M.className.match("flip")) {
                    M.className = "";
                    M.querySelector(".pullDownLabel").innerHTML = "Pull down to refresh..";
                    if (this.options.vScroll) {
                      this.minScrollY = -this.pullDownOffset
                    } else {
                      this.minScrollX = -this.pullDownOffset
                    }
                  }
                }
              }
              if (i) {
                if (((this.options.vScroll && this.y < (this.maxScrollY - 5 - this.pullUpOffset)) || (this.options.hScroll && this.x < (this.maxScrollX - 5 - this.pullUpOffset))) && !i.className.match("flip")) {
                  i.className = "flip";
                  u = false;
                  i.querySelector(".pullUpLabel").innerHTML = "Release to refresh..";
                  if (this.options.vScroll) {
                    this.maxScrollY -= this.pullUpOffset
                  } else {
                    this.maxScrollX -= this.pullUpOffset
                  }
                } else {
                  if (((this.options.vScroll && this.y > (this.maxScrollY + 5)) || (this.options.hScroll && this.x > (this.maxScrollX + 5))) && i.className.match("flip")) {
                    i.className = "";
                    i.querySelector(".pullUpLabel").innerHTML = "Pull up to refresh..";
                    this.maxScrollY = this.maxScrollY
                  }
                }
              }
            };
            F = function() {
              var O = this.options.pullDownEl;
              var i = this.options.pullUpEl;
              if (((this.options.vScroll && this.y >= this.minScrollY) || (this.options.hScroll && this.x >= this.minScrollX)) && this.options.pullInitFlag) {
                var M = $KU.getModelByScroller(this.wrapper.id);
                if (typeof M === "undefined") {
                  return
                }
                console.log("On Reach beginning");
                var N = $KU.returnEventReference(M.scrollingevents.onreachingbeginning);
                N && N.call(M, M)
              }
              if (O && O.className.match("flip")) {
                O.className = "loading";
                O.querySelector(".pullDownLabel").innerHTML = "Loading..";
                $KW.Scroller.pullAction.call(this, "DOWN")
              }
              if (((this.options.vScroll && this.y <= this.maxScrollY) || (this.options.hScroll && this.x <= this.maxScrollX)) && this.options.pushInitFlag) {
                var M = $KU.getModelByScroller(this.wrapper.id);
                if (typeof M === "undefined") {
                  return
                }
                console.log("On Reach end");
                var N = $KU.returnEventReference(M.scrollingevents.onreachingend);
                N && N.call(M, M)
              }
              if (i && i.className.match("flip")) {
                i.className = "loading";
                i.querySelector(".pullUpLabel").innerHTML = "Loading..";
                $KW.Scroller.pullAction.call(this, "UP")
              }
              if (!this.options.pullInitFlag) {
                this.options.pullInitFlag = true
              }
              if (!this.options.pushInitFlag) {
                this.options.pushInitFlag = true
              }
            };
            $KU.extend(q, {
              topOffset: f,
              bottomOffset: a,
              onRefresh: B,
              onScrollMove: D,
              onScrollEnd: F,
              pullDownEl: K,
              pullUpEl: t,
              pullInitFlag: C,
              pushInitFlag: u
            })
          }
        }
      }
      if (x == "vbox") {
        q.onBeforeScrollStart = $KW.Scroller.onBeforeScrollStartHandler()
      }
      if (s && typeof(s.useTransform) == "boolean") {
        q.useTransform = s.useTransform
      }
      var z = document.querySelectorAll("#" + $KG.__currentForm.id + " select");
      if (z.length > 0 && x == "form") {
        q.useTransform = false
      }
      if ((L == "ScrollBox" && $KU.isFlexContainer(s)) || $KU.isFlexContainer(s) || (L == "FlexScrollContainer" && (j.parent.wType === "FlexScrollContainer" || j.parent.wType == "FlexContainer"))) {
        q.bubbleEvents = true
      }
      var d = new $KW.touch.konyScroller(E + "_scroller", q);
      if (x == "form") {
        var p = $KG.allforms[E].header;
        var c = $KG.allforms[E].footer;
        $KG.allforms[E].scrollerTimer = setInterval(function(i) {
          return function() {
            $KW.Scroller.checkDOMChanges(i + "_scroller", p, c)
          }
        }(E), 1000)
      }
      if (h == "horizontal" || h == "both") {
        if (o.children[0].scrollWidth != 0) {
          o.children[0].style.width = o.children[0].scrollWidth + "px";
          d.refresh()
        }
      }
      if (L == "FlexScrollContainer" || (L == "Form" && $KU.isFlexContainer(j))) {
        var k;
        if (L == "Form") {
          $KW.Form.setFormDimensions(j);
          var w = document.getElementById(j.id);
          k = w.scrollHeight
        } else {
          var I = o.children[0].children[0];
          k = I.scrollHeight;
          I.style.width = o.clientWidth + "px";
          I.style.height = o.clientHeight + "px"
        }
        if ((h == "vertical" || h == "both") && k != 0) {
          var r = j.parent;
          if (!r || (r && r.wType !== "FlexScrollContainer" && r.wType !== "FlexContainer")) {
            o.children[0].style.height = k + "px"
          }
          d.refresh()
        }
        $KW.FlexScrollContainer.setContentOffSet(j, j.contentoffset, 0, d);
        j.scrollerInstance = d
      }
      $KG[E + "_scroller"] = d
    }
  },
  destroyFormScroller: function(e) {
    if ($KG.stickyScroll) {
      var d = $KG[e + "_scroller"];
      d && d.destroy();
      $KG[e + "_scroller"] = ""
    }
    var b = document.querySelectorAll("#" + e + "[kwidgettype='KFormScroller'] ,#" + e + " div[kwidgettype='KFormScroller']");
    for (var c = 0; c < b.length; c++) {
      var a = b[c].id;
      var d = $KG[a];
      d && d.destroy();
      $KG[a] = ""
    }
  },
  destroyScrollBoxes: function(e) {
    var b = document.querySelectorAll("#" + e + " div[kwidgettype='KScrollBox']");
    for (var c = 0; c < b.length; c++) {
      var a = b[c].id;
      var d = $KG[a];
      d && d.destroy()
    }
  },
  destroyImageStripStripViews: function(e) {
    var a = document.querySelectorAll("#" + e + " div[name='ImageStrip_StripView']");
    for (var b = 0; b < a.length; b++) {
      var c = $KU.getModelByNode(a[b]);
      if (c) {
        var d = c.scrollInstance;
        if (d) {
          d.destroy();
          c.scrollInstance = null
        }
      }
    }
  },
  initializePageViews: function(g) {
    if ($KG.disableTransition) {
      return
    }
    var f = document.querySelectorAll("#" + g + " div[name='touchcontainer_HStrip'], #" + g + " div[name='touchcontainer_Segment'], #" + g + " div[name='touchcontainer_Tabpane']");
    for (var c = 0; c < f.length; c++) {
      var e = f[c];
      var d = $KU.getModelByNode(e);
      if (!d) {
        d = $KU.getModelByNode(e.parentNode)
      }
      var a = {};
      a.widgetModel = d;
      var b = new $KW.touch.pageviewScroller(e, a);
      $KG[e.id] = b
    }
  },
  destroyPageViews: function(e) {
    var b = document.querySelectorAll("#" + e + " div[name='touchcontainer_HStrip'], #" + e + " div[name='touchcontainer_Segment']");
    for (var c = 0; c < b.length; c++) {
      var a = b[c].id;
      var d = $KG[a];
      d && d.destroy()
    }
  },
  checkDOMChanges: function(d, k, h) {
    var j = document.getElementById(k);
    var f = document.getElementById(h);
    var g = document.getElementById("konyappmenudiv");
    var i = $KG.allforms[d.split("_")[0]];
    var e = false;
    if (j && (this.headerH != j.offsetHeight) && i.dockableheader) {
      var a = document.getElementById(d);
      var c = $KG[d];
      if (a && c) {
        this.headerH = j.offsetHeight;
        a.style.top = j.offsetHeight + "px";
        c.refresh()
      }
    }
    if (f && (this.footerH != f.offsetHeight) && i.dockablefooter) {
      var a = document.getElementById(d);
      var c = $KG[d];
      if (a && c) {
        this.footerH = f.offsetHeight;
        a.style.bottom = f.offsetHeight + "px";
        c.refresh()
      }
    }
    if (i.wType != "Popup" && g && (this.appmenuH != g.offsetHeight) && i.dockableappmenu) {
      var a = document.getElementById(d);
      var c = $KG[d];
      if (a && c) {
        this.appmenuH = g.offsetHeight;
        a.style.bottom = g.offsetHeight + "px";
        c.refresh()
      }
    }
    if (i.wType == "Form" && $KU.isFlexContainer(i)) {
      var a = document.getElementById(d);
      var b = document.getElementById(i.id);
      if (b && b.clientHeight != a.clientHeight) {
        b.style.height = a.clientHeight + "px";
        $KU.needOptimization = false;
        i.forceLayout();
        $KU.needOptimization = true
      }
    }
    e && $KW.ScrollBox.adjustBoxDimensions(i.id)
  },
  setHeight: function(d, c) {
    var h;
    if (c) {
      h = document.getElementById(d)
    } else {
      h = document.getElementById(d + "_scroller")
    }
    if (!h) {
      return
    }
    this.headerH = 0;
    this.footerH = 0;
    this.appmenuH = 0;
    var a = $KG.allforms[d];
    var b = a.header;
    var e = a.footer;
    var g = "konyappmenudiv";
    header = $KG.needScroller ? $KU.getElementById(d + "_header") : $KU.getElementById("header_container");
    footer = $KG.needScroller ? $KU.getElementById(d + "_footer") : $KU.getElementById("footer_container");
    var f = document.getElementById(g);
    if (header && a.dockableheader) {
      this.headerH = header.offsetHeight
    }
    if (a.wType != "Popup" && f && a.dockableappmenu) {
      this.appmenuH = f.offsetHeight
    }
    if (footer && a.dockablefooter) {
      this.footerH = footer.offsetHeight;
      footer.style.bottom = this.appmenuH + "px"
    }
    h.style.top = this.headerH + "px";
    h.style.bottom = this.footerH + this.appmenuH + "px";
    $KW.Form.setFormDimensions(a);
    c && (h.style.paddingBottom = this.footerH + this.appmenuH + "px");
    $KW.ScrollBox.adjustBoxDimensions(a.id)
  },
  onBeforeScrollStartHandler: function() {
    return function(a) {
      kony.events.stopPropagation(a)
    }
  },
  pullAction: function(a) {
    var b = this;
    b.refreshDisabled = true;
    setTimeout(function() {
      var c = $KU.getModelByScroller(b.wrapper.id);
      if (typeof c === "undefined") {
        return
      }
      if (c.scrollingevents) {
        var d;
        if (a == "UP") {
          console.log("On Push");
          d = $KU.returnEventReference(c.scrollingevents.onpush)
        } else {
          d = $KU.returnEventReference(c.scrollingevents.onpull);
          console.log("On Pull")
        }
        d && d.call(c, c);
        b.refreshDisabled = false
      }
      b.refresh()
    }, 500)
  }
};
$KW.FlexLayoutEngine = {
  performFlexLayout: function(c, a, d, b) {
    switch (c) {
      case kony.flex.FLOW_HORIZONTAL:
        this.performHorizontalLayout(a, d, b);
        break;
      case kony.flex.FLOW_VERTICAL:
        this.performVerticalLayout(a, d, b);
        break;
      default:
        this.performFreeFlowLayout(a, d, b);
        break
    }
  },
  performAutogrowFlexLayout: function(b, e, c) {
    var a = this.getAutoGrowFlexHeight(b, e, c);
    if (b.canMeasureChildrenHeight) {
      var d = $KU.isFlexWidget(b) ? e.parentNode : e;
      d.style.height = $KW.Utils.getComputedPreferredHeight(b, e, a) + "px";
      b.frame = $KW.Utils.getWidgetFrame(b, d);
      b.layoutConfig.children = true;
      $KW.FlexLayoutEngine.performFlexLayout(b.layouttype, b, e, c)
    }
  },
  getAutoGrowFlexHeight: function(o, s, n) {
    var v = o.layouttype;
    var f = o.frame;
    var a, e;
    var u = 0;
    o.canMeasureChildrenHeight = true;
    n = n || o.widgets();
    for (var r = 0; r < n.length; r++) {
      a = n[r];
      if (!this.isVisible(a, s)) {
        continue
      }
      e = $KW.Utils.getWidgetNode(a, s);
      if (!e) {
        continue
      }
      this.computeLayoutValues(a, s, f);
      if (!o.canMeasureChildrenHeight) {
        var t = $KU.isFlexWidget(o) ? s.parentNode : s;
        t.style.height = $KW.Utils.getComputedPreferredHeight(o, s) + "px";
        o.frame = $KW.Utils.getWidgetFrame(o, t);
        o.layoutConfig.children = true;
        $KW.FlexLayoutEngine.performFlexLayout(v, o, s, n);
        return o.frame.height
      }
      var q = a.layoutModel;
      var t = e.parentNode;
      $KW.Utils.getWidth(a, q, t, s);
      var h = q.centerY;
      var l = q.top;
      var g = q.bottom;
      var m = q.height;
      var x = 0;
      var p, k;
      if (h) {
        if (m) {
          x = h.value + (m.value / 2)
        } else {
          if (l && v == kony.flex.FREE_FORM) {
            k = (h.value - l.value) * 2;
            x = k + l.value
          } else {
            p = $KW.Utils.getChildHeight(a, e);
            x = h.value + (p / 2)
          }
        }
      } else {
        if (l) {
          if (m) {
            x = l.value + m.value
          } else {
            p = $KW.Utils.getChildHeight(a, e);
            x = l.value + p
          }
        } else {
          if (m) {
            x = m.value
          } else {
            p = $KW.Utils.getChildHeight(a, e);
            x = p
          }
        }
      }
      if (g) {
        x += g.value
      }
      t.style.height = (m ? m.value : (k != undefined ? k : p)) + "px";
      t.style.maxWidth = t.style.maxHeight = "";
      var d = $KW.Utils.getWidgetDimensions(a, t);
      a.finalFrame = {};
      if (v != kony.flex.FREE_FORM) {
        var b, w, j;
        var c = this.getPreviousNode(a, t, s);
        if (c) {
          b = c[0];
          w = c[1]
        }
        j = w && b.frame
      }
      if (v == kony.flex.FREE_FORM || v == kony.flex.FLOW_VERTICAL) {
        this.determineX(a, d, s, f)
      } else {
        this.determineHorizontalFlowX(a, d, b, j)
      }
      if (v == kony.flex.FREE_FORM || v == kony.flex.FLOW_HORIZONTAL) {
        this.determineY(a, d, s, f)
      } else {
        this.determineVerticalFlowY(a, d, b, j)
      }
      $KW.Utils.setWidgetPosition(a, a.finalFrame, t);
      a.frame = this.getWidgetFrame(a, d, a.finalFrame);
      a.dolayout && a.dolayout.call(a, a);
      if (v == kony.flex.FLOW_VERTICAL) {
        u += x
      } else {
        if (u < x) {
          u = x
        }
      }
    }
    return u
  },
  performFreeFlowLayout: function(a, h, e) {
    var g = a.frame;
    var c, b, f;
    for (var d = 0; d < e.length; d++) {
      c = e[d];
      if (!this.canLayoutUI(a, c, h)) {
        continue
      }
      b = $KW.Utils.getWidgetNode(c, h);
      if (!b) {
        continue
      }
      b = b.parentNode;
      c.finalFrame = {};
      this.computeLayoutValues(c, h, g);
      this.determineSize(h, c, b);
      f = $KW.Utils.getWidgetDimensions(c, b);
      this.determineX(c, f, h, g);
      this.determineY(c, f, h, g);
      $KW.Utils.setWidgetPosition(c, c.finalFrame, b);
      $KW.Utils.saveWidgetFrame(c);
      c.frame = this.getWidgetFrame(c, f, c.finalFrame);
      this.onWidgetLayout(c, b)
    }
    this.onFlexContainerLayout(a)
  },
  performHorizontalLayout: function(b, e, k) {
    var m = b.frame;
    var j, d, a, l;
    for (var g = 0; g < k.length; g++) {
      j = k[g];
      if (!this.canLayoutUI(b, j, e)) {
        continue
      }
      d = $KW.Utils.getWidgetNode(j, e);
      if (!d) {
        continue
      }
      d = d.parentNode;
      j.finalFrame = {};
      this.computeLayoutValues(j, e, m);
      var c, h;
      var f = this.getPreviousNode(j, d, e);
      if (f) {
        c = f[0];
        h = f[1]
      }
      l = h && c.frame;
      this.determineSize(e, j, d);
      a = $KW.Utils.getWidgetDimensions(j, d);
      this.determineHorizontalFlowX(j, a, c, l);
      this.determineY(j, a, e, m);
      $KW.Utils.setWidgetPosition(j, j.finalFrame, d);
      $KW.Utils.saveWidgetFrame(j);
      j.frame = this.getWidgetFrame(j, a, j.finalFrame);
      this.onWidgetLayout(j, d)
    }
    this.onFlexContainerLayout(b)
  },
  performVerticalLayout: function(b, e, k) {
    var m = b.frame;
    var j, d, a, l;
    for (var g = 0; g < k.length; g++) {
      j = k[g];
      if (!this.canLayoutUI(b, j, e)) {
        continue
      }
      d = $KW.Utils.getWidgetNode(j, e);
      if (!d) {
        continue
      }
      d = d.parentNode;
      j.finalFrame = {};
      this.computeLayoutValues(j, e, m);
      var c, h;
      var f = this.getPreviousNode(j, d, e);
      if (f) {
        c = f[0];
        h = f[1]
      }
      l = h && c.frame;
      this.determineSize(e, j, d);
      a = $KW.Utils.getWidgetDimensions(j, d);
      this.determineX(j, a, e, m);
      this.determineVerticalFlowY(j, a, c, l);
      $KW.Utils.setWidgetPosition(j, j.finalFrame, d);
      $KW.Utils.saveWidgetFrame(j);
      j.frame = this.getWidgetFrame(j, a, j.finalFrame);
      this.onWidgetLayout(j, d)
    }
    this.onFlexContainerLayout(b)
  },
  onFlexContainerLayout: function(a) {
    a.layoutConfig.children = false
  },
  onWidgetLayout: function(b, a) {
    b.dolayout && b.dolayout.call(b, b);
    this.compareFrames(b);
    this.layoutNestedConatiners(b, a);
    b.layoutConfig.self = false
  },
  compareFrames: function(a) {
    if (a.wType == "FlexContainer" || a.wType == "FlexScrollContainer") {
      var b = a.oldFrame;
      var c = a.frame;
      if (b.width != c.width || b.height != c.height) {
        a.layoutConfig.children = true
      }
    }
  },
  layoutNestedConatiners: function(b, a) {
    if (b.wType == "FlexContainer" || b.wType == "FlexScrollContainer") {
      $KW.FlexContainer.forceLayout(b, a ? a.childNodes[0] : null)
    }
    if (b.wType == "Segment") {
      var d = $KU.getNodeByModel(b);
      if (d) {
        if (b.layoutConfig.self) {
          $KU.needOptimization = false;
          $KW.FlexContainer.adjustFlexContainers(b, d);
          if (b.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            $KW.touch.computeWidths(d, b)
          }
          $KU.needOptimization = true
        }
        if (b.layoutModel && !b.needScroller) {
          var a = $KW.Utils.getWidgetNode(b);
          var c = $KW.Utils.getComputedPreferredHeight(b, a);
          a.parentNode.style.height = c + "px";
          b.frame.height = c
        }
      }
    }
    if (b.wType == "DataGrid") {
      var a = $KU.getNodeByModel(b);
      if (b.layoutConfig.self) {
        $KU.needOptimization = false;
        $KW.FlexContainer.adjustFlexContainers(b, a);
        $KU.needOptimization = true
      }
    }
    if (b.wType == "TabPane") {
      var a = $KU.getNodeByModel(b);
      if (b.layoutConfig.self) {
        $KU.needOptimization = false
      }
      $KW.FlexContainer.adjustFlexContainers(b, a);
      $KU.needOptimization = true;
      $KW.Form.initializeFlexContainersInBox(b)
    }
  },
  determineSize: function(d, h, c, k) {
    if (typeof k == "undefined") {
      $KW.Utils.setPaddingByParent(h, c.childNodes[0])
    }
    var b = h.layoutModel;
    var e = $KW.Utils.getWidth(h, b, c, d, k);
    var j = $KW.Utils.getHeight(h, b, c, d, k);
    c.style.maxWidth = c.style.maxHeight = "";
    if (typeof k == "undefined") {
      $KW.Utils.setDimensions(h, c, d)
    } else {
      var a = e.concat(j);
      for (var g = 0; g < a.length; g++) {
        var f = a[g].split(":");
        h.finalFrame[f[0]] = f[1]
      }
    }
  },
  determineX: function(g, a, d, k) {
    var c = g.layoutModel;
    var f = g.finalFrame;
    var i = g.parent;
    if (c.centerX) {
      var e = c.centerX.value;
      var b = a.width;
      if (c.centerX.unit == kony.flex.PERCENTAGE && i.layouttype == kony.flex.FREE_FORM) {
        b = Math.floor((b / k.width) * 100)
      }
      f.left = (e - (b / 2)) + c.centerX.unit
    } else {
      if (c.left) {
        f.left = c.left.value + c.left.unit
      } else {
        if (c.right) {
          var j = d.clientWidth;
          var h = $KU.getValueByParentFrame(g, c.right, "x");
          h = j - parseInt(a.width + h, 10);
          f.left = h + kony.flex.PX
        }
      }
    }
  },
  determineHorizontalFlowX: function(d, c, e, g) {
    var b = d.layoutModel;
    var a = d.finalFrame;
    g = g || {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      };
    var f = g.x + g.width;
    if (b.centerX) {
      f += b.centerX.value - (c.width / 2)
    } else {
      if (b.left) {
        f += b.left.value
      }
    }
    if (e && e.layoutModel && e.layoutModel.right) {
      f += e.layoutModel.right.value
    }
    a.left = parseInt(f, 10) + kony.flex.PX
  },
  determineY: function(g, a, c, k) {
    var b = g.layoutModel;
    var e = g.finalFrame;
    var i = g.parent;
    if (b.centerY) {
      var d = b.centerY.value;
      var j = a.height;
      if (b.centerY.unit == kony.flex.PERCENTAGE && i.layouttype == kony.flex.FREE_FORM) {
        j = Math.floor((j / k.height) * 100)
      }
      e.top = (d - (j / 2)) + b.centerY.unit
    } else {
      if (b.top) {
        e.top = b.top.value + b.top.unit
      } else {
        if (b.bottom) {
          var f = c.clientHeight;
          var h = $KU.getValueByParentFrame(g, b.bottom, "y");
          h = f - parseInt(a.height + h, 10);
          e.top = h + kony.flex.PX
        }
      }
    }
  },
  determineVerticalFlowY: function(d, c, e, g) {
    var b = d.layoutModel;
    var a = d.finalFrame;
    g = g || {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      };
    var f = g.y + g.height;
    if (b.centerY) {
      f += b.centerY.value - (c.height / 2)
    } else {
      if (b.top) {
        f += b.top.value
      }
    }
    if (e && e.layoutModel && e.layoutModel.bottom) {
      f += e.layoutModel.bottom.value
    }
    a.top = f + kony.flex.PX
  },
  getComputedValue: function(a, g, f, d) {
    if (!$KU.isValidCSSLength(f)) {
      return null
    }
    var c = $KU.getValueAndUnit(a, f);
    var f = c.value;
    var e = c.unit;
    var b = a.parent;
    if (b.wType == "FlexContainer" && b.autogrowHeight && e == kony.flex.PERCENTAGE && d == "y") {
      b.autogrowHeight = false;
      b.canMeasureChildrenHeight = false
    }
    if (b.layouttype != kony.flex.FREE_FORM && e == kony.flex.PERCENTAGE) {
      if (d == "x") {
        f = (f * g.width) / 100
      } else {
        if (d == "y") {
          f = (f * g.height) / 100
        }
      }
      e = kony.flex.PX
    }
    return {
      value: f,
      unit: e
    }
  },
  computeLayoutValues: function(a, r, f, k) {
    var c = a.layoutModel = {};
    var t = k || a;
    var j, h, d, u, m, g, p, l, s, n, e, o;
    var b = {};
    if (r.dataObj) {
      var q = r.dataObj;
      var i = q.data;
      var v = q.map;
      var w = i[v[a.id]];
      if (w && w instanceof Object) {
        b = w
      }
    }
    j = this.isAvailable(b.centerX) ? b.centerX : t.centerX;
    h = this.isAvailable(b.centerY) ? b.centerY : t.centerY;
    d = this.isAvailable(b.left) ? b.left : t.left;
    u = this.isAvailable(b.right) ? b.right : t.right;
    m = this.isAvailable(b.top) ? b.top : t.top;
    g = this.isAvailable(b.bottom) ? b.bottom : t.bottom;
    p = this.isAvailable(b.width) ? b.width : t.width;
    l = this.isAvailable(b.minWidth) ? b.minWidth : t.minWidth;
    s = this.isAvailable(b.maxWidth) ? b.maxWidth : t.maxWidth;
    n = this.isAvailable(b.height) ? b.height : t.height;
    e = this.isAvailable(b.minHeight) ? b.minHeight : t.minHeight;
    o = this.isAvailable(b.maxHeight) ? b.maxHeight : t.maxHeight;
    c.centerX = this.getComputedValue(a, f, j, "x");
    c.centerY = this.getComputedValue(a, f, h, "y");
    c.left = this.getComputedValue(a, f, d, "x");
    c.right = this.getComputedValue(a, f, u, "x");
    c.top = this.getComputedValue(a, f, m, "y");
    c.bottom = this.getComputedValue(a, f, g, "y");
    c.width = this.getComputedValue(a, f, p, "x");
    c.minWidth = this.getComputedValue(a, f, l, "x");
    c.maxWidth = this.getComputedValue(a, f, s, "x");
    c.height = this.getComputedValue(a, f, n, "y");
    c.minHeight = this.getComputedValue(a, f, e, "y");
    c.maxHeight = this.getComputedValue(a, f, o, "y")
  },
  computeKeyFrameValues: function(c, l) {
    var b = [];
    var k = {};
    if (l) {
      c.finalFrame = {};
      var h = $KW.Utils.getWidgetNode(c);
      h = h.parentNode;
      var a = c.parent;
      var w = $KW.Utils.getWidgetNode(a);
      var j = a.frame;
      this.computeLayoutValues(c, w, j, l);
      this.determineSize(w, c, h, false);
      var v = $KW.Utils.getWidgetFrame(c, h, false);
      var t = c.layoutModel;
      if (c.finalFrame.width && (t.centerX || t.right)) {
        var s = c.finalFrame.width;
        var x = {
          value: parseFloat(s),
          unit: $KU.getUnit(s)
        };
        v.width = $KU.getValueByParentFrame(c, x, "x")
      }
      if (c.finalFrame.height && (t.centerY || t.bottom)) {
        var p = c.finalFrame.height;
        var x = {
          value: parseFloat(p),
          unit: $KU.getUnit(p)
        };
        v.height = $KU.getValueByParentFrame(c, x, "y")
      }
      var n = $KW.Utils.getWidgetIndex(c);
      var q = a.widgets();
      var f, y;
      var g = this.getPreviousNode(c, h, w);
      if (g) {
        f = g[0];
        y = g[1]
      }
      var o = y && $KW.Utils.getWidgetFrame(f, y);
      if (a.layouttype == kony.flex.FLOW_HORIZONTAL) {
        this.determineHorizontalFlowX(c, v, f, o)
      } else {
        this.determineX(c, v, w, j)
      }
      if (a.layouttype == kony.flex.FLOW_VERTICAL) {
        this.determineVerticalFlowY(c, v, f, o)
      } else {
        this.determineY(c, v, w, j)
      }
      if (!c.finalFrame.left) {
        c.finalFrame.left = "0px"
      }
      if (!c.finalFrame.top) {
        c.finalFrame.top = "0px"
      }
      for (var e in c.finalFrame) {
        k[e] = c.finalFrame[e]
      }
      b.push(k);
      if (a.layouttype == kony.flex.FLOW_HORIZONTAL) {
        if (k.left || k.width || k["min-width"] || k["max-width"]) {
          for (var u = n + 1; u < q.length; u++) {
            var r = q[u];
            var d = q[u - 1];
            var m = r.frame;
            if (r.isvisible && m) {
              var o = {};
              var s;
              o.x = k.left ? parseInt(k.left, 10) : d.frame.x;
              if (k.width) {
                s = parseInt(k.width, 10)
              } else {
                if (k["min-width"]) {
                  s = parseInt(k["min-width"], 10);
                  if (s < d.frame.width) {
                    s = d.frame.width;
                    k["min-width"] = d.frame.width + "px"
                  }
                } else {
                  if (k["max-width"]) {
                    s = parseInt(k["max-width"], 10);
                    if (s > d.frame.width) {
                      s = d.frame.width;
                      k["max-width"] = d.frame.width + "px"
                    }
                  } else {
                    s = d.frame.width
                  }
                }
              }
              o.width = s;
              this.computeLayoutValues(r, w, j);
              this.determineHorizontalFlowX(r, m, d, o);
              k = {
                left: r.finalFrame.left
              };
              b.push(k)
            }
          }
        }
      }
      if (a.layouttype == kony.flex.FLOW_VERTICAL) {
        if (k.top || k.height || k["min-height"] || k["max-height"]) {
          for (var u = n + 1; u < q.length; u++) {
            var r = q[u];
            var d = q[u - 1];
            var m = r.frame;
            if (r.isvisible && m) {
              var o = {};
              var p;
              o.y = k.top ? parseInt(k.top, 10) : d.frame.y;
              if (k.height) {
                p = parseInt(k.height, 10)
              } else {
                if (k["min-height"]) {
                  p = parseInt(k["min-height"], 10);
                  if (p < d.frame.height) {
                    p = d.frame.height;
                    k["min-height"] = d.frame.height + "px"
                  }
                } else {
                  if (k["max-height"]) {
                    p = parseInt(k["max-height"], 10);
                    if (p > d.frame.height) {
                      p = d.frame.height;
                      k["max-height"] = d.frame.height + "px"
                    }
                  } else {
                    p = d.frame.height
                  }
                }
              }
              o.height = p;
              this.computeLayoutValues(r, w, j);
              this.determineVerticalFlowY(r, m, d, o);
              k = {
                top: r.finalFrame.top
              };
              b.push(k)
            }
          }
        }
      }
    }
    return b
  },
  isAvailable: function(a) {
    return a == undefined ? false : true
  },
  toPointwidget: function(g, c, h, b) {
    if (!$KU.isValidCSSLength(h)) {
      return null
    }
    var e = $KU.getValueAndUnit(g, h);
    var h = e.value;
    var i = e.unit;
    var d = $KW.Utils.getWidgetNode(g);
    var a = $KW.Utils.getPosition(d);
    var f = $KW.Utils.getWidgetNode(c);
    var j = $KW.Utils.getPosition(f);
    if (b == "x") {
      h = j.left - a.left + h
    } else {
      if (b == "y") {
        h = j.top - a.top + h
      }
    }
    return {
      value: h,
      unit: i
    }
  },
  getPreviousNode: function(h, c, e) {
    var g = $KW.Utils.getWidgetIndex(h);
    if (g == 0) {
      return null
    }
    var b = h.parent;
    var k = b.widgets();
    var d = g - 1;
    var j = c.previousSibling;
    if (!j) {
      return null
    }
    for (var f = d; f >= 0; f--) {
      var a = k[f];
      if (!this.isVisible(a, e)) {
        if (!e.dataObj) {
          j = j.previousSibling
        }
        continue
      }
      return [a, j]
    }
  },
  canLayoutUI: function(a, b, f) {
    if (!$KU.needOptimization) {
      if (!this.isVisible(b, f)) {
        return false
      }
      return true
    }
    if ($KG.isUILayedOut) {
      var e = b.layoutConfig;
      var d = a.layoutConfig;
      var c = a.layouttype;
      if (c == kony.flex.FLOW_HORIZONTAL || c == kony.flex.FLOW_VERTICAL) {
        if (e.self) {
          d.children = true
        }
      }
      if (e.self || d.children) {
        if (!this.isVisible(b, f)) {
          e.self = false;
          return false
        }
        return true
      } else {
        if (b.wType == "FlexContainer" || b.wType == "FlexScrollContainer" || b.wType == "Segment" || b.wType == "TabPane") {
          this.layoutNestedConatiners(b);
          return false
        } else {
          return false
        }
      }
    } else {
      if (!this.isVisible(b, f)) {
        return false
      } else {
        if (!$KG.isUILayedOut && b.wType == "Image") {
          return false
        }
      }
    }
    return true
  },
  getWidgetFrame: function(d, e, b) {
    var g = b.left || "0px";
    var c = {
      value: parseFloat(g),
      unit: $KU.getUnit(g)
    };
    g = $KU.getValueByParentFrame(d, c, "x");
    var f = b.top || "0px";
    var a = {
      value: parseFloat(f),
      unit: $KU.getUnit(f)
    };
    f = $KU.getValueByParentFrame(d, a, "y");
    return {
      x: g,
      y: f,
      width: e.width,
      height: e.height
    }
  },
  isVisible: function(b, f) {
    if (f && f.dataObj) {
      var a = f.dataObj;
      var d = a.data;
      var e = a.map;
      var c = d[e[b.id]];
      if (c && c instanceof Object && typeof c.isVisible != "undefined") {
        return c.isVisible
      }
    }
    return b.isvisible
  }
};
$KW.Animator = function(a) {
  this.validateKeyFrame(a);
  this.animationDef = a
};
$KW.Animator.prototype = {
  getNextAnimationValue: function() {
    return ($KW.Animator.indexCounter >= 0) ? (++$KW.Animator.indexCounter) : ($KW.Animator.indexCounter = 0)
  },
  getAnimationTime: function() {
    return new Date().getTime()
  },
  validateKeyFrame: function(b) {
    for (var a in b) {
      if (a > 100) {
        throw new KonyError(1000, "AnimationError", "Invalid Animation Definition Exception: Animation Definition can not be greater than 100")
      }
    }
    if (b["100"] == undefined) {
      throw new KonyError(1000, "AnimationError", "Invalid Animation Definition Exception: Animation Definition does not have 100 value")
    }
  },
  getComputedAnimationFrames: function(h, n) {
    var b = {};
    var o = this.animationDef;
    var l = {};
    var a = {};
    var c = {};
    h.originalFrames = {};
    this.flexDepFrames = {};
    var s = {};
    var g = ["width", "height", "centerX", "centerY", "left", "top", "bottom", "left", "right", "minWidth", "maxWidth", "minHeight", "maxHeight", "transform", "opacity", "zIndex", "anchorPoint"];
    var w = {};
    var f = null;
    for (var r = 0; r < g.length; r++) {
      var q = g[r];
      w[q] = h[q]
    }
    if (!o[0]) {
      this.flexDepFrames[0] = $KW.FlexLayoutEngine.computeKeyFrameValues(h, w);
      f = this.flexDepFrames[0][0];
      if (h.wType == "Image") {
        var m = n.childNodes[0];
        var e = {
          width: f.width,
          height: f.height
        };
        if (h.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          e = $KU.setImgAspectRatio(h, m, e, false);
          var t = $KU.getImageCenterAlign(m, false, {
            spanHeight: f.height,
            imgHeight: e.height
          });
          if (t > 0) {
            b.margintop = t
          }
        } else {
          e = $KU.setImgDimensions(h, m, e, false)
        }
        b.width = e.width;
        b.height = e.height
      }
      a[0] = f;
      c[0] = b;
      if (h.wType == "Slider") {
        s[0] = {};
        s[0].left = $KW.Slider.animSlider(a[0].width, h, "left");
        c[0].width = $KW.Slider.animSlider(a[0].width, h, "width")
      }
    }
    var v = [];
    for (var r in o) {
      v.push(r)
    }
    v.sort(function(j, i) {
      return j - i
    });
    for (var r = 0; r < v.length; r++) {
      var d = v[r];
      b = $KU.cloneObj(o[d]);
      for (var q in b) {
        if (g.contains(q)) {
          w[q] = b[q];
          delete b[q]
        }
      }
      this.flexDepFrames[d] = $KW.FlexLayoutEngine.computeKeyFrameValues(h, w);
      f = this.flexDepFrames[d][0];
      if (h.wType == "Image") {
        var m = n.childNodes[0];
        var e = {
          width: f.width,
          height: f.height
        };
        if (h.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          e = $KU.setImgAspectRatio(h, m, e, false);
          var t = $KU.getImageCenterAlign(m, false, {
            spanHeight: f.height,
            imgHeight: e.height
          });
          if (t > 0) {
            b.margintop = t
          }
        } else {
          e = $KU.setImgDimensions(h, m, e, false)
        }
        b.width = e.width;
        b.height = e.height
      }
      if (w.transform) {
        f.transform = w.transform
      }
      if (typeof(w.opacity) != "undefined") {
        f.opacity = w.opacity
      }
      if (w.zIndex) {
        f.zIndex = w.zIndex
      }
      if (w.anchorPoint) {
        f.anchorPoint = w.anchorPoint
      }
      if (b.stepConfig) {
        b.timingFunction = f.timingFunction = b.stepConfig.timingFunction;
        for (var p in this.flexDepFrames[d]) {
          this.flexDepFrames[d][p].timingFunction = b.stepConfig.timingFunction
        }
      }
      if (f["min-height"] != undefined) {
        b["min-height"] = f["min-height"]
      }
      a[d] = f;
      c[d] = b;
      var u = owl.deepCopy(w);
      u.backgroundColor = b.backgroundColor;
      h.originalFrames[d] = u;
      if (h.wType == "Slider") {
        s[d] = {};
        s[d].left = $KW.Slider.animSlider(a[d].width, h, "left");
        c[d].width = $KW.Slider.animSlider(a[d].width, h, "width")
      }
    }
    this.cellFrame = a;
    this.skinFrame = c;
    if (h.wType == "Slider") {
      this.imageFrame = s
    }
  },
  createKeyFrames: function(e, b, g, l) {
    var c = $KG.animStyleSheet;
    if (c && b) {
      var n = "";
      for (var f in b) {
        var p = "",
          k = "";
        var h = b[f];
        for (var d in h) {
          if (d == "timingFunction") {
            if (typeof h[d] == "string") {
              k += "-" + vendor + "-animation-timing-function :" + h[d] + ";"
            } else {
              k += "-" + vendor + "-animation-timing-function : cubic-bezier(" + h[d] + ");"
            }
          } else {
            if (d == "zIndex") {
              p += "z-index:" + h[d] + ";"
            } else {
              if (d == "transform") {
                var a = $KW.animUtils.applyTransform(e, h[d]);
                p += "-" + vendor + "-transform:" + a + ";"
              } else {
                if (d == "anchorPoint") {
                  if (h[d]) {
                    if ((h[d].x >= 0) && (h[d].x <= 1) && (h[d].y >= 0) || (h[d].y <= 1)) {
                      p += "-" + vendor + "-transform-origin:" + (h[d].x * 100) + "% " + (h[d].y * 100) + "%; "
                    }
                  }
                } else {
                  if (d == "backgroundColor" || d == "borderColor") {
                    var m = $KW.skins.validateHexValue(h[d]);
                    if (m) {
                      var o = $KW.skins.convertHexValuetoRGBA(h[d])
                    }
                    if (d == "backgroundColor") {
                      if (e.wType == "ComboBox" || e.wType == "ListBox") {
                        p += "background-color:" + o + ";"
                      } else {
                        p += "background:" + o + ";"
                      }
                    } else {
                      if (d == "borderColor") {
                        p += "border-color:" + o + ";"
                      }
                    }
                  } else {
                    if (d == "margintop") {
                      p += "margin-top:" + h[d] + "px;"
                    } else {
                      p += d + ":" + h[d] + ";"
                    }
                  }
                }
              }
            }
          }
        }
        n += " " + f + "%{" + p + " " + k + "}"
      }
      if ($KG.appbehaviors.captureAniamtionData) {
        $KG.animataionData[this.animatorID].data[l] = n
      }
      c.insertRule("@-" + vendor + "-keyframes " + g + " { " + n + "}", c.cssRules.length)
    } else {
      console.log("kony css style sheet is not found")
    }
  },
  animate: function(p, g, y) {
    if (p) {
      var v = $KW.Utils.getWidgetNode(p);
      if (!v) {
        return
      }
      this.animatorID = "anim_" + p.id + "_" + this.getNextAnimationValue();
      this.animator1ID = this.animatorID + "_skin";
      if ($KG.appbehaviors.captureAniamtionData) {
        if (!$KG.animataionData) {
          $KG.animataionData = {}
        }
        $KG.animataionData[this.animatorID] = {};
        var d = $KG.animataionData[this.animatorID];
        d.animationID = this.animatorID;
        d.data = {
          startFrame: p.frame
        };
        d.animationRequestTime = d.animationRequestHandleBeginTime = this.getAnimationTime()
      }
      if (p.wType == "Image" && !p.loaded) {
        p.animInfo = {
          instance: this,
          animConfig: g,
          animCallback: y
        };
        return
      }
      if ((p.parent.wType == "FlexContainer" || p.parent.wType == "FlexScrollContainer" || ((p.parent.wType == "Form" || p.parent.wType == "Popup") && p.parent.layouttype != kony.flex.VBOX_LAYOUT))) {
        this.getComputedAnimationFrames(p, v);
        var r = this.flexDepFrames;
        this.createKeyFrames(p, this.cellFrame, this.animatorID, "widgetFrame");
        this.createKeyFrames(p, this.skinFrame, this.animator1ID, "skinFrame");
        var b = g.duration || 0;
        var B = g.iterationCount || 1;
        if (g.iterationCount == 0) {
          B = "infinite"
        }
        var E = g.direction || "normal";
        var f = g.delay || 0;
        var D = g.fillMode || "none";
        v.direction = E;
        v.fillMode = D;
        v.iterations = B;
        v.wModel = p;
        var q = vendor + "Animation";
        var o = this.animator1ID + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
        var A = this.animatorID + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
        if (p.wType == "Slider") {
          this.animator2ID = this.animatorID + "_image";
          this.createKeyFrames(p, this.imageFrame, this.animator2ID);
          var n = this.animator2ID + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
          v.childNodes[0].childNodes[0].childNodes[0].style[q] = n
        }
        var m = v.parentNode;
        if (p.wType == "Image") {
          v.childNodes[0].style[q] = o
        } else {
          if (p.wType == "Slider") {
            v.childNodes[0].childNodes[0].style[q] = o
          } else {
            v.style[q] = o
          }
        }
        m.style[q] = A;
        if ($KG.appbehaviors.captureAniamtionData) {
          d.animationRequestHandleEndTime = d.animationInvokeTime = this.getAnimationTime()
        }
        if (D == kony.anim.FILL_MODE_BACKWARDS || D == kony.anim.FILL_MODE_BOTH) {
          var u = [];
          var t = [];
          if (E == kony.anim.DIRECTION_NONE || E == kony.anim.DIRECTION_ALTERNATE) {
            u = this.animationDef[0]
          }
          for (var z in u) {
            t[z] = p[z];
            p[z] = u[z]
          }
          v.initialPosition = t
        }
        m.callBackConfig = y || {};
        if (kony.appinit.isFirefox || kony.appinit.isIE10 || kony.appinit.isIE11) {
          kony.events.addEventListener(m, "animationstart", this, false);
          kony.events.addEventListener(m, "animationiteration", this, false);
          kony.events.addEventListener(m, "animationend", this, false)
        } else {
          if (kony.appinit.isIE8 || kony.appinit.isIE9) {
            this.start(m);
            this.move(m);
            this.end(m)
          } else {
            kony.events.addEventListener(m, vendor + "AnimationStart", this, false);
            kony.events.addEventListener(m, vendor + "AnimationIteration", this, false);
            kony.events.addEventListener(m, vendor + "AnimationEnd", this, false)
          }
        }
        var a = p.parent;
        if (a.layoutType == kony.flex.FLOW_HORIZONTAL || a.layoutType == kony.flex.FLOW_VERTICAL) {
          widgetIndex = $KW.Utils.getWidgetIndex(p);
          if (widgetIndex != -1) {
            var s = a.widgets();
            var h = s.length;
            var x = 1;
            for (var z = (widgetIndex + 1); z < h; z++) {
              var C = s[z];
              if (!C.isvisible) {
                continue
              }
              var F = {};
              for (var w in r) {
                F[w] = r[w][x]
              }
              var l = $KW.Utils.getWidgetNode(C);
              var e = "dep_" + p.id + "_" + this.getNextAnimationValue();
              var c = e + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
              this.createKeyFrames(p, F, e, "depFrame" + z);
              x++;
              l.parentNode.style[q] = c
            }
          }
        }
      }
    }
  },
  handleEvent: function(c) {
    var b = c.target;
    if (!b.childNodes[0]) {
      return
    }
    var d = b.childNodes[0];
    var a = d.wModel;
    if (!a) {
      return
    }
    switch (c.type) {
      case vendor + "AnimationStart":
      case "animationstart":
        this.start(b);
        break;
      case vendor + "AnimationIteration":
        this.move(b);
        break;
      case vendor + "AnimationEnd":
      case "animationend":
        this.end(b)
    }
  },
  start: function(c) {
    var d = c.childNodes[0];
    var a = d.wModel;
    if ($KG.appbehaviors.captureAniamtionData) {
      $KG.animataionData[this.animatorID].animationBeginTime = this.getAnimationTime()
    }
    var b = c.callBackConfig && $KU.returnEventReference(c.callBackConfig.animationStart);
    this.execute(b, a)
  },
  move: function(a) {},
  end: function(c, g) {
    var h = c.childNodes[0];
    var e = h.wModel;
    var b = h.fillMode;
    var j = h.direction;
    var d = h.iterations;
    if (!e) {
      return
    }
    var a = ["width", "height", "centerX", "centerY", "left", "top", "bottom", "right", "minWidth", "maxWidth", "minHeight", "maxHeight", "transform", "opacity", "zIndex", "anchorPoint", "backgroundColor"];
    if ($KG.appbehaviors.captureAniamtionData) {
      $KG.animataionData[this.animatorID].animationEndTime = this.getAnimationTime()
    }
    var g = c.callBackConfig && $KU.returnEventReference(c.callBackConfig.animationEnd);
    var k = [];
    if (b == kony.anim.FILL_MODE_FORWARDS || b == kony.anim.FILL_MODE_BOTH) {
      if (j == kony.anim.DIRECTION_NONE) {
        k = e.originalFrames[100]
      } else {
        if (j == kony.anim.DIRECTION_ALTERNATE) {
          if (d % 2 == 0) {
            k = e.originalFrames[0]
          } else {
            k = e.originalFrames[100]
          }
        }
      }
    }
    if (b == kony.anim.FILL_MODE_BACKWARDS) {
      k = h.initialPosition
    }
    for (var f in k) {
      if (a.contains(f)) {
        e[f] = k[f]
      }
    }
    this.removeListeners(c);
    if (b != kony.anim.FILL_MODE_NONE) {
      if (kony.appinit.isIE8) {
        $KU.updateLayoutConfig(e)
      }
      e.parent.forceLayout && e.parent.forceLayout()
    }
    c.style[vendor + "Animation"] = "";
    if ($KG.appbehaviors.captureAniamtionData) {
      $KG.animataionData[this.animatorID].data.endFrame = e.frame
    }
    if (e.wType == "Image") {
      delete e.animInfo
    }
    this.execute(g, e)
  },
  execute: function(b, a) {
    var c = {};
    b && setTimeout(function() {
      b.call(a, a, c)
    }, 0)
  },
  removeListeners: function(a) {
    if (kony.appinit.isFirefox || kony.appinit.isIE10 || kony.appinit.isIE11) {
      kony.events.removeEventListener(a, "animationstart", this, false);
      kony.events.removeEventListener(a, "animationiteration", this, false);
      kony.events.removeEventListener(a, "animationend", this, false)
    } else {
      kony.events.removeEventListener(a, vendor + "AnimationStart", this, false);
      kony.events.removeEventListener(a, vendor + "AnimationIteration", this, false);
      kony.events.removeEventListener(a, vendor + "AnimationEnd", this, false)
    }
  },
  cancel: function(a) {}
};
$KW.Transform = function() {
  this.transform = {}
};
$KW.Transform.prototype = {
  rotate: function(a) {
    if (a == "undefined") {
      a = 0
    }
    if (a < 0) {
      this.transform.rotate = "rotate(" + Math.abs(a) + "deg) "
    } else {
      this.transform.rotate = "rotate( -" + a + "deg) "
    }
    return this
  },
  translate: function(a, c) {
    if (a == "undefined") {
      a = 0
    }
    if (c == "undefined") {
      c = 0
    }
    var b = {};
    b.x = a;
    b.y = c;
    this.transform.translate = "translate(" + b.x + "px, " + b.y + "px) ";
    return this
  },
  scale: function(a, b) {
    if (a == "undefined") {
      a = 1
    }
    if (b == "undefined") {
      b = 1
    }
    this.transform.scale = "scale(" + a + ", " + b + ") ";
    return this
  }
};
$KW.animUtils = {
  applyTransform: function(c, a) {
    if (!a) {
      return ($KU.hasWebkitTransform) ? "translateZ(0px)" : ""
    }
    var b = "";
    if (a.transform.scale) {
      b += a.transform.scale
    }
    if (a.transform.translate) {
      b += a.transform.translate
    }
    if (a.transform.rotate) {
      b += a.transform.rotate
    }
    return b
  },
  AnimationDataComapre: function(h) {
    if (h == "record") {
      var b = JSON.stringify($KG.animataionData);
      localStorage.setItem("animataionData", b)
    } else {
      if (h == "play") {
        var d = localStorage.getItem("animataionData");
        var b = JSON.parse(d);
        var g = $KG.animataionData;
        for (var c in b) {
          console.log("Animation Testing for: " + b[c].animationID);
          var a = b[c].data;
          var e = g[c].data;
          for (var f in a) {
            if (f != "startFrame" && f != "endFrame") {
              if (a[f] == e[f]) {
                console.log("PASSED Frame is \n" + a[f] + " \n" + e[f])
              } else {
                console.log("FAILED Frame is \n" + a[f] + " \n" + e[f])
              }
            } else {}
          }
        }
      }
    }
  }
};
$KI.themes = {
  relativePath: true,
  setcurrenttheme: function(o, g, p) {
    if (!($KU.inArray($KG.themes, o, true))) {
      p();
      return
    }
    if (o == $KI.themes.getcurrenttheme()) {
      g();
      return
    }
    try {
      var d = window.document.styleSheets;
      var c = $KW.Utils.getKonyStyleSheetIndex(d);
      var l = "";
      var a = "";
      if (c == -1 && $KG[$KG.theme + "remoteurl"] && $KG.lastStyleSheet) {
        l = $KG.lastStyleSheet.lastIndexOf("/");
        if ($KG.theme && $KG.theme != "default") {
          var q = $KG.lastStyleSheet.substring(0, l);
          if (q.indexOf($KG.theme)) {
            l = q.lastIndexOf("/")
          }
        }
        a = $KG.lastStyleSheet
      } else {
        l = d[c].href.lastIndexOf("/");
        a = d[c].href
      }
      var b = "";
      if (this.relativePath || this.relativePath === undefined) {
        this.relativePath = false;
        var k = a.substring(0, l + 1);
        $KG.relativepath = k;
        b = a.substring(a.lastIndexOf("/"), a.length);
        $KG.themerelcssfile = b
      }
      b = $KG.themerelcssfile;
      var n = document.createElement("link");
      n.type = "text/css";
      n.rel = "stylesheet";
      var r = document.getElementsByTagName("head");
      var m = new XMLHttpRequest();
      if ($KG.relativepath) {
        k = $KG.relativepath
      }
      var f = $KG.imagecat;
      var j = k + (o == "default" ? "" : o) + b;
      var h = $KG.theme;
      if ($KG[h + "remoteurl"]) {
        b = $KG[h + "remoteurl"]
      }
      $KG[o + "remoteurl"] && (j = $KG[o + "remoteurl"]);
      m.open("GET", j, true);
      m.timeout = 60000;
      m.onreadystatechange = function() {
        if (this.readyState == 4) {
          if (this.status == 200) {
            for (var t = 0; t < r[0].childNodes.length; t++) {
              if (r[0].childNodes[t].nodeName == "LINK") {
                if (r[0].childNodes[t].getAttribute("href").indexOf(b) != -1) {
                  $KG.lastStyleSheet = r[0].childNodes[t].href;
                  var u = r[0].childNodes[t].getAttribute("media") || "screen";
                  var s = document.createElement("link");
                  s.rel = "stylesheet";
                  s.type = "text/css";
                  s.href = j;
                  s.media = u;
                  r[0].replaceChild(s, r[0].childNodes[t]);
                  var e = document.createElement("img");
                  e.onerror = function() {
                    var v = window.document.styleSheets;
                    $KG.currentStyleSheet = v[$KW.Utils.getKonyStyleSheetIndex(v)];
                    $KG.theme = o;
                    g();
                    m = null
                  };
                  e.src = j;
                  break
                }
              }
            }
          } else {
            p()
          }
        }
      };
      m.ontimeout = function() {
        p()
      };
      m.send(null)
    } catch (i) {
      p()
    }
  },
  deletetheme: function(f, j, b) {
    var a = $KG.themes;
    var h = a.length;
    var g = a.length;
    try {
      for (var c = 0; c < a.length; c++) {
        if (a[c] == f) {
          a.splice(c, 1)
        }
      }
      $KG.themes = a;
      if ($KG.theme == f) {
        $KI.themes.setcurrenttheme("default", j, b);
        return
      }
      g = a.length;
      if (h - 1 == g) {
        j()
      } else {
        b()
      }
    } catch (d) {
      b()
    }
  },
  isthemepresent: function(a) {
    return $KU.inArray($KG.themes, a, true)
  },
  createtheme: function(d, h, g, c) {
    if (($KU.inArray($KG.themes, h, true))) {
      g();
      return
    }
    try {
      var f = new XMLHttpRequest();
      var b = d;
      f.open("GET", b, true);
      f.timeout = 60000;
      var a = document.getElementsByTagName("head");
      $KG[h + "remoteurl"] = d;
      f.onreadystatechange = function() {
        if (this.readyState == 4) {
          if (this.status == 200) {
            $KG.themes.push(h);
            g();
            f = null
          } else {
            c()
          }
        }
      };
      f.ontimeout = function() {
        c()
      };
      f.send(null)
    } catch (i) {
      c()
    }
  },
  allthemes: function() {
    return $KG.themes
  },
  getcurrentthemedata: function() {
    return true
  },
  getcurrenttheme: function() {
    return $KG.theme
  },
  packagedthemes: function(c) {
    var a = [];
    if (IndexJL == 1) {
      a.push(null)
    }
    for (var b = IndexJL; b < (c.length); b++) {
      a.push(c[b])
    }
    $KG.themes = a;
    $KG.theme = "default"
  }
};
$KI.crypto = {
  stringify: function(a) {
    var b = {
      ct: a.ciphertext.toString(CryptoJS.enc.Base64)
    };
    if (a.iv) {
      b.iv = a.iv.toString()
    }
    if (a.salt) {
      b.s = a.salt.toString()
    }
    return JSON.stringify(b)
  },
  parse: function(a) {
    var c = JSON.parse(a);
    var b = CryptoJS.lib.CipherParams.create({
      ciphertext: CryptoJS.enc.Base64.parse(c.ct)
    });
    if (c.iv) {
      b.iv = CryptoJS.enc.Hex.parse(c.iv)
    }
    if (c.s) {
      b.salt = CryptoJS.enc.Hex.parse(c.s)
    }
    return b
  },
  createhash: function(a, b) {
    var e;
    var d;
    if (typeof(b) != "string") {
      return {
        errcode: 100,
        errmessage: "invalid input parameters"
      }
    }
    try {
      switch (a.toLowerCase()) {
        case "md5":
          e = CryptoJS.MD5(b);
          break;
        case "sha256":
          e = CryptoJS.SHA256(b);
          break;
        case "sha1":
          e = CryptoJS.SHA1(b);
          break;
        case "sha512":
          e = CryptoJS.SHA512(b);
          break;
        default:
          e = {
            errcode: 101,
            errmessage: "unsupported algorithm"
          };
          break
      }
      return e
    } catch (c) {
      return {
        errcode: 102,
        errmessage: "unknown  error"
      }
    }
  },
  encrypt: function(g, f, a, c) {
    if (typeof(g) != "string" && a && f) {
      return {
        errcode: 100,
        errmessage: "invalid input parameters"
      }
    }
    var e = CryptoJS.mode.CBC;
    var d = CryptoJS.pad.Pkcs7;
    try {
      if (c) {
        if (c.mode) {
          switch (c.mode.toLowerCase()) {
            case "cfb":
              e = CryptoJS.mode.CFB;
              break;
            case "ctr":
              e = CryptoJS.mode.CTR;
              break;
            case "ofb":
              e = CryptoJS.mode.OFB;
              break;
            case "ecb":
              e = CryptoJS.mode.ECB;
              break
          }
        }
        if (c.padding) {
          switch (c.padding.toLowerCase()) {
            case "iso97971":
              d = CryptoJS.pad.Iso97971;
              break;
            case "iso10126":
              d = CryptoJS.pad.Iso10126;
              break;
            case "zeropadding":
              d = CryptoJS.pad.ZeroPadding;
              break;
            case "nopadding":
              d = CryptoJS.pad.NoPadding;
              break
          }
        }
      }
      if (g.toLowerCase() == "aes") {
        var h = CryptoJS.AES.encrypt(a, f, {
          mode: e,
          padding: d
        });
        return $KI.crypto.stringify(h)
      } else {
        if (g.toLowerCase() == "tripledes") {
          var h = CryptoJS.TripleDES.encrypt(a, f, {
            mode: e,
            padding: d,
            format: $KI.crypto.JsonFormatter
          });
          return $KI.crypto.stringify(h)
        } else {
          return {
            errcode: 101,
            errmessage: "unsupported algorithm"
          }
        }
      }
    } catch (b) {
      return {
        errcode: 102,
        errmessage: "unknown  error"
      }
    }
  },
  decrypt: function(h, g, a, c) {
    if (typeof(h) != "string" && a && g) {
      return {
        errcode: 100,
        errmessage: "invalid input parameters"
      }
    }
    var f = CryptoJS.mode.CBC;
    var e = CryptoJS.pad.Pkcs7;
    try {
      if (c) {
        if (c.mode) {
          switch (c.mode.toLowerCase()) {
            case "cfb":
              f = CryptoJS.mode.CFB;
              break;
            case "ctr":
              f = CryptoJS.mode.CTR;
              break;
            case "ofb":
              f = CryptoJS.mode.OFB;
              break;
            case "ecb":
              f = CryptoJS.mode.ECB;
              break
          }
        }
        if (c.padding) {
          switch (c.padding.toLowerCase()) {
            case "iso97971":
              e = CryptoJS.pad.Iso97971;
              break;
            case "iso10126":
              e = CryptoJS.pad.Iso10126;
              break;
            case "zeropadding":
              e = CryptoJS.pad.ZeroPadding;
              break;
            case "nopadding":
              e = CryptoJS.pad.NoPadding;
              break
          }
        }
      }
      a = $KI.crypto.parse(a);
      if (h.toLowerCase() == "aes") {
        var d = CryptoJS.AES.decrypt(a, g, {
          mode: f,
          padding: e
        });
        return d.toString(CryptoJS.enc.Utf8)
      } else {
        if (h.toLowerCase() == "tripledes") {
          var d = CryptoJS.TripleDES.decrypt(a, g, {
            mode: f,
            padding: e
          });
          return d.toString(CryptoJS.enc.Utf8)
        } else {
          return {
            errcode: 101,
            errmessage: "unsupported algorithm"
          }
        }
      }
    } catch (b) {
      return {
        errcode: 102,
        errmessage: "unknown  error"
      }
    }
  },
  retrievepublickey: function() {
    return
  },
  newkey: function(d, c, b) {
    try {
      if (d != "passphrase") {
        return {
          errcode: 100,
          errmessage: "invalid input parameters"
        }
      } else {
        if (!b.subalgo) {
          return {
            errcode: 105,
            errmessage: "subalgo parameter is missing"
          }
        }
      }
      if (b.subalgo.toLowerCase() == "aes" || b.subalgo.toLowerCase() == "tripledes") {
        return b.passphrasetext[IndexJL]
      } else {
        return {
          errcode: 101,
          errmessage: "unsupported algorithm"
        }
      }
    } catch (a) {
      return {
        errcode: 102,
        errmessage: "unknown error"
      }
    }
  },
  savekey: function(a, b, c) {
    if (a == undefined || b == undefined) {
      return {
        errcode: 100,
        errmsg: "Invalid input parameters"
      }
    }
    try {
      if (localStorage) {
        try {
          localStorage.setItem(a, JSON.stringify(b));
          return a
        } catch (g) {
          if (g.name == "QUOTA_EXCEEDED_ERR") {
            var f = 0,
              h = "";
            if (localStorage.length === 0) {
              f = 102;
              h = "Private Browsing is switched ON"
            } else {
              f = 101;
              h = "unable to save the key with the specified name"
            }
            return {
              errcode: f,
              errmsg: h
            }
          }
        }
      } else {
        return {
          errcode: 102,
          errmsg: "unknown error, storage not supported"
        }
      }
    } catch (d) {}
  },
  readkey: function(c) {
    if (c == undefined) {
      return {
        errcode: 100,
        errmsg: "Invalid input parameters"
      }
    }
    try {
      if (localStorage) {
        var b = JSON.parse(localStorage.getItem(c) || "null");
        if (b == null) {
          return {
            errcode: 101,
            errmsg: "unable to find the key with the specified unique ID"
          }
        } else {
          return b
        }
      } else {
        kony.print("crypto readkey failed");
        return {
          errcode: 102,
          errmsg: "unknown error, storage not supported"
        }
      }
    } catch (a) {}
  },
  deletekey: function(b) {
    try {
      if (localStorage) {
        localStorage.removeItem(b)
      } else {
        kony.print("crypto delete failed")
      }
    } catch (a) {}
  }
};
/*! jQuery v1.7.1 jquery.com | jquery.org/license */
if (!window.jQuery) {
  (function(a, b) {
    function cy(a) {
      return f.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1
    }

    function cv(a) {
      if (!ck[a]) {
        var b = c.body,
          d = f("<" + a + ">").appendTo(b),
          e = d.css("display");
        d.remove();
        if (e === "none" || e === "") {
          cl || (cl = c.createElement("iframe"), cl.frameBorder = cl.width = cl.height = 0), b.appendChild(cl);
          if (!cm || !cl.createElement) {
            cm = (cl.contentWindow || cl.contentDocument).document, cm.write((c.compatMode === "CSS1Compat" ? "<!doctype html>" : "") + "<html><body>"), cm.close()
          }
          d = cm.createElement(a), cm.body.appendChild(d), e = f.css(d, "display"), b.removeChild(cl)
        }
        ck[a] = e
      }
      return ck[a]
    }

    function cu(a, b) {
      var c = {};
      f.each(cq.concat.apply([], cq.slice(0, b)), function() {
        c[this] = a
      });
      return c
    }

    function ct() {
      cr = b
    }

    function cs() {
      setTimeout(ct, 0);
      return cr = f.now()
    }

    function cj() {
      try {
        return new a.ActiveXObject("Microsoft.XMLHTTP")
      } catch (b) {}
    }

    function ci() {
      try {
        return new a.XMLHttpRequest
      } catch (b) {}
    }

    function cc(a, c) {
      a.dataFilter && (c = a.dataFilter(c, a.dataType));
      var d = a.dataTypes,
        e = {},
        g, h, i = d.length,
        j, k = d[0],
        l, m, n, o, p;
      for (g = 1; g < i; g++) {
        if (g === 1) {
          for (h in a.converters) {
            typeof h == "string" && (e[h.toLowerCase()] = a.converters[h])
          }
        }
        l = k, k = d[g];
        if (k === "*") {
          k = l
        } else {
          if (l !== "*" && l !== k) {
            m = l + " " + k, n = e[m] || e["* " + k];
            if (!n) {
              p = b;
              for (o in e) {
                j = o.split(" ");
                if (j[0] === l || j[0] === "*") {
                  p = e[j[1] + " " + k];
                  if (p) {
                    o = e[o], o === !0 ? n = p : p === !0 && (n = o);
                    break
                  }
                }
              }
            }!n && !p && f.error("No conversion from " + m.replace(" ", " to ")), n !== !0 && (c = n ? n(c) : p(o(c)))
          }
        }
      }
      return c
    }

    function cb(a, c, d) {
      var e = a.contents,
        f = a.dataTypes,
        g = a.responseFields,
        h, i, j, k;
      for (i in g) {
        i in d && (c[g[i]] = d[i])
      }
      while (f[0] === "*") {
        f.shift(), h === b && (h = a.mimeType || c.getResponseHeader("content-type"))
      }
      if (h) {
        for (i in e) {
          if (e[i] && e[i].test(h)) {
            f.unshift(i);
            break
          }
        }
      }
      if (f[0] in d) {
        j = f[0]
      } else {
        for (i in d) {
          if (!f[0] || a.converters[i + " " + f[0]]) {
            j = i;
            break
          }
          k || (k = i)
        }
        j = j || k
      }
      if (j) {
        j !== f[0] && f.unshift(j);
        return d[j]
      }
    }

    function ca(a, b, c, d) {
      if (f.isArray(b)) {
        f.each(b, function(b, e) {
          c || bE.test(a) ? d(a, e) : ca(a + "[" + (typeof e == "object" || f.isArray(e) ? b : "") + "]", e, c, d)
        })
      } else {
        if (!c && b != null && typeof b == "object") {
          for (var e in b) {
            ca(a + "[" + e + "]", b[e], c, d)
          }
        } else {
          d(a, b)
        }
      }
    }

    function b_(a, c) {
      var d, e, g = f.ajaxSettings.flatOptions || {};
      for (d in c) {
        c[d] !== b && ((g[d] ? a : e || (e = {}))[d] = c[d])
      }
      e && f.extend(!0, a, e)
    }

    function b$(a, c, d, e, f, g) {
      f = f || c.dataTypes[0], g = g || {}, g[f] = !0;
      var h = a[f],
        i = 0,
        j = h ? h.length : 0,
        k = a === bT,
        l;
      for (; i < j && (k || !l); i++) {
        l = h[i](c, d, e), typeof l == "string" && (!k || g[l] ? l = b : (c.dataTypes.unshift(l), l = b$(a, c, d, e, l, g)))
      }(k || !l) && !g["*"] && (l = b$(a, c, d, e, "*", g));
      return l
    }

    function bZ(a) {
      return function(b, c) {
        typeof b != "string" && (c = b, b = "*");
        if (f.isFunction(c)) {
          var d = b.toLowerCase().split(bP),
            e = 0,
            g = d.length,
            h, i, j;
          for (; e < g; e++) {
            h = d[e], j = /^\+/.test(h), j && (h = h.substr(1) || "*"), i = a[h] = a[h] || [], i[j ? "unshift" : "push"](c)
          }
        }
      }
    }

    function bC(a, b, c) {
      var d = b === "width" ? a.offsetWidth : a.offsetHeight,
        e = b === "width" ? bx : by,
        g = 0,
        h = e.length;
      if (d > 0) {
        if (c !== "border") {
          for (; g < h; g++) {
            c || (d -= parseFloat(f.css(a, "padding" + e[g])) || 0), c === "margin" ? d += parseFloat(f.css(a, c + e[g])) || 0 : d -= parseFloat(f.css(a, "border" + e[g] + "Width")) || 0
          }
        }
        return d + "px"
      }
      d = bz(a, b, b);
      if (d < 0 || d == null) {
        d = a.style[b] || 0
      }
      d = parseFloat(d) || 0;
      if (c) {
        for (; g < h; g++) {
          d += parseFloat(f.css(a, "padding" + e[g])) || 0, c !== "padding" && (d += parseFloat(f.css(a, "border" + e[g] + "Width")) || 0), c === "margin" && (d += parseFloat(f.css(a, c + e[g])) || 0)
        }
      }
      return d + "px"
    }

    function bp(a, b) {
      b.src ? f.ajax({
        url: b.src,
        async: !1,
        dataType: "script"
      }) : f.globalEval((b.text || b.textContent || b.innerHTML || "").replace(bf, "/*$0*/")), b.parentNode && b.parentNode.removeChild(b)
    }

    function bo(a) {
      var b = c.createElement("div");
      bh.appendChild(b), b.innerHTML = a.outerHTML;
      return b.firstChild
    }

    function bn(a) {
      var b = (a.nodeName || "").toLowerCase();
      b === "input" ? bm(a) : b !== "script" && typeof a.getElementsByTagName != "undefined" && f.grep(a.getElementsByTagName("input"), bm)
    }

    function bm(a) {
      if (a.type === "checkbox" || a.type === "radio") {
        a.defaultChecked = a.checked
      }
    }

    function bl(a) {
      return typeof a.getElementsByTagName != "undefined" ? a.getElementsByTagName("*") : typeof a.querySelectorAll != "undefined" ? a.querySelectorAll("*") : []
    }

    function bk(a, b) {
      var c;
      if (b.nodeType === 1) {
        b.clearAttributes && b.clearAttributes(), b.mergeAttributes && b.mergeAttributes(a), c = b.nodeName.toLowerCase();
        if (c === "object") {
          b.outerHTML = a.outerHTML
        } else {
          if (c !== "input" || a.type !== "checkbox" && a.type !== "radio") {
            if (c === "option") {
              b.selected = a.defaultSelected
            } else {
              if (c === "input" || c === "textarea") {
                b.defaultValue = a.defaultValue
              }
            }
          } else {
            a.checked && (b.defaultChecked = b.checked = a.checked), b.value !== a.value && (b.value = a.value)
          }
        }
        b.removeAttribute(f.expando)
      }
    }

    function bj(a, b) {
      if (b.nodeType === 1 && !!f.hasData(a)) {
        var c, d, e, g = f._data(a),
          h = f._data(b, g),
          i = g.events;
        if (i) {
          delete h.handle, h.events = {};
          for (c in i) {
            for (d = 0, e = i[c].length; d < e; d++) {
              f.event.add(b, c + (i[c][d].namespace ? "." : "") + i[c][d].namespace, i[c][d], i[c][d].data)
            }
          }
        }
        h.data && (h.data = f.extend({}, h.data))
      }
    }

    function bi(a, b) {
      return f.nodeName(a, "table") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }

    function U(a) {
      var b = V.split("|"),
        c = a.createDocumentFragment();
      if (c.createElement) {
        while (b.length) {
          c.createElement(b.pop())
        }
      }
      return c
    }

    function T(a, b, c) {
      b = b || 0;
      if (f.isFunction(b)) {
        return f.grep(a, function(a, d) {
          var e = !!b.call(a, d, a);
          return e === c
        })
      }
      if (b.nodeType) {
        return f.grep(a, function(a, d) {
          return a === b === c
        })
      }
      if (typeof b == "string") {
        var d = f.grep(a, function(a) {
          return a.nodeType === 1
        });
        if (O.test(b)) {
          return f.filter(b, d, !c)
        }
        b = f.filter(b, d)
      }
      return f.grep(a, function(a, d) {
        return f.inArray(a, b) >= 0 === c
      })
    }

    function S(a) {
      return !a || !a.parentNode || a.parentNode.nodeType === 11
    }

    function K() {
      return !0
    }

    function J() {
      return !1
    }

    function n(a, b, c) {
      var d = b + "defer",
        e = b + "queue",
        g = b + "mark",
        h = f._data(a, d);
      h && (c === "queue" || !f._data(a, e)) && (c === "mark" || !f._data(a, g)) && setTimeout(function() {
        !f._data(a, e) && !f._data(a, g) && (f.removeData(a, d, !0), h.fire())
      }, 0)
    }

    function m(a) {
      for (var b in a) {
        if (b === "data" && f.isEmptyObject(a[b])) {
          continue
        }
        if (b !== "toJSON") {
          return !1
        }
      }
      return !0
    }

    function l(a, c, d) {
      if (d === b && a.nodeType === 1) {
        var e = "data-" + c.replace(k, "-$1").toLowerCase();
        d = a.getAttribute(e);
        if (typeof d == "string") {
          try {
            d = d === "true" ? !0 : d === "false" ? !1 : d === "null" ? null : f.isNumeric(d) ? parseFloat(d) : j.test(d) ? f.parseJSON(d) : d
          } catch (g) {}
          f.data(a, c, d)
        } else {
          d = b
        }
      }
      return d
    }

    function h(a) {
      var b = g[a] = {},
        c, d;
      a = a.split(/\s+/);
      for (c = 0, d = a.length; c < d; c++) {
        b[a[c]] = !0
      }
      return b
    }
    var c = a.document,
      d = a.navigator,
      e = a.location,
      f = function() {
        function J() {
          if (!e.isReady) {
            try {
              c.documentElement.doScroll("left")
            } catch (a) {
              setTimeout(J, 1);
              return
            }
            e.ready()
          }
        }
        var e = function(a, b) {
            return new e.fn.init(a, b, h)
          },
          f = a.jQuery,
          g = a.$,
          h, i = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
          j = /\S/,
          k = /^\s+/,
          l = /\s+$/,
          m = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
          n = /^[\],:{}\s]*$/,
          o = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
          p = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
          q = /(?:^|:|,)(?:\s*\[)+/g,
          r = /(webkit)[ \/]([\w.]+)/,
          s = /(opera)(?:.*version)?[ \/]([\w.]+)/,
          t = /(msie) ([\w.]+)/,
          u = /(mozilla)(?:.*? rv:([\w.]+))?/,
          v = /-([a-z]|[0-9])/ig,
          w = /^-ms-/,
          x = function(a, b) {
            return (b + "").toUpperCase()
          },
          y = d.userAgent,
          z, A, B, C = Object.prototype.toString,
          D = Object.prototype.hasOwnProperty,
          E = Array.prototype.push,
          F = Array.prototype.slice,
          G = String.prototype.trim,
          H = Array.prototype.indexOf,
          I = {};
        e.fn = e.prototype = {
          constructor: e,
          init: function(a, d, f) {
            var g, h, j, k;
            if (!a) {
              return this
            }
            if (a.nodeType) {
              this.context = this[0] = a, this.length = 1;
              return this
            }
            if (a === "body" && !d && c.body) {
              this.context = c, this[0] = c.body, this.selector = a, this.length = 1;
              return this
            }
            if (typeof a == "string") {
              a.charAt(0) !== "<" || a.charAt(a.length - 1) !== ">" || a.length < 3 ? g = i.exec(a) : g = [null, a, null];
              if (g && (g[1] || !d)) {
                if (g[1]) {
                  d = d instanceof e ? d[0] : d, k = d ? d.ownerDocument || d : c, j = m.exec(a), j ? e.isPlainObject(d) ? (a = [c.createElement(j[1])], e.fn.attr.call(a, d, !0)) : a = [k.createElement(j[1])] : (j = e.buildFragment([g[1]], [k]), a = (j.cacheable ? e.clone(j.fragment) : j.fragment).childNodes);
                  return e.merge(this, a)
                }
                h = c.getElementById(g[2]);
                if (h && h.parentNode) {
                  if (h.id !== g[2]) {
                    return f.find(a)
                  }
                  this.length = 1, this[0] = h
                }
                this.context = c, this.selector = a;
                return this
              }
              return !d || d.jquery ? (d || f).find(a) : this.constructor(d).find(a)
            }
            if (e.isFunction(a)) {
              return f.ready(a)
            }
            a.selector !== b && (this.selector = a.selector, this.context = a.context);
            return e.makeArray(a, this)
          },
          selector: "",
          jquery: "1.7.1",
          length: 0,
          size: function() {
            return this.length
          },
          toArray: function() {
            return F.call(this, 0)
          },
          get: function(a) {
            return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a]
          },
          pushStack: function(a, b, c) {
            var d = this.constructor();
            e.isArray(a) ? E.apply(d, a) : e.merge(d, a), d.prevObject = this, d.context = this.context, b === "find" ? d.selector = this.selector + (this.selector ? " " : "") + c : b && (d.selector = this.selector + "." + b + "(" + c + ")");
            return d
          },
          each: function(a, b) {
            return e.each(this, a, b)
          },
          ready: function(a) {
            e.bindReady(), A.add(a);
            return this
          },
          eq: function(a) {
            a = +a;
            return a === -1 ? this.slice(a) : this.slice(a, a + 1)
          },
          first: function() {
            return this.eq(0)
          },
          last: function() {
            return this.eq(-1)
          },
          slice: function() {
            return this.pushStack(F.apply(this, arguments), "slice", F.call(arguments).join(","))
          },
          map: function(a) {
            return this.pushStack(e.map(this, function(b, c) {
              return a.call(b, c, b)
            }))
          },
          end: function() {
            return this.prevObject || this.constructor(null)
          },
          push: E,
          sort: [].sort,
          splice: [].splice
        }, e.fn.init.prototype = e.fn, e.extend = e.fn.extend = function() {
          var a, c, d, f, g, h, i = arguments[0] || {},
            j = 1,
            k = arguments.length,
            l = !1;
          typeof i == "boolean" && (l = i, i = arguments[1] || {}, j = 2), typeof i != "object" && !e.isFunction(i) && (i = {}), k === j && (i = this, --j);
          for (; j < k; j++) {
            if ((a = arguments[j]) != null) {
              for (c in a) {
                d = i[c], f = a[c];
                if (i === f) {
                  continue
                }
                l && f && (e.isPlainObject(f) || (g = e.isArray(f))) ? (g ? (g = !1, h = d && e.isArray(d) ? d : []) : h = d && e.isPlainObject(d) ? d : {}, i[c] = e.extend(l, h, f)) : f !== b && (i[c] = f)
              }
            }
          }
          return i
        }, e.extend({
          noConflict: function(b) {
            a.$ === e && (a.$ = g), b && a.jQuery === e && (a.jQuery = f);
            return e
          },
          isReady: !1,
          readyWait: 1,
          holdReady: function(a) {
            a ? e.readyWait++ : e.ready(!0)
          },
          ready: function(a) {
            if (a === !0 && !--e.readyWait || a !== !0 && !e.isReady) {
              if (!c.body) {
                return setTimeout(e.ready, 1)
              }
              e.isReady = !0;
              if (a !== !0 && --e.readyWait > 0) {
                return
              }
              A.fireWith(c, [e]), e.fn.trigger && e(c).trigger("ready").off("ready")
            }
          },
          bindReady: function() {
            if (!A) {
              A = e.Callbacks("once memory");
              if (c.readyState === "complete") {
                return setTimeout(e.ready, 1)
              }
              if (c.addEventListener) {
                c.addEventListener("DOMContentLoaded", B, !1), a.addEventListener("load", e.ready, !1)
              } else {
                if (c.attachEvent) {
                  c.attachEvent("onreadystatechange", B), a.attachEvent("onload", e.ready);
                  var b = !1;
                  try {
                    b = a.frameElement == null
                  } catch (d) {}
                  c.documentElement.doScroll && b && J()
                }
              }
            }
          },
          isFunction: function(a) {
            return e.type(a) === "function"
          },
          isArray: Array.isArray || function(a) {
            return e.type(a) === "array"
          },
          isWindow: function(a) {
            return a && typeof a == "object" && "setInterval" in a
          },
          isNumeric: function(a) {
            return !isNaN(parseFloat(a)) && isFinite(a)
          },
          type: function(a) {
            return a == null ? String(a) : I[C.call(a)] || "object"
          },
          isPlainObject: function(a) {
            if (!a || e.type(a) !== "object" || a.nodeType || e.isWindow(a)) {
              return !1
            }
            try {
              if (a.constructor && !D.call(a, "constructor") && !D.call(a.constructor.prototype, "isPrototypeOf")) {
                return !1
              }
            } catch (c) {
              return !1
            }
            var d;
            for (d in a) {}
            return d === b || D.call(a, d)
          },
          isEmptyObject: function(a) {
            for (var b in a) {
              return !1
            }
            return !0
          },
          error: function(a) {
            throw new Error(a)
          },
          parseJSON: function(b) {
            if (typeof b != "string" || !b) {
              return null
            }
            b = e.trim(b);
            if (a.JSON && a.JSON.parse) {
              return a.JSON.parse(b)
            }
            if (n.test(b.replace(o, "@").replace(p, "]").replace(q, ""))) {
              return (new Function("return " + b))()
            }
            e.error("Invalid JSON: " + b)
          },
          parseXML: function(c) {
            var d, f;
            try {
              a.DOMParser ? (f = new DOMParser, d = f.parseFromString(c, "text/xml")) : (d = new ActiveXObject("Microsoft.XMLDOM"), d.async = "false", d.loadXML(c))
            } catch (g) {
              d = b
            }(!d || !d.documentElement || d.getElementsByTagName("parsererror").length) && e.error("Invalid XML: " + c);
            return d
          },
          noop: function() {},
          globalEval: function(b) {
            b && j.test(b) && (a.execScript || function(b) {
              a.eval.call(a, b)
            })(b)
          },
          camelCase: function(a) {
            return a.replace(w, "ms-").replace(v, x)
          },
          nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase()
          },
          each: function(a, c, d) {
            var f, g = 0,
              h = a.length,
              i = h === b || e.isFunction(a);
            if (d) {
              if (i) {
                for (f in a) {
                  if (c.apply(a[f], d) === !1) {
                    break
                  }
                }
              } else {
                for (; g < h;) {
                  if (c.apply(a[g++], d) === !1) {
                    break
                  }
                }
              }
            } else {
              if (i) {
                for (f in a) {
                  if (c.call(a[f], f, a[f]) === !1) {
                    break
                  }
                }
              } else {
                for (; g < h;) {
                  if (c.call(a[g], g, a[g++]) === !1) {
                    break
                  }
                }
              }
            }
            return a
          },
          trim: G ? function(a) {
            return a == null ? "" : G.call(a)
          } : function(a) {
            return a == null ? "" : (a + "").replace(k, "").replace(l, "")
          },
          makeArray: function(a, b) {
            var c = b || [];
            if (a != null) {
              var d = e.type(a);
              a.length == null || d === "string" || d === "function" || d === "regexp" || e.isWindow(a) ? E.call(c, a) : e.merge(c, a)
            }
            return c
          },
          inArray: function(a, b, c) {
            var d;
            if (b) {
              if (H) {
                return H.call(b, a, c)
              }
              d = b.length, c = c ? c < 0 ? Math.max(0, d + c) : c : 0;
              for (; c < d; c++) {
                if (c in b && b[c] === a) {
                  return c
                }
              }
            }
            return -1
          },
          merge: function(a, c) {
            var d = a.length,
              e = 0;
            if (typeof c.length == "number") {
              for (var f = c.length; e < f; e++) {
                a[d++] = c[e]
              }
            } else {
              while (c[e] !== b) {
                a[d++] = c[e++]
              }
            }
            a.length = d;
            return a
          },
          grep: function(a, b, c) {
            var d = [],
              e;
            c = !!c;
            for (var f = 0, g = a.length; f < g; f++) {
              e = !!b(a[f], f), c !== e && d.push(a[f])
            }
            return d
          },
          map: function(a, c, d) {
            var f, g, h = [],
              i = 0,
              j = a.length,
              k = a instanceof e || j !== b && typeof j == "number" && (j > 0 && a[0] && a[j - 1] || j === 0 || e.isArray(a));
            if (k) {
              for (; i < j; i++) {
                f = c(a[i], i, d), f != null && (h[h.length] = f)
              }
            } else {
              for (g in a) {
                f = c(a[g], g, d), f != null && (h[h.length] = f)
              }
            }
            return h.concat.apply([], h)
          },
          guid: 1,
          proxy: function(a, c) {
            if (typeof c == "string") {
              var d = a[c];
              c = a, a = d
            }
            if (!e.isFunction(a)) {
              return b
            }
            var f = F.call(arguments, 2),
              g = function() {
                return a.apply(c, f.concat(F.call(arguments)))
              };
            g.guid = a.guid = a.guid || g.guid || e.guid++;
            return g
          },
          access: function(a, c, d, f, g, h) {
            var i = a.length;
            if (typeof c == "object") {
              for (var j in c) {
                e.access(a, j, c[j], f, g, d)
              }
              return a
            }
            if (d !== b) {
              f = !h && f && e.isFunction(d);
              for (var k = 0; k < i; k++) {
                g(a[k], c, f ? d.call(a[k], k, g(a[k], c)) : d, h)
              }
              return a
            }
            return i ? g(a[0], c) : b
          },
          now: function() {
            return (new Date).getTime()
          },
          uaMatch: function(a) {
            a = a.toLowerCase();
            var b = r.exec(a) || s.exec(a) || t.exec(a) || a.indexOf("compatible") < 0 && u.exec(a) || [];
            return {
              browser: b[1] || "",
              version: b[2] || "0"
            }
          },
          sub: function() {
            function a(b, c) {
              return new a.fn.init(b, c)
            }
            e.extend(!0, a, this), a.superclass = this, a.fn = a.prototype = this(), a.fn.constructor = a, a.sub = this.sub, a.fn.init = function(d, f) {
              f && f instanceof e && !(f instanceof a) && (f = a(f));
              return e.fn.init.call(this, d, f, b)
            }, a.fn.init.prototype = a.fn;
            var b = a(c);
            return a
          },
          browser: {}
        }), e.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(a, b) {
          I["[object " + b + "]"] = b.toLowerCase()
        }), z = e.uaMatch(y), z.browser && (e.browser[z.browser] = !0, e.browser.version = z.version), e.browser.webkit && (e.browser.safari = !0), j.test(" ") && (k = /^[\s\xA0]+/, l = /[\s\xA0]+$/), h = e(c), c.addEventListener ? B = function() {
          c.removeEventListener("DOMContentLoaded", B, !1), e.ready()
        } : c.attachEvent && (B = function() {
          c.readyState === "complete" && (c.detachEvent("onreadystatechange", B), e.ready())
        });
        return e
      }(),
      g = {};
    f.Callbacks = function(a) {
      a = a ? g[a] || h(a) : {};
      var c = [],
        d = [],
        e, i, j, k, l, m = function(b) {
          var d, e, g, h, i;
          for (d = 0, e = b.length; d < e; d++) {
            g = b[d], h = f.type(g), h === "array" ? m(g) : h === "function" && (!a.unique || !o.has(g)) && c.push(g)
          }
        },
        n = function(b, f) {
          f = f || [], e = !a.memory || [b, f], i = !0, l = j || 0, j = 0, k = c.length;
          for (; c && l < k; l++) {
            if (c[l].apply(b, f) === !1 && a.stopOnFalse) {
              e = !0;
              break
            }
          }
          i = !1, c && (a.once ? e === !0 ? o.disable() : c = [] : d && d.length && (e = d.shift(), o.fireWith(e[0], e[1])))
        },
        o = {
          add: function() {
            if (c) {
              var a = c.length;
              m(arguments), i ? k = c.length : e && e !== !0 && (j = a, n(e[0], e[1]))
            }
            return this
          },
          remove: function() {
            if (c) {
              var b = arguments,
                d = 0,
                e = b.length;
              for (; d < e; d++) {
                for (var f = 0; f < c.length; f++) {
                  if (b[d] === c[f]) {
                    i && f <= k && (k--, f <= l && l--), c.splice(f--, 1);
                    if (a.unique) {
                      break
                    }
                  }
                }
              }
            }
            return this
          },
          has: function(a) {
            if (c) {
              var b = 0,
                d = c.length;
              for (; b < d; b++) {
                if (a === c[b]) {
                  return !0
                }
              }
            }
            return !1
          },
          empty: function() {
            c = [];
            return this
          },
          disable: function() {
            c = d = e = b;
            return this
          },
          disabled: function() {
            return !c
          },
          lock: function() {
            d = b, (!e || e === !0) && o.disable();
            return this
          },
          locked: function() {
            return !d
          },
          fireWith: function(b, c) {
            d && (i ? a.once || d.push([b, c]) : (!a.once || !e) && n(b, c));
            return this
          },
          fire: function() {
            o.fireWith(this, arguments);
            return this
          },
          fired: function() {
            return !!e
          }
        };
      return o
    };
    var i = [].slice;
    f.extend({
      Deferred: function(a) {
        var b = f.Callbacks("once memory"),
          c = f.Callbacks("once memory"),
          d = f.Callbacks("memory"),
          e = "pending",
          g = {
            resolve: b,
            reject: c,
            notify: d
          },
          h = {
            done: b.add,
            fail: c.add,
            progress: d.add,
            state: function() {
              return e
            },
            isResolved: b.fired,
            isRejected: c.fired,
            then: function(a, b, c) {
              i.done(a).fail(b).progress(c);
              return this
            },
            always: function() {
              i.done.apply(i, arguments).fail.apply(i, arguments);
              return this
            },
            pipe: function(a, b, c) {
              return f.Deferred(function(d) {
                f.each({
                  done: [a, "resolve"],
                  fail: [b, "reject"],
                  progress: [c, "notify"]
                }, function(a, b) {
                  var c = b[0],
                    e = b[1],
                    g;
                  f.isFunction(c) ? i[a](function() {
                    g = c.apply(this, arguments), g && f.isFunction(g.promise) ? g.promise().then(d.resolve, d.reject, d.notify) : d[e + "With"](this === i ? d : this, [g])
                  }) : i[a](d[e])
                })
              }).promise()
            },
            promise: function(a) {
              if (a == null) {
                a = h
              } else {
                for (var b in h) {
                  a[b] = h[b]
                }
              }
              return a
            }
          },
          i = h.promise({}),
          j;
        for (j in g) {
          i[j] = g[j].fire, i[j + "With"] = g[j].fireWith
        }
        i.done(function() {
          e = "resolved"
        }, c.disable, d.lock).fail(function() {
          e = "rejected"
        }, b.disable, d.lock), a && a.call(i, i);
        return i
      },
      when: function(a) {
        function m(a) {
          return function(b) {
            e[a] = arguments.length > 1 ? i.call(arguments, 0) : b, j.notifyWith(k, e)
          }
        }

        function l(a) {
          return function(c) {
            b[a] = arguments.length > 1 ? i.call(arguments, 0) : c, --g || j.resolveWith(j, b)
          }
        }
        var b = i.call(arguments, 0),
          c = 0,
          d = b.length,
          e = Array(d),
          g = d,
          h = d,
          j = d <= 1 && a && f.isFunction(a.promise) ? a : f.Deferred(),
          k = j.promise();
        if (d > 1) {
          for (; c < d; c++) {
            b[c] && b[c].promise && f.isFunction(b[c].promise) ? b[c].promise().then(l(c), j.reject, m(c)) : --g
          }
          g || j.resolveWith(j, b)
        } else {
          j !== a && j.resolveWith(j, d ? [a] : [])
        }
        return k
      }
    }), f.support = function() {
      var b, d, e, g, h, i, j, k, l, m, n, o, p, q = c.createElement("div"),
        r = c.documentElement;
      q.setAttribute("className", "t"), q.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>", d = q.getElementsByTagName("*"), e = q.getElementsByTagName("a")[0];
      if (!d || !d.length || !e) {
        return {}
      }
      g = c.createElement("select"), h = g.appendChild(c.createElement("option")), i = q.getElementsByTagName("input")[0], b = {
        leadingWhitespace: q.firstChild.nodeType === 3,
        tbody: !q.getElementsByTagName("tbody").length,
        htmlSerialize: !!q.getElementsByTagName("link").length,
        style: /top/.test(e.getAttribute("style")),
        hrefNormalized: e.getAttribute("href") === "/a",
        opacity: /^0.55/.test(e.style.opacity),
        cssFloat: !!e.style.cssFloat,
        checkOn: i.value === "on",
        optSelected: h.selected,
        getSetAttribute: q.className !== "t",
        enctype: !!c.createElement("form").enctype,
        html5Clone: c.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>",
        submitBubbles: !0,
        changeBubbles: !0,
        focusinBubbles: !1,
        deleteExpando: !0,
        noCloneEvent: !0,
        inlineBlockNeedsLayout: !1,
        shrinkWrapBlocks: !1,
        reliableMarginRight: !0
      }, i.checked = !0, b.noCloneChecked = i.cloneNode(!0).checked, g.disabled = !0, b.optDisabled = !h.disabled;
      try {
        delete q.test
      } catch (s) {
        b.deleteExpando = !1
      }!q.addEventListener && q.attachEvent && q.fireEvent && (q.attachEvent("onclick", function() {
        b.noCloneEvent = !1
      }), q.cloneNode(!0).fireEvent("onclick")), i = c.createElement("input"), i.value = "t", i.setAttribute("type", "radio"), b.radioValue = i.value === "t", i.setAttribute("checked", "checked"), q.appendChild(i), k = c.createDocumentFragment(), k.appendChild(q.lastChild), b.checkClone = k.cloneNode(!0).cloneNode(!0).lastChild.checked, b.appendChecked = i.checked, k.removeChild(i), k.appendChild(q), q.innerHTML = "", a.getComputedStyle && (j = c.createElement("div"), j.style.width = "0", j.style.marginRight = "0", q.style.width = "2px", q.appendChild(j), b.reliableMarginRight = (parseInt((a.getComputedStyle(j, null) || {
          marginRight: 0
        }).marginRight, 10) || 0) === 0);
      if (q.attachEvent) {
        for (o in {
          submit: 1,
          change: 1,
          focusin: 1
        }) {
          n = "on" + o, p = n in q, p || (q.setAttribute(n, "return;"), p = typeof q[n] == "function"), b[o + "Bubbles"] = p
        }
      }
      k.removeChild(q), k = g = h = j = q = i = null, f(function() {
        var a, d, e, g, h, i, j, k, m, n, o, r = c.getElementsByTagName("body")[0];
        !r || (j = 1, k = "position:absolute;top:0;left:0;width:1px;height:1px;margin:0;", m = "visibility:hidden;border:0;", n = "style='" + k + "border:5px solid #000;padding:0;'", o = "<div " + n + "><div></div></div><table " + n + " cellpadding='0' cellspacing='0'><tr><td></td></tr></table>", a = c.createElement("div"), a.style.cssText = m + "width:0;height:0;position:static;top:0;margin-top:" + j + "px", r.insertBefore(a, r.firstChild), q = c.createElement("div"), a.appendChild(q), q.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>", l = q.getElementsByTagName("td"), p = l[0].offsetHeight === 0, l[0].style.display = "", l[1].style.display = "none", b.reliableHiddenOffsets = p && l[0].offsetHeight === 0, q.innerHTML = "", q.style.width = q.style.paddingLeft = "1px", f.boxModel = b.boxModel = q.offsetWidth === 2, typeof q.style.zoom != "undefined" && (q.style.display = "inline", q.style.zoom = 1, b.inlineBlockNeedsLayout = q.offsetWidth === 2, q.style.display = "", q.innerHTML = "<div style='width:4px;'></div>", b.shrinkWrapBlocks = q.offsetWidth !== 2), q.style.cssText = k + m, q.innerHTML = o, d = q.firstChild, e = d.firstChild, h = d.nextSibling.firstChild.firstChild, i = {
          doesNotAddBorder: e.offsetTop !== 5,
          doesAddBorderForTableAndCells: h.offsetTop === 5
        }, e.style.position = "fixed", e.style.top = "20px", i.fixedPosition = e.offsetTop === 20 || e.offsetTop === 15, e.style.position = e.style.top = "", d.style.overflow = "hidden", d.style.position = "relative", i.subtractsBorderForOverflowNotVisible = e.offsetTop === -5, i.doesNotIncludeMarginInBodyOffset = r.offsetTop !== j, r.removeChild(a), q = a = null, f.extend(b, i))
      });
      return b
    }();
    var j = /^(?:\{.*\}|\[.*\])$/,
      k = /([A-Z])/g;
    f.extend({
      cache: {},
      uuid: 0,
      expando: "jQuery" + (f.fn.jquery + Math.random()).replace(/\D/g, ""),
      noData: {
        embed: !0,
        object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
        applet: !0
      },
      hasData: function(a) {
        a = a.nodeType ? f.cache[a[f.expando]] : a[f.expando];
        return !!a && !m(a)
      },
      data: function(a, c, d, e) {
        if (!!f.acceptData(a)) {
          var g, h, i, j = f.expando,
            k = typeof c == "string",
            l = a.nodeType,
            m = l ? f.cache : a,
            n = l ? a[j] : a[j] && j,
            o = c === "events";
          if ((!n || !m[n] || !o && !e && !m[n].data) && k && d === b) {
            return
          }
          n || (l ? a[j] = n = ++f.uuid : n = j), m[n] || (m[n] = {}, l || (m[n].toJSON = f.noop));
          if (typeof c == "object" || typeof c == "function") {
            e ? m[n] = f.extend(m[n], c) : m[n].data = f.extend(m[n].data, c)
          }
          g = h = m[n], e || (h.data || (h.data = {}), h = h.data), d !== b && (h[f.camelCase(c)] = d);
          if (o && !h[c]) {
            return g.events
          }
          k ? (i = h[c], i == null && (i = h[f.camelCase(c)])) : i = h;
          return i
        }
      },
      removeData: function(a, b, c) {
        if (!!f.acceptData(a)) {
          var d, e, g, h = f.expando,
            i = a.nodeType,
            j = i ? f.cache : a,
            k = i ? a[h] : h;
          if (!j[k]) {
            return
          }
          if (b) {
            d = c ? j[k] : j[k].data;
            if (d) {
              f.isArray(b) || (b in d ? b = [b] : (b = f.camelCase(b), b in d ? b = [b] : b = b.split(" ")));
              for (e = 0, g = b.length; e < g; e++) {
                delete d[b[e]]
              }
              if (!(c ? m : f.isEmptyObject)(d)) {
                return
              }
            }
          }
          if (!c) {
            delete j[k].data;
            if (!m(j[k])) {
              return
            }
          }
          f.support.deleteExpando || !j.setInterval ? delete j[k] : j[k] = null, i && (f.support.deleteExpando ? delete a[h] : a.removeAttribute ? a.removeAttribute(h) : a[h] = null)
        }
      },
      _data: function(a, b, c) {
        return f.data(a, b, c, !0)
      },
      acceptData: function(a) {
        if (a.nodeName) {
          var b = f.noData[a.nodeName.toLowerCase()];
          if (b) {
            return b !== !0 && a.getAttribute("classid") === b
          }
        }
        return !0
      }
    }), f.fn.extend({
      data: function(a, c) {
        var d, e, g, h = null;
        if (typeof a == "undefined") {
          if (this.length) {
            h = f.data(this[0]);
            if (this[0].nodeType === 1 && !f._data(this[0], "parsedAttrs")) {
              e = this[0].attributes;
              for (var i = 0, j = e.length; i < j; i++) {
                g = e[i].name, g.indexOf("data-") === 0 && (g = f.camelCase(g.substring(5)), l(this[0], g, h[g]))
              }
              f._data(this[0], "parsedAttrs", !0)
            }
          }
          return h
        }
        if (typeof a == "object") {
          return this.each(function() {
            f.data(this, a)
          })
        }
        d = a.split("."), d[1] = d[1] ? "." + d[1] : "";
        if (c === b) {
          h = this.triggerHandler("getData" + d[1] + "!", [d[0]]), h === b && this.length && (h = f.data(this[0], a), h = l(this[0], a, h));
          return h === b && d[1] ? this.data(d[0]) : h
        }
        return this.each(function() {
          var b = f(this),
            e = [d[0], c];
          b.triggerHandler("setData" + d[1] + "!", e), f.data(this, a, c), b.triggerHandler("changeData" + d[1] + "!", e)
        })
      },
      removeData: function(a) {
        return this.each(function() {
          f.removeData(this, a)
        })
      }
    }), f.extend({
      _mark: function(a, b) {
        a && (b = (b || "fx") + "mark", f._data(a, b, (f._data(a, b) || 0) + 1))
      },
      _unmark: function(a, b, c) {
        a !== !0 && (c = b, b = a, a = !1);
        if (b) {
          c = c || "fx";
          var d = c + "mark",
            e = a ? 0 : (f._data(b, d) || 1) - 1;
          e ? f._data(b, d, e) : (f.removeData(b, d, !0), n(b, c, "mark"))
        }
      },
      queue: function(a, b, c) {
        var d;
        if (a) {
          b = (b || "fx") + "queue", d = f._data(a, b), c && (!d || f.isArray(c) ? d = f._data(a, b, f.makeArray(c)) : d.push(c));
          return d || []
        }
      },
      dequeue: function(a, b) {
        b = b || "fx";
        var c = f.queue(a, b),
          d = c.shift(),
          e = {};
        d === "inprogress" && (d = c.shift()), d && (b === "fx" && c.unshift("inprogress"), f._data(a, b + ".run", e), d.call(a, function() {
          f.dequeue(a, b)
        }, e)), c.length || (f.removeData(a, b + "queue " + b + ".run", !0), n(a, b, "queue"))
      }
    }), f.fn.extend({
      queue: function(a, c) {
        typeof a != "string" && (c = a, a = "fx");
        if (c === b) {
          return f.queue(this[0], a)
        }
        return this.each(function() {
          var b = f.queue(this, a, c);
          a === "fx" && b[0] !== "inprogress" && f.dequeue(this, a)
        })
      },
      dequeue: function(a) {
        return this.each(function() {
          f.dequeue(this, a)
        })
      },
      delay: function(a, b) {
        a = f.fx ? f.fx.speeds[a] || a : a, b = b || "fx";
        return this.queue(b, function(b, c) {
          var d = setTimeout(b, a);
          c.stop = function() {
            clearTimeout(d)
          }
        })
      },
      clearQueue: function(a) {
        return this.queue(a || "fx", [])
      },
      promise: function(a, c) {
        function m() {
          --h || d.resolveWith(e, [e])
        }
        typeof a != "string" && (c = a, a = b), a = a || "fx";
        var d = f.Deferred(),
          e = this,
          g = e.length,
          h = 1,
          i = a + "defer",
          j = a + "queue",
          k = a + "mark",
          l;
        while (g--) {
          if (l = f.data(e[g], i, b, !0) || (f.data(e[g], j, b, !0) || f.data(e[g], k, b, !0)) && f.data(e[g], i, f.Callbacks("once memory"), !0)) {
            h++, l.add(m)
          }
        }
        m();
        return d.promise()
      }
    });
    var o = /[\n\t\r]/g,
      p = /\s+/,
      q = /\r/g,
      r = /^(?:button|input)$/i,
      s = /^(?:button|input|object|select|textarea)$/i,
      t = /^a(?:rea)?$/i,
      u = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
      v = f.support.getSetAttribute,
      w, x, y;
    f.fn.extend({
      attr: function(a, b) {
        return f.access(this, a, b, !0, f.attr)
      },
      removeAttr: function(a) {
        return this.each(function() {
          f.removeAttr(this, a)
        })
      },
      prop: function(a, b) {
        return f.access(this, a, b, !0, f.prop)
      },
      removeProp: function(a) {
        a = f.propFix[a] || a;
        return this.each(function() {
          try {
            this[a] = b, delete this[a]
          } catch (c) {}
        })
      },
      addClass: function(a) {
        var b, c, d, e, g, h, i;
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).addClass(a.call(this, b, this.className))
          })
        }
        if (a && typeof a == "string") {
          b = a.split(p);
          for (c = 0, d = this.length; c < d; c++) {
            e = this[c];
            if (e.nodeType === 1) {
              if (!e.className && b.length === 1) {
                e.className = a
              } else {
                g = " " + e.className + " ";
                for (h = 0, i = b.length; h < i; h++) {
                  ~g.indexOf(" " + b[h] + " ") || (g += b[h] + " ")
                }
                e.className = f.trim(g)
              }
            }
          }
        }
        return this
      },
      removeClass: function(a) {
        var c, d, e, g, h, i, j;
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).removeClass(a.call(this, b, this.className))
          })
        }
        if (a && typeof a == "string" || a === b) {
          c = (a || "").split(p);
          for (d = 0, e = this.length; d < e; d++) {
            g = this[d];
            if (g.nodeType === 1 && g.className) {
              if (a) {
                h = (" " + g.className + " ").replace(o, " ");
                for (i = 0, j = c.length; i < j; i++) {
                  h = h.replace(" " + c[i] + " ", " ")
                }
                g.className = f.trim(h)
              } else {
                g.className = ""
              }
            }
          }
        }
        return this
      },
      toggleClass: function(a, b) {
        var c = typeof a,
          d = typeof b == "boolean";
        if (f.isFunction(a)) {
          return this.each(function(c) {
            f(this).toggleClass(a.call(this, c, this.className, b), b)
          })
        }
        return this.each(function() {
          if (c === "string") {
            var e, g = 0,
              h = f(this),
              i = b,
              j = a.split(p);
            while (e = j[g++]) {
              i = d ? i : !h.hasClass(e), h[i ? "addClass" : "removeClass"](e)
            }
          } else {
            if (c === "undefined" || c === "boolean") {
              this.className && f._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : f._data(this, "__className__") || ""
            }
          }
        })
      },
      hasClass: function(a) {
        var b = " " + a + " ",
          c = 0,
          d = this.length;
        for (; c < d; c++) {
          if (this[c].nodeType === 1 && (" " + this[c].className + " ").replace(o, " ").indexOf(b) > -1) {
            return !0
          }
        }
        return !1
      },
      val: function(a) {
        var c, d, e, g = this[0];
        if (!!arguments.length) {
          e = f.isFunction(a);
          return this.each(function(d) {
            var g = f(this),
              h;
            if (this.nodeType === 1) {
              e ? h = a.call(this, d, g.val()) : h = a, h == null ? h = "" : typeof h == "number" ? h += "" : f.isArray(h) && (h = f.map(h, function(a) {
                return a == null ? "" : a + ""
              })), c = f.valHooks[this.nodeName.toLowerCase()] || f.valHooks[this.type];
              if (!c || !("set" in c) || c.set(this, h, "value") === b) {
                this.value = h
              }
            }
          })
        }
        if (g) {
          c = f.valHooks[g.nodeName.toLowerCase()] || f.valHooks[g.type];
          if (c && "get" in c && (d = c.get(g, "value")) !== b) {
            return d
          }
          d = g.value;
          return typeof d == "string" ? d.replace(q, "") : d == null ? "" : d
        }
      }
    }), f.extend({
      valHooks: {
        option: {
          get: function(a) {
            var b = a.attributes.value;
            return !b || b.specified ? a.value : a.text
          }
        },
        select: {
          get: function(a) {
            var b, c, d, e, g = a.selectedIndex,
              h = [],
              i = a.options,
              j = a.type === "select-one";
            if (g < 0) {
              return null
            }
            c = j ? g : 0, d = j ? g + 1 : i.length;
            for (; c < d; c++) {
              e = i[c];
              if (e.selected && (f.support.optDisabled ? !e.disabled : e.getAttribute("disabled") === null) && (!e.parentNode.disabled || !f.nodeName(e.parentNode, "optgroup"))) {
                b = f(e).val();
                if (j) {
                  return b
                }
                h.push(b)
              }
            }
            if (j && !h.length && i.length) {
              return f(i[g]).val()
            }
            return h
          },
          set: function(a, b) {
            var c = f.makeArray(b);
            f(a).find("option").each(function() {
              this.selected = f.inArray(f(this).val(), c) >= 0
            }), c.length || (a.selectedIndex = -1);
            return c
          }
        }
      },
      attrFn: {
        val: !0,
        css: !0,
        html: !0,
        text: !0,
        data: !0,
        width: !0,
        height: !0,
        offset: !0
      },
      attr: function(a, c, d, e) {
        var g, h, i, j = a.nodeType;
        if (!!a && j !== 3 && j !== 8 && j !== 2) {
          if (e && c in f.attrFn) {
            return f(a)[c](d)
          }
          if (typeof a.getAttribute == "undefined") {
            return f.prop(a, c, d)
          }
          i = j !== 1 || !f.isXMLDoc(a), i && (c = c.toLowerCase(), h = f.attrHooks[c] || (u.test(c) ? x : w));
          if (d !== b) {
            if (d === null) {
              f.removeAttr(a, c);
              return
            }
            if (h && "set" in h && i && (g = h.set(a, d, c)) !== b) {
              return g
            }
            a.setAttribute(c, "" + d);
            return d
          }
          if (h && "get" in h && i && (g = h.get(a, c)) !== null) {
            return g
          }
          g = a.getAttribute(c);
          return g === null ? b : g
        }
      },
      removeAttr: function(a, b) {
        var c, d, e, g, h = 0;
        if (b && a.nodeType === 1) {
          d = b.toLowerCase().split(p), g = d.length;
          for (; h < g; h++) {
            e = d[h], e && (c = f.propFix[e] || e, f.attr(a, e, ""), a.removeAttribute(v ? e : c), u.test(e) && c in a && (a[c] = !1))
          }
        }
      },
      attrHooks: {
        type: {
          set: function(a, b) {
            if (r.test(a.nodeName) && a.parentNode) {
              f.error("type property can't be changed")
            } else {
              if (!f.support.radioValue && b === "radio" && f.nodeName(a, "input")) {
                var c = a.value;
                a.setAttribute("type", b), c && (a.value = c);
                return b
              }
            }
          }
        },
        value: {
          get: function(a, b) {
            if (w && f.nodeName(a, "button")) {
              return w.get(a, b)
            }
            return b in a ? a.value : null
          },
          set: function(a, b, c) {
            if (w && f.nodeName(a, "button")) {
              return w.set(a, b, c)
            }
            a.value = b
          }
        }
      },
      propFix: {
        tabindex: "tabIndex",
        readonly: "readOnly",
        "for": "htmlFor",
        "class": "className",
        maxlength: "maxLength",
        cellspacing: "cellSpacing",
        cellpadding: "cellPadding",
        rowspan: "rowSpan",
        colspan: "colSpan",
        usemap: "useMap",
        frameborder: "frameBorder",
        contenteditable: "contentEditable"
      },
      prop: function(a, c, d) {
        var e, g, h, i = a.nodeType;
        if (!!a && i !== 3 && i !== 8 && i !== 2) {
          h = i !== 1 || !f.isXMLDoc(a), h && (c = f.propFix[c] || c, g = f.propHooks[c]);
          return d !== b ? g && "set" in g && (e = g.set(a, d, c)) !== b ? e : a[c] = d : g && "get" in g && (e = g.get(a, c)) !== null ? e : a[c]
        }
      },
      propHooks: {
        tabIndex: {
          get: function(a) {
            var c = a.getAttributeNode("tabindex");
            return c && c.specified ? parseInt(c.value, 10) : s.test(a.nodeName) || t.test(a.nodeName) && a.href ? 0 : b
          }
        }
      }
    }), f.attrHooks.tabindex = f.propHooks.tabIndex, x = {
      get: function(a, c) {
        var d, e = f.prop(a, c);
        return e === !0 || typeof e != "boolean" && (d = a.getAttributeNode(c)) && d.nodeValue !== !1 ? c.toLowerCase() : b
      },
      set: function(a, b, c) {
        var d;
        b === !1 ? f.removeAttr(a, c) : (d = f.propFix[c] || c, d in a && (a[d] = !0), a.setAttribute(c, c.toLowerCase()));
        return c
      }
    }, v || (y = {
      name: !0,
      id: !0
    }, w = f.valHooks.button = {
      get: function(a, c) {
        var d;
        d = a.getAttributeNode(c);
        return d && (y[c] ? d.nodeValue !== "" : d.specified) ? d.nodeValue : b
      },
      set: function(a, b, d) {
        var e = a.getAttributeNode(d);
        e || (e = c.createAttribute(d), a.setAttributeNode(e));
        return e.nodeValue = b + ""
      }
    }, f.attrHooks.tabindex.set = w.set, f.each(["width", "height"], function(a, b) {
      f.attrHooks[b] = f.extend(f.attrHooks[b], {
        set: function(a, c) {
          if (c === "") {
            a.setAttribute(b, "auto");
            return c
          }
        }
      })
    }), f.attrHooks.contenteditable = {
      get: w.get,
      set: function(a, b, c) {
        b === "" && (b = "false"), w.set(a, b, c)
      }
    }), f.support.hrefNormalized || f.each(["href", "src", "width", "height"], function(a, c) {
      f.attrHooks[c] = f.extend(f.attrHooks[c], {
        get: function(a) {
          var d = a.getAttribute(c, 2);
          return d === null ? b : d
        }
      })
    }), f.support.style || (f.attrHooks.style = {
      get: function(a) {
        return a.style.cssText.toLowerCase() || b
      },
      set: function(a, b) {
        return a.style.cssText = "" + b
      }
    }), f.support.optSelected || (f.propHooks.selected = f.extend(f.propHooks.selected, {
      get: function(a) {
        var b = a.parentNode;
        b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);
        return null
      }
    })), f.support.enctype || (f.propFix.enctype = "encoding"), f.support.checkOn || f.each(["radio", "checkbox"], function() {
      f.valHooks[this] = {
        get: function(a) {
          return a.getAttribute("value") === null ? "on" : a.value
        }
      }
    }), f.each(["radio", "checkbox"], function() {
      f.valHooks[this] = f.extend(f.valHooks[this], {
        set: function(a, b) {
          if (f.isArray(b)) {
            return a.checked = f.inArray(f(a).val(), b) >= 0
          }
        }
      })
    });
    var z = /^(?:textarea|input|select)$/i,
      A = /^([^\.]*)?(?:\.(.+))?$/,
      B = /\bhover(\.\S+)?\b/,
      C = /^key/,
      D = /^(?:mouse|contextmenu)|click/,
      E = /^(?:focusinfocus|focusoutblur)$/,
      F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
      G = function(a) {
        var b = F.exec(a);
        b && (b[1] = (b[1] || "").toLowerCase(), b[3] = b[3] && new RegExp("(?:^|\\s)" + b[3] + "(?:\\s|$)"));
        return b
      },
      H = function(a, b) {
        var c = a.attributes || {};
        return (!b[1] || a.nodeName.toLowerCase() === b[1]) && (!b[2] || (c.id || {}).value === b[2]) && (!b[3] || b[3].test((c["class"] || {}).value))
      },
      I = function(a) {
        return f.event.special.hover ? a : a.replace(B, "mouseenter$1 mouseleave$1")
      };
    f.event = {
      add: function(a, c, d, e, g) {
        var h, i, j, k, l, m, n, o, p, q, r, s;
        if (!(a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(h = f._data(a)))) {
          d.handler && (p = d, d = p.handler), d.guid || (d.guid = f.guid++), j = h.events, j || (h.events = j = {}), i = h.handle, i || (h.handle = i = function(a) {
            return typeof f != "undefined" && (!a || f.event.triggered !== a.type) ? f.event.dispatch.apply(i.elem, arguments) : b
          }, i.elem = a), c = f.trim(I(c)).split(" ");
          for (k = 0; k < c.length; k++) {
            l = A.exec(c[k]) || [], m = l[1], n = (l[2] || "").split(".").sort(), s = f.event.special[m] || {}, m = (g ? s.delegateType : s.bindType) || m, s = f.event.special[m] || {}, o = f.extend({
              type: m,
              origType: l[1],
              data: e,
              handler: d,
              guid: d.guid,
              selector: g,
              quick: G(g),
              namespace: n.join(".")
            }, p), r = j[m];
            if (!r) {
              r = j[m] = [], r.delegateCount = 0;
              if (!s.setup || s.setup.call(a, e, n, i) === !1) {
                a.addEventListener ? a.addEventListener(m, i, !1) : a.attachEvent && a.attachEvent("on" + m, i)
              }
            }
            s.add && (s.add.call(a, o), o.handler.guid || (o.handler.guid = d.guid)), g ? r.splice(r.delegateCount++, 0, o) : r.push(o), f.event.global[m] = !0
          }
          a = null
        }
      },
      global: {},
      remove: function(a, b, c, d, e) {
        var g = f.hasData(a) && f._data(a),
          h, i, j, k, l, m, n, o, p, q, r, s;
        if (!!g && !!(o = g.events)) {
          b = f.trim(I(b || "")).split(" ");
          for (h = 0; h < b.length; h++) {
            i = A.exec(b[h]) || [], j = k = i[1], l = i[2];
            if (!j) {
              for (j in o) {
                f.event.remove(a, j + b[h], c, d, !0)
              }
              continue
            }
            p = f.event.special[j] || {}, j = (d ? p.delegateType : p.bindType) || j, r = o[j] || [], m = r.length, l = l ? new RegExp("(^|\\.)" + l.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
            for (n = 0; n < r.length; n++) {
              s = r[n], (e || k === s.origType) && (!c || c.guid === s.guid) && (!l || l.test(s.namespace)) && (!d || d === s.selector || d === "**" && s.selector) && (r.splice(n--, 1), s.selector && r.delegateCount--, p.remove && p.remove.call(a, s))
            }
            r.length === 0 && m !== r.length && ((!p.teardown || p.teardown.call(a, l) === !1) && f.removeEvent(a, j, g.handle), delete o[j])
          }
          f.isEmptyObject(o) && (q = g.handle, q && (q.elem = null), f.removeData(a, ["events", "handle"], !0))
        }
      },
      customEvent: {
        getData: !0,
        setData: !0,
        changeData: !0
      },
      trigger: function(c, d, e, g) {
        if (!e || e.nodeType !== 3 && e.nodeType !== 8) {
          var h = c.type || c,
            i = [],
            j, k, l, m, n, o, p, q, r, s;
          if (E.test(h + f.event.triggered)) {
            return
          }
          h.indexOf("!") >= 0 && (h = h.slice(0, -1), k = !0), h.indexOf(".") >= 0 && (i = h.split("."), h = i.shift(), i.sort());
          if ((!e || f.event.customEvent[h]) && !f.event.global[h]) {
            return
          }
          c = typeof c == "object" ? c[f.expando] ? c : new f.Event(h, c) : new f.Event(h), c.type = h, c.isTrigger = !0, c.exclusive = k, c.namespace = i.join("."), c.namespace_re = c.namespace ? new RegExp("(^|\\.)" + i.join("\\.(?:.*\\.)?") + "(\\.|$)") : null, o = h.indexOf(":") < 0 ? "on" + h : "";
          if (!e) {
            j = f.cache;
            for (l in j) {
              j[l].events && j[l].events[h] && f.event.trigger(c, d, j[l].handle.elem, !0)
            }
            return
          }
          c.result = b, c.target || (c.target = e), d = d != null ? f.makeArray(d) : [], d.unshift(c), p = f.event.special[h] || {};
          if (p.trigger && p.trigger.apply(e, d) === !1) {
            return
          }
          r = [
            [e, p.bindType || h]
          ];
          if (!g && !p.noBubble && !f.isWindow(e)) {
            s = p.delegateType || h, m = E.test(s + h) ? e : e.parentNode, n = null;
            for (; m; m = m.parentNode) {
              r.push([m, s]), n = m
            }
            n && n === e.ownerDocument && r.push([n.defaultView || n.parentWindow || a, s])
          }
          for (l = 0; l < r.length && !c.isPropagationStopped(); l++) {
            m = r[l][0], c.type = r[l][1], q = (f._data(m, "events") || {})[c.type] && f._data(m, "handle"), q && q.apply(m, d), q = o && m[o], q && f.acceptData(m) && q.apply(m, d) === !1 && c.preventDefault()
          }
          c.type = h, !g && !c.isDefaultPrevented() && (!p._default || p._default.apply(e.ownerDocument, d) === !1) && (h !== "click" || !f.nodeName(e, "a")) && f.acceptData(e) && o && e[h] && (h !== "focus" && h !== "blur" || c.target.offsetWidth !== 0) && !f.isWindow(e) && (n = e[o], n && (e[o] = null), f.event.triggered = h, e[h](), f.event.triggered = b, n && (e[o] = n));
          return c.result
        }
      },
      dispatch: function(c) {
        c = f.event.fix(c || a.event);
        var d = (f._data(this, "events") || {})[c.type] || [],
          e = d.delegateCount,
          g = [].slice.call(arguments, 0),
          h = !c.exclusive && !c.namespace,
          i = [],
          j, k, l, m, n, o, p, q, r, s, t;
        g[0] = c, c.delegateTarget = this;
        if (e && !c.target.disabled && (!c.button || c.type !== "click")) {
          m = f(this), m.context = this.ownerDocument || this;
          for (l = c.target; l != this; l = l.parentNode || this) {
            o = {}, q = [], m[0] = l;
            for (j = 0; j < e; j++) {
              r = d[j], s = r.selector, o[s] === b && (o[s] = r.quick ? H(l, r.quick) : m.is(s)), o[s] && q.push(r)
            }
            q.length && i.push({
              elem: l,
              matches: q
            })
          }
        }
        d.length > e && i.push({
          elem: this,
          matches: d.slice(e)
        });
        for (j = 0; j < i.length && !c.isPropagationStopped(); j++) {
          p = i[j], c.currentTarget = p.elem;
          for (k = 0; k < p.matches.length && !c.isImmediatePropagationStopped(); k++) {
            r = p.matches[k];
            if (h || !c.namespace && !r.namespace || c.namespace_re && c.namespace_re.test(r.namespace)) {
              c.data = r.data, c.handleObj = r, n = ((f.event.special[r.origType] || {}).handle || r.handler).apply(p.elem, g), n !== b && (c.result = n, n === !1 && (c.preventDefault(), c.stopPropagation()))
            }
          }
        }
        return c.result
      },
      props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
      fixHooks: {},
      keyHooks: {
        props: "char charCode key keyCode".split(" "),
        filter: function(a, b) {
          a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode);
          return a
        }
      },
      mouseHooks: {
        props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
        filter: function(a, d) {
          var e, f, g, h = d.button,
            i = d.fromElement;
          a.pageX == null && d.clientX != null && (e = a.target.ownerDocument || c, f = e.documentElement, g = e.body, a.pageX = d.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0), a.pageY = d.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0)), !a.relatedTarget && i && (a.relatedTarget = i === a.target ? d.toElement : i), !a.which && h !== b && (a.which = h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0);
          return a
        }
      },
      fix: function(a) {
        if (a[f.expando]) {
          return a
        }
        var d, e, g = a,
          h = f.event.fixHooks[a.type] || {},
          i = h.props ? this.props.concat(h.props) : this.props;
        a = f.Event(g);
        for (d = i.length; d;) {
          e = i[--d], a[e] = g[e]
        }
        a.target || (a.target = g.srcElement || c), a.target.nodeType === 3 && (a.target = a.target.parentNode), a.metaKey === b && (a.metaKey = a.ctrlKey);
        return h.filter ? h.filter(a, g) : a
      },
      special: {
        ready: {
          setup: f.bindReady
        },
        load: {
          noBubble: !0
        },
        focus: {
          delegateType: "focusin"
        },
        blur: {
          delegateType: "focusout"
        },
        beforeunload: {
          setup: function(a, b, c) {
            f.isWindow(this) && (this.onbeforeunload = c)
          },
          teardown: function(a, b) {
            this.onbeforeunload === b && (this.onbeforeunload = null)
          }
        }
      },
      simulate: function(a, b, c, d) {
        var e = f.extend(new f.Event, c, {
          type: a,
          isSimulated: !0,
          originalEvent: {}
        });
        d ? f.event.trigger(e, null, b) : f.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault()
      }
    }, f.event.handle = f.event.dispatch, f.removeEvent = c.removeEventListener ? function(a, b, c) {
      a.removeEventListener && a.removeEventListener(b, c, !1)
    } : function(a, b, c) {
      a.detachEvent && a.detachEvent("on" + b, c)
    }, f.Event = function(a, b) {
      if (!(this instanceof f.Event)) {
        return new f.Event(a, b)
      }
      a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? K : J) : this.type = a, b && f.extend(this, b), this.timeStamp = a && a.timeStamp || f.now(), this[f.expando] = !0
    }, f.Event.prototype = {
      preventDefault: function() {
        this.isDefaultPrevented = K;
        var a = this.originalEvent;
        !a || (a.preventDefault ? a.preventDefault() : a.returnValue = !1)
      },
      stopPropagation: function() {
        this.isPropagationStopped = K;
        var a = this.originalEvent;
        !a || (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0)
      },
      stopImmediatePropagation: function() {
        this.isImmediatePropagationStopped = K, this.stopPropagation()
      },
      isDefaultPrevented: J,
      isPropagationStopped: J,
      isImmediatePropagationStopped: J
    }, f.each({
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    }, function(a, b) {
      f.event.special[a] = {
        delegateType: b,
        bindType: b,
        handle: function(a) {
          var c = this,
            d = a.relatedTarget,
            e = a.handleObj,
            g = e.selector,
            h;
          if (!d || d !== c && !f.contains(c, d)) {
            a.type = e.origType, h = e.handler.apply(this, arguments), a.type = b
          }
          return h
        }
      }
    }), f.support.submitBubbles || (f.event.special.submit = {
      setup: function() {
        if (f.nodeName(this, "form")) {
          return !1
        }
        f.event.add(this, "click._submit keypress._submit", function(a) {
          var c = a.target,
            d = f.nodeName(c, "input") || f.nodeName(c, "button") ? c.form : b;
          d && !d._submit_attached && (f.event.add(d, "submit._submit", function(a) {
            this.parentNode && !a.isTrigger && f.event.simulate("submit", this.parentNode, a, !0)
          }), d._submit_attached = !0)
        })
      },
      teardown: function() {
        if (f.nodeName(this, "form")) {
          return !1
        }
        f.event.remove(this, "._submit")
      }
    }), f.support.changeBubbles || (f.event.special.change = {
      setup: function() {
        if (z.test(this.nodeName)) {
          if (this.type === "checkbox" || this.type === "radio") {
            f.event.add(this, "propertychange._change", function(a) {
              a.originalEvent.propertyName === "checked" && (this._just_changed = !0)
            }), f.event.add(this, "click._change", function(a) {
              this._just_changed && !a.isTrigger && (this._just_changed = !1, f.event.simulate("change", this, a, !0))
            })
          }
          return !1
        }
        f.event.add(this, "beforeactivate._change", function(a) {
          var b = a.target;
          z.test(b.nodeName) && !b._change_attached && (f.event.add(b, "change._change", function(a) {
            this.parentNode && !a.isSimulated && !a.isTrigger && f.event.simulate("change", this.parentNode, a, !0)
          }), b._change_attached = !0)
        })
      },
      handle: function(a) {
        var b = a.target;
        if (this !== b || a.isSimulated || a.isTrigger || b.type !== "radio" && b.type !== "checkbox") {
          return a.handleObj.handler.apply(this, arguments)
        }
      },
      teardown: function() {
        f.event.remove(this, "._change");
        return z.test(this.nodeName)
      }
    }), f.support.focusinBubbles || f.each({
      focus: "focusin",
      blur: "focusout"
    }, function(a, b) {
      var d = 0,
        e = function(a) {
          f.event.simulate(b, a.target, f.event.fix(a), !0)
        };
      f.event.special[b] = {
        setup: function() {
          d++ === 0 && c.addEventListener(a, e, !0)
        },
        teardown: function() {
          --d === 0 && c.removeEventListener(a, e, !0)
        }
      }
    }), f.fn.extend({
      on: function(a, c, d, e, g) {
        var h, i;
        if (typeof a == "object") {
          typeof c != "string" && (d = c, c = b);
          for (i in a) {
            this.on(i, c, d, a[i], g)
          }
          return this
        }
        d == null && e == null ? (e = c, d = c = b) : e == null && (typeof c == "string" ? (e = d, d = b) : (e = d, d = c, c = b));
        if (e === !1) {
          e = J
        } else {
          if (!e) {
            return this
          }
        }
        g === 1 && (h = e, e = function(a) {
          f().off(a);
          return h.apply(this, arguments)
        }, e.guid = h.guid || (h.guid = f.guid++));
        return this.each(function() {
          f.event.add(this, a, e, d, c)
        })
      },
      one: function(a, b, c, d) {
        return this.on.call(this, a, b, c, d, 1)
      },
      off: function(a, c, d) {
        if (a && a.preventDefault && a.handleObj) {
          var e = a.handleObj;
          f(a.delegateTarget).off(e.namespace ? e.type + "." + e.namespace : e.type, e.selector, e.handler);
          return this
        }
        if (typeof a == "object") {
          for (var g in a) {
            this.off(g, c, a[g])
          }
          return this
        }
        if (c === !1 || typeof c == "function") {
          d = c, c = b
        }
        d === !1 && (d = J);
        return this.each(function() {
          f.event.remove(this, a, d, c)
        })
      },
      bind: function(a, b, c) {
        return this.on(a, null, b, c)
      },
      unbind: function(a, b) {
        return this.off(a, null, b)
      },
      live: function(a, b, c) {
        f(this.context).on(a, this.selector, b, c);
        return this
      },
      die: function(a, b) {
        f(this.context).off(a, this.selector || "**", b);
        return this
      },
      delegate: function(a, b, c, d) {
        return this.on(b, a, c, d)
      },
      undelegate: function(a, b, c) {
        return arguments.length == 1 ? this.off(a, "**") : this.off(b, a, c)
      },
      trigger: function(a, b) {
        return this.each(function() {
          f.event.trigger(a, b, this)
        })
      },
      triggerHandler: function(a, b) {
        if (this[0]) {
          return f.event.trigger(a, b, this[0], !0)
        }
      },
      toggle: function(a) {
        var b = arguments,
          c = a.guid || f.guid++,
          d = 0,
          e = function(c) {
            var e = (f._data(this, "lastToggle" + a.guid) || 0) % d;
            f._data(this, "lastToggle" + a.guid, e + 1), c.preventDefault();
            return b[e].apply(this, arguments) || !1
          };
        e.guid = c;
        while (d < b.length) {
          b[d++].guid = c
        }
        return this.click(e)
      },
      hover: function(a, b) {
        return this.mouseenter(a).mouseleave(b || a)
      }
    }), f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
      f.fn[b] = function(a, c) {
        c == null && (c = a, a = null);
        return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
      }, f.attrFn && (f.attrFn[b] = !0), C.test(b) && (f.event.fixHooks[b] = f.event.keyHooks), D.test(b) && (f.event.fixHooks[b] = f.event.mouseHooks)
    }),
      function() {
        function x(a, b, c, e, f, g) {
          for (var h = 0, i = e.length; h < i; h++) {
            var j = e[h];
            if (j) {
              var k = !1;
              j = j[a];
              while (j) {
                if (j[d] === c) {
                  k = e[j.sizset];
                  break
                }
                if (j.nodeType === 1) {
                  g || (j[d] = c, j.sizset = h);
                  if (typeof b != "string") {
                    if (j === b) {
                      k = !0;
                      break
                    }
                  } else {
                    if (m.filter(b, [j]).length > 0) {
                      k = j;
                      break
                    }
                  }
                }
                j = j[a]
              }
              e[h] = k
            }
          }
        }

        function w(a, b, c, e, f, g) {
          for (var h = 0, i = e.length; h < i; h++) {
            var j = e[h];
            if (j) {
              var k = !1;
              j = j[a];
              while (j) {
                if (j[d] === c) {
                  k = e[j.sizset];
                  break
                }
                j.nodeType === 1 && !g && (j[d] = c, j.sizset = h);
                if (j.nodeName.toLowerCase() === b) {
                  k = j;
                  break
                }
                j = j[a]
              }
              e[h] = k
            }
          }
        }
        var a = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
          d = "sizcache" + (Math.random() + "").replace(".", ""),
          e = 0,
          g = Object.prototype.toString,
          h = !1,
          i = !0,
          j = /\\/g,
          k = /\r\n/g,
          l = /\W/;
        [0, 0].sort(function() {
          i = !1;
          return 0
        });
        var m = function(b, d, e, f) {
          e = e || [], d = d || c;
          var h = d;
          if (d.nodeType !== 1 && d.nodeType !== 9) {
            return []
          }
          if (!b || typeof b != "string") {
            return e
          }
          var i, j, k, l, n, q, r, t, u = !0,
            v = m.isXML(d),
            w = [],
            x = b;
          do {
            a.exec(""), i = a.exec(x);
            if (i) {
              x = i[3], w.push(i[1]);
              if (i[2]) {
                l = i[3];
                break
              }
            }
          } while (i);
          if (w.length > 1 && p.exec(b)) {
            if (w.length === 2 && o.relative[w[0]]) {
              j = y(w[0] + w[1], d, f)
            } else {
              j = o.relative[w[0]] ? [d] : m(w.shift(), d);
              while (w.length) {
                b = w.shift(), o.relative[b] && (b += w.shift()), j = y(b, j, f)
              }
            }
          } else {
            !f && w.length > 1 && d.nodeType === 9 && !v && o.match.ID.test(w[0]) && !o.match.ID.test(w[w.length - 1]) && (n = m.find(w.shift(), d, v), d = n.expr ? m.filter(n.expr, n.set)[0] : n.set[0]);
            if (d) {
              n = f ? {
                expr: w.pop(),
                set: s(f)
              } : m.find(w.pop(), w.length === 1 && (w[0] === "~" || w[0] === "+") && d.parentNode ? d.parentNode : d, v), j = n.expr ? m.filter(n.expr, n.set) : n.set, w.length > 0 ? k = s(j) : u = !1;
              while (w.length) {
                q = w.pop(), r = q, o.relative[q] ? r = w.pop() : q = "", r == null && (r = d), o.relative[q](k, r, v)
              }
            } else {
              k = w = []
            }
          }
          k || (k = j), k || m.error(q || b);
          if (g.call(k) === "[object Array]") {
            if (!u) {
              e.push.apply(e, k)
            } else {
              if (d && d.nodeType === 1) {
                for (t = 0; k[t] != null; t++) {
                  k[t] && (k[t] === !0 || k[t].nodeType === 1 && m.contains(d, k[t])) && e.push(j[t])
                }
              } else {
                for (t = 0; k[t] != null; t++) {
                  k[t] && k[t].nodeType === 1 && e.push(j[t])
                }
              }
            }
          } else {
            s(k, e)
          }
          l && (m(l, h, e, f), m.uniqueSort(e));
          return e
        };
        m.uniqueSort = function(a) {
          if (u) {
            h = i, a.sort(u);
            if (h) {
              for (var b = 1; b < a.length; b++) {
                a[b] === a[b - 1] && a.splice(b--, 1)
              }
            }
          }
          return a
        }, m.matches = function(a, b) {
          return m(a, null, null, b)
        }, m.matchesSelector = function(a, b) {
          return m(b, null, null, [a]).length > 0
        }, m.find = function(a, b, c) {
          var d, e, f, g, h, i;
          if (!a) {
            return []
          }
          for (e = 0, f = o.order.length; e < f; e++) {
            h = o.order[e];
            if (g = o.leftMatch[h].exec(a)) {
              i = g[1], g.splice(1, 1);
              if (i.substr(i.length - 1) !== "\\") {
                g[1] = (g[1] || "").replace(j, ""), d = o.find[h](g, b, c);
                if (d != null) {
                  a = a.replace(o.match[h], "");
                  break
                }
              }
            }
          }
          d || (d = typeof b.getElementsByTagName != "undefined" ? b.getElementsByTagName("*") : []);
          return {
            set: d,
            expr: a
          }
        }, m.filter = function(a, c, d, e) {
          var f, g, h, i, j, k, l, n, p, q = a,
            r = [],
            s = c,
            t = c && c[0] && m.isXML(c[0]);
          while (a && c.length) {
            for (h in o.filter) {
              if ((f = o.leftMatch[h].exec(a)) != null && f[2]) {
                k = o.filter[h], l = f[1], g = !1, f.splice(1, 1);
                if (l.substr(l.length - 1) === "\\") {
                  continue
                }
                s === r && (r = []);
                if (o.preFilter[h]) {
                  f = o.preFilter[h](f, s, d, r, e, t);
                  if (!f) {
                    g = i = !0
                  } else {
                    if (f === !0) {
                      continue
                    }
                  }
                }
                if (f) {
                  for (n = 0;
                       (j = s[n]) != null; n++) {
                    j && (i = k(j, f, n, s), p = e ^ i, d && i != null ? p ? g = !0 : s[n] = !1 : p && (r.push(j), g = !0))
                  }
                }
                if (i !== b) {
                  d || (s = r), a = a.replace(o.match[h], "");
                  if (!g) {
                    return []
                  }
                  break
                }
              }
            }
            if (a === q) {
              if (g == null) {
                m.error(a)
              } else {
                break
              }
            }
            q = a
          }
          return s
        }, m.error = function(a) {
          throw new Error("Syntax error, unrecognized expression: " + a)
        };
        var n = m.getText = function(a) {
            var b, c, d = a.nodeType,
              e = "";
            if (d) {
              if (d === 1 || d === 9) {
                if (typeof a.textContent == "string") {
                  return a.textContent
                }
                if (typeof a.innerText == "string") {
                  return a.innerText.replace(k, "")
                }
                for (a = a.firstChild; a; a = a.nextSibling) {
                  e += n(a)
                }
              } else {
                if (d === 3 || d === 4) {
                  return a.nodeValue
                }
              }
            } else {
              for (b = 0; c = a[b]; b++) {
                c.nodeType !== 8 && (e += n(c))
              }
            }
            return e
          },
          o = m.selectors = {
            order: ["ID", "NAME", "TAG"],
            match: {
              ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
              CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
              NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
              ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
              TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
              CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
              POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
              PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
            },
            leftMatch: {},
            attrMap: {
              "class": "className",
              "for": "htmlFor"
            },
            attrHandle: {
              href: function(a) {
                return a.getAttribute("href")
              },
              type: function(a) {
                return a.getAttribute("type")
              }
            },
            relative: {
              "+": function(a, b) {
                var c = typeof b == "string",
                  d = c && !l.test(b),
                  e = c && !d;
                d && (b = b.toLowerCase());
                for (var f = 0, g = a.length, h; f < g; f++) {
                  if (h = a[f]) {
                    while ((h = h.previousSibling) && h.nodeType !== 1) {}
                    a[f] = e || h && h.nodeName.toLowerCase() === b ? h || !1 : h === b
                  }
                }
                e && m.filter(b, a, !0)
              },
              ">": function(a, b) {
                var c, d = typeof b == "string",
                  e = 0,
                  f = a.length;
                if (d && !l.test(b)) {
                  b = b.toLowerCase();
                  for (; e < f; e++) {
                    c = a[e];
                    if (c) {
                      var g = c.parentNode;
                      a[e] = g.nodeName.toLowerCase() === b ? g : !1
                    }
                  }
                } else {
                  for (; e < f; e++) {
                    c = a[e], c && (a[e] = d ? c.parentNode : c.parentNode === b)
                  }
                  d && m.filter(b, a, !0)
                }
              },
              "": function(a, b, c) {
                var d, f = e++,
                  g = x;
                typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("parentNode", b, f, a, d, c)
              },
              "~": function(a, b, c) {
                var d, f = e++,
                  g = x;
                typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("previousSibling", b, f, a, d, c)
              }
            },
            find: {
              ID: function(a, b, c) {
                if (typeof b.getElementById != "undefined" && !c) {
                  var d = b.getElementById(a[1]);
                  return d && d.parentNode ? [d] : []
                }
              },
              NAME: function(a, b) {
                if (typeof b.getElementsByName != "undefined") {
                  var c = [],
                    d = b.getElementsByName(a[1]);
                  for (var e = 0, f = d.length; e < f; e++) {
                    d[e].getAttribute("name") === a[1] && c.push(d[e])
                  }
                  return c.length === 0 ? null : c
                }
              },
              TAG: function(a, b) {
                if (typeof b.getElementsByTagName != "undefined") {
                  return b.getElementsByTagName(a[1])
                }
              }
            },
            preFilter: {
              CLASS: function(a, b, c, d, e, f) {
                a = " " + a[1].replace(j, "") + " ";
                if (f) {
                  return a
                }
                for (var g = 0, h;
                     (h = b[g]) != null; g++) {
                  h && (e ^ (h.className && (" " + h.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a) >= 0) ? c || d.push(h) : c && (b[g] = !1))
                }
                return !1
              },
              ID: function(a) {
                return a[1].replace(j, "")
              },
              TAG: function(a, b) {
                return a[1].replace(j, "").toLowerCase()
              },
              CHILD: function(a) {
                if (a[1] === "nth") {
                  a[2] || m.error(a[0]), a[2] = a[2].replace(/^\+|\s*/g, "");
                  var b = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2] === "even" && "2n" || a[2] === "odd" && "2n+1" || !/\D/.test(a[2]) && "0n+" + a[2] || a[2]);
                  a[2] = b[1] + (b[2] || 1) - 0, a[3] = b[3] - 0
                } else {
                  a[2] && m.error(a[0])
                }
                a[0] = e++;
                return a
              },
              ATTR: function(a, b, c, d, e, f) {
                var g = a[1] = a[1].replace(j, "");
                !f && o.attrMap[g] && (a[1] = o.attrMap[g]), a[4] = (a[4] || a[5] || "").replace(j, ""), a[2] === "~=" && (a[4] = " " + a[4] + " ");
                return a
              },
              PSEUDO: function(b, c, d, e, f) {
                if (b[1] === "not") {
                  if ((a.exec(b[3]) || "").length > 1 || /^\w/.test(b[3])) {
                    b[3] = m(b[3], null, null, c)
                  } else {
                    var g = m.filter(b[3], c, d, !0 ^ f);
                    d || e.push.apply(e, g);
                    return !1
                  }
                } else {
                  if (o.match.POS.test(b[0]) || o.match.CHILD.test(b[0])) {
                    return !0
                  }
                }
                return b
              },
              POS: function(a) {
                a.unshift(!0);
                return a
              }
            },
            filters: {
              enabled: function(a) {
                return a.disabled === !1 && a.type !== "hidden"
              },
              disabled: function(a) {
                return a.disabled === !0
              },
              checked: function(a) {
                return a.checked === !0
              },
              selected: function(a) {
                a.parentNode && a.parentNode.selectedIndex;
                return a.selected === !0
              },
              parent: function(a) {
                return !!a.firstChild
              },
              empty: function(a) {
                return !a.firstChild
              },
              has: function(a, b, c) {
                return !!m(c[3], a).length
              },
              header: function(a) {
                return /h\d/i.test(a.nodeName)
              },
              text: function(a) {
                var b = a.getAttribute("type"),
                  c = a.type;
                return a.nodeName.toLowerCase() === "input" && "text" === c && (b === c || b === null)
              },
              radio: function(a) {
                return a.nodeName.toLowerCase() === "input" && "radio" === a.type
              },
              checkbox: function(a) {
                return a.nodeName.toLowerCase() === "input" && "checkbox" === a.type
              },
              file: function(a) {
                return a.nodeName.toLowerCase() === "input" && "file" === a.type
              },
              password: function(a) {
                return a.nodeName.toLowerCase() === "input" && "password" === a.type
              },
              submit: function(a) {
                var b = a.nodeName.toLowerCase();
                return (b === "input" || b === "button") && "submit" === a.type
              },
              image: function(a) {
                return a.nodeName.toLowerCase() === "input" && "image" === a.type
              },
              reset: function(a) {
                var b = a.nodeName.toLowerCase();
                return (b === "input" || b === "button") && "reset" === a.type
              },
              button: function(a) {
                var b = a.nodeName.toLowerCase();
                return b === "input" && "button" === a.type || b === "button"
              },
              input: function(a) {
                return /input|select|textarea|button/i.test(a.nodeName)
              },
              focus: function(a) {
                return a === a.ownerDocument.activeElement
              }
            },
            setFilters: {
              first: function(a, b) {
                return b === 0
              },
              last: function(a, b, c, d) {
                return b === d.length - 1
              },
              even: function(a, b) {
                return b % 2 === 0
              },
              odd: function(a, b) {
                return b % 2 === 1
              },
              lt: function(a, b, c) {
                return b < c[3] - 0
              },
              gt: function(a, b, c) {
                return b > c[3] - 0
              },
              nth: function(a, b, c) {
                return c[3] - 0 === b
              },
              eq: function(a, b, c) {
                return c[3] - 0 === b
              }
            },
            filter: {
              PSEUDO: function(a, b, c, d) {
                var e = b[1],
                  f = o.filters[e];
                if (f) {
                  return f(a, c, b, d)
                }
                if (e === "contains") {
                  return (a.textContent || a.innerText || n([a]) || "").indexOf(b[3]) >= 0
                }
                if (e === "not") {
                  var g = b[3];
                  for (var h = 0, i = g.length; h < i; h++) {
                    if (g[h] === a) {
                      return !1
                    }
                  }
                  return !0
                }
                m.error(e)
              },
              CHILD: function(a, b) {
                var c, e, f, g, h, i, j, k = b[1],
                  l = a;
                switch (k) {
                  case "only":
                  case "first":
                    while (l = l.previousSibling) {
                      if (l.nodeType === 1) {
                        return !1
                      }
                    }
                    if (k === "first") {
                      return !0
                    }
                    l = a;
                  case "last":
                    while (l = l.nextSibling) {
                      if (l.nodeType === 1) {
                        return !1
                      }
                    }
                    return !0;
                  case "nth":
                    c = b[2], e = b[3];
                    if (c === 1 && e === 0) {
                      return !0
                    }
                    f = b[0], g = a.parentNode;
                    if (g && (g[d] !== f || !a.nodeIndex)) {
                      i = 0;
                      for (l = g.firstChild; l; l = l.nextSibling) {
                        l.nodeType === 1 && (l.nodeIndex = ++i)
                      }
                      g[d] = f
                    }
                    j = a.nodeIndex - e;
                    return c === 0 ? j === 0 : j % c === 0 && j / c >= 0
                }
              },
              ID: function(a, b) {
                return a.nodeType === 1 && a.getAttribute("id") === b
              },
              TAG: function(a, b) {
                return b === "*" && a.nodeType === 1 || !!a.nodeName && a.nodeName.toLowerCase() === b
              },
              CLASS: function(a, b) {
                return (" " + (a.className || a.getAttribute("class")) + " ").indexOf(b) > -1
              },
              ATTR: function(a, b) {
                var c = b[1],
                  d = m.attr ? m.attr(a, c) : o.attrHandle[c] ? o.attrHandle[c](a) : a[c] != null ? a[c] : a.getAttribute(c),
                  e = d + "",
                  f = b[2],
                  g = b[4];
                return d == null ? f === "!=" : !f && m.attr ? d != null : f === "=" ? e === g : f === "*=" ? e.indexOf(g) >= 0 : f === "~=" ? (" " + e + " ").indexOf(g) >= 0 : g ? f === "!=" ? e !== g : f === "^=" ? e.indexOf(g) === 0 : f === "$=" ? e.substr(e.length - g.length) === g : f === "|=" ? e === g || e.substr(0, g.length + 1) === g + "-" : !1 : e && d !== !1
              },
              POS: function(a, b, c, d) {
                var e = b[2],
                  f = o.setFilters[e];
                if (f) {
                  return f(a, c, b, d)
                }
              }
            }
          },
          p = o.match.POS,
          q = function(a, b) {
            return "\\" + (b - 0 + 1)
          };
        for (var r in o.match) {
          o.match[r] = new RegExp(o.match[r].source + /(?![^\[]*\])(?![^\(]*\))/.source), o.leftMatch[r] = new RegExp(/(^(?:.|\r|\n)*?)/.source + o.match[r].source.replace(/\\(\d+)/g, q))
        }
        var s = function(a, b) {
          a = Array.prototype.slice.call(a, 0);
          if (b) {
            b.push.apply(b, a);
            return b
          }
          return a
        };
        try {
          Array.prototype.slice.call(c.documentElement.childNodes, 0)[0].nodeType
        } catch (t) {
          s = function(a, b) {
            var c = 0,
              d = b || [];
            if (g.call(a) === "[object Array]") {
              Array.prototype.push.apply(d, a)
            } else {
              if (typeof a.length == "number") {
                for (var e = a.length; c < e; c++) {
                  d.push(a[c])
                }
              } else {
                for (; a[c]; c++) {
                  d.push(a[c])
                }
              }
            }
            return d
          }
        }
        var u, v;
        c.documentElement.compareDocumentPosition ? u = function(a, b) {
          if (a === b) {
            h = !0;
            return 0
          }
          if (!a.compareDocumentPosition || !b.compareDocumentPosition) {
            return a.compareDocumentPosition ? -1 : 1
          }
          return a.compareDocumentPosition(b) & 4 ? -1 : 1
        } : (u = function(a, b) {
          if (a === b) {
            h = !0;
            return 0
          }
          if (a.sourceIndex && b.sourceIndex) {
            return a.sourceIndex - b.sourceIndex
          }
          var c, d, e = [],
            f = [],
            g = a.parentNode,
            i = b.parentNode,
            j = g;
          if (g === i) {
            return v(a, b)
          }
          if (!g) {
            return -1
          }
          if (!i) {
            return 1
          }
          while (j) {
            e.unshift(j), j = j.parentNode
          }
          j = i;
          while (j) {
            f.unshift(j), j = j.parentNode
          }
          c = e.length, d = f.length;
          for (var k = 0; k < c && k < d; k++) {
            if (e[k] !== f[k]) {
              return v(e[k], f[k])
            }
          }
          return k === c ? v(a, f[k], -1) : v(e[k], b, 1)
        }, v = function(a, b, c) {
          if (a === b) {
            return c
          }
          var d = a.nextSibling;
          while (d) {
            if (d === b) {
              return -1
            }
            d = d.nextSibling
          }
          return 1
        }),
          function() {
            var a = c.createElement("div"),
              d = "script" + (new Date).getTime(),
              e = c.documentElement;
            a.innerHTML = "<a name='" + d + "'/>", e.insertBefore(a, e.firstChild), c.getElementById(d) && (o.find.ID = function(a, c, d) {
              if (typeof c.getElementById != "undefined" && !d) {
                var e = c.getElementById(a[1]);
                return e ? e.id === a[1] || typeof e.getAttributeNode != "undefined" && e.getAttributeNode("id").nodeValue === a[1] ? [e] : b : []
              }
            }, o.filter.ID = function(a, b) {
              var c = typeof a.getAttributeNode != "undefined" && a.getAttributeNode("id");
              return a.nodeType === 1 && c && c.nodeValue === b
            }), e.removeChild(a), e = a = null
          }(),
          function() {
            var a = c.createElement("div");
            a.appendChild(c.createComment("")), a.getElementsByTagName("*").length > 0 && (o.find.TAG = function(a, b) {
              var c = b.getElementsByTagName(a[1]);
              if (a[1] === "*") {
                var d = [];
                for (var e = 0; c[e]; e++) {
                  c[e].nodeType === 1 && d.push(c[e])
                }
                c = d
              }
              return c
            }), a.innerHTML = "<a href='#'></a>", a.firstChild && typeof a.firstChild.getAttribute != "undefined" && a.firstChild.getAttribute("href") !== "#" && (o.attrHandle.href = function(a) {
              return a.getAttribute("href", 2)
            }), a = null
          }(), c.querySelectorAll && function() {
          var a = m,
            b = c.createElement("div"),
            d = "__sizzle__";
          b.innerHTML = "<p class='TEST'></p>";
          if (!b.querySelectorAll || b.querySelectorAll(".TEST").length !== 0) {
            m = function(b, e, f, g) {
              e = e || c;
              if (!g && !m.isXML(e)) {
                var h = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);
                if (h && (e.nodeType === 1 || e.nodeType === 9)) {
                  if (h[1]) {
                    return s(e.getElementsByTagName(b), f)
                  }
                  if (h[2] && o.find.CLASS && e.getElementsByClassName) {
                    return s(e.getElementsByClassName(h[2]), f)
                  }
                }
                if (e.nodeType === 9) {
                  if (b === "body" && e.body) {
                    return s([e.body], f)
                  }
                  if (h && h[3]) {
                    var i = e.getElementById(h[3]);
                    if (!i || !i.parentNode) {
                      return s([], f)
                    }
                    if (i.id === h[3]) {
                      return s([i], f)
                    }
                  }
                  try {
                    return s(e.querySelectorAll(b), f)
                  } catch (j) {}
                } else {
                  if (e.nodeType === 1 && e.nodeName.toLowerCase() !== "object") {
                    var k = e,
                      l = e.getAttribute("id"),
                      n = l || d,
                      p = e.parentNode,
                      q = /^\s*[+~]/.test(b);
                    l ? n = n.replace(/'/g, "\\$&") : e.setAttribute("id", n), q && p && (e = e.parentNode);
                    try {
                      if (!q || p) {
                        return s(e.querySelectorAll("[id='" + n + "'] " + b), f)
                      }
                    } catch (r) {} finally {
                      l || k.removeAttribute("id")
                    }
                  }
                }
              }
              return a(b, e, f, g)
            };
            for (var e in a) {
              m[e] = a[e]
            }
            b = null
          }
        }(),
          function() {
            var a = c.documentElement,
              b = a.matchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.msMatchesSelector;
            if (b) {
              var d = !b.call(c.createElement("div"), "div"),
                e = !1;
              try {
                b.call(c.documentElement, "[test!='']:sizzle")
              } catch (f) {
                e = !0
              }
              m.matchesSelector = function(a, c) {
                c = c.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                if (!m.isXML(a)) {
                  try {
                    if (e || !o.match.PSEUDO.test(c) && !/!=/.test(c)) {
                      var f = b.call(a, c);
                      if (f || !d || a.document && a.document.nodeType !== 11) {
                        return f
                      }
                    }
                  } catch (g) {}
                }
                return m(c, null, null, [a]).length > 0
              }
            }
          }(),
          function() {
            var a = c.createElement("div");
            a.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (!!a.getElementsByClassName && a.getElementsByClassName("e").length !== 0) {
              a.lastChild.className = "e";
              if (a.getElementsByClassName("e").length === 1) {
                return
              }
              o.order.splice(1, 0, "CLASS"), o.find.CLASS = function(a, b, c) {
                if (typeof b.getElementsByClassName != "undefined" && !c) {
                  return b.getElementsByClassName(a[1])
                }
              }, a = null
            }
          }(), c.documentElement.contains ? m.contains = function(a, b) {
          return a !== b && (a.contains ? a.contains(b) : !0)
        } : c.documentElement.compareDocumentPosition ? m.contains = function(a, b) {
          return !!(a.compareDocumentPosition(b) & 16)
        } : m.contains = function() {
          return !1
        }, m.isXML = function(a) {
          var b = (a ? a.ownerDocument || a : 0).documentElement;
          return b ? b.nodeName !== "HTML" : !1
        };
        var y = function(a, b, c) {
          var d, e = [],
            f = "",
            g = b.nodeType ? [b] : b;
          while (d = o.match.PSEUDO.exec(a)) {
            f += d[0], a = a.replace(o.match.PSEUDO, "")
          }
          a = o.relative[a] ? a + "*" : a;
          for (var h = 0, i = g.length; h < i; h++) {
            m(a, g[h], e, c)
          }
          return m.filter(f, e)
        };
        m.attr = f.attr, m.selectors.attrMap = {}, f.find = m, f.expr = m.selectors, f.expr[":"] = f.expr.filters, f.unique = m.uniqueSort, f.text = m.getText, f.isXMLDoc = m.isXML, f.contains = m.contains
      }();
    var L = /Until$/,
      M = /^(?:parents|prevUntil|prevAll)/,
      N = /,/,
      O = /^.[^:#\[\.,]*$/,
      P = Array.prototype.slice,
      Q = f.expr.match.POS,
      R = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
      };
    f.fn.extend({
      find: function(a) {
        var b = this,
          c, d;
        if (typeof a != "string") {
          return f(a).filter(function() {
            for (c = 0, d = b.length; c < d; c++) {
              if (f.contains(b[c], this)) {
                return !0
              }
            }
          })
        }
        var e = this.pushStack("", "find", a),
          g, h, i;
        for (c = 0, d = this.length; c < d; c++) {
          g = e.length, f.find(a, this[c], e);
          if (c > 0) {
            for (h = g; h < e.length; h++) {
              for (i = 0; i < g; i++) {
                if (e[i] === e[h]) {
                  e.splice(h--, 1);
                  break
                }
              }
            }
          }
        }
        return e
      },
      has: function(a) {
        var b = f(a);
        return this.filter(function() {
          for (var a = 0, c = b.length; a < c; a++) {
            if (f.contains(this, b[a])) {
              return !0
            }
          }
        })
      },
      not: function(a) {
        return this.pushStack(T(this, a, !1), "not", a)
      },
      filter: function(a) {
        return this.pushStack(T(this, a, !0), "filter", a)
      },
      is: function(a) {
        return !!a && (typeof a == "string" ? Q.test(a) ? f(a, this.context).index(this[0]) >= 0 : f.filter(a, this).length > 0 : this.filter(a).length > 0)
      },
      closest: function(a, b) {
        var c = [],
          d, e, g = this[0];
        if (f.isArray(a)) {
          var h = 1;
          while (g && g.ownerDocument && g !== b) {
            for (d = 0; d < a.length; d++) {
              f(g).is(a[d]) && c.push({
                selector: a[d],
                elem: g,
                level: h
              })
            }
            g = g.parentNode, h++
          }
          return c
        }
        var i = Q.test(a) || typeof a != "string" ? f(a, b || this.context) : 0;
        for (d = 0, e = this.length; d < e; d++) {
          g = this[d];
          while (g) {
            if (i ? i.index(g) > -1 : f.find.matchesSelector(g, a)) {
              c.push(g);
              break
            }
            g = g.parentNode;
            if (!g || !g.ownerDocument || g === b || g.nodeType === 11) {
              break
            }
          }
        }
        c = c.length > 1 ? f.unique(c) : c;
        return this.pushStack(c, "closest", a)
      },
      index: function(a) {
        if (!a) {
          return this[0] && this[0].parentNode ? this.prevAll().length : -1
        }
        if (typeof a == "string") {
          return f.inArray(this[0], f(a))
        }
        return f.inArray(a.jquery ? a[0] : a, this)
      },
      add: function(a, b) {
        var c = typeof a == "string" ? f(a, b) : f.makeArray(a && a.nodeType ? [a] : a),
          d = f.merge(this.get(), c);
        return this.pushStack(S(c[0]) || S(d[0]) ? d : f.unique(d))
      },
      andSelf: function() {
        return this.add(this.prevObject)
      }
    }), f.each({
      parent: function(a) {
        var b = a.parentNode;
        return b && b.nodeType !== 11 ? b : null
      },
      parents: function(a) {
        return f.dir(a, "parentNode")
      },
      parentsUntil: function(a, b, c) {
        return f.dir(a, "parentNode", c)
      },
      next: function(a) {
        return f.nth(a, 2, "nextSibling")
      },
      prev: function(a) {
        return f.nth(a, 2, "previousSibling")
      },
      nextAll: function(a) {
        return f.dir(a, "nextSibling")
      },
      prevAll: function(a) {
        return f.dir(a, "previousSibling")
      },
      nextUntil: function(a, b, c) {
        return f.dir(a, "nextSibling", c)
      },
      prevUntil: function(a, b, c) {
        return f.dir(a, "previousSibling", c)
      },
      siblings: function(a) {
        return f.sibling(a.parentNode.firstChild, a)
      },
      children: function(a) {
        return f.sibling(a.firstChild)
      },
      contents: function(a) {
        return f.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : f.makeArray(a.childNodes)
      }
    }, function(a, b) {
      f.fn[a] = function(c, d) {
        var e = f.map(this, b, c);
        L.test(a) || (d = c), d && typeof d == "string" && (e = f.filter(d, e)), e = this.length > 1 && !R[a] ? f.unique(e) : e, (this.length > 1 || N.test(d)) && M.test(a) && (e = e.reverse());
        return this.pushStack(e, a, P.call(arguments).join(","))
      }
    }), f.extend({
      filter: function(a, b, c) {
        c && (a = ":not(" + a + ")");
        return b.length === 1 ? f.find.matchesSelector(b[0], a) ? [b[0]] : [] : f.find.matches(a, b)
      },
      dir: function(a, c, d) {
        var e = [],
          g = a[c];
        while (g && g.nodeType !== 9 && (d === b || g.nodeType !== 1 || !f(g).is(d))) {
          g.nodeType === 1 && e.push(g), g = g[c]
        }
        return e
      },
      nth: function(a, b, c, d) {
        b = b || 1;
        var e = 0;
        for (; a; a = a[c]) {
          if (a.nodeType === 1 && ++e === b) {
            break
          }
        }
        return a
      },
      sibling: function(a, b) {
        var c = [];
        for (; a; a = a.nextSibling) {
          a.nodeType === 1 && a !== b && c.push(a)
        }
        return c
      }
    });
    var V = "abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
      W = / jQuery\d+="(?:\d+|null)"/g,
      X = /^\s+/,
      Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
      Z = /<([\w:]+)/,
      $ = /<tbody/i,
      _ = /<|&#?\w+;/,
      ba = /<(?:script|style)/i,
      bb = /<(?:script|object|embed|option|style)/i,
      bc = new RegExp("<(?:" + V + ")", "i"),
      bd = /checked\s*(?:[^=]|=\s*.checked.)/i,
      be = /\/(java|ecma)script/i,
      bf = /^\s*<!(?:\[CDATA\[|\-\-)/,
      bg = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        area: [1, "<map>", "</map>"],
        _default: [0, "", ""]
      },
      bh = U(c);
    bg.optgroup = bg.option, bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead, bg.th = bg.td, f.support.htmlSerialize || (bg._default = [1, "div<div>", "</div>"]), f.fn.extend({
      text: function(a) {
        if (f.isFunction(a)) {
          return this.each(function(b) {
            var c = f(this);
            c.text(a.call(this, b, c.text()))
          })
        }
        if (typeof a != "object" && a !== b) {
          return this.empty().append((this[0] && this[0].ownerDocument || c).createTextNode(a))
        }
        return f.text(this)
      },
      wrapAll: function(a) {
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).wrapAll(a.call(this, b))
          })
        }
        if (this[0]) {
          var b = f(a, this[0].ownerDocument).eq(0).clone(!0);
          this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
            var a = this;
            while (a.firstChild && a.firstChild.nodeType === 1) {
              a = a.firstChild
            }
            return a
          }).append(this)
        }
        return this
      },
      wrapInner: function(a) {
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).wrapInner(a.call(this, b))
          })
        }
        return this.each(function() {
          var b = f(this),
            c = b.contents();
          c.length ? c.wrapAll(a) : b.append(a)
        })
      },
      wrap: function(a) {
        var b = f.isFunction(a);
        return this.each(function(c) {
          f(this).wrapAll(b ? a.call(this, c) : a)
        })
      },
      unwrap: function() {
        return this.parent().each(function() {
          f.nodeName(this, "body") || f(this).replaceWith(this.childNodes)
        }).end()
      },
      append: function() {
        return this.domManip(arguments, !0, function(a) {
          this.nodeType === 1 && this.appendChild(a)
        })
      },
      prepend: function() {
        return this.domManip(arguments, !0, function(a) {
          this.nodeType === 1 && this.insertBefore(a, this.firstChild)
        })
      },
      before: function() {
        if (this[0] && this[0].parentNode) {
          return this.domManip(arguments, !1, function(a) {
            this.parentNode.insertBefore(a, this)
          })
        }
        if (arguments.length) {
          var a = f.clean(arguments);
          a.push.apply(a, this.toArray());
          return this.pushStack(a, "before", arguments)
        }
      },
      after: function() {
        if (this[0] && this[0].parentNode) {
          return this.domManip(arguments, !1, function(a) {
            this.parentNode.insertBefore(a, this.nextSibling)
          })
        }
        if (arguments.length) {
          var a = this.pushStack(this, "after", arguments);
          a.push.apply(a, f.clean(arguments));
          return a
        }
      },
      remove: function(a, b) {
        for (var c = 0, d;
             (d = this[c]) != null; c++) {
          if (!a || f.filter(a, [d]).length) {
            !b && d.nodeType === 1 && (f.cleanData(d.getElementsByTagName("*")), f.cleanData([d])), d.parentNode && d.parentNode.removeChild(d)
          }
        }
        return this
      },
      empty: function() {
        for (var a = 0, b;
             (b = this[a]) != null; a++) {
          b.nodeType === 1 && f.cleanData(b.getElementsByTagName("*"));
          while (b.firstChild) {
            b.removeChild(b.firstChild)
          }
        }
        return this
      },
      clone: function(a, b) {
        a = a == null ? !1 : a, b = b == null ? a : b;
        return this.map(function() {
          return f.clone(this, a, b)
        })
      },
      html: function(a) {
        if (a === b) {
          return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(W, "") : null
        }
        if (typeof a == "string" && !ba.test(a) && (f.support.leadingWhitespace || !X.test(a)) && !bg[(Z.exec(a) || ["", ""])[1].toLowerCase()]) {
          a = a.replace(Y, "<$1></$2>");
          try {
            for (var c = 0, d = this.length; c < d; c++) {
              this[c].nodeType === 1 && (f.cleanData(this[c].getElementsByTagName("*")), this[c].innerHTML = a)
            }
          } catch (e) {
            this.empty().append(a)
          }
        } else {
          f.isFunction(a) ? this.each(function(b) {
            var c = f(this);
            c.html(a.call(this, b, c.html()))
          }) : this.empty().append(a)
        }
        return this
      },
      replaceWith: function(a) {
        if (this[0] && this[0].parentNode) {
          if (f.isFunction(a)) {
            return this.each(function(b) {
              var c = f(this),
                d = c.html();
              c.replaceWith(a.call(this, b, d))
            })
          }
          typeof a != "string" && (a = f(a).detach());
          return this.each(function() {
            var b = this.nextSibling,
              c = this.parentNode;
            f(this).remove(), b ? f(b).before(a) : f(c).append(a)
          })
        }
        return this.length ? this.pushStack(f(f.isFunction(a) ? a() : a), "replaceWith", a) : this
      },
      detach: function(a) {
        return this.remove(a, !0)
      },
      domManip: function(a, c, d) {
        var e, g, h, i, j = a[0],
          k = [];
        if (!f.support.checkClone && arguments.length === 3 && typeof j == "string" && bd.test(j)) {
          return this.each(function() {
            f(this).domManip(a, c, d, !0)
          })
        }
        if (f.isFunction(j)) {
          return this.each(function(e) {
            var g = f(this);
            a[0] = j.call(this, e, c ? g.html() : b), g.domManip(a, c, d)
          })
        }
        if (this[0]) {
          i = j && j.parentNode, f.support.parentNode && i && i.nodeType === 11 && i.childNodes.length === this.length ? e = {
            fragment: i
          } : e = f.buildFragment(a, this, k), h = e.fragment, h.childNodes.length === 1 ? g = h = h.firstChild : g = h.firstChild;
          if (g) {
            c = c && f.nodeName(g, "tr");
            for (var l = 0, m = this.length, n = m - 1; l < m; l++) {
              d.call(c ? bi(this[l], g) : this[l], e.cacheable || m > 1 && l < n ? f.clone(h, !0, !0) : h)
            }
          }
          k.length && f.each(k, bp)
        }
        return this
      }
    }), f.buildFragment = function(a, b, d) {
      var e, g, h, i, j = a[0];
      b && b[0] && (i = b[0].ownerDocument || b[0]), i.createDocumentFragment || (i = c), a.length === 1 && typeof j == "string" && j.length < 512 && i === c && j.charAt(0) === "<" && !bb.test(j) && (f.support.checkClone || !bd.test(j)) && (f.support.html5Clone || !bc.test(j)) && (g = !0, h = f.fragments[j], h && h !== 1 && (e = h)), e || (e = i.createDocumentFragment(), f.clean(a, i, e, d)), g && (f.fragments[j] = h ? e : 1);
      return {
        fragment: e,
        cacheable: g
      }
    }, f.fragments = {}, f.each({
      appendTo: "append",
      prependTo: "prepend",
      insertBefore: "before",
      insertAfter: "after",
      replaceAll: "replaceWith"
    }, function(a, b) {
      f.fn[a] = function(c) {
        var d = [],
          e = f(c),
          g = this.length === 1 && this[0].parentNode;
        if (g && g.nodeType === 11 && g.childNodes.length === 1 && e.length === 1) {
          e[b](this[0]);
          return this
        }
        for (var h = 0, i = e.length; h < i; h++) {
          var j = (h > 0 ? this.clone(!0) : this).get();
          f(e[h])[b](j), d = d.concat(j)
        }
        return this.pushStack(d, a, e.selector)
      }
    }), f.extend({
      clone: function(a, b, c) {
        var d, e, g, h = f.support.html5Clone || !bc.test("<" + a.nodeName) ? a.cloneNode(!0) : bo(a);
        if ((!f.support.noCloneEvent || !f.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !f.isXMLDoc(a)) {
          bk(a, h), d = bl(a), e = bl(h);
          for (g = 0; d[g]; ++g) {
            e[g] && bk(d[g], e[g])
          }
        }
        if (b) {
          bj(a, h);
          if (c) {
            d = bl(a), e = bl(h);
            for (g = 0; d[g]; ++g) {
              bj(d[g], e[g])
            }
          }
        }
        d = e = null;
        return h
      },
      clean: function(a, b, d, e) {
        var g;
        b = b || c, typeof b.createElement == "undefined" && (b = b.ownerDocument || b[0] && b[0].ownerDocument || c);
        var h = [],
          i;
        for (var j = 0, k;
             (k = a[j]) != null; j++) {
          typeof k == "number" && (k += "");
          if (!k) {
            continue
          }
          if (typeof k == "string") {
            if (!_.test(k)) {
              k = b.createTextNode(k)
            } else {
              k = k.replace(Y, "<$1></$2>");
              var l = (Z.exec(k) || ["", ""])[1].toLowerCase(),
                m = bg[l] || bg._default,
                n = m[0],
                o = b.createElement("div");
              b === c ? bh.appendChild(o) : U(b).appendChild(o), o.innerHTML = m[1] + k + m[2];
              while (n--) {
                o = o.lastChild
              }
              if (!f.support.tbody) {
                var p = $.test(k),
                  q = l === "table" && !p ? o.firstChild && o.firstChild.childNodes : m[1] === "<table>" && !p ? o.childNodes : [];
                for (i = q.length - 1; i >= 0; --i) {
                  f.nodeName(q[i], "tbody") && !q[i].childNodes.length && q[i].parentNode.removeChild(q[i])
                }
              }!f.support.leadingWhitespace && X.test(k) && o.insertBefore(b.createTextNode(X.exec(k)[0]), o.firstChild), k = o.childNodes
            }
          }
          var r;
          if (!f.support.appendChecked) {
            if (k[0] && typeof(r = k.length) == "number") {
              for (i = 0; i < r; i++) {
                bn(k[i])
              }
            } else {
              bn(k)
            }
          }
          k.nodeType ? h.push(k) : h = f.merge(h, k)
        }
        if (d) {
          g = function(a) {
            return !a.type || be.test(a.type)
          };
          for (j = 0; h[j]; j++) {
            if (e && f.nodeName(h[j], "script") && (!h[j].type || h[j].type.toLowerCase() === "text/javascript")) {
              e.push(h[j].parentNode ? h[j].parentNode.removeChild(h[j]) : h[j])
            } else {
              if (h[j].nodeType === 1) {
                var s = f.grep(h[j].getElementsByTagName("script"), g);
                h.splice.apply(h, [j + 1, 0].concat(s))
              }
              d.appendChild(h[j])
            }
          }
        }
        return h
      },
      cleanData: function(a) {
        var b, c, d = f.cache,
          e = f.event.special,
          g = f.support.deleteExpando;
        for (var h = 0, i;
             (i = a[h]) != null; h++) {
          if (i.nodeName && f.noData[i.nodeName.toLowerCase()]) {
            continue
          }
          c = i[f.expando];
          if (c) {
            b = d[c];
            if (b && b.events) {
              for (var j in b.events) {
                e[j] ? f.event.remove(i, j) : f.removeEvent(i, j, b.handle)
              }
              b.handle && (b.handle.elem = null)
            }
            g ? delete i[f.expando] : i.removeAttribute && i.removeAttribute(f.expando), delete d[c]
          }
        }
      }
    });
    var bq = /alpha\([^)]*\)/i,
      br = /opacity=([^)]*)/,
      bs = /([A-Z]|^ms)/g,
      bt = /^-?\d+(?:px)?$/i,
      bu = /^-?\d/,
      bv = /^([\-+])=([\-+.\de]+)/,
      bw = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
      bx = ["Left", "Right"],
      by = ["Top", "Bottom"],
      bz, bA, bB;
    f.fn.css = function(a, c) {
      if (arguments.length === 2 && c === b) {
        return this
      }
      return f.access(this, a, c, !0, function(a, c, d) {
        return d !== b ? f.style(a, c, d) : f.css(a, c)
      })
    }, f.extend({
      cssHooks: {
        opacity: {
          get: function(a, b) {
            if (b) {
              var c = bz(a, "opacity", "opacity");
              return c === "" ? "1" : c
            }
            return a.style.opacity
          }
        }
      },
      cssNumber: {
        fillOpacity: !0,
        fontWeight: !0,
        lineHeight: !0,
        opacity: !0,
        orphans: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0
      },
      cssProps: {
        "float": f.support.cssFloat ? "cssFloat" : "styleFloat"
      },
      style: function(a, c, d, e) {
        if (!!a && a.nodeType !== 3 && a.nodeType !== 8 && !!a.style) {
          var g, h, i = f.camelCase(c),
            j = a.style,
            k = f.cssHooks[i];
          c = f.cssProps[i] || i;
          if (d === b) {
            if (k && "get" in k && (g = k.get(a, !1, e)) !== b) {
              return g
            }
            return j[c]
          }
          h = typeof d, h === "string" && (g = bv.exec(d)) && (d = +(g[1] + 1) * +g[2] + parseFloat(f.css(a, c)), h = "number");
          if (d == null || h === "number" && isNaN(d)) {
            return
          }
          h === "number" && !f.cssNumber[i] && (d += "px");
          if (!k || !("set" in k) || (d = k.set(a, d)) !== b) {
            try {
              j[c] = d
            } catch (l) {}
          }
        }
      },
      css: function(a, c, d) {
        var e, g;
        c = f.camelCase(c), g = f.cssHooks[c], c = f.cssProps[c] || c, c === "cssFloat" && (c = "float");
        if (g && "get" in g && (e = g.get(a, !0, d)) !== b) {
          return e
        }
        if (bz) {
          return bz(a, c)
        }
      },
      swap: function(a, b, c) {
        var d = {};
        for (var e in b) {
          d[e] = a.style[e], a.style[e] = b[e]
        }
        c.call(a);
        for (e in b) {
          a.style[e] = d[e]
        }
      }
    }), f.curCSS = f.css, f.each(["height", "width"], function(a, b) {
      f.cssHooks[b] = {
        get: function(a, c, d) {
          var e;
          if (c) {
            if (a.offsetWidth !== 0) {
              return bC(a, b, d)
            }
            f.swap(a, bw, function() {
              e = bC(a, b, d)
            });
            return e
          }
        },
        set: function(a, b) {
          if (!bt.test(b)) {
            return b
          }
          b = parseFloat(b);
          if (b >= 0) {
            return b + "px"
          }
        }
      }
    }), f.support.opacity || (f.cssHooks.opacity = {
      get: function(a, b) {
        return br.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : ""
      },
      set: function(a, b) {
        var c = a.style,
          d = a.currentStyle,
          e = f.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : "",
          g = d && d.filter || c.filter || "";
        c.zoom = 1;
        if (b >= 1 && f.trim(g.replace(bq, "")) === "") {
          c.removeAttribute("filter");
          if (d && !d.filter) {
            return
          }
        }
        c.filter = bq.test(g) ? g.replace(bq, e) : g + " " + e
      }
    }), f(function() {
      f.support.reliableMarginRight || (f.cssHooks.marginRight = {
        get: function(a, b) {
          var c;
          f.swap(a, {
            display: "inline-block"
          }, function() {
            b ? c = bz(a, "margin-right", "marginRight") : c = a.style.marginRight
          });
          return c
        }
      })
    }), c.defaultView && c.defaultView.getComputedStyle && (bA = function(a, b) {
      var c, d, e;
      b = b.replace(bs, "-$1").toLowerCase(), (d = a.ownerDocument.defaultView) && (e = d.getComputedStyle(a, null)) && (c = e.getPropertyValue(b), c === "" && !f.contains(a.ownerDocument.documentElement, a) && (c = f.style(a, b)));
      return c
    }), c.documentElement.currentStyle && (bB = function(a, b) {
      var c, d, e, f = a.currentStyle && a.currentStyle[b],
        g = a.style;
      f === null && g && (e = g[b]) && (f = e), !bt.test(f) && bu.test(f) && (c = g.left, d = a.runtimeStyle && a.runtimeStyle.left, d && (a.runtimeStyle.left = a.currentStyle.left), g.left = b === "fontSize" ? "1em" : f || 0, f = g.pixelLeft + "px", g.left = c, d && (a.runtimeStyle.left = d));
      return f === "" ? "auto" : f
    }), bz = bA || bB, f.expr && f.expr.filters && (f.expr.filters.hidden = function(a) {
      var b = a.offsetWidth,
        c = a.offsetHeight;
      return b === 0 && c === 0 || !f.support.reliableHiddenOffsets && (a.style && a.style.display || f.css(a, "display")) === "none"
    }, f.expr.filters.visible = function(a) {
      return !f.expr.filters.hidden(a)
    });
    var bD = /%20/g,
      bE = /\[\]$/,
      bF = /\r?\n/g,
      bG = /#.*$/,
      bH = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
      bI = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
      bJ = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
      bK = /^(?:GET|HEAD)$/,
      bL = /^\/\//,
      bM = /\?/,
      bN = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
      bO = /^(?:select|textarea)/i,
      bP = /\s+/,
      bQ = /([?&])_=[^&]*/,
      bR = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
      bS = f.fn.load,
      bT = {},
      bU = {},
      bV, bW, bX = ["*/"] + ["*"];
    try {
      bV = e.href
    } catch (bY) {
      bV = c.createElement("a"), bV.href = "", bV = bV.href
    }
    bW = bR.exec(bV.toLowerCase()) || [], f.fn.extend({
      load: function(a, c, d) {
        if (typeof a != "string" && bS) {
          return bS.apply(this, arguments)
        }
        if (!this.length) {
          return this
        }
        var e = a.indexOf(" ");
        if (e >= 0) {
          var g = a.slice(e, a.length);
          a = a.slice(0, e)
        }
        var h = "GET";
        c && (f.isFunction(c) ? (d = c, c = b) : typeof c == "object" && (c = f.param(c, f.ajaxSettings.traditional), h = "POST"));
        var i = this;
        f.ajax({
          url: a,
          type: h,
          dataType: "html",
          data: c,
          complete: function(a, b, c) {
            c = a.responseText, a.isResolved() && (a.done(function(a) {
              c = a
            }), i.html(g ? f("<div>").append(c.replace(bN, "")).find(g) : c)), d && i.each(d, [c, b, a])
          }
        });
        return this
      },
      serialize: function() {
        return f.param(this.serializeArray())
      },
      serializeArray: function() {
        return this.map(function() {
          return this.elements ? f.makeArray(this.elements) : this
        }).filter(function() {
          return this.name && !this.disabled && (this.checked || bO.test(this.nodeName) || bI.test(this.type))
        }).map(function(a, b) {
          var c = f(this).val();
          return c == null ? null : f.isArray(c) ? f.map(c, function(a, c) {
            return {
              name: b.name,
              value: a.replace(bF, "\r\n")
            }
          }) : {
            name: b.name,
            value: c.replace(bF, "\r\n")
          }
        }).get()
      }
    }), f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(a, b) {
      f.fn[b] = function(a) {
        return this.on(b, a)
      }
    }), f.each(["get", "post"], function(a, c) {
      f[c] = function(a, d, e, g) {
        f.isFunction(d) && (g = g || e, e = d, d = b);
        return f.ajax({
          type: c,
          url: a,
          data: d,
          success: e,
          dataType: g
        })
      }
    }), f.extend({
      getScript: function(a, c) {
        return f.get(a, b, c, "script")
      },
      getJSON: function(a, b, c) {
        return f.get(a, b, c, "json")
      },
      ajaxSetup: function(a, b) {
        b ? b_(a, f.ajaxSettings) : (b = a, a = f.ajaxSettings), b_(a, b);
        return a
      },
      ajaxSettings: {
        url: bV,
        isLocal: bJ.test(bW[1]),
        global: !0,
        type: "GET",
        contentType: "application/x-www-form-urlencoded",
        processData: !0,
        async: !0,
        accepts: {
          xml: "application/xml, text/xml",
          html: "text/html",
          text: "text/plain",
          json: "application/json, text/javascript",
          "*": bX
        },
        contents: {
          xml: /xml/,
          html: /html/,
          json: /json/
        },
        responseFields: {
          xml: "responseXML",
          text: "responseText"
        },
        converters: {
          "* text": a.String,
          "text html": !0,
          "text json": f.parseJSON,
          "text xml": f.parseXML
        },
        flatOptions: {
          context: !0,
          url: !0
        }
      },
      ajaxPrefilter: bZ(bT),
      ajaxTransport: bZ(bU),
      ajax: function(a, c) {
        function w(a, c, l, m) {
          if (s !== 2) {
            s = 2, q && clearTimeout(q), p = b, n = m || "", v.readyState = a > 0 ? 4 : 0;
            var o, r, u, w = c,
              x = l ? cb(d, v, l) : b,
              y, z;
            if (a >= 200 && a < 300 || a === 304) {
              if (d.ifModified) {
                if (y = v.getResponseHeader("Last-Modified")) {
                  f.lastModified[k] = y
                }
                if (z = v.getResponseHeader("Etag")) {
                  f.etag[k] = z
                }
              }
              if (a === 304) {
                w = "notmodified", o = !0
              } else {
                try {
                  r = cc(d, x), w = "success", o = !0
                } catch (A) {
                  w = "parsererror", u = A
                }
              }
            } else {
              u = w;
              if (!w || a) {
                w = "error", a < 0 && (a = 0)
              }
            }
            v.status = a, v.statusText = "" + (c || w), o ? h.resolveWith(e, [r, w, v]) : h.rejectWith(e, [v, w, u]), v.statusCode(j), j = b, t && g.trigger("ajax" + (o ? "Success" : "Error"), [v, d, o ? r : u]), i.fireWith(e, [v, w]), t && (g.trigger("ajaxComplete", [v, d]), --f.active || f.event.trigger("ajaxStop"))
          }
        }
        typeof a == "object" && (c = a, a = b), c = c || {};
        var d = f.ajaxSetup({}, c),
          e = d.context || d,
          g = e !== d && (e.nodeType || e instanceof f) ? f(e) : f.event,
          h = f.Deferred(),
          i = f.Callbacks("once memory"),
          j = d.statusCode || {},
          k, l = {},
          m = {},
          n, o, p, q, r, s = 0,
          t, u, v = {
            readyState: 0,
            setRequestHeader: function(a, b) {
              if (!s) {
                var c = a.toLowerCase();
                a = m[c] = m[c] || a, l[a] = b
              }
              return this
            },
            getAllResponseHeaders: function() {
              return s === 2 ? n : null
            },
            getResponseHeader: function(a) {
              var c;
              if (s === 2) {
                if (!o) {
                  o = {};
                  while (c = bH.exec(n)) {
                    o[c[1].toLowerCase()] = c[2]
                  }
                }
                c = o[a.toLowerCase()]
              }
              return c === b ? null : c
            },
            overrideMimeType: function(a) {
              s || (d.mimeType = a);
              return this
            },
            abort: function(a) {
              a = a || "abort", p && p.abort(a), w(0, a);
              return this
            }
          };
        h.promise(v), v.success = v.done, v.error = v.fail, v.complete = i.add, v.statusCode = function(a) {
          if (a) {
            var b;
            if (s < 2) {
              for (b in a) {
                j[b] = [j[b], a[b]]
              }
            } else {
              b = a[v.status], v.then(b, b)
            }
          }
          return this
        }, d.url = ((a || d.url) + "").replace(bG, "").replace(bL, bW[1] + "//"), d.dataTypes = f.trim(d.dataType || "*").toLowerCase().split(bP), d.crossDomain == null && (r = bR.exec(d.url.toLowerCase()), d.crossDomain = !(!r || r[1] == bW[1] && r[2] == bW[2] && (r[3] || (r[1] === "http:" ? 80 : 443)) == (bW[3] || (bW[1] === "http:" ? 80 : 443)))), d.data && d.processData && typeof d.data != "string" && (d.data = f.param(d.data, d.traditional)), b$(bT, d, c, v);
        if (s === 2) {
          return !1
        }
        t = d.global, d.type = d.type.toUpperCase(), d.hasContent = !bK.test(d.type), t && f.active++ === 0 && f.event.trigger("ajaxStart");
        if (!d.hasContent) {
          d.data && (d.url += (bM.test(d.url) ? "&" : "?") + d.data, delete d.data), k = d.url;
          if (d.cache === !1) {
            var x = f.now(),
              y = d.url.replace(bQ, "$1_=" + x);
            d.url = y + (y === d.url ? (bM.test(d.url) ? "&" : "?") + "_=" + x : "")
          }
        }(d.data && d.hasContent && d.contentType !== !1 || c.contentType) && v.setRequestHeader("Content-Type", d.contentType), d.ifModified && (k = k || d.url, f.lastModified[k] && v.setRequestHeader("If-Modified-Since", f.lastModified[k]), f.etag[k] && v.setRequestHeader("If-None-Match", f.etag[k])), v.setRequestHeader("Accept", d.dataTypes[0] && d.accepts[d.dataTypes[0]] ? d.accepts[d.dataTypes[0]] + (d.dataTypes[0] !== "*" ? ", " + bX + "; q=0.01" : "") : d.accepts["*"]);
        for (u in d.headers) {
          v.setRequestHeader(u, d.headers[u])
        }
        if (d.beforeSend && (d.beforeSend.call(e, v, d) === !1 || s === 2)) {
          v.abort();
          return !1
        }
        for (u in {
          success: 1,
          error: 1,
          complete: 1
        }) {
          v[u](d[u])
        }
        p = b$(bU, d, c, v);
        if (!p) {
          w(-1, "No Transport")
        } else {
          v.readyState = 1, t && g.trigger("ajaxSend", [v, d]), d.async && d.timeout > 0 && (q = setTimeout(function() {
            v.abort("timeout")
          }, d.timeout));
          try {
            s = 1, p.send(l, w)
          } catch (z) {
            if (s < 2) {
              w(-1, z)
            } else {
              throw z
            }
          }
        }
        return v
      },
      param: function(a, c) {
        var d = [],
          e = function(a, b) {
            b = f.isFunction(b) ? b() : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
          };
        c === b && (c = f.ajaxSettings.traditional);
        if (f.isArray(a) || a.jquery && !f.isPlainObject(a)) {
          f.each(a, function() {
            e(this.name, this.value)
          })
        } else {
          for (var g in a) {
            ca(g, a[g], c, e)
          }
        }
        return d.join("&").replace(bD, "+")
      }
    }), f.extend({
      active: 0,
      lastModified: {},
      etag: {}
    });
    var cd = f.now(),
      ce = /(\=)\?(&|$)|\?\?/i;
    f.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function() {
        return f.expando + "_" + cd++
      }
    }), f.ajaxPrefilter("json jsonp", function(b, c, d) {
      var e = b.contentType === "application/x-www-form-urlencoded" && typeof b.data == "string";
      if (b.dataTypes[0] === "jsonp" || b.jsonp !== !1 && (ce.test(b.url) || e && ce.test(b.data))) {
        var g, h = b.jsonpCallback = f.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback,
          i = a[h],
          j = b.url,
          k = b.data,
          l = "$1" + h + "$2";
        b.jsonp !== !1 && (j = j.replace(ce, l), b.url === j && (e && (k = k.replace(ce, l)), b.data === k && (j += (/\?/.test(j) ? "&" : "?") + b.jsonp + "=" + h))), b.url = j, b.data = k, a[h] = function(a) {
          g = [a]
        }, d.always(function() {
          a[h] = i, g && f.isFunction(i) && a[h](g[0])
        }), b.converters["script json"] = function() {
          g || f.error(h + " was not called");
          return g[0]
        }, b.dataTypes[0] = "json";
        return "script"
      }
    }), f.ajaxSetup({
      accepts: {
        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
      },
      contents: {
        script: /javascript|ecmascript/
      },
      converters: {
        "text script": function(a) {
          f.globalEval(a);
          return a
        }
      }
    }), f.ajaxPrefilter("script", function(a) {
      a.cache === b && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1)
    }), f.ajaxTransport("script", function(a) {
      if (a.crossDomain) {
        var d, e = c.head || c.getElementsByTagName("head")[0] || c.documentElement;
        return {
          send: function(f, g) {
            d = c.createElement("script"), d.async = "async", a.scriptCharset && (d.charset = a.scriptCharset), d.src = a.url, d.onload = d.onreadystatechange = function(a, c) {
              if (c || !d.readyState || /loaded|complete/.test(d.readyState)) {
                d.onload = d.onreadystatechange = null, e && d.parentNode && e.removeChild(d), d = b, c || g(200, "success")
              }
            }, e.insertBefore(d, e.firstChild)
          },
          abort: function() {
            d && d.onload(0, 1)
          }
        }
      }
    });
    var cf = a.ActiveXObject ? function() {
        for (var a in ch) {
          ch[a](0, 1)
        }
      } : !1,
      cg = 0,
      ch;
    f.ajaxSettings.xhr = a.ActiveXObject ? function() {
      return !this.isLocal && ci() || cj()
    } : ci,
      function(a) {
        f.extend(f.support, {
          ajax: !!a,
          cors: !!a && "withCredentials" in a
        })
      }(f.ajaxSettings.xhr()), f.support.ajax && f.ajaxTransport(function(c) {
      if (!c.crossDomain || f.support.cors) {
        var d;
        return {
          send: function(e, g) {
            var h = c.xhr(),
              i, j;
            c.username ? h.open(c.type, c.url, c.async, c.username, c.password) : h.open(c.type, c.url, c.async);
            if (c.xhrFields) {
              for (j in c.xhrFields) {
                h[j] = c.xhrFields[j]
              }
            }
            c.mimeType && h.overrideMimeType && h.overrideMimeType(c.mimeType), !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest");
            try {
              for (j in e) {
                h.setRequestHeader(j, e[j])
              }
            } catch (k) {}
            h.send(c.hasContent && c.data || null), d = function(a, e) {
              var j, k, l, m, n;
              try {
                if (d && (e || h.readyState === 4)) {
                  d = b, i && (h.onreadystatechange = f.noop, cf && delete ch[i]);
                  if (e) {
                    h.readyState !== 4 && h.abort()
                  } else {
                    j = h.status, l = h.getAllResponseHeaders(), m = {}, n = h.responseXML, n && n.documentElement && (m.xml = n), m.text = h.responseText;
                    try {
                      k = h.statusText
                    } catch (o) {
                      k = ""
                    }!j && c.isLocal && !c.crossDomain ? j = m.text ? 200 : 404 : j === 1223 && (j = 204)
                  }
                }
              } catch (p) {
                e || g(-1, p)
              }
              m && g(j, k, m, l)
            }, !c.async || h.readyState === 4 ? d() : (i = ++cg, cf && (ch || (ch = {}, f(a).unload(cf)), ch[i] = d), h.onreadystatechange = d)
          },
          abort: function() {
            d && d(0, 1)
          }
        }
      }
    });
    var ck = {},
      cl, cm, cn = /^(?:toggle|show|hide)$/,
      co = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
      cp, cq = [
        ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
        ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
        ["opacity"]
      ],
      cr;
    f.fn.extend({
      show: function(a, b, c) {
        var d, e;
        if (a || a === 0) {
          return this.animate(cu("show", 3), a, b, c)
        }
        for (var g = 0, h = this.length; g < h; g++) {
          d = this[g], d.style && (e = d.style.display, !f._data(d, "olddisplay") && e === "none" && (e = d.style.display = ""), e === "" && f.css(d, "display") === "none" && f._data(d, "olddisplay", cv(d.nodeName)))
        }
        for (g = 0; g < h; g++) {
          d = this[g];
          if (d.style) {
            e = d.style.display;
            if (e === "" || e === "none") {
              d.style.display = f._data(d, "olddisplay") || ""
            }
          }
        }
        return this
      },
      hide: function(a, b, c) {
        if (a || a === 0) {
          return this.animate(cu("hide", 3), a, b, c)
        }
        var d, e, g = 0,
          h = this.length;
        for (; g < h; g++) {
          d = this[g], d.style && (e = f.css(d, "display"), e !== "none" && !f._data(d, "olddisplay") && f._data(d, "olddisplay", e))
        }
        for (g = 0; g < h; g++) {
          this[g].style && (this[g].style.display = "none")
        }
        return this
      },
      _toggle: f.fn.toggle,
      toggle: function(a, b, c) {
        var d = typeof a == "boolean";
        f.isFunction(a) && f.isFunction(b) ? this._toggle.apply(this, arguments) : a == null || d ? this.each(function() {
          var b = d ? a : f(this).is(":hidden");
          f(this)[b ? "show" : "hide"]()
        }) : this.animate(cu("toggle", 3), a, b, c);
        return this
      },
      fadeTo: function(a, b, c, d) {
        return this.filter(":hidden").css("opacity", 0).show().end().animate({
          opacity: b
        }, a, c, d)
      },
      animate: function(a, b, c, d) {
        function g() {
          e.queue === !1 && f._mark(this);
          var b = f.extend({}, e),
            c = this.nodeType === 1,
            d = c && f(this).is(":hidden"),
            g, h, i, j, k, l, m, n, o;
          b.animatedProperties = {};
          for (i in a) {
            g = f.camelCase(i), i !== g && (a[g] = a[i], delete a[i]), h = a[g], f.isArray(h) ? (b.animatedProperties[g] = h[1], h = a[g] = h[0]) : b.animatedProperties[g] = b.specialEasing && b.specialEasing[g] || b.easing || "swing";
            if (h === "hide" && d || h === "show" && !d) {
              return b.complete.call(this)
            }
            c && (g === "height" || g === "width") && (b.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY], f.css(this, "display") === "inline" && f.css(this, "float") === "none" && (!f.support.inlineBlockNeedsLayout || cv(this.nodeName) === "inline" ? this.style.display = "inline-block" : this.style.zoom = 1))
          }
          b.overflow != null && (this.style.overflow = "hidden");
          for (i in a) {
            j = new f.fx(this, b, i), h = a[i], cn.test(h) ? (o = f._data(this, "toggle" + i) || (h === "toggle" ? d ? "show" : "hide" : 0), o ? (f._data(this, "toggle" + i, o === "show" ? "hide" : "show"), j[o]()) : j[h]()) : (k = co.exec(h), l = j.cur(), k ? (m = parseFloat(k[2]), n = k[3] || (f.cssNumber[i] ? "" : "px"), n !== "px" && (f.style(this, i, (m || 1) + n), l = (m || 1) / j.cur() * l, f.style(this, i, l + n)), k[1] && (m = (k[1] === "-=" ? -1 : 1) * m + l), j.custom(l, m, n)) : j.custom(l, h, ""))
          }
          return !0
        }
        var e = f.speed(b, c, d);
        if (f.isEmptyObject(a)) {
          return this.each(e.complete, [!1])
        }
        a = f.extend({}, a);
        return e.queue === !1 ? this.each(g) : this.queue(e.queue, g)
      },
      stop: function(a, c, d) {
        typeof a != "string" && (d = c, c = a, a = b), c && a !== !1 && this.queue(a || "fx", []);
        return this.each(function() {
          function h(a, b, c) {
            var e = b[c];
            f.removeData(a, c, !0), e.stop(d)
          }
          var b, c = !1,
            e = f.timers,
            g = f._data(this);
          d || f._unmark(!0, this);
          if (a == null) {
            for (b in g) {
              g[b] && g[b].stop && b.indexOf(".run") === b.length - 4 && h(this, g, b)
            }
          } else {
            g[b = a + ".run"] && g[b].stop && h(this, g, b)
          }
          for (b = e.length; b--;) {
            e[b].elem === this && (a == null || e[b].queue === a) && (d ? e[b](!0) : e[b].saveState(), c = !0, e.splice(b, 1))
          }(!d || !c) && f.dequeue(this, a)
        })
      }
    }), f.each({
      slideDown: cu("show", 1),
      slideUp: cu("hide", 1),
      slideToggle: cu("toggle", 1),
      fadeIn: {
        opacity: "show"
      },
      fadeOut: {
        opacity: "hide"
      },
      fadeToggle: {
        opacity: "toggle"
      }
    }, function(a, b) {
      f.fn[a] = function(a, c, d) {
        return this.animate(b, a, c, d)
      }
    }), f.extend({
      speed: function(a, b, c) {
        var d = a && typeof a == "object" ? f.extend({}, a) : {
          complete: c || !c && b || f.isFunction(a) && a,
          duration: a,
          easing: c && b || b && !f.isFunction(b) && b
        };
        d.duration = f.fx.off ? 0 : typeof d.duration == "number" ? d.duration : d.duration in f.fx.speeds ? f.fx.speeds[d.duration] : f.fx.speeds._default;
        if (d.queue == null || d.queue === !0) {
          d.queue = "fx"
        }
        d.old = d.complete, d.complete = function(a) {
          f.isFunction(d.old) && d.old.call(this), d.queue ? f.dequeue(this, d.queue) : a !== !1 && f._unmark(this)
        };
        return d
      },
      easing: {
        linear: function(a, b, c, d) {
          return c + d * a
        },
        swing: function(a, b, c, d) {
          return (-Math.cos(a * Math.PI) / 2 + 0.5) * d + c
        }
      },
      timers: [],
      fx: function(a, b, c) {
        this.options = b, this.elem = a, this.prop = c, b.orig = b.orig || {}
      }
    }), f.fx.prototype = {
      update: function() {
        this.options.step && this.options.step.call(this.elem, this.now, this), (f.fx.step[this.prop] || f.fx.step._default)(this)
      },
      cur: function() {
        if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {
          return this.elem[this.prop]
        }
        var a, b = f.css(this.elem, this.prop);
        return isNaN(a = parseFloat(b)) ? !b || b === "auto" ? 0 : b : a
      },
      custom: function(a, c, d) {
        function h(a) {
          return e.step(a)
        }
        var e = this,
          g = f.fx;
        this.startTime = cr || cs(), this.end = c, this.now = this.start = a, this.pos = this.state = 0, this.unit = d || this.unit || (f.cssNumber[this.prop] ? "" : "px"), h.queue = this.options.queue, h.elem = this.elem, h.saveState = function() {
          e.options.hide && f._data(e.elem, "fxshow" + e.prop) === b && f._data(e.elem, "fxshow" + e.prop, e.start)
        }, h() && f.timers.push(h) && !cp && (cp = setInterval(g.tick, g.interval))
      },
      show: function() {
        var a = f._data(this.elem, "fxshow" + this.prop);
        this.options.orig[this.prop] = a || f.style(this.elem, this.prop), this.options.show = !0, a !== b ? this.custom(this.cur(), a) : this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur()), f(this.elem).show()
      },
      hide: function() {
        this.options.orig[this.prop] = f._data(this.elem, "fxshow" + this.prop) || f.style(this.elem, this.prop), this.options.hide = !0, this.custom(this.cur(), 0)
      },
      step: function(a) {
        var b, c, d, e = cr || cs(),
          g = !0,
          h = this.elem,
          i = this.options;
        if (a || e >= i.duration + this.startTime) {
          this.now = this.end, this.pos = this.state = 1, this.update(), i.animatedProperties[this.prop] = !0;
          for (b in i.animatedProperties) {
            i.animatedProperties[b] !== !0 && (g = !1)
          }
          if (g) {
            i.overflow != null && !f.support.shrinkWrapBlocks && f.each(["", "X", "Y"], function(a, b) {
              h.style["overflow" + b] = i.overflow[a]
            }), i.hide && f(h).hide();
            if (i.hide || i.show) {
              for (b in i.animatedProperties) {
                f.style(h, b, i.orig[b]), f.removeData(h, "fxshow" + b, !0), f.removeData(h, "toggle" + b, !0)
              }
            }
            d = i.complete, d && (i.complete = !1, d.call(h))
          }
          return !1
        }
        i.duration == Infinity ? this.now = e : (c = e - this.startTime, this.state = c / i.duration, this.pos = f.easing[i.animatedProperties[this.prop]](this.state, c, 0, 1, i.duration), this.now = this.start + (this.end - this.start) * this.pos), this.update();
        return !0
      }
    }, f.extend(f.fx, {
      tick: function() {
        var a, b = f.timers,
          c = 0;
        for (; c < b.length; c++) {
          a = b[c], !a() && b[c] === a && b.splice(c--, 1)
        }
        b.length || f.fx.stop()
      },
      interval: 13,
      stop: function() {
        clearInterval(cp), cp = null
      },
      speeds: {
        slow: 600,
        fast: 200,
        _default: 400
      },
      step: {
        opacity: function(a) {
          f.style(a.elem, "opacity", a.now)
        },
        _default: function(a) {
          a.elem.style && a.elem.style[a.prop] != null ? a.elem.style[a.prop] = a.now + a.unit : a.elem[a.prop] = a.now
        }
      }
    }), f.each(["width", "height"], function(a, b) {
      f.fx.step[b] = function(a) {
        f.style(a.elem, b, Math.max(0, a.now) + a.unit)
      }
    }), f.expr && f.expr.filters && (f.expr.filters.animated = function(a) {
      return f.grep(f.timers, function(b) {
        return a === b.elem
      }).length
    });
    var cw = /^t(?:able|d|h)$/i,
      cx = /^(?:body|html)$/i;
    "getBoundingClientRect" in c.documentElement ? f.fn.offset = function(a) {
      var b = this[0],
        c;
      if (a) {
        return this.each(function(b) {
          f.offset.setOffset(this, a, b)
        })
      }
      if (!b || !b.ownerDocument) {
        return null
      }
      if (b === b.ownerDocument.body) {
        return f.offset.bodyOffset(b)
      }
      try {
        c = b.getBoundingClientRect()
      } catch (d) {}
      var e = b.ownerDocument,
        g = e.documentElement;
      if (!c || !f.contains(g, b)) {
        return c ? {
          top: c.top,
          left: c.left
        } : {
          top: 0,
          left: 0
        }
      }
      var h = e.body,
        i = cy(e),
        j = g.clientTop || h.clientTop || 0,
        k = g.clientLeft || h.clientLeft || 0,
        l = i.pageYOffset || f.support.boxModel && g.scrollTop || h.scrollTop,
        m = i.pageXOffset || f.support.boxModel && g.scrollLeft || h.scrollLeft,
        n = c.top + l - j,
        o = c.left + m - k;
      return {
        top: n,
        left: o
      }
    } : f.fn.offset = function(a) {
      var b = this[0];
      if (a) {
        return this.each(function(b) {
          f.offset.setOffset(this, a, b)
        })
      }
      if (!b || !b.ownerDocument) {
        return null
      }
      if (b === b.ownerDocument.body) {
        return f.offset.bodyOffset(b)
      }
      var c, d = b.offsetParent,
        e = b,
        g = b.ownerDocument,
        h = g.documentElement,
        i = g.body,
        j = g.defaultView,
        k = j ? j.getComputedStyle(b, null) : b.currentStyle,
        l = b.offsetTop,
        m = b.offsetLeft;
      while ((b = b.parentNode) && b !== i && b !== h) {
        if (f.support.fixedPosition && k.position === "fixed") {
          break
        }
        c = j ? j.getComputedStyle(b, null) : b.currentStyle, l -= b.scrollTop, m -= b.scrollLeft, b === d && (l += b.offsetTop, m += b.offsetLeft, f.support.doesNotAddBorder && (!f.support.doesAddBorderForTableAndCells || !cw.test(b.nodeName)) && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), e = d, d = b.offsetParent), f.support.subtractsBorderForOverflowNotVisible && c.overflow !== "visible" && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), k = c
      }
      if (k.position === "relative" || k.position === "static") {
        l += i.offsetTop, m += i.offsetLeft
      }
      f.support.fixedPosition && k.position === "fixed" && (l += Math.max(h.scrollTop, i.scrollTop), m += Math.max(h.scrollLeft, i.scrollLeft));
      return {
        top: l,
        left: m
      }
    }, f.offset = {
      bodyOffset: function(a) {
        var b = a.offsetTop,
          c = a.offsetLeft;
        f.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(f.css(a, "marginTop")) || 0, c += parseFloat(f.css(a, "marginLeft")) || 0);
        return {
          top: b,
          left: c
        }
      },
      setOffset: function(a, b, c) {
        var d = f.css(a, "position");
        d === "static" && (a.style.position = "relative");
        var e = f(a),
          g = e.offset(),
          h = f.css(a, "top"),
          i = f.css(a, "left"),
          j = (d === "absolute" || d === "fixed") && f.inArray("auto", [h, i]) > -1,
          k = {},
          l = {},
          m, n;
        j ? (l = e.position(), m = l.top, n = l.left) : (m = parseFloat(h) || 0, n = parseFloat(i) || 0), f.isFunction(b) && (b = b.call(a, c, g)), b.top != null && (k.top = b.top - g.top + m), b.left != null && (k.left = b.left - g.left + n), "using" in b ? b.using.call(a, k) : e.css(k)
      }
    }, f.fn.extend({
      position: function() {
        if (!this[0]) {
          return null
        }
        var a = this[0],
          b = this.offsetParent(),
          c = this.offset(),
          d = cx.test(b[0].nodeName) ? {
            top: 0,
            left: 0
          } : b.offset();
        c.top -= parseFloat(f.css(a, "marginTop")) || 0, c.left -= parseFloat(f.css(a, "marginLeft")) || 0, d.top += parseFloat(f.css(b[0], "borderTopWidth")) || 0, d.left += parseFloat(f.css(b[0], "borderLeftWidth")) || 0;
        return {
          top: c.top - d.top,
          left: c.left - d.left
        }
      },
      offsetParent: function() {
        return this.map(function() {
          var a = this.offsetParent || c.body;
          while (a && !cx.test(a.nodeName) && f.css(a, "position") === "static") {
            a = a.offsetParent
          }
          return a
        })
      }
    }), f.each(["Left", "Top"], function(a, c) {
      var d = "scroll" + c;
      f.fn[d] = function(c) {
        var e, g;
        if (c === b) {
          e = this[0];
          if (!e) {
            return null
          }
          g = cy(e);
          return g ? "pageXOffset" in g ? g[a ? "pageYOffset" : "pageXOffset"] : f.support.boxModel && g.document.documentElement[d] || g.document.body[d] : e[d]
        }
        return this.each(function() {
          g = cy(this), g ? g.scrollTo(a ? f(g).scrollLeft() : c, a ? c : f(g).scrollTop()) : this[d] = c
        })
      }
    }), f.each(["Height", "Width"], function(a, c) {
      var d = c.toLowerCase();
      f.fn["inner" + c] = function() {
        var a = this[0];
        return a ? a.style ? parseFloat(f.css(a, d, "padding")) : this[d]() : null
      }, f.fn["outer" + c] = function(a) {
        var b = this[0];
        return b ? b.style ? parseFloat(f.css(b, d, a ? "margin" : "border")) : this[d]() : null
      }, f.fn[d] = function(a) {
        var e = this[0];
        if (!e) {
          return a == null ? null : this
        }
        if (f.isFunction(a)) {
          return this.each(function(b) {
            var c = f(this);
            c[d](a.call(this, b, c[d]()))
          })
        }
        if (f.isWindow(e)) {
          var g = e.document.documentElement["client" + c],
            h = e.document.body;
          return e.document.compatMode === "CSS1Compat" && g || h && h["client" + c] || g
        }
        if (e.nodeType === 9) {
          return Math.max(e.documentElement["client" + c], e.body["scroll" + c], e.documentElement["scroll" + c], e.body["offset" + c], e.documentElement["offset" + c])
        }
        if (a === b) {
          var i = f.css(e, d),
            j = parseFloat(i);
          return f.isNumeric(j) ? j : i
        }
        return this.css(d, typeof a == "string" ? a : a + "px")
      }
    }), a.jQuery = a.$ = f, typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function() {
      return f
    })
  })(window)
};
if (!document.querySelectorAll) {
  document.querySelectorAll = function(a) {
    return $(a)
  }
}
if (!document.querySelector || kony.appinit.isIE8) {
  document.querySelector = function(a) {
    var b = $(a);
    return (b && b[0]) || null
  }
}
if (typeof window.localStorage == "undefined") {
  (function() {
    var a = function(d) {
      var f = {};
      _storage_elm = null;
      _storage_service = {
        lStorage: "{}"
      };

      function b() {
        try {
          _storage_service.lStorage = JSON.stringify(f);
          if (_storage_elm) {
            _storage_elm.setAttribute("lStorage", _storage_service.lStorage);
            _storage_elm.save("lStorage")
          }
        } catch (h) {}
      }

      function g() {
        _storage_elm = document.createElement("link");
        if (_storage_elm.addBehavior) {
          _storage_elm.style.behavior = "url(#default#userData)";
          document.getElementsByTagName("head")[0].appendChild(_storage_elm);
          _storage_elm.load("lStorage");
          var h = "{}";
          try {
            h = _storage_elm.getAttribute("lStorage")
          } catch (i) {}
          _storage_service.lStorage = h
        } else {
          return
        }
        e()
      }

      function e() {
        if (_storage_service.lStorage) {
          try {
            f = JSON.parse(String(_storage_service.lStorage))
          } catch (h) {
            _storage_service.lStorage = "{}"
          }
        }
      }
      g();
      return {
        clear: function() {
          f = {};
          b()
        },
        getItem: function(h) {
          return f[h]
        },
        key: function(j) {
          var l = 0;
          for (var h in f) {
            if (l == j) {
              return h
            } else {
              l++
            }
          }
          return null
        },
        removeItem: function(h) {
          if (h in f) {
            delete f[h];
            b()
          }
        },
        setItem: function(h, i) {
          f[h] = i;
          b()
        }
      }
    };
    if (typeof window.localStorage == "undefined") {
      window.localStorage = new a()
    }
  })()
}
if (typeof sessionStorage === "undefined") {
  (function(j) {
    var k = j;
    try {
      while (k !== k.top) {
        k = k.top
      }
    } catch (i) {}
    var f = (function(e, n) {
      return {
        decode: function(o, p) {
          return this.encode(o, p)
        },
        encode: function(y, u) {
          for (var p = y.length, w = u.length, o = [], x = [], v = 0, s = 0, r = 0, q = 0, t; v < 256; ++v) {
            x[v] = v
          }
          for (v = 0; v < 256; ++v) {
            s = (s + (t = x[v]) + y.charCodeAt(v % p)) % 256;
            x[v] = x[s];
            x[s] = t
          }
          for (s = 0; r < w; ++r) {
            v = r % 256;
            s = (s + (t = x[v])) % 256;
            p = x[v] = x[s];
            x[s] = t;
            o[q++] = e(u.charCodeAt(r) ^ x[(p + t) % 256])
          }
          return o.join("")
        },
        key: function(q) {
          for (var p = 0, o = []; p < q; ++p) {
            o[p] = e(1 + ((n() * 255) << 0))
          }
          return o.join("")
        }
      }
    })(j.String.fromCharCode, j.Math.random);
    var a = (function(n) {
      function o(r, q, p) {
        this._i = (this._data = p || "").length;
        if (this._key = q) {
          this._storage = r
        } else {
          this._storage = {
            _key: r || ""
          };
          this._key = "_key"
        }
      }
      o.prototype.c = String.fromCharCode(1);
      o.prototype._c = ".";
      o.prototype.clear = function() {
        this._storage[this._key] = this._data
      };
      o.prototype.del = function(p) {
        var q = this.get(p);
        if (q !== null) {
          this._storage[this._key] = this._storage[this._key].replace(e.call(this, p, q), "")
        }
      };
      o.prototype.escape = n.escape;
      o.prototype.get = function(q) {
        var s = this._storage[this._key],
          t = this.c,
          p = s.indexOf(q = t.concat(this._c, this.escape(q), t, t), this._i),
          r = null;
        if (-1 < p) {
          p = s.indexOf(t, p + q.length - 1) + 1;
          r = s.substring(p, p = s.indexOf(t, p));
          r = this.unescape(s.substr(++p, r))
        }
        return r
      };
      o.prototype.key = function() {
        var u = this._storage[this._key],
          v = this.c,
          q = v + this._c,
          r = this._i,
          t = [],
          s = 0,
          p = 0;
        while (-1 < (r = u.indexOf(q, r))) {
          t[p++] = this.unescape(u.substring(r += 2, s = u.indexOf(v, r)));
          r = u.indexOf(v, s) + 2;
          s = u.indexOf(v, r);
          r = 1 + s + 1 * u.substring(r, s)
        }
        return t
      };
      o.prototype.set = function(p, q) {
        this.del(p);
        this._storage[this._key] += e.call(this, p, q)
      };
      o.prototype.unescape = n.unescape;

      function e(p, q) {
        var r = this.c;
        return r.concat(this._c, this.escape(p), r, r, (q = this.escape(q)).length, r, q)
      }
      return o
    })(j);
    if (Object.prototype.toString.call(j.opera) === "[object Opera]") {
      history.navigationMode = "compatible";
      a.prototype.escape = j.encodeURIComponent;
      a.prototype.unescape = j.decodeURIComponent
    }

    function l() {
      function r() {
        s.cookie = ["sessionStorage=" + j.encodeURIComponent(h = f.key(128))].join(";");
        g = f.encode(h, g);
        a = new a(k, "name", k.name)
      }
      var e = k.name,
        s = k.document,
        n = /\bsessionStorage\b=([^;]+)(;|$)/,
        p = n.exec(s.cookie),
        q;
      if (p) {
        h = j.decodeURIComponent(p[1]);
        g = f.encode(h, g);
        a = new a(k, "name");
        for (var t = a.key(), q = 0, o = t.length, u = {}; q < o; ++q) {
          if ((p = t[q]).indexOf(g) === 0) {
            b.push(p);
            u[p] = a.get(p);
            a.del(p)
          }
        }
        a = new a.constructor(k, "name", k.name);
        if (0 < (this.length = b.length)) {
          for (q = 0, o = b.length, c = a.c, p = []; q < o; ++q) {
            p[q] = c.concat(a._c, a.escape(t = b[q]), c, c, (t = a.escape(u[t])).length, c, t)
          }
          k.name += p.join("")
        }
      } else {
        r();
        if (!n.exec(s.cookie)) {
          b = null
        }
      }
    }
    l.prototype = {
      length: 0,
      key: function(e) {
        if (typeof e !== "number" || e < 0 || b.length <= e) {
          throw "Invalid argument"
        }
        return b[e]
      },
      getItem: function(e) {
        e = g + e;
        if (d.call(m, e)) {
          return m[e]
        }
        var n = a.get(e);
        if (n !== null) {
          n = m[e] = f.decode(h, n)
        }
        return n
      },
      setItem: function(e, n) {
        this.removeItem(e);
        e = g + e;
        a.set(e, f.encode(h, m[e] = "" + n));
        this.length = b.push(e)
      },
      removeItem: function(e) {
        var n = a.get(e = g + e);
        if (n !== null) {
          delete m[e];
          a.del(e);
          this.length = b.remove(e)
        }
      },
      clear: function() {
        a.clear();
        m = {};
        b.length = 0
      }
    };
    var g = k.document.domain,
      b = [],
      m = {},
      d = m.hasOwnProperty,
      h;
    b.remove = function(n) {
      var e = this.indexOf(n);
      if (-1 < e) {
        this.splice(e, 1)
      }
      return this.length
    };
    if (!b.indexOf) {
      b.indexOf = function(o) {
        for (var e = 0, n = this.length; e < n; ++e) {
          if (this[e] === o) {
            return e
          }
        }
        return -1
      }
    }
    if (k.sessionStorage) {
      l = function() {};
      l.prototype = k.sessionStorage
    }
    l = new l;
    if (b !== null) {
      j.sessionStorage = l
    }
  })(window)
};
kony.worker = {
  WorkerThread: function(h, a, g) {
    if (h === undefined || h === null || h === "") {
      throw new KonyError(3001, "WorkerThreadError", "WorkerThread: MissingMandatoryParameter. Failed to construct WorkerThread")
    }
    if (typeof h !== "string") {
      throw new KonyError(3002, "WorkerThreadError", "WorkerThread: InvalidParameter. Invalid script name")
    }
    var f = this,
      c = $KG.platformver + "appjs/";
    if (typeof nestedWorker === "undefined") {
      this.oWorker = new Worker(c + "konyworkerinit.js")
    } else {
      this.oWorker = new Worker("konyworkerinit.js")
    }
    var e = $KG.appmode || "";
    var j = $KG.appid || "";
    var i = $KG.skipproxy || "";
    var b = $KG.rcid || "";
    var k = false;
    var d = kony.os.userAgent();
    if (typeof $KG.functionalModules !== "undefined") {
      k = true
    }
    this.oWorker.postMessage({
      moduleName: h,
      contextPath: c,
      kgAppMode: e,
      kgAppID: j,
      kgSkipProxy: i,
      kgRcid: b,
      isFMSupported: k,
      kgUserAgent: d
    }), f.defaultListener = a || function(l) {
        kony.print("Data: " + l.data)
      };
    f.defaultErrorListener = g || function(l) {
        kony.print(l.message + " : in file - " + l.filename + " at location :" + l.lineno + "," + l.colno)
      };
    this.oWorker.addEventListener("error", f.defaultErrorListener)
  },
  hasWorkerThreadSupport: function() {
    if (typeof Worker === "undefined") {
      return false
    }
    return true
  }
};
kony.worker.WorkerThread.prototype.postMessage = function(a) {
  if (a === undefined || a === null || a === "") {
    throw new KonyError(3001, "WorkerThreadError", "postMessage: MissingMandatoryParameter. Message undefined")
  }
  if (typeof a === "number" || typeof a === "boolean" || typeof a === "function") {
    throw new KonyError(3002, "WorkerThreadError", "postMessage: InvalidParameter. Invalid Message")
  }
  try {
    Worker.prototype.postMessage.call(this.oWorker, a)
  } catch (b) {
    kony.print("Error occured in WorkerThread postMessage: " + b.message);
    throw new KonyError(3002, "WorkerThreadError", "postMessage: InvalidParameter. Invalid Message")
  }
};
kony.worker.WorkerThread.prototype.terminate = function() {
  Worker.prototype.terminate.call(this.oWorker)
};
kony.worker.WorkerThread.prototype.addEventListener = function(b, a) {
  if (arguments.length < 2) {
    throw new KonyError(3001, "WorkerThreadError", "addEventListener: MissingMandatoryParameter. Mandatory arguments missing")
  }
  if (typeof arguments[0] != "string" || typeof arguments[1] != "function") {
    throw new KonyError(3002, "WorkerThreadError", "addEventListener: InvalidParameter. Invalid arguments")
  }
  if (b != "message" && b != "error") {
    throw new KonyError(3002, "WorkerThreadError", "addEventListener: InvalidParameter. Invalid arguments")
  }
  a = a ? a : this.defaultListener;
  Worker.prototype.addEventListener.call(this.oWorker, b, a, false);
  if ("error" === b) {
    Worker.prototype.removeEventListener.call(this.oWorker, "error", this.defaultErrorListener, false)
  }
};
kony.worker.WorkerThread.prototype.removeEventListener = function(b, a) {
  if (arguments.length < 2) {
    throw new KonyError(3001, "WorkerThreadError", "removeEventListener: MissingMandatoryParameter. Mandatory arguments missing")
  }
  if (typeof arguments[0] != "string" || typeof arguments[1] != "function") {
    throw new KonyError(3002, "WorkerThreadError", "removeEventListener: InvalidParameter. Invalid arguments")
  }
  if (b != "message" && b != "error") {
    throw new KonyError(3002, "WorkerThreadError", "removeEventListener: InvalidParameter. Invalid arguments")
  }
  Worker.prototype.removeEventListener.call(this.oWorker, b, a, false);
  if ("error" === b) {
    Worker.prototype.addEventListener.call(this.oWorker, "error", this.defaultErrorListener, false)
  }
};
var requirejs, require, define;
(function(ba) {
  function G(b) {
    return "[object Function]" === K.call(b)
  }

  function H(b) {
    return "[object Array]" === K.call(b)
  }

  function v(b, c) {
    if (b) {
      var d;
      for (d = 0; d < b.length && (!b[d] || !c(b[d], d, b)); d += 1) {}
    }
  }

  function T(b, c) {
    if (b) {
      var d;
      for (d = b.length - 1; - 1 < d && (!b[d] || !c(b[d], d, b)); d -= 1) {}
    }
  }

  function t(b, c) {
    return fa.call(b, c)
  }

  function m(b, c) {
    return t(b, c) && b[c]
  }

  function B(b, c) {
    for (var d in b) {
      if (t(b, d) && c(b[d], d)) {
        break
      }
    }
  }

  function U(b, c, d, e) {
    c && B(c, function(c, g) {
      if (d || !t(b, g)) {
        e && "object" === typeof c && c && !H(c) && !G(c) && !(c instanceof RegExp) ? (b[g] || (b[g] = {}), U(b[g], c, d, e)) : b[g] = c
      }
    });
    return b
  }

  function u(b, c) {
    return function() {
      return c.apply(b, arguments)
    }
  }

  function ca(b) {
    throw b
  }

  function da(b) {
    if (!b) {
      return b
    }
    var c = ba;
    v(b.split("."), function(b) {
      c = c[b]
    });
    return c
  }

  function C(b, c, d, e) {
    c = Error(c + "\nhttp://requirejs.org/docs/errors.html#" + b);
    c.requireType = b;
    c.requireModules = e;
    d && (c.originalError = d);
    return c
  }

  function ga(b) {
    function c(a, k, b) {
      var f, l, c, d, e, g, i, p, k = k && k.split("/"),
        h = j.map,
        n = h && h["*"];
      if (a) {
        a = a.split("/");
        l = a.length - 1;
        j.nodeIdCompat && Q.test(a[l]) && (a[l] = a[l].replace(Q, ""));
        "." === a[0].charAt(0) && k && (l = k.slice(0, k.length - 1), a = l.concat(a));
        l = a;
        for (c = 0; c < l.length; c++) {
          if (d = l[c], "." === d) {
            l.splice(c, 1), c -= 1
          } else {
            if (".." === d && !(0 === c || 1 == c && ".." === l[2] || ".." === l[c - 1]) && 0 < c) {
              l.splice(c - 1, 2), c -= 2
            }
          }
        }
        a = a.join("/")
      }
      if (b && h && (k || n)) {
        l = a.split("/");
        c = l.length;
        a: for (; 0 < c; c -= 1) {
          e = l.slice(0, c).join("/");
          if (k) {
            for (d = k.length; 0 < d; d -= 1) {
              if (b = m(h, k.slice(0, d).join("/"))) {
                if (b = m(b, e)) {
                  f = b;
                  g = c;
                  break a
                }
              }
            }
          }!i && (n && m(n, e)) && (i = m(n, e), p = c)
        }!f && i && (f = i, g = p);
        f && (l.splice(0, g, f), a = l.join("/"))
      }
      return (f = m(j.pkgs, a)) ? f : a
    }

    function d(a) {
      z && v(document.getElementsByTagName("script"), function(k) {
        if (k.getAttribute("data-requiremodule") === a && k.getAttribute("data-requirecontext") === i.contextName) {
          return k.parentNode.removeChild(k), !0
        }
      })
    }

    function e(a) {
      var k = m(j.paths, a);
      if (k && H(k) && 1 < k.length) {
        return k.shift(), i.require.undef(a), i.makeRequire(null, {
          skipMap: !0
        })([a]), !0
      }
    }

    function n(a) {
      var k, c = a ? a.indexOf("!") : -1; - 1 < c && (k = a.substring(0, c), a = a.substring(c + 1, a.length));
      return [k, a]
    }

    function p(a, k, b, f) {
      var l, d, e = null,
        g = k ? k.name : null,
        j = a,
        p = !0,
        h = "";
      a || (p = !1, a = "_@r" + (K += 1));
      a = n(a);
      e = a[0];
      a = a[1];
      e && (e = c(e, g, f), d = m(r, e));
      a && (e ? h = d && d.normalize ? d.normalize(a, function(a) {
        return c(a, g, f)
      }) : -1 === a.indexOf("!") ? c(a, g, f) : a : (h = c(a, g, f), a = n(h), e = a[0], h = a[1], b = !0, l = i.nameToUrl(h)));
      b = e && !d && !b ? "_unnormalized" + (O += 1) : "";
      return {
        prefix: e,
        name: h,
        parentMap: k,
        unnormalized: !!b,
        url: l,
        originalName: j,
        isDefine: p,
        id: (e ? e + "!" + h : h) + b
      }
    }

    function s(a) {
      var k = a.id,
        b = m(h, k);
      b || (b = h[k] = new i.Module(a));
      return b
    }

    function q(a, k, b) {
      var f = a.id,
        c = m(h, f);
      if (t(r, f) && (!c || c.defineEmitComplete)) {
        "defined" === k && b(r[f])
      } else {
        if (c = s(a), c.error && "error" === k) {
          b(c.error)
        } else {
          c.on(k, b)
        }
      }
    }

    function w(a, b) {
      var c = a.requireModules,
        f = !1;
      if (b) {
        b(a)
      } else {
        if (v(c, function(b) {
            if (b = m(h, b)) {
              b.error = a, b.events.error && (f = !0, b.emit("error", a))
            }
          }), !f) {
          g.onError(a)
        }
      }
    }

    function x() {
      R.length && (ha.apply(A, [A.length, 0].concat(R)), R = [])
    }

    function y(a) {
      delete h[a];
      delete V[a]
    }

    function F(a, b, c) {
      var f = a.map.id;
      a.error ? a.emit("error", a.error) : (b[f] = !0, v(a.depMaps, function(f, d) {
        var e = f.id,
          g = m(h, e);
        g && (!a.depMatched[d] && !c[e]) && (m(b, e) ? (a.defineDep(d, r[e]), a.check()) : F(g, b, c))
      }), c[f] = !0)
    }

    function D() {
      var a, b, c = (a = 1000 * j.waitSeconds) && i.startTime + a < (new Date).getTime(),
        f = [],
        l = [],
        g = !1,
        h = !0;
      if (!W) {
        W = !0;
        B(V, function(a) {
          var i = a.map,
            j = i.id;
          if (a.enabled && (i.isDefine || l.push(a), !a.error)) {
            if (!a.inited && c) {
              e(j) ? g = b = !0 : (f.push(j), d(j))
            } else {
              if (!a.inited && (a.fetched && i.isDefine) && (g = !0, !i.prefix)) {
                return h = !1
              }
            }
          }
        });
        if (c && f.length) {
          return a = C("timeout", "Load timeout for modules: " + f, null, f), a.contextName = i.contextName, w(a)
        }
        h && v(l, function(a) {
          F(a, {}, {})
        });
        if ((!c || b) && g) {
          if ((z || ea) && !X) {
            X = setTimeout(function() {
              X = 0;
              D()
            }, 50)
          }
        }
        W = !1
      }
    }

    function E(a) {
      t(r, a[0]) || s(p(a[0], null, !0)).init(a[1], a[2])
    }

    function I(a) {
      var a = a.currentTarget || a.srcElement,
        b = i.onScriptLoad;
      a.detachEvent && !Y ? a.detachEvent("onreadystatechange", b) : a.removeEventListener("load", b, !1);
      b = i.onScriptError;
      (!a.detachEvent || Y) && a.removeEventListener("error", b, !1);
      return {
        node: a,
        id: a && a.getAttribute("data-requiremodule")
      }
    }

    function J() {
      var a;
      for (x(); A.length;) {
        a = A.shift();
        if (null === a[0]) {
          return w(C("mismatch", "Mismatched anonymous define() module: " + a[a.length - 1]))
        }
        E(a)
      }
    }
    var W, Z, i, L, X, j = {
        waitSeconds: 7,
        baseUrl: "./",
        paths: {},
        bundles: {},
        pkgs: {},
        shim: {},
        config: {}
      },
      h = {},
      V = {},
      $ = {},
      A = [],
      r = {},
      S = {},
      aa = {},
      K = 1,
      O = 1;
    L = {
      require: function(a) {
        return a.require ? a.require : a.require = i.makeRequire(a.map)
      },
      exports: function(a) {
        a.usingExports = !0;
        if (a.map.isDefine) {
          return a.exports ? r[a.map.id] = a.exports : a.exports = r[a.map.id] = {}
        }
      },
      module: function(a) {
        return a.module ? a.module : a.module = {
          id: a.map.id,
          uri: a.map.url,
          config: function() {
            return m(j.config, a.map.id) || {}
          },
          exports: a.exports || (a.exports = {})
        }
      }
    };
    Z = function(a) {
      this.events = m($, a.id) || {};
      this.map = a;
      this.shim = m(j.shim, a.id);
      this.depExports = [];
      this.depMaps = [];
      this.depMatched = [];
      this.pluginMaps = {};
      this.depCount = 0
    };
    Z.prototype = {
      init: function(a, b, c, f) {
        f = f || {};
        if (!this.inited) {
          this.factory = b;
          if (c) {
            this.on("error", c)
          } else {
            this.events.error && (c = u(this, function(a) {
              this.emit("error", a)
            }))
          }
          this.depMaps = a && a.slice(0);
          this.errback = c;
          this.inited = !0;
          this.ignore = f.ignore;
          f.enabled || this.enabled ? this.enable() : this.check()
        }
      },
      defineDep: function(a, b) {
        this.depMatched[a] || (this.depMatched[a] = !0, this.depCount -= 1, this.depExports[a] = b)
      },
      fetch: function() {
        if (!this.fetched) {
          this.fetched = !0;
          i.startTime = (new Date).getTime();
          var a = this.map;
          if (this.shim) {
            i.makeRequire(this.map, {
              enableBuildCallback: !0
            })(this.shim.deps || [], u(this, function() {
              return a.prefix ? this.callPlugin() : this.load()
            }))
          } else {
            return a.prefix ? this.callPlugin() : this.load()
          }
        }
      },
      load: function() {
        var a = this.map.url;
        S[a] || (S[a] = !0, i.load(this.map.id, a))
      },
      check: function() {
        if (this.enabled && !this.enabling) {
          var a, b, c = this.map.id;
          b = this.depExports;
          var f = this.exports,
            l = this.factory;
          if (this.inited) {
            if (this.error) {
              this.emit("error", this.error)
            } else {
              if (!this.defining) {
                this.defining = !0;
                if (1 > this.depCount && !this.defined) {
                  if (G(l)) {
                    if (this.events.error && this.map.isDefine || g.onError !== ca) {
                      try {
                        f = i.execCb(c, l, b, f)
                      } catch (d) {
                        a = d
                      }
                    } else {
                      f = i.execCb(c, l, b, f)
                    }
                    this.map.isDefine && void 0 === f && ((b = this.module) ? f = b.exports : this.usingExports && (f = this.exports));
                    if (a) {
                      return a.requireMap = this.map, a.requireModules = this.map.isDefine ? [this.map.id] : null, a.requireType = this.map.isDefine ? "define" : "require", w(this.error = a)
                    }
                  } else {
                    f = l
                  }
                  this.exports = f;
                  if (this.map.isDefine && !this.ignore && (r[c] = f, g.onResourceLoad)) {
                    g.onResourceLoad(i, this.map, this.depMaps)
                  }
                  y(c);
                  this.defined = !0
                }
                this.defining = !1;
                this.defined && !this.defineEmitted && (this.defineEmitted = !0, this.emit("defined", this.exports), this.defineEmitComplete = !0)
              }
            }
          } else {
            this.fetch()
          }
        }
      },
      callPlugin: function() {
        var a = this.map,
          b = a.id,
          d = p(a.prefix);
        this.depMaps.push(d);
        q(d, "defined", u(this, function(f) {
          var l, d;
          d = m(aa, this.map.id);
          var e = this.map.name,
            P = this.map.parentMap ? this.map.parentMap.name : null,
            n = i.makeRequire(a.parentMap, {
              enableBuildCallback: !0
            });
          if (this.map.unnormalized) {
            if (f.normalize && (e = f.normalize(e, function(a) {
                  return c(a, P, !0)
                }) || ""), f = p(a.prefix + "!" + e, this.map.parentMap), q(f, "defined", u(this, function(a) {
                this.init([], function() {
                  return a
                }, null, {
                  enabled: !0,
                  ignore: !0
                })
              })), d = m(h, f.id)) {
              this.depMaps.push(f);
              if (this.events.error) {
                d.on("error", u(this, function(a) {
                  this.emit("error", a)
                }))
              }
              d.enable()
            }
          } else {
            d ? (this.map.url = i.nameToUrl(d), this.load()) : (l = u(this, function(a) {
              this.init([], function() {
                return a
              }, null, {
                enabled: !0
              })
            }), l.error = u(this, function(a) {
              this.inited = !0;
              this.error = a;
              a.requireModules = [b];
              B(h, function(a) {
                0 === a.map.id.indexOf(b + "_unnormalized") && y(a.map.id)
              });
              w(a)
            }), l.fromText = u(this, function(f, c) {
              var d = a.name,
                e = p(d),
                P = M;
              c && (f = c);
              P && (M = !1);
              s(e);
              t(j.config, b) && (j.config[d] = j.config[b]);
              try {
                g.exec(f)
              } catch (h) {
                return w(C("fromtexteval", "fromText eval for " + b + " failed: " + h, h, [b]))
              }
              P && (M = !0);
              this.depMaps.push(e);
              i.completeLoad(d);
              n([d], l)
            }), f.load(a.name, n, l, j))
          }
        }));
        i.enable(d, this);
        this.pluginMaps[d.id] = d
      },
      enable: function() {
        V[this.map.id] = this;
        this.enabling = this.enabled = !0;
        v(this.depMaps, u(this, function(a, b) {
          var c, f;
          if ("string" === typeof a) {
            a = p(a, this.map.isDefine ? this.map : this.map.parentMap, !1, !this.skipMap);
            this.depMaps[b] = a;
            if (c = m(L, a.id)) {
              this.depExports[b] = c(this);
              return
            }
            this.depCount += 1;
            q(a, "defined", u(this, function(a) {
              this.defineDep(b, a);
              this.check()
            }));
            this.errback && q(a, "error", u(this, this.errback))
          }
          c = a.id;
          f = h[c];
          !t(L, c) && (f && !f.enabled) && i.enable(a, this)
        }));
        B(this.pluginMaps, u(this, function(a) {
          var b = m(h, a.id);
          b && !b.enabled && i.enable(a, this)
        }));
        this.enabling = !1;
        this.check()
      },
      on: function(a, b) {
        var c = this.events[a];
        c || (c = this.events[a] = []);
        c.push(b)
      },
      emit: function(a, b) {
        v(this.events[a], function(a) {
          a(b)
        });
        "error" === a && delete this.events[a]
      }
    };
    i = {
      config: j,
      contextName: b,
      registry: h,
      defined: r,
      urlFetched: S,
      defQueue: A,
      Module: Z,
      makeModuleMap: p,
      nextTick: g.nextTick,
      onError: w,
      configure: function(a) {
        a.baseUrl && "/" !== a.baseUrl.charAt(a.baseUrl.length - 1) && (a.baseUrl += "/");
        var b = j.shim,
          c = {
            paths: !0,
            bundles: !0,
            config: !0,
            map: !0
          };
        B(a, function(a, b) {
          c[b] ? (j[b] || (j[b] = {}), U(j[b], a, !0, !0)) : j[b] = a
        });
        a.bundles && B(a.bundles, function(a, b) {
          v(a, function(a) {
            a !== b && (aa[a] = b)
          })
        });
        a.shim && (B(a.shim, function(a, c) {
          H(a) && (a = {
            deps: a
          });
          if ((a.exports || a.init) && !a.exportsFn) {
            a.exportsFn = i.makeShimExports(a)
          }
          b[c] = a
        }), j.shim = b);
        a.packages && v(a.packages, function(a) {
          var b, a = "string" === typeof a ? {
            name: a
          } : a;
          b = a.name;
          a.location && (j.paths[b] = a.location);
          j.pkgs[b] = a.name + "/" + (a.main || "main").replace(ia, "").replace(Q, "")
        });
        B(h, function(a, b) {
          !a.inited && !a.map.unnormalized && (a.map = p(b))
        });
        if (a.deps || a.callback) {
          i.require(a.deps || [], a.callback)
        }
      },
      makeShimExports: function(a) {
        return function() {
          var b;
          a.init && (b = a.init.apply(ba, arguments));
          return b || a.exports && da(a.exports)
        }
      },
      makeRequire: function(a, e) {
        function j(c, d, m) {
          var n, q;
          e.enableBuildCallback && (d && G(d)) && (d.__requireJsBuild = !0);
          if ("string" === typeof c) {
            if (G(d)) {
              return w(C("requireargs", "Invalid require call"), m)
            }
            if (a && t(L, c)) {
              return L[c](h[a.id])
            }
            if (g.get) {
              return g.get(i, c, a, j)
            }
            n = p(c, a, !1, !0);
            n = n.id;
            return !t(r, n) ? w(C("notloaded", 'Module name "' + n + '" has not been loaded yet for context: ' + b + (a ? "" : ". Use require([])"))) : r[n]
          }
          J();
          i.nextTick(function() {
            J();
            q = s(p(null, a));
            q.skipMap = e.skipMap;
            q.init(c, d, m, {
              enabled: !0
            });
            D()
          });
          return j
        }
        e = e || {};
        U(j, {
          isBrowser: z,
          toUrl: function(b) {
            var d, e = b.lastIndexOf("."),
              k = b.split("/")[0];
            if (-1 !== e && (!("." === k || ".." === k) || 1 < e)) {
              d = b.substring(e, b.length), b = b.substring(0, e)
            }
            return i.nameToUrl(c(b, a && a.id, !0), d, !0)
          },
          defined: function(b) {
            return t(r, p(b, a, !1, !0).id)
          },
          specified: function(b) {
            b = p(b, a, !1, !0).id;
            return t(r, b) || t(h, b)
          }
        });
        a || (j.undef = function(b) {
          x();
          var c = p(b, a, !0),
            e = m(h, b);
          d(b);
          delete r[b];
          delete S[c.url];
          delete $[b];
          T(A, function(a, c) {
            a[0] === b && A.splice(c, 1)
          });
          e && (e.events.defined && ($[b] = e.events), y(b))
        });
        return j
      },
      enable: function(a) {
        m(h, a.id) && s(a).enable()
      },
      completeLoad: function(a) {
        var b, c, d = m(j.shim, a) || {},
          g = d.exports;
        for (x(); A.length;) {
          c = A.shift();
          if (null === c[0]) {
            c[0] = a;
            if (b) {
              break
            }
            b = !0
          } else {
            c[0] === a && (b = !0)
          }
          E(c)
        }
        c = m(h, a);
        if (!b && !t(r, a) && c && !c.inited) {
          if (j.enforceDefine && (!g || !da(g))) {
            return e(a) ? void 0 : w(C("nodefine", "No define call for " + a, null, [a]))
          }
          E([a, d.deps || [], d.exportsFn])
        }
        D()
      },
      nameToUrl: function(a, b, c) {
        var d, e, h;
        (d = m(j.pkgs, a)) && (a = d);
        if (d = m(aa, a)) {
          return i.nameToUrl(d, b, c)
        }
        if (g.jsExtRegExp.test(a)) {
          d = a + (b || "")
        } else {
          d = j.paths;
          a = a.split("/");
          for (e = a.length; 0 < e; e -= 1) {
            if (h = a.slice(0, e).join("/"), h = m(d, h)) {
              H(h) && (h = h[0]);
              a.splice(0, e, h);
              break
            }
          }
          d = a.join("/");
          d += b || (/^data\:|\?/.test(d) || c ? "" : ".js");
          d = ("/" === d.charAt(0) || d.match(/^[\w\+\.\-]+:/) ? "" : j.baseUrl) + d
        }
        return j.urlArgs ? d + ((-1 === d.indexOf("?") ? "?" : "&") + j.urlArgs) : d
      },
      load: function(a, b) {
        g.load(i, a, b)
      },
      execCb: function(a, b, c, d) {
        return b.apply(d, c)
      },
      onScriptLoad: function(a) {
        if ("load" === a.type || ja.test((a.currentTarget || a.srcElement).readyState)) {
          N = null, a = I(a), i.completeLoad(a.id)
        }
      },
      onScriptError: function(a) {
        var b = I(a);
        if (!e(b.id)) {
          return w(C("scripterror", "Script error for: " + b.id, a, [b.id]))
        }
      }
    };
    i.require = i.makeRequire();
    return i
  }
  var g, x, y, D, I, E, N, J, s, O, ka = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,
    la = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
    Q = /\.js$/,
    ia = /^\.\//;
  x = Object.prototype;
  var K = x.toString,
    fa = x.hasOwnProperty,
    ha = Array.prototype.splice,
    z = !!("undefined" !== typeof window && "undefined" !== typeof navigator && window.document),
    ea = !z && "undefined" !== typeof importScripts,
    ja = z && "PLAYSTATION 3" === navigator.platform ? /^complete$/ : /^(complete|loaded)$/,
    Y = "undefined" !== typeof opera && "[object Opera]" === opera.toString(),
    F = {},
    q = {},
    R = [],
    M = !1;
  if ("undefined" === typeof define) {
    if ("undefined" !== typeof requirejs) {
      if (G(requirejs)) {
        return
      }
      q = requirejs;
      requirejs = void 0
    }
    "undefined" !== typeof require && !G(require) && (q = require, require = void 0);
    g = requirejs = function(b, c, d, e) {
      var n, p = "_";
      !H(b) && "string" !== typeof b && (n = b, H(c) ? (b = c, c = d, d = e) : b = []);
      n && n.context && (p = n.context);
      (e = m(F, p)) || (e = F[p] = g.s.newContext(p));
      n && e.configure(n);
      return e.require(b, c, d)
    };
    g.config = function(b) {
      return g(b)
    };
    g.nextTick = "undefined" !== typeof setTimeout ? function(b) {
      setTimeout(b, 4)
    } : function(b) {
      b()
    };
    require || (require = g);
    g.version = "2.1.14";
    g.jsExtRegExp = /^\/|:|\?|\.js$/;
    g.isBrowser = z;
    x = g.s = {
      contexts: F,
      newContext: ga
    };
    g({});
    v(["toUrl", "undef", "defined", "specified"], function(b) {
      g[b] = function() {
        var c = F._;
        return c.require[b].apply(c, arguments)
      }
    });
    if (z && (y = x.head = document.getElementsByTagName("head")[0], D = document.getElementsByTagName("base")[0])) {
      y = x.head = D.parentNode
    }
    g.onError = ca;
    g.createNode = function(b) {
      var c = b.xhtml ? document.createElementNS("http://www.w3.org/1999/xhtml", "html:script") : document.createElement("script");
      c.type = b.scriptType || "text/javascript";
      c.charset = "utf-8";
      c.async = !0;
      return c
    };
    g.load = function(b, c, d) {
      var e = b && b.config || {};
      b.completeLoad(c)
    };
    z && !q.skipDataMain && T(document.getElementsByTagName("script"), function(b) {
      y || (y = b.parentNode);
      if (I = b.getAttribute("data-main")) {
        return s = I, q.baseUrl || (E = s.split("/"), s = E.pop(), O = E.length ? E.join("/") + "/" : "./", q.baseUrl = O), s = s.replace(Q, ""), g.jsExtRegExp.test(s) && (s = I), q.deps = q.deps ? q.deps.concat(s) : [s], !0
      }
    });
    define = function(b, c, d) {
      var e, g;
      "string" !== typeof b && (d = c, c = b, b = null);
      H(c) || (d = c, c = null);
      !c && G(d) && (c = [], d.length && (d.toString().replace(ka, "").replace(la, function(b, d) {
        c.push(d)
      }), c = (1 === d.length ? ["require"] : ["require", "exports", "module"]).concat(c)));
      if (M) {
        if (!(e = J)) {
          N && "interactive" === N.readyState || T(document.getElementsByTagName("script"), function(b) {
            if ("interactive" === b.readyState) {
              return N = b
            }
          }), e = N
        }
        e && (b || (b = e.getAttribute("data-requiremodule")), g = F[e.getAttribute("data-requirecontext")])
      }(g ? g.defQueue : R).push([b, c, d])
    };
    define.amd = {
      jQuery: !0
    };
    g.exec = function(b) {
      return eval(b)
    };
    g(q)
  }
})(this);
var CryptoJS = CryptoJS || function(l, r) {
    var s = {},
      g = s.lib = {},
      m = g.Base = function() {
        function a() {}
        return {
          extend: function(c) {
            a.prototype = this;
            var b = new a;
            c && b.mixIn(c);
            b.$super = this;
            return b
          },
          create: function() {
            var b = this.extend();
            b.init.apply(b, arguments);
            return b
          },
          init: function() {},
          mixIn: function(c) {
            for (var b in c) {
              c.hasOwnProperty(b) && (this[b] = c[b])
            }
            c.hasOwnProperty("toString") && (this.toString = c.toString)
          },
          clone: function() {
            return this.$super.extend(this)
          }
        }
      }(),
      k = g.WordArray = m.extend({
        init: function(b, a) {
          b = this.words = b || [];
          this.sigBytes = a != r ? a : 4 * b.length
        },
        toString: function(a) {
          return (a || n).stringify(this)
        },
        concat: function(d) {
          var c = this.words,
            a = d.words,
            e = this.sigBytes,
            d = d.sigBytes;
          this.clamp();
          if (e % 4) {
            for (var b = 0; b < d; b++) {
              c[e + b >>> 2] |= (a[b >>> 2] >>> 24 - 8 * (b % 4) & 255) << 24 - 8 * ((e + b) % 4)
            }
          } else {
            if (65535 < a.length) {
              for (b = 0; b < d; b += 4) {
                c[e + b >>> 2] = a[b >>> 2]
              }
            } else {
              c.push.apply(c, a)
            }
          }
          this.sigBytes += d;
          return this
        },
        clamp: function() {
          var b = this.words,
            a = this.sigBytes;
          b[a >>> 2] &= 4294967295 << 32 - 8 * (a % 4);
          b.length = l.ceil(a / 4)
        },
        clone: function() {
          var a = m.clone.call(this);
          a.words = this.words.slice(0);
          return a
        },
        random: function(c) {
          for (var b = [], a = 0; a < c; a += 4) {
            b.push(4294967296 * l.random() | 0)
          }
          return k.create(b, c)
        }
      }),
      h = s.enc = {},
      n = h.Hex = {
        stringify: function(d) {
          for (var c = d.words, d = d.sigBytes, a = [], e = 0; e < d; e++) {
            var b = c[e >>> 2] >>> 24 - 8 * (e % 4) & 255;
            a.push((b >>> 4).toString(16));
            a.push((b & 15).toString(16))
          }
          return a.join("")
        },
        parse: function(c) {
          for (var b = c.length, a = [], d = 0; d < b; d += 2) {
            a[d >>> 3] |= parseInt(c.substr(d, 2), 16) << 24 - 4 * (d % 8)
          }
          return k.create(a, b / 2)
        }
      },
      i = h.Latin1 = {
        stringify: function(c) {
          for (var b = c.words, c = c.sigBytes, a = [], d = 0; d < c; d++) {
            a.push(String.fromCharCode(b[d >>> 2] >>> 24 - 8 * (d % 4) & 255))
          }
          return a.join("")
        },
        parse: function(c) {
          for (var b = c.length, a = [], d = 0; d < b; d++) {
            a[d >>> 2] |= (c.charCodeAt(d) & 255) << 24 - 8 * (d % 4)
          }
          return k.create(a, b)
        }
      },
      f = h.Utf8 = {
        stringify: function(b) {
          try {
            return decodeURIComponent(escape(i.stringify(b)))
          } catch (a) {
            throw Error("Malformed UTF-8 data")
          }
        },
        parse: function(a) {
          return i.parse(unescape(encodeURIComponent(a)))
        }
      },
      o = g.BufferedBlockAlgorithm = m.extend({
        reset: function() {
          this._data = k.create();
          this._nDataBytes = 0
        },
        _append: function(a) {
          "string" == typeof a && (a = f.parse(a));
          this._data.concat(a);
          this._nDataBytes += a.sigBytes
        },
        _process: function(j) {
          var c = this._data,
            a = c.words,
            q = c.sigBytes,
            b = this.blockSize,
            d = q / (4 * b),
            d = j ? l.ceil(d) : l.max((d | 0) - this._minBufferSize, 0),
            j = d * b,
            q = l.min(4 * j, q);
          if (j) {
            for (var e = 0; e < j; e += b) {
              this._doProcessBlock(a, e)
            }
            e = a.splice(0, j);
            c.sigBytes -= q
          }
          return k.create(e, q)
        },
        clone: function() {
          var a = m.clone.call(this);
          a._data = this._data.clone();
          return a
        },
        _minBufferSize: 0
      });
    g.Hasher = o.extend({
      init: function() {
        this.reset()
      },
      reset: function() {
        o.reset.call(this);
        this._doReset()
      },
      update: function(a) {
        this._append(a);
        this._process();
        return this
      },
      finalize: function(a) {
        a && this._append(a);
        this._doFinalize();
        return this._hash
      },
      clone: function() {
        var a = o.clone.call(this);
        a._hash = this._hash.clone();
        return a
      },
      blockSize: 16,
      _createHelper: function(a) {
        return function(c, b) {
          return a.create(b).finalize(c)
        }
      },
      _createHmacHelper: function(a) {
        return function(c, b) {
          return p.HMAC.create(a, b).finalize(c)
        }
      }
    });
    var p = s.algo = {};
    return s
  }(Math);
(function() {
  var c = CryptoJS,
    d = c.lib.WordArray;
  c.enc.Base64 = {
    stringify: function(l) {
      var m = l.words,
        h = l.sigBytes,
        b = this._map;
      l.clamp();
      for (var l = [], n = 0; n < h; n += 3) {
        for (var i = (m[n >>> 2] >>> 24 - 8 * (n % 4) & 255) << 16 | (m[n + 1 >>> 2] >>> 24 - 8 * ((n + 1) % 4) & 255) << 8 | m[n + 2 >>> 2] >>> 24 - 8 * ((n + 2) % 4) & 255, a = 0; 4 > a && n + 0.75 * a < h; a++) {
          l.push(b.charAt(i >>> 6 * (3 - a) & 63))
        }
      }
      if (m = b.charAt(64)) {
        for (; l.length % 4;) {
          l.push(m)
        }
      }
      return l.join("")
    },
    parse: function(k) {
      var k = k.replace(/\s/g, ""),
        n = k.length,
        b = this._map,
        a = b.charAt(64);
      a && (a = k.indexOf(a), -1 != a && (n = a));
      for (var a = [], o = 0, i = 0; i < n; i++) {
        if (i % 4) {
          var m = b.indexOf(k.charAt(i - 1)) << 2 * (i % 4),
            l = b.indexOf(k.charAt(i)) >>> 6 - 2 * (i % 4);
          a[o >>> 2] |= (m | l) << 24 - 8 * (o % 4);
          o++
        }
      }
      return d.create(a, o)
    },
    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function(p) {
  function h(b, c, d, a, f, e, g) {
    b = b + (c & d | ~c & a) + f + g;
    return (b << e | b >>> 32 - e) + c
  }

  function i(b, c, d, a, f, e, g) {
    b = b + (c & a | d & ~a) + f + g;
    return (b << e | b >>> 32 - e) + c
  }

  function l(b, c, d, a, f, e, g) {
    b = b + (c ^ d ^ a) + f + g;
    return (b << e | b >>> 32 - e) + c
  }

  function r(b, c, d, a, f, e, g) {
    b = b + (d ^ (c | ~a)) + f + g;
    return (b << e | b >>> 32 - e) + c
  }
  var o = CryptoJS,
    m = o.lib,
    s = m.WordArray,
    m = m.Hasher,
    n = o.algo,
    k = [];
  (function() {
    for (var a = 0; 64 > a; a++) {
      k[a] = 4294967296 * p.abs(p.sin(a + 1)) | 0
    }
  })();
  n = n.MD5 = m.extend({
    _doReset: function() {
      this._hash = s.create([1732584193, 4023233417, 2562383102, 271733878])
    },
    _doProcessBlock: function(a, c) {
      for (var d = 0; 16 > d; d++) {
        var j = c + d,
          f = a[j];
        a[j] = (f << 8 | f >>> 24) & 16711935 | (f << 24 | f >>> 8) & 4278255360
      }
      for (var j = this._hash.words, f = j[0], e = j[1], g = j[2], b = j[3], d = 0; 64 > d; d += 4) {
        16 > d ? (f = h(f, e, g, b, a[c + d], 7, k[d]), b = h(b, f, e, g, a[c + d + 1], 12, k[d + 1]), g = h(g, b, f, e, a[c + d + 2], 17, k[d + 2]), e = h(e, g, b, f, a[c + d + 3], 22, k[d + 3])) : 32 > d ? (f = i(f, e, g, b, a[c + (d + 1) % 16], 5, k[d]), b = i(b, f, e, g, a[c + (d + 6) % 16], 9, k[d + 1]), g = i(g, b, f, e, a[c + (d + 11) % 16], 14, k[d + 2]), e = i(e, g, b, f, a[c + d % 16], 20, k[d + 3])) : 48 > d ? (f = l(f, e, g, b, a[c + (3 * d + 5) % 16], 4, k[d]), b = l(b, f, e, g, a[c + (3 * d + 8) % 16], 11, k[d + 1]), g = l(g, b, f, e, a[c + (3 * d + 11) % 16], 16, k[d + 2]), e = l(e, g, b, f, a[c + (3 * d + 14) % 16], 23, k[d + 3])) : (f = r(f, e, g, b, a[c + 3 * d % 16], 6, k[d]), b = r(b, f, e, g, a[c + (3 * d + 7) % 16], 10, k[d + 1]), g = r(g, b, f, e, a[c + (3 * d + 14) % 16], 15, k[d + 2]), e = r(e, g, b, f, a[c + (3 * d + 5) % 16], 21, k[d + 3]))
      }
      j[0] = j[0] + f | 0;
      j[1] = j[1] + e | 0;
      j[2] = j[2] + g | 0;
      j[3] = j[3] + b | 0
    },
    _doFinalize: function() {
      var b = this._data,
        c = b.words,
        d = 8 * this._nDataBytes,
        a = 8 * b.sigBytes;
      c[a >>> 5] |= 128 << 24 - a % 32;
      c[(a + 64 >>> 9 << 4) + 14] = (d << 8 | d >>> 24) & 16711935 | (d << 24 | d >>> 8) & 4278255360;
      b.sigBytes = 4 * (c.length + 1);
      this._process();
      b = this._hash.words;
      for (c = 0; 4 > c; c++) {
        d = b[c], b[c] = (d << 8 | d >>> 24) & 16711935 | (d << 24 | d >>> 8) & 4278255360
      }
    }
  });
  o.MD5 = m._createHelper(n);
  o.HmacMD5 = m._createHmacHelper(n)
})(Math);
(function() {
  var h = CryptoJS,
    j = h.lib,
    f = j.Base,
    g = j.WordArray,
    j = h.algo,
    i = j.EvpKDF = f.extend({
      cfg: f.extend({
        keySize: 4,
        hasher: j.MD5,
        iterations: 1
      }),
      init: function(a) {
        this.cfg = this.cfg.extend(a)
      },
      compute: function(c, e) {
        for (var b = this.cfg, k = b.hasher.create(), d = g.create(), v = d.words, a = b.keySize, b = b.iterations; v.length < a;) {
          m && k.update(m);
          var m = k.update(c).finalize(e);
          k.reset();
          for (var n = 1; n < b; n++) {
            m = k.finalize(m), k.reset()
          }
          d.concat(m)
        }
        d.sigBytes = 4 * a;
        return d
      }
    });
  h.EvpKDF = function(b, c, a) {
    return i.create(a).compute(b, c)
  }
})();
CryptoJS.lib.Cipher || function(i) {
  var n = CryptoJS,
    o = n.lib,
    r = o.Base,
    m = o.WordArray,
    h = o.BufferedBlockAlgorithm,
    s = n.enc.Base64,
    a = n.algo.EvpKDF,
    e = o.Cipher = h.extend({
      cfg: r.extend(),
      createEncryptor: function(b, d) {
        return this.create(this._ENC_XFORM_MODE, b, d)
      },
      createDecryptor: function(b, d) {
        return this.create(this._DEC_XFORM_MODE, b, d)
      },
      init: function(j, b, d) {
        this.cfg = this.cfg.extend(d);
        this._xformMode = j;
        this._key = b;
        this.reset()
      },
      reset: function() {
        h.reset.call(this);
        this._doReset()
      },
      process: function(b) {
        this._append(b);
        return this._process()
      },
      finalize: function(b) {
        b && this._append(b);
        return this._doFinalize()
      },
      keySize: 4,
      ivSize: 4,
      _ENC_XFORM_MODE: 1,
      _DEC_XFORM_MODE: 2,
      _createHelper: function() {
        return function(b) {
          return {
            encrypt: function(q, d, j) {
              return ("string" == typeof d ? f : g).encrypt(b, q, d, j)
            },
            decrypt: function(q, d, j) {
              return ("string" == typeof d ? f : g).decrypt(b, q, d, j)
            }
          }
        }
      }()
    });
  o.StreamCipher = e.extend({
    _doFinalize: function() {
      return this._process(!0)
    },
    blockSize: 1
  });
  var p = n.mode = {},
    k = o.BlockCipherMode = r.extend({
      createEncryptor: function(d, b) {
        return this.Encryptor.create(d, b)
      },
      createDecryptor: function(d, b) {
        return this.Decryptor.create(d, b)
      },
      init: function(d, b) {
        this._cipher = d;
        this._iv = b
      }
    }),
    p = p.CBC = function() {
      function d(v, u, q) {
        var j = this._iv;
        j ? this._iv = i : j = this._prevBlock;
        for (var t = 0; t < q; t++) {
          v[u + t] ^= j[t]
        }
      }
      var b = k.extend();
      b.Encryptor = b.extend({
        processBlock: function(u, q) {
          var j = this._cipher,
            t = j.blockSize;
          d.call(this, u, q, t);
          j.encryptBlock(u, q);
          this._prevBlock = u.slice(q, q + t)
        }
      });
      b.Decryptor = b.extend({
        processBlock: function(v, q) {
          var j = this._cipher,
            t = j.blockSize,
            u = v.slice(q, q + t);
          j.decryptBlock(v, q);
          d.call(this, v, q, t);
          this._prevBlock = u
        }
      });
      return b
    }(),
    l = (n.pad = {}).Pkcs7 = {
      pad: function(t, q) {
        for (var u = 4 * q, u = u - t.sigBytes % u, b = u << 24 | u << 16 | u << 8 | u, d = [], j = 0; j < u; j += 4) {
          d.push(b)
        }
        u = m.create(d, u);
        t.concat(u)
      },
      unpad: function(b) {
        b.sigBytes -= b.words[b.sigBytes - 1 >>> 2] & 255
      }
    };
  o.BlockCipher = e.extend({
    cfg: e.cfg.extend({
      mode: p,
      padding: l
    }),
    reset: function() {
      e.reset.call(this);
      var j = this.cfg,
        d = j.iv,
        j = j.mode;
      if (this._xformMode == this._ENC_XFORM_MODE) {
        var b = j.createEncryptor
      } else {
        b = j.createDecryptor, this._minBufferSize = 1
      }
      this._mode = b.call(j, this, d && d.words)
    },
    _doProcessBlock: function(d, b) {
      this._mode.processBlock(d, b)
    },
    _doFinalize: function() {
      var d = this.cfg.padding;
      if (this._xformMode == this._ENC_XFORM_MODE) {
        d.pad(this._data, this.blockSize);
        var b = this._process(!0)
      } else {
        b = this._process(!0), d.unpad(b)
      }
      return b
    },
    blockSize: 4
  });
  var c = o.CipherParams = r.extend({
      init: function(b) {
        this.mixIn(b)
      },
      toString: function(b) {
        return (b || this.formatter).stringify(this)
      }
    }),
    p = (n.format = {}).OpenSSL = {
      stringify: function(d) {
        var b = d.ciphertext,
          d = d.salt,
          b = (d ? m.create([1398893684, 1701076831]).concat(d).concat(b) : b).toString(s);
        return b = b.replace(/(.{64})/g, "$1\n")
      },
      parse: function(b) {
        var b = s.parse(b),
          j = b.words;
        if (1398893684 == j[0] && 1701076831 == j[1]) {
          var d = m.create(j.slice(2, 4));
          j.splice(0, 4);
          b.sigBytes -= 16
        }
        return c.create({
          ciphertext: b,
          salt: d
        })
      }
    },
    g = o.SerializableCipher = r.extend({
      cfg: r.extend({
        format: p
      }),
      encrypt: function(b, j, d, q) {
        var q = this.cfg.extend(q),
          t = b.createEncryptor(d, q),
          j = t.finalize(j),
          t = t.cfg;
        return c.create({
          ciphertext: j,
          key: d,
          iv: t.iv,
          algorithm: b,
          mode: t.mode,
          padding: t.padding,
          blockSize: b.blockSize,
          formatter: q.format
        })
      },
      decrypt: function(q, b, d, j) {
        j = this.cfg.extend(j);
        b = this._parse(b, j.format);
        return q.createDecryptor(d, j).finalize(b.ciphertext)
      },
      _parse: function(d, b) {
        return "string" == typeof d ? b.parse(d) : d
      }
    }),
    n = (n.kdf = {}).OpenSSL = {
      compute: function(b, d, j, q) {
        q || (q = m.random(8));
        b = a.create({
          keySize: d + j
        }).compute(b, q);
        j = m.create(b.words.slice(d), 4 * j);
        b.sigBytes = 4 * d;
        return c.create({
          key: b,
          iv: j,
          salt: q
        })
      }
    },
    f = o.PasswordBasedCipher = g.extend({
      cfg: g.cfg.extend({
        kdf: n
      }),
      encrypt: function(q, b, d, j) {
        j = this.cfg.extend(j);
        d = j.kdf.compute(d, q.keySize, q.ivSize);
        j.iv = d.iv;
        q = g.encrypt.call(this, q, b, d.key, j);
        q.mixIn(d);
        return q
      },
      decrypt: function(q, b, d, j) {
        j = this.cfg.extend(j);
        b = this._parse(b, j.format);
        d = j.kdf.compute(d, q.keySize, q.ivSize, b.salt);
        j.iv = d.iv;
        return g.decrypt.call(this, q, b, d.key, j)
      }
    })
}();
(function() {
  var k = CryptoJS,
    o = k.lib.BlockCipher,
    p = k.algo,
    s = [],
    m = [],
    h = [],
    a = [],
    e = [],
    g = [],
    r = [],
    l = [],
    n = [],
    f = [];
  (function() {
    for (var d = [], c = 0; 256 > c; c++) {
      d[c] = 128 > c ? c << 1 : c << 1 ^ 283
    }
    for (var j = 0, q = 0, c = 0; 256 > c; c++) {
      var v = q ^ q << 1 ^ q << 2 ^ q << 3 ^ q << 4,
        v = v >>> 8 ^ v & 255 ^ 99;
      s[j] = v;
      m[v] = j;
      var u = d[j],
        t = d[u],
        w = d[t],
        b = 257 * d[v] ^ 16843008 * v;
      h[j] = b << 24 | b >>> 8;
      a[j] = b << 16 | b >>> 16;
      e[j] = b << 8 | b >>> 24;
      g[j] = b;
      b = 16843009 * w ^ 65537 * t ^ 257 * u ^ 16843008 * j;
      r[v] = b << 24 | b >>> 8;
      l[v] = b << 16 | b >>> 16;
      n[v] = b << 8 | b >>> 24;
      f[v] = b;
      j ? (j = u ^ d[d[d[w ^ u]]], q ^= d[d[q]]) : j = q = 1
    }
  })();
  var i = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
    p = p.AES = o.extend({
      _doReset: function() {
        for (var c = this._key, b = c.words, d = c.sigBytes / 4, c = 4 * ((this._nRounds = d + 6) + 1), q = this._keySchedule = [], t = 0; t < c; t++) {
          if (t < d) {
            q[t] = b[t]
          } else {
            var j = q[t - 1];
            t % d ? 6 < d && 4 == t % d && (j = s[j >>> 24] << 24 | s[j >>> 16 & 255] << 16 | s[j >>> 8 & 255] << 8 | s[j & 255]) : (j = j << 8 | j >>> 24, j = s[j >>> 24] << 24 | s[j >>> 16 & 255] << 16 | s[j >>> 8 & 255] << 8 | s[j & 255], j ^= i[t / d | 0] << 24);
            q[t] = q[t - d] ^ j
          }
        }
        b = this._invKeySchedule = [];
        for (d = 0; d < c; d++) {
          t = c - d, j = d % 4 ? q[t] : q[t - 4], b[d] = 4 > d || 4 >= t ? j : r[s[j >>> 24]] ^ l[s[j >>> 16 & 255]] ^ n[s[j >>> 8 & 255]] ^ f[s[j & 255]]
        }
      },
      encryptBlock: function(b, c) {
        this._doCryptBlock(b, c, this._keySchedule, h, a, e, g, s)
      },
      decryptBlock: function(c, b) {
        var d = c[b + 1];
        c[b + 1] = c[b + 3];
        c[b + 3] = d;
        this._doCryptBlock(c, b, this._invKeySchedule, r, l, n, f, m);
        d = c[b + 1];
        c[b + 1] = c[b + 3];
        c[b + 3] = d
      },
      _doCryptBlock: function(b, c, d, j, q, u, v, t) {
        for (var x = this._nRounds, w = b[c] ^ d[0], y = b[c + 1] ^ d[1], A = b[c + 2] ^ d[2], z = b[c + 3] ^ d[3], B = 4, U = 1; U < x; U++) {
          var V = j[w >>> 24] ^ q[y >>> 16 & 255] ^ u[A >>> 8 & 255] ^ v[z & 255] ^ d[B++],
            W = j[y >>> 24] ^ q[A >>> 16 & 255] ^ u[z >>> 8 & 255] ^ v[w & 255] ^ d[B++],
            X = j[A >>> 24] ^ q[z >>> 16 & 255] ^ u[w >>> 8 & 255] ^ v[y & 255] ^ d[B++],
            z = j[z >>> 24] ^ q[w >>> 16 & 255] ^ u[y >>> 8 & 255] ^ v[A & 255] ^ d[B++],
            w = V,
            y = W,
            A = X
        }
        V = (t[w >>> 24] << 24 | t[y >>> 16 & 255] << 16 | t[A >>> 8 & 255] << 8 | t[z & 255]) ^ d[B++];
        W = (t[y >>> 24] << 24 | t[A >>> 16 & 255] << 16 | t[z >>> 8 & 255] << 8 | t[w & 255]) ^ d[B++];
        X = (t[A >>> 24] << 24 | t[z >>> 16 & 255] << 16 | t[w >>> 8 & 255] << 8 | t[y & 255]) ^ d[B++];
        z = (t[z >>> 24] << 24 | t[w >>> 16 & 255] << 16 | t[y >>> 8 & 255] << 8 | t[A & 255]) ^ d[B++];
        b[c] = V;
        b[c + 1] = W;
        b[c + 2] = X;
        b[c + 3] = z
      },
      keySize: 8
    });
  k.AES = o._createHelper(p)
})();
(function() {
  var B = CryptoJS;
  var A = B.lib;
  var u = A.WordArray;
  var p = A.BlockCipher;
  var t = B.algo;
  var o = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];
  var q = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];
  var r = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];
  var s = [{
    0: 8421888,
    268435456: 32768,
    536870912: 8421378,
    805306368: 2,
    1073741824: 512,
    1342177280: 8421890,
    1610612736: 8389122,
    1879048192: 8388608,
    2147483648: 514,
    2415919104: 8389120,
    2684354560: 33280,
    2952790016: 8421376,
    3221225472: 32770,
    3489660928: 8388610,
    3758096384: 0,
    4026531840: 33282,
    134217728: 0,
    402653184: 8421890,
    671088640: 33282,
    939524096: 32768,
    1207959552: 8421888,
    1476395008: 512,
    1744830464: 8421378,
    2013265920: 2,
    2281701376: 8389120,
    2550136832: 33280,
    2818572288: 8421376,
    3087007744: 8389122,
    3355443200: 8388610,
    3623878656: 32770,
    3892314112: 514,
    4160749568: 8388608,
    1: 32768,
    268435457: 2,
    536870913: 8421888,
    805306369: 8388608,
    1073741825: 8421378,
    1342177281: 33280,
    1610612737: 512,
    1879048193: 8389122,
    2147483649: 8421890,
    2415919105: 8421376,
    2684354561: 8388610,
    2952790017: 33282,
    3221225473: 514,
    3489660929: 8389120,
    3758096385: 32770,
    4026531841: 0,
    134217729: 8421890,
    402653185: 8421376,
    671088641: 8388608,
    939524097: 512,
    1207959553: 32768,
    1476395009: 8388610,
    1744830465: 2,
    2013265921: 33282,
    2281701377: 32770,
    2550136833: 8389122,
    2818572289: 514,
    3087007745: 8421888,
    3355443201: 8389120,
    3623878657: 0,
    3892314113: 33280,
    4160749569: 8421378
  }, {
    0: 1074282512,
    16777216: 16384,
    33554432: 524288,
    50331648: 1074266128,
    67108864: 1073741840,
    83886080: 1074282496,
    100663296: 1073758208,
    117440512: 16,
    134217728: 540672,
    150994944: 1073758224,
    167772160: 1073741824,
    184549376: 540688,
    201326592: 524304,
    218103808: 0,
    234881024: 16400,
    251658240: 1074266112,
    8388608: 1073758208,
    25165824: 540688,
    41943040: 16,
    58720256: 1073758224,
    75497472: 1074282512,
    92274688: 1073741824,
    109051904: 524288,
    125829120: 1074266128,
    142606336: 524304,
    159383552: 0,
    176160768: 16384,
    192937984: 1074266112,
    209715200: 1073741840,
    226492416: 540672,
    243269632: 1074282496,
    260046848: 16400,
    268435456: 0,
    285212672: 1074266128,
    301989888: 1073758224,
    318767104: 1074282496,
    335544320: 1074266112,
    352321536: 16,
    369098752: 540688,
    385875968: 16384,
    402653184: 16400,
    419430400: 524288,
    436207616: 524304,
    452984832: 1073741840,
    469762048: 540672,
    486539264: 1073758208,
    503316480: 1073741824,
    520093696: 1074282512,
    276824064: 540688,
    293601280: 524288,
    310378496: 1074266112,
    327155712: 16384,
    343932928: 1073758208,
    360710144: 1074282512,
    377487360: 16,
    394264576: 1073741824,
    411041792: 1074282496,
    427819008: 1073741840,
    444596224: 1073758224,
    461373440: 524304,
    478150656: 0,
    494927872: 16400,
    511705088: 1074266128,
    528482304: 540672
  }, {
    0: 260,
    1048576: 0,
    2097152: 67109120,
    3145728: 65796,
    4194304: 65540,
    5242880: 67108868,
    6291456: 67174660,
    7340032: 67174400,
    8388608: 67108864,
    9437184: 67174656,
    10485760: 65792,
    11534336: 67174404,
    12582912: 67109124,
    13631488: 65536,
    14680064: 4,
    15728640: 256,
    524288: 67174656,
    1572864: 67174404,
    2621440: 0,
    3670016: 67109120,
    4718592: 67108868,
    5767168: 65536,
    6815744: 65540,
    7864320: 260,
    8912896: 4,
    9961472: 256,
    11010048: 67174400,
    12058624: 65796,
    13107200: 65792,
    14155776: 67109124,
    15204352: 67174660,
    16252928: 67108864,
    16777216: 67174656,
    17825792: 65540,
    18874368: 65536,
    19922944: 67109120,
    20971520: 256,
    22020096: 67174660,
    23068672: 67108868,
    24117248: 0,
    25165824: 67109124,
    26214400: 67108864,
    27262976: 4,
    28311552: 65792,
    29360128: 67174400,
    30408704: 260,
    31457280: 65796,
    32505856: 67174404,
    17301504: 67108864,
    18350080: 260,
    19398656: 67174656,
    20447232: 0,
    21495808: 65540,
    22544384: 67109120,
    23592960: 256,
    24641536: 67174404,
    25690112: 65536,
    26738688: 67174660,
    27787264: 65796,
    28835840: 67108868,
    29884416: 67109124,
    30932992: 67174400,
    31981568: 4,
    33030144: 65792
  }, {
    0: 2151682048,
    65536: 2147487808,
    131072: 4198464,
    196608: 2151677952,
    262144: 0,
    327680: 4198400,
    393216: 2147483712,
    458752: 4194368,
    524288: 2147483648,
    589824: 4194304,
    655360: 64,
    720896: 2147487744,
    786432: 2151678016,
    851968: 4160,
    917504: 4096,
    983040: 2151682112,
    32768: 2147487808,
    98304: 64,
    163840: 2151678016,
    229376: 2147487744,
    294912: 4198400,
    360448: 2151682112,
    425984: 0,
    491520: 2151677952,
    557056: 4096,
    622592: 2151682048,
    688128: 4194304,
    753664: 4160,
    819200: 2147483648,
    884736: 4194368,
    950272: 4198464,
    1015808: 2147483712,
    1048576: 4194368,
    1114112: 4198400,
    1179648: 2147483712,
    1245184: 0,
    1310720: 4160,
    1376256: 2151678016,
    1441792: 2151682048,
    1507328: 2147487808,
    1572864: 2151682112,
    1638400: 2147483648,
    1703936: 2151677952,
    1769472: 4198464,
    1835008: 2147487744,
    1900544: 4194304,
    1966080: 64,
    2031616: 4096,
    1081344: 2151677952,
    1146880: 2151682112,
    1212416: 0,
    1277952: 4198400,
    1343488: 4194368,
    1409024: 2147483648,
    1474560: 2147487808,
    1540096: 64,
    1605632: 2147483712,
    1671168: 4096,
    1736704: 2147487744,
    1802240: 2151678016,
    1867776: 4160,
    1933312: 2151682048,
    1998848: 4194304,
    2064384: 4198464
  }, {
    0: 128,
    4096: 17039360,
    8192: 262144,
    12288: 536870912,
    16384: 537133184,
    20480: 16777344,
    24576: 553648256,
    28672: 262272,
    32768: 16777216,
    36864: 537133056,
    40960: 536871040,
    45056: 553910400,
    49152: 553910272,
    53248: 0,
    57344: 17039488,
    61440: 553648128,
    2048: 17039488,
    6144: 553648256,
    10240: 128,
    14336: 17039360,
    18432: 262144,
    22528: 537133184,
    26624: 553910272,
    30720: 536870912,
    34816: 537133056,
    38912: 0,
    43008: 553910400,
    47104: 16777344,
    51200: 536871040,
    55296: 553648128,
    59392: 16777216,
    63488: 262272,
    65536: 262144,
    69632: 128,
    73728: 536870912,
    77824: 553648256,
    81920: 16777344,
    86016: 553910272,
    90112: 537133184,
    94208: 16777216,
    98304: 553910400,
    102400: 553648128,
    106496: 17039360,
    110592: 537133056,
    114688: 262272,
    118784: 536871040,
    122880: 0,
    126976: 17039488,
    67584: 553648256,
    71680: 16777216,
    75776: 17039360,
    79872: 537133184,
    83968: 536870912,
    88064: 17039488,
    92160: 128,
    96256: 553910272,
    100352: 262272,
    104448: 553910400,
    108544: 0,
    112640: 553648128,
    116736: 16777344,
    120832: 262144,
    124928: 537133056,
    129024: 536871040
  }, {
    0: 268435464,
    256: 8192,
    512: 270532608,
    768: 270540808,
    1024: 268443648,
    1280: 2097152,
    1536: 2097160,
    1792: 268435456,
    2048: 0,
    2304: 268443656,
    2560: 2105344,
    2816: 8,
    3072: 270532616,
    3328: 2105352,
    3584: 8200,
    3840: 270540800,
    128: 270532608,
    384: 270540808,
    640: 8,
    896: 2097152,
    1152: 2105352,
    1408: 268435464,
    1664: 268443648,
    1920: 8200,
    2176: 2097160,
    2432: 8192,
    2688: 268443656,
    2944: 270532616,
    3200: 0,
    3456: 270540800,
    3712: 2105344,
    3968: 268435456,
    4096: 268443648,
    4352: 270532616,
    4608: 270540808,
    4864: 8200,
    5120: 2097152,
    5376: 268435456,
    5632: 268435464,
    5888: 2105344,
    6144: 2105352,
    6400: 0,
    6656: 8,
    6912: 270532608,
    7168: 8192,
    7424: 268443656,
    7680: 270540800,
    7936: 2097160,
    4224: 8,
    4480: 2105344,
    4736: 2097152,
    4992: 268435464,
    5248: 268443648,
    5504: 8200,
    5760: 270540808,
    6016: 270532608,
    6272: 270540800,
    6528: 270532616,
    6784: 8192,
    7040: 2105352,
    7296: 2097160,
    7552: 0,
    7808: 268435456,
    8064: 268443656
  }, {
    0: 1048576,
    16: 33555457,
    32: 1024,
    48: 1049601,
    64: 34604033,
    80: 0,
    96: 1,
    112: 34603009,
    128: 33555456,
    144: 1048577,
    160: 33554433,
    176: 34604032,
    192: 34603008,
    208: 1025,
    224: 1049600,
    240: 33554432,
    8: 34603009,
    24: 0,
    40: 33555457,
    56: 34604032,
    72: 1048576,
    88: 33554433,
    104: 33554432,
    120: 1025,
    136: 1049601,
    152: 33555456,
    168: 34603008,
    184: 1048577,
    200: 1024,
    216: 34604033,
    232: 1,
    248: 1049600,
    256: 33554432,
    272: 1048576,
    288: 33555457,
    304: 34603009,
    320: 1048577,
    336: 33555456,
    352: 34604032,
    368: 1049601,
    384: 1025,
    400: 34604033,
    416: 1049600,
    432: 1,
    448: 0,
    464: 34603008,
    480: 33554433,
    496: 1024,
    264: 1049600,
    280: 33555457,
    296: 34603009,
    312: 1,
    328: 33554432,
    344: 1048576,
    360: 1025,
    376: 34604032,
    392: 33554433,
    408: 34603008,
    424: 0,
    440: 34604033,
    456: 1049601,
    472: 1024,
    488: 33555456,
    504: 1048577
  }, {
    0: 134219808,
    1: 131072,
    2: 134217728,
    3: 32,
    4: 131104,
    5: 134350880,
    6: 134350848,
    7: 2048,
    8: 134348800,
    9: 134219776,
    10: 133120,
    11: 134348832,
    12: 2080,
    13: 0,
    14: 134217760,
    15: 133152,
    2147483648: 2048,
    2147483649: 134350880,
    2147483650: 134219808,
    2147483651: 134217728,
    2147483652: 134348800,
    2147483653: 133120,
    2147483654: 133152,
    2147483655: 32,
    2147483656: 134217760,
    2147483657: 2080,
    2147483658: 131104,
    2147483659: 134350848,
    2147483660: 0,
    2147483661: 134348832,
    2147483662: 134219776,
    2147483663: 131072,
    16: 133152,
    17: 134350848,
    18: 32,
    19: 2048,
    20: 134219776,
    21: 134217760,
    22: 134348832,
    23: 131072,
    24: 0,
    25: 131104,
    26: 134348800,
    27: 134219808,
    28: 134350880,
    29: 133120,
    30: 2080,
    31: 134217728,
    2147483664: 131072,
    2147483665: 2048,
    2147483666: 134348832,
    2147483667: 133152,
    2147483668: 32,
    2147483669: 134348800,
    2147483670: 134217728,
    2147483671: 134219808,
    2147483672: 134350880,
    2147483673: 134217760,
    2147483674: 134219776,
    2147483675: 0,
    2147483676: 133120,
    2147483677: 2080,
    2147483678: 131104,
    2147483679: 134350848
  }];
  var w = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679];
  var z = t.DES = p.extend({
    _doReset: function() {
      var f = this._key;
      var b = f.words;
      var g = [];
      for (var h = 0; h < 56; h++) {
        var j = o[h] - 1;
        g[h] = (b[j >>> 5] >>> (31 - j % 32)) & 1
      }
      var d = this._subKeys = [];
      for (var a = 0; a < 16; a++) {
        var i = d[a] = [];
        var e = r[a];
        for (var h = 0; h < 24; h++) {
          i[(h / 6) | 0] |= g[((q[h] - 1) + e) % 28] << (31 - h % 6);
          i[4 + ((h / 6) | 0)] |= g[28 + (((q[h + 24] - 1) + e) % 28)] << (31 - h % 6)
        }
        i[0] = (i[0] << 1) | (i[0] >>> 31);
        for (var h = 1; h < 7; h++) {
          i[h] = i[h] >>> ((h - 1) * 4 + 3)
        }
        i[7] = (i[7] << 5) | (i[7] >>> 27)
      }
      var c = this._invSubKeys = [];
      for (var h = 0; h < 16; h++) {
        c[h] = d[15 - h]
      }
    },
    encryptBlock: function(a, b) {
      this._doCryptBlock(a, b, this._subKeys)
    },
    decryptBlock: function(a, b) {
      this._doCryptBlock(a, b, this._invSubKeys)
    },
    _doCryptBlock: function(g, a, c) {
      this._lBlock = g[a];
      this._rBlock = g[a + 1];
      y.call(this, 4, 252645135);
      y.call(this, 16, 65535);
      x.call(this, 2, 858993459);
      x.call(this, 8, 16711935);
      y.call(this, 1, 1431655765);
      for (var e = 0; e < 16; e++) {
        var i = c[e];
        var b = this._lBlock;
        var d = this._rBlock;
        var h = 0;
        for (var j = 0; j < 8; j++) {
          h |= s[j][((d ^ i[j]) & w[j]) >>> 0]
        }
        this._lBlock = d;
        this._rBlock = b ^ h
      }
      var f = this._lBlock;
      this._lBlock = this._rBlock;
      this._rBlock = f;
      y.call(this, 1, 1431655765);
      x.call(this, 8, 16711935);
      x.call(this, 2, 858993459);
      y.call(this, 16, 65535);
      y.call(this, 4, 252645135);
      g[a] = this._lBlock;
      g[a + 1] = this._rBlock
    },
    keySize: 64 / 32,
    ivSize: 64 / 32,
    blockSize: 64 / 32
  });

  function y(a, c) {
    var b = ((this._lBlock >>> a) ^ this._rBlock) & c;
    this._rBlock ^= b;
    this._lBlock ^= b << a
  }

  function x(a, c) {
    var b = ((this._rBlock >>> a) ^ this._lBlock) & c;
    this._lBlock ^= b;
    this._rBlock ^= b << a
  }
  B.DES = p._createHelper(z);
  var v = t.TripleDES = p.extend({
    _doReset: function() {
      var b = this._key;
      var a = b.words;
      this._des1 = z.createEncryptor(u.create(a.slice(0, 2)));
      this._des2 = z.createEncryptor(u.create(a.slice(2, 4)));
      this._des3 = z.createEncryptor(u.create(a.slice(4, 6)))
    },
    encryptBlock: function(a, b) {
      this._des1.encryptBlock(a, b);
      this._des2.decryptBlock(a, b);
      this._des3.encryptBlock(a, b)
    },
    decryptBlock: function(a, b) {
      this._des3.decryptBlock(a, b);
      this._des2.encryptBlock(a, b);
      this._des1.decryptBlock(a, b)
    },
    keySize: 192 / 32,
    ivSize: 64 / 32,
    blockSize: 64 / 32
  });
  B.TripleDES = p._createHelper(v)
}());
(function(v) {
  var x = CryptoJS;
  var w = x.lib;
  var p = w.WordArray;
  var t = w.Hasher;
  var o = x.algo;
  var s = [];
  (function() {
    for (var a = 0; a < 64; a++) {
      s[a] = (v.abs(v.sin(a + 1)) * 4294967296) | 0
    }
  }());
  var n = o.MD5 = t.extend({
    _doReset: function() {
      this._hash = p.create([1732584193, 4023233417, 2562383102, 271733878])
    },
    _doProcessBlock: function(c, f) {
      for (var e = 0; e < 16; e++) {
        var g = f + e;
        var b = c[g];
        c[g] = ((((b << 8) | (b >>> 24)) & 16711935) | (((b << 24) | (b >>> 8)) & 4278255360))
      }
      var h = this._hash.words;
      var i = h[0];
      var j = h[1];
      var a = h[2];
      var d = h[3];
      for (var e = 0; e < 64; e += 4) {
        if (e < 16) {
          i = q(i, j, a, d, c[f + e], 7, s[e]);
          d = q(d, i, j, a, c[f + e + 1], 12, s[e + 1]);
          a = q(a, d, i, j, c[f + e + 2], 17, s[e + 2]);
          j = q(j, a, d, i, c[f + e + 3], 22, s[e + 3])
        } else {
          if (e < 32) {
            i = u(i, j, a, d, c[f + ((e + 1) % 16)], 5, s[e]);
            d = u(d, i, j, a, c[f + ((e + 6) % 16)], 9, s[e + 1]);
            a = u(a, d, i, j, c[f + ((e + 11) % 16)], 14, s[e + 2]);
            j = u(j, a, d, i, c[f + (e % 16)], 20, s[e + 3])
          } else {
            if (e < 48) {
              i = m(i, j, a, d, c[f + ((e * 3 + 5) % 16)], 4, s[e]);
              d = m(d, i, j, a, c[f + ((e * 3 + 8) % 16)], 11, s[e + 1]);
              a = m(a, d, i, j, c[f + ((e * 3 + 11) % 16)], 16, s[e + 2]);
              j = m(j, a, d, i, c[f + ((e * 3 + 14) % 16)], 23, s[e + 3])
            } else {
              i = r(i, j, a, d, c[f + ((e * 3) % 16)], 6, s[e]);
              d = r(d, i, j, a, c[f + ((e * 3 + 7) % 16)], 10, s[e + 1]);
              a = r(a, d, i, j, c[f + ((e * 3 + 14) % 16)], 15, s[e + 2]);
              j = r(j, a, d, i, c[f + ((e * 3 + 5) % 16)], 21, s[e + 3])
            }
          }
        }
      }
      h[0] = (h[0] + i) | 0;
      h[1] = (h[1] + j) | 0;
      h[2] = (h[2] + a) | 0;
      h[3] = (h[3] + d) | 0
    },
    _doFinalize: function() {
      var c = this._data;
      var b = c.words;
      var a = this._nDataBytes * 8;
      var d = c.sigBytes * 8;
      b[d >>> 5] |= 128 << (24 - d % 32);
      b[(((d + 64) >>> 9) << 4) + 14] = ((((a << 8) | (a >>> 24)) & 16711935) | (((a << 24) | (a >>> 8)) & 4278255360));
      c.sigBytes = (b.length + 1) * 4;
      this._process();
      var f = this._hash.words;
      for (var g = 0; g < 4; g++) {
        var e = f[g];
        f[g] = (((e << 8) | (e >>> 24)) & 16711935) | (((e << 24) | (e >>> 8)) & 4278255360)
      }
    }
  });

  function q(g, h, b, d, a, e, f) {
    var c = g + ((h & b) | (~h & d)) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }

  function u(g, h, b, d, a, e, f) {
    var c = g + ((h & d) | (b & ~d)) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }

  function m(g, h, b, d, a, e, f) {
    var c = g + (h ^ b ^ d) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }

  function r(g, h, b, d, a, e, f) {
    var c = g + (b ^ (h | ~d)) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }
  x.MD5 = t._createHelper(n);
  x.HmacMD5 = t._createHmacHelper(n)
}(Math));
(function(k) {
  var l = CryptoJS;
  var p = l.lib;
  var i = p.Base;
  var m = p.WordArray;
  var j = l.x64 = {};
  var o = j.Word = i.extend({
    init: function(a, b) {
      this.high = a;
      this.low = b
    }
  });
  var n = j.WordArray = i.extend({
    init: function(a, b) {
      a = this.words = a || [];
      if (b != k) {
        this.sigBytes = b
      } else {
        this.sigBytes = a.length * 8
      }
    },
    toX32: function() {
      var b = this.words;
      var c = b.length;
      var e = [];
      for (var d = 0; d < c; d++) {
        var a = b[d];
        e.push(a.high);
        e.push(a.low)
      }
      return m.create(e, this.sigBytes)
    },
    clone: function() {
      var a = i.clone.call(this);
      var b = a.words = this.words.slice(0);
      var c = b.length;
      for (var d = 0; d < c; d++) {
        b[d] = b[d].clone()
      }
      return a
    }
  })
}());
(function() {
  var j = CryptoJS;
  var m = j.lib;
  var k = m.WordArray;
  var h = m.Hasher;
  var l = j.algo;
  var i = [];
  var n = l.SHA1 = h.extend({
    _doReset: function() {
      this._hash = k.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
    },
    _doProcessBlock: function(e, t) {
      var x = this._hash.words;
      var a = x[0];
      var b = x[1];
      var c = x[2];
      var d = x[3];
      var f = x[4];
      for (var g = 0; g < 80; g++) {
        if (g < 16) {
          i[g] = e[t + g] | 0
        } else {
          var v = i[g - 3] ^ i[g - 8] ^ i[g - 14] ^ i[g - 16];
          i[g] = (v << 1) | (v >>> 31)
        }
        var w = ((a << 5) | (a >>> 27)) + f + i[g];
        if (g < 20) {
          w += ((b & c) | (~b & d)) + 1518500249
        } else {
          if (g < 40) {
            w += (b ^ c ^ d) + 1859775393
          } else {
            if (g < 60) {
              w += ((b & c) | (b & d) | (c & d)) - 1894007588
            } else {
              w += (b ^ c ^ d) - 899497514
            }
          }
        }
        f = d;
        d = c;
        c = (b << 30) | (b >>> 2);
        b = a;
        a = w
      }
      x[0] = (x[0] + a) | 0;
      x[1] = (x[1] + b) | 0;
      x[2] = (x[2] + c) | 0;
      x[3] = (x[3] + d) | 0;
      x[4] = (x[4] + f) | 0
    },
    _doFinalize: function() {
      var b = this._data;
      var a = b.words;
      var d = this._nDataBytes * 8;
      var c = b.sigBytes * 8;
      a[c >>> 5] |= 128 << (24 - c % 32);
      a[(((c + 64) >>> 9) << 4) + 15] = d;
      b.sigBytes = a.length * 4;
      this._process()
    }
  });
  j.SHA1 = h._createHelper(n);
  j.HmacSHA1 = h._createHmacHelper(n)
}());
(function(r) {
  var t = CryptoJS;
  var s = t.lib;
  var n = s.WordArray;
  var p = s.Hasher;
  var m = t.algo;
  var k = [];
  var l = [];
  (function() {
    function a(e) {
      var f = r.sqrt(e);
      for (var g = 2; g <= f; g++) {
        if (!(e % g)) {
          return false
        }
      }
      return true
    }

    function b(e) {
      return ((e - (e | 0)) * 4294967296) | 0
    }
    var d = 2;
    var c = 0;
    while (c < 64) {
      if (a(d)) {
        if (c < 8) {
          k[c] = b(r.pow(d, 1 / 2))
        }
        l[c] = b(r.pow(d, 1 / 3));
        c++
      }
      d++
    }
  }());
  var q = [];
  var o = m.SHA256 = p.extend({
    _doReset: function() {
      this._hash = n.create(k.slice(0))
    },
    _doProcessBlock: function(O, P) {
      var K = this._hash.words;
      var G = K[0];
      var H = K[1];
      var J = K[2];
      var M = K[3];
      var a = K[4];
      var b = K[5];
      var c = K[6];
      var d = K[7];
      for (var e = 0; e < 64; e++) {
        if (e < 16) {
          q[e] = O[P + e] | 0
        } else {
          var Q = q[e - 15];
          var g = ((Q << 25) | (Q >>> 7)) ^ ((Q << 14) | (Q >>> 18)) ^ (Q >>> 3);
          var I = q[e - 2];
          var i = ((I << 15) | (I >>> 17)) ^ ((I << 13) | (I >>> 19)) ^ (I >>> 10);
          q[e] = g + q[e - 7] + i + q[e - 16]
        }
        var j = (a & b) ^ (~a & c);
        var R = (G & H) ^ (G & J) ^ (H & J);
        var f = ((G << 30) | (G >>> 2)) ^ ((G << 19) | (G >>> 13)) ^ ((G << 10) | (G >>> 22));
        var h = ((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25));
        var L = d + h + j + l[e] + q[e];
        var N = f + R;
        d = c;
        c = b;
        b = a;
        a = (M + L) | 0;
        M = J;
        J = H;
        H = G;
        G = (L + N) | 0
      }
      K[0] = (K[0] + G) | 0;
      K[1] = (K[1] + H) | 0;
      K[2] = (K[2] + J) | 0;
      K[3] = (K[3] + M) | 0;
      K[4] = (K[4] + a) | 0;
      K[5] = (K[5] + b) | 0;
      K[6] = (K[6] + c) | 0;
      K[7] = (K[7] + d) | 0
    },
    _doFinalize: function() {
      var a = this._data;
      var d = a.words;
      var c = this._nDataBytes * 8;
      var b = a.sigBytes * 8;
      d[b >>> 5] |= 128 << (24 - b % 32);
      d[(((b + 64) >>> 9) << 4) + 15] = c;
      a.sigBytes = d.length * 4;
      this._process()
    }
  });
  t.SHA256 = p._createHelper(o);
  t.HmacSHA256 = p._createHmacHelper(o)
}(Math));
(function() {
  var v = CryptoJS;
  var u = v.lib;
  var r = u.Hasher;
  var q = v.x64;
  var s = q.Word;
  var m = q.WordArray;
  var n = v.algo;

  function p() {
    return s.create.apply(s, arguments)
  }
  var l = [p(1116352408, 3609767458), p(1899447441, 602891725), p(3049323471, 3964484399), p(3921009573, 2173295548), p(961987163, 4081628472), p(1508970993, 3053834265), p(2453635748, 2937671579), p(2870763221, 3664609560), p(3624381080, 2734883394), p(310598401, 1164996542), p(607225278, 1323610764), p(1426881987, 3590304994), p(1925078388, 4068182383), p(2162078206, 991336113), p(2614888103, 633803317), p(3248222580, 3479774868), p(3835390401, 2666613458), p(4022224774, 944711139), p(264347078, 2341262773), p(604807628, 2007800933), p(770255983, 1495990901), p(1249150122, 1856431235), p(1555081692, 3175218132), p(1996064986, 2198950837), p(2554220882, 3999719339), p(2821834349, 766784016), p(2952996808, 2566594879), p(3210313671, 3203337956), p(3336571891, 1034457026), p(3584528711, 2466948901), p(113926993, 3758326383), p(338241895, 168717936), p(666307205, 1188179964), p(773529912, 1546045734), p(1294757372, 1522805485), p(1396182291, 2643833823), p(1695183700, 2343527390), p(1986661051, 1014477480), p(2177026350, 1206759142), p(2456956037, 344077627), p(2730485921, 1290863460), p(2820302411, 3158454273), p(3259730800, 3505952657), p(3345764771, 106217008), p(3516065817, 3606008344), p(3600352804, 1432725776), p(4094571909, 1467031594), p(275423344, 851169720), p(430227734, 3100823752), p(506948616, 1363258195), p(659060556, 3750685593), p(883997877, 3785050280), p(958139571, 3318307427), p(1322822218, 3812723403), p(1537002063, 2003034995), p(1747873779, 3602036899), p(1955562222, 1575990012), p(2024104815, 1125592928), p(2227730452, 2716904306), p(2361852424, 442776044), p(2428436474, 593698344), p(2756734187, 3733110249), p(3204031479, 2999351573), p(3329325298, 3815920427), p(3391569614, 3928383900), p(3515267271, 566280711), p(3940187606, 3454069534), p(4118630271, 4000239992), p(116418474, 1914138554), p(174292421, 2731055270), p(289380356, 3203993006), p(460393269, 320620315), p(685471733, 587496836), p(852142971, 1086792851), p(1017036298, 365543100), p(1126000580, 2618297676), p(1288033470, 3409855158), p(1501505948, 4234509866), p(1607167915, 987167468), p(1816402316, 1246189591)];
  var t = [];
  (function() {
    for (var a = 0; a < 80; a++) {
      t[a] = p()
    }
  }());
  var o = n.SHA512 = r.extend({
    _doReset: function() {
      this._hash = m.create([p(1779033703, 4089235720), p(3144134277, 2227873595), p(1013904242, 4271175723), p(2773480762, 1595750129), p(1359893119, 2917565137), p(2600822924, 725511199), p(528734635, 4215389547), p(1541459225, 327033209)])
    },
    _doProcessBlock: function(bo, bi) {
      var bn = this._hash.words;
      var b = bn[0];
      var e = bn[1];
      var g = bn[2];
      var h = bn[3];
      var j = bn[4];
      var H = bn[5];
      var ah = bn[6];
      var al = bn[7];
      var aW = b.high;
      var aY = b.low;
      var a4 = e.high;
      var a6 = e.low;
      var bk = g.high;
      var c = g.low;
      var bE = h.high;
      var bG = h.low;
      var bM = j.high;
      var bP = j.low;
      var bp = H.high;
      var br = H.low;
      var aU = ah.high;
      var aV = ah.low;
      var a2 = al.high;
      var a3 = al.low;
      var a8 = aW;
      var be = aY;
      var bu = a4;
      var bw = a6;
      var aX = bk;
      var aZ = c;
      var a5 = bE;
      var a9 = bG;
      var a = bM;
      var i = bP;
      var bF = bp;
      var bH = br;
      var bO = aU;
      var a7 = aV;
      var bq = a2;
      var bt = a3;
      for (var aS = 0; aS < 80; aS++) {
        var a0 = t[aS];
        if (aS < 16) {
          var bg = a0.high = bo[bi + aS * 2] | 0;
          var bl = a0.low = bo[bi + aS * 2 + 1] | 0
        } else {
          var bm = t[aS - 15];
          var bc = bm.high;
          var bd = bm.low;
          var bQ = ((bd << 31) | (bc >>> 1)) ^ ((bd << 24) | (bc >>> 8)) ^ (bc >>> 7);
          var ba = ((bc << 31) | (bd >>> 1)) ^ ((bc << 24) | (bd >>> 8)) ^ ((bc << 25) | (bd >>> 7));
          var bA = t[aS - 2];
          var bf = bA.high;
          var bj = bA.low;
          var bs = ((bj << 13) | (bf >>> 19)) ^ ((bf << 3) | (bj >>> 29)) ^ (bf >>> 6);
          var bv = ((bf << 13) | (bj >>> 19)) ^ ((bj << 3) | (bf >>> 29)) ^ ((bf << 26) | (bj >>> 6));
          var bD = t[aS - 7];
          var bx = bD.high;
          var bz = bD.low;
          var bN = t[aS - 16];
          var by = bN.high;
          var aQ = bN.low;
          var bl = ba + bz;
          var bg = bQ + bx + ((bl >>> 0) < (ba >>> 0) ? 1 : 0);
          var bl = bl + bv;
          var bg = bg + bs + ((bl >>> 0) < (bv >>> 0) ? 1 : 0);
          var bl = bl + aQ;
          var bg = bg + by + ((bl >>> 0) < (aQ >>> 0) ? 1 : 0);
          a0.high = bg;
          a0.low = bl
        }
        var aR = (a & bF) ^ (~a & bO);
        var aT = (i & bH) ^ (~i & a7);
        var d = (a8 & bu) ^ (a8 & aX) ^ (bu & aX);
        var k = (be & bw) ^ (be & aZ) ^ (bw & aZ);
        var bB = ((be << 4) | (a8 >>> 28)) ^ ((a8 << 30) | (be >>> 2)) ^ ((a8 << 25) | (be >>> 7));
        var bC = ((a8 << 4) | (be >>> 28)) ^ ((be << 30) | (a8 >>> 2)) ^ ((be << 25) | (a8 >>> 7));
        var bK = ((i << 18) | (a >>> 14)) ^ ((i << 14) | (a >>> 18)) ^ ((a << 23) | (i >>> 9));
        var bL = ((a << 18) | (i >>> 14)) ^ ((a << 14) | (i >>> 18)) ^ ((i << 23) | (a >>> 9));
        var a1 = l[aS];
        var f = a1.high;
        var M = a1.low;
        var bJ = bt + bL;
        var bI = bq + bK + ((bJ >>> 0) < (bt >>> 0) ? 1 : 0);
        var bJ = bJ + aT;
        var bI = bI + aR + ((bJ >>> 0) < (aT >>> 0) ? 1 : 0);
        var bJ = bJ + M;
        var bI = bI + f + ((bJ >>> 0) < (M >>> 0) ? 1 : 0);
        var bJ = bJ + bl;
        var bI = bI + bg + ((bJ >>> 0) < (bl >>> 0) ? 1 : 0);
        var bh = bC + k;
        var bb = bB + d + ((bh >>> 0) < (bC >>> 0) ? 1 : 0);
        bq = bO;
        bt = a7;
        bO = bF;
        a7 = bH;
        bF = a;
        bH = i;
        i = (a9 + bJ) | 0;
        a = (a5 + bI + ((i >>> 0) < (a9 >>> 0) ? 1 : 0)) | 0;
        a5 = aX;
        a9 = aZ;
        aX = bu;
        aZ = bw;
        bu = a8;
        bw = be;
        be = (bJ + bh) | 0;
        a8 = (bI + bb + ((be >>> 0) < (bJ >>> 0) ? 1 : 0)) | 0
      }
      aY = b.low = (aY + be) | 0;
      b.high = (aW + a8 + ((aY >>> 0) < (be >>> 0) ? 1 : 0)) | 0;
      a6 = e.low = (a6 + bw) | 0;
      e.high = (a4 + bu + ((a6 >>> 0) < (bw >>> 0) ? 1 : 0)) | 0;
      c = g.low = (c + aZ) | 0;
      g.high = (bk + aX + ((c >>> 0) < (aZ >>> 0) ? 1 : 0)) | 0;
      bG = h.low = (bG + a9) | 0;
      h.high = (bE + a5 + ((bG >>> 0) < (a9 >>> 0) ? 1 : 0)) | 0;
      bP = j.low = (bP + i) | 0;
      j.high = (bM + a + ((bP >>> 0) < (i >>> 0) ? 1 : 0)) | 0;
      br = H.low = (br + bH) | 0;
      H.high = (bp + bF + ((br >>> 0) < (bH >>> 0) ? 1 : 0)) | 0;
      aV = ah.low = (aV + a7) | 0;
      ah.high = (aU + bO + ((aV >>> 0) < (a7 >>> 0) ? 1 : 0)) | 0;
      a3 = al.low = (a3 + bt) | 0;
      al.high = (a2 + bq + ((a3 >>> 0) < (bt >>> 0) ? 1 : 0)) | 0
    },
    _doFinalize: function() {
      var d = this._data;
      var c = d.words;
      var b = this._nDataBytes * 8;
      var a = d.sigBytes * 8;
      c[a >>> 5] |= 128 << (24 - a % 32);
      c[(((a + 128) >>> 10) << 5) + 31] = b;
      d.sigBytes = c.length * 4;
      this._process();
      this._hash = this._hash.toX32()
    },
    blockSize: 1024 / 32
  });
  v.SHA512 = r._createHelper(o);
  v.HmacSHA512 = r._createHmacHelper(o)
}());
CryptoJS.mode.CFB = (function() {
  var c = CryptoJS.lib.BlockCipherMode.extend();
  c.Encryptor = c.extend({
    processBlock: function(a, b) {
      var h = this._cipher;
      var g = h.blockSize;
      d.call(this, a, b, g, h);
      this._prevBlock = a.slice(b, b + g)
    }
  });
  c.Decryptor = c.extend({
    processBlock: function(a, b) {
      var j = this._cipher;
      var h = j.blockSize;
      var i = a.slice(b, b + h);
      d.call(this, a, b, h, j);
      this._prevBlock = i
    }
  });

  function d(a, b, k, n) {
    var m = this._iv;
    if (m) {
      var i = m.slice(0);
      this._iv = undefined
    } else {
      var i = this._prevBlock
    }
    n.encryptBlock(i, 0);
    for (var l = 0; l < k; l++) {
      a[b + l] ^= i[l]
    }
  }
  return c
}());
CryptoJS.mode.ECB = (function() {
  var b = CryptoJS.lib.BlockCipherMode.extend();
  b.Encryptor = b.extend({
    processBlock: function(d, a) {
      this._cipher.encryptBlock(d, a)
    }
  });
  b.Decryptor = b.extend({
    processBlock: function(d, a) {
      this._cipher.decryptBlock(d, a)
    }
  });
  return b
}());
CryptoJS.mode.OFB = (function() {
  var c = CryptoJS.lib.BlockCipherMode.extend();
  var d = c.Encryptor = c.extend({
    processBlock: function(a, b) {
      var n = this._cipher;
      var k = n.blockSize;
      var m = this._iv;
      var i = this._keystream;
      if (m) {
        i = this._keystream = m.slice(0);
        this._iv = undefined
      }
      n.encryptBlock(i, 0);
      for (var l = 0; l < k; l++) {
        a[b + l] ^= i[l]
      }
    }
  });
  c.Decryptor = d;
  return c
}());
CryptoJS.mode.CTR = (function() {
  var c = CryptoJS.lib.BlockCipherMode.extend();
  var d = c.Encryptor = c.extend({
    processBlock: function(a, b) {
      var p = this._cipher;
      var l = p.blockSize;
      var n = this._iv;
      var o = this._counter;
      if (n) {
        o = this._counter = n.slice(0);
        this._iv = undefined
      }
      var i = o.slice(0);
      p.encryptBlock(i, 0);
      o[l - 1] = (o[l - 1] + 1) | 0;
      for (var m = 0; m < l; m++) {
        a[b + m] ^= i[m]
      }
    }
  });
  c.Decryptor = d;
  return c
}());
CryptoJS.pad.ZeroPadding = {
  pad: function(f, e) {
    var d = e * 4;
    f.clamp();
    f.sigBytes += d - ((f.sigBytes % d) || d)
  },
  unpad: function(d) {
    var f = d.words;
    var e = d.sigBytes - 1;
    while (!((f[e >>> 2] >>> (24 - (e % 4) * 8)) & 255)) {
      e--
    }
    d.sigBytes = e + 1
  }
};
CryptoJS.pad.NoPadding = {
  pad: function() {},
  unpad: function() {}
};
CryptoJS.pad.Iso97971 = {
  pad: function(c, d) {
    c.concat(CryptoJS.lib.WordArray.create([2147483648], 1));
    CryptoJS.pad.ZeroPadding.pad(c, d)
  },
  unpad: function(b) {
    CryptoJS.pad.ZeroPadding.unpad(b);
    b.sigBytes--
  }
};
CryptoJS.pad.Iso10126 = {
  pad: function(h, f) {
    var e = f * 4;
    var g = e - h.sigBytes % e;
    h.concat(CryptoJS.lib.WordArray.random(g - 1)).concat(CryptoJS.lib.WordArray.create([g << 24], 1))
  },
  unpad: function(d) {
    var c = d.words[(d.sigBytes - 1) >>> 2] & 255;
    d.sigBytes -= c
  }
};
$KI.db = {
  changeversion: function(g, j, i, k, l, h) {
    if (window.openDatabase) {
      if (g) {
        g.changeVersion(j, i, k, l, h)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  executesql: function(h, g, i, f, j) {
    if (window.openDatabase) {
      if (h) {
        if (i && i[0] === null) {
          i = i.slice(1)
        }
        h.executeSql(g, i, f, j)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  opendatabase: function(m, e, j, l, i) {
    var n = this.db || null;
    i = i || kony_dummyForDBCallback;
    try {
      if (window.openDatabase) {
        if (!n) {
          n = openDatabase(m, e, j, l, i);
          this.db = n
        }
      } else {
        kony.print("Web Databases not supported")
      }
    } catch (k) {
      if (k == 2) {
        kony.print("opendatabase:Invalid database version.")
      } else {
        kony.print("opendatabase:Unknown error " + k + ".")
      }
      return null
    }
    return n
  },
  readtransaction: function(e, g, h, f) {
    if (window.openDatabase) {
      if (e) {
        e.readTransaction(g, h, f)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  sqlresultsetrowitem: function(f, e, d) {
    if (window.openDatabase) {
      if (d < e.rows.length) {
        return e.rows.item(d)
      } else {
        return null
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  transaction: function(e, g, h, f) {
    if (window.openDatabase) {
      if (e) {
        e.transaction(g, h, f)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  }
};

function kony_dummyForDBCallback() {}
if (typeof(localStorage) === "object" || kony.appinit.isIE7) {
  $KI.ds = {
    save: function(k, j, h) {
      if (localStorage) {
        try {
          localStorage.setItem(j, JSON.stringify(k))
        } catch (l) {
          if (l.name == "QUOTA_EXCEEDED_ERR") {
            var e = 0,
              i = "";
            if (localStorage.length === 0) {
              e = 707;
              i = "Private Browsing is switched ON"
            } else {
              e = 708;
              i = "Data storage limit has exceeded"
            }
            return {
              errcode: e,
              errmsg: i
            }
          }
        }
      } else {
        kony.print("localStorage not supported")
      }
    },
    read: function(c) {
      if (localStorage) {
        var d = JSON.parse(localStorage.getItem(c) || "null");
        return d
      } else {
        kony.print("localStorage readitem failed");
        return null
      }
    },
    Delete: function(b) {
      if (localStorage) {
        localStorage.removeItem(b);
        return true
      } else {
        kony.print("localStorage delete failed");
        return false
      }
    }
  };
  $KI.localstorage = {
    key: function(b) {
      return (localStorage.key(b - IndexJL))
    },
    getitem: function(c) {
      var d = JSON.parse(localStorage.getItem(c) || "null");
      return d
    },
    setitem: function(i, e) {
      var g = i,
        h = e;
      if (typeof i == "object") {
        for (x in i) {
          g = x
        }
        h = i[x]
      }
      try {
        localStorage.setItem(g, JSON.stringify(h))
      } catch (j) {
        if (j.name == "QUOTA_EXCEEDED_ERR") {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        }
      }
    },
    removeitem: function(b) {
      localStorage.removeItem(b)
    },
    clear: function() {
      localStorage.clear()
    },
    length: function() {
      return localStorage.length
    }
  }
} else {
  kony.print("localStorage not supported")
}
kony.application = {
  createAppMenu: $KW.Appmenu && $KW.Appmenu.createappmenu,
  setCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.setcurrentappmenu,
  getCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.getcurrentappmenu,
  setAppMenuFocusByID: $KW.Appmenu && $KW.Appmenu.setappmenufocusbyid,
  addAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.addappmenuitemat,
  removeAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.removeappmenuitemat,
  setAppMenu: $KW.Appmenu && $KW.Appmenu.setappmenu,
  setAppMenuFocusIndex: $KW.Appmenu && $KW.Appmenu.setappmenufocusindex,
  showAppMenuItems: $KW.Appmenu && $KW.Appmenu.showappmenuitems,
  hideAppMenuItems: $KW.Appmenu && $KW.Appmenu.hideappmenuitems,
  setBMState: kony.bm.setBMState,
  resetBMState: kony.bm.resetBMState,
  getBMState: kony.bm.getBMState,
  getFormId: kony.bm.getFormId,
  addBMState: kony.bm.addBMState,
  removeBMState: kony.bm.removeBMState,
  exit: $KI.exit,
  getPreviousForm: $KW.Form && $KW.Form.getPreviousForm,
  getCurrentForm: $KW.Form && $KW.Form.getCurrentForm,
  removeGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.removegesturerecognizerforallforms,
  setGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.addgesturerecognizerforallforms,
  getApplicationMode: $KI.os && $KI.os.getapplicationmode,
  setApplicationMode: $KI.os && $KI.os.setapplicationmode,
  setApplicationInitializationEvents: $KI.setappevents,
  registerForIdleTimeout: $KI.appevents && $KI.appevents.registerforidletimeout,
  unregisterForIdleTimeout: $KI.appevents && $KI.appevents.unregisterforidletimeout,
  setApplicationBadgeValue: tobeimplemented,
  getApplicationBadgeValue: tobeimplemented,
  setAppMenuBadgeValue: tobeimplemented,
  getAppMenuBadgeValue: tobeimplemented,
  appReset: $KI.appreset,
  setAppHeaders: $KI.setappheaders,
  setAppFooters: $KI.setappfooters,
  setApplicationCallbacks: $KI.setapplicationcallbacks,
  setApplicationBehaviors: $KI.setapplicationbehaviors,
  showLoadingScreen: $KI.window && $KI.window.showLoadingScreen,
  dismissLoadingScreen: $KI.window && $KI.window.dismissLoadingScreen,
  openURL: $KI.window.openURL
};
kony.cloud = {};
kony.cloud.appevents = (function() {
  var a = {
    id: null,
    value: 0,
    cb: null,
    enabled: false,
    expired: false,
    lastInteraction: 0
  };
  return {
    timercb: function() {
      var b = $KW.Form.getCurrentForm();
      a.cb && a.cb(b)
    },
    registerforidletimeout: function(c, b) {
      if (!a.enabled) {
        a.value = c * 60 * 1000;
        a.id = setTimeout(kony.cloud.appevents.timercb, a.value);
        a.lastInteraction = new Date().getTime();
        a.enabled = true;
        a.expired = false;
        a.cb = b;
        $KG.__cloudidletimeout = a
      }
    },
    unregisterforidletimeout: function() {
      clearTimeout(a.id);
      a.enabled = false;
      $KG.__cloudidletimeout = ""
    },
    resettimer: function() {
      var b = new Date().getTime();
      if ((b - a.lastInteraction) >= a.value) {
        $KI.appevents.timercb();
        return
      } else {
        clearTimeout(a.id);
        a.id = setTimeout(kony.cloud.appevents.timercb, a.value);
        a.lastInteraction = b
      }
    }
  }
})();
kony.setUserID = function(b) {
  var a = new Array;
  a.push(b);
  kony.ds.save(a, "konyUserID")
};
kony.license = {};
kony.license.lastIdleTimeoutTime = 0;
kony.license.timeoutVal = 30;
kony.license.nextSession = true;
kony.metric = {};
kony.license.disableMetricReporting = function() {
  kony.ds.save(["true"], "LicenseDisableFlag")
};
kony.license.startLicenseService = function() {
  kony.setUserID = function(b) {
    var a = new Array;
    a.push(b);
    kony.ds.save(a, "konyUserID")
  };
  kony.metric.reportCallback = function(b, a) {
    kony.print("Status : " + b);
    kony.print("Result : " + a);
    if (b === 400) {
      if (a.opstatus === 0) {
        kony.ds.remove("konyCustomReportData")
      }
    }
  };
  kony.metric.report = function(h, e) {
    if (typeof(h) === "undefined" || typeof(e) === "undefined") {
      kony.print("Invalid parameters to kony.metric.report");
      return
    }
    if (typeof(e) !== "object") {
      kony.print("Invalid parameters to kony.metric.report");
      return
    }
    if (typeof(h) !== "string") {
      if (typeof h === "object") {
        if (typeof(h.id) === "undefined" || h.id === null || typeof(h.id) !== "string") {
          kony.print("Invalid parameters to kony.metric.report");
          return
        }
        h = h.id.toString()
      } else {
        kony.print("Invalid parameters to kony.metric.report");
        return
      }
    }
    var a = {};
    var b = kony.ds.read("konyCustomReportData");
    if (b === undefined || b === null) {
      b = new Array()
    }
    kony.ds.remove("konyCustomReportData");
    var d = {};
    var c = kony.ds.read("konyUUID");
    if (c !== undefined && c !== null && c.length > 0) {
      d.rsid = c[0]
    } else {
      d.rsid = new Date().getTime().toString()
    }
    d.fid = h;
    if (!h) {
      var f = document.getElementsByTagName("form")[0];
      if (f != null && (f.id != undefined || f.id != null)) {
        d.fid = f.id
      }
    }
    d.metrics = e;
    d.ts = kony.license.getCurrentDateTime();
    b.push(d);
    var g = "";
    if (appConfig.url !== undefined && appConfig.url !== null) {
      g = appConfig.url.slice(0, -9) + "CMS"
    }
    a.httpconfig = {
      timeout: 60
    };
    $KI.net.invokeserviceasync(g, a, function(j, i) {
      kony.print("Status : " + j);
      kony.print("Result : " + JSON.stringify(i));
      if (j === 400) {
        if (i.opstatus === 0) {
          kony.print("metrics data successfully sent")
        } else {
          var k = kony.ds.read("konyCustomReportData");
          if (!k) {
            k = new Array()
          }
          k.push(b);
          kony.ds.save(k, "konyCustomReportData")
        }
      }
    }, null, "metric", b)
  };
  kony.license.generateUUID = function() {
    var a = function() {
      return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1)
    };
    return (new Date().getTime() + "-" + a() + "-" + a() + "-" + a())
  };
  kony.license.isCloud = function() {
    var a = kony.ds.read("LicenseDisableFlag");
    if (a && a[0] === "true") {
      return false
    }
    return true
  };
  kony.license.getCurrentDateTime = function() {
    var a, c, b;
    a = new Date();
    c = new Date().getUTCMonth() + 1;
    b = (("00" + a.getUTCFullYear()).slice(-4)) + "-" + (("00" + c).slice(-2)) + "-" + (("00" + a.getUTCDate()).slice(-2)) + " " + (("00" + a.getUTCHours()).slice(-2)) + ":" + (("00" + a.getUTCMinutes()).slice(-2)) + ":" + (("00" + a.getUTCSeconds()).slice(-2));
    return b
  };
  kony.license.appendLicenseTrackingKeys = function(g, c) {
    var e = {};
    if (kony.license.isCloud() === true) {
      e.plat = kony.os.deviceInfo().name;
      e.aid = appConfig.appId;
      e.aver = appConfig.appVersion;
      e.aname = appConfig.appName;
      var i = kony.ds.read("deviceID");
      if (!i) {
        i = kony.license.generateUUID().toString();
        kony.ds.save(i, "deviceID")
      }
      e.did = i;
      e.os = kony.os.deviceInfo().version;
      e.stype = "b2c";
      e.dm = kony.os.deviceInfo().model;
      e.ua = kony.os.userAgent();
      e.chnl = getChannel();
      e.plat = getPlatform();
      e.atype = "spa";
      var j = document.getElementsByTagName("form")[0];
      if (j != null && (j.id != undefined || j.id != null)) {
        e.fid = j.id
      }
      var f = $KI.ds.read("konyUserID");
      if (f !== undefined && f !== null && f.length > 0) {
        e.kuid = f[0]
      } else {
        e.kuid = ""
      }
      if (g === "session") {
        var b = new Array();
        b.push(kony.license.generateUUID().toString());
        kony.ds.save(b, "konyUUID");
        var d = kony.ds.read("konyOfflineAccessData");
        if (d === undefined || d === null) {
          d = new Array()
        }
        var a = new Array();
        a.push(b[0]);
        a.push(kony.license.getCurrentDateTime());
        d.push(a);
        kony.ds.save(d, "konyOfflineAccessData");
        if (d === undefined || d === null) {
          e.launchDates = a
        } else {
          e.launchDates = d
        }
        var h = new Array();
        e.metrics = h;
        e.svcid = "RegisterKonySession";
        kony.print("---------->LaunchDates : " + e.launchDates)
      } else {
        if (g === "metric") {
          if (c === undefined || c === null) {
            c = new Array()
          }
          e.reportData = c;
          e.svcid = "CaptureKonyCustomMetrics"
        } else {
          var b = kony.ds.read("konyUUID");
          if (b !== undefined && b !== null && b.length > 0) {
            e.rsid = b[0]
          } else {
            e.rsid = kony.license.generateUUID().toString()
          }
          var h = new Array();
          e.metrics = h
        }
      }
    }
    return e
  };
  kony.license.licenseUsageServiceCallback = function(c, a) {
    kony.print("Status : " + c);
    kony.print("Result : " + a);
    if (c === 400) {
      if (a.opstatus === 0) {
        kony.ds.remove("konyOfflineAccessData");
        kony.ds.remove("konyOfflineSessionsCount")
      } else {
        var d, b;
        b = kony.ds.read("konyOfflineSessionsCount");
        if (b === undefined || b === null || b.length < 1) {
          b = new Array();
          b.push(1)
        } else {
          d = b[0] + 1;
          b[0] = d
        }
        kony.ds.save(b, "konyOfflineSessionsCount");
        if (d >= 50) {
          alert("Maximum Offline Sessions Exceeded")
        }
      }
    }
  };
  kony.license.captureKonyLicenseUsage = function(g) {
    var d, e, f, a;
    var c = true;
    if (g === undefined || g === null) {
      g = false
    } else {
      if (g !== true) {
        g = false
      }
    }
    if (kony.license.isCloud() === false) {
      kony.print("Not Cloud");
      c = false
    }
    if (kony.ds.read("konyLastAccessTime") !== undefined && kony.ds.read("konyLastAccessTime") !== null) {
      d = new Date();
      e = new Date(kony.ds.read("konyLastAccessTime")[0]);
      f = d.getTime() - e.getTime();
      if (f < 1800000 && g === false) {
        c = false
      } else {
        kony.ds.remove("konyLastAccessTime")
      }
    }
    if (c === true) {
      a = "";
      if (window.location.protocol === "https:") {
        if (appConfig.secureurl !== undefined && appConfig.secureurl !== null) {
          a = appConfig.secureurl.slice(0, -9) + "IST"
        }
      } else {
        if (appConfig.url !== undefined && appConfig.url !== null) {
          a = appConfig.url.slice(0, -9) + "IST"
        }
      }
      var b = {};
      b.httpconfig = {};
      $KI.net.invokeserviceasync(a, b, kony.license.licenseUsageServiceCallback, null, "session")
    }
  };
  kony.license.backgroundTimeCapture = function() {
    if (kony.license.isCloud() === true) {
      var a = new Array();
      a.push(new Date().toString());
      kony.ds.save(a, "konyLastAccessTime")
    }
  };
  kony.license.clearLastAccess = function() {
    if (kony.license.isCloud() === true) {
      kony.ds.remove("konyLastAccessTime")
    }
  };
  kony.license.setAppCallbacksOverride = function() {
    var b = kony.application.setApplicationCallbacks;

    function a(c) {
      if (kony.license.isCloud() === true) {
        if (c !== undefined && c !== null) {
          if (c.onforeground !== undefined && c.onforeground !== null) {
            var f = c.onforeground;
            var h = function() {
              kony.license.captureKonyLicenseUsage(false);
              f()
            };
            c.onforeground = h
          }
          if (c.onbackground !== undefined && c.onbackground !== null) {
            var i = c.onbackground;
            var g = function() {
              kony.license.backgroundTimeCapture();
              i()
            };
            c.onbackground = g
          }
          if (c.onappterminate !== undefined && c.onappterminate !== null) {
            var e = c.onappterminate;
            var d = function() {
              kony.license.clearLastAccess();
              e()
            };
            c.onappterminate = d
          }
        }
      }
      return b(c)
    }
    kony.application.setApplicationCallbacks = a
  };
  kony.license.invokeServiceAsyncOverride = function() {
    var b = $KI.net.invokeserviceasync;

    function a(g, d, i, f, c, e) {
      if (kony.license.isCloud() === true) {
        if (d === undefined || d === null) {
          d = {}
        }
        if (d !== undefined && d !== null) {
          if (c !== undefined && c !== null) {
            d.konyreportingparams = h(d.konyreportingparams, c, e)
          } else {
            d.konyreportingparams = h(d.konyreportingparams, null, null)
          }
        }
      }
      return b(g, d, i, f);

      function h(o, j, k) {
        var m = kony.license.appendLicenseTrackingKeys(j, k);
        if (!o) {
          return JSON.stringify(m)
        } else {
          try {
            if (typeof(o) === "string") {
              o = JSON.parse(o)
            }
            for (var l in m) {
              if (typeof(o[l]) === "undefined") {
                o[l] = m[l]
              }
            }
            return JSON.stringify(o)
          } catch (n) {
            kony.print("unable to parse params " + o);
            return JSON.stringify(m)
          }
        }
      }
    }
    $KI.net.invokeserviceasync = a
  };
  kony.license.invokeServiceSyncOverride = function() {
    var b = $KI.net.invokeservicesync;

    function a(d, c, e) {
      if (kony.license.isCloud() === true) {
        if (c === undefined || c === null) {
          c = {}
        }
        if (c !== undefined && c !== null) {
          c.konyreportingparams = JSON.stringify(kony.license.appendLicenseTrackingKeys(null))
        }
      }
      return b(d, c, e)
    }
    $KI.net.invokeservicesync = a
  };
  kony.license.setAppInitializationEventsOverride = function() {
    var b = $KI.setappevents;

    function a(c) {
      if (kony.license.isCloud() === true) {
        kony.print("Registering session time out");
        kony.cloud.appevents.registerforidletimeout(30, cloudSessionCallback);
        if (c !== undefined && c !== null) {
          if (c.postappinit !== undefined && c.postappinit !== null) {
            var d = c.postappinit;
            var e = function() {
              kony.license.captureKonyLicenseUsage(true);
              var f = d();
              if (f !== undefined || f !== null) {
                return f
              }
            };
            c.postappinit = e
          } else {
            var e = function() {
              kony.license.captureKonyLicenseUsage(true)
            };
            c.postappinit = e
          }
        }
      }
      return b(c)
    }
    $KI.setappevents = a
  };
  kony.license.apiOverride = function() {
    var a = {
      onforeground: kony.license.captureKonyLicenseUsage,
      onbackground: kony.license.backgroundTimeCapture,
      onappterminate: kony.license.clearLastAccess
    };
    kony.license.invokeServiceAsyncOverride();
    kony.license.invokeServiceSyncOverride();
    kony.license.setAppInitializationEventsOverride()
  };
  kony.license.apiOverride()
};
kony.license.startLicenseService();

function cloudSessionCallback() {
  kony.ds.remove("konyLastAccessTime");
  kony.ds.remove("konyUUID");
  kony.ds.remove("konyCustomReportData");
  kony.ds.remove("konyOfflineAccessData");
  kony.license.captureKonyLicenseUsage();
  kony.cloud.appevents.unregisterforidletimeout();
  kony.cloud.appevents.registerforidletimeout(30, cloudSessionCallback)
}

function getPlatform() {
  if ((/android/gi).test(navigator.userAgent)) {
    return "android"
  } else {
    if ((/iphone|ipad|ipod/gi).test(navigator.userAgent)) {
      return "ios"
    } else {
      if ((/bb10/gi).test(navigator.userAgent) || (/blackberry/gi).test(navigator.userAgent)) {
        return "blackberry"
      } else {
        if ((/Windows/gi).test(navigator.userAgent)) {
          return "windows"
        } else {
          if ((/j2me/gi).test(navigator.userAgent)) {
            return "j2me"
          } else {
            return ""
          }
        }
      }
    }
  }
}

function getChannel() {
  if ((/hp-tablet|ipad|playbook/gi).test(navigator.userAgent) || ((/android/gi).test(navigator.userAgent) && !(/mobile/gi).test(navigator.userAgent))) {
    return "tablet"
  } else {
    if ((/mobile/gi).test(navigator.userAgent)) {
      return "mobile"
    } else {
      return "desktop"
    }
  }
};
$KW.Form = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Form", this.orientationHandler)
  },
  initializeView: function(g, e) {
    var a = [$KW.Label, $KW.Calendar, $KW.HStrip, $KW.Segment, $KW.ScrollBox, $KW.TabPane, $KW.Line, $KW.Switch, $KW.TextField, $KW.DataGrid, $KW.Media, $KW.MenuContainer, $KW.ComboBox, $KW.Slider, $KW.Map, $KW.FlexContainer, $KW.FlexScrollContainer, $KW.Browser];
    for (var c = 0; c < a.length; c++) {
      if (a[c]) {
        a[c].initializeView && a[c].initializeView(g)
      }
    }
    if (e) {
      $KW.Form.resizeForm(g)
    }
    var f = document.getElementsByTagName("body")[0];
    var d = f.style.width;
    if (d.indexOf("%") != -1) {
      d = d.replace("%", "");
      f.setAttribute("percentage", "true");
      var b = (screen.width / 100) * d;
      f.setAttribute("formWidth", b)
    }
    if (f.getAttribute("percentage") == "true") {
      $KW.Form.adjustBodyWidth(g)
    }
  },
  updateView: function(d, c, b, a) {
    switch (c) {
      case "title":
        document.title = b || $KG.apptitle || $KG.appid;
        d.i18n_title = "";
        break;
      case "padding":
        var e = document.getElementById(d.id);
        if (!$KG.needScroller) {
          e && (e.style[c] = $KU.joinArray(b, "% ") + "%")
        }
        break
    }
  },
  orientationHandler: function(d, b) {
    var a = $KG.allforms[d];
    if (a) {
      $KW.Form.setFormDimensions(a);
      $KW.Form.initializeFlexContainers(a);
      var c = $KU.returnEventReference(a.onorientationchange);
      c && c.call(a, a, b)
    }
  },
  setFormDimensions: function(b) {
    if ($KU.isFlexContainer(b)) {
      var c = document.getElementById(b.id);
      var a = document.getElementById(b.id + "_scroller");
      if (c && a) {
        c.style.height = a.offsetHeight + "px";
        c.style.width = a.offsetWidth + "px"
      }
    }
  },
  generateAppmenu: function(a) {
    var b = document.getElementById("appmenumore_container");
    if (b) {
      b.parentNode.removeChild(b)
    }
    if ($KG.__appmenu && a.needappmenu) {
      return $KW.Appmenu && $KW.Appmenu.render($KG.__appmenu)
    } else {
      return ""
    }
  },
  initializeTemplates: function(a) {
    $KW.touch.computeSnapWidths(a, "Segment");
    this.initializeTouchWidgets(a)
  },
  initializeTouchWidgets: function(b, a) {
    $KW.Scroller.initializeScrollBoxes(b);
    $KW.Scroller.initializePageViews(b);
    this.initializeView(b, a)
  },
  initializeFlexContainers: function(a) {
    $KG.isUILayedOut = false;
    if (!a) {
      return
    }
    var b = $KG.needScroller ? a.id + "_container" : a.id;
    $KW.touch.computeSnapWidths(b, "Segment");
    this.initializeFlexContainersInTemplate(a);
    this.initializeAllFlexContainers(a);
    $KG.isUILayedOut = true
  },
  initializeFlexContainersInTemplate: function(a) {
    if (a.headers && a.headers.length > 0) {
      this.initializeBox(a, a.headers[0], $KG.needScroller ? a.id + "_header" : "header_container")
    }
    if (a.footers && a.footers.length > 0) {
      this.initializeBox(a, a.footers[0], $KG.needScroller ? a.id + "_footer" : "footer_container")
    }
  },
  initializeBox: function(a, b, d) {
    if (b.wType == "FlexContainer") {
      var c = document.querySelector("#" + d + ' div[kwidgettype="FlexContainer"]');
      $KW.FlexContainer.forceLayout(b, c)
    } else {
      this.initializeFlexContainersInBox(b)
    }
  },
  initializeAllFlexContainers: function(a) {
    if ($KU.isFlexContainer(a)) {
      a.forceLayout();
      return
    }
    this.initializeFlexContainersInBox(a)
  },
  initializeFlexContainersInBox: function(c) {
    var e = c.ownchildrenref;
    var g = c.wType;
    for (var b = 0; b < e.length; b++) {
      var d = e[b];
      var a = d.wType;
      if (g == "TabPane" && !$KW.TabPane.isActiveTab(c, d)) {
        if (c.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          continue
        }
      }
      switch (a) {
        case "FlexContainer":
        case "FlexScrollContainer":
          d.forceLayout();
          break;
        case "Segment":
          var f = $KU.getNodeByModel(d);
          if (f) {
            if (d.layoutConfig.self) {
              $KU.needOptimization = false
            }
            d.isvisible && $KW.FlexContainer.adjustFlexContainers(d, f);
            if (d.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
              $KW.touch.computeWidths(f, d)
            }
            $KU.needOptimization = true
          }
          break
      }
      if ((d.wType == "HBox" || d.wType == "VBox" || d.wType == "TabPane" || d.wType == "ScrollBox") && d.ownchildrenref) {
        this.initializeFlexContainersInBox(d)
      }
    }
  },
  destroyTouchWidgets: function(a, b) {
    if (!b) {
      $KW.Scroller.destroyFormScroller(a)
    }
    $KW.Scroller.destroyScrollBoxes(a);
    $KW.Scroller.destroyImageStripStripViews(a);
    $KW.Scroller.destroyPageViews(a)
  },
  formRendered: function(a) {
    kony.events.browserback.updateURLWithLocation(a);
    $KW.Form.enlistSystemTimerActions();
    if ($KU.isWindowsPhone && $KU.isIE9) {
      window.scrollTo(0, 0)
    } else {
      if ($KG.nativeScroll) {
        window.scrollTo(0, 1)
      }
    }
  },
  resizeForm: function(i, c) {
    var h = $KG.allforms[i];
    if ($KG.nativeScroll) {
      var d = ($KU.isWindowsPhone && $KU.getPlatform().version == "7.5") ? ($KW.Utils.getViewPortHeight() + 10) : $KW.Utils.getViewPortHeight();
      document.body.style.minHeight = d + "px"
    }
    if (kony.appinit.isTablet && kony.appinit.isAndroid && (kony.constants.APPLICATION_MODE_HYBRID || kony.constants.APPLICATION_MODE_WRAPPER)) {
      document.body.style.minHeight = (screen.height / window.devicePixelRatio - window.screenTop) + "px"
    }
    if (h.resizeForm && $KG.nativeScroll) {
      var a = window.innerHeight || document.body.clientHeight;
      var b = document.getElementById(i);
      var g, f;
      var g = __MainContainer.clientHeight;
      var f = b.clientHeight;
      if (!c) {
        g = __MainContainer.__clientHeight = __MainContainer.clientHeight;
        f = b.__clientHeight = b.clientHeight
      } else {
        g = __MainContainer.__clientHeight;
        f = b.__clientHeight
      }
      if (g < a) {
        var e = a - g;
        f = f + e;
        b.style.minHeight = f + "px";
        if ($KU.isWindowsPhone && $KU.isIE9) {
          setTimeout(function() {
            window.scrollTo(0, 0)
          }, 10)
        } else {
          setTimeout(function() {
            window.scrollTo(0, 1)
          }, 10)
        }
      }
    }
  },
  enlistSystemTimerActions: function() {
    if ($KU.hashChange) {
      kony.events.addEventListener(window, "hashchange", kony.events.browserback.handleBrowserBackEvent)
    } else {
      var a = new kony.system.timers.TimerAction(kony.events.browserback.handleBrowserBackEvent, 300);
      kony.system.timers.registerTimerAction(a)
    }
  },
  delistSystemTimerActions: function() {
    kony.system.timers.clearTimerAction()
  },
  addChild: function(a, e, b) {
    if (($KG.__currentForm && a.id == $KG.__currentForm.id) || a.wType == "Popup") {
      var c = $KU.getElementById(a.id);
      if (a.wType == "Popup") {
        c = $KU.getElementById(a.id + "_body").children[0]
      }
      if (!c) {
        return
      }
      var d = "";
      if (e.length > 0) {
        d = this.renderChildren(a, e)
      }
      var f = document.createElement("div");
      f.innerHTML = d;
      while (f.children.length > 0) {
        -c.appendChild(f.children[0])
      }
      $KU.layoutNewWidgets(a, e);
      $KW.Utils.initializeNewWidgets(e)
    }
  },
  addChildAt: function(a, f, b) {
    if (($KG.__currentForm && a.id == $KG.__currentForm.id) || a.wType == "Popup") {
      var e = $KU.getElementById(a.id);
      if (a.wType == "Popup" && $KU.getElementById(a.id + "_body")) {
        e = $KU.getElementById(a.id + "_body").children[0]
      }
      if (!e) {
        return
      }
      var g = "";
      var d = $KU.isFlexContainer(a);
      if (d) {
        g = $KW.FlexContainer.renderChildren(a, [a[f.id]], {})
      } else {
        g = $KW.Form.generateWidget(a, a[f.id])
      }
      var c = document.createElement("div");
      c.innerHTML = g;
      var h = [f];
      e.insertBefore(c.childNodes[0], e.children[b] || null);
      $KU.layoutNewWidgets(a, h);
      $KW.Utils.initializeNewWidgets(h)
    }
  },
  DOMremove: function(a, b) {
    if ($KG.__currentForm && (a.id == $KG.__currentForm.id || a.wType == "Popup") && b) {
      var d = $KU.isFlexContainer(a);
      if (d) {
        var c = $KW.Utils.getWidgetNode(b);
        if (c) {
          c = c.parentNode;
          c.parentNode.removeChild(c)
        }
      } else {
        var c = document.getElementById(a.id + "_" + b.id);
        if (c) {
          c = $KU.returnParentChildBloatAdjustedNode(b, c);
          c.parentNode.removeChild(c)
        }
      }
    }
  },
  DOMremoveAt: function(a, b) {
    $KW.Form.DOMremove(a, a.ownchildrenref[b])
  },
  DOMremoveAll: function(a) {
    var b = document.getElementById(a.id);
    if (b) {
      b.innerHTML = ""
    }
  },
  add: function() {
    var a = arguments[0];
    if ("add" in a) {
      var b = [].slice.call(arguments, 1);
      a.add(b)
    }
  },
  addAt: function(a, c, b) {
    if (c == null) {
      return
    }
    a.addAt && a.addAt(c, b)
  },
  remove: function(a, b) {
    a.remove && a.remove(b)
  },
  removeAt: function(a, b) {
    if (a.removeAt) {
      return a.removeAt(b)
    }
  },
  widgets: function(a) {
    return a.widgets && a.widgets()
  },
  scrollToBeginning: function(a) {
    var b = $KU.getElementById(a.id + "_container");
    b && $KW.Utils.animateY((kony.appinit.isIE7 || kony.appinit.isIE8) ? document.documentElement.scrollTop : window.pageYOffset, 0)
  },
  scrollToEnd: function(a) {
    var b = $KU.getElementById(a.id + "_container");
    b && $KW.Utils.animateY((kony.appinit.isIE7 || kony.appinit.isIE8) ? document.documentElement.scrollTop : window.pageYOffset, b.scrollHeight)
  },
  scrollToWidget: function(a, b) {
    $KW.Widget.setfocus(b)
  },
  destroy: function(a) {
    if (a && "destroy" in a) {
      a.destroy()
    }
  },
  getCurrentForm: function() {
    return $KG.__currentForm
  },
  getPreviousForm: function() {
    return $KG.__previousForm
  },
  handleshow: function(a) {
    if ("show" in a) {
      a.show()
    }
  },
  generateWidget: function(a, f) {
    var c = new $KW.WidgetGenerationContext(a.id);
    var b = f.wType;
    var d = "";
    if (b == "Line" || b == "HBox" || b == "ScrollBox" || b == "TabPane") {
      c.setTopLevelBox(true);
      d += $KW[b] && $KW[b].render(f, c);
      c.setTopLevelBox(false)
    } else {
      if (kony.appinit.isIE7) {
        d += "<table class = 'ktable kwt100' style='table-layout:fixed;'>";
        d += "<tr class = 'kwt100' >";
        var e = $KW.skins.getWidgetAlignmentSkin(f);
        d += "<td class = 'kwt100 " + e + "' >";
        d += $KW[b].render(f, c);
        d += "</td></tr></table>"
      } else {
        if (b == "Image") {
          f.containerweight = 100
        }
        var e = $KW.skins.getWidgetAlignmentSkin(f);
        d += "<div class = ' kwt100 " + e + "' >";
        d += $KW[b] && $KW[b].render(f, c);
        d += "</div>"
      }
    }
    return d
  },
  render: function(e) {
    var h = "";
    var b = document.getElementsByTagName("body")[0];
    var c = $KU.getElementById("__MainContainer");
    if (!c) {
      b.innerHTML = "<div id='__MainContainer'>";
      c = $KU.getElementById("__MainContainer")
    }
    if ($KG.__previousForm) {
      var g = $KG.__previousForm.id + "_hint";
      var i = document.getElementById(g);
      if (i) {
        document.body.removeChild(i)
      }
    }
    h += "<div id='" + e.id + "_container' style='padding:" + $KU.joinArray(e.padding, "% ") + "%'>";
    h += e.header ? this.generateHeader(e.header, "header") : "";
    h += this.generateForm(e);
    h += e.footer ? this.generateHeader(e.footer, "footer") : "";
    h += "</div>";
    c.innerHTML = h;
    var a = document.createElement("div");
    var d = "<div id='appmenu_container' style='position:fixed;bottom:0px;width:100%'>" + this.generateAppmenu(e) + "</div>";
    a.innerHTML = d;
    c.appendChild(a.firstChild);
    if ($KW.Map && $KW.Map.isMainContaineraVailable == false) {
      $KW.Map.loadMapScripts()
    }
    var f = $KU.getElementById("appmenu_container");
    if (f) {
      f.parentNode.style.paddingBottom = f.offsetHeight + "px"
    }
    e.header && this.initializeTemplates(e.header);
    e.footer && this.initializeTemplates(e.footer);
    b.className = e.skin || "";
    document.title = e.title || $KG.apptitle || $KG.appid
  },
  generateForm: function(b) {
    var e = "";
    var a = "class=kwt100";
    e += "<form id='" + b.id + "' action= 'javascript:;' style='position:relative;' " + a + ">";
    if (b.children) {
      if (b.layouttype == constants.CONTAINER_LAYOUT_GRID) {
        var d = new $KW.WidgetGenerationContext(b.id);
        e += $KW.Grid.render(b, d)
      } else {
        var c = b.widgets();
        e += this.renderChildren(b, c)
      }
    }
    e += "</form>";
    return e
  },
  renderChildren: function(a, b) {
    var e = "";
    if (a.layouttype == kony.flex.VBOX_LAYOUT) {
      for (var d = 0; d < b.length; d++) {
        var f = b[d];
        e += $KW.Form.generateWidget(a, f)
      }
    } else {
      var c = new $KW.WidgetGenerationContext(a.id);
      e += $KW.FlexContainer.renderChildren(a, b, c)
    }
    return e
  },
  generateHeader: function(a, b) {
    var c = "";
    c += "<div id='" + b + "_container' class='kwt100'>";
    c += this.generateTemplate(a, b);
    c += "</div>";
    return c
  },
  generateTemplate: function(c, f, e) {
    var a = kony.model.getWidgetModel(c);
    var g = "";
    if (a.children) {
      if (e && e.rowtemplate) {
        return $KW[e.rowtemplate.wType].render(a, e)
      }
      g = "<div id='" + a.id + "' kformname=" + a.pf + "'";
      if (f == "menu" || f == "menuitem") {
        if (a.skin) {
          g += " class='" + a.skin + "'"
        }
        g += " mtype='" + f + "' "
      }
      if (e && e.menuType === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && f == "menu") {
        g += " class='toggle' "
      }
      g += ">";
      for (var d = IndexJL; d < a.children.length; d++) {
        var h = a[a.children[d]];
        var b = new $KW.WidgetGenerationContext(a.id);
        if (e) {
          b.tabpaneID = e.tabpaneID;
          b.container = e.container
        }
        b.setTopLevelBox(true);
        g += $KW[h.wType].render(h, b);
        b.setTopLevelBox(false)
      }
      g += "</div>"
    }
    return g
  },
  show: function(a) {
    if ($KG.appbehaviors.recording == true) {
      this.removeDomChangeEvents()
    }
    if ($KG.localization && !$KG.i18nInitialized) {
      $KI.i18n.setdefaultlocale($KG.defaultlocale, $KW.Form.extendShow(a))
    } else {
      $KW.Form.extendShow(a)()
    }
  },
  extendShow: function(a) {
    return function() {
      if (a) {
        if (a.enabledforidletimeout && $KG.__idletimeout && $KG.__idletimeout.expired && $KG.__idletimeout.enabled) {
          $KG.__idletimeout.cb && $KG.__idletimeout.cb(a);
          $KG.__idletimeout.expired = false;
          $KG.__idletimeout.cb = null;
          return
        }
        $KW.Popup.dismiss(null, true);
        if (!$KG.transitAll) {
          $KG.transitAll = true
        }
        if (!a.initialized) {}
        var e = $KG.__currentForm;
        if (e && e.onhide && e.id != a.id) {
          var d = $KU.returnEventReference(e.onhide);
          d && d.call(e, e)
        }
        if (a.preshow) {
          var c = $KU.returnEventReference(a.preshow);
          c && c.call(a, a)
        }
        if ($KG.__currentForm) {
          $KG.__previousForm = $KG.__currentForm
        }
        var h = false;
        $KG.__currentForm = a;
        var b = $KG.__previousForm;
        if (b && b.id == a.id) {
          h = true
        }
        if (!h) {
          if ($KG.localization) {
            $KI.i18n.translateFormModel(a);
            var g = a.header;
            if (g) {
              $KI.i18n.translateFormModel(window[g])
            }
            var f = a.footer;
            if (f) {
              $KI.i18n.translateFormModel(window[f])
            }
          }
          if (b) {
            if (b.retainscrollposition) {
              b.y = window.pageYOffset || document.documentElement.scrollTop
            }
            $KW.Form.destroyTouchWidgets(b.id)
          }
          $KW.Form.render(a);
          $KW.Form.formRendered(a.id);
          $KW.Form.adjustBodyWidth(a.id);
          $KW.Form.setFormHeight(a);
          $KW.Form.initializeFlexContainers(a);
          $KW.Utils.initializeGestures(a);
          if ($KU.isFlexContainer(a)) {
            $KW.Utils.initializeScrollEvents(document.querySelectorAll("#" + a.id), a)
          }
          $KW.Utils.initializeGestures({
            formmodel: a
          });
          $KW.Form.applyTransition($KG.__previousForm, a);
          $KW.Utils.initializeTemplateGestures();
          if (!kony.system.activity.hasActivity()) {
            $KW.Utils.removeBlockUISkin();
            $KW.unLoadWidget()
          }
          if (kony.constants.APPSTATE === 0) {
            kony.constants.APPSTATE = 1;
            if (!kony.events.isFrameworkEventsRegistered) {
              kony.events.registerDocumentEvents()
            }
            $KIO.fs.init()
          }
        }
        $KW.TPW.renderWidget(a.id);
        a.initialized = true
      }
    }
  },
  applyTransition: function(f, i) {
    var b, h;
    b = f && $KU.getElementById(f.id + "_container");
    h = $KU.getElementById(i.id + "_container");
    f && $KU.isFlexContainer(f) && clearInterval(f.scrollerTimer);
    var a, d;
    a = (f && f.outtransitionconfig) ? f.outtransitionconfig.formTransition || f.outtransitionconfig.formtransition : "";
    d = (i.intransitionconfig) ? i.intransitionconfig.formTransition || i.intransitionconfig.formtransition : "";
    if (!$KG.disableTransition && ((d && d.toLowerCase() != "none") || (a && a.toLowerCase() != "none"))) {
      var e, c;
      if (!d || d.toLowerCase() == "none") {
        c = $KW.formTransitionsMatrix[a]
      } else {
        c = $KW.formTransitionsMatrix[d]
      }
      if (!a || a.toLowerCase() == "none") {
        e = $KW.formEndTransitionsMatrix[d]
      } else {
        e = $KW.formEndTransitionsMatrix[a]
      }
      if (b) {
        b.style.zIndex = 1
      }
      if (h) {
        h.style.zIndex = 2;
        var g = (kony.appinit.isFirefox || kony.appinit.isIE10 || kony.appinit.isIE11) ? "animationend" : (vendor + "AnimationEnd");
        i.__ev = function(m, n, j, k, l) {
          return function(o) {
            if (!o) {
              o = window.event
            }
            j.__ev = "";
            if (o.type == l) {
              kony.events.removeEventListener(n, o.type, arguments.callee);
              this.style[vendor + "AnimationName"] = ""
            }
            $KW.Form.endTransition(m, n, j, k)
          }
        }(b, h, i, f, g);
        kony.events.addEventListener(h, g, i.__ev);
        if (b) {
          b.style[vendor + "AnimationDuration"] = "0.5s";
          b.style[vendor + "AnimationName"] = e
        }
        h.style[vendor + "AnimationDuration"] = "0.5s";
        h.style[vendor + "AnimationName"] = c;
        $KU.removeClassName(h, "hidden");
        h.style.display = ""
      }
    } else {
      $KU.removeClassName(h, "hidden");
      h.style.display = "";
      this.endTransition(b, h, i, f)
    }
  },
  endTransition: function(h, d, f, b) {
    if (h) {
      if (b.__ev) {
        b.__ev()
      }
      h.style.display = "none";
      var a = $KU.getElementById("__MainContainer");
      a.removeChild(h)
    }
    $KW.Form.initializeTouchWidgets(f.id);
    var e = document.querySelectorAll("[name=map_canvas]")[0];
    var c = $KG.mapScriptLoaded;
    if (e && c) {
      $KW.Map.setUpInteractiveCanvasMap()
    }
    $KG.__previousForm && window.scrollTo(0, 0);
    if (f.retainscrollposition) {
      if (typeof f.y == "undefined") {
        f.y = 0
      }
      window.scrollTo(0, f.y)
    }
    if (f.postshow) {
      var g = $KU.returnEventReference(f.postshow);
      g && g.call(f, f)
    }
  },
  adjustBodyWidth: function(g) {
    var f = document.getElementsByTagName("body")[0];
    var d = f.style.width;
    var b = f.getAttribute("formWidth");
    if (!b) {
      return
    }
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      f.style.overflow = "auto";
      b = b - 5
    } else {
      f.style["overflow-x"] = "auto";
      f.style.overflowX = "auto"
    }
    var a = document.getElementById(g + "_wrapper");
    var c;
    if (a) {
      c = a.offsetWidth - a.clientWidth
    } else {
      c = 17
    }
    var e = document.body.scrollHeight - (window.innerHeight || document.documentElement.clientHeight);
    if (e > 0) {
      f.style.width = (b - c) + "px"
    } else {
      f.style.width = b + "px"
    }
  },
  setFormHeight: function(b) {
    if ($KU.isFlexContainer(b)) {
      var d = $KU.getElementById(b.id);
      var c = parseInt($KU.getStyle(document.body, "border-top-width"), 10);
      var a = parseInt($KU.getStyle(document.body, "border-bottom-width"), 10);
      d.style.height = ($KU.getWindowHeight() - (c + a)) + "px";
      d.style.overflowY = "auto";
      d.style.overflowX = "hidden";
      b.scrollerTimer = setInterval(function(e) {
        return function() {
          var g = e.frame;
          var f = $KU.getElementById(e.id);
          if (f && g.width != f.offsetWidth) {
            $KW.Form.initializeFlexContainers(e)
          }
        }
      }(b), 1000)
    }
  }
};
var domChangeObserver = null;
$KW.Appmenu = {
  focusIndex: "",
  initialize: function() {
    kony.events.addEvent("click", "Appmenu", this.eventHandler)
  },
  updateView: function(e, d, c, b, a) {},
  render: function(p, s) {
    var b = $KG.__appmenu;
    var t = b.data;
    var a = b.data.length;
    var o = false;
    var e = 0;
    for (var w = IndexJL; w < t.length; w++) {
      if (t[w][IndexJL + 4]) {
        e++
      }
    }
    var y = "";
    var j = 25;
    if ((e + IndexJL) > 4) {
      o = true;
      y = "kwt" + (100 / 5);
      j = Math.floor(100 / 5)
    } else {
      y = "kwt" + (100 / e);
      j = Math.floor(100 / e)
    }
    j = j + "%";
    var d = "";
    if (!s) {
      var c = "";
      if ($KU.isTablet || $KU.isMob) {
        c = "appmenu_scroller";
        var z = $KG.__currentForm;
        if (z.dockableappmenu === false || $KG.nativeScroll) {
          c += " relativePos"
        } else {
          c += " absolutePos"
        }
      }
      d += "<div id='konyappmenudiv'  class='" + c + "'>"
    }
    d += "<div class='kbasemargin kwt100 ktable' style='table-layout:fixed;' ><div class='kwt100 krow'>";
    if (o) {
      a = IndexJL + 4
    }
    var n = 0;
    var u = $KW.Appmenu.focusIndex;
    var l;
    for (var w = IndexJL, v = IndexJL - 1; w < t.length; w++) {
      if (u !== "" && u === w && b.focusskin) {
        l = b.focusskin || ""
      } else {
        l = b.skin || ""
      }
      if (u !== "" && u === w && b.focusskin) {
        l = b.focusskin || ""
      } else {
        l = b.skin || ""
      }
      if (t[w][IndexJL + 4]) {
        v++;
        var f = "";
        var h = t[w][1 + IndexJL] || "";
        var r = $KU.getImageURL(t[w][2 + IndexJL]) || "";
        if ($KG.localization && h.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
          h = $KU.getI18NValue(h)
        }
        d += "<div style='width:" + j + ";' class='" + l + " middlecenteralign kcell' index='" + w + "'><a id='" + t[w][IndexJL] + "' " + f + " href='#' kwidgettype='Appmenu' event='yes' index='" + w + "' style='text-decoration:none;'><div>";
        if (r) {
          d += "<img  style='border:none;' src='" + r + "' width='30px' height='30px' align='middle'/>"
        }
        d += "</div><div><label class='" + l + "' style='background:inherit; border: none; white-space:pre-wrap; 	word-wrap:break-word; '>" + h + "</label></div></a></div>";
        if (o && v == 3) {
          n = w + 1;
          break
        }
      }
    }
    if (o) {
      l = b.skin || "";
      d += "<div id='konyappmenudiv_more' class='" + l + " middlecenteralign  kcell' style='width:" + j + ";'><a id='appmenumore' href='#' kwidgettype='Appmenu' event='yes' index='5' style='text-decoration:none;'><div>";
      d += "<img  style='border:none;' src='" + $KU.getImageURL("appmore.png") + "' width='30px' height='30px' align='middle' kwidgettype='Appmenu'/></div><div><label class='" + l + "' style='background:inherit; border: none;' kwidgettype='Appmenu'>more</label></div></a></div>";
      var m = $KG.nativeScroll ? "position:fixed" : "height:auto;top:0px;";
      var q = "<div id='appmenumore_container' class='popupcontainer absoluteContainer' dummy='' style='display: none;z-index: 11; " + m + "'><div id='__popuplayer' style='opacity:0;filter:alpha(opacity=0);' class='popuplayer absoluteContainer' dummy=''></div><div id='more' class='frm' style='z-index: 9; position: absolute; padding: 0%; right:0%;bottom:0px; -webkit-animation: 1s;' dummy=''><div id='containerLayer' style='display:table;' class='container'>";
      for (var w = n; w < t.length; w++) {
        if (t[w][IndexJL + 4]) {
          var f = t[w][IndexJL + 3];
          if (f) {
            f = "closure='" + f + "'"
          } else {
            f = ""
          }
          var h = t[w][1 + IndexJL] || "";
          var r = $KU.getImageURL(t[w][2 + IndexJL]) || "";
          if ($KG.localization && h.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
            h = $KU.getI18NValue(h)
          }
          q += "<div class='kwt100 krow " + l + "'><div class='" + l + " middlecenteralign kcell' index ='" + w + "'><a id='" + t[w][IndexJL] + "' " + f + " href='#' kwidgettype='Appmenu' event='yes' index='" + w + "' style='text-decoration: none;'><div style='padding:2px;'>";
          if (r) {
            q += "<img  style='border:none;' src='" + $KU.getImageURL(t[w][2 + IndexJL]) + "'  width='30px' height='30px' align='middle' kwidgettype='Appmenu'/>"
          }
          q += "<label class='" + l + "' style='background:inherit; border: none; white-space:pre-wrap; 	word-wrap:break-word;margin-left:5px;' kwidgettype='Appmenu' index='" + w + "'>" + h + "</label></div></a></div></div>"
        }
      }
      q += "</div></div>";
      var g = document.getElementById("__MainContainer");
      var x = document.getElementById("appmenumore_container");
      if (x) {
        x.parentElement.removeChild(x)
      }
      var k = document.createElement("div");
      k.innerHTML = q;
      g.appendChild(k.firstChild)
    }
    d += "</div></div></div>";
    return d
  },
  eventHandler: function(n, s, c) {
    var a = $KG.__appmenu;
    var m = a.data;
    var d = $KU.getParentByTagName(s, "a");
    var f;
    var g = d.id;
    if (g == "appmenumore") {
      f = $KW.Appmenu.showmoreappmenuitems
    } else {
      $KW.Appmenu.hidemoreappmenuitems();
      var e = d.parentNode.getAttribute("index");
      f = m[e][3 + IndexJL]
    }
    if (a.focusskin) {
      if ($KW.Appmenu.focusIndex != "") {
        var r = document.querySelectorAll("div." + a.focusskin + ", a label." + a.focusskin);
        var p = r.length;
        if (!(d.id == "appmenumore")) {
          for (var o = p - 1; o >= 0; o--) {
            if (r[o].tagName.toLowerCase() == "label") {
              r[o].className = a.skin
            } else {
              r[o].className = a.skin + " middlecenteralign kcell"
            }
          }
        }
      }
      $KW.Appmenu.focusIndex = e;
      if (!(d.id == "appmenumore")) {
        d.parentNode.className = a.focusskin + " middlecenteralign kcell";
        var q = document.querySelectorAll("#" + d.id + "  label");
        if (q) {
          q[0].className = a.focusskin
        }
      }
    }
    if ($KU.getPlatformVersion("windowsphone") == "7.5") {
      var b = document.getElementById("appmenumore_container");
      if (b) {
        var h = document.getElementById("__MainContainer");
        var t = document.getElementById("konyappmenudiv").offsetHeight;
        var j = ((h.offsetHeight) - (t)) + "px";
        b.style.height = j
      }
    }
    var l = $KU.returnEventReference(f);
    l && l.call(a, a)
  },
  setappmenu: function(f, e, a) {
    var d = $KG.__appmenu;
    for (var c = IndexJL; c < f.length; c++) {
      f[c][4 + IndexJL] = true
    }
    if (!d) {
      var b = new Object();
      b.data = f;
      b.skin = e;
      b.focusskin = a;
      $KG.__appmenu = b
    } else {
      d.data = f;
      d.skin = e;
      d.focusskin = a
    }
  },
  setappmenufocusindex: function(c) {
    var f = $KG.__appmenu;
    var e = $KU.getElementById("konyappmenudiv");
    if (!e) {
      return
    }
    var g = f.data;
    if (f.focusskin) {
      var j = document.querySelectorAll("div." + f.focusskin + ", a label." + f.focusskin);
      var h = j.length;
      for (var a = h - 1; a >= 0; a--) {
        if (j[a].tagName.toLowerCase() == "label") {
          j[a].className = f.skin
        } else {
          j[a].className = f.skin + " middlecenteralign kcell"
        }
      }
      var d = document.querySelectorAll("div a[index='" + (c - IndexJL) + "']")[0];
      if (d) {
        d.parentNode.className = f.focusskin + " middlecenteralign kcell"
      }
      var b = document.querySelectorAll("#" + d.id + "  label");
      if (b) {
        b[0].className = f.focusskin
      }
      $KW.Appmenu.focusIndex = c - IndexJL
    }
  },
  hideappmenuitems: function(g) {
    var e = $KG.__appmenu;
    var d = e.data;
    for (var c = IndexJL; c < (g.length); c++) {
      for (var b = IndexJL; b < e.data.length; b++) {
        if (d[b][IndexJL] == g[c]) {
          d[b][4 + IndexJL] = false
        }
      }
    }
    var a = $KU.getElementById("konyappmenudiv");
    var f = new $KW.WidgetGenerationContext();
    f.setdynamically = true;
    a && (a.innerHTML = $KW.Appmenu.render("__appmenu", f))
  },
  showappmenuitems: function(c) {
    var h = $KG.__appmenu;
    var m = h.data;
    for (var e = IndexJL; e < h.data.length; e++) {
      var a = false;
      for (var d = IndexJL; d < c.length; d++) {
        if (m[e][IndexJL] == c[d]) {
          a = true;
          break
        }
      }
      m[e][4 + IndexJL] = a
    }
    var f = $KU.getElementById("konyappmenudiv");
    var b = new $KW.WidgetGenerationContext();
    b.setdynamically = true;
    if (f) {
      f.innerHTML = $KW.Appmenu.render("__appmenu", b)
    } else {
      var k = $KU.getElementById("appmenu_container");
      if (!k) {
        return
      }
      var l = document.createElement("DIV");
      var g = "appmenu_scroller";
      if ($KG.nativeScroll) {
        g += " relativePos"
      } else {
        g += " absolutePos"
      }
      l.className = g;
      l.setAttribute("id", "konyappmenudiv");
      l.innerHTML = $KW.Appmenu.render("__appmenu", b);
      k.appendChild(l)
    }
  },
  removeappmenuitem: function(f) {
    var d = $KG.__appmenu;
    var c = d.data;
    for (var b = IndexJL; b < d.data.length; b++) {
      if (c[b][IndexJL] == f) {
        c.splice(b, 1);
        if ($KW.Appmenu.focusIndex == b) {
          $KW.Appmenu.focusIndex = ""
        }
        break
      }
    }
    var a = $KU.getElementById("konyappmenudiv");
    var e = new $KW.WidgetGenerationContext();
    e.setdynamically = true;
    a.innerHTML = $KW.Appmenu.render("__appmenu", e)
  },
  addappmenuitem: function(g, b) {
    var e = $KG.__appmenu;
    var c = e.data;
    var d = false;
    for (i = IndexJL; i < (c.length); i++) {
      if (c[i][IndexJL] == g[IndexJL]) {
        d = true;
        break
      }
    }
    if (d) {
      return
    }
    g[4 + IndexJL] = true;
    c.splice(b, 0, g);
    var a = $KU.getElementById("konyappmenudiv");
    var f = new $KW.WidgetGenerationContext();
    f.setdynamically = true;
    a.innerHTML = $KW.Appmenu.render("__appmenu", f)
  },
  showmoreappmenuitems: function() {
    var b = document.getElementById("appmenumore_container");
    if (b) {
      var c = document.getElementById("konyappmenudiv");
      var d = parseInt($KU.getStyle(c, "padding-top")) || 0;
      var e = parseInt($KU.getStyle(c, "margin-top")) || 0;
      var a = document.getElementById("konyappmenudiv").offsetHeight;
      a = a - (e + d);
      b.style.bottom = a + "px";
      if (b.style.display == "none") {
        b.style.display = "block"
      } else {
        if (b.style.display == "block") {
          b.style.display = "none"
        }
      }
    }
  },
  hidemoreappmenuitems: function() {
    var a = document.getElementById("appmenumore_container");
    if (a) {
      a.style.display = "none"
    }
  },
  createappmenu: function(d, f, c, e) {
    for (var b = IndexJL; b < f.length; b++) {
      f[b][4 + IndexJL] = true
    }
    var a = new Object();
    a.data = f;
    a.skin = c;
    a.focusskin = a.focusSkin = e;
    if ($KG.__appmenu) {
      $KG.__appmenu[d] = a
    } else {
      $KG.__appmenu = a
    }
  },
  setcurrentappmenu: function(b) {
    if ($KG.__appmenu[b]) {
      $KG.__appmenu = $KG.__appmenu[b]
    } else {
      $KG.__appmenu = $KG.__appmenu
    }
    var f = $KG.__appmenu;
    var g = f.data;
    var d = $KU.getElementById("konyappmenudiv");
    var c = new $KW.WidgetGenerationContext();
    c.setdynamically = true;
    if (d) {
      d.innerHTML = $KW.Appmenu.render("__appmenu", c)
    } else {
      var h = $KU.getElementById("appmenu_container");
      if (!h) {
        return
      }
      var j = document.createElement("DIV");
      var e = "appmenu_scroller";
      if ($KG.nativeScroll) {
        e += " relativePos"
      } else {
        e += " absolutePos"
      }
      j.className = e;
      j.setAttribute("id", "konyappmenudiv");
      j.innerHTML = $KW.Appmenu.render("__appmenu", c);
      if ($KG.__currentForm.needappmenu) {
        h.appendChild(j)
      }
      var a = $KU.returnEventReference(g[IndexJL][3 + IndexJL]);
      a && a.call(f, f)
    }
    $KG.currappmenu = b
  },
  getcurrentappmenu: function() {
    return $KG.currappmenu
  },
  setappmenufocusbyid: function(d) {
    var b = $KG.__appmenu.data;
    var a;
    var c = false;
    for (a = IndexJL; a < (b.length); a++) {
      if (b[a][IndexJL] == d) {
        c = true;
        break
      }
    }
    if (c) {
      $KW.Appmenu.setappmenufocusindex(a)
    }
  },
  addappmenuitemat: function(c, a, b) {
    $KW.Appmenu.addappmenuitem(b, a);
    $KW.Appmenu.focusIndex = ""
  },
  removeappmenuitemat: function(c, a) {
    var b = $KG.__appmenu.data;
    $KW.Appmenu.removeappmenuitem(b[a][IndexJL]);
    if ($KW.Appmenu.focusIndex == a) {
      $KW.Appmenu.focusIndex = ""
    }
  }
};
$KW.Label = {
  initialize: function() {
    kony.events.addEvent("click", "Label", this.eventHandler)
  },
  initializeView: function(a) {
    $KW.Label.updateLineSpacing(a)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "linespacing":
        this.updateLineHeight(e, d);
        break;
      case "text":
        if (!$KW.Utils.belongsToSegment(d)) {
          d.innerHTML = b
        }
        break;
      case "textCopyable":
        b = b && !e.disabled ? "text" : "none";
        if ("MozUserSelect" in d.style) {
          d.style.MozUserSelect = b
        } else {
          if ("webkitUserSelect" in d.style) {
            d.style.webkitUserSelect = b
          } else {
            if ("msUserSelect" in d.style) {
              d.style.msUserSelect = b
            }
          }
        }
        break
    }
  },
  updateLineHeight: function(a, b) {
    var d = a.linespacing;
    if (d > 0) {
      var c = parseInt($KU.getStyle(b, "font-size"), 10);
      if (c > 0) {
        b.style.lineHeight = (c + parseInt(d, 10)) + "px"
      }
    } else {
      b.style.lineHeight = ""
    }
  },
  updateLineSpacing: function(e) {
    var d = document.querySelectorAll("#" + e + " div[kwidgettype='Label']");
    for (var c = 0; c < d.length; c++) {
      var b = d[c];
      var a = $KU.getModelByNode(b);
      this.updateLineHeight(a, b)
    }
  },
  render: function(g, b) {
    var e = $KW.skins.getWidgetSkinList(g, b);
    var d = $KW.skins.getContentAlignment(g);
    var f = "";
    var a = g.textCopyable;
    a = a ? "text" : "none";
    var c = " -webkit-user-select: " + a + ";-moz-user-select: " + a + ";-ms-user-select: " + a + ";-o-user-select: " + a + ";user-select: " + a + "; ";
    f = "<div" + $KW.Utils.getBaseHtml(g, b) + "class = '" + e + "' style='text-align:" + d + ";" + c + $KW.skins.getBaseStyle(g, b);
    if (b.ispercent === false) {
      f += "display:inline-block;" + (b.layoutDir ? ("float:" + b.layoutDir) : "")
    }
    f += "'";
    f += ">" + $KU.escapeHTMLSpecialEntities(g.text) + "</div>";
    return f
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  }
};
$KW.Button = {
  initialize: function() {
    kony.events.addEvent("click", "Button", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "text":
        if ($KU.isWindowsTablet) {
          d.innerHTML = b
        } else {
          d.value = b
        }
        break
    }
  },
  render: function(f, a) {
    if (!f.buiskin) {
      f.buiskin = f.blockeduiskin
    }
    var c = $KW.skins.getWidgetSkinList(f, a);
    var e = "";
    var d = f.skin || "";
    var b = $KW.skins.getContentAlignment(f);
    if ($KU.isWindowsTablet) {
      e = "<button" + $KW.Utils.getBaseHtml(f, a) + "type='button' class = '" + c + "' style='text-align:" + $KW.skins.getContentAlignment(f) + ";white-space:normal;word-wrap:break-word;" + $KW.skins.getBaseStyle(f, a) + (a.layoutDir && a.ispercent === false ? ";float:" + a.layoutDir : "") + "' kprogressskin='" + d + "'>" + (f.displaytext.toString() == "true" ? $KU.escapeHTMLSpecialEntities(f.text) : "") + "</button>"
    } else {
      e = "<input" + $KW.Utils.getBaseHtml(f, a) + "type='button' class = '" + c + "' style='text-align:" + $KW.skins.getContentAlignment(f) + ";white-space:normal;word-wrap:break-word;" + $KW.skins.getBaseStyle(f, a) + (a.layoutDir && a.ispercent === false ? ";float:" + a.layoutDir : "") + "'" + (f.displaytext.toString() == "true" ? " value='" + $KU.escapeHTMLSpecialEntities(f.text) + "'" : "") + " kprogressskin='" + d + "'/>"
    }
    return e
  },
  eventHandler: function(b, f) {
    var e = $KU.getModelByNode(f),
      a = f.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(e, f, true)
    } else {
      if (e.onclick) {
        var c = $KU.returnEventReference(e.onclick);
        if (c && e.blockeduiskin) {
          $KW.Utils.applyBlockUISkin(e)
        }
        f.setAttribute("selected", "progress");
        var d = new kony.events.KUnloadEvent(e.pf, e.id, "Button", $KW.Button.unloadEventHandler);
        $KG[kony.constants.SELECTED_ITEM] = d;
        c.call(e, e);
        $KU.onEventHandler(e)
      }
    }
  }
};
$KW.Phone = {
  initialize: function() {
    kony.events.addEvent("click", "Phone", this.eventHandler)
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    if (!e) {
      return
    }
    switch (c) {
      case "text":
        if (e.childNodes[0]) {
          var d = e.childNodes[0];
          if (!f.image) {
            d.innerHTML = b
          }
          d.href = "tel:" + b
        }
        break
    }
  },
  render: function(a, b) {
    var c = $KW.skins.getWidgetSkinList(a, b);
    var e = a.skin || "";
    var d = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "'";
    if (b.ispercent === false) {
      d += " style='display:inline-block;' "
    }
    d += "><a class='" + e + "' style='border:none;min-height:28px;' href='tel:" + a.text + "' >";
    if (!a.image) {
      d += a.text
    } else {
      var f = $KU.getImageURL(a.image);
      d += "<img alt='Call' src='" + f + "' />"
    }
    d += "</a></div>";
    return d
  },
  eventHandler: function(b, d) {
    var a = $KU.getModelByNode(d);
    d.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(a, d, false);
    var c;
    if (a.segmentID) {
      c = d.childNodes[0].innerText || ""
    } else {
      c = a.text
    }
    c = c.replace(/[-\s]+/g, "");
    if (isNaN(c)) {
      c = $KW.Utils.convertPhoneAlphabetToNumber(c)
    }
    $KI.phone.dial(c)
  }
};
$KW.TextField = {
  goeventTriggerd: null,
  focusedTextfieldId: null,
  initialize: function() {
    kony.events.addEvent("keydown", "TextField", this.textfieldGoButtonEventHandler);
    kony.events.addEvent("keyup", "TextField", this.textfieldKeyUpEventHandler);
    kony.events.addEvent("onorientationchange", "TextField", this.adjustHeight);
    kony.events.addEvent("change", "TextField", this.eventHandler);
    kony.events.addEvent("click", "TextField", this.clickHandler)
  },
  initializeView: function(a) {
    this.adjustHeight(a);
    setTimeout(function() {
      $KW.TextField.initPasswordField(a)
    }, 1)
  },
  initPasswordField: function(d) {
    var c = document.querySelectorAll("#" + d + " input[name='konypassword']");
    for (var b = 0; b < c.length; b++) {
      var a = c[b]
    }
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    if (!e) {
      return
    }
    switch (c) {
      case "text":
        if (b) {
          e.value = b;
          b && $KU.removeClassName(e, "konyplaceholder")
        } else {
          e.value = ""
        }
        this.setPlaceholder(f, e);
        break;
      case "placeholder":
        e.setAttribute("placeholder", b);
        this.setPlaceholder(f, e);
        break;
      case "maxtextlength":
        e.maxLength = b;
        break;
      case "pattern":
        e.setAttribute("pattern", b);
        break;
      case "autocapitalize":
        var g = b;
        if ($KU.isiPhone && parseInt($KU.getPlatformVersion("iphone")) <= 4 && b != constants.TEXTBOX_AUTO_CAPITALIZE_NONE) {
          g = "on"
        }
        e.setAttribute("autocapitalize", g);
        var d = $KU.getTextTrasform(f);
        d && (e.style.textTransform = d);
        break;
      case "mode":
      case "textinputmode":
        if (b == constants.TEXTBOX_INPUT_MODE_ANY) {
          e.setAttribute("type", "text")
        } else {
          if (b == constants.TEXTBOX_INPUT_MODE_NUMERIC) {
            e.setAttribute("type", "number")
          }
        }
        break;
      case "securetextentry":
        if (b) {
          e.setAttribute("type", "password")
        } else {
          this.updateView(f, "textinputmode", f.textinputmode)
        }
        break;
      case "keyboardtype":
      case "keyboardstyle":
        (f.mode != "P") && e.setAttribute("type", b);
        break;
      case "containerheightmode":
      case "containerheight":
      case "containerheightreference":
        if (f.containerheightmode == constants.TEXTBOX_DEFAULT_PLATFORM_HEIGHT) {
          $KU.addClassName(e, "kheight");
          e.style.height = ""
        } else {
          if (f.containerheightmode == constants.TEXTBOX_FONT_METRICS_DRIVEN_HEIGHT) {
            $KU.removeClassName(e, "kheight");
            e.style.height = ""
          } else {
            if (f.containerheightmode == constants.TEXTBOX_CUSTOM_HEIGHT && f.containerheight && f.containerheightreference) {
              $KU.removeClassName(e, "kheight");
              this.adjustBoxDimensions(e.id, true)
            }
          }
        }
        break;
      case "name":
        e.name = b;
        break
    }
  },
  render: function(p, b) {
    if (typeof p.keyboardtype == "undefined") {
      p.keyboardtype = p.keyboardstyle
    }
    if (typeof p.mode == "undefined") {
      p.mode = p.textinputmode
    }
    if (!p.buiskin) {
      p.buiskin = p.blockeduiskin
    }
    var e = $KW.skins.getWidgetSkinList(p, b);
    if (p.containerheightmode == constants.TEXTBOX_DEFAULT_PLATFORM_HEIGHT) {
      e += " kheight "
    }
    var l = b.tabpaneID || "";
    var h = "text";
    var f = false;
    switch (p.mode) {
      case constants.TEXTBOX_INPUT_MODE_PASSWORD:
        h = "password";
        break;
      case constants.TEXTBOX_INPUT_MODE_NUMERIC:
        h = "number";
        break;
      default:
        h = "text"
    }
    if (p.securetextentry) {
      h = "password"
    }
    if (p.placeholder && !p.text && !kony.utils.placeholderSupported && h == "password") {
      h = "text"
    }
    if (p.keyboardtype && p.mode != "P") {
      switch (p.keyboardtype) {
        case constants.TEXTBOX_KEY_BOARD_STYLE_EMAIL:
          h = "email";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_URL:
          h = "url";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_PHONE_PAD:
          h = "tel";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_NUMBER_PAD:
          h = "number";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_DECIMAL:
          h = "number";
          break;
        case constants.TEXTBOX_VIEW_TYPE_SEARCH_VIEW:
          h = "search";
          break;
        default:
          if ($KU.isiPhone && p.mode == "N") {
            h = "number";
            f = false
          }
          break
      }
    }
    var i = "";
    var a = $KW.skins.getBaseStyle(p, b);
    a += ";text-align:" + $KW.skins.getContentAlignment(p) + ";";
    var c = $KU.getTextTrasform(p);
    a += c ? "text-transform:" + c + ";" : "";
    var k = p.text;
    var d = "";
    if (k && k != "" && (typeof k == "string" || k instanceof String)) {
      d = k.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&rsquo;").replace(/"/g, "&rdquo;")
    } else {
      d = k
    }
    if (!kony.utils.placeholderSupported) {
      d = d || p.placeholder || "";
      e += (p.placeholder && !p.text) ? " konyplaceholder " : ""
    }
    var n = $KU.isFlexWidget(p);
    var m = (b.ispercent === false) ? "display:inline-block;" : "";
    var j = ($KU.isiPhone && !n) ? "<div style='" + m + "overflow:hidden;'>" : "";
    var o = ($KU.isiPhone && !n) ? "</div>" : "";
    i += j + "<input" + $KW.Utils.getBaseHtml(p, b) + "value='" + d + "' class = '" + e + "'";
    i += p.name ? " name='" + p.name + "'" : "";
    i += " autocapitalize='" + p.autocapitalize + "'";
    i += p.autocorrect ? " autocorrect='on'" : " autocorrect='off'";
    i += p.autocomplete ? " autocomplete='on'" : " autocomplete='off'";
    i += " type = '" + h + "'";
    i += (p.pattern) ? " pattern=" + p.pattern : "";
    if ((p.keyboardtype == "digitpad" && p.mode == "P") || f) {
      var g = "[0-9]*";
      i += " pattern = '" + g + "'"
    }
    i += (p.disabled) ? " disabled='true'" : "";
    i += " onfocus='$KW.TextField.onfocusEventHandler(arguments[0],this)' onblur='$KW.TextField.onblurEventHandler(arguments[0],this)' ";
    i += (p.placeholder) ? " placeholder='" + $KU.escapeHTMLSpecialEntities(p.placeholder) + "'" : "";
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      i += " onchange='$KW.TextField.eventHandler(arguments[0], this)'"
    }
    a += (h == "text" && kony.appinit.isIE7) ? "word-break:break-all" + (b.layoutDir && b.ispercent === false ? ";float:" + b.layoutDir : "") : "";
    a += kony.appinit.isIE9 ? " line-height: normal;" : "";
    a += (kony.appinit.isIE8 && p.containerheightmode == constants.TEXTBOX_CUSTOM_HEIGHT) ? " line-height: 28px;" : "";
    i += (p.maxtextlength) ? " maxlength='" + p.maxtextlength + "'" : "";
    i += " style='" + a + (p.securetextentry ? "-" + vendor + "-text-security:disc" : "") + "'";
    i += "/>" + o;
    return i
  },
  clickHandler: function(a, c) {
    var b = $KU.getModelByNode(c);
    if (c.getAttribute("kcontainerID")) {
      $KW.Utils.updateContainerData(b, c, true)
    }
  },
  textfieldGoButtonEventHandler: function(a, g) {
    var c = $KU.getModelByNode(g);
    a = a || window.event;
    if (c.ondone && (a.keyCode == 10 || a.keyCode == 13)) {
      c.canUpdateUI = false;
      c.text = g.value;
      c.canUpdateUI = true;
      kony.events.preventDefault(a);
      kony.events.stopPropagation(a);
      try {
        if (a.srcElement) {
          a.srcElement.blur()
        } else {
          a.target.blur()
        }
      } catch (f) {}(c.blockeduiskin) && $KW.Utils.applyBlockUISkin(c);
      g.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(c, g, false, true);
      var d = $KU.returnEventReference(c.ondone);
      if (d) {
        d.call(c, c);
        $KU.onEventHandler(c)
      }
    }
    var b = $KU.returnEventReference(c.onkeydown);
    b && b.call(c, c)
  },
  HandleTextFieldFilterData: function(b, a, e) {
    var c = e.getAttribute("id");
    b.shift();
    var d = e.value;
    d = d.ltrim();
    if (d.length < 1) {
      return
    }
    if (b.length > 0) {
      this.AutoComplete.AutoComplete_Create(c, b, 8);
      this.AutoComplete.AutoComplete_ShowDropdown(c)
    }
  },
  eventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    if (c) {
      c.canUpdateUI = false;
      c.text = d.value;
      c.canUpdateUI = true;
      d.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(c, d, false);
      var b = $KU.returnEventReference(c.ontextchange);
      b && b.call(c, c)
    }
  },
  textfieldKeyUpEventHandler: function(b, e) {
    var d = $KU.getModelByNode(e);
    if (d.text != e.value) {
      d.canUpdateUI = false;
      d.text = e.value;
      d.canUpdateUI = true;
      if ((kony.appinit.isIE8 || kony.appinit.isIE9) && d.placeholder && d.secureTextEntry) {
        var c = $KW.TextField.getInputSelection(e);
        setTimeout(function() {
          document.getElementById(e.id).focus();
          setTimeout(function() {
            $KW.TextField.setCaretPosition(e.id, c.start)
          }, 1)
        }, 1)
      }
    }
    var a = $KU.returnEventReference(d.onkeyup);
    a && a.call(d, d)
  },
  onfocusEventHandler: function(a, c) {
    var b = $KU.getModelByNode(c);
    a = a || window.event;
    if (c.className.indexOf("konyplaceholder") > -1 && (b.format || b.dateformat)) {
      if (c.className.indexOf("konyplaceholder") > -1) {
        c.value = "";
        $KU.removeClassName(c, "konyplaceholder");
        return
      } else {
        if (b.wType == "Calendar") {
          return
        }
      }
    }
    if (!kony.utils.placeholderSupported && !b.text && b.placeholder && b.wType != "Calendar") {
      c.value = "";
      if ((b.securetextentry || b.mode == "TEXTBOX_INPUT_MODE_PASSWORD") && c.type == "text") {
        var f = c.id;
        var e = document.createElement("div");
        e.innerHTML = c.outerHTML.replace('type="text"', 'type="password"').replace("type=text", "type=password");
        c.blur();
        c.parentNode.replaceChild(e.firstChild, c);
        c = document.getElementById(f)
      }
      setTimeout(function() {
        c.focus()
      }, 1);
      $KU.removeClassName(c, "konyplaceholder")
    }
    var d = $KU.returnEventReference(b.onbeginediting);
    d && d.call(b, b)
  },
  onblurEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    if (c && c.text != d.value) {
      c.canUpdateUI = false;
      c.text = d.value;
      c.canUpdateUI = true
    }
    if (kony.utils.placeholderSupported == false) {
      if ((!c.datecomponents || !c.formatteddate) && (c.date == null || c.date == undefined || c.date == "") && (c.wType == "Calendar")) {
        d.value = c.placeholder;
        $KU.addClassName(d, "konyplaceholder");
        return
      } else {
        if (c.wType == "Calendar") {
          return
        }
      }
    }
    $KW.TextField.setPlaceholder(c, d);
    var b = $KU.returnEventReference(c.onendediting);
    b && b.call(c, c)
  },
  setPlaceholder: function(a, b) {
    if (!kony.utils.placeholderSupported && a.placeholder) {
      var d = b.id;
      if (a.text) {
        if ((a.securetextentry || a.mode == "TEXTBOX_INPUT_MODE_PASSWORD") && b.type == "text") {
          $KU.removeClassName(b, "konyplaceholder");
          var c = document.createElement("div");
          c.innerHTML = b.outerHTML.replace('type="text"', 'type="password"').replace("type=text", "type=password");
          b.parentNode.replaceChild(c.firstChild, b);
          b = document.getElementById(d);
          b.value = a.text
        }
      } else {
        if ((a.securetextentry || a.mode == "TEXTBOX_INPUT_MODE_PASSWORD") && b.type == "password") {
          var c = document.createElement("div");
          c.innerHTML = b.outerHTML.replace('type="password"', 'type="text"').replace("type=password", "type=text");
          b.parentNode.replaceChild(c.firstChild, b);
          b = document.getElementById(d)
        }
        b.value = a.placeholder;
        $KU.addClassName(b, "konyplaceholder")
      }
    }
  },
  setCaretPosition: function(d, b) {
    var c = document.getElementById(d);
    if (c != null) {
      if (c.createTextRange) {
        var a = c.createTextRange();
        a.move("character", b);
        a.select()
      } else {
        if (c.selectionStart) {
          c.focus();
          c.setSelectionRange(b, b)
        } else {
          c.focus()
        }
      }
    }
  },
  getInputSelection: function(e) {
    var h = 0,
      c = 0,
      g, d, b, a, f;
    if (typeof e.selectionStart == "number" && typeof e.selectionEnd == "number") {
      h = e.selectionStart;
      c = e.selectionEnd
    } else {
      d = document.selection.createRange();
      if (d && d.parentElement() == e) {
        a = e.value.length;
        g = e.value.replace(/\r\n/g, "\n");
        b = e.createTextRange();
        b.moveToBookmark(d.getBookmark());
        f = e.createTextRange();
        f.collapse(false);
        if (b.compareEndPoints("StartToEnd", f) > -1) {
          h = c = a
        } else {
          h = -b.moveStart("character", -a);
          h += g.slice(0, h).split("\n").length - 1;
          if (b.compareEndPoints("EndToEnd", f) > -1) {
            c = a
          } else {
            c = -b.moveEnd("character", -a);
            c += g.slice(0, c).split("\n").length - 1
          }
        }
      }
    }
    return {
      start: h,
      end: c
    }
  },
  adjustHeight: function(b) {
    var a = $KG.allforms[$KG.__currentForm.id];
    if (b == a.header || b == a.footer) {
      return
    }
    $KW.TextField.adjustBoxDimensions("__MainContainer")
  },
  adjustBoxDimensions: function(f, l) {
    var m = l ? document.querySelectorAll("#" + f) : document.querySelectorAll("#" + f + " input[kwidgettype='TextField']");
    for (var b = 0; b < m.length; b++) {
      var j = $KU.getModelByNode(m[b]);
      if (j.containerheightmode == constants.TEXTBOX_CUSTOM_HEIGHT) {
        var e = j.containerheight || 10;
        var a = 28;
        if (e > 0) {
          if (j.containerheightreference == constants.CONTAINER_HEIGHT_BY_PARENT_WIDTH) {
            var h = $KU.getElementById(j.pf + "_" + j.parent.id);
            if (!h) {
              if (m[b].getAttribute("ktabpaneid")) {
                h = $KU.getElementById(j.pf + "_" + m[b].getAttribute("ktabpaneid"))
              } else {
                if (window[j.pf].wType == "Popup") {
                  h = document.getElementById(j.pf + "_container")
                } else {
                  h = document.getElementById(j.pf + "_scroller")
                }
              }
            }
            var k = (h && h.offsetWidth) || window.innerWidth || document.body.clientWidth;
            a = Math.round((e * k) / 100)
          } else {
            if (j.containerheightreference == constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE) {
              var c = document.getElementById(j.pf + "_scroller");
              var d = (c && c.offsetHeight) || $KU.getWindowHeight() || window.innerHeight || document.body.clientHeight;
              a = Math.round((e * d) / 100)
            }
          }
        }
        m[b].style.height = a + "px";
        if (kony.appinit.isIE8) {
          var g = $KU.getElementById(m[b].id);
          g.style.lineHeight = a + "px"
        }
      }
    }
  }
};

function MaskedPassword(e, d) {
  if (typeof document.getElementById == "undefined" || typeof document.styleSheets == "undefined") {
    return false
  }
  if (e == null) {
    return false
  }
  this.symbol = d;
  this.maskingTimerId = null;
  this.isIE = typeof document.uniqueID != "undefined";
  e.value = "";
  e.defaultValue = "";
  e._contextwrapper = this.createContextWrapper(e);
  this.fullmask = true;
  var f = e._contextwrapper;
  var b = '<input type="hidden" id="' + e.id + '_value" name="' + e.name + '">';
  var c = this.convertPasswordFieldHTML(e);
  f.innerHTML = b + c;
  e = f.lastChild;
  e.className += " masked";
  e.setAttribute("autocomplete", "off");
  e._realfield = f.firstChild;
  e._contextwrapper = f;
  this.limitCaretPosition(e);
  var a = this;
  this.addListener(e, "change", function(g) {
    a.fullmask = false;
    a.doPasswordMasking(a.getTarget(g))
  });
  this.addListener(e, "input", function(g) {
    a.fullmask = false;
    if (a.maskingTimerId) {
      window.clearTimeout(a.maskingTimerId);
      a.maskingTimerId = null
    }
    a.doPasswordMasking(a.getTarget(g));
    if (!a.maskingTimerId) {
      a.maskingTimerId = window.setTimeout(function() {
        a.forceMasking(e)
      }, 500)
    }
  });
  this.addListener(e, "propertychange", function(g) {
    a.doPasswordMasking(a.getTarget(g))
  });
  this.addListener(e, "keyup", function(h) {
    if (!/^(9|1[678]|224|3[789]|40)$/.test(h.keyCode.toString())) {
      a.fullmask = false;
      if (a.maskingTimerId) {
        window.clearTimeout(a.maskingTimerId);
        a.maskingTimerId = null
      }
      var g = $KU.getModelByNode(e);
      g.text = e.previousSibling.value;
      a.doPasswordMasking(a.getTarget(h));
      if (!a.maskingTimerId) {
        a.maskingTimerId = window.setTimeout(function() {
          a.forceMasking(e)
        }, 500)
      }
    }
  });
  this.addListener(e, "blur", function(g) {
    a.fullmask = true;
    a.forceMasking(e)
  });
  this.forceFormReset(e);
  return true
}
MaskedPassword.prototype = {
  doPasswordMasking: function(a, e) {
    if (typeof e == "undefined") {
      e = this.fullmask
    }
    var d = "";
    if (a._realfield.value != "") {
      for (var b = 0; b < a.value.length; b++) {
        if (a.value.charAt(b) == this.symbol) {
          d += a._realfield.value.charAt(b)
        } else {
          d += a.value.charAt(b)
        }
      }
    } else {
      d = a.value
    }
    var c = this.encodeMaskedPassword(d, e, a);
    if (a._realfield.value != d || a.value != c) {
      a._realfield.value = d;
      a.value = c
    }
  },
  encodeMaskedPassword: function(d, f, b) {
    var a = f === true ? 0 : 1;
    for (var e = "", c = 0; c < d.length; c++) {
      if (c < d.length - a) {
        e += this.symbol
      } else {
        e += d.charAt(c)
      }
    }
    return e
  },
  forceMasking: function(b) {
    var a = $KU.getModelByNode(b);
    a.text = b.previousSibling.value;
    this.doPasswordMasking(b, true)
  },
  createContextWrapper: function(a) {
    var b = document.createElement("span");
    b.style.position = "relative";
    a.parentNode.insertBefore(b, a);
    b.appendChild(a);
    return b
  },
  forceFormReset: function(a) {
    while (a) {
      if (/form/i.test(a.nodeName)) {
        break
      }
      a = a.parentNode
    }
    if (!/form/i.test(a.nodeName)) {
      return null
    }
    this.addSpecialLoadListener(function() {
      a.reset()
    });
    return a
  },
  convertPasswordFieldHTML: function(c, e) {
    var b = "<input";
    for (var d = c.attributes, a = 0; a < d.length; a++) {
      if (d[a].specified && !/^(_|type|name)/.test(d[a].name)) {
        b += " " + d[a].name + '="' + d[a].value + '"'
      }
    }
    b += ' type="text" autocomplete="off">';
    return b
  },
  limitCaretPosition: function(a) {
    var d = null,
      c = function() {
        if (d == null) {
          if (this.isIE) {
            d = window.setInterval(function() {
              var e = a.createTextRange(),
                g = a.value.length,
                f = "character";
              e.moveEnd(f, g);
              e.moveStart(f, g);
              e.select()
            }, 100)
          } else {
            d = window.setInterval(function() {
              var e = a.value.length;
              if (!(a.selectionEnd == e && a.selectionStart <= e)) {
                a.selectionStart = e;
                a.selectionEnd = e
              }
            }, 100)
          }
        }
      },
      b = function() {
        window.clearInterval(d);
        d = null
      };
    this.addListener(a, "focus", function() {
      c()
    });
    this.addListener(a, "blur", function() {
      b()
    })
  },
  addListener: function(c, a, b) {
    if (typeof document.addEventListener != "undefined") {
      return c.addEventListener(a, b, false)
    } else {
      if (typeof document.attachEvent != "undefined") {
        return c.attachEvent("on" + a, b)
      }
    }
  },
  addSpecialLoadListener: function(a) {
    if (this.isIE) {
      return window.attachEvent("onload", a)
    } else {
      return document.addEventListener("DOMContentLoaded", a, false)
    }
  },
  getTarget: function(a) {
    if (!a) {
      return null
    }
    return a.target ? a.target : a.srcElement
  }
};
$KW.TextField.AutoComplete = {
  __AutoCompleteClass: "autocomplete_base",
  __AutoComplete: new Array(),
  __AutoCompleteElementId: null,
  isIE: document.all ? true : false,
  isGecko: navigator.userAgent.toLowerCase().indexOf("gecko") != -1,
  isOpera: navigator.userAgent.toLowerCase().indexOf("opera") != -1,
  AutoSuggestOrientation: function() {
    if (this.__AutoCompleteElementId != null) {
      this.AutoComplete_HideAll();
      this.AutoComplete_CreateDropdownZeroSize(this.__AutoCompleteElementId);
      this.AutoComplete_ShowDropdown(this.__AutoCompleteElementId);
      this.AutoComplete_HideAll();
      this.AutoComplete_CreateDropdown(this.__AutoCompleteElementId);
      this.AutoComplete_ShowDropdown(this.__AutoCompleteElementId)
    }
  },
  AutoComplete_Create: function(c, b) {
    this.__AutoComplete[c] = {
      data: b,
      isVisible: false,
      element: document.getElementById(c),
      dropdown: null,
      highlighted: null,
      styleclass: this.__AutoCompleteClass
    };
    this.__AutoComplete[c]["element"].setAttribute(this.__AutoCompleteClass, "off");
    this.__AutoComplete[c]["element"].onkeydown = function(d) {
      return $KW.TextField.AutoComplete.AutoComplete_KeyDown(this.getAttribute("id"), d)
    };
    this.__AutoComplete[c]["element"].onkeyup = function(d) {
      return $KW.TextField.AutoComplete.AutoComplete_KeyUp(this.getAttribute("id"), d)
    };
    this.__AutoComplete[c]["element"].onkeypress = function(d) {
      if (!d) {
        d = window.event
      }
      if (d.keyCode == 13 || this.isOpera) {
        return false
      }
    };
    this.__AutoComplete[c]["element"].ondblclick = function() {
      $KW.TextField.AutoComplete.AutoComplete_ShowDropdown(this.getAttribute("id"))
    };
    this.__AutoComplete[c]["element"].onclick = function(d) {
      if (!d) {
        d = window.event
      }
      d.cancelBubble = true;
      d.returnValue = false
    };
    var a = function() {
      for (c in this.__AutoComplete) {
        $KW.TextField.AutoComplete.AutoComplete_HideDropdown(c)
      }
    };
    if (document.addEventListener) {
      document.addEventListener("click", a, false)
    } else {
      if (document.attachEvent) {
        document.attachEvent("onclick", a, false)
      }
    }
    if (arguments[2] != null) {
      this.__AutoComplete[c]["maxitems"] = arguments[2];
      this.__AutoComplete[c]["firstItemShowing"] = 0;
      this.__AutoComplete[c]["lastItemShowing"] = arguments[2] - 1
    }
    this.AutoComplete_CreateDropdown(c);
    if (this.isIE) {
      this.__AutoComplete[c]["iframe"] = document.createElement("iframe");
      this.__AutoComplete[c]["iframe"].id = c + "_iframe";
      this.__AutoComplete[c]["iframe"].style.position = "absolute";
      this.__AutoComplete[c]["iframe"].style.top = "0";
      this.__AutoComplete[c]["iframe"].style.left = "0";
      this.__AutoComplete[c]["iframe"].style.width = "0px";
      this.__AutoComplete[c]["iframe"].style.height = "0px";
      this.__AutoComplete[c]["iframe"].style.zIndex = "98";
      this.__AutoComplete[c]["iframe"].style.visibility = "hidden";
      this.__AutoComplete[c]["element"].parentNode.insertBefore(this.__AutoComplete[c]["iframe"], this.__AutoComplete[c]["element"])
    }
  },
  AutoComplete_CreateDropdown: function(e) {
    var d = this.AutoComplete_GetLeft(this.__AutoComplete[e]["element"]);
    var c = this.AutoComplete_GetTop(this.__AutoComplete[e]["element"]) + this.__AutoComplete[e]["element"].offsetHeight;
    var b = this.__AutoComplete[e]["element"].offsetWidth;
    this.__AutoComplete[e]["dropdown"] = document.createElement("div");
    this.__AutoComplete[e]["dropdown"].className = this.__AutoCompleteClass;
    this.AutoComplete_RemoveDivs(e);
    this.__AutoComplete[e]["element"].parentNode.insertBefore(this.__AutoComplete[e]["dropdown"], this.__AutoComplete[e]["element"]);
    this.__AutoComplete[e]["dropdown"].style.left = d + "px";
    this.__AutoComplete[e]["dropdown"].style.top = c + "px";
    this.__AutoComplete[e]["dropdown"].style.width = b + "px";
    this.__AutoComplete[e]["dropdown"].style.zIndex = "99";
    this.__AutoComplete[e]["dropdown"].style.visibility = "hidden";
    var a = document.getElementById(e);
    if (a.getAttribute("autosuggestskin") != null) {
      this.__AutoComplete[e]["styleclass"] = a.getAttribute("autosuggestskin");
      this.__AutoComplete[e]["dropdown"].className = this.__AutoComplete[e]["styleclass"];
      this.__AutoComplete[e]["dropdown"].style.position = "absolute";
      this.__AutoComplete[e]["dropdown"].style.borderStyle = "solid";
      this.__AutoComplete[e]["dropdown"].style.borderWidth = "1px";
      this.__AutoComplete[e]["dropdown"].style.borderColor = "black";
      this.__AutoComplete[e]["dropdown"].style.backgroundColor = "white";
      this.__AutoComplete[e]["dropdown"].style.overflow = "auto";
      this.__AutoComplete[e]["dropdown"].style.overflowX = "hidden"
    } else {
      this.__AutoComplete[e]["dropdown"].style.fontFamily = this.getElementStyle(a, "font-family");
      this.__AutoComplete[e]["dropdown"].style.fontSize = this.getElementStyle(a, "font-size");
      this.__AutoComplete[e]["dropdown"].style.fontStyle = this.getElementStyle(a, "font-style");
      this.__AutoComplete[e]["dropdown"].style.fontWeight = this.getElementStyle(a, "font-weight");
      this.__AutoComplete[e]["dropdown"].style.color = this.getElementStyle(a, "color")
    }
    this.AutoComplete_RemoveDivs(e);
    this.__AutoComplete[e]["element"].parentNode.insertBefore(this.__AutoComplete[e]["dropdown"], this.__AutoComplete[e]["element"])
  },
  getElementStyle: function(c, a) {
    var b = null;
    if (c.currentStyle) {
      b = c.currentStyle[a]
    } else {
      if (window.getComputedStyle) {
        b = document.defaultView.getComputedStyle(c, null).getPropertyValue(a)
      }
    }
    return b
  },
  AutoComplete_RemoveDivs: function(d) {
    var c = document.getElementById(d).parentNode;
    if (this.__AutoComplete[d]) {
      var b = document.getElementsByClassName(this.__AutoComplete[d]["styleclass"]);
      if (b.length > 0) {
        for (var a = 0; a < b.length; a++) {
          if (b[a].nextSibling.id === d) {
            c.removeChild(b[a])
          }
        }
      }
    }
  },
  AutoComplete_CreateDropdownZeroSize: function(a) {
    this.__AutoComplete[a]["dropdown"].style.left = "1px";
    this.__AutoComplete[a]["dropdown"].style.top = "1px";
    this.__AutoComplete[a]["dropdown"].style.width = "10px";
    this.__AutoComplete[a]["dropdown"].style.zIndex = "99";
    this.__AutoComplete[a]["dropdown"].style.visibility = "hidden"
  },
  AutoComplete_GetLeft: function(a) {
    var b = a;
    var c = 0;
    do {
      c += b.offsetLeft;
      b = b.offsetParent
    } while (b.tagName.toLowerCase() != "body");
    return c
  },
  AutoComplete_GetTop: function(a) {
    var b = a;
    var c = 0;
    do {
      c += b.offsetTop;
      b = b.offsetParent
    } while (b.tagName.toLowerCase() != "body");
    return c
  },
  AutoComplete_ShowDropdown: function(h) {
    this.AutoComplete_HideAll();
    this.__AutoCompleteElementId = h;
    var e = this.__AutoComplete[h]["element"].value;
    var d = new Array();
    var b = null;
    var g = null;
    var a = this.__AutoComplete[h]["dropdown"].childNodes.length;
    while (this.__AutoComplete[h]["dropdown"].childNodes.length > 0) {
      this.__AutoComplete[h]["dropdown"].removeChild(this.__AutoComplete[h]["dropdown"].childNodes[0])
    }
    e = e.ltrim().toUpperCase();
    for (i = 0; i < this.__AutoComplete[h]["data"].length; ++i) {
      if (this.__AutoComplete[h]["data"][i].toUpperCase().indexOf(e) != -1) {
        d[d.length] = this.__AutoComplete[h]["data"][i]
      }
    }
    if (d.length == 0) {
      this.AutoComplete_HideDropdown(h);
      return
    }
    var f = document.getElementById(h);
    var c = f.getAttribute("suggestionspace");
    if (c) {
      c = parseInt(c) / 2
    }
    for (i = 0; i < d.length; ++i) {
      b = document.createElement("div");
      b.className = "autocomplete_item";
      b.setAttribute("id", "autocomplete_item_" + i);
      b.setAttribute("index", i);
      b.style.zIndex = "99";
      if (d.length > this.__AutoComplete[h]["maxitems"] && navigator.userAgent.indexOf("MSIE") == -1) {
        b.style.width = this.__AutoComplete[h]["element"].offsetWidth - 22 + "px"
      }
      b.onmouseover = function() {
        $KW.TextField.AutoComplete.AutoComplete_HighlightItem($KW.TextField.AutoComplete.__AutoComplete[h]["element"].getAttribute("id"), this.getAttribute("index"))
      };
      b.onclick = function() {
        $KW.TextField.AutoComplete.AutoComplete_SetValue($KW.TextField.AutoComplete.__AutoComplete[h]["element"].getAttribute("id"));
        $KW.TextField.AutoComplete.AutoComplete_RemoveDivs(h)
      };
      g = document.createTextNode(d[i]);
      b.appendChild(g);
      this.AutoComplete_HideAllDropdowns();
      if (c) {
        b.style.paddingBottom = c + "px";
        b.style.paddingTop = c + "px"
      }
      this.__AutoComplete[h]["dropdown"].appendChild(b)
    }
    if (d.length > this.__AutoComplete[h]["maxitems"]) {
      this.__AutoComplete[h]["dropdown"].style.height = (this.__AutoComplete[h]["maxitems"] * 15) + 2 + "px"
    } else {
      this.__AutoComplete[h]["dropdown"].style.height = ""
    }
    this.__AutoComplete[h]["dropdown"].style.left = this.AutoComplete_GetLeft(this.__AutoComplete[h]["element"]) + "px";
    this.__AutoComplete[h]["dropdown"].style.top = this.AutoComplete_GetTop(this.__AutoComplete[h]["element"]) + this.__AutoComplete[h]["element"].offsetHeight + "px";
    if (this.isIE) {
      this.__AutoComplete[h]["iframe"].style.top = this.__AutoComplete[h]["dropdown"].style.top;
      this.__AutoComplete[h]["iframe"].style.left = this.__AutoComplete[h]["dropdown"].style.left;
      this.__AutoComplete[h]["iframe"].style.width = this.__AutoComplete[h]["dropdown"].offsetWidth;
      this.__AutoComplete[h]["iframe"].style.height = this.__AutoComplete[h]["dropdown"].offsetHeight;
      this.__AutoComplete[h]["iframe"].style.visibility = "visible"
    }
    if (!this.__AutoComplete[h]["isVisible"]) {
      this.__AutoComplete[h]["dropdown"].style.visibility = "visible";
      this.__AutoComplete[h]["isVisible"] = true
    }
    if (this.__AutoComplete[h]["dropdown"].childNodes.length != a) {
      this.__AutoComplete[h]["highlighted"] = null
    }
  },
  AutoComplete_HideDropdown: function(a) {
    if (this.__AutoComplete[a]["iframe"]) {
      this.__AutoComplete[a]["iframe"].style.visibility = "hidden"
    }
    if (this.__AutoComplete[a]["dropdown"]) {
      this.__AutoComplete[a]["dropdown"].style.visibility = "hidden"
    }
    this.__AutoComplete[a]["highlighted"] = null;
    this.__AutoComplete[a]["isVisible"] = false
  },
  AutoComplete_HideAll: function() {
    for (id in this.__AutoComplete) {
      this.AutoComplete_HideDropdown(id)
    }
  },
  AutoComplete_HideAllDropdowns: function() {
    var b = document.getElementsByClassName(this.__AutoComplete[id]["styleclass"]);
    if (b != null) {
      for (var a = 0; a < b.length; a++) {
        b[a].style.visibility = "hidden"
      }
    }
  },
  AutoComplete_HighlightItem: function(c, a) {
    if (this.__AutoComplete[c]["dropdown"].childNodes[a]) {
      for (var b = 0; b < this.__AutoComplete[c]["dropdown"].childNodes.length; ++b) {
        if (this.__AutoComplete[c]["dropdown"].childNodes[b].className == "autocomplete_item_highlighted") {
          this.__AutoComplete[c]["dropdown"].childNodes[b].className = "autocomplete_item"
        }
      }
      this.__AutoComplete[c]["dropdown"].childNodes[a].className = "autocomplete_item_highlighted";
      this.__AutoComplete[c]["highlighted"] = a
    }
  },
  AutoComplete_Highlight: function(c, a) {
    if (a == 1 && this.__AutoComplete[c]["highlighted"] == this.__AutoComplete[c]["dropdown"].childNodes.length - 1) {
      this.__AutoComplete[c]["dropdown"].childNodes[this.__AutoComplete[c]["highlighted"]].className = "autocomplete_item";
      this.__AutoComplete[c]["highlighted"] = null
    } else {
      if (a == -1 && this.__AutoComplete[c]["highlighted"] == 0) {
        this.__AutoComplete[c]["dropdown"].childNodes[0].className = "autocomplete_item";
        this.__AutoComplete[c]["highlighted"] = this.__AutoComplete[c]["dropdown"].childNodes.length
      }
    }
    if (this.__AutoComplete[c]["highlighted"] == null) {
      this.__AutoComplete[c]["dropdown"].childNodes[0].className = "autocomplete_item_highlighted";
      this.__AutoComplete[c]["highlighted"] = 0
    } else {
      if (this.__AutoComplete[c]["dropdown"].childNodes[this.__AutoComplete[c]["highlighted"]]) {
        this.__AutoComplete[c]["dropdown"].childNodes[this.__AutoComplete[c]["highlighted"]].className = "autocomplete_item"
      }
      var b = this.__AutoComplete[c]["highlighted"] + a;
      if (this.__AutoComplete[c]["dropdown"].childNodes[b]) {
        this.__AutoComplete[c]["dropdown"].childNodes[b].className = "autocomplete_item_highlighted";
        this.__AutoComplete[c]["highlighted"] = b
      }
    }
  },
  AutoComplete_SetValue: function(a) {
    this.__AutoComplete[a]["element"].value = this.__AutoComplete[a]["dropdown"].childNodes[this.__AutoComplete[a]["highlighted"]].innerHTML
  },
  AutoComplete_ScrollCheck: function(a) {
    if (this.__AutoComplete[a]["highlighted"] > this.__AutoComplete[a]["lastItemShowing"]) {
      this.__AutoComplete[a]["firstItemShowing"] = this.__AutoComplete[a]["highlighted"] - (this.__AutoComplete[a]["maxitems"] - 1);
      this.__AutoComplete[a]["lastItemShowing"] = this.__AutoComplete[a]["highlighted"]
    }
    if (this.__AutoComplete[a]["highlighted"] < this.__AutoComplete[a]["firstItemShowing"]) {
      this.__AutoComplete[a]["firstItemShowing"] = this.__AutoComplete[a]["highlighted"];
      this.__AutoComplete[a]["lastItemShowing"] = this.__AutoComplete[a]["highlighted"] + (this.__AutoComplete[a]["maxitems"] - 1)
    }
    this.__AutoComplete[a]["dropdown"].scrollTop = this.__AutoComplete[a]["firstItemShowing"] * 15
  },
  AutoComplete_KeyDown: function(b) {
    if (arguments[1] != null) {
      event = arguments[1]
    }
    var a = event.keyCode;
    switch (a) {
      case 13:
        if (this.__AutoComplete[b]["highlighted"] != null) {
          this.AutoComplete_SetValue(b);
          this.AutoComplete_HideAllDropdowns()
        }
        break;
      case 27:
        this.AutoComplete_HideAllDropdowns();
        event.returnValue = false;
        event.cancelBubble = true;
        break;
      case 38:
        if (!this.__AutoComplete[b]["isVisible"]) {
          this.AutoComplete_ShowDropdown(b)
        }
        this.AutoComplete_Highlight(b, -1);
        this.AutoComplete_ScrollCheck(b, -1);
        return false;
        break;
      case 9:
        if (this.__AutoComplete[b]["isVisible"]) {
          this.AutoComplete_HideAllDropdowns()
        }
        return;
      case 40:
        if (!this.__AutoComplete[b]["isVisible"]) {
          this.AutoComplete_ShowDropdown(b)
        }
        this.AutoComplete_Highlight(b, 1);
        this.AutoComplete_ScrollCheck(b, 1);
        return false;
        break
    }
  },
  AutoComplete_KeyUp: function(b) {
    if (arguments[1] != null) {
      event = arguments[1]
    }
    var a = event.keyCode;
    switch (a) {
      case 13:
        event.returnValue = false;
        event.cancelBubble = true;
        break;
      case 27:
        this.AutoComplete_HideAllDropdowns();
        event.returnValue = false;
        event.cancelBubble = true;
        break;
      case 38:
      case 40:
        return false;
        break;
      default:
        this.AutoComplete_ShowDropdown(b);
        break
    }
  },
  AutoComplete_isVisible: function(a) {
    return this__AutoComplete[a]["dropdown"].style.visibility == "visible"
  }
};
$KW.ComboBox = {
  initialize: function() {
    kony.events.addEvent("change", "ComboBox", this.eventHandler);
    kony.events.addEvent("click", "ComboBox", this.eventHandler)
  },
  initializeView: function(e) {
    var b = document.querySelectorAll("div[name='SelectOptions']");
    if (b) {
      for (var a = 0; a < b.length; a++) {
        var d = b[a].parentNode;
        var c = $KU.getModelByNode(d);
        $KG[d.id + "_autoComplete"] = new $KW.ComboBox.autocomplete(d.childNodes[0], {
          model: c
        })
      }
    }
  },
  updateView: function(c, h, b, d) {
    var g = $KU.getNodeByModel(c);
    switch (h) {
      case "masterdatamap":
      case "masterdata":
        var f = $KW.Utils.getMasterData(c);
        c.selectedkey = f.length > 1 ? f[IndexJL][IndexJL] : null;
        $KW.Utils.setSelectedValueProperty(c, f, "selectedkey");
        if (g) {
          var l = document.createElement("div");
          l.innerHTML = this.generateList(c, f, {
            tabpaneID: g.getAttribute("ktabpaneid")
          });
          g.parentNode.replaceChild(l.firstChild, g);
          if (c.viewtype == "editableview" && c.autosuggest) {
            var a = $KU.getNodeByModel(c);
            $KG[a.id + "_autoComplete"] = new $KW.ComboBox.autocomplete(a.childNodes[0], {
              model: c
            })
          }
          $KU.toggleVisibilty($KU.getNodeByModel(c), f, c)
        }
        break;
      case "selectedkey":
        if (g) {
          var k = c.selectedkey;
          if (c.viewtype == "editableview") {
            var f = $KW.Utils.getMasterData(c);
            var j = false;
            if (f.length > IndexJL) {
              for (var e = IndexJL; e < f.length; e++) {
                if (f[e][IndexJL] == k) {
                  g.children[0].value = f[e][IndexJL + 1];
                  j = true;
                  c.selectedkeyvalue = [k, f[e][IndexJL + 1]];
                  IndexJL && c.selectedkeyvalue.splice(0, 0, null);
                  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
                    c.selectedKeyValue = c.selectedkeyvalue
                  }
                }
              }
            }
            if (!j || f.length < 0) {
              g.children[0].value = k;
              c.selectedkeyvalue = [k, k];
              IndexJL && c.selectedkeyvalue.splice(0, 0, null);
              if (kony.appinit.isIE7 || kony.appinit.isIE8) {
                c.selectedKeyValue = c.selectedkeyvalue
              }
            }
          } else {
            g.value = c.selectedkey;
            $KW.Utils.setSelectedValueProperty(c, $KW.Utils.getMasterData(c), "selectedkey")
          }
        }
        break;
      case "viewtype":
      case "autosuggest":
        if (g) {
          var f = $KW.Utils.getMasterData(c);
          var l = document.createElement("div");
          l.innerHTML = this.generateList(c, f, {
            tabpaneID: g.getAttribute("ktabpaneid")
          });
          g.parentNode.replaceChild(l.firstChild, g);
          if (h == "autosuggest" && b && f && f.length > IndexJL) {
            g = $KU.getNodeByModel(c);
            $KG[g.id + "_autoComplete"] = new $KW.ComboBox.autocomplete(g.childNodes[0], {
              data: f,
              model: c
            })
          }
        }
        break;
      case "editableareaskin":
        if (g && c.viewtype == "editableview") {
          g.childNodes[0].className = b
        }
        break
    }
  },
  render: function(c, a) {
    if (typeof $KW.konyPicker !== "function" || c.view === "popup") {
      c.view = "native"
    }
    if (!c.buiskin) {
      c.buiskin = c.blockeduiskin
    }
    var b = $KW.Utils.getMasterData(c);
    b.ispercent = a.ispercent;
    return this.generateList(c, b, a)
  },
  generateList: function(j, g, c) {
    var m = "";
    var h = $KW.skins.getWidgetSkinList(j, c, g);
    if (!j.view || j.view == "native") {
      if (g.length > IndexJL) {
        var o = j.selectedkey;
        j.selectedkey = o ? o : g[IndexJL][IndexJL];
        $KW.Utils.setSelectedValueProperty(j, g, "selectedkey")
      }
    }
    if (j.viewtype == "editableview") {
      var n = "";
      var q = "";
      var b = $KW.skins.getMarPadAdjustedContainerWeightSkin(j, 100);
      for (var f = IndexJL; f < g.length; f++) {
        (j.selectedkey == g[f][IndexJL]) && (n = g[f][1 + IndexJL]);
        if (!j.autosuggest) {
          q += "<div value='" + g[f][IndexJL] + "' name='SelectOption' style='padding: 1px; padding-left:3px;" + (j.selectedkey == g[f][1] ? "background-color:#3169C6;color:#FFFFFF" : "") + "'>" + g[f][1 + IndexJL] + "</div>"
        }
      }
      n = n || j.selectedkey || "";
      var a = "line-height:16px !important;width:50%;padding-left:2px;font: inherit;border:0px;float:left;" + (!j.editableareaskin ? "background:transparent;" : "");
      m = "<div " + $KW.Utils.getBaseHtml(j, c) + "style='position: relative;' class='" + h + "'><input class='" + j.editableareaskin + "'" + (kony.appinit.isIE7 || kony.appinit.isIE8 ? " onchange='$KW.ComboBox.textChangeEventHandler(arguments[0],this)'" : " ") + " style='" + a + (kony.appinit.isIE7 ? "height:13px !important" : "height:16px !important") + "' type='text' value='" + n + "'" + ((j.length) ? " maxlength='" + j.length + "'" : "") + "/><img name='SelectImage' src='" + $KU.getImageURL("select_arrow.gif") + "' onmouseover='$KW.ComboBox.toggleSelection(arguments[0])' onmouseout='$KW.ComboBox.toggleSelection(arguments[0])' style='position: absolute; right:0px; height: 100%;' onload='$KW.ComboBox.adjustWidth(arguments[0])'/>";
      a = "position: absolute;z-index: 10;display:none;text-align:left;left:-1px;";
      m += "<div id='" + j.pf + "_" + j.id + "_options' name='SelectOptions' class='" + b + " " + (j.skin || "") + "' style='overflow:auto;max-height:150px;" + a + (kony.appinit.isIE7 ? "top:16px" : "") + "' onmouseover='this.parentNode.firstChild.blur();$KW.ComboBox.toggleSelection(arguments[0])'>" + q + "</div>";
      m += "</div>";
      return m
    }
    if (!j.view || j.view == "native") {
      m = "<select " + (kony.appinit.isIE7 || kony.appinit.isIE8 ? " onchange='$KW.ComboBox.eventHandler(arguments[0],this)'" : " ") + $KW.Utils.getBaseHtml(j, c) + "class='" + h + "'" + (j.disabled ? " disabled='true'" : "") + " style='" + $KW.skins.getBaseStyle(j, c) + "'>";
      for (var f = IndexJL; f < (g.length); f++) {
        if (g[f][IndexJL] != null && g[f][1 + IndexJL] != null) {
          var e = (j.selectedkey == g[f][IndexJL]) ? "selected" : "";
          var k = $KU.getAccessibilityValues(j, g[f][2 + IndexJL], g[f][IndexJL]);
          m += "<option  " + k + " value='" + g[f][IndexJL] + "' " + e + ">" + $KU.escapeHTMLSpecialEntities(g[f][1 + IndexJL]) + "</option>"
        }
      }
      m += "</select>"
    } else {
      var p = "kselect ";
      p += (j.skin) ? j.skin : "klistbox";
      m += '<div id="' + j.pf + "_" + j.id + '"' + (c.tabpaneID ? ' ktabpaneid="' + c.tabpaneID + '"' : "") + ' kformname="' + j.pf + '" kwidgettype="' + j.wType + '"  class="' + p + " " + h + ' idevice kddicon" ' + (j.disabled ? 'disabled="true" ' : "") + ' style="text-align:left;">';
      if (j.masterdata) {
        if (!j.selectedkey) {
          j.selectedkey = j.masterdata[0 + IndexJL][0 + IndexJL];
          $KW.Utils.setSelectedValueProperty(j, g, "selectedkey");
          m += j.masterdata[0 + IndexJL][1 + IndexJL]
        } else {
          for (var l = IndexJL; l < j.masterdata.length; l++) {
            if (j.masterdata[l][0 + IndexJL] === j.selectedkey) {
              m += j.masterdata[l][1 + IndexJL];
              break
            }
          }
        }
      }
      m += "</div>"
    }
    return m
  },
  textChangeEventHandler: function(a, c) {
    var b = $KU.getModelByNode(c.parentNode);
    if (b) {
      b.selectedkey = c.value;
      b.selectedkeyvalue = [c.value, c.value];
      IndexJL && b.selectedkeyvalue.splice(0, 0, null);
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        b.selectedKey = b.selectedkey;
        b.selectedKeyValue = b.selectedkeyvalue
      }
    }
  },
  eventHandler: function(a, d, e) {
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a = a || window.event
    }
    var c = $KU.getModelByNode(d);
    var b = $KW.Utils.getMasterData(c);
    if (c) {
      var g;
      if (c.viewtype == "editableview") {
        var f = d.children[2];
        if (e.tagName == "IMG") {
          if (f.style.display == "block") {
            f.style.display = "none"
          } else {
            if (c.autosuggest) {
              var h = $KG[d.id + "_autoComplete"];
              h.renderDropdown(b)
            }
            f.style.display = "block";
            $KW.ComboBox.setSelectedSkin(c, f.children)
          }
        } else {
          if (e.getAttribute("name") == "SelectOption") {
            g = e.getAttribute("value");
            d.children[0].value = e.innerText || e.textContent;
            e.style.backgroundColor = "#3169C6";
            e.style.color = "#FFFFFF";
            f.style.display = "none";
            c.selectedkeyvalue = IndexJL ? [null, g, e.innerText || e.textContent] : [g, e.innerText || e.textContent]
          } else {
            if (a.type == "click") {
              f.style.display = "none"
            }
            g = e.value;
            c.selectedkeyvalue = IndexJL ? [null, g, g] : [g, g]
          }
        }
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          c.selectedKeyValue = c.selectedkeyvalue
        }
      } else {
        g = d.value
      }
      if (c.viewtype != "editableview" && a.type == "click") {
        return
      }
      c.selectedkey = g;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedKey = c.selectedkey
      }
      if (d.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(c, d, false)
      } else {
        if (c.viewtype != "editableview") {
          $KW.ComboBox.resetOption(c, d, b);
          $KW.Utils.setSelectedValueProperty(c, $KW.Utils.getMasterData(c), "selectedkey")
        }
        if ((c.ondone || c.onselection) && c.blockeduiskin) {
          $KW.Utils.applyBlockUISkin(c)
        }
        var i = $KU.returnEventReference(c.ondone || c.onselection);
        i && i.call(c, c)
      }
    }
  },
  resetOption: function(a, f, e) {
    var d = f.childNodes;
    for (var c = 0; c < d.length; c++) {
      d[c].removeAttribute("selected")
    }
    for (var c = 0; c <= d.length; c++) {
      var b = (a.selectedkey == e[c][0]) ? "selected" : "";
      if (b == "selected") {
        f.childNodes[c].setAttribute("selected", "");
        break
      }
    }
  },
  toggleSelection: function(d) {
    var d = d || window.event;
    var f = d.currentTarget || d.srcElement;
    if (f.tagName == "IMG") {
      if (d.type == "mouseover") {
        f.src = $KU.getImageURL("select_arrow_hover.gif")
      } else {
        f.src = $KU.getImageURL("select_arrow.gif")
      }
    } else {
      var c = f;
      var e = $KU.getModelByNode(c.parentNode);
      var a = c.children;
      for (var b = 0; b < a.length; b++) {
        if (e.selectedkeyvalue && a[b].innerHTML == e.selectedkeyvalue[1 + IndexJL]) {
          a[b].style.backgroundColor = "";
          a[b].style.color = ""
        }
      }
    }
  },
  adjustWidth: function(c) {
    var c = c || window.event;
    var f = c.currentTarget || c.srcElement;
    var e = f.parentNode;
    var d = $KU.getModelByNode(e);
    if (d && d.viewtype == "editableview") {
      var a = e.clientWidth;
      var b = e.children[1].clientWidth;
      if (a && b) {
        e.firstChild.style.width = ((a - b) / a) * 100 + "%"
      }
    }
  },
  setSelectedSkin: function(b, a) {
    for (var c = 0; c < a.length; c++) {
      if (b.selectedkeyvalue && a[c].innerHTML == b.selectedkeyvalue[2]) {
        a[c].style.backgroundColor = "#3169C6";
        a[c].style.color = "#FFFFFF"
      } else {
        a[c].style.backgroundColor = "";
        a[c].style.color = ""
      }
    }
  }
};
$KW.ComboBox.autocomplete = function(c, a) {
  this.textBox = c;
  this.dropDown = c.parentNode.childNodes[2];
  c.parentNode.style.height = c.offsetHeight + "px";
  this.dropDown.style.top = (c.parentNode.offsetHeight - 1) + "px";
  this.dropDown.style.width = c.parentNode.offsetWidth + "px";
  if (a && a.model.autosuggest) {
    for (var b in a) {
      this[b] = a[b]
    }
    kony.events.addEventListener(c, "keyup", this.handleEvent.bind(this));
    kony.events.addEventListener(c, "keydown", this.handleEvent.bind(this))
  }
};
$KW.ComboBox.autocomplete.prototype = {
  handleEvent: function(b) {
    b = b || window.event;
    var a = this;
    switch (b.type) {
      case "keydown":
        a.onKeyDown(b);
        break;
      case "keyup":
        a.onKeyUp(b);
        break
    }
  },
  onKeyDown: function(a) {
    if (!a) {
      a = window.event
    }
    var b = a.keyCode;
    switch (b) {
      case 38:
        this.moveUp();
        break;
      case 40:
        this.moveDown();
        break
    }
  },
  onKeyUp: function(a) {
    if (!a) {
      a = window.event
    }
    var b = a.keyCode;
    if ((b >= 33 && b < 46) || (b >= 112 && b <= 123)) {} else {
      if (b == 13 || b == 27) {
        this.dropDown.style.display = "none"
      } else {
        this.showOptions()
      }
    }
  },
  showOptions: function() {
    var a = this.textBox.value;
    this.cur = -1;
    if (a.length > 0) {
      var b = this.getMatches(a);
      if (b.length > IndexJL) {
        this.renderDropdown(b);
        this.dropDown.style.display = "block"
      } else {
        this.dropDown.innerHTML = "";
        this.dropDown.style.display = "none"
      }
    } else {
      var b = $KW.Utils.getMasterData(this.model);
      if (b.length > IndexJL) {
        this.renderDropdown(b);
        this.dropDown.style.display = "block"
      }
    }
  },
  renderDropdown: function(b) {
    while (this.dropDown.hasChildNodes()) {
      this.dropDown.removeChild(this.dropDown.firstChild)
    }
    for (var a = IndexJL; a < b.length; a++) {
      var c = document.createElement("div");
      c.innerHTML = "<div value='" + b[a][IndexJL] + "' name='SelectOption' style='padding: 1px; padding-left:3px;" + (this.model.selectedkey == b[a][IndexJL] ? "background-color:#3169C6;color:#FFFFFF" : "") + "'>" + b[a][1 + IndexJL] + "</div>";
      this.dropDown.appendChild(c.firstChild)
    }
  },
  getMatches: function(d) {
    var c = IndexJL ? [null] : [];
    this.model.selectedkey = null;
    var b = $KW.Utils.getMasterData(this.model);
    if (b && b.length > IndexJL) {
      for (var a = IndexJL; a < b.length; a++) {
        if (b[a][1 + IndexJL].toLowerCase().indexOf(d.toLowerCase()) == 0) {
          c.push(IndexJL ? [null, b[a][IndexJL], b[a][1 + IndexJL]] : [b[a][IndexJL], b[a][1 + IndexJL]]);
          if (d == b[a][1 + IndexJL]) {
            this.model.selectedkey = b[a][IndexJL]
          }
        }
      }
    }
    return c
  },
  moveUp: function() {
    this.dropDown.style.display = "block";
    var a = this.dropDown.childNodes;
    if (a.length > 0 && this.cur > 0) {
      --this.cur;
      this.setSelectedValue(a)
    }
  },
  moveDown: function() {
    this.dropDown.style.display = "block";
    var a = this.dropDown.childNodes;
    if (a.length > 0 && this.cur < (a.length - 1)) {
      ++this.cur;
      this.setSelectedValue(a)
    }
  },
  setSelectedValue: function(a) {
    for (var b = 0; b < a.length; b++) {
      if (b == this.cur) {
        a[b].style.backgroundColor = "#3169C6";
        a[b].style.color = "#FFFFFF";
        this.textBox.value = a[b].innerHTML;
        this.model.selectedkey = a[b].getAttribute("value");
        this.model.selectedkeyvalue = IndexJL ? [null, this.model.selectedkey, this.textBox.value] : [this.model.selectedkey, this.textBox.value];
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          this.model.selectedKey = this.model.selectedkey;
          this.model.selectedKeyValue = this.model.selectedkeyvalue
        }
      } else {
        a[b].style.backgroundColor = "";
        a[b].style.color = ""
      }
    }
  }
};

$KW.RadioButtonGroup = {
  initialize: function() {
    kony.events.addEvent("change", "RadioButtonGroup", this.eventHandler);
    if (kony.appinit.isIE8 || kony.appinit.isIE7) {
      kony.events.addEvent("click", "RadioButtonGroup", this.eventHandler)
    }
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    switch (c) {
      case "masterdatamap":
      case "masterdata":
        var g = $KW.Utils.getMasterData(f);
        f.selectedkey = g.length > 1 ? g[IndexJL][IndexJL] : null;
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          f.selectedKey = f.selectedkey
        }
        $KW.Utils.setSelectedValueProperty(f, g, "selectedkey");
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "selectedkey":
        var h = document.querySelectorAll("#" + f.pf + " input[name='" + f.id + "']");
        for (var d = 0; d < h.length; d++) {
          if (f.selectedkey == h[d].value) {
            h[d].checked = true
          } else {
            h[d].checked = false
          }
        }
        f.selectedkey && $KW.Utils.setSelectedValueProperty(f, $KW.Utils.getMasterData(f), "selectedkey");
        if (!f.selectedkey) {
          f.selectedKeyValue = f.selectedkeyvalue = null
        }
        break;
      case "viewtype":
        f.propertyName = b;
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "checkedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "uncheckedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "size":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break
    }
  },
  render: function(a, b) {
    var d = $KW.Utils.getMasterData(a);
    var c = $KW.skins.getWidgetSkinList(a, b, d);
    var e = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='" + $KW.skins.getBaseStyle(a, b) + (b.ispercent === false ? "display:inline-block" : "") + "'>";
    a.context = b;
    e += this.generateList(a, d, b);
    e += "</div>";
    return e
  },
  generateList: function(c, e, b) {
    var h = "";
    if (e.length > IndexJL) {
      var j = c.selectedkey;
      c.selectedkey = j ? j : null;
      $KW.Utils.setSelectedValueProperty(c, e, "selectedkey");
      for (var f = IndexJL; f < e.length; f++) {
        if (e[f][IndexJL] != null && e[f][1 + IndexJL] != null) {
          var d = (c.selectedkey == e[f][IndexJL]) ? "checked" : "";
          if (c.viewtype == "customview" && !kony.appinit.isIE8) {
            if (c.itemorientation == "vertical") {
              h += "<div style = 'height: auto;'  class='kwt100'>"
            } else {
              h += "<div style = ' display: inline-block; height: auto;' >"
            }
            var k;
            if (d == "checked") {
              k = "url(" + $KU.getImageURL(c.checkedimage) + ")"
            } else {
              k = "url(" + $KU.getImageURL(c.uncheckedimage) + ")"
            }
            var a = (b && b.container ? (c.id + "_" + b.container.counter) : c.id);
            h += "<input style='display : none;' id ='" + c.id + "radio" + f + "' class='middlecenteralign' kformname='" + c.pf + "' kwidgettype='" + c.wType + "' type='radio' " + d + ($KW.Utils.isWidgetDisabled(c, b) ? " disabled='true'" : "") + " value='" + e[f][IndexJL] + "' name='" + a + "' style='  margin-right:3px;' />";
            h += "<label id ='" + c.id + "_label" + f + "' selected ='" + d + "'  for ='" + c.id + "radio" + f + "'  name = '" + c.id + "_label" + f + "' style=' background-image: " + k + "; width: " + c.size + "px; height: " + c.size + "px; -webkit-background-size: 100%; background-size:100%; margin-right: 3px; vertical-align: middle; display: inline-block;' ></label>";
            h += "<label style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            h += $KU.escapeHTMLSpecialEntities(e[f][1 + IndexJL]);
            h += (c.itemorientation == constants.RADIOGROUP_ITEM_ORIENTATION_VERTICAL) ? "</label><br/></div>" : "</div></label>&nbsp;"
          } else {
            if (c.itemorientation == "vertical") {
              h += "<div style = 'height: auto;'  class='kwt100'>"
            } else {
              h += "<div style = ' display: inline-block; height: auto; text-decoration: inherit;' >"
            }
            var a = (b && b.container ? (c.id + "_" + b.container.counter) : c.id);
            var g = $KU.getAccessibilityValues(c, e[f][2 + IndexJL], e[f][IndexJL]);
            if (g.indexOf("aria-label") < 0) {
              g += " aria-label='" + $KU.escapeHTMLSpecialEntities(e[f][1 + IndexJL]) + "' "
            }
            h += "<input  " + g + "type='radio' kwidgettype='" + c.wType + "' name='" + a + "' " + d + ($KW.Utils.isWidgetDisabled(c, b) ? " disabled='true'" : "") + " class='middlecenteralign' value='" + e[f][IndexJL] + "' style='margin-right:3px;' kformname='" + c.pf + "'/>";
            h += "<span aria-hidden='true' class='middlecenteralign'>" + $KU.escapeHTMLSpecialEntities(e[f][1 + IndexJL]) + "</span>";
            h += (c.itemorientation == "vertical") ? "<br/></div>" : "</div>&nbsp;"
          }
        }
      }
    }
    return h
  },
  changeImage: function(f, b, a) {
    if (b.selectedkey != a) {
      var e = $KW.Utils.getMasterData(b);
      var h = "url(" + $KU.getImageURL(b.checkedimage) + ")";
      var g = "url(" + $KU.getImageURL(b.uncheckedimage) + ")";
      for (var c = IndexJL; c < e.length; c++) {
        if (e[c][IndexJL] != null && e[c][1 + IndexJL] != null) {
          var d = $KU.getElementById(b.id + "_label" + c);
          if (d.getAttribute("selected") == "checked") {
            d.style.backgroundImage = "url(" + $KU.getImageURL(b.uncheckedimage) + ")";
            d.setAttribute("selected", "")
          }
        }
      }
      f.style.backgroundImage = "url(" + $KU.getImageURL(b.checkedimage) + ")";
      f.setAttribute("selected", "checked")
    }
  },
  eventHandler: function(b, g) {
    if (kony.appinit.isIE8 && g.tagName == "DIV") {
      return
    }
    var f = g.parentNode.parentNode;
    var a = $KU.getModelByNode(f);
    var e = f.getElementsByTagName("input");
    for (var c = 0; c < e.length; c++) {
      e[c].removeAttribute("checked")
    }
    g.setAttribute("checked", "");
    if (a) {
      if (a.viewtype == "customview" && !kony.appinit.isIE8) {
        $KW.RadioButtonGroup.changeImage($KU.getNextSibling(g), a, g.value)
      }
      a.selectedkey = g.value;
      if (f.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(a, g, false)
      } else {
        $KW.Utils.setSelectedValueProperty(a, $KW.Utils.getMasterData(a), "selectedkey");
        var d = $KU.returnEventReference(a.onselection);
        if (d) {
          d.call(a, a);
          $KU.onEventHandler(a)
        }
      }
    }
  }
};
$KW.ListBox = {
  initialize: function() {
    kony.events.addEvent("change", "ListBox", this.eventHandler)
  },
  updateView: function(b, g, a, c) {
    var f = $KU.getNodeByModel(b);
    switch (g) {
      case "multiselectrows":
        if (f && b.multiple) {
          f.setAttribute("size", a)
        }
        break;
      case "masterdatamap":
      case "masterdata":
        var e = $KW.Utils.getMasterData(b);
        b.selectedkey = b.selectedkeys = b.selectedkeyvalue = b.selectedkeyvalues = null;
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          b.selectedKey = b.selectedKeys = b.selectedKeyValue = b.selectedKeyValues = null
        }
        if (f) {
          b.context.ispercent = "";
          var j = document.createElement("div");
          j.innerHTML = this.generateList(b, e, b.context);
          f.parentNode.replaceChild(j.firstChild, f);
          $KU.toggleVisibilty($KU.getNodeByModel(b), e, b)
        }
        break;
      case "selectedkeys":
        $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkeys");
        if (f) {
          if (f.tagName == "SELECT") {
            var k = f.options;
            if (k.length > 0) {
              for (var d = 0; d < k.length; d++) {
                if (b.selectedkeys && $KU.inArray(b.selectedkeys, k[d].value)[0]) {
                  k[d].selected = true
                } else {
                  k[d].selected = false
                }
              }
              if (!b.selectedkeys) {
                if (!b.multiple) {
                  k[0].selected = true
                }
                b.selectedkeyvalues = null;
                if (kony.appinit.isIE7 || kony.appinit.isIE8) {
                  b.selectedKeyValues = null
                }
              }
            }
          } else {
            if (f.tagName == "DIV") {
              if (b.selectedkeys) {
                f.innerText = b.selectedkeyvalues[1][2]
              } else {
                f.innerText = b.masterdata[1][2]
              }
            }
          }
        }
        break;
      case "selectedkey":
        if (f) {
          var h = b.selectedkey;
          f.value = b.selectedkey
        }
        $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkey");
        break
    }
  },
  render: function(c, a) {
    if (!c.buiskin) {
      c.buiskin = c.blockeduiskin
    }
    if (typeof $KW.konyPicker !== "function" || c.view === "popup") {
      c.view = "native"
    }
    var b = $KW.Utils.getMasterData(c);
    b.ispercent = a.ispercent;
    c.context = a;
    return this.generateList(c, b, a)
  },
  generateList: function(b, c, a) {
    var e = $KW.skins.getWidgetSkinList(b, a, c);
    var k = b.multiple ? " multiple" : "";
    var j = b.multiselectrows ? " size=" + parseInt(b.multiselectrows) : "";
    var h = "";
    if (!b.view || b.view == "native") {
      var f = b.contentalignment == constants.CONTENT_ALIGN_MIDDLE_RIGHT ? " dir='rtl'" : "";
      h = "<select" + f + $KW.Utils.getBaseHtml(b, a) + "class='" + e + "' " + (b.disabled ? "disabled='true' " : "") + k + j + " style='" + $KW.skins.getBaseStyle(b, a) + "'" + ((kony.appinit.isIE8 || kony.appinit.isIE7) ? "onchange=$KW.ListBox.eventHandler(arguments[0],this)" : "") + ">";
      if (c.length > IndexJL) {
        b.selectedkey && $KW.Utils.setSelectedValueProperty(b, c, "selectedkey");
        b.selectedkeys && $KW.Utils.setSelectedValueProperty(b, c, "selectedkeys");
        if (b.needsectionheaders) {
          h += this.generateGroupOptions(b, c)
        } else {
          h += this.generateOptions(b, c)
        }
      }
      h += "</select>"
    } else {
      var i = "kselect";
      i += (b.skin) ? " " + b.skin : " klistbox";
      h += "<div " + $KW.Utils.getBaseHtml(b, a) + "  class='" + i + " " + e + ' idevice kddicon" ' + (b.disabled ? 'disabled="true" ' : "") + k + ' style="text-align:left;">';
      if (!b.selectedkeys || b.selectedkeys.length < 1) {
        b.selectedkeys = [null, b.masterdata[IndexJL][IndexJL]];
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          b.selectedKeys = b.selectedkeys
        }
        b.selectedkeys && $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkeys");
        h += b.masterdata[IndexJL][IndexJL + 1]
      } else {
        for (var g = IndexJL; g < b.masterdata.length; g++) {
          if (b.masterdata[g][IndexJL] === b.selectedkeys[IndexJL]) {
            h += b.masterdata[g][IndexJL + 1];
            break
          }
        }
      }
      h += "</div>"
    }
    return h
  },
  generateGroupOptions: function(d, b) {
    var c = "";
    for (var a = 1; a < b.length; a++) {
      if (b[a][1] != null && $KU.isArray(b[a][2])) {
        c += "<optgroup label='" + b[a][1] + "' class='" + (d.sectionskin || "") + "'>";
        c += this.generateOptions(d, b[a][2]);
        c += "</optgroup>"
      }
    }
    return c
  },
  generateOptions: function(f, d) {
    var e = "";
    var b = false;
    for (var a = IndexJL; a < d.length; a++) {
      if (d[a][IndexJL] != null) {
        if (f.multiple) {
          b = (f.selectedkeys && $KU.inArray(f.selectedkeys, d[a][IndexJL])[0]) ? "selected" : ""
        } else {
          b = (f.selectedkey && f.selectedkey == d[a][IndexJL]) ? "selected" : ""
        }
        var c = $KU.getAccessibilityValues(f, d[a][2 + IndexJL], d[a][IndexJL]);
        e += '<option value="' + d[a][IndexJL] + '" ' + b + c + ">" + $KU.escapeHTMLSpecialEntities(d[a][1 + IndexJL]) + "</option>"
      }
    }
    if (b != "selected") {
      f.selectedkey = d[IndexJL][IndexJL];
      f.selectedkeyvalue = [d[IndexJL][IndexJL], d[IndexJL][IndexJL + 1]]
    }
    return e
  },
  eventHandler: function(c, k) {
    var b = $KU.getModelByNode(k);
    if (b) {
      var e = $KW.Utils.getMasterData(b);
      if ((kony.appinit.isIE7 || kony.appinit.isIE8) && !b.multiple) {
        if (k.value == b.selectedkey) {
          return
        }
      }
      var n = (IndexJL == 1 ? [null] : []);
      if (k.tagName == "SELECT") {
        for (var f = 0; f < k.options.length; f++) {
          if (k.options[f].selected) {
            b.selectedkey = k.options[f].value;
            if (kony.appinit.isIE7 || kony.appinit.isIE8) {
              b.selectedKey = b.selectedkey
            }
            n.push(k.options[f].value)
          }
        }
      } else {
        if (k.tagName == "DIV") {
          var a = b.selectedkeys;
          var h = $KG[k.id];
          if (h) {
            n.push(h.val)
          }
        }
      }
      b.selectedkeys = n;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        b.selectedKeys = b.selectedkeys
      }
      var l = k.childNodes;
      for (var f = 0; f < l.length; f++) {
        l[f].removeAttribute("selected")
      }
      if (b.multiple) {
        for (var d = 0; d < b.selectedkeys.length; d++) {
          for (var f = 0; f < l.length; f++) {
            var g = (b.selectedkeys[d] == e[f][0]) ? "selected" : "";
            if (g == "selected") {
              k.childNodes[f].setAttribute("selected", "");
              break
            }
          }
        }
      } else {
        for (var f = 0; f < l.length; f++) {
          var g = (b.selectedkey == e[f][0]) ? "selected" : "";
          if (g == "selected") {
            k.childNodes[f].setAttribute("selected", "");
            break
          }
        }
      }
      $KW.Utils.setSelectedValueProperty(b, e, "selectedkey");
      $KW.Utils.setSelectedValueProperty(b, e, "selectedkeys");
      if ((b.ondone || b.onselection) && b.blockeduiskin) {
        $KW.Utils.applyBlockUISkin(b)
      }
      if (k.tagName == "SELECT" || (k.tagName == "DIV" && h && a && a[IndexJL] !== h.val)) {
        var m = $KU.returnEventReference(b.ondone || b.onselection);
        if (m) {
          m.call(b, b);
          $KU.onEventHandler(b)
        }
      }
    }
  }
};

$KW.TextArea = {
  initialize: function() {
    kony.events.addEvent("change", "TextArea", this.eventHandler);
    kony.events.addEvent("keyup", "TextArea", this.keyUpEventHandler);
    kony.events.addEvent("keydown", "TextArea", this.keyDownEventHandler)
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    if (!e) {
      return
    }
    switch (c) {
      case "text":
        if (b) {
          e.value = b;
          b && $KU.removeClassName(e, "konyplaceholder")
        } else {
          e.value = ""
        }
        $KW.TextField.setPlaceholder(f, e);
        break;
      case "maxtextlength":
      case "length":
        e.maxLength = b;
        break;
      case "placeholder":
        e.setAttribute("placeholder", b);
        $KW.TextField.setPlaceholder(f, e);
        break;
      case "numberofvisiblelines":
        e.setAttribute("rows", b);
        break;
      case "numberofrows":
        e.setAttribute("rows", b);
        break;
      case "mode":
      case "textinputmode":
        if (b == constants.TEXTAREA_INPUT_MODE_ANY) {
          e.setAttribute("type", "text")
        } else {
          if (b == constants.TEXTAREA_INPUT_MODE_NUMERIC) {
            e.setAttribute("type", "number")
          }
        }
        break;
      case "autocapitalize":
        var g = b;
        if ($KU.isiPhone && parseInt($KU.getPlatformVersion("iphone")) <= 4 && b != constants.TEXTAREA_AUTO_CAPITALIZE_NONE) {
          g = "on"
        }
        e.setAttribute("autocapitalize", g);
        var d = $KU.getTextTrasform(f);
        d && (e.style.textTransform = d);
        break;
      case "keyboardtype":
      case "keyboardstyle":
        (textModel.mode != "P") && e.setAttribute("type", b);
        break
    }
  },
  render: function(g, b) {
    if (typeof g.mode == "undefined") {
      g.mode = g.textinputmode
    }
    var d = $KW.skins.getWidgetSkinList(g, b);
    switch (g.mode) {
      case constants.TEXTAREA_INPUT_MODE_NUMERIC:
        type = "number";
        break;
      default:
        type = "text"
    }
    if (g.keyboardtype) {
      switch (g.keyboardtype) {
        case constants.TEXTAREA_KEY_BOARD_STYLE_EMAIL:
          type = "email";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_URL:
          type = "url";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_CHAT:
          type = "chat";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_DECIMAL:
        case constants.TEXTAREA_KEY_BOARD_STYLE_NUMBER_PAD:
          type = "number";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_PHONE_PAD:
          type = "tel";
          break
      }
    }
    var f = g.text;
    if (!("placeholder" in document.createElement("input"))) {
      d += ((g.placeholder && !g.text) ? " konyplaceholder " : "");
      f = f || g.placeholder || ""
    }
    var c = $KW.skins.getBaseStyle(g, b) + " -" + vendor + "-text-security:" + (g.securetextentry ? "circle;" : "none;") + "resize:none; " + (b.layoutDir && b.ispercent === false ? ";float:" + b.layoutDir : "");
    c += ";text-align:" + $KW.skins.getContentAlignment(g) + ";";
    var a = $KU.getTextTrasform(g);
    c += a ? "text-transform:" + a + ";" : "";
    var e = "<textarea" + $KW.Utils.getBaseHtml(g, b) + "class = '" + d + "' cols='15' rows='" + g.numberofvisiblelines + "' maxlength='" + g.maxtextlength + "' style='" + c + "' type = '" + type + "'  autocapitalize='" + g.autocapitalize + "'";
    if (g.maxtextlength && $KU.isIE) {
      e += " onpaste='return $KW.TextArea.handlepaste(event, this);' onkeypress='return $KW.TextArea.imposeMaxLength(event, this);'"
    }
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      e += " onchange='$KW.TextArea.eventHandler(arguments[0], this)'"
    }
    e += " onfocus='$KW.TextField.onfocusEventHandler(arguments[0],this)' onblur='$KW.TextField.onblurEventHandler(arguments[0],this)' ";
    e += (g.placeholder) ? " placeholder='" + $KU.escapeHTMLSpecialEntities(g.placeholder) + "'" : "";
    e += ">" + f + "</textarea>";
    return e
  },
  onblurEventHandler: function(a, c) {
    var b = $KU.getModelByNode(c);
    b && $KU.onHideKeypad(b)
  },
  eventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    if (c) {
      c.canUpdateUI = false;
      c.text = d.value;
      c.canUpdateUI = true;
      d.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(c, d, false);
      var b = $KU.returnEventReference(c.ontextchange);
      if (b) {
        b.call(c, c);
        $KU.onEventHandler(c)
      }
    }
  },
  keyUpEventHandler: function(b, e) {
    var d = $KU.getModelByNode(e);
    if (d) {
      d.canUpdateUI = false;
      d.text = e.value;
      d.canUpdateUI = true
    }
    if (d.ondone && (b.keyCode == 10 || b.keyCode == 13)) {
      if (d) {
        e.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(d, e, false, true);
        var c = $KU.returnEventReference(d.done || d.ondone);
        (d.blockeduiskin) && $KW.Utils.applyBlockUISkin(d);
        if (c) {
          c.call(d, d);
          $KU.onEventHandler(d)
        }
      }
    }
    var a = $KU.returnEventReference(d.onkeyup);
    a && a.call(d, d)
  },
  handlepaste: function(c, e) {
    if (!c) {
      c = window.event
    }
    var b = $KU.getModelByNode(e);
    var a = b.maxtextlength;
    if (a) {
      var d = window.clipboardData.getData("Text");
      d = e.innerHTML + d;
      if (d.length > a) {
        e.innerHTML = d.substring(0, a);
        return false
      }
      return true
    }
  },
  imposeMaxLength: function(d, c) {
    if (!d) {
      d = window.event
    }
    var b = $KU.getModelByNode(c);
    var a = b.maxtextlength;
    return (c.value.length < a) || (d.keyCode == 8 || d.keyCode == 46 || (d.keyCode >= 35 && d.keyCode <= 40))
  },
  keyDownEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    var b = $KU.returnEventReference(c.onkeydown);
    b && b.call(c, c)
  }
};
$KW.CheckBoxGroup = {
  initialize: function() {
    kony.events.addEvent("change", "CheckBoxGroup", this.eventHandler);
    if (kony.appinit.isIE8 || kony.appinit.isIE7) {
      kony.events.addEvent("click", "CheckBoxGroup", this.eventHandler)
    }
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    switch (c) {
      case "masterdatamap":
      case "masterdata":
        var g = $KW.Utils.getMasterData(f);
        f.selectedkeys && $KW.Utils.setSelectedValueProperty(f, g, "selectedkeys");
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "selectedkeys":
        var h = document.querySelectorAll("#" + f.pf + " input[name='" + f.id + "']");
        if (h.length > 0) {
          for (var d = 0; d < h.length; d++) {
            if ($KU.inArray(f.selectedkeys, h[d].value)[0]) {
              h[d].checked = true
            } else {
              h[d].checked = false
            }
          }
          $KW.Utils.setSelectedValueProperty(f, $KW.Utils.getMasterData(f), "selectedkeys")
        }
        break;
      case "viewtype":
        f.propertyName = b;
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "checkedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "uncheckedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "size":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break
    }
  },
  render: function(a, b) {
    if (a.itemorientation) {
      a.orientation = a.itemorientation
    }
    var d = $KW.Utils.getMasterData(a);
    var c = $KW.skins.getWidgetSkinList(a, b, d);
    var e = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='" + $KW.skins.getBaseStyle(a, b) + (b.ispercent === false ? "display:inline-block" : "") + "'>";
    a.context = b;
    if ((a.viewtype == "tableview" || a.viewtype == "toggleview") && !kony.appinit.isIE8) {
      e += this.renderViews(a, d, b)
    } else {
      e += this.generateList(a, d, b)
    }
    e += "</div>";
    return e
  },
  renderViews: function(a, e, c) {
    var f = "";
    if (e.length > IndexJL) {
      a.selectedkeys && $KW.Utils.setSelectedValueProperty(a, e, "selectedkeys");
      if (a.viewtype == "toggleview") {
        f += "<div class='ktable kwt100' style='border: 1px solid gray; border-radius: 10px; overflow: hidden; '>"
      }
      for (var b = IndexJL; b < (e.length); b++) {
        if (e[b][IndexJL] != null && e[b][1 + IndexJL] != null) {
          var d = (a.selectedkeys && $KU.inArray(a.selectedkeys, e[b][IndexJL])[0]) ? "checked" : "";
          var h = "middleleftalign";
          if (a.viewtype == "tableview") {
            f += "<div style = 'background: red; border: none; height: auto;' class =' kwt100 middleleftalign " + a.skin + "' >";
            var g;
            if (d == "checked") {
              g = "url(" + $KU.getImageURL(a.checkedimage) + ")"
            } else {
              g = "url(" + $KU.getImageURL(a.uncheckedimage) + ")"
            }
            f += "<input style='display : none;' id ='" + a.id + "_label" + b + "' class='" + h + "' kformname='" + a.pf + "' kwidgettype='" + a.wType + "' type='checkbox' " + d + ($KW.Utils.isWidgetDisabled(a, c) ? " disabled='true'" : "") + " value='" + e[b][IndexJL] + "' name='" + a.id + "' style='  margin-right:3px;' />";
            f += "<label class='kwt90'  name = '" + a.id + "_label' style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            f += e[b][1 + IndexJL];
            f += "</label>";
            f += "<label class='kwt10 middlecenteralign' selected ='" + d + "'  for ='" + a.id + "_label" + b + "'  name = '" + a.id + "_label' style=' background-image: " + g + "; width: " + a.size + "px; height: " + a.size + "px; -webkit-background-size: 100%; background-size:100%; margin-right: 3px; margin-botom: 2px; vertical-align: middle; display: inline-block; '></label>";
            f += "</div>";
            f += "<div style='border-top: 1px solid gray'></div>"
          } else {
            if (a.viewtype == "toggleview") {
              f += "<div style = '  margin-right: 2px; border-right: 1px solid gray; height: auto;' class =' kcell  middlecenteralign " + a.skin + "' >";
              f += "<input style='display : none;' id ='" + a.id + "_label" + b + "' class='" + h + "' kformname='" + a.pf + "' kwidgettype='" + a.wType + "' type='checkbox' " + d + ($KW.Utils.isWidgetDisabled(a, c) ? " disabled='true'" : "") + " value='" + e[b][IndexJL] + "' name='" + a.id + "' style='  margin-right:3px;' />";
              f += "<label class='' for ='" + a.id + "_label" + b + "'   name = '" + a.id + "_label' style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
              f += e[b][1 + IndexJL];
              f += "</label>";
              f += "</div>"
            }
          }
        }
      }
      if (a.viewtype == "toggleview") {
        f += "</div>"
      }
    }
    return f
  },
  generateList: function(k, c, a) {
    var g = "";
    if (c.length > IndexJL) {
      k.selectedkeys && $KW.Utils.setSelectedValueProperty(k, c, "selectedkeys");
      for (var d = IndexJL; d < (c.length); d++) {
        if (c[d][IndexJL] != null && c[d][1 + IndexJL] != null) {
          var b = (k.selectedkeys && $KU.inArray(k.selectedkeys, c[d][IndexJL])[0]) ? "checked" : "";
          var f = "middlecenteralign";
          if ($KU.isAndroid && !$KU.isTablet) {
            f = ""
          }
          if (k.viewtype == "customview" && !kony.appinit.isIE8) {
            if (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) {
              g += "<div style = 'height: auto;" + (a.ispercent === false ? "display:inline'" : "' class='kwt100'") + ">"
            } else {
              g += "<div style = ' display: inline-block; height: auto;' >"
            }
            var j;
            if (b == "checked") {
              j = "url(" + $KU.getImageURL(k.checkedimage) + ")"
            } else {
              j = "url(" + $KU.getImageURL(k.uncheckedimage) + ")"
            }
            g += "<input style='display : none;' id ='" + k.id + "_label" + d + "' class='" + f + "' kformname='" + k.pf + "' kwidgettype='" + k.wType + "' type='checkbox' " + b + ($KW.Utils.isWidgetDisabled(k, a) ? " disabled='true'" : "") + " value='" + c[d][IndexJL] + "' name='" + k.id + "' style='  margin-right:3px;' />";
            g += "<label  selected ='" + b + "'  for ='" + k.id + "_label" + d + "'  name = '" + k.id + "_label' style=' background-image: " + j + "; width: " + k.size + "px; height: " + k.size + "px; -webkit-background-size: 100%; background-size:100%; margin-right: 3px; margin-botom: 2px; vertical-align: middle; display: inline-block; '></label>";
            g += "<label   name = '" + k.id + "_label' style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            g += $KU.escapeHTMLSpecialEntities(c[d][1 + IndexJL]);
            g += (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) ? "</label><br/></div>" : "</div></label>&nbsp;"
          } else {
            var e = $KU.getAccessibilityValues(k, c[d][2 + IndexJL], c[d][IndexJL]);
            var h = "";
            if (e.indexOf("aria-hidden") > 0) {
              h = " aria-Hidden='true' "
            }
            if (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) {
              g += "<div " + h + " style = 'height: auto;" + (a.ispercent === false ? "display:inline'" : "' class='kwt100'") + ">"
            } else {
              g += "<div " + h + "style = ' display: inline-block; height: auto; text-decoration: inherit;' >"
            }
            g += "<input class='" + f + "' kformname='" + k.pf + "' kwidgettype='" + k.wType + "' type='checkbox' " + b + ($KW.Utils.isWidgetDisabled(k, a) ? " disabled='true'" : "") + e + " value='" + c[d][IndexJL] + "' name='" + k.id + "' style='margin-right:3px;' />";
            g += $KU.escapeHTMLSpecialEntities(c[d][1 + IndexJL]);
            g += (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) ? "<br/></div>" : "</div>&nbsp;"
          }
        }
      }
    }
    return g
  },
  changeImage: function(b, a) {
    var c = "url(" + $KU.getImageURL(a.checkedimage) + ")";
    if (b.getAttribute("selected") == "checked") {
      b.style.backgroundImage = "url(" + $KU.getImageURL(a.uncheckedimage) + ")";
      b.setAttribute("selected", "")
    } else {
      b.style.backgroundImage = "url(" + $KU.getImageURL(a.checkedimage) + ")";
      b.setAttribute("selected", "checked")
    }
  },
  eventHandler: function(a, f) {
    var e = f.parentNode.parentNode;
    var b = $KU.getModelByNode(e);
    if (f.getAttribute("checked") === "") {
      f.removeAttribute("checked")
    } else {
      f.setAttribute("checked", "")
    }
    if (b) {
      if (!kony.appinit.isIE8 && a.type == "click" && b.viewtype == "defaultview") {
        return
      }
      if (b.viewtype == "customview" && !kony.appinit.isIE8) {
        $KW.CheckBoxGroup.changeImage($KU.getNextSibling(f), b)
      }
      if (b.viewtype == "tableview" && !kony.appinit.isIE8) {
        $KW.CheckBoxGroup.changeImage($KU.getNextSibling($KU.getNextSibling(f)), b)
      }
      if (e.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(b, f, false)
      } else {
        var d = b.selectedkeys || (IndexJL == 1 ? [null] : []);
        $KW.Utils.setSelectedKeys(b, f.checked, d, f.value);
        $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkeys");
        var c = $KU.returnEventReference(b.onselection);
        if (c) {
          c.call(b, b);
          $KU.onEventHandler(b)
        }
      }
    }
  }
};
$KW.Link = {
  initialize: function() {
    kony.events.addEvent("click", "Link", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "text":
        d.innerHTML = b;
        break
    }
  },
  render: function(a, b) {
    if (!a.buiskin) {
      a.buiskin = a.blockeduiskin
    }
    var c = $KW.skins.getWidgetSkinList(a, b);
    var d = "<div" + (a.disabled ? " kdisabled='true'" : "") + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='display:inline-block;text-align:" + $KW.skins.getContentAlignment(a) + ";" + $KW.skins.getBaseStyle(a, b) + (b.layoutDir && b.ispercent === false ? ";float:" + b.layoutDir : "") + "'>";
    d += $KU.escapeHTMLSpecialEntities(a.text) + "</div>";
    return d
  },
  eventHandler: function(b, e) {
    var c = $KU.getModelByNode(e),
      a = e.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(c, e, true)
    } else {
      if (c.onclick) {
        var d = $KU.returnEventReference(c.onclick);
        e.setAttribute("selected", "progressindtr");
        e.setAttribute("progressskin", c.skin);
        c.blockeduiskin && $KW.Utils.applyBlockUISkin(c);
        d.call(c, c);
        $KU.onEventHandler(c)
      }
    }
  }
};
$KW.HBox = {
  initialize: function() {
    kony.events.addEvent("click", "HBox", this.eventHandler);
    kony.events.addEvent("onorientationchange", "HBox", this.orientationHandler)
  },
  orientationHandler: function(h, c) {
    var g = document.querySelectorAll("div[aspect-ratio]");
    for (var d = 0; d < g.length; d++) {
      var f = g[d];
      var a = f.getAttribute("aspect-ratio");
      var e = f.clientWidth;
      var b = Math.round(1 / a * e);
      f.style.height = b + "px"
    }
  },
  updateView: function(d, c, b, a) {},
  getExtraNodeWidth: function(b) {
    var c = 0;
    for (var a = 0; a < b.children.length; a++) {
      c += b[b.children[a]].containerweight
    }
    return (c > 100) ? 0 : (100 - c)
  },
  render: function(m, a) {
    if (!m.buiskin) {
      m.buiskin = m.blockeduiskin
    }
    if (m.layouttype == constants.CONTAINER_LAYOUT_GRID) {
      return $KW.Grid.render(m, a)
    }
    if (kony.appinit.isIE7) {
      return this.renderIEHtml(m, a)
    }
    if (m.isTemplate === true) {
      var b = m
    } else {
      if (!a.renderingTabHeader) {
        var b = kony.model.getWidgetModel(m.pf, a.tabpaneID)
      } else {
        var b = kony.model.getWidgetModel(a.pf, a.tabpaneID);
        b = b[a.tabID]["header"]
      }
    }
    var e = $KW.skins.getWidgetAlignmentSkin(m);
    var h = a.topLevelBox;
    var g = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(m, a);
    var f = g[2];
    f += " " + $KW.skins.getWidgetAlignmentSkin(m);
    var l = "";
    if (!h) {
      l += "<div class = 'krow kwt100' >";
      l += "<div class = 'kcell kwt100' >"
    }
    f += $KW.skins.getVisibilitySkin(m);
    var j = " " + $KW.skins.getBaseStyle(m, a);
    l += "<div  class = 'ktable " + f + "'" + $KW.Utils.getBaseHtml(m, a) + " style='" + j + "'>";
    if (m.children) {
      for (var d = 0; d < m.children.length; d++) {
        var c = m[m.children[d]];
        a.vLine = (c.wType == "Line") ? true : false;
        if (c.wType === "HBox" || c.wType === "VBox") {
          a.topLevelBox = false;
          a.ispercent = m.percent;
          if (c.wType == "HBox") {
            l += $KW.HBox.render(c, a)
          } else {
            l += $KW.VBox.render(c, a)
          }
        } else {
          if (m.percent === true) {
            a.ispercent = true;
            var n;
            if (c.containerweight) {
              n = "kwt" + c.containerweight
            } else {
              n = "auto"
            }
            var k = $KW.skins.getWidgetAlignmentSkin(c);
            l += "<div class = 'kcell " + n + " " + k + (c.wType == "TPW" ? " konycustomcss" : "") + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(c) + "' >"
          } else {
            a.ispercent = false
          }
          l += $KW[c.wType].render(c, a);
          if (m.percent === true) {
            l += "</div>"
          }
        }
      }
      if ($KG.appbehaviors.adherePercentageStrictly == true && m.percent === true) {
        m.dummyNodeWidth = this.getExtraNodeWidth(m);
        l += "<div class = 'kcell kwt" + m.dummyNodeWidth + "'  ></div>"
      }
    }
    l += "</div>";
    if (!h) {
      l += "</div></div>"
    }
    return l
  },
  renderIEHtml: function(n, a) {
    var b = kony.model.getWidgetModel(n.pf, a.tabpaneID);
    var e = $KW.skins.getWidgetAlignmentSkin(n);
    var m = "";
    var j = a.topLevelBox;
    var h = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(n, a);
    var f = h[2];
    f += " " + $KW.skins.getWidgetAlignmentSkin(n);
    if (!j) {
      m += "<tr class = 'kwt100' >";
      m += "<td class = 'kwt100' >"
    }
    f += !$KW.Utils.isWidgetVisible(n, a) ? " hide" : "";
    var k = $KW.Utils.getNormalImageStyle(n) + $KW.skins.getMarginSkin(n, a) + $KW.skins.getPaddingSkin(n);
    m += "<div class = '" + f + "'" + $KW.Utils.getBaseHtml(n, a) + " style='" + k + "'>";
    m += "<table class = 'kwt100' " + (n.fixedLayout == "true" ? " style='table-layout:fixed;'" : "") + ">";
    if (n.percent === false) {
      a.layoutDir = (n.wdir == "1" ? "left" : ((n.wdir == "3") ? "right" : ""))
    }
    m += "<tr class = '" + e + " kwt100' >" + (n.percent === false ? "<td class='kwt100'>" : "");
    if (n.children) {
      var o = 0;
      var g = n.children.length;
      if (kony.appinit.isIE7 && n.percent === false && a.layoutDir && a.layoutDir == "right") {
        o = n.children.length - 1;
        g = 0
      }
      for (var d = o;
           (o == 0 ? (d < g) : (d >= g));
           (o == 0 ? d++ : d--)) {
        var c = n[n.children[d]];
        if (c.wType === "HBox" || c.wType === "VBox") {
          a.topLevelBox = false;
          a.ispercent = n.percent;
          if (c.wType == "HBox") {
            m += $KW.HBox.render(c, a)
          } else {
            m += $KW.VBox.render(c, a)
          }
        } else {
          if (n.percent === true) {
            a.ispercent = true;
            var p = "kwt" + c.containerweight;
            var l = $KW.skins.getWidgetAlignmentSkin(c);
            m += "<td class = '" + p + " " + l + "' >"
          } else {
            a.ispercent = false
          }
          m += $KW[c.wType].render(c, a);
          if (n.percent === true) {
            m += "</td>"
          }
        }
      }
    }
    m += (n.percent === false ? "</td>" : "") + "</tr></table></div>";
    if (!j) {
      m += "</td></tr>"
    }
    a.layoutDir = "";
    return m
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    c.blockeduiskin && $KW.Utils.applyBlockUISkin(c);
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  },
  setProgressIndicator: function(b) {
    var a = $KW.Utils.setProgressIndicator(b);
    b.parentNode.insertBefore(a, b)
  },
  addChild: function(b, e) {
    var c = $KU.getNodeByModel(b);
    if (c && e.length > 0) {
      var f = document.createElement("div");
      f.innerHTML = $KW.HBox.appendChildren(b, e);
      if (b.wType == "ScrollBox" && b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        var d = c;
        $KW.ScrollBox.adjustScrollBoxWidth(b, d);
        c = c.firstChild.firstChild
      } else {
        if (b.wType == "ScrollBox" && b.orientation == constants.BOX_LAYOUT_VERTICAL) {
          c = c.firstChild.firstChild
        }
      }
      while (f.children.length > 0) {
        if ((b.wType == "HBox" || b.wType == "ScrollBox") && $KG.appbehaviors.adherePercentageStrictly == true && b.percent === true) {
          c.insertBefore(f.children[0], c.lastChild || null)
        } else {
          c.appendChild(f.children[0])
        }
      }
      if ($KG.appbehaviors.adherePercentageStrictly == true && b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        for (var a = 0; a < e.length; a++) {
          b.dummyNodeWidth -= e[a].containerweight
        }
        c.lastChild.className = "kcell kwt" + b.dummyNodeWidth
      }
      if (b.wType == "ScrollBox" && b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        $KW.ScrollBox.adjustScrollChildrenWidth(b, d)
      }
      $KU.layoutNewWidgets(b, e);
      $KW.Utils.initializeNewWidgets(e)
    }
  },
  addChildat: function(c, f, a) {
    var d = $KU.getNodeByModel(c);
    if (d) {
      var g = document.createElement("div");
      g.innerHTML = $KW.HBox.appendChildren(c, f);
      if (c.wType == "HBox" || c.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        if (c.wType == "ScrollBox") {
          var e = d;
          $KW.ScrollBox.adjustScrollBoxWidth(c, e);
          d = d.firstChild.firstChild
        } else {
          if (c.wType == "ScrollBox" && c.orientation == constants.BOX_LAYOUT_VERTICAL) {
            d = d.firstChild.firstChild
          }
        }
      }
      a = a < 0 ? 0 : a;
      if (kony.appinit.isIE && !d.childNodes[a]) {
        d.appendChild(g.childNodes[0])
      } else {
        d.insertBefore(g.childNodes[0], d.childNodes[a])
      }
      if (c.wType == "ScrollBox" && c.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        $KW.ScrollBox.adjustScrollChildrenWidth(c, e)
      }
      $KU.layoutNewWidgets(c, f);
      $KW.Utils.initializeNewWidgets(f);
      if ($KG.appbehaviors.adherePercentageStrictly == true && c.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        for (var b = 0; b < f.length; b++) {
          c.dummyNodeWidth -= f[b].containerweight
        }
        d.lastChild.className = "kcell kwt" + c.dummyNodeWidth
      }
    }
  },
  appendChildren: function(g, h) {
    var a = new $KW.WidgetGenerationContext(g.pf);
    if (g.wType == "FlexContainer" || g.wType == "FlexScrollContainer") {
      return $KW.FlexContainer.renderChildren(g, h, a)
    }
    var f = "";
    for (var d = 0; d < h.length; d++) {
      var c = h[d];
      if (c.wType == "HBox" || c.wType == "VBox") {
        a.toplevel = false;
        if (c.wType == "HBox") {
          f += $KW.HBox.render(c, a)
        } else {
          f += $KW.VBox.render(c, a)
        }
      } else {
        if (g.wType == "HBox" || g.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
          if (g.percent == true) {
            a.ispercent = true;
            var j = "kwt" + c.containerweight;
            var e = $KW.skins.getWidgetAlignmentSkin(c);
            f += "<div class = 'kcell " + j + " " + e + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(c) + "' >"
          } else {
            a.ispercent = false
          }
          f += $KW[c.wType].render(c, a);
          if (g.percent == true) {
            f += "</div>"
          }
        } else {
          var b = " krow kwt100 ";
          f += "<div class = '" + b + "' >";
          layoutDirection = $KW.skins.getWidgetAlignmentSkin(c);
          b = "kwt100";
          b += " kcell " + layoutDirection;
          f += "<div class = '" + b + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(c) + "' >";
          f += $KW[c.wType].render(c, a);
          f += "</div></div>"
        }
      }
    }
    return f
  },
  add: function() {
    var a = arguments[0];
    if (a && "add" in a) {
      var b = [].slice.call(arguments, 1);
      a.add(b)
    }
  },
  addAt: function(b, c, a) {
    if (c == null) {
      return
    }
    b && b.addAt(c, a)
  },
  remove: function(a, b) {
    a && a.remove(b)
  },
  removeAt: function(b, a) {
    return b && b.removeAt(a)
  },
  widgets: function(a) {
    return a && a.widgets()
  },
  DOMremove: function(b, c) {
    var d = $KU.getNodeByModel(b);
    if (d && c) {
      if (b.wType == "ScrollBox" && (b.orientation == constants.BOX_LAYOUT_HORIZONTAL || b.orientation == constants.BOX_LAYOUT_VERTICAL)) {
        d = d.firstChild.firstChild
      } else {
        if (b.wType == "HBox" || b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
          d = b.wType == "ScrollBox" ? d.firstChild.firstChild : d
        }
      }
      for (var a = 0; a < b.children.length; a++) {
        if (c.id == b.children[a]) {
          d.removeChild(d.children[a]);
          break
        }
      }
    }
  },
  DOMremoveAll: function(a) {
    var b = $KU.getNodeByModel(a);
    if (b) {
      if (a.wType == "HBox" || (a.wType == "ScrollBox" && a.orientation == constants.BOX_LAYOUT_HORIZONTAL)) {
        b = b.children[0]
      }
      b.innerHTML = ""
    }
  },
  resetWidthScrollBox: function(f, d) {
    var e = document.getElementById(f.pf + "_" + f.id + "_parent"),
      b = 0,
      a = document.getElementById(f.pf + "_" + f.id + "_scrollee");
    for (var c = IndexJL; c < f.children.length; c++) {
      if (d.id == f.children[c]) {
        continue
      }
      if (window[f.pf][f.children[c]]) {
        b += window[f.pf][f.children[c]].containerWeight
      }
    }
    a.style.width = (e.offsetWidth * (b / 100) < e.offsetWidth) ? (e.offsetWidth + "px") : (e.offsetWidth * (b / 100) + "px")
  }
};
$KW.VBox = {
  initialize: function() {
    kony.events.addEvent("click", "VBox", this.eventHandler)
  },
  updateView: function(d, c, b, a) {},
  render: function(h, b) {
    if (h.layouttype == constants.CONTAINER_LAYOUT_GRID) {
      return $KW.Grid.render(h, b)
    }
    if (kony.appinit.isIE7) {
      return this.renderIEHtml(h, b)
    }
    if (!b.renderingTabHeader) {
      var d = h.parent
    } else {
      var d = kony.model.getWidgetModel(b.pf, b.tabpaneID);
      d = d[b.tabID]["header"]
    }
    var l = b.topLevelBox;
    var g = $KW.skins.getWidgetAlignmentSkin(h);
    var n = "";
    var m = " " + $KW.skins.getBaseStyle(h, b);
    var k = $KW.skins.getVisibilitySkin(h);
    if (l) {
      var c = $KW.skins.getWidgetSkinList(h, b);
      n += "<div class = 'ktable " + c + " " + k + "'" + $KW.Utils.getBaseHtml(h, b) + " style='" + m + "'>"
    } else {
      var a = h.containerweight;
      if (d && d.wType == "ScrollBox" && d.totalWt && kony.appinit.isIE) {
        a = Math.floor((100 * a) / d.totalWt)
      }
      $KW.skins.addWidthRule(a);
      var c = "kwt" + a + " " + g;
      n += "<div class = ' kcell " + c + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(h) + "' >";
      c = $KW.skins.getWidgetSkinList(h, b);
      n += "<div class = 'ktable " + c + " " + k + "'" + $KW.Utils.getBaseHtml(h, b) + " style='" + m + "'>"
    }
    var j = h.children ? h.children.length : 0;
    for (var f = 0; f < j; f++) {
      var e = h[h.children[f]];
      if (e.wType === "HBox" || e.wType === "VBox" || e.wType === "ScrollBox") {
        b.topLevelBox = false;
        if (e.wType == "HBox") {
          b.ispercent = h.percent
        }
        n += $KW[e.wType].render(e, b)
      } else {
        b.ispercent = true;
        n += "<div class = ' krow kwt100' >";
        g = $KW.skins.getWidgetAlignmentSkin(e);
        c = "kcell kwt100 " + g + (e.wType == "TPW" ? " konycustomcss" : "");
        n += "<div class = '" + c + "' >";
        n += $KW[e.wType].render(e, b);
        n += "</div></div>"
      }
    }
    n += "</div>";
    if (!l) {
      n += "</div>"
    }
    return n
  },
  renderIEHtml: function(h, a) {
    var c = kony.model.getWidgetModel(h.pf, a.tabpaneID);
    var l = a.topLevelBox;
    var f = $KW.skins.getWidgetAlignmentSkin(h);
    var n = "";
    var m = $KW.Utils.getNormalImageStyle(h) + $KW.skins.getMarginSkin(h, a) + $KW.skins.getPaddingSkin(h);
    if (l) {
      var g = $KW.skins.getWidgetSkinList(h, a);
      g += g + (!$KW.Utils.isWidgetVisible(h, a) ? " hide" : "");
      n += "<table class = 'ktable " + g + "'" + $KW.Utils.getBaseHtml(h, a) + (h.fixedLayout == "true" ? " style='table-layout:fixed;" : "") + m + "'>"
    } else {
      var b = "kwt" + h.containerweight + " " + f + (!$KW.Utils.isWidgetVisible(h, a) ? " hide" : "");
      n += "<td class = ' kcell " + b + "' >";
      var j = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(h, a);
      b = j[2];
      n += "<div class = 'ktable " + b + "'" + $KW.Utils.getBaseHtml(h, a) + " style='" + m + "'>"
    }
    var k = h.children ? h.children.length : 0;
    for (var e = 0; e < k; e++) {
      var d = h[h.children[e]];
      if (d.wType === "HBox" || d.wType === "VBox") {
        a.topLevelBox = false;
        if (d.wType == "HBox") {
          a.ispercent = h.percent;
          a.topLevelBox = true;
          n += $KW.HBox.render(d, a);
          a.topLevelBox = false
        } else {
          n += $KW.VBox.render(d, a)
        }
      } else {
        a.ispercent = true;
        f = $KW.skins.getWidgetAlignmentSkin(d);
        b = "kwt100 " + f;
        n += "<div class = '" + b + "' >";
        n += $KW[d.wType].render(d, a);
        n += "</div>"
      }
    }
    n += "</div>";
    if (!l) {
      n += "</td>"
    }
    return n
  },
  eventHandler: function(a, b) {
    $KW.HBox.eventHandler(a, b)
  }
};
$KW.Line = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Line", this.resizeVLines)
  },
  initializeView: function(a) {
    $KW.Line.resizeVLines(a)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "thickness":
        if (e.parent.wType != "FlexContainer") {
          if (d.getAttribute("direction") == "V") {
            d.style.width = b + "px"
          } else {
            d.style.borderTopWidth = b + "px"
          }
        }
        break
    }
  },
  render: function(h, b) {
    var g = $KW.skins.getWidgetSkinList(h, b);
    var d = (h.skin && this.getColor(h.skin)) || "black";
    var f;
    if (b.vLine || $KU.isFlexWidget(h)) {
      var c = b.vLine ? "width:" + h.thickness + "px;" : "";
      var a = b.vLine ? "height:1px;" : "";
      var e = b.vLine ? "V" : "flex";
      f = "<div" + $KW.Utils.getBaseHtml(h, b) + "class='" + g + "' direction='" + e + "' style='background-color:" + d + ";" + c + a + "margin:auto;" + $KW.skins.getBaseStyle(h, b) + (b.ispercent === false ? "display:inline-block" : "") + "'></div>"
    } else {
      f = "<div" + $KW.Utils.getBaseHtml(h, b) + "class='" + g + "' style='border-top:" + h.thickness + "px solid " + d + ";" + $KW.skins.getBaseStyle(h, b) + "'></div>"
    }
    return f
  },
  resizeVLines: function(e, a) {
    var c = document.querySelectorAll("#" + e + " div[kwidgettype='Line'][direction='V']");
    if (a) {
      for (var b = 0; b < c.length; b++) {
        var d = c[b];
        d.style.height = "1px"
      }
    }
    for (var b = 0; b < c.length; b++) {
      $KW.Line.resizeVLine(c[b])
    }
  },
  resizeVLine: function(a) {
    a.style.height = "auto";
    a.style.height = a.parentNode.clientHeight + "px";
    a.parentNode.style.width = a.style.width
  },
  applySkin: function(a, c) {
    var b = (c && this.getColor(c)) || "black";
    if (a.getAttribute("direction") == "V" || a.getAttribute("direction") == "flex") {
      a.style.backgroundColor = b
    } else {
      a.style.borderTopColor = b
    }
  },
  getColor: function(b) {
    if (!$KG["line" + b]) {
      var a = document.createElement("div");
      a.className = b;
      document.body.appendChild(a);
      $KG["line" + b] = $KU.getStyle(a, "color");
      document.body.removeChild(a)
    }
    return $KG["line" + b]
  }
};
$KW.Segment = {
  segmentCounter: 0,
  initialize: function() {
    kony.events.addEvent("click", "Segment", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Segment", this.orientationHandler)
  },
  initializeView: function(a) {
    $KU.setScrollBoxesHeight(a, "Segment")
  },
  orientationHandler: function(b, a) {
    $KU.setScrollBoxesHeight(b, "Segment")
  },
  adjustFooter: function(d) {
    var a = document.querySelectorAll("#" + d + " div[kwidgettype='Segment']");
    for (var b = 0; b < a.length; b++) {
      var c = $KU.getModelByNode(a[b]);
      var e = document.getElementById(c.pf + "_" + c.id + "_footer");
      e && (e.style.width = window.innerWidth)
    }
  },
  updateView: function(n, p, G, f) {
    var d = $KU.getNodeByModel(n);
    switch (p) {
      case "skin":
      case "askin":
      case "rowskin":
      case "alternaterowskin":
        if (d) {
          if (p == "skin") {
            var A = G + "grp";
            var z = f + "grp";
            $KU.removeClassName(d, z);
            $KU.addClassName(d, A);
            break
          }
          if (n.viewtype != constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            if (n.hasSections) {
              this.applySectionRowSkin(n, d)
            } else {
              d = d.childNodes[0];
              this.applyRowSkin(n, d)
            }
          }
        }
        break;
      case "widgetskin":
        var d = $KW.Utils.getWidgetNode(n);
        if (d) {
          $KU.removeClassName(d, f || (n.skin ? n.skin + "grp" : ""));
          $KU.addClassName(d, G)
        }
        break;
      case "sectionskin":
      case "sectionheaderskin":
        if (n.hasSections) {
          $KW.Segment.applySectionHeaderSkin(n, G)
        }
        break;
      case "focusedindex":
      case "selectedindex":
        if (G && this.isSelectionOutOfBound(n, G)) {
          return
        }
        if (p == "focusedindex") {
          G = IndexJL ? [null, 0, G] : [0, G]
        }
        if (n.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR && n.viewtype != constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          var t = null;
          n.selectedRows = (n.selectedRows) ? n.selectedRows : (IndexJL) ? [null] : [];
          if (G) {
            if (n.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
              t = (IndexJL) ? [null, G] : [G];
              var v = $KU.arrayIndex(n.selectedRows, G);
              if (v != -1) {
                t.splice(v, 1)
              } else {
                t = t
              }
            } else {
              if (n.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
                var v = $KU.arrayIndex(n.selectedRows, G);
                if (v != -1) {
                  n.selectedRows.splice(v, 1)
                } else {
                  n.selectedRows.push(G)
                }
                t = n.selectedRows
              }
            }
          }
          t = (!t) ? null : (t.length > IndexJL) ? t : null;
          this.setImages(n, t)
        } else {
          if (n.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
            n.selectedRows = (!G) ? null : (IndexJL) ? [null, G] : [G];
            this.setSelectedItemsAndIndices(n)
          }
        }
        if (n.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          var m = n.swipeContext;
          if (d) {
            var I = d.children[0];
            var D = G[IndexJL + 1];
            if ((D - IndexJL) <= I.children.length) {
              m.currentPage = parseInt(D) - IndexJL;
              $KW.touch.scrollImages(I, m.imageWidth * m.currentPage, $KU.swipeDuration, false);
              $KW.touch.updatePageIndicator(d, m, n)
            }
          }
        } else {
          (G && d) && this.setFocus(n, d, G)
        }
        break;
      case "selectedsectionindex":
        if (n.hasSections) {
          var h = IndexJL ? G : (G + 1);
          if (d) {
            d = document.querySelector("#" + d.id + " ul:nth-child(" + h + ")");
            d && $KW.Widget.setfocus(n, null, d)
          }
        }
        break;
      case "selectedindices":
        if (G) {
          var t = (IndexJL) ? [null] : [];
          for (var C = IndexJL; C < G.length; C++) {
            var s = parseInt(G[C][0 + IndexJL], 10);
            var E = G[C][1 + IndexJL];
            for (var B = IndexJL; B < E.length; B++) {
              var J = (IndexJL) ? [null, s, E[B]] : [s, E[B]];
              if (!this.isSelectionOutOfBound(n, J)) {
                t.push(J)
              }
            }
          }
          if (n.selectionbehavior != constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
            t = (IndexJL) ? [null, t[t.length - 1]] : [t[t.length - 1]]
          }
          t = (t.length > IndexJL) ? t : null
        } else {
          var t = null
        }
        if (n.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
          n.selectedRows = t;
          this.setSelectedItemsAndIndices(n)
        } else {
          this.setImages(n, t)
        }
        break;
      case "paginationconfig":
        $KW.Segment.updatePageFooter(n);
        break;
      case "septhickness":
      case "separatorthickness":
      case "sepcolor":
      case "separatorcolor":
      case "separatorrequired":
        if (d) {
          var a = n.separatorthickness || n.septhickness;
          var y = n.separatorcolor || n.sepcolor;
          var e = "[id='" + d.id + "'] li[index" + (n.hasSections ? "$='-1']" : "]");
          var w = document.querySelectorAll(e);
          for (var C = 0; C < w.length; ++C) {
            var x = w[C];
            x.style.border = "none";
            if (!n.separatorrequired) {
              continue
            }
            var q = parseInt(y.substring(0, 2), 16),
              F = parseInt(y.substring(2, 4), 16),
              H = parseInt(y.substring(4, 6), 16);
            var u = 1 - (parseInt(y.substring(6, 8), 16) / 100);
            var c = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + q + ", " + F + "," + H + ")" : "rgba(" + q + ", " + F + "," + H + "," + u + ")";
            x.style.borderBottom = a + "px solid " + c
          }
        }
        break;
      case "needpageindicator":
        if (n.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          var d = document.getElementById([n.pf, n.id, "footer"].join("_"));
          if (d) {
            if (G) {
              $KU.removeClassName(d, "hide")
            } else {
              $KU.addClassName(d, "hide")
            }
          }
        }
        break;
      case "pageondotimage":
      case "pageoffdotimage":
        var d = document.getElementById([n.pf, n.id, "footer"].join("_"));
        if (d) {
          d.innerHTML = $KW.Segment.generatePageFooter(n, (n.data || []))
        }
        break;
      case "data":
        if ($KU.isArray(G)) {
          this.setData(n, G)
        } else {
          if (G === null) {
            n.selectedRows = n.data = null;
            this.setSelectedItemsAndIndices(n)
          }
        }
        break;
      case "viewtype":
        var d = $KU.getNodeByModel(n);
        if (G != f && d) {
          var l = d.parentNode;
          if (f == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            l = l.parentNode
          }
          l.innerHTML = this.generateSegment(n, n.context);
          d = $KU.getNodeByModel(n);
          if (G == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            n.selectionbehavior = constants.SEGUI_DEFAULT_BEHAVIOR;
            $KW.touch.computeWidths(d, n);
            var k = new $KW.touch.pageviewScroller(d, {
              widgetModel: n
            });
            $KG[d.id] = k
          }
          this.adjustFlexContainers(n, "setdata");
          $KU.setScrollHeight(n, d)
        }
        break;
      case "selectionbehavior":
        if (G != f) {
          this.setData(n, n.data)
        }
        break;
      case "selectionbehaviorconfig":
        if (G instanceof Object) {
          n.selectionindicator = G.imageIdentifier || G.imageidentifier;
          n.selectimage = G.selectedStateImage || G.selectedstateimage;
          n.unselectimage = G.unselectedStateImage || G.unselectedstateimage
        }
        if (n.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR) {
          this.setData(n, n.data)
        }
        break
    }
  },
  setFocus: function(c, a, b) {
    var d = (c.hasSections) ? "secindex='" + b[0 + IndexJL] + "," + b[1 + IndexJL] + "'" : "index='" + b[1 + IndexJL] + "'";
    a = document.querySelector("#" + a.id + " li[" + d + "]");
    a && $KW.Widget.setfocus(c, null, a)
  },
  render: function(d, b) {
    if (!d.buiskin) {
      d.buiskin = d.blockeduiskin
    }
    if (!d.retainselection) {
      d.selectedRows = d.selectedindices = d.focusedindex = d.focuseditem = d.selectedindex = d.selecteditems = d.selectedsectionindex = d.selectedrowindex = d.selectedrowindices = null
    } else {
      d.focusedindex = (d.focusedindex || d.focusedindex == 0) ? d.focusedindex : null;
      d.selectedindex = d.selectedindex || null;
      d.focuseditem = d.focuseditem || null;
      d.selecteditems = d.selecteditems || null;
      d.selectedsectionindex = (d.selectedsectionindex || d.selectedsectionindex == 0) ? d.selectedsectionindex : null;
      d.selectedindices = d.selectedindices || null;
      d.selectedRows = d.selectedRows || null
    }
    $KU.updateScrollFlag(d);
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      d.selectedItems = d.selecteditems;
      d.selectedIndex = d.selectedindex;
      d.selectedIndices = d.selectedindices
    }
    var c = d.selectionbehaviorconfig;
    if (c && c instanceof Object) {
      d.selectionindicator = c.imageIdentifier || c.imageidentifier;
      d.selectimage = c.selectedStateImage || c.selectedstateimage;
      d.unselectimage = c.unselectedStateImage || c.unselectedstateimage
    }
    d.context = b;
    d.selectedState = false;
    var a = d.parent;
    if ($KU.isFlexContainer(a)) {
      d.layoutConfig.self = true
    }
    return this.generateSegment(d, b)
  },
  generateSegment: function(e, d) {
    var j = "",
      b = e.data || [];
    var i = (e.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) ? true : false;
    e.selectedsectionindex = IndexJL;
    var o = $KU.isFlexWidget(e);
    var a = (!o && (!e.isvisible || b.length <= IndexJL)) ? "hide" : "";
    var n = e.skin;
    var g = (e.name == "kony.ui.SegmentedUI2") ? (e.widgetskin ? e.widgetskin : "") : (n ? n + "grp" : "");
    var h = a + " " + g;
    var f = $KW.skins.getBaseStyle(e, d);
    var k = $KW.skins.getPaddingSkin(e);
    d.topLevelBox = true;
    if (i) {
      var m = e.rowSkin || "";
      var c = e.pf + "_" + e.id;
      j += "<div id='" + c + "_wrapper' style='" + f + ";position:relative' class='" + h + "'>";
      j += "<div" + $KW.Utils.getBaseHtml(e, d);
      j += "name='touchcontainer_Segment' class='kstripcontainer " + m + "'";
      j += ">";
      j += "<div id='imgs' class='kstrip' style='";
      if (!kony.appinit.useTransition) {
        j += "position:relative"
      }
      j += "'>"
    } else {
      j += "<div" + $KW.Utils.getBaseHtml(e, d);
      j += "class='" + h + "' style='" + f + k + "'>"
    }
    if (b.length > IndexJL) {
      if (!i) {
        e.hasSections = $KU.isArray(b[IndexJL])
      }
      if (!i && e.hasSections === false) {
        j += "<ul style='list-style:none'>"
      }
      j += this.generateRows(e, d, b, false, IndexJL, IndexJL)
    }
    if (i) {
      var l = $KW.Segment.renderPageFooter(e);
      if (e.paginationconfig && e.paginationconfig.position == "top") {
        j = l + j;
        j += "</div></div>"
      } else {
        j += "</div></div>";
        j += l
      }
      j += "</div>"
    } else {
      if (e.hasSections === false) {
        j += "</ul></div>"
      } else {
        j += "</div>"
      }
    }
    return j
  },
  renderPageFooter: function(d) {
    var b = d.data || [];
    var c = (!d.isvisible || b.length <= 1 || !d.needpageindicator) ? "hide" : "";
    var a = $KU.isFlexWidget(d) ? "position:absolute;bottom:0px;" : "";
    var e = "<div class='ktable kwt100 " + c + "' style='" + a + $KW.Segment.getPageFooterStyle(d) + "' id='" + d.pf + "_" + d.id + "_footer'>" + this.generatePageFooter(d, b) + "</div>";
    return e
  },
  getPageFooterStyle: function(d) {
    var a = d.paginationconfig;
    var c = (a && a.vdistance) || 30,
      b = (a && a.hdistance) || 0;
    c = (a && a.position == "top") ? c : -c;
    return a ? ("position: relative;z-index: 999;top: " + c + "px; left: " + b + "px;") : ""
  },
  updatePageFooter: function(c) {
    var d = document.getElementById(c.pf + "_" + c.id + "_footer");
    if (d) {
      d.setAttribute("style", $KW.Segment.getPageFooterStyle(c));
      var b = d.cloneNode(true);
      var a = d.parentNode;
      if (c.paginationconfig && c.paginationconfig.position == "top") {
        a.removeChild(d);
        a.insertBefore(b, document.getElementById(c.pf + "_" + c.id))
      }
    }
  },
  generateRows: function(h, d, K, m, q, v) {
    var l = "",
      z = "",
      C = 0,
      A = h.separatorcolor;
    var I = 0,
      n = null,
      D = "",
      G = "";
    var s = h.sectionheaderskin || h.sectionskin || "",
      e = "";
    var c = h.rowskin || h.skin || "",
      u = h.alternaterowskin || h.askin || "";
    var f, J;
    var F = (h.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) ? true : false;
    K = this.invertMapAndData(h, K);
    h.counter = q;
    if (A && h.separatorrequired) {
      var t = parseInt(A.substring(0, 2), 16),
        E = parseInt(A.substring(2, 4), 16),
        H = parseInt(A.substring(4, 6), 16),
        x = 1 - (parseInt(A.substring(6, 8), 16) / 100);
      var a = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + t + ", " + E + "," + H + ")" : "rgba(" + t + ", " + E + "," + H + "," + x + ")";
      var y = h.separatorthickness + "px solid " + a;
      z = " style='background-clip:padding-box;border-bottom:" + y + ";" + (q > IndexJL ? "border-top:" + y : "") + "'"
    }
    for (var B = IndexJL; B < K.length; B++) {
      this.segmentCounter = B;
      I = (!h.hasSections) ? (B - IndexJL) : (K[B].sectionLabel) ? 0 : (I + 1);
      e = (I % 2 == 1 && u) ? u : c;
      if (K[B].metainfo && K[B].metainfo.skin) {
        e = K[B].metainfo.skin
      }
      if (K[B].template || h.rowtemplate) {
        var w = d.tabpaneID;
        d.tabpaneID = ""
      }
      var k = "";
      n = K[B].sectionLabel;
      if (n || n === "") {
        if (n instanceof Object) {
          f = n.template || h.sectionheadertemplate;
          k = $KU.getAccessibilityValues(h, n.accessibilityConfig, null, q);
          if (f && $KU.getkeys(n).length > 0) {
            d.topLevelBox = true;
            d.container = h;
            h.widgetsData = n;
            if (!f.pf) {
              window[f.id] = f;
              _konyConstNS.Form2.addHeaderorFooter.call(f, f)
            }
            f.isTemplate = true;
            var j = owl.deepCopy(f);
            D = (j.wType == "FlexContainer") ? this.renderFlexContainer(j, d, n, h, q) : this.renderHBox(j, d, n, h, q);
            if (D === "") {
              D = " "
            }
            d.topLevelBox = false;
            delete d.container;
            delete h.widgetsData
          }
        } else {
          if (n === "") {
            D = " "
          } else {
            D = "<div " + $KW.Utils.getBaseHtml(h, d) + ">" + n + "</div>"
          }
        }
        if (D) {
          if (B == IndexJL) {
            l += "<ul style='list-style:none'>"
          } else {
            if (C == B - IndexJL) {
              v++;
              q = IndexJL;
              l += "</ul><ul style='list-style:none'>"
            }
          }
          C += h.data[v][1 + IndexJL].length > IndexJL ? h.data[v][1 + IndexJL].length - IndexJL : 1;
          l += "<li " + z + " class='" + s + " middleleftalign'  index='" + v + ",-1' secindex='" + v + ",-1'>" + D + "</li>"
        }
      }
      h.seccounter = v;
      h.rowcounter = q;
      d.topLevelBox = true;
      d.container = h;
      h.widgetsData = K[B];
      J = K[B].template || h.rowtemplate || h;
      if (J) {
        window[J.id] = J;
        !J.pf && _konyConstNS.Form2.addHeaderorFooter.call(J, J)
      }
      J.isTemplate = true;
      var p = owl.deepCopy(J);
      k = $KU.getAccessibilityValues(h, K[B].accessibilityConfig, null, q);
      G = (p.wType == "FlexContainer") ? this.renderFlexContainer(p, d, K[B], h, q) : (p.wType == "HBox" || p.orientation == "horizontal") ? this.renderHBox(p, d, K[B], h, q) : this.renderVBox(p, d, K[B], h, q);
      if (K[B].template || h.rowtemplate) {
        d.tabpaneID = w
      }
      d.topLevelBox = false;
      delete d.container;
      delete h.widgetsData;
      if (!m && G) {
        if (F) {
          l += "<div index=" + q + " kwidgettype='KTouchsegment' style='display:none;float: left;width:100%'>"
        } else {
          l += "<li kwidgettype='Segment' index=" + q + " class='" + e + "'" + (h.hasSections ? " secindex='" + v + "," + q + "'" : "");
          if (B < K.length - 1) {
            if (h.hasSections && q != h.data[v][1 + IndexJL].length - 1) {
              l += z
            } else {
              if (!h.hasSections) {
                l += z
              }
            }
          }
          l += ">"
        }
      }
      l += G;
      if (!m && G) {
        l += F ? "</div>" : "</li>"
      }
      if (K.length - IndexJL == B && h.hasSections) {
        l += "</ul>"
      }
      q++;
      h.counter++
    }
    $KU.updateGestureTempList(h, K);
    return l
  },
  generatePageFooter: function(d, g) {
    var k = "";
    var a = "";
    var l = d.paginationconfig;
    var b = (l && l.hdistance) || 0;
    if (g.length > IndexJL) {
      var j = !b || (b == 0);
      var e = j ? "align='center'" : "style='text-align: left;'";
      k += "<div class='krow kwt100' " + e + "><div class='kcell'>";
      d.pageondotimage = d.pageondotimage || "whitedot.gif";
      d.pageoffdotimage = d.pageoffdotimage || "blackdot.gif";
      for (var f = IndexJL; f < g.length; f++) {
        var c = g[f].accessibilityConfig && g[f].accessibilityConfig.a11yHidden;
        var h = c ? " aria-hidden='true'" : " ";
        a = (typeof d.focusedindex != "number" && f == IndexJL) ? d.pageondotimage : (d.focusedindex == f) ? d.pageondotimage : d.pageoffdotimage;
        k += "<span  " + h + " onclick='$KW.touch.navigationDotsHandler(this)' index='" + f + "'><img style='padding-left:4px' src='" + $KU.getImageURL(a) + "' /></span>"
      }
      k += "</div></div>"
    }
    return k
  },
  setData: function(a, b) {
    if ($KU.isArray(b)) {
      if (b.length > IndexJL) {
        a.hasSections = $KU.isArray(b[IndexJL]);
        this.modifyContent(a, b, "setdata")
      } else {
        this.removeAll(a)
      }
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addAll: function(a, b) {
    if ($KU.isArray(b)) {
      if (!$KU.isArray(a.data)) {
        a.data = (IndexJL) ? [null] : []
      }
      if (typeof a.hasSections !== "boolean") {
        a.hasSections = $KU.isArray(b[IndexJL])
      }
      this.modifyContent(a, b, "addall")
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  removeAll: function(a) {
    this.modifyContent(a, IndexJL ? [null] : [], "removeall")
  },
  removeAt: function(b, c, a) {
    if (!isNaN(c) || (a && !isNaN(a))) {
      if ($KU.isArray(b.data) && b.data.length > IndexJL) {
        this.modifyContent(b, [], "removeat", c, a)
      }
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  setDataAt: function(b, c, d, a) {
    if (c instanceof Object && (!isNaN(d) || (a && !isNaN(a)))) {
      if ($KU.isArray(b.data) && b.data.length > IndexJL) {
        this.modifyContent(b, c, "setdataat", d, a)
      }
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addAt: function(b, c, d, a) {
    if (b.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW && $KU.isArray(c)) {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
    if (c instanceof Object && (!isNaN(d) || (a && !isNaN(a)))) {
      if (!$KU.isArray(b.data)) {
        b.data = (IndexJL) ? [null] : []
      }
      if (typeof b.hasSections !== "boolean") {
        b.hasSections = $KU.isArray(c)
      }
      this.modifyContent(b, c, "addat", d, a)
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addDataAt: function(b, c, d, a) {
    if (b.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW && $KU.isArray(c)) {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
    if (c instanceof Object && (!isNaN(d) || (a && !isNaN(a)))) {
      if (!$KU.isArray(b.data)) {
        b.data = (IndexJL) ? [null] : []
      }
      if (typeof b.hasSections !== "boolean") {
        b.hasSections = $KU.isArray(c)
      }
      this.modifyContent(b, c, "adddataat", d, a)
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  setDataWithSections: function(a, b) {
    if ($KU.isArray(b) && $KU.isArray(b[IndexJL])) {
      this.setData(a, b)
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addSectionAt: function(b, c, a) {
    if (typeof b.hasSections !== "boolean" && $KU.isArray(c[IndexJL])) {
      b.hasSections = true
    }
    if (b.hasSections === false || b.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      throw new KonyError(103, "Error", "Invalid operation.")
    } else {
      if (!$KU.isArray(c[IndexJL])) {
        throw new KonyError(102, "Error", "Invalid input.")
      }
    }
    if (b.hasSections === true) {
      if (!$KU.isArray(b.data)) {
        b.data = (IndexJL) ? [null] : []
      }
      this.modifyContent(b, c, "addsectionat", IndexJL, a)
    }
  },
  setSectionAt: function(b, c, a) {
    if (b.hasSections) {
      if ($KU.isArray(c) && !isNaN(a)) {
        if ($KU.isArray(b.data)) {
          this.modifyContent(b, c, "setsectionat", IndexJL, a)
        }
      } else {
        throw new KonyError(102, "Error", "Invalid input.")
      }
    } else {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
  },
  removeSectionAt: function(b, a) {
    if (b.hasSections) {
      if (!isNaN(a)) {
        if ($KU.isArray(b.data)) {
          this.modifyContent(b, null, "removesectionat", IndexJL, a)
        }
      } else {
        throw new KonyError(102, "Error", "Invalid input.")
      }
    } else {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
  },
  modifyContent: function(c, t, q, h, n) {
    var p = [IndexJL, IndexJL],
      l = false;
    if (q == "addat" || q == "adddataat" || q == "addsectionat") {
      l = true
    } else {
      if (q == "setdata" || q == "removeall") {
        l = p
      } else {
        if (q == "addall") {
          l = (!c.hasSections) ? [IndexJL, c.data.length] : [c.data.length, IndexJL]
        }
      }
    }
    p = this.calculateSectionRowIndex(c, h, n, l);
    if (!c || p === false) {
      return
    }
    n = p[0], h = p[1];
    c.canUpdateUI = false;
    $KW.Utils.updateContent(c, "data", t, q, h, n);
    this.adjustAlreadySelectedProperties(c, q, n, h);
    c.canUpdateUI = true;
    var e = $KU.getNodeByModel(c);
    if (c.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW && c.data && c.data.length > IndexJL && q == "setdata") {
      c.focusedindex = IndexJL;
      c.selectedindex = (IndexJL) ? [null, IndexJL, IndexJL] : [IndexJL, IndexJL];
      c.focuseditem = c.data[c.focusedindex];
      c.selecteditems = c.data[c.selectedindex[1 + IndexJL]];
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItems = c.selecteditems;
        c.selectedIndex = c.selectedindex
      }
    }
    if (!e) {
      return
    }
    c.context = c.context ? c.context : {};
    c.context.tabpaneID = e.getAttribute("ktabpaneid") || "";
    $KU.toggleVisibilty(e, c.data, c);
    if (c.hasSections === false && !e.firstChild) {
      e.innerHTML = "<ul style='list-style:none'></ul>"
    }
    if (c.hasSections === false || c.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      e = e.childNodes[0]
    }
    var b = null,
      s = null,
      j = null,
      k = null;
    var d = 0;
    if (c.hasSections) {
      s = e.childNodes;
      j = s[n - IndexJL];
      k = j ? j.childNodes : null
    }
    switch (q) {
      case "setdata":
        if (c.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW || c.hasSections) {
          e.innerHTML = this.generateRows(c, c.context, c.data, false, h, n)
        } else {
          e.parentNode.innerHTML = "<ul style='list-style:none'>" + this.generateRows(c, c.context, c.data, false, h, n) + "</ul>"
        }
        break;
      case "removeall":
        e.innerHTML = "";
        break;
      case "setsectionat":
        j.outerHTML = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), false, h, n);
        break;
      case "removesectionat":
        e.removeChild(j);
        break;
      case "addsectionat":
        var f = document.createElement("div");
        f.innerHTML = this.generateRows(c, c.context, t, false, h, n);
        d = f.children.length;
        while (f.children.length > 0) {
          e.insertBefore(f.childNodes[0], j)
        }
        break;
      case "addall":
        var f = document.createElement("div");
        if (!c.hasSections) {
          f.innerHTML = this.generateRows(c, c.context, t, false, h, n);
          while (f.children.length > 0) {
            e.appendChild(f.childNodes[0])
          }
        } else {
          for (var r = IndexJL; r < t.length; r++) {
            f.innerHTML = this.generateRows(c, c.context, (IndexJL) ? [null, t[r]] : [t[r]], false, h, n);
            while (f.children.length > 0) {
              e.appendChild(f.childNodes[0])
            }
          }
        }
        break;
      case "setdataat":
        if (!c.hasSections) {
          var b = e.childNodes[h - IndexJL];
          b.innerHTML = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), true, h, n)
        } else {
          b = k[h - IndexJL + 1];
          b.innerHTML = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), true, h, n)
        }
        $KU.addAriatoElement(b.firstChild, t.accessibilityConfig, c);
        break;
      case "removeat":
        if (!c.hasSections) {
          e.removeChild(e.childNodes[h - IndexJL])
        } else {
          j.removeChild(k[h - IndexJL + 1])
        }
        break;
      case "addat":
      case "adddataat":
        var u, a = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), false, h, n),
          m = document.createElement("div");
        if (a) {
          m.innerHTML = a;
          if (!c.hasSections) {
            if (e.style.display === "none") {
              e.style.display = ""
            }
            if (e.parentNode.style.display === "none") {
              e.parentNode.style.display = ""
            }
            u = e.childNodes[h - IndexJL] || null;
            e.insertBefore(m.childNodes[0], u)
          } else {
            if (j) {
              if (j.style.display === "none") {
                j.style.display = ""
              }
              if (j.parentNode.style.display === "none") {
                j.parentNode.style.display = ""
              }
              j.insertBefore(m.childNodes[0], k[h - IndexJL + 1])
            }
          }
        }
        break
    }
    if (q == "addat" || q == "adddataat" || q == "removeat" || q == "addall" || q == "addsectionat") {
      if (!c.hasSections) {
        $KU.adjustNodeIndex(e, h, "index");
        this.applyRowSkin(c, e)
      } else {
        this.adjustSectionIndex(e);
        this.applySectionRowSkin(c, e)
      }
    }
    if (c.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      c.isvisible && (c.data.length > IndexJL) && $KW.touch.computeWidths(e.parentNode, c);
      if (c.needpageindicator) {
        var o = $KU.getElementById(c.pf + "_" + c.id + "_footer");
        o.innerHTML = this.generatePageFooter(c, c.data);
        $KU.toggleVisibilty(o, c.data, c, false)
      }
    }
    c.context.tabpaneID = "";
    if ($KW.Line && c.data && c.data.length > IndexJL) {
      $KW.Line.initializeView(c.pf + "_" + c.id)
    }
    var t = c.data;
    if (c.hasSections) {
      for (var r = IndexJL; r < t.length; r++) {
        var g = t[r];
        $KU.updateGestureTempList(c, g[1 + IndexJL])
      }
    } else {
      $KU.updateGestureTempList(c, t)
    }
    if ($KG.gestureTemplates) {
      for (var r = IndexJL; r < $KG.gestureTemplates.length; r++) {
        window[$KG.gestureTemplates[r]] && $KW.Utils.initializeGestures(window[$KG.gestureTemplates[r]])
      }
    }
    c.isvisible && this.adjustFlexContainers(c, q, n, h, d)
  },
  adjustFlexContainers: function(e, b, m, h, p) {
    $KU.needOptimization = false;
    var o = $KU.getNodeByModel(e);
    var g = "FlexContainer";
    switch (b) {
      case "setdata":
        this.adjustFlexContainersInSegment(e, o);
        break;
      case "setdataat":
      case "addat":
      case "adddataat":
        var k = o.childNodes[m];
        var r = k.childNodes[e.hasSections ? h + 1 : h];
        var a = r.querySelector("div[kwidgettype='" + g + "']");
        if (a) {
          var f = $KU.getModelByNode(a);
          $KW.FlexContainer.forceLayout(f, a.parentNode)
        }
        break;
      case "addall":
        var k = o.childNodes[m];
        var q = k.childNodes;
        if (e.hasSections) {
          h = h + 1
        }
        for (var d = h; d < q.length; d++) {
          var r = q[d];
          var a = r.querySelector("div[kwidgettype='" + g + "']");
          if (a) {
            var f = $KU.getModelByNode(a);
            $KW.FlexContainer.forceLayout(f, a.parentNode)
          }
        }
        break;
      case "addsectionat":
      case "setsectionat":
        var n = o.childNodes;
        var l = m;
        if (b == "setsectionat") {
          p = 1
        }
        var c = e.data;
        for (var d = 0; d < p; d++) {
          var k = n[l];
          var a = k.querySelector('[secIndex="' + d + ',-1"] div[kwidgettype="FlexContainer"]');
          if (a) {
            var f = $KU.getModelByNode(a);
            $KW.FlexContainer.forceLayout(f, a.parentNode)
          }
          this.adjustFlexContainersInRows(e, k, c[l][1], l);
          l++
        }
        break
    }
    $KU.needOptimization = true;
    if ($KU.isFlexWidget(e) && !e.needScroller && e.autogrowMode == kony.flex.AUTOGROW_HEIGHT && e.viewtype == constants.SEGUI_VIEW_TYPE_TABLEVIEW) {
      var j = e.parent;
      j.layoutConfig.children = true
    }
  },
  adjustFlexContainersInSegment: function(e, g) {
    var d = e.data;
    if (d && d.length > 0) {
      if (e.hasSections) {
        var c = d.length;
        for (var b = 0; b < c; b++) {
          var f = g.querySelector('[secIndex="' + b + ',-1"] div[kwidgettype="FlexContainer"]');
          if (f) {
            var a = $KU.getModelByNode(f);
            $KW.FlexContainer.forceLayout(a, f.parentNode)
          }
          this.adjustFlexContainersInRows(e, g, d[b][1], b)
        }
      } else {
        this.adjustFlexContainersInRows(e, g, d)
      }
    }
  },
  adjustFlexContainersInRows: function(b, j, k, h, a) {
    if (k && k.length > 0) {
      var f = k.length;
      for (var e = 0; e < f; e++) {
        var c = (typeof h != "undefined") ? '[secIndex="' + h + "," + e + '"]' : '[index="' + e + '"]';
        var d = j.querySelector(c + ' div[kwidgettype="FlexContainer"]');
        if (d) {
          var g = $KU.getModelByNode(d);
          d = d.parentNode;
          if (a) {
            this.setFlexRowTemplateHeight(g, d)
          } else {
            $KW.FlexContainer.forceLayout(g, d)
          }
        }
      }
    }
  },
  getAutoGrowSegmentHeight: function(d, c) {
    var a = 0;
    var g = d.data;
    if (g && g.length > 0) {
      if (d.hasSections) {
        var f = g.length;
        for (var e = 0; e < f; e++) {
          var h = c.querySelector('[secIndex="' + e + ',-1"] div[kwidgettype="FlexContainer"]');
          if (h) {
            var b = $KU.getModelByNode(h);
            h = h.parentNode;
            this.setFlexRowTemplateHeight(b, h)
          }
          this.adjustFlexContainersInRows(d, c, g[e][1], e, true)
        }
      } else {
        this.adjustFlexContainersInRows(d, c, g, undefined, true)
      }
      return c.offsetHeight
    }
  },
  setFlexRowTemplateHeight: function(b, c) {
    var a = c.childNodes[0].getAttribute("kcontainerID");
    a && $KW.Utils.updateContainerDataInDOM(c, a);
    $KW.Utils.setFlexContainerStyle(b, c)
  },
  adjustSectionIndex: function(e) {
    var g = e.childNodes;
    var d, b;
    for (var c = 0; c < g.length; c++) {
      var f = g[c].childNodes;
      for (var a = 1; a < f.length; a++) {
        d = (c + IndexJL) + "," + (a + IndexJL - 1);
        b = (a + IndexJL - 1);
        f[a].setAttribute("index", b);
        f[a].setAttribute("secindex", d)
      }
      if (f[0]) {
        f[0].setAttribute("index", (c + IndexJL) + ",-1");
        f[0].setAttribute("secindex", (c + IndexJL) + ",-1")
      }
    }
  },
  applySectionRowSkin: function(f, p) {
    var s = p.childNodes;
    var l = f.alternaterowskin || f.askin || "";
    var q = f.rowskin || f.skin || "";
    var d, t = "";
    for (var h = 0; h < s.length; h++) {
      var u = s[h].childNodes;
      for (var e = 1; e < u.length; e++) {
        d = f.data[h + IndexJL][e];
        if (d) {
          d.metainfo = d.metaInfo || d.metainfo
        }
        t = (d && d.metainfo && d.metainfo.skin) || ((e % 2 == 0 && l) ? l : q);
        u[e].className = t;
        if (f.separatorthickness && f.separatorcolor) {
          if (!f.separatorrequired) {
            u[e].style.borderBottom = "none";
            continue
          }
          var a = parseInt(f.separatorcolor.substring(0, 2), 16),
            k = parseInt(f.separatorcolor.substring(2, 4), 16),
            n = parseInt(f.separatorcolor.substring(4, 6), 16);
          var c = 1 - (parseInt(f.separatorcolor.substring(6, 8), 16) / 100);
          var m = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + a + ", " + k + "," + n + ")" : "rgba(" + a + ", " + k + "," + n + "," + c + ")";
          u[e].style.borderBottom = f.separatorthickness + "px solid " + m
        }
      }
    }
  },
  invertMapAndData: function(h, f) {
    var a = h.widgetdatamap;
    if (a) {
      a = $KU.isArray(a) ? a[IndexJL] : a;
      var s = $KU.getkeys(a);
      var t = {};
      var m = IndexJL ? [null] : [];
      for (var g = 0; g < s.length; g++) {
        t[a[s[g]]] = s[g]
      }
      var c = $KU.getkeys(t);
      if (f[IndexJL] instanceof Array) {
        var l = IndexJL;
        var n;
        for (var g = IndexJL; g < f.length; g++) {
          var b = f[g][1 + IndexJL];
          m[l] = {};
          n = f[g][IndexJL];
          if (n && typeof n == "string" && n.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
            m[l]["sectionLabel"] = $KU.getI18NValue(n)
          } else {
            if (n instanceof Object) {
              m[l]["sectionLabel"] = {};
              for (var r in n) {
                if (t[r]) {
                  var q = n[r];
                  if (q && typeof q == "string" && q.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
                    m[l]["sectionLabel"][t[r]] = $KU.getI18NValue(q)
                  } else {
                    m[l]["sectionLabel"][t[r]] = q
                  }
                }
              }
              n.template && (m[l]["sectionLabel"]["template"] = n.template);
              n.accessibilityConfig && (m[l]["sectionLabel"]["accessibilityConfig"] = n.accessibilityConfig)
            } else {
              m[l]["sectionLabel"] = n
            }
          }
          for (var e = IndexJL; e < b.length; e++, l++) {
            m[l] = m[l] || {};
            for (var d = 0; d < c.length; d++) {
              var o = b[e][c[d]];
              if (o && typeof o == "string" && o.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
                m[l][t[c[d]]] = $KU.getI18NValue(o)
              } else {
                m[l][t[c[d]]] = o
              }
            }
            var p = b[e]["metainfo"] || b[e]["metaInfo"];
            p && (m[l]["metainfo"] = p);
            b[e]["template"] && (m[l]["template"] = b[e]["template"]);
            b[e]["accessibilityConfig"] && (m[l]["accessibilityConfig"] = b[e]["accessibilityConfig"])
          }
          if (b.length == IndexJL) {
            l++
          }
        }
      } else {
        for (var g = IndexJL; g < f.length; g++) {
          m[g] = {};
          for (var e = 0; e < c.length; e++) {
            var o = f[g][c[e]];
            if (o && typeof o == "string" && o.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
              m[g][t[c[e]]] = $KU.getI18NValue(o)
            } else {
              m[g][t[c[e]]] = o
            }
          }
          var p = f[g]["metainfo"] || f[g]["metaInfo"];
          if (p) {
            m[g]["metainfo"] = $KU.cloneObj(p);
            for (var e = 0; e < c.length; e++) {
              if (m[g]["metainfo"][c[e]]) {
                m[g]["metainfo"][t[c[e]]] = p[c[e]];
                if (t[c[e]] != c[e]) {
                  delete m[g]["metainfo"][c[e]]
                }
              }
            }
          }
          if (f[g]["template"]) {
            m[g]["template"] = f[g]["template"]
          }
          if (f[g]["accessibilityConfig"]) {
            m[g]["accessibilityConfig"] = f[g]["accessibilityConfig"]
          }
        }
      }
      return m
    } else {
      return f
    }
  },
  renderFlexContainer: function(o, c, g, f, p) {
    var q = "";
    var h = "";
    var d;
    var m = 0;
    var b = "";
    var r = g[o.id];
    $KW.Utils.updateChildModel(o, r);
    if (!o.isvisible) {
      return ""
    }
    var k = $KW.skins.getWidgetSkinList(o, c);
    var n = " position:relative;" + (o.clipbounds == true ? "overflow:hidden;" : "") + (o.zindex ? "z-index:" + o.zindex : "");
    q += "<div id='flexcontainer_wrapper' class='" + k + "' style='" + $KW.skins.getMarginSkin(o, c) + "'>";
    q += "<div class = 'kwt100'" + $KW.Utils.getBaseHtml(o, c) + " style='" + n + "'>";
    var a = o.widgets();
    d = a.length;
    for (var j = 0; j < d; j++) {
      var e = a[j];
      var r = g[e.id];
      $KW.Utils.updateChildModel(e, r);
      if (!e.isvisible) {
        continue
      }
      this.applyWidgetFocusSkin(r, e, f);
      var l = "kcell " + $KW.skins.getWidgetAlignmentSkin(e) + (e.wType == "TPW" ? "  konycustomcss " : "");
      var b = $KW.Utils.getFlexLayoutStyle(e);
      q += "<div class = '" + l + "' style='" + b + ";overflow:hidden'>";
      if (e.wType == "FlexContainer" || e.wType == "HBox" || e.wType == "VBox") {
        c.topLevelBox = true;
        if (e.wType == "FlexContainer") {
          h = this.renderFlexContainer(e, c, g, f)
        } else {
          if (e.wType == "HBox") {
            h = this.renderHBox(e, c, g, f)
          } else {
            h = this.renderVBox(e, c, g, f)
          }
        }
        if (h) {
          q += h
        } else {
          m++
        }
      } else {
        if (r || e.wType == "Line") {
          q += $KW[e.wType].render(e, c)
        } else {
          m++
        }
      }
      q += "</div>"
    }
    if (d == m) {
      return ""
    }
    q += "</div></div>";
    return q
  },
  renderHBox: function(m, b, l, h, n) {
    var q = b.topLevelBox;
    var w = $KW.skins.getWidgetAlignmentSkin(m);
    var g = "";
    var r = "";
    var d;
    var j = 0;
    var v = "";
    var p = "";
    var a = l[m.id];
    $KW.Utils.updateChildModel(m, a);
    if (!m.isvisible) {
      return ""
    }
    if (kony.appinit.isIE7) {
      if (q) {
        var e = "kwt100 kbasemargin"
      } else {
        var t = m.skin || "";
        g += "<tr class = 'kwt100' ><td class = 'kwt100 " + t + "'>";
        e = $KW.skins.getWidgetSkinList(m, b);
        e = e.replace(t, "");
        e += " " + $KW.skins.getWidgetAlignmentSkin(m);
        v = $KW.skins.getBaseStyle(m, b)
      }
      if (m.percent === false) {
        b.layoutDir = (m.wdir == "1" ? "left" : ((m.wdir == "3") ? "right" : ""))
      }
      g += "<div class = '" + e + "'" + $KW.Utils.getBaseHtml(m, b) + "style='" + v + "'>";
      g += "<table class = 'kwt100' " + (m.fixedLayout == "true" ? " style='table-layout:fixed;'" : "") + "><tr class = '" + w + " kwt100' >" + (m.percent === false ? "<td class='kwt100'>" : "")
    } else {
      if (q) {
        var e = $KW.skins.getWidgetSkinList(m, b);
        if (h.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          p = $KW.skins.getPaddingSkin(h)
        }
        e += " " + $KW.skins.getWidgetAlignmentSkin(m);
        v = $KW.skins.getMarginSkin(m, b) + ((p == "") ? $KW.skins.getPaddingSkin(m) : p)
      } else {
        g += "<div class = 'krow kwt100' ><div class = 'kcell kwt100'>";
        e = $KW.skins.getWidgetSkinList(m, b);
        e += " " + $KW.skins.getWidgetAlignmentSkin(m);
        v = $KW.skins.getMarginSkin(m, b) + $KW.skins.getPaddingSkin(m)
      }
      g += "<div class = 'ktable " + e + "'" + $KW.Utils.getBaseHtml(m, b) + "style='" + v + "'><div class = 'krow " + w + " kwt100' >"
    }
    if (m.children) {
      d = m.children.length;
      var f = 0;
      var c = m.children.length;
      if (kony.appinit.isIE7 && m.percent == false && b.layoutDir && b.layoutDir == "right") {
        f = m.children.length - 1;
        c = 0
      }
      for (var u = f;
           (f == 0 ? (u < c) : (u >= c));
           (f == 0 ? u++ : u--)) {
        var s = m[m.children[u]];
        b.vLine = (s.wType == "Line") ? true : false;
        var x = s.id;
        b.ispercent = m.percent;
        if ((s.wType == "HBox" || s.wType == "VBox") && s.isvisible) {
          b.topLevelBox = false;
          if (s.wType == "HBox") {
            r = this.renderHBox(s, b, l, h)
          } else {
            r = this.renderVBox(s, b, l, h)
          }
          if (r) {
            g += r
          } else {
            j++
          }
        } else {
          var a = l[x];
          this.applyWidgetFocusSkin(a, s, h);
          $KW.Utils.updateChildModel(s, a);
          if (!s.isvisible) {
            continue
          }
          b.ispercent = m.percent;
          var k = $KW.skins.getWidgetAlignmentSkin(s);
          var o;
          if (s.containerweight) {
            o = "kwt" + s.containerweight
          } else {
            o = "auto"
          }
          if (s.wType == "Line") {
            o = "auto"
          }
          var e = k + " " + o;
          if ((m.wType == "Segment") || (!(m.wType == "Segment") && m.percent == true)) {
            g += kony.appinit.isIE7 ? "<td class = '" + e + "'>" : "<div class = 'kcell " + e + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(s) + "'>"
          }
          if (a || s.wType == "Line" || s.wType == "FlexContainer") {
            g += (s.wType == "FlexContainer") ? this.renderFlexContainer(s, b, l, h) : $KW[s.wType].render(s, b)
          } else {
            j++
          }
          if ((m.wType == "Segment") || (!(m.wType == "Segment") && m.percent == true)) {
            g += kony.appinit.isIE7 ? "</td>" : "</div>"
          }
        }
      }
    }
    if ($KG.appbehaviors.adherePercentageStrictly == true && m.percent === true) {
      m.dummyNodeWidth = $KW.HBox.getExtraNodeWidth(m);
      g += "<div class = 'kcell kwt" + m.dummyNodeWidth + "'  ></div>"
    }
    if (d == j) {
      return ""
    }
    if (kony.appinit.isIE7) {
      g += (m.percent == false ? "</td>" : "") + "</tr></table></div>";
      if (!q) {
        g += "</td></tr>"
      }
      b.layoutDir = ""
    } else {
      g += "</div></div>";
      if (!q) {
        g += "</div></div>"
      }
    }
    return g
  },
  renderVBox: function(j, b, h, f, k) {
    var m = b.topLevelBox;
    var s = $KW.skins.getWidgetAlignmentSkin(j);
    var e = "";
    var r = "";
    var n = "";
    var c;
    var g = 0;
    var l = "";
    var a = h[j.id];
    $KW.Utils.updateChildModel(j, a);
    if (!j.isvisible) {
      return ""
    }
    if (kony.appinit.isIE7) {
      if (m) {
        e += "<div class = 'kwt100'" + $KW.Utils.getBaseHtml(j, b) + "><table class = 'kwt100'>"
      } else {
        var p = j.skin || "";
        var d = "kwt" + j.containerweight + " " + s + " " + p;
        if (b.ispercent === true) {
          e += "<td class = '" + d + "'>"
        }
        d = $KW.skins.getWidgetSkinList(j, b);
        d = d.replace(p, "");
        r = $KW.skins.getMarginSkin(j, b) + $KW.skins.getPaddingSkin(j);
        e += "<div class = '" + d + "'" + $KW.Utils.getBaseHtml(j, b) + "style='" + r + "'>";
        e += "<table class = 'kwt100'>"
      }
    } else {
      if (m) {
        if (f.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          l = $KW.skins.getPaddingSkin(f)
        }
        e += "<div  class = 'kwt100 kbasemargin ktable'" + $KW.Utils.getBaseHtml(j, b) + " style='" + l + "'>"
      } else {
        var d = "kwt" + j.containerweight + " " + s;
        e += "<div class = ' kcell " + d + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(j) + "' >";
        d = $KW.skins.getWidgetSkinList(j, b);
        r = $KW.skins.getMarginSkin(j, b) + $KW.skins.getPaddingSkin(j, b);
        e += "<div class = ' ktable " + d + "'" + $KW.Utils.getBaseHtml(j, b) + "style='" + r + "'>"
      }
    }
    if (j.children) {
      c = j.children.length;
      for (var q = 0; q < j.children.length; q++) {
        var o = j[j.children[q]];
        var t = o.id;
        if ((o.wType == "VBox" || o.wType == "HBox") && o.isvisible) {
          b.topLevelBox = false;
          if (o.wType == "HBox") {
            n = this.renderHBox(o, b, h, f)
          } else {
            n = this.renderVBox(o, b, h, f)
          }
          if (n) {
            e += n
          } else {
            g++
          }
        } else {
          var a = h[t];
          this.applyWidgetFocusSkin(a, o, f);
          $KW.Utils.updateChildModel(o, a);
          if (!o.isvisible) {
            continue
          }
          e += kony.appinit.isIE7 ? "<tr class = 'kwt100' >" : "<div class = 'krow kwt100' >";
          s = $KW.skins.getWidgetAlignmentSkin(o);
          d = "kwt100";
          d += " " + s;
          e += kony.appinit.isIE7 ? "<td class = '" + d + "'>" : "<div class = 'kcell " + d + "'>";
          if (a || o.wType == "Line" || o.wType == "FlexContainer") {
            e += (o.wType == "FlexContainer") ? this.renderFlexContainer(o, b, h, f) : $KW[o.wType].render(o, b)
          } else {
            g++
          }
          e += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
        }
      }
    }
    if (c == g) {
      return ""
    }
    if (kony.appinit.isIE7) {
      e += "</table></div>";
      if (!m && b.ispercent === true) {
        e += "</td>"
      }
    } else {
      e += "</div>";
      if (!m) {
        e += "</div>"
      }
    }
    return e
  },
  applyWidgetFocusSkin: function(d, c, a) {
    if (d && d.focusSkin) {
      var b = "";
      if (a.hasSections) {
        b = "#" + a.pf + "_" + a.id + " li[secindex='" + a.seccounter + "," + a.rowcounter + "'] #" + c.pf + "_" + c.id + ":active"
      } else {
        b = "#" + a.pf + "_" + a.id + " li[index='" + a.rowcounter + "'] #" + c.pf + "_" + c.id + ":active"
      }
      $KW.Utils.applyStyle(d.focusSkin, b, a.wType)
    }
  },
  applyRowSkin: function(d, m) {
    var q = m.childNodes;
    var j = d.alternaterowskin || d.askin || "";
    var n = d.rowskin || d.skin || "";
    var e, p = "";
    for (var f = 0; f < q.length; f++) {
      e = d.data[f + IndexJL];
      if (e) {
        e.metainfo = e.metaInfo || e.metainfo
      }
      p = (e && e.metainfo && e.metainfo.skin) || ((f % 2 != 0 && j) ? j : n);
      q[f].className = p;
      if (f < q.length - 1 && d.separatorthickness && d.separatorcolor) {
        if (!d.separatorrequired) {
          q[f].style.borderBottom = "none";
          continue
        }
        var a = parseInt(d.separatorcolor.substring(0, 2), 16),
          h = parseInt(d.separatorcolor.substring(2, 4), 16),
          l = parseInt(d.separatorcolor.substring(4, 6), 16);
        var c = 1 - (parseInt(d.separatorcolor.substring(6, 8), 16) / 100);
        var k = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + a + ", " + h + "," + l + ")" : "rgba(" + a + ", " + h + "," + l + "," + c + ")";
        q[f].style.borderBottom = d.separatorthickness + "px solid " + k
      }
    }
  },
  applySectionHeaderSkin: function(e, c) {
    var b = $KU.getNodeByModel(e);
    if (b) {
      var g = b.id;
      var d = document.querySelectorAll("#" + g + ">ul>li:first-child");
      for (var a = 0; a < d.length; a++) {
        var f = d[a];
        f.style.border = "none";
        f.className = c + " middleleftalign"
      }
    }
  },
  updateData: function(o, c, d, g, k) {
    if (d && g) {
      var h = parseInt(g.getAttribute("index"));
      var l = 0 + IndexJL;
      var r = d.data;
      var q = null;
      var j;
      if (d.hasSections) {
        j = g.getAttribute("secindex").split(",");
        l = parseInt(j[0])
      }
      if (d.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR && (d.hasSections ? (d.selectedsectionindex == l) && (d.focusedindex == h) : (d.focusedindex == h))) {
        return
      }
      if (d.hasSections) {
        d.selectedsectionindex = l;
        h = parseInt(j[1]);
        if (h != -1) {
          var f = r[l][1 + IndexJL];
          q = f[h]
        } else {
          q = r[l][0 + IndexJL]
        }
      } else {
        d.selectedsectionindex = l;
        q = d.data[h]
      }
      if (h != -1) {
        d.focusedindex = h;
        d.selectedindex = (IndexJL) ? [null, l, h] : [l, h];
        d.focuseditem = q;
        if (!d.selectionindicator || d.selectionindicator != o.id || d.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
          d.selecteditems = (IndexJL) ? [null, q] : [q]
        }
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          d.selectedItems = d.selecteditems;
          d.selectedIndex = d.selectedindex
        }
      }
      $KW.Utils.updateContainerMasterData(d, q, o, c);
      if (q) {
        q.metainfo = q.metaInfo || q.metainfo
      }
      var n = (q && q.metainfo) ? q.metainfo.clickable : true;
      if (d.selectionindicator && d.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR && h != -1) {
        this.toggleRowSelection(d, g.parentNode)
      }
      if (d.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
        var m = IndexJL ? [null] : [];
        var b = IndexJL ? [null, d.selectedsectionindex, h] : [d.selectedsectionindex, h];
        m.push(b);
        d.selectedRows = (m && m.length > IndexJL) ? m : null;
        this.setSelectedItemsAndIndices(d)
      }
      if (!$KU.inArray(["HBox", "VBox", "Button", "Link", "RichText"], o.wType, true)) {
        d.selectedrowindex = (IndexJL) ? [null, l, h] : [l, h];
        d.selectedrowindices = d.selectedindices
      }
      d.currentIndex = [l, h];
      if (n && k) {
        this.setProgressIndicator(g, d);
        if ((d.onclick || d.onrowclick) && !c.getAttribute("kcontainerID")) {
          d.blockeduiskin && $KW.Utils.applyBlockUISkin(d);
          var p = $KW.Segment.getRowDataByIndex(d, (IndexJL) ? [null, l, h] : [l, h]);
          var e = $KU.returnEventReference(p.onclick || p.onrowclick || d.onclick || d.onrowclick);
          e && e.call(d, d, l, h, d.selectedState)
        } else {
          var a = (IndexJL) ? [null, l, h] : [l, h];
          if (h == -1) {
            var i = kony.events.executeBoxEvent(o, $KW.Segment.getRowDataByIndex(d, a), d, true)
          } else {
            var i = kony.events.executeBoxEvent(o, $KW.Segment.getRowDataByIndex(d, a), d)
          }
          if (h != -1) {
            var p = $KW.Segment.getRowDataByIndex(d, (IndexJL) ? [null, l, h] : [l, h]);
            var e = $KU.returnEventReference(p.onClick || p.onclick || p.onRowClick || p.onrowclick || d.onclick || d.onrowclick);
            if (!i && e) {
              d.blockeduiskin && $KW.Utils.applyBlockUISkin(d);
              if (d.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
                e && e.call(d, d, l, h)
              } else {
                e && e.call(d, d, l, h, d.selectedState)
              }
              $KU.onEventHandler(d)
            }
          }
        }
        if (!kony.system.activity.hasActivity()) {
          $KW.unLoadWidget()
        }
      }
      var s = q[o.id];
      if (s && typeof s == "object") {
        if (s.enable === false) {
          return false
        }
      }
    }
    return true
  },
  toggleRowSelection: function(d, l) {
    if (typeof d.selectedindex == "undefined") {
      var o = 0 + IndexJL;
      var k = d.focusedindex
    } else {
      if (d.selectedindex) {
        var o = d.selectedindex[0 + IndexJL];
        var k = d.selectedindex[1 + IndexJL]
      } else {
        var o = d.selectedindices[0 + IndexJL][0 + IndexJL];
        var k = d.selectedindices[0 + IndexJL][1 + IndexJL][0 + IndexJL]
      }
    }
    if (d.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
      d.selectedRows = (d.selectedRows) ? d.selectedRows : (IndexJL) ? [null] : []
    } else {
      if (d.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
        d.selectedRows = d.selectedRows ? d.selectedRows : (IndexJL) ? [null] : []
      }
    }
    var g = (IndexJL) ? [null, o, k] : [o, k];
    var m = $KU.arrayIndex(d.selectedRows, g);
    if (m != -1) {
      var e = false;
      d.selectedRows.splice(m, 1)
    } else {
      var e = true;
      if (d.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
        d.selectedRows.push(g)
      } else {
        d.selectedRows = (IndexJL) ? [null, g] : [g]
      }
    }
    d.selectedRows = (d.selectedRows && d.selectedRows.length > IndexJL) ? d.selectedRows : null;
    this.setSelectedItemsAndIndices(d);
    var h = $KU.getNodeByModel(d);
    var i = (d.rowtemplate ? d.rowtemplate.id : d.pf) + "_" + d.selectionindicator;
    var j = " [index='{index}'] [id='" + i + "']";
    j = d.hasSections ? (" ul:nth-child(" + (IndexJL ? o : o + 1) + ") " + j) : j;
    j = "#" + h.id + j;
    if (d.selectionindicator) {
      var b = document.querySelector(j.replace(/\{index\}/g, k));
      var a = (b && b.src) || "";
      a = a.substring(a.lastIndexOf("/") + 1, a.length);
      var f;
      var n = e ? d.selectimage : d.unselectimage;
      a && (b.src = $KU.getImageURL(n));
      var c = $KU.getParentByAttribute(b, "index");
      if (c) {
        c.firstChild.setAttribute("aria-selected", e);
        e ? c.firstChild.setAttribute("role", "option") : c.firstChild.removeAttribute("role", "option")
      }
    }
    if (d.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
      if (d.selectionindicator) {
        this.setImages(d, d.selectedRows)
      }
    }
    d.onselect && d.onselect(d, d.focusedindex, e);
    d.selectedState = e
  },
  eventHandler: function(a, d, c) {
    var b = $KU.getModelByNode(d);
    if (d.getAttribute("kwidgettype") != "Segment") {
      $KW.Utils.updateContainerData(b, d, true)
    }
  },
  setProgressIndicator: function(c, a) {
    var b = $KW.Utils.setProgressIndicator($KU.getParentByAttribute(c, kony.constants.KONY_WIDGET_TYPE), a);
    c.insertBefore(b, c.childNodes[0])
  },
  setSelectedItemsAndIndices: function(b, d) {
    if (b.selectedRows) {
      b.selecteditems = (IndexJL) ? [null] : [];
      var j = {};
      for (var e = IndexJL; e < b.selectedRows.length; e++) {
        var a = b.selectedRows[e][0 + IndexJL];
        var g = b.selectedRows[e][1 + IndexJL];
        if (!d) {
          if (!j[a]) {
            j[a] = (IndexJL) ? [null] : []
          }
          j[a].push(g)
        }
        if (b.hasSections) {
          var f = b.data[a][1 + IndexJL];
          var l = f[g]
        } else {
          var l = b.data[g]
        }
        b.selecteditems.push(l)
      }
      if (!d) {
        b.selectedindices = (IndexJL) ? [null] : [];
        for (var c in j) {
          var h = (IndexJL) ? [null] : [];
          h.push(parseInt(c, 10));
          h.push(j[c]);
          b.selectedindices.push(h)
        }
      }
      b.selectedindex = b.selectedRows[b.selectedRows.length - 1];
      b.selectedsectionindex = b.selectedindex[0 + IndexJL];
      b.focusedindex = b.selectedindex[1 + IndexJL];
      b.focuseditem = b.selecteditems[b.selecteditems.length - 1]
    } else {
      b.focusedindex = b.focuseditem = b.selectedsectionindex = b.selectedindex = b.selecteditems = null;
      if (!d) {
        b.selectedindices = null
      }
    }
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      b.selectedItems = b.selecteditems;
      b.selectedIndex = b.selectedindex;
      b.selectedIndices = b.selectedindices;
      b.selectedRowIndex = b.selectedrowindex;
      b.selectedRowIndices = b.selectedrowindices
    }
  },
  setImages: function(f, g) {
    if (f.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR) {
      var e = $KU.getNodeByModel(f);
      if (e) {
        var h = $KU.getImageURL(f.selectimage);
        var a = document.querySelectorAll("#" + e.id + ' li img[src="' + h + '"]');
        for (var d = 0; d < a.length; d++) {
          h = $KU.getImageURL(f.unselectimage);
          a[d].setAttribute("src", h);
          var b = $KU.getParentByAttribute(a[d], "index");
          if (b) {
            b.firstChild.removeAttribute("aria-selected");
            b.firstChild.removeAttribute("role", "option")
          }
        }
        if (g) {
          if (f.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
            g = (IndexJL) ? [null, g[g.length - 1]] : [g[g.length - 1]]
          }
          for (var d = IndexJL; d < g.length; d++) {
            if (f.hasSections) {
              a = document.querySelectorAll("#" + e.id + ' li[secindex="' + g[d][0 + IndexJL] + "," + g[d][1 + IndexJL] + '"] img#' + f.rowtemplate.id + "_" + f.selectionindicator)
            } else {
              a = document.querySelectorAll("#" + e.id + ' li[index="' + g[d][1 + IndexJL] + '"] img#' + f.rowtemplate.id + "_" + f.selectionindicator)
            }
            var h = $KU.getImageURL(f.selectimage);
            for (var c = 0; c < a.length; c++) {
              a[c].setAttribute("src", h);
              var b = $KU.getParentByAttribute(a[d], "index");
              if (b) {
                b.firstChild.setAttribute("aria-selected", true);
                b.firstChild.setAttribute("role", "option")
              }
            }
          }
        }
      }
      f.selectedRows = g;
      this.setSelectedItemsAndIndices(f)
    }
  },
  adjustAlreadySelectedProperties: function(b, c, a, d) {
    if (c != "addall") {
      if (c == "setdata" || c == "removeall") {
        b.selectedRows = null
      }
      if (b.selectedRows) {
        b.selectedRows = this.adjustSelectedRows(b.selectedRows, c, a, d);
        b.selectedRows && (b.selectedrowindex = b.selectedRows[b.selectedRows.length - 1])
      }
      if (b.selectedrowindices) {
        b.selectedrowindices = this.adjustSelectedRowIndices(b.selectedrowindices, c, a, d)
      }
      this.setSelectedItemsAndIndices(b)
    }
  },
  adjustSelectedRowIndices: function(b, d, k, g) {
    var c;
    switch (d) {
      case "addat":
      case "adddataat":
        for (var f = IndexJL; f < b.length; f++) {
          c = b[f][1 + IndexJL];
          if (b[f][0 + IndexJL] == k) {
            for (var e = IndexJL; e < c.length; e++) {
              if (c[e] >= g) {
                c[e] = c[e] + 1
              }
            }
            b[f][1 + IndexJL] = c
          }
        }
        break;
      case "setdataat":
      case "removeat":
        for (var f = IndexJL; f < b.length; f++) {
          c = b[f][1 + IndexJL];
          if (b[f][0 + IndexJL] == k) {
            var h = $KU.arrayIndex(c, IndexJL + g);
            if (h != -1) {
              c.splice(h, 1)
            }
            if (d === "removeat") {
              for (var e = IndexJL; e < c.length; e++) {
                if (c[e] > g) {
                  c[e] = c[e] - 1
                }
              }
            }
            b[f][1 + IndexJL] = c
          }
        }
        break;
      case "addsectionat":
        for (var f = IndexJL; f < b.length; f++) {
          if (b[f][0 + IndexJL] >= k) {
            b[f][0 + IndexJL] = b[f][0 + IndexJL] + 1
          }
        }
        break;
      case "removesectionat":
      case "setsectionat":
        var a = [];
        for (var f = IndexJL; f < b.length; f++) {
          if (b[f][0 + IndexJL] == k) {
            a.push(f)
          }
        }
        for (var f = 0; f < a.length; f++) {
          b.splice(a[f], 1)
        }
        if (d == "removesectionat") {
          for (var f = IndexJL; f < b.length; f++) {
            if (b[f][0 + IndexJL] > k) {
              b[f][0 + IndexJL] = b[f][0 + IndexJL] - 1
            }
          }
        }
        break
    }
    return (b.length > IndexJL) ? b : null
  },
  adjustSelectedRows: function(c, f, a, g) {
    switch (f) {
      case "addat":
      case "adddataat":
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] == a && c[d][1 + IndexJL] >= g) {
            c[d][1 + IndexJL] = c[d][1 + IndexJL] + 1
          }
        }
        break;
      case "setdataat":
        var e = $KU.arrayIndex(c, (IndexJL) ? [null, a, g] : [a, g]);
        if (e != -1) {
          c.splice(e, 1)
        }
        break;
      case "removeat":
        var e = $KU.arrayIndex(c, (IndexJL) ? [null, a, g] : [a, g]);
        if (e != -1) {
          c.splice(e, 1)
        }
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] == a && c[d][1 + IndexJL] > g) {
            c[d][1 + IndexJL] = c[d][1 + IndexJL] - 1
          }
        }
        break;
      case "addsectionat":
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] >= a) {
            c[d][0 + IndexJL] = c[d][0 + IndexJL] + 1
          }
        }
        break;
      case "removesectionat":
      case "setsectionat":
        var b = [];
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] == a) {
            b.push(d)
          }
        }
        for (var d = 0; d < b.length; d++) {
          c.splice(b[d], 1)
        }
        if (f == "removesectionat") {
          for (var d = IndexJL; d < c.length; d++) {
            if (c[d][0 + IndexJL] > a) {
              c[d][0 + IndexJL] = c[d][0 + IndexJL] - 1
            }
          }
        }
        break
    }
    return (c.length > IndexJL) ? c : null
  },
  calculateSectionRowIndex: function(b, e, g, d) {
    if (typeof d != "boolean") {
      return d
    }
    var j = false;
    e = (d && e < IndexJL) ? IndexJL : e;
    if (!b.hasSections) {
      if (e < IndexJL || e >= b.data.length) {
        if (d) {
          g = IndexJL;
          e = (e < IndexJL) ? IndexJL : (e >= b.data.length) ? b.data.length : e;
          j = [g, e]
        }
      } else {
        g = IndexJL;
        j = [g, e]
      }
    } else {
      if (typeof g != "number") {
        var a = null,
          f = 0,
          g = IndexJL,
          h = e;
        for (var c = IndexJL; c < b.data.length; c++) {
          a = b.data[c][1 + IndexJL];
          f += a.length - IndexJL;
          if (h >= f + IndexJL) {
            g++;
            e = h - f
          } else {
            break
          }
        }
        if (g >= b.data.length) {
          if (d) {
            g = b.data.length - 1;
            j = (b.data[g]) ? b.data[g][1 + IndexJL].length : IndexJL;
            j = [g, e]
          }
        } else {
          a = b.data[g][1 + IndexJL];
          if (e < IndexJL) {
            if (d) {
              j = [g, IndexJL]
            }
          } else {
            if (e >= a.length) {
              if (d) {
                j = [g, a.length]
              }
            } else {
              j = [g, e]
            }
          }
        }
      } else {
        if (g < IndexJL || g >= b.data.length) {
          if (d) {
            if (g < IndexJL) {
              g = IndexJL;
              if (!b.data[g]) {
                e = IndexJL
              } else {
                var a = b.data[g][1 + IndexJL];
                if (e < IndexJL || e >= a.length) {
                  if (d) {
                    e = (e < IndexJL) ? IndexJL : (e >= b.data.length) ? b.data.length : e
                  }
                }
              }
            } else {
              if (g >= b.data.length) {
                g = b.data.length - IndexJL;
                e = (b.data[g]) ? b.data[g][1 + IndexJL].length : IndexJL
              }
            }
            j = [g, e]
          }
        } else {
          var a = b.data[g][1 + IndexJL];
          if (e < IndexJL || e >= a.length) {
            if (d) {
              e = (e < IndexJL) ? IndexJL : (e >= a.length) ? a.length : e;
              j = [g, e]
            }
          } else {
            j = [g, e]
          }
        }
      }
    }
    return j
  },
  updateSectionContent: function(h, b, e, g, a) {
    switch (e) {
      case "setsectionat":
        h.splice(a, 1, b);
        return;
        break;
      case "addsectionat":
        for (var c = IndexJL; c < b.length; c++) {
          h.splice(a++, 0, b[c])
        }
        return;
        break;
      case "removesectionat":
        h.splice(a, 1);
        return;
        break
    }
    if (e == "addall") {
      if (b[IndexJL] instanceof Array) {
        $KU.addArray(h, b)
      }
    } else {
      var f = h[a];
      var d = f && f[1 + IndexJL];
      if (d) {
        switch (e) {
          case "setdataat":
            d.splice(g, 1, b);
            break;
          case "addat":
          case "adddataat":
            if ($KU.isArray(b)) {
              for (var c = IndexJL; c < b.length; c++) {
                d.splice(g++, 0, b[c])
              }
            } else {
              d.splice(g, 0, b)
            }
            break;
          case "removeat":
            d.splice(g, 1);
            break
        }
      }
    }
  },
  isSelectionOutOfBound: function(d, c) {
    var b = false,
      a = c[0 + IndexJL],
      f = c[1 + IndexJL];
    if (d.hasSections) {
      if (a >= d.data.length) {
        b = true
      } else {
        var e = d.data[a][1 + IndexJL];
        if (f > e.length) {
          b = true
        }
      }
    } else {
      if (f >= d.data.length) {
        b = true
      }
    }
    return b
  },
  getRowDataByIndex: function(b, a) {
    if (b.data.length > IndexJL) {
      if ($KU.isArray(b.data[0])) {
        if (a[IndexJL + 1] == -1) {
          return b.data[a[0]][IndexJL]
        } else {
          return b.data[a[0]][IndexJL + 1][a[1]]
        }
      } else {
        return b.data[a[1]]
      }
    }
  }
};
$KW.Image = {
  initialize: function() {
    kony.events.addEvent("click", "Image", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Image", this.imgOrientationHandler)
  },
  imgOrientationHandler: function() {
    var b = document.querySelectorAll("img[kwidgettype='Image']");
    if (b) {
      for (var c = 0; c < b.length; c++) {
        var a = b[c];
        $KW.Image.imgResizeHandler(a, "orientationchange")
      }
    }
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    switch (c) {
      case "src":
        e.srcType = 1;
        d && (d.parentNode.parentNode.innerHTML = this.render(e, new $KW.WidgetGenerationContext(e.pf)));
        break;
      case "base64":
        e.srcType = 2;
        if (d && b) {
          d.src = this.getBase64String(b)
        }
        break;
      case "referenceheight":
      case "referencewidth":
      case "imagescalemode":
        d && (d.parentNode.parentNode.innerHTML = this.render(e, new $KW.WidgetGenerationContext(e.pf)));
        $KW.FlexContainer.attachDragEvent(e);
        break
    }
  },
  render: function(b, e) {
    var g = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(b, e);
    var l = "";
    var d = "";
    b.loaded = false;
    var n = $KU.isFlexWidget(b);
    if (e.scrollBoxID) {
      b.scrollBoxID = e.scrollBoxID
    }
    var i = true;
    if ($KU.inArray($KU.imgCache, b.src, true)) {
      i = false
    }
    if (i && b.imagewhiledownloading) {
      new Image().src = $KU.getImageURL(b.imagewhiledownloading)
    }
    b.imagewhiledownloading = b.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
    var h = $KW.skins.getVisibilitySkin(b) + (n ? " middlecenteralign" : "");
    var j = "";
    if (e.ispercent === false) {
      j = e.layoutDir ? "float:" + e.layoutDir : ""
    } else {
      j = "width:100%"
    }
    if (b.srcType == 2) {
      imgsrc = this.getBase64String(b.base64)
    } else {
      imgsrc = $KU.getImageURL(b.src)
    }
    var f = "$KU.imgLoadHandler(arguments[0],this)";
    if (e.container) {
      var c = e.container;
      if (c.wType == "Segment" && c.selectionindicator == b.id && c.behavior != "default" && c.selectimage && c.unselectimage) {
        var m = $KU.inArray(c.selectedRows, (IndexJL) ? [null, c.seccounter, c.rowcounter] : [c.seccounter, c.rowcounter])[0] ? c.selectimage : c.unselectimage;
        imgsrc = $KU.getImageURL(m)
      }
    }
    var a = this.getImageDimensions(b, e.ispercent);
    d += (a.width != undefined ? ("width:" + a.width + "px;") : "") + (a.height != undefined ? ("height:" + a.height + "px;") : "") + (n ? "font-size:0px;display:block;" : "");
    f = a.onimgonload || f;
    if (a.maxwidth) {
      d = a.maxwidth
    }
    if (kony.appinit.isiPhone || $KU.isBlackBerry) {
      l += "<span id='" + (b.pf + "_" + b.id) + "_span' class='" + h + " " + g[0] + "' style='" + (i && b.src ? "background:url(" + $KU.getImageURL(b.imagewhiledownloading) + ") center center no-repeat;" : ";") + $KW.skins.getMarginSkin(b, e) + $KW.skins.getPaddingSkin(b, e) + j + ";" + d + "'>"
    } else {
      l += "<span id='" + (b.pf + "_" + b.id) + "_span' class='" + h + " " + g[0] + "' style='display:inline-block;" + (i && b.src ? "background:url(" + $KU.getImageURL(b.imagewhiledownloading) + ") center center no-repeat;" : ";") + $KW.skins.getMarginSkin(b, e) + $KW.skins.getPaddingSkin(b, e) + j + ";" + d + "'>"
    }
    l += "<img class='' src='" + imgsrc + "'" + $KW.Utils.getBaseHtml(b, e) + "onload= " + f + " onerror='$KU.imgLoadHandler(arguments[0],this)' ";
    if (!(b.name == "kony.ui.Image2" || b.name == "konyLua.Image2") && b.scalemode == "maintainaspectratio") {
      d = "width:100%;"
    } else {
      if (b.scalemode == "retaininitialimagedimensions") {
        d = ""
      }
    }
    if (i && b.src) {
      if (kony.appinit.isIE8 || kony.appinit.isIE7) {
        d += "opacity:0;"
      } else {
        d += "visibility:hidden;opacity:0;"
      }
    }
    var k = b.ondownloadcomplete || "";
    if (k) {
      k = (typeof(k) == "function") ? $KU.getFunctionName(b.ondownloadcomplete) : b.ondownloadcomplete;
      k = " ondownloadcomplete= '" + k + "'"
    }
    l += "style= '" + d + "'" + k + "/></span>";
    return l
  },
  getImageDimensions: function(a, b) {
    var d = {};
    if (a.imagescalemode == constants.IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS) {
      var c = $KU.isFlexWidget(a);
      if (!c) {
        if (a.referencewidth) {
          if (b == false) {
            d.width = a.referencewidth
          } else {
            d.width = (((screen.width * (a.containerweight / 100)) > a.referencewidth) ? a.referencewidth : (screen.width * (a.containerweight / 100)))
          }
          d.height = a.referenceheight
        } else {
          d.maxwidth = "max-width:100%;"
        }
      }
    } else {
      if ((a.name == "kony.ui.Image2" || a.name == "konyLua.Image2") && a.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        a.ispercent = b;
        d.onimgonload = "$KW.Image.imgLoadHandler2(arguments[0])"
      } else {
        if (!a.referencewidth && a.heightwidth && a.imagescalemode != constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          var e = (a.heightwidth).split(",");
          d.width = e[1];
          d.height = e[0]
        } else {
          d.maxwidth = "max-width:100%;"
        }
      }
    }
    return d
  },
  getBase64String: function(a) {
    return "data:image/png;base64," + a
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  },
  imgLoadHandler2: function(a) {
    a = a || window.event;
    img = a.target || a.srcElement;
    if (!img.parentNode || (img.parentNode && !img.parentNode.parentNode)) {
      return
    }
    this.imgResizeHandler(img, a.type)
  },
  imgResizeHandler: function(u, l) {
    var b = u.getAttribute("ktabpaneid");
    var f = u.getAttribute("kwidgettype");
    var t = (f == "Image") ? $KU.getElementID(u.getAttribute("id")) : u.getAttribute("id");
    var j = u.src;
    var m = u.getAttribute("ktabid");
    var r;
    if (m) {
      r = kony.model.getWidgetModel(u.getAttribute("kformname"), $KU.getElementID(t), b, m)
    } else {
      r = kony.model.getWidgetModel(u.getAttribute("kformname"), t, b)
    }
    var g = $KW.Image.getNaturalDimensions(u);
    if (l == "load") {
      var c = true;
      if ($KU.inArray($KU.imgCache, j, true)) {
        c = false
      } else {
        $KU.imgCache.push(j)
      }
      if (c || u.parentNode.style.background.indexOf("url") != -1) {
        var o = u.parentNode;
        if (o) {
          if (o.style.removeProperty) {
            o.style.removeProperty("background")
          } else {
            o.style.background = "none"
          }
        }
        u.style[vendor + "Transition"] = "opacity 500ms ease-in-out";
        u.style.opacity = 1
      }
    }
    r.loaded = true;
    if (r.animInfo) {
      var p = r.animInfo;
      p.instance.animate(r, p.animConfig, p.animCallback)
    }
    if (!u.parentNode || (!g.width || !g.height)) {
      return
    }
    var d = $KU.returnEventReference(u.getAttribute("ondownloadcomplete"));
    d && d.call(r, r, j, false);
    var e = u.parentNode.parentNode.offsetWidth;
    if (r.containerWeight > 0 && e == 0) {
      e = g.width
    }
    var s = $KU.isFlexWidget(r);
    if (!s) {
      var h = [];
      h = $KW.Image.imgDimCalculation(r, g, e);
      u.style.width = u.parentNode.style.width = h[1] + "px";
      u.style.height = u.parentNode.style.height = h[0] + "px"
    }
    u.style.display = "";
    u.style.visibility = "visible";
    u.parentNode.parentNode.style["font-size"] = "0px";
    $KU.onImageLoadComplete(r, u);
    var a = r.parent;
    if (a.wType == "HBox") {
      var k = $KU.getParentByAttribute(u.parentNode, "kwidgettype");
      if (k) {
        var q = k.querySelectorAll("div[kwidgettype='Line'][direction='V']");
        for (var n = 0; n < q.length; n++) {
          $KW.Line.resizeVLine(q[n])
        }
      }
    }
  },
  getNaturalDimensions: function(b) {
    var a = {};
    if (typeof b.naturalWidth == "undefined") {
      var c = new Image();
      c.src = b.src;
      a.width = c.width;
      a.height = c.height
    } else {
      a.width = b.naturalWidth;
      a.height = b.naturalHeight
    }
    return a
  },
  imgDimCalculation: function(a, c, g) {
    var f = [];
    var e = (c.width / c.height);
    if (!a.referencewidth) {
      if (a.ispercent === false) {
        f[1] = c.width;
        f[0] = c.height
      } else {
        if (c.width <= g) {
          if (a.referenceheight && c.height > a.referenceheight) {
            f[0] = a.referenceheight;
            f[1] = f[0] * e
          } else {
            f[1] = c.width;
            f[0] = c.height
          }
        } else {
          f[1] = g;
          if (!a.referenceheight) {
            f[0] = f[1] / e
          } else {
            f[0] = f[1] / e;
            if (f[0] > a.referenceheight) {
              f[0] = a.referenceheight;
              f[1] = f[0] * e
            }
          }
        }
      }
    } else {
      if (a.ispercent === false) {
        if (c.width < a.referencewidth) {
          f[1] = c.width;
          f[0] = c.height
        } else {
          f[1] = a.referencewidth;
          f[0] = f[1] / e
        }
      } else {
        var b = (a.referencewidth <= g) ? a.referencewidth : g;
        if (!a.referenceheight) {
          if (c.width < b) {
            f[0] = c.height;
            f[1] = c.width
          } else {
            f[1] = b;
            f[0] = f[1] / e
          }
        } else {
          var d = (c.width < b) ? (c.height < a.referenceheight ? true : false) : false;
          if (!d) {
            f[1] = (((g) > a.referencewidth) ? a.referencewidth : (g));
            f[0] = a.referenceheight;
            var h = (f[1] / e) < f[0] ? (f[1] / e) : false;
            if (h === false) {
              f[1] = (f[0] * e <= a.referencewidth) ? f[0] * e : false
            } else {
              f[0] = h
            }
          } else {
            f[0] = c.height;
            f[1] = c.width
          }
        }
      }
    }
    if (f[1] > 0 && f[1] < 1) {
      f[1] = 1
    }
    if (f[0] > 0 && f[0] < 1) {
      f[0] = 1
    }
    if (document.getElementsByTagName("body")[0].getAttribute("formWidth") != null) {
      $KW.Form.adjustBodyWidth()
    }
    return f
  },
  setBase64Img: function(a) {
    if (a.src && !a.src.startsWith("http")) {
      var b = new XMLHttpRequest();
      b.onreadystatechange = function() {
        if (b.readyState == 4 && b.status == 200) {
          a.base64 = $KU.getBase64(b.responseText) || null
        }
      };
      b.open("GET", $KU.getImageURL(a.src), true);
      if (b.overrideMimeType) {
        b.overrideMimeType("text/plain; charset=x-user-defined")
      }
      b.send(null)
    } else {
      a.base64 = null
    }
  }
};
$KW.HStrip = {
  initialize: function() {
    kony.events.addEvent("click", "HStrip", this.eventHandler);
    kony.events.addEvent("onorientationchange", "HStrip", this.orientationHandler)
  },
  initializeView: function(a) {
    this.initializePageViews(a);
    $KW.touch.computeSnapWidths(a, "HStrip");
    this.initializeSlotViews(a);
    this.initializeStripViews(a)
  },
  updateView: function(g, d, b, a) {
    var f = $KU.getNodeByModel(g);
    switch (d) {
      case "viewtype":
        if (!f) {
          return
        }
        f.parentNode.innerHTML = this.render(g, new $KW.WidgetGenerationContext(g.pf));
        if (b == "pageview") {
          this.initializePageView(g, false, f);
          $KW.touch.computeWidths(f, g);
          var e = new $KW.touch.pageviewScroller(f, {
            widgetModel: g
          });
          $KG[f.id] = e
        }
        if (b == "slotview") {
          this.initializeSlotView(g)
        }
        if (b == "stripview") {
          this.initializeStripView(f)
        }
        break;
      case "data":
        if (b && $KU.isArray(b)) {
          g.masterdata = b[0 + IndexJL];
          g.key = b[1 + IndexJL]
        }
        $KW.HStrip.setData(g, g.masterdata, g.key);
        break;
      case "showscrollbars":
        g.scrollInstance = null;
        $KW.HStrip.initializeStripViews(g.pf);
        break;
      case "selectedindex":
      case "focusedindex":
        if (g.viewtype == "pageview") {
          $KW.touch.computeSnapWidths(g.pf, "HStrip")
        }
        g.focuseditem = g.selectedItem = g.selecteditem = g.masterdata[b];
        break;
      case "referenceheight":
      case "referencewidth":
      case "imagescalemode":
        $KW.HStrip.setData(g, g.masterdata, g.key);
        break;
      case "viewconfig":
        var h = g.viewconfig;
        g.scrollbounce = h && h.stripviewConfig && h.stripviewConfig.enableScrollBounce;
        if (g.scrollbounce == undefined) {
          g.scrollbounce = h && h.stripviewconfig && h.stripviewconfig.enablescrollbounce
        }
        var c = g.scrollInstance;
        if (c) {
          c.options.bounce = (g.scrollbounce != undefined ? g.scrollbounce : true)
        }
        break
    }
  },
  render: function(f, a) {
    var g = f.masterdata = (f.data && f.data[0 + IndexJL]) || f.masterdata || [];
    if (f.data) {
      f.key = f.data[1 + IndexJL]
    }
    f.focusedindex = f.selectedindex = f.focusedindex || f.selectedindex || null;
    f.focuseditem = f.selecteditem = f.focuseditem || f.selecteditem || null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      f.selectedItem = f.selecteditem;
      f.selectedIndex = f.selectedindex
    }
    f.context = a;
    var c = $KW.skins.getWidgetSkinList(f, a);
    var h = $KW.skins.getMarginSkin(f, a) + " " + $KW.skins.getPaddingSkin(f);
    var j = f.viewtype;
    var i = "";
    var d = $KW.Utils.getBaseHtml(f, a);
    var e = f.pf + "_" + f.id;
    if (f.imagewhiledownloading) {
      new Image().src = $KU.getImageURL(f.imagewhiledownloading)
    }
    f.imagewhiledownloading = f.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
    if (f.showArrows) {
      f.leftarrowimage = f.leftarrowimage || "prvarw.png";
      f.rightarrowimage = f.rightarrowimage || "nxtarw.png"
    }
    if (j == "slotview") {
      i = "<div " + d + "name='ImageStrip_SlotView' class='" + c + "' style='" + h + "'><div></div>";
      if (f.showarrows) {
        i += $KW.HStrip.generateSlotFooter(f, c)
      }
      i += "</div>"
    } else {
      if (j == "pageview") {
        i = "<div" + d + "name='touchcontainer_HStrip' class='" + c + " kstripcontainer' style='" + h + "'>";
        i += "<div id='imgs' class='kstrip' style='" + (!kony.appinit.useTransition ? "position:relative" : "") + "'>";
        i += "</div>";
        if (f.showarrows && f.leftarrowimage && f.rightarrowimage) {
          i += $KW.HStrip.fadeArrowImages(f)
        }
        i += "</div>";
        if (!f.ispageindicatorneeded == false) {
          i += "<div class='ktable kwt100' id='" + f.pf + "_" + f.id + "_footer'></div>"
        }
        if (f.viewtype == "pageview") {
          f.count = 0
        }
      } else {
        if (a.ispercent === false) {
          i += "<div class = '' style='table-layout:fixed; display: inline-block;'>"
        } else {
          i += "<div class = 'ktable kwt100' style='table-layout:fixed;'>"
        }
        i += "<div class = 'krow kwt100' >";
        var b = $KW.skins.getWidgetAlignmentSkin(f);
        i += "<div class = 'kcell kwt100 " + b + "' >";
        i += "<div" + d + "class='scrollerX " + c + "' name='ImageStrip_StripView' style='" + h + "'>";
        if (f.showarrows && f.leftarrowimage && f.rightarrowimage) {
          i += $KW.touch.fadeHImages(f)
        }
        i += "<div id='" + e + "_scroller' class='kwt100 scrollerX'><div id='" + e + "_scrollee' class='scrolleeX' " + (kony.appinit.isFirefox ? "style='overflow:hidden'" : "") + ">";
        i += this.generateImages("setdata", f, g, IndexJL);
        i += "</div></div></div>";
        i += "</div></div></div>";
        if (f.viewtype == "stripview") {
          f.count = 0
        }
      }
    }
    return i
  },
  initializePageViews: function(j, d) {
    var e = document.querySelectorAll("#" + j + " div[name='touchcontainer_HStrip']");
    for (var f = 0; f < e.length; f++) {
      var b = e[f];
      var c = b.children[0];
      var a = $KU.getElementID(b.id);
      var h = b.getAttribute("kformname");
      var g = $KU.getModelByNode(b);
      this.initializePageView(g, d, b)
    }
  },
  initializePageView: function(i, g, e) {
    var f = e.children[0];
    var d = $KU.getElementID(e.id);
    f.innerHTML = "";
    var k = i.masterdata || [];
    var j = (window.orientation == 90 || window.orientation == -90);
    var o = (window.orientation == 0 || window.orientation == 180);
    var n = i.swipeContext;
    if (typeof window.orientation == "undefined") {
      o = true
    }
    var h = e.parentNode.clientWidth;
    h = h - 20;
    var a = parseInt($KU.getStyle(e, "border-left-width").replace("px", ""), 10) + parseInt($KU.getStyle(e, "border-right-width").replace("px", ""), 10);
    h = h - a;
    var p = i.heightwidth ? parseInt(i.heightwidth.split(",")[1]) : i.referencewidth || 0;
    var c = i.recperpage = (p != 0) ? Math.floor(h / p) : 3;
    if (!c || isNaN(c)) {
      c = 3
    }
    if (!i.ptImgs && o) {
      i.ptImgs = c
    }
    if (!i.lsImgs && j) {
      i.lsImgs = c
    }
    var b = h % parseInt(p, 10);
    var m = Math.floor(b / c);
    if (m && !isNaN(m)) {
      i.spacebetweenimages = Math.floor(b / c)
    }
    f.innerHTML = this.generateImages("setdata", i, k, IndexJL);
    if (g) {
      this.updateCurrentPage(n, i, o)
    }
    var l = $KU.getElementById(i.pf + "_" + d + "_footer");
    l && (l.innerHTML = this.generateStripFooter(i, f, n))
  },
  updateCurrentPage: function(f, d, h) {
    if (f && d.masterdata && f.currentPage != 0) {
      var g = f.currentPage;
      if (h) {
        var a = (d.lsImgs * g) + 1;
        var c = d.ptImgs
      } else {
        var a = (d.ptImgs * g) + 1;
        var c = d.lsImgs
      }
      var b = 0;
      for (var e = IndexJL; e < (d.masterdata.length); e++) {
        if (e % c == 0) {
          b++
        }
        if (e == a) {
          f.currentPage = b;
          break
        }
      }
    }
  },
  getPadding: function(a) {
    return parseInt($KU.getStyle(a, "padding-left").replace(/px/, ""), 10) + parseInt($KU.getStyle(a, "padding-right").replace(/px/, ""), 10)
  },
  generateImages: function(n, d, q, g, t, k) {
    var c = "";
    var m = "";
    if (n == "setdata") {
      if (t) {
        m = t
      } else {
        if (d.key) {
          m = d.key
        } else {
          m = ""
        }
      }
    }
    var l = q.length;
    var j = d.viewtype;
    var f = d.recperpage;
    f = f && ((l > 0 && l < f) ? l : f) || 3;
    if (d.wType == "IGallery") {
      f = f * d.noofrowsperpage
    }
    var r = (IndexJL == 0) ? 1 : 0;
    for (var o = IndexJL; o < (q.length); o++) {
      for (var t in q[o]) {
        !m && (m = t);
        break
      }
      if (o - 1 == k) {
        m = t
      }
      var h = q[o][m];
      var s = q[o].accessibilityConfig;
      var b = $KU.getAccessibilityValues(d, s, o + 1);
      var p = "";
      if (h) {
        var a = true;
        if ($KU.inArray($KU.imgCache, h, true)) {
          a = false
        }
        if ((o - IndexJL) % f == 0 && j == "pageview") {
          c += "<div style='float: left;width:100%' kwidgettype='KTouchhstrip'>"
        }
        if (d.wType == "IGallery" && (o - IndexJL) % (f / d.noofrowsperpage) == 0 && j == "pageview") {
          c += "<div style='float: left;width:100%'>"
        }
        h = $KU.getImageURL(h);
        if (d.spacebetweenimages && f > 1 && o != q.length - 1) {
          p += "margin-right:" + d.spacebetweenimages + "px;"
        }
        c += "<span " + (a ? ("style='background:url(" + $KU.getImageURL(d.imagewhiledownloading) + ") center center no-repeat;display:inline-block;" + p + "'") : "style='" + p + "'") + ">";
        if (d.heightwidth || (d.referencewidth || d.referenceheight)) {
          var e = d.heightwidth ? d.heightwidth.split(",") : [d.referenceheight, d.referencewidth];
          p = (parseInt(e[1]) != 0 ? ("width:" + e[1] + "px;") : "") + (parseInt(e[0]) != 0 ? ("height:" + e[0] + "px;") : "")
        }
        c += "<img " + b + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + h + "' id='" + d.pf + "_" + d.id + "_img' kformname = '" + d.pf + "' index= " + g + " kwidgettype='" + d.wType + "'" + (d.context.tabpaneID ? " ktabpaneid='" + d.context.tabpaneID + "'" : "") + " onload='$KU.imgLoadHandler(arguments[0],this)' onerror='$KU.imgLoadHandler(arguments[0],this)'";
        c += (kony.appinit.isFirefox || kony.appinit.isIE) ? " ondragstart='return false;'" : "";
        if (a) {
          p += "opacity:0;"
        }
        c += (p ? ("style= '" + p + "'") : "") + " /></span>";
        if (d.wType == "IGallery" && ((o + r) % (f / d.noofrowsperpage) == 0 || o == l - 1) && j == "pageview") {
          c += "</div>"
        }
        if (((o + r) % f == 0 || o == l - 1) && j == "pageview") {
          c += "</div>"
        }
      }
      g++
    }
    return c
  },
  generateStripFooter: function(c, f, e) {
    var g = "";
    var a = f.childNodes.length;
    var b = e ? e.currentPage : 0;
    if (a > 1) {
      var h = "";
      g += "<div class='krow kwt100' align='center' ><div class='kcell' >";
      for (var d = 0; d < a; d++) {
        h = (d == b) ? (c.pageOnDotImage || "whitedot.gif") : (c.pageOffDotImage || "blackdot.gif");
        g += "<span onclick='$KW.touch.navigationDotsHandler(this)' index='" + (d + 1) + "'><img style='padding-left:4px' src='" + $KU.getImageURL(h) + "' /></span>"
      }
      g += "</div></div>"
    }
    return g
  },
  generateSlotFooter: function(b, a) {
    var f = "";
    var d = "";
    b.paginationconfig = {
      vdistance: "100",
      hdistance: "25",
      leftimageurl: "rotate-left-slotfooter.png",
      rightimageurl: "rotate-right-slotfooter.png"
    };
    b.paginationconfig.leftimageurl = b.leftarrowimage;
    b.paginationconfig.rightimageurl = b.rightarrowimage;
    var c = b.paginationconfig;
    if (b.heightwidth) {
      var e = b.heightwidth.split(",");
      d += (e[1] != "0" ? ("width:" + e[1] + "px;") : "") + (e[0] != "0" ? ("xheight:" + e[0] + "px;") : "")
    }
    f += "<div id='" + b.pf + "_" + b.id + "_slotfooter' class='ktable " + a + "' style='position:relative;top:" + (c.vdistance ? (-c.vdistance) + "px" : "-30px") + ";" + d + "'>							<div class='krow middlecenteralign kwt100'>								<div class='kcell kwt50 middleleftalign'>									<span class='kbasemargin kbasepadding' style='display: inline-block; width: 100%;position:relative;left: " + (c.hdistance ? c.hdistance + "px" : "0px") + ";'>										<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + $KU.getImageURL(c.leftimageurl ? c.leftimageurl : "rotate-left-slotfooter.png") + "'>									</span>								</div>								<div class='kcell kwt50 middlerightalign'>									<span class='kbasemargin kbasepadding' style='display: inline-block; width: 100%;position:relative;right: " + (c.hdistance ? c.hdistance + "px" : "0px") + ";'>										<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + $KU.getImageURL(c.rightimageurl ? c.rightimageurl : "rotate-right-slotfooter.png") + "'>									</span>								</div>							</div>						</div>";
    return f
  },
  setData: function(b, a, c) {
    if (a && $KU.isArray(a)) {
      this.modifyContent(b, a, "setdata", null, c)
    } else {
      var d = $KU.getNodeByModel(b);
      if (d) {
        $KU.toggleVisibilty(d, a, b)
      }
    }
  },
  addAll: function(b, a, c) {
    (a && $KU.isArray(a)) && this.modifyContent(b, a, "addall", null, c)
  },
  removeAll: function(a) {
    this.modifyContent(a, [], "removeall")
  },
  removeAt: function(b, a) {
    (!isNaN(a) && a >= IndexJL) && this.modifyContent(b, [], "removeat", a)
  },
  setDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "setdataat", b)
  },
  addDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "addat", b)
  },
  modifyContent: function(a, h, b, e, i) {
    if (a) {
      $KW.Utils.updateContent(a, "masterdata", h, b, e);
      a.canUpdateUI = false;
      a.data = IndexJL ? [null, a.masterdata, i] : [a.masterdata, i];
      a.canUpdateUI = true;
      i && (a.key = i);
      if (a.viewtype == "slotview") {
        this.initializeSlotView(a);
        return
      }
      var g = $KU.getNodeByModel(a);
      if (g) {
        var d = (a.viewtype == "stripview") ? g.childNodes[g.childNodes.length - 1].childNodes[0] : g.childNodes[g.childNodes.length - 1];
        switch (b) {
          case "setdata":
          case "setdataat":
          case "addall":
          case "removeat":
          case "addat":
            if (b == "addall" && i) {
              var c = this.getImgsLen(d)
            }
            d.innerHTML = this.generateImages(b, a, a.masterdata || [], IndexJL, i, c);
            break;
          case "removeall":
            d.innerHTML = "";
            break
        }
        a.masterdata && $KU.toggleVisibilty(g, a.masterdata, a);
        if (a.viewtype == "pageview") {
          $KW.touch.computeWidths(g, a);
          var f = $KU.getElementById(a.pf + "_" + a.id + "_footer");
          f && (f.innerHTML = this.generateStripFooter(a, d))
        } else {
          if (a.viewtype == "stripview") {
            this.refreshScroller(a, g)
          }
        }
      }
    }
  },
  getImgsLen: function(e) {
    var d = 0;
    var c = e.childNodes;
    for (var b = 0; b < c.length; b++) {
      var f = c[b].childNodes;
      for (var a = 0; a < f.length; a++) {
        d++
      }
    }
    return d
  },
  orientationHandler: function(b, a) {
    $KW.HStrip.initializePageViews(b, true);
    $KW.touch.orientationHandler(b, a, "HStrip")
  },
  eventHandler: function(a, f) {
    var d = f.id;
    d = (f.tagName == "IMG") ? d.split("_")[1] : $KU.getElementID(d);
    var c = $KU.getModelByNode($KU.getElementById(f.getAttribute("kformname") + "_" + d));
    var b = f.getAttribute("index");
    if (b && c) {
      c.canUpdateUI = false;
      c.focusedindex = c.selectedindex = b;
      c.canUpdateUI = true;
      c.focuseditem = c.selecteditem = c.masterdata[b];
      var e = $KU.returnEventReference(c.onclick || c.onselection);
      e && e.call(c, c);
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItem = c.selecteditem;
        c.selectedIndex = c.selectedindex
      }
    }
  },
  initializeStripViews: function(c) {
    var b = document.querySelectorAll("#" + c + " div[name='ImageStrip_StripView']");
    for (var a = 0; a < b.length; a++) {
      this.initializeStripView(b[a])
    }
  },
  initializeStripView: function(d) {
    var c = $KU.getModelByNode(d);
    var e = d.getAttribute("kformname");
    var a = $KU.getElementID(d.id);
    var b = {
      hScrollbar: c.showscrollbars != undefined ? c.showscrollbars : false,
      vScroll: false,
      formid: e,
      hScroll: true,
      scrollbox: true,
      HStrip: true,
      bounce: c.scrollbounce != undefined ? c.scrollbounce : true,
      showImages: c.showarrows && c.leftarrowimage && c.rightarrowimage,
      widgetID: a,
      widgetModel: c
    };
    c.scrollInstance = new $KW.touch.konyScroller(d.id + "_scroller", b);
    this.refreshScroller(c, d)
  },
  refreshScroller: function(b, c) {
    if (!c) {
      c = $KU.getNodeByModel(b)
    }
    if (c) {
      var a = b.showarrows && b.leftarrowimage && b.rightarrowimage ? c.children[1] : c.children[0];
      if (typeof a != "undefined" && a.children[0].scrollWidth) {
        a.children[0].style.width = a.children[0].scrollWidth + "px"
      }
      b.scrollInstance && b.scrollInstance.refresh()
    }
  },
  initializeSlotViews: function(d) {
    var c = document.querySelectorAll("#" + d + " div[name='ImageStrip_SlotView']");
    for (var a = 0; a < c.length; a++) {
      d = c[a].getAttribute("kformname");
      var b = $KU.getModelByNode(c[a]);
      this.initializeSlotView(b)
    }
  },
  initializeSlotView: function(d) {
    var j = d.masterdata;
    if (!j) {
      return
    }
    var h = "iurl";
    for (var k in j[1]) {
      h = k;
      break
    }
    var a = [];
    for (var e = IndexJL; e < j.length; e++) {
      a.push(j[e][h])
    }
    var g = d.pf + "_" + d.id;
    var f = $KU.getElementById(g);
    if (!f) {
      return
    }
    var b = $KG[g + "_slotviewInstance"];
    if (b) {
      b.destroy();
      if (f && f.children[0] && f.children[0].children[0]) {
        f.children[0].removeChild(f.children[0].children[0])
      }
    }
    if (f.children[0]) {
      var c = d.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
      f.children[0].innerHTML = "<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + $KU.getImageURL(c) + "' style='margin:auto;' />"
    }
    var b = new $KW.SlotView(g, a, {
      model: d
    });
    $KG[g + "_slotviewInstance"] = b
  },
  onBeforeScrollStartHandler: function() {
    return function(b) {
      var a = b.target || b.srcElement;
      while (a.nodeType != 1) {
        a = a.parentNode
      }
      if (a.tagName != "SELECT" && a.tagName != "INPUT" && a.tagName != "TEXTAREA") {
        kony.events.preventDefault(b)
      }
      kony.events.stopPropagation(b)
    }
  },
  fadeArrowImages: function(b) {
    var d = "display:none;";
    var a = $KU.getImageURL(b.leftarrowimage);
    var c = $KU.getImageURL(b.rightarrowimage);
    var e = b.pf + "_" + b.id;
    var f = "<div id='" + e + "_scrollFades' class='scroll_view'><div id='" + e + "_leftimg' class='scroll_fades leftfade' style='" + d + "'><img type='HImg' src='" + a + "' onclick='$KW.HStrip.previousImage(this)' onload='$KW.touch.setHeight(this)' ></div><div id='" + e + "_rightimg' class='scroll_fades rightfade' style='" + d + "'><img type='HImg' src='" + c + "' onclick='$KW.HStrip.nextImage(this)' onload='$KW.touch.setHeight(this)' ></div></div>";
    return f
  },
  previousImage: function(d) {
    var c = d.parentNode.parentNode.parentNode;
    if (c) {
      var a = $KU.getModelByNode(c);
      var b = a.swipeContext;
      $KW.touch.previousImage(c, b, false);
      $KW.touch.updatePageIndicator(c, b, a)
    }
  },
  nextImage: function(d) {
    var c = d.parentNode.parentNode.parentNode;
    if (c) {
      var a = $KU.getModelByNode(c);
      var b = a.swipeContext;
      $KW.touch.nextImage(c, b, false);
      $KW.touch.updatePageIndicator(c, b, a)
    }
  }
};
$KW.SlotView = function(a, c, b) {
  this.arguments = {};
  this.arguments.container = a;
  this.arguments.totalFrames = c.length;
  this.imagesArray = c;
  this.options = {
    imageIndexOffset: 1,
    loaders: 3,
    initialLoad: 4,
    noCache: false,
    initialPos: [0, 0],
    invert: [true, false],
    infiniteAxis: [true, false],
    autoPlay: false,
    fps: 25,
    grabbable: true,
    grabRotateDistance: 1000,
    throwable: true,
    minThrowDuration: 0.5,
    maxThrowDuration: 1.5,
    spinnable: true,
    minSpinDuration: 3,
    intro: $KW.SlotView.SpinIntro,
    introSpins: 0.5,
    introDuration: 1,
    mobileTotalFrames: null
  };
  for (i in b) {
    this.options[i] = b[i]
  }
  this.initialize()
};
$KW.SlotView.SpinIntro = function(k) {
  var e = k.options.fps * k.options.introDuration,
    d = (typeof k.options.introInitialRow != "undefined") ? k.options.introInitialRow : k.options.initialPos[1],
    j = d - k.options.initialPos[1],
    g = [];
  for (var f = 0; f < e; f++) {
    var h = f / e,
      c = Math.pow(h - 1, 4),
      b = Math.floor(c * k.totalFrames[0] * k.options.introSpins) + k.options.initialPos[0],
      a = Math.floor(c * j) + k.options.initialPos[1];
    if (!g.length || g[g.length - 1][0] != b || g[g.length - 1][1] != a) {
      g.push(k.validatePos([b, a], true))
    }
  }
  return g
};
$KW.SlotView.options = {};
$KW.SlotView.prototype.initialize = function() {
  function a(e, d) {
    return (typeof e[0] == "undefined") ? [e, d] : e
  }
  if (this.options.noCache) {
    this.random = Math.floor(Math.random() * 10000000)
  }
  this.mobile = $KU.isTouchSupported;
  if (this.mobile) {
    this.options.autoPlay = true;
    this.options.spinnable = false;
    this.options.throwable = true;
    this.mobileStrings = {
      mousedown: "touchstart",
      mousemove: "touchmove",
      mouseup: "touchend"
    }
  }
  this.container = document.getElementById(this.arguments.container);
  this.vr = document.getElementById(this.arguments.container).children[0];
  this.totalFrames = a(this.arguments.totalFrames, 1);
  if (this.mobile && this.options.mobileTotalFrames) {
    var c = this.totalFrames;
    this.totalFrames = a(this.options.mobileTotalFrames, 1);
    this.frameMultipliers = [c[0] / this.totalFrames[0], c[1] / this.totalFrames[1]]
  } else {
    this.frameMultipliers = [1, 1]
  }
  this.options.initialPos = a(this.options.initialPos, 0);
  this.options.invert = a(this.options.invert, false);
  this.frames = [];
  for (var b = 0; b < this.totalFrames[0]; b++) {
    this.frames[b] = []
  }
  this.playIntervalDuration = 1000 / this.options.fps;
  this.minSpinIntervalDuration = (this.options.minSpinDuration * 1000) / this.totalFrames[0];
  this.minThrowFrames = Math.floor(this.options.minThrowDuration * this.options.fps);
  this.maxThrowFrames = Math.floor(this.options.maxThrowDuration * this.options.fps);
  this.currentPos;
  this.playing = false;
  this.grabbing = false;
  this.spinning = false;
  if (this.options.intro) {
    this.introSequence = this.options.intro(this);
    this.loader = new $KW.SlotView.LoaderController(this, this.introSequence.slice(0), this.playIntro.bind(this))
  } else {
    this.loadAllFrames();
    this.gotoPos(this.options.initialPos);
    this.makeInteractive();
    if (this.options.autoPlay) {
      this.play()
    }
  }
};
$KW.SlotView.prototype.getStr = function(a) {
  return this.mobile ? this.mobileStrings[a] : a
};
$KW.SlotView.prototype.getEvent = function(a) {
  if (!a) {
    a = window.event
  }
  if (a.touches) {
    if (a.touches.length > 1) {
      return false
    }
    if (a.touches.length) {
      a.clientX = a.touches[0].clientX;
      a.clientY = a.touches[0].clientY
    }
  }
  return a
};
$KW.SlotView.prototype.playIntro = function() {
  this.introInterval = setInterval(this.gotoNextIntroFrame.bind(this), this.playIntervalDuration);
  this.loadAllFrames()
}, $KW.SlotView.prototype.gotoNextIntroFrame = function() {
  this.gotoPos(this.introSequence.shift());
  if (!this.introSequence.length) {
    clearInterval(this.introInterval);
    this.makeInteractive()
  }
};
$KW.SlotView.prototype.isPosLoaded = function(a) {
  return (typeof this.frames[a[0]] != "undefined" && typeof this.frames[a[0]][a[1]] != "undefined")
};
$KW.SlotView.prototype.createLoadPlan = function(c, b) {
  if (!b) {
    return [0]
  }
  var e = [];
  do {
    for (var a = 0; a < c; a += b) {
      var d = Math.floor(a);
      if (e.indexOf(d) == -1) {
        e.push(d)
      }
    }
    if (b == 1) {
      return e
    }
    if ((b /= 2) < 1) {
      b = 1
    }
  } while (true)
};
$KW.SlotView.prototype.loadAllFrames = function() {
  var b = [],
    f = Math.floor(this.totalFrames[0] / this.options.initialLoad),
    d = this.createLoadPlan(this.totalFrames[0], f),
    e = Math.floor(this.totalFrames[1] / this.options.initialLoad),
    c = this.createLoadPlan(this.totalFrames[1], e);
  for (var g = 0; g < c.length; g++) {
    for (var a = 0; a < d.length; a++) {
      b.push(this.validatePos([d[a] + this.options.initialPos[0], c[g] + this.options.initialPos[1]], true))
    }
  }
  this.loader = new $KW.SlotView.LoaderController(this, b);
  b = null;
  f = null;
  d = null;
  e = null;
  c = null
};
$KW.SlotView.prototype.getImageSource = function(d) {
  var a = this.options.invert[0] ? (this.totalFrames[0] - 1) - d[0] : d[0],
    c = this.options.invert[1] ? (this.totalFrames[1] - 1) - d[1] : d[1],
    b = (Math.floor(c * this.totalFrames[0] * this.frameMultipliers[0] * this.frameMultipliers[1]) + Math.floor(a * this.frameMultipliers[0]) + this.options.imageIndexOffset) + "";
  return $KU.getImageURL(this.imagesArray[b - 1]) + (this.options.noCache ? "?" + this.random : "")
};
$KW.SlotView.prototype.makeInteractive = function() {
  if (this.options.grabbable) {
    this.bindGrabStart = this.onGrabStart.bind(this);
    this.bindGrabChange = this.onGrabChange.bind(this);
    this.bindGrabEnd = this.onGrabEnd.bind(this);
    kony.events.addEventListener(this.vr.parentNode, this.getStr("mousedown"), this.bindGrabStart)
  }
};
$KW.SlotView.prototype.destroy = function() {
  this.unmakeInteractive();
  delete this.frames;
  delete this.introSequence;
  delete this.loader
};
$KW.SlotView.prototype.unmakeInteractive = function() {
  if (this.mobile) {
    if (this.vr && this.vr.children[0]) {
      kony.events.removeEventListener(this.vr.children[0], "touchmove", this.bindGrabChange);
      kony.events.removeEventListener(this.vr.children[0], "touchend", this.bindGrabEnd)
    }
  }
  if (this.options.grabbable) {
    if (this.vr && this.vr.parentNode) {
      kony.events.removeEventListener(this.vr.parentNode, this.getStr("mousedown"), this.bindGrabStart)
    }
  }
};
$KW.SlotView.prototype.atPosition = function(a) {
  return (this.currentPos && a[0] == this.currentPos[0] && a[1] == this.currentPos[1])
};
$KW.SlotView.prototype.play = function() {
  if (this.playing) {
    return
  }
  this.playing = true;
  this.playInterval = setInterval(this.gotoNextFrame.bind(this), this.playIntervalDuration)
};
$KW.SlotView.prototype.pause = function() {
  if (!this.playing) {
    return
  }
  this.playing = false;
  clearInterval(this.playInterval)
};
$KW.SlotView.prototype.gotoNextFrame = function() {
  this.gotoPos([this.currentPos[0] + 1, this.currentPos[1]])
};
$KW.SlotView.prototype.validatePos = function(c, b) {
  for (var a = 0; a < 2; a++) {
    if (b || this.options.infiniteAxis[a]) {
      while (c[a] > this.totalFrames[a] - 1) {
        c[a] -= this.totalFrames[a]
      }
      while (c[a] < 0) {
        c[a] += this.totalFrames[a]
      }
    } else {
      if (c[a] > this.totalFrames[a] - 1) {
        c[a] = this.totalFrames[a] - 1
      }
      if (c[a] < 0) {
        c[a] = 0
      }
    }
  }
  return c
};
$KW.SlotView.prototype.gotoPos = function(b, a) {
  b = this.validatePos(b);
  if (!a && this.atPosition(b)) {
    return
  }
  this.currentPos = b;
  this.frame = this.frames[b[0]][b[1]];
  if (typeof this.frame != "undefined" && this.frame.nodeType) {
    if (this.currentFrame) {
      this.vr.removeChild(this.currentFrame)
    } else {
      if (this.vr.children[0]) {
        this.vr.removeChild(this.vr.children[0])
      }
    }
    this.currentFrame = this.frame;
    this.vr.appendChild(this.currentFrame)
  } else {
    this.loader.loadNow(b)
  }
  delete this.frame
};
$KW.SlotView.prototype.onGrabStart = function(a) {
  if (!(a = this.getEvent(a))) {
    return
  }
  this.grabbing = true;
  kony.events.addEventListener(document, this.getStr("mousemove"), this.bindGrabChange);
  kony.events.addEventListener(document, this.getStr("mouseup"), this.bindGrabEnd);
  if (this.mobile) {
    kony.events.addEventListener(this.vr.children[0], "touchmove", this.bindGrabChange);
    kony.events.addEventListener(this.vr.children[0], "touchend", this.bindGrabEnd)
  }
  this.grabHistory = [a];
  this.onGrabChange.clientX = this.onGrabChange.clientY = null;
  this.grabHistoryInterval = setInterval(this.updateGrabHistory.bind(this), 10);
  this.onGrabStart.clientX = a.clientX;
  this.onGrabStart.clientY = a.clientY;
  this.onGrabStart.playing = this.playing;
  this.onGrabStart.pos = this.currentPos;
  this.pause();
  this.stopThrowing();
  kony.events.preventDefault(a)
};
$KW.SlotView.prototype.onGrabChange = function(a) {
  if (!(a = this.getEvent(a))) {
    return
  }
  if (!(a.clientX == this.onGrabStart.clientX && a.clientY == this.onGrabStart.clientY)) {
    this.onGrabChange.clientX = a.clientX;
    this.onGrabChange.clientY = a.clientY;
    var b = this.getGrabPos(a);
    if (b) {
      this.gotoPos(b)
    }
  }
  kony.events.preventDefault(a)
};
$KW.SlotView.prototype.getGrabPos = function(d) {
  if (!d) {
    d = window.event
  }
  var j = d.clientX - this.onGrabStart.clientX,
    h = d.clientY - this.onGrabStart.clientY,
    e = j / this.options.grabRotateDistance,
    b = h / this.options.grabRotateDistance,
    g = Math.round(this.totalFrames[0] * e),
    f = Math.round(this.totalFrames[1] * b),
    c = this.onGrabStart.pos[0] + g,
    a = this.onGrabStart.pos[1] + f;
  return [c, a]
};
$KW.SlotView.prototype.updateGrabHistory = function() {
  var a = this.onGrabChange.clientX ? this.onGrabChange : this.onGrabStart;
  this.grabHistory.unshift({
    clientX: a.clientX,
    clientY: a.clientY
  });
  if (this.grabHistory.length > 3) {
    this.grabHistory.splice(3)
  }
};
$KW.SlotView.prototype.onGrabEnd = function(a) {
  if (!(a = this.getEvent(a))) {
    return
  }
  this.grabbing = false;
  kony.events.removeEventListener(document, this.getStr("mousemove"), this.bindGrabChange);
  kony.events.removeEventListener(document, this.getStr("mouseup"), this.bindGrabEnd);
  clearInterval(this.grabHistoryInterval);
  if (this.onGrabStart.playing) {
    this.play()
  } else {
    if (this.options.throwable) {
      var m = a.clientX - this.grabHistory[this.grabHistory.length - 1].clientX,
        l = a.clientY - this.grabHistory[this.grabHistory.length - 1].clientY,
        f = true;
      if (m || l) {
        var j = Math.sqrt(Math.pow(m, 2) + Math.pow(l, 2)),
          h = Math.floor(j / 5),
          c = this.grabHistory[this.grabHistory.length - 1].clientX,
          b = this.grabHistory[this.grabHistory.length - 1].clientY,
          o = true,
          n = true;
        if (h < this.minThrowFrames) {
          h = this.minThrowFrames
        } else {
          if (h > this.maxThrowFrames) {
            h = this.maxThrowFrames
          }
        }
        this.throwSequence = [];
        for (var e = 0; e < h; e++) {
          var g = e / h,
            d = Math.pow(g - 1, 2),
            c = Math.floor(d * m) + c,
            b = Math.floor(d * l) + b,
            k = this.validatePos(this.getGrabPos({
              clientX: c,
              clientY: b
            }));
          if (!o) {
            k[0] = this.throwSequence[this.throwSequence.length - 1][0]
          } else {
            if (this.throwSequence.length && k[0] == this.throwSequence[this.throwSequence.length - 1][0]) {
              o = false
            }
          }
          if (!n) {
            k[1] = this.throwSequence[this.throwSequence.length - 1][1]
          } else {
            if (this.throwSequence.length && k[1] == this.throwSequence[this.throwSequence.length - 1][1]) {
              n = false
            }
          }
          if (!this.isPosLoaded(k)) {
            f = false;
            break
          }
          this.throwSequence.push(k)
        }
        if (f) {
          this.throwing = true;
          this.throwInterval = setInterval(this.throwStep.bind(this), this.playIntervalDuration)
        }
      }
    }
  }
};
$KW.SlotView.prototype.throwStep = function() {
  this.gotoPos(this.throwSequence.shift());
  if (!this.throwSequence.length) {
    this.stopThrowing()
  }
};
$KW.SlotView.prototype.stopThrowing = function() {
  if (!this.throwing) {
    return
  }
  this.throwing = false;
  clearInterval(this.throwInterval)
};
$KW.SlotView.prototype.onclick = function(a) {
  if (this.focussed) {
    return
  }
  this.vr.focus()
};
$KW.SlotView.LoaderController = function(b, a, d) {
  this.vr = b;
  this.queue = a;
  this.onLoad = d;
  this.retiredLoaders = new Array();
  for (var c = 0; c < this.vr.options.loaders; c++) {
    this.loadNext(new $KW.SlotView.Loader(this))
  }
};
$KW.SlotView.LoaderController.prototype.loadNext = function(a) {
  if (this.queue.length) {
    a.load(this.queue.shift())
  } else {
    this.retiredLoaders.push(a);
    if (this.retiredLoaders.length == this.vr.options.loaders && typeof this.onLoad == "function") {
      this.onLoad();
      this.onLoad = null
    }
  }
};
$KW.SlotView.LoaderController.prototype.loadNow = function(a) {
  if (this.retiredLoaders.length) {
    this.retiredLoaders.shift().load(a)
  } else {
    this.queue.unshift(a)
  }
};
$KW.SlotView.Loader = function(a) {
  this.controller = a;
  this.loadNext = this.controller.loadNext.bind(this.controller)
};
$KW.SlotView.Loader.prototype.load = function(d) {
  this.pos = d;
  if (this.controller.vr.isPosLoaded(d)) {
    this.controller.loadNext(this);
    return
  }
  this.img = new Image();
  this.img.onload = this.onLoad.bind(this);
  var a = this.controller.vr.options.model;
  var c = a.heightwidth;
  if ((c && c != "0,0") || (a.referencewidth || a.referenceheight)) {
    var b = c ? c.split(",") : [a.referenceheight, a.referencewidth];
    this.img.style.width = b[1] + "px";
    this.img.style.height = b[0] + "px"
  } else {
    this.img.style.width = "100%"
  }
  this.controller.vr.frames[this.pos[0]][this.pos[1]] = true;
  this.img.src = this.controller.vr.getImageSource(this.pos);
  delete this.img
};
$KW.SlotView.Loader.prototype.onLoad = function(a) {
  if (!a) {
    a = window.event
  }
  var b = a.target || a.srcElement || this.img;
  this.controller.vr.frames[this.pos[0]][this.pos[1]] = b;
  if (b && b.onload) {
    delete b.onload
  }
  $KU.setImgAspectRatio(this.controller.vr.options.model, b);
  if (this.controller.vr.atPosition(this.pos)) {
    this.controller.vr.gotoPos(this.pos, true)
  }
  this.loadNext(this)
};
$KW.IGallery = {
  initialize: function() {
    kony.events.addEvent("click", "IGallery", this.eventHandler)
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    switch (c) {
      case "data":
        if (b && $KU.isArray(b)) {
          f.masterdata = b[0 + IndexJL];
          f.key = b[1 + IndexJL]
        }
        this.setData(f, f.masterdata, f.key);
        break;
      case "focusedindex":
      case "selectedindex":
        if (e) {
          e = document.querySelector("#" + e.id + " [index='" + b + "']");
          e && $KW.Widget.setfocus(f, null, e);
          f.focuseditem = f.selectedItem = f.selecteditem = f.masterdata[b]
        }
        break;
      case "referencewidth":
      case "referenceheight":
      case "imagescalemode":
        this.setData(f, f.masterdata, f.key);
        break;
      case "viewtype":
      case "noofrowsperpage":
        if (e) {
          e.parentNode.innerHTML = this.render(f, {
            tabpaneID: e.getAttribute("ktabpaneid")
          });
          if (f.viewtype == "pageview") {
            e = $KU.getNodeByModel(f);
            $KW.HStrip.initializePageView(f, false, e);
            $KW.touch.computeWidths(e, f);
            var d = new $KW.touch.pageviewScroller(e, {
              widgetModel: f
            });
            $KG[e.id] = d
          }
        }
        break
    }
  },
  render: function(a, e) {
    if (a.data) {
      a.masterdata = a.data[0 + IndexJL];
      a.key = a.data[1 + IndexJL]
    }
    a.focusedindex = a.selectedindex = a.focusedindex || a.selectedindex || null;
    a.focuseditem = a.selecteditem = a.focuseditem || a.selecteditem || null;
    a.context = e;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a.selectedItem = a.selecteditem;
      a.selectedIndex = a.selectedindex
    }
    var c = $KW.skins.getMarginSkin(a, e) + $KW.skins.getPaddingSkin(a);
    var f = (!$KW.Utils.isWidgetVisible(a, e) ? " hide" : "") + (a.skin ? (" " + a.skin) : "");
    if (e.ispercent === false) {
      c += " display: inline-block;"
    } else {
      f += " " + $KW.skins.getMarAdjustedContainerWeightSkin(a, 100)
    }
    if (a.imagewhiledownloading) {
      new Image().src = $KU.getImageURL(a.imagewhiledownloading)
    }
    a.imagewhiledownloading = a.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
    var d = $KW.Utils.getBaseHtml(a, e);
    var b = a.viewtype;
    var g = "";
    if (b == "pageview") {
      g = "<div" + d + "name='touchcontainer_HStrip' class='" + f + " kstripcontainer' style='" + c + "'>";
      g += "<div id='imgs' class='kstrip' style='" + (!kony.appinit.useTransition ? "position:relative" : "") + "'>";
      g += "</div></div>";
      if (!kony.appinit.useTransition) {
        g += "<div class='ktable kwt100' id='" + a.pf + "_" + a.id + "_footer'></div>"
      }
    } else {
      g = "<div" + d + "class='" + f + "' style='" + c + "'>";
      g += this.generateImages(a, a.masterdata || [], IndexJL);
      g += "</div>"
    }
    return g
  },
  generateImages: function(m, j, g, l) {
    var k = "";
    var h = l || m.key || "iurl";
    for (var e = IndexJL; e < (j.length); e++) {
      var c = j[e][h];
      if (c) {
        var f = true;
        if ($KU.inArray($KU.imgCache, c, true)) {
          f = false
        }
        var d = "";
        c = $KU.getImageURL(c);
        k += "<span " + (f ? ("style='background:url(" + $KU.getImageURL(m.imagewhiledownloading) + ") center center no-repeat;display:inline-block;min-height:30px;min-width:30px'") : "") + ">";
        k += "<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + c + "' id='" + m.pf + "_" + m.id + "_img' kformname = '" + m.pf + "' index= " + g + " kwidgettype='" + m.wType + "'" + (m.context.tabpaneID ? "ktabpaneid='" + m.context.tabpaneID + "'" : "") + " onload='$KU.imgLoadHandler(arguments[0],this)' onerror='$KU.imgLoadHandler(arguments[0],this)' ";
        if (m.spacebetweenimages) {
          var b = Math.ceil(parseInt(m.spacebetweenimages) / 4);
          d += "margin:" + b + "px;"
        }
        if (m.heightwidth || ((m.referencewidth || m.referenceheight) && m.imagescalemode == constants.IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS)) {
          var a = m.heightwidth ? m.heightwidth.split(",") : [m.referenceheight, m.referencewidth];
          d += (parseInt(a[1]) != 0 ? ("width:" + a[1] + "px;") : "") + (parseInt(a[0]) != 0 ? ("height:" + a[0] + "px;") : "")
        }
        d += "opacity:0;" + ((kony.appinit.isIE7 || kony.appinit.isIE8) ? "" : "display:none;");
        k += (d ? ("style= '" + d + "'") : "") + " /></span>"
      }
      g++
    }
    return k
  },
  setData: function(b, a, d) {
    if (a && $KU.isArray(a)) {
      this.modifyContent(b, a, "setdata", null, d)
    } else {
      var c = $KU.getNodeByModel(b);
      if (c) {
        $KU.toggleVisibilty(c, a, b)
      }
    }
  },
  addAll: function(b, a, c) {
    (a && $KU.isArray(a)) && this.modifyContent(b, a, "addall", null, c)
  },
  removeAll: function(a) {
    this.modifyContent(a, [], "removeall")
  },
  addDataAt: function(a, b, c) {
    (!isNaN(c) && c >= IndexJL && b instanceof Object) && this.modifyContent(a, b, "addat", c, a.key)
  },
  removeAt: function(a, b) {
    (!isNaN(b) && b >= IndexJL) && this.modifyContent(a, [], "removeat", b)
  },
  setDataAt: function(a, b, c) {
    (!isNaN(c) && c >= IndexJL && b instanceof Object) && this.modifyContent(a, b, "setdataat", c, a.key)
  },
  modifyContent: function(b, a, g, e, f) {
    if (b) {
      $KW.Utils.updateContent(b, "masterdata", a, g, e);
      b.canUpdateUI = false;
      b.data = IndexJL ? [null, b.masterdata, f] : [b.masterdata, f];
      b.canUpdateUI = true;
      f && (b.key = f);
      var d = $KU.getNodeByModel(b);
      if (d) {
        switch (g) {
          case "addat":
          case "setdata":
            d.innerHTML = this.generateImages(b, b.masterdata, IndexJL, f);
            break;
          case "setdataat":
            var c = d.childNodes[IndexJL ? (e - 1) : e] && d.childNodes[IndexJL ? (e - 1) : e].childNodes[0];
            if (c) {
              c.src = $KU.getImageURL(a[b.key])
            }
            break;
          case "addall":
            var e = d.childNodes.length;
            d.innerHTML += this.generateImages(b, a, e + IndexJL, f);
            break;
          case "removeall":
            d.innerHTML = "";
            break;
          case "removeat":
            if (d.childNodes[e - IndexJL]) {
              d.removeChild(d.childNodes[e - IndexJL]);
              $KU.adjustNodeIndex(d, e, "index")
            }
            break;
          default:
        }
        b.masterdata && $KU.toggleVisibilty(d, b.masterdata, b)
      }
    }
  },
  eventHandler: function(a, f) {
    var d = f.id;
    d = (f.tagName == "IMG") ? d.split("_")[1] : $KU.getElementID(d);
    var c = $KU.getModelByNode($KU.getElementById(f.getAttribute("kformname") + "_" + d));
    var b = f.getAttribute("index");
    if (b && c) {
      c.canUpdateUI = false;
      c.focusedindex = c.selectedindex = b;
      c.canUpdateUI = true;
      c.focuseditem = c.selecteditem = c.masterdata[b];
      var e = $KU.returnEventReference(c.onclick || c.onselection);
      e && e.call(c, c)
    }
  }
};
$KW.Browser = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Browser", this.orientationHandler)
  },
  initializeView: function(a) {
    $KU.setScrollBoxesHeight(a, "Browser")
  },
  orientationHandler: function(b, a) {
    $KU.setScrollBoxesHeight(b, "Browser")
  },
  updateView: function(e, c, b, a) {
    switch (c) {
      case "requesturlconfig":
        if (IndexJL) {
          e.url = b.url;
          e.method = b.requestmethod;
          e.data = b.requestdata
        }
        var d = $KU.getNodeByModel(e);
        if (d) {
          this.openUrllink(e.url, e.method, e.data, [e.pf, e.id].join("_"))
        }
        break;
      case "htmlstring":
        var d = $KU.getNodeByModel(e);
        if (d) {
          d.innerHTML = b
        }
        break
    }
  },
  openUrllink: function(d, g, f, c) {
    if (d) {
      if (f && !f[0].length == 0) {
        var b = [];
        if (f instanceof Array && f[0] instanceof Array) {
          for (var e = 0; e < f.length; e++) {
            b.push([f[e][0], f[e][1]].join("="))
          }
        } else {
          for (var a in f) {
            b.push(a + "=" + f[a])
          }
        }
        b = b.join("&");
        if (b) {
          d = d + "?" + b
        }
      }
      return window.open(d, c)
    }
  },
  render: function(d, b) {
    var c = $KW.skins.getWidgetSkinList(d, b);
    $KU.updateScrollFlag(d);
    if (d.htmlstring) {
      var e = "";
      e += "<div " + $KW.Utils.getBaseHtml(d, b) + " style='" + $KW.skins.getPaddingSkin(d) + " " + $KW.skins.getBaseStyle(d, b) + "' class='" + c + "'>";
      e += d.htmlstring;
      e += "</div>";
      return e
    } else {
      var a = "webView" + d.id;
      $KG[a] = this.openUrllink(d.url, d.method, d.data, [d.pf, d.id].join("_"));
      return ""
    }
  },
  eventHandler: function(a, b) {},
  unloadEventHandler: function(a) {},
  cangoback: function(a) {},
  cangoforward: function(a) {},
  clearhistory: function(a) {},
  goback: function(a) {},
  goforward: function(a) {},
  reload: function(a) {}
};
$KW.DataGrid = {
  initialize: function() {
    kony.events.addEvent("click", "DataGrid", this.eventHandler)
  },
  initializeView: function(a) {
    this.updateTableHeight(a);
    this.resizeColumns(a);
    if (!kony.appinit.isIE7) {
      this.updateColumnWidth(a)
    }
  },
  updateView: function(d, k, c, e) {
    var g = $KU.getNodeByModel(d);
    if (g && d.enablescrollbar == 1 && d.dockingheader) {
      g = $KU.getElementById(d.pf + "_" + d.id + "_body").childNodes[0]
    }
    switch (k) {
      case "skin":
      case "alternateskin":
      case "rownormalskin":
      case "rowalternateskin":
        g && this.applyRowSkin(d, g);
        break;
      case "focusskin":
      case "rowfocusskin":
        break;
      case "headerskin":
        if (g) {
          var j = g.tHead && g.tHead.rows[0];
          if (j) {
            j.className = c
          }
        }
        break;
      case "gridlinecolor":
      case "gridlinestyle":
        this.applyCellBorder(d);
        break;
      case "showcolumnheaders":
        if (g) {
          var j = g.tHead && g.tHead.rows[0];
          if (j) {
            if (c) {
              j.style.display = ""
            } else {
              j.style.display = "none"
            }
          }
        }
        break;
      case "ismultiselect":
        if (!c && d.selectedindices) {
          d.selectedindices = d.selecteditems = null;
          if (kony.appinit.isIE7 || kony.appinit.isIE8) {
            d.selectedItems = d.selectedIndices = null
          }
          this.setSelectedItems(d, true)
        }
        break;
      case "data":
        $KU.isArray(c) && this.modifyContent(d, c, "setdata");
        break;
      case "columnheadersconfig":
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          if (c) {
            var b = c;
            var l = [];
            for (var f = 0; f < b.length; f++) {
              var a = {};
              a.columnid = b[f].columnid || b[f].columnID;
              a.columntype = b[f].columntype || b[f].columnType;
              a.columnheadertext = b[f].columnheadertext || b[f].columnHeaderText;
              a.columnheadertemplate = b[f].columnheadertemplate || b[f].columnHeaderTemplate;
              a.columndatatemplate = b[f].columndatatemplate || b[f].columnDataTemplate;
              a.columnwidthinpercentage = b[f].columnwidthinpercentage || b[f].columnWidthInPercentage;
              a.columncontentalignment = b[f].columncontentalignment || b[f].columnContentAlignment;
              a.columnonclick = b[f].columnonclick || b[f].columnOnClick;
              l.push(a)
            }
            d.columnheadersconfig = l
          }
        }
        if (g) {
          var h = $KW.DataGrid.render(d, d.context);
          g.parentNode.innerHTML = h
        }
        break
    }
  },
  render: function(c, b) {
    c.context = b;
    this.initializeGrid(c);
    var a = c.parent;
    if ($KU.isFlexContainer(a)) {
      c.layoutConfig.self = true
    }
    return this.create(c, b)
  },
  initializeGrid: function(a) {
    if (!a.columnheadersconfig) {
      return
    }
    a.rowcount = (a.data && a.data.length - IndexJL) || 0;
    a.gridlinestyle = a.gridlinestyle || "solid";
    a.gridlinecolor = a.gridlinecolor || "666666";
    a.focusedindex = a.selectedindex = a.focusedindex || a.selectedindex || null;
    a.focuseditem = a.selecteditem = a.focuseditem || a.selecteditem || null;
    a.selectedindices = a.selectedindices || null;
    a.selecteditems = a.selecteditems || null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a.selectedItems = a.selecteditems;
      a.selectedIndices = a.selectedindices;
      a.selectedItem = a.selecteditem;
      a.selectedIndex = a.selectedindex
    }
    if (a.ismultiselect && a.selectedindices && !a.selecteditems) {
      this.setSelectedItems(a)
    }
    a.cellBorder = "thin " + a.gridlinestyle + " #" + a.gridlinecolor.substr(0, 6)
  },
  create: function(k, a) {
    var j = k.data || (IndexJL ? [null] : []);
    var d = $KW.skins.getWidgetSkinList(k, k.context, j);
    var c = $KW.skins.getMarginSkin(k, a);
    var i = "";
    var b = d.split(" ");
    if (a.isPercent == true) {
      b[1] = ""
    }
    d = b.join(" ");
    if ((k.enablescrollbar == 1 && !k.dockingheader) || $KU.isFlexWidget(k)) {
      i += "<div class='" + d + "' style='overflow-y: auto; overflow-x: hidden;border-collapse:collapse;" + c + "'>";
      i += "<table style='width:100%;border-collapse:collapse;table-layout:fixed;'  " + $KW.Utils.getBaseHtml(k, k.context) + ">"
    } else {
      var h = "border-collapse:collapse;table-layout:fixed;";
      if (a.ispercent == false) {
        h += " display: inline-block;"
      }
      i += "<table style='" + h + c + "' class='" + d + "' " + $KW.Utils.getBaseHtml(k, k.context) + ">"
    }
    var g = k.columnheadersconfig;
    if (g) {
      var e = this.headerBuilder(g, k);
      i += this.appendRowTag(k, e, true);
      var f = this.createBody(k, j);
      i += this.appendRowTag(k, f || [], false, 1, true, true)
    }
    i += "</table>";
    if ((k.enablescrollbar == 1 && !k.dockingheader) || $KU.isFlexWidget(k)) {
      i += "</div>"
    }
    return i
  },
  headerBuilder: function(g, p) {
    p.columnids = [];
    p.columntype = [];
    for (var e = IndexJL; e < g.length; e++) {
      p.columnids.push(g[e].columnid);
      p.columntype.push(g[e].columntype)
    }
    var l = $KW.skins.getBaseStyle(p);
    var d = "word-wrap:break-word;border:" + p.cellBorder + " ; font-weight:inherit;";
    var k = "<th id='{id}' style='overflow:hidden;" + l + d + "' width='{width}%' class='{class}' type='{type}' colno='{colno}' colindex='{colindex}'>";
    var n = null;
    var b = "";
    var j = [];
    var o = "";
    for (var e = IndexJL; e < g.length; e++) {
      o = g[e];
      var a = (o.columnwidthinpercentage || 0);
      var h = o.columncontentalignment || "";
      h = $KW.skins.getContentAlignment(p, h);
      n = k.replace(/\{id\}/g, o.columnid);
      n = n.replace(/\{width\}/g, a);
      n = n.replace(/\{class\}/g, h);
      n = n.replace(/\{type\}/g, o.columntype);
      n = n.replace(/\{colno\}/g, e);
      n = n.replace(/\{colindex}/g, "0," + e);
      var f = o.columnheadertemplate;
      if (f) {
        n = n.replace(/\{colindex}/g, e);
        var m = f.template;
        var c = f.data;
        p.widgetsData = c;
        if (m) {
          p.counter = 0;
          n += $KW.Utils.handleLayout(p, m, c)
        }
        p.widgetsData = "";
        b = n + "</th>"
      } else {
        b = n + ($KU.escapeHTMLSpecialEntities(o.columnheadertext) || "") + "</th>"
      }
      j.push(b)
    }
    return j
  },
  createBody: function(f, b) {
    var d;
    var l = $KW.skins.getBaseStyle(f);
    if (b.length > IndexJL) {
      var q = "word-wrap:break-word;border:" + f.cellBorder;
      var g = "<td id='{id}' width='{width}%' style='overflow:hidden;" + l + q + "' class='{class}' colindex='{colindex}' >{text}</td>";
      var e = "<td id='{id}' width='{width}%' style='overflow:hidden;" + l + q + "' class='{class}' colindex='{colindex}'><img src={src} class='{class}' onload='$KW.DataGrid.imgLoadHandler(arguments[0],this)'></td>";
      var w = null;
      var z = [];
      var x = 0;
      var n, h = "";
      var a = 1;
      f.counter = 1;
      x = f.columnids.length;
      for (var v = IndexJL; v < b.length; v++) {
        z[v - IndexJL] = [];
        for (var t = 0; t < x; t++) {
          n = f.columnids[t];
          h = f.columnheadersconfig[t + IndexJL];
          var c = f.columntype[t];
          var p = (h.columnwidthinpercentage || 0);
          var r = "";
          a = 1;
          var o = v + "," + t;
          if (b[v]["metainfo"]) {
            r = b[v]["metainfo"][n + "_skin"];
            r = r || ""
          }
          var s = h.columncontentalignment || "";
          s = $KW.skins.getContentAlignment(f, s);
          c = c || "text";
          if (c == "text") {
            var k = (b[v][n] && b[v][n] != null) ? b[v][n] : "";
            k = k.replace(/\$0/g, "$$$$0");
            k = k.replace(/\$_/g, "$$$$_");
            w = g.replace(/\{text\}/g, $KU.escapeHTMLSpecialEntities(k));
            w = w.replace(/\{class\}/g, (r + " " + s + " " + l))
          } else {
            if (c == "image") {
              var u = b[v][n] && $KU.getImageURL(b[v][n]);
              w = e.replace(/\{src\}/g, u || "''");
              w = w.replace(/\{class\}/g, s + " " + l)
            } else {
              if (c == "template") {
                var m = b[v][n];
                if (m.metainfo) {
                  if (m.metainfo["colspan"]) {
                    a = m.metainfo["colspan"]
                  }
                }
                w = "<td id='{id}' width='{width}%' style='overflow:hidden;" + l + q + "' class='{class}' colindex='{colindex}' colspan='" + a + "'>";
                w = w.replace(/\{class\}/g, (r + " " + s + " " + l));
                var y = m.template || h.columndatatemplate;
                if (y && m) {
                  f.widgetsData = m;
                  w += $KW.Utils.handleLayout(f, y, m)
                }
                w += "</td>"
              }
            }
          }
          w = w.replace(/\{colindex\}/g, o);
          w = w.replace(/\{width\}/g, p);
          w = w.replace(/\{id}/g, n);
          z[v - IndexJL][t] = w;
          t = t + (a - 1)
        }
        f.counter++
      }
    }
    return z
  },
  appendRowTag: function(n, l, k, g, b, o) {
    var e = "";
    if (k == true) {
      e += "<thead><tr index=0 " + $KW.Utils.getBaseHtml(n, n.context) + (n.headerskin ? " class='" + n.headerskin + "'" : "") + (n.showcolumnheaders != "undefined" && n.showcolumnheaders == false ? " style='display:none'" : "") + ">";
      if (n.enablescrollbar == 1 && n.dockingheader) {
        e += "<td colspan='" + n.columnheadersconfig.length + "'><div><table id='" + n.pf + "_" + n.id + "_head' width='100%' style='border-collapse:collapse;table-layout: fixed;'  ><tr >"
      }
      for (var d = 0; d < l.length; d++) {
        e += l[d]
      }
      if (n.enablescrollbar == 1 && n.dockingheader) {
        e += "</tr></table></div></td>"
      }
      e += "</tr></thead>"
    } else {
      var f = n.rowalternateskin || n.alternateskin || "";
      var a = n.rownormalskin || n.skin || "";
      if (n.enablescrollbar == 1 && n.dockingheader && b) {
        e += "<tr><td colspan='" + n.columnheadersconfig.length + "'><div style='width:100%;overflow-y: auto; overflow-x: hidden;border-collapse:collapse;' id='" + n.pf + "_" + n.id + "_body' name='scrollablewidget_" + n.wType + "'><table style='border-collapse:collapse;width:100%' " + $KW.Utils.getBaseHtml(n, n.context) + " >"
      }
      if (o) {
        e += "<tbody>"
      }
      if (l) {
        for (var d = 0; d < l.length; d++) {
          var h = n.data[d + IndexJL].metainfo;
          var m = (h && h.skin) || ((d % 2 != 0 && f) ? f : a);
          if (n.ismultiselect && n.selectedindices) {
            if ($KU.inArray(n.selectedindices, (IndexJL ? g : g - 1))[0] && n.rowfocusskin) {
              m = n.rowfocusskin
            }
          }
          e += "<tr index=" + g + $KW.Utils.getBaseHtml(n, n.context) + (m ? " class='" + m + "'" : "") + ">";
          for (var c = 0; c < n.columnids.length; c++) {
            e += l[d][c]
          }
          e += "</tr>";
          g++
        }
      }
      if (o) {
        e += "</tbody>"
      }
      if (n.enablescrollbar == 1 && n.dockingheader && b) {
        e += "</table></div></td></tr>"
      }
    }
    return e
  },
  imgLoadHandler: function(g, e) {
    g = g || window.event;
    if (!kony.appinit.isIE7 && !kony.appinit.isIE8) {
      e = g.target || g.srcElement
    }
    var d = e.naturalWidth || e.width;
    var c = e.naturalHeight || e.height;
    var b = e.parentNode;
    var h = parseInt($KU.getStyle(b, "padding-left").replace("px", ""), 10) + parseInt($KU.getStyle(b, "padding-right").replace("px", ""), 10);
    var f = b.clientWidth - h;
    if (d > f) {
      e.style.width = f + "px";
      var a = d / c;
      e.style.height = Math.round(1 / a * f) + "px"
    }
  },
  eventHandler: function(d, e) {
    if (!d) {
      d = window.event
    }
    var a = $KU.getParentByAttribute(d.target || d.srcElement, "colindex");
    var b = parseInt(e.getAttribute("index"), 10);
    var c = $KU.getModelByNode(e);
    (b > 0) && $KW.DataGrid.setFocusedIndex(c, e, a, b);
    $KW.DataGrid.rowClickHandler(c, b, a)
  },
  rowClickHandler: function(d, b, a) {
    var c;
    if (b == 0) {
      var e = d.columnheadersconfig[parseInt(a.getAttribute("colno"), 10)];
      c = $KU.returnEventReference(e.columnonclick || e.columnOnClick || "")
    } else {
      c = $KU.returnEventReference(d.onrowselected)
    }
    c && c(d)
  },
  updateData: function(d, a, k, m, b) {
    if (k && m) {
      var g = parseInt(m.getAttribute("index"));
      var h, l;
      if (g == "0") {
        h = $KU.getParentByAttribute(a, "colindex");
        var j = k.columnheadersconfig[h.cellIndex + IndexJL];
        var e = j.columnheadertemplate;
        if (e) {
          l = e.data
        } else {
          l = j.columnheadertext
        }
        var i = parseInt(h.getAttribute("colindex").split(",")[1]);
        k.selectedcellindex = [i, h.id];
        k.selectedcellitem = l
      } else {
        var c = $KU.getParentByAttribute(a, "colindex");
        this.setFocusedIndex(k, m, c, g);
        l = k.focuseditem[c.id]
      }
      l && $KW.Utils.updateContainerMasterData(k, l, d, a);
      if (b) {
        var f = kony.events.executeBoxEvent(d, l, k, "", g);
        if (!f) {
          this.rowClickHandler(k, g, h)
        }
      }
    }
  },
  setFocusedIndex: function(c, e, b, a) {
    if (a > 0) {
      a = IndexJL ? a : a - 1;
      c.selectedindex = c.focusedindex = a;
      c.selecteditem = c.focuseditem = c.data[a];
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItem = c.selecteditem;
        c.selectedIndex = c.selectedindex
      }
      if (!c.ismultiselect) {
        c.selectedindices = IndexJL ? [null, a] : [a];
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          c.selectedIndices = c.selectedindices
        }
        this.setSelectedItems(c, true)
      }
      var d = parseInt(b.getAttribute("colindex").split(",")[1]);
      c.selectedcellindex = [d, b.id];
      c.selectedcellitem = c.focuseditem[b.id]
    }
    c.ismultiselect && this.setSelectedIndices(c, e)
  },
  setSelectedIndices: function(d, g) {
    if (d.ismultiselect) {
      var f = d.selectedindices || (IndexJL ? [null] : []);
      var b = d.selecteditems || (IndexJL ? [null] : []);
      var c = d.focusedindex;
      var a = $KU.inArray(f, c);
      if (a[0]) {
        f.splice(a[1], 1);
        b.splice(a[1], 1);
        if (d.rowfocusskin) {
          var e = this.getRowSkin(d, c);
          g.className = e || ""
        }
      } else {
        f.push(c);
        b.push(d.data[c]);
        d.rowfocusskin && (g.className = d.rowfocusskin)
      }
      d.selectedindices = (f.length > IndexJL) ? f : null;
      d.selecteditems = (b.length > IndexJL) ? b : null;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        d.selectedItems = d.selecteditems;
        d.selectedIndices = d.selectedindices
      }
    }
  },
  setSelectedItems: function(c, f) {
    if (c.selectedindices) {
      c.selecteditems = IndexJL ? [null] : [];
      for (var b = IndexJL; b < c.selectedindices.length; b++) {
        c.data && c.data[c.selectedindices[b]] && c.selecteditems.push(c.data[c.selectedindices[b]])
      }
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItems = c.selecteditems
      }
    }
    if (f) {
      var a = $KU.getNodeByModel(c);
      if (a) {
        var d = a.tBodies[0].rows;
        for (var b = 0; b < d.length; b++) {
          if ((c.selectedindices && $KU.inArray(c.selectedindices, b + IndexJL)[0]) || (!c.ismultiselect && c.selectedindex == b + IndexJL)) {
            d[b].className = c.rowfocusskin
          } else {
            var e = this.getRowSkin(c, b + IndexJL);
            d[b].className = e || ""
          }
        }
      }
    }
  },
  getRowSkin: function(c, b) {
    var e = c.rownormalskin || c.skin || "";
    var d = c.rowalternateskin || c.alternateskin || "";
    var a = c.data[b]["metainfo"];
    return (a && a.skin) ? a.skin : (((parseInt(b, 10) - IndexJL) % 2 != 0 && d) ? d : e)
  },
  updateIndices: function(d, e, b) {
    if (d.data && d.data.length > IndexJL) {
      var f = d.selectedindices;
      if (e == "addat") {
        for (var c = IndexJL; c < f.length; c++) {
          if (f[c] >= b) {
            f[c] = f[c] + 1
          }
        }
      } else {
        var a = $KU.inArray(f, b);
        a[0] && f.splice(a[1], 1);
        for (var c = IndexJL; c < f.length; c++) {
          if (f[c] >= b) {
            f[c] = f[c] - 1
          }
        }
      }
      d.selectedindices = f.length > IndexJL ? f : null;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        d.selectedIndices = d.selectedindices
      }
      this.setSelectedItems(d)
    } else {
      d.selectedindices = d.selecteditems = null;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        d.selectedItems = d.selectedIndices = null
      }
    }
  },
  updateColumnWidth: function(f) {
    var e = document.querySelectorAll("#" + f + " div[name='scrollablewidget_DataGrid']");
    for (var a = 0; a < e.length; a++) {
      var b = e[a];
      var h = b.getAttribute("id");
      h = h.split("_")[1];
      var d = $KU.getModelByNode(b.childNodes[0]);
      if (d.enablescrollbar == 1 && d.dockingheader && b.clientWidth) {
        var g = document.getElementById(d.pf + "_" + d.id + "_head");
        var c = b.offsetWidth - b.clientWidth;
        g.style.width = g.parentNode.offsetWidth - c + "px"
      }
    }
  },
  updateTableHeight: function(f) {
    var e = document.querySelectorAll("#" + f + " table[kwidgettype='DataGrid']");
    var a;
    for (var c = 0; c < e.length; c++) {
      var b = e[c];
      var d = $KU.getModelByNode(b);
      if (d.enablescrollbar == 1 && (d.containerheightinpixel || d.containerheight)) {
        if (d.containerheightinpixel) {
          a = d.containerheightinpixel
        } else {
          if (d.containerheight) {
            a = Math.round((b.offsetWidth * d.containerheight) / 100)
          }
        }
        if (d.dockingheader) {
          $KU.getElementById(b.id + "_body").style.maxHeight = a + "px"
        } else {
          b.parentNode.style.maxHeight = a + "px"
        }
      }
    }
  },
  setData: function(b, a) {
    b.focusedindex = b.focuseditem = b.selectedindex = b.selecteditem = b.selectedindices = b.selecteditems = null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      b.selectedItems = b.selectedIndices = b.selectedItem = b.selectedIndex = null
    }
    $KU.isArray(a) && this.modifyContent(b, a, "setdata")
  },
  addAll: function(c, a, b) {
    $KU.isArray(a) && this.modifyContent(c, a, "addall")
  },
  removeAll: function(a) {
    a.focusedindex = a.focuseditem = a.selectedindex = a.selecteditem = a.selectedindices = a.selecteditems = null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a.selectedItems = a.selectedIndices = a.selectedItem = a.selectedIndex = null
    }
    this.modifyContent(a, IndexJL ? [null] : [], "removeall")
  },
  removeAt: function(b, a) {
    (!isNaN(a) && a >= IndexJL) && this.modifyContent(b, [], "removeat", a)
  },
  setDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "setdataat", b)
  },
  addDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "addat", b)
  },
  setCellData: function(a, d, b, c) {
    (!isNaN(d) && c) && this.modifyContent(a, c, "setcelldata", d, b)
  },
  setHeaderCellDataAt: function(a, b, c) {
    (b && c) && this.modifyContent(a, c, "setheadercelldata", "", b)
  },
  applyCellSkin: function(b, d, c, a) {
    !isNaN(d) && this.modifyContent(b, a, "applycellskin", d, c)
  },
  selectAll: function(b, a) {
    this.modifyContent(b, a, "selectall")
  },
  setTBodyInnerHTML: function(a, c, d) {
    if (!$KU.isIE) {
      a.innerHTML = c
    } else {
      var b = this.createTemp();
      if (d == "setdata") {
        b.innerHTML = "<table>" + c + "</table>";
        while (a.children.length > 0) {
          a.removeChild(a.children[0])
        }
        while (b.firstChild.children.length > 0) {
          a.appendChild(b.firstChild.children[0])
        }
      } else {
        b.innerHTML = "<table><tbody>" + c + "</tbody></table>";
        if (a.tagName == "TABLE") {
          a.appendChild(b.firstChild.firstChild)
        } else {
          a.parentNode.replaceChild(b.firstChild.firstChild, a)
        }
      }
    }
  },
  setTRInnerHTML: function(d, c, b) {
    if (!$KU.isIE) {
      d.innerHTML = c
    } else {
      var a = this.createTemp();
      a.innerHTML = "<table><tbody><tr class='" + d.className + "' index='" + b + "'>" + c + "</tr></tbody></table>";
      d.parentNode.replaceChild(a.firstChild.firstChild.firstChild, d)
    }
  },
  createTemp: function() {
    var a = document.getElementById("__temp");
    if (!a) {
      a = document.createElement("div");
      a.id = "__temp"
    }
    return a
  },
  modifyContent: function(h, B, w, f, t) {
    if (h) {
      if (w != "setcelldata" && w != "applycellskin" && w != "selectall") {
        h.canUpdateUI = false;
        $KW.Utils.updateContent(h, "data", B, w, f);
        h.canUpdateUI = true
      }
      if (h.data) {
        h.rowcount = h.data.length - IndexJL
      }
      var g = $KU.getNodeByModel(h);
      if (h.enablescrollbar == 1 && h.dockingheader) {
        g = $KU.getElementById(h.pf + "_" + h.id + "_body").childNodes[0]
      }
      var q = g && (g.tBodies[0] || g);
      if (q) {
        var k;
        switch (w) {
          case "setdata":
            var y = this.headerBuilder(h.columnheadersconfig, h);
            var e = this.appendRowTag(h, y, true);
            var o = this.createBody(h, B);
            e += this.appendRowTag(h, o, false, 1, false, true);
            this.setTBodyInnerHTML(g, e, "setdata");
            break;
          case "setdataat":
            var B = IndexJL ? [null, B] : [B];
            var u = q.rows[f - IndexJL];
            if (u) {
              var e = this.createBody(h, B)[0].join("")
            }
            this.setTRInnerHTML(u, e, f);
            break;
          case "addall":
            var f = q.rows.length;
            var o = this.createBody(h, B);
            var e = q.innerHTML + this.appendRowTag(h, o, false, f + 1, false, false);
            this.setTBodyInnerHTML(q, e);
            if (h.enablescrollbar == 1 && h.dockingheader) {
              $KU.isIE && (q = $KU.getElementById(h.pf + "_" + h.id + "_body").childNodes[0]);
              var p = q.rows[f];
              p && p.scrollIntoView(true)
            }
            break;
          case "addat":
            var r = (f <= IndexJL) ? 0 : (f > h.rowcount ? h.rowcount : f);
            var c = document.createElement("div");
            var B = IndexJL ? [null, B] : [B];
            c.innerHTML = "<table><tr index=" + r + $KW.Utils.getBaseHtml(h, {
                tabpaneID: g.getAttribute("ktabpaneid")
              }) + "></tr></table>";
            var e = this.createBody(h, B)[0].join("");
            var a = c.firstChild.rows[0];
            if (f >= q.rows.length) {
              q.appendChild(a)
            } else {
              q.insertBefore(a, q.rows[f - IndexJL])
            }
            this.setTRInnerHTML(a, e, f);
            break;
          case "setcelldata":
          case "applycellskin":
          case "setheadercelldata":
            var n = $KU.inArray(h.columnids, t);
            if (n[0]) {
              var A;
              var j;
              k = n[1];
              var z = "";
              var v;
              var m = h.columnheadersconfig[k];
              if (w == "setheadercelldata") {
                if (h.showColumnHeaders) {
                  f = 0;
                  var l = m.columnheadertemplate;
                  if (l && l.template) {
                    z = l.template;
                    l.data = B
                  }
                  A = q.parentNode.tHead.rows[0]
                }
              } else {
                j = h.data[f];
                if (j) {
                  if (w == "setcelldata") {
                    var d = m.columndatatemplate;
                    d && (z = d);
                    j[t] = B;
                    A = q.rows[f - IndexJL]
                  } else {
                    var s = j.metainfo || {};
                    v = s[t + "_skin"];
                    s[t + "_skin"] = B;
                    j.metainfo = s;
                    A = q.rows[f - IndexJL]
                  }
                }
              }
              if (A) {
                if (w == "applycellskin") {
                  if (v) {
                    $KU.removeClassName(A.cells[k], v)
                  }
                  $KU.addClassName(A.cells[k], B)
                } else {
                  if (z) {
                    h.widgetsData = B;
                    A.cells[k].innerHTML = $KW.Utils.handleLayout(h, z, B)
                  } else {
                    A.cells[k].innerHTML = B
                  }
                }
              }
            }
            break;
          case "removeall":
            this.setTBodyInnerHTML(q, "");
            break;
          case "removeat":
            q.rows[f - IndexJL] && q.removeChild(q.rows[f - IndexJL]);
            break;
          case "selectall":
            if (h.ismultiselect && h.data && B) {
              var b = IndexJL ? [null] : [];
              for (var x = IndexJL; x < h.data.length; x++) {
                b.push(x)
              }
              h.selectedindices = b
            }
            if (!B) {
              h.selectedindices = h.selecteditems = null
            }
            if (kony.appinit.isIE7 || kony.appinit.isIE8) {
              h.selectedItems = h.selecteditems;
              h.selectedIndices = h.selectedindices
            }
            this.setSelectedItems(h, true);
            break;
          default:
        }
        this.adjustNodeIndex(q);
        if (w == "addat" || w == "removeat") {
          h.ismultiselect && h.selectedindices && this.updateIndices(h, w, f)
        }
        this.toggleVisibilty(h, h.data);
        if (w == "addat" || w == "removeat" || w == "addall") {
          this.applyRowSkin(h)
        }
        this.adjustFlexContainers(h, w, f, k)
      }
      if (!kony.appinit.isIE7) {
        this.updateColumnWidth(h.pf)
      }
    }
  },
  adjustNodeIndex: function(c) {
    var d = c.childNodes;
    if (d) {
      for (var b = 0; b < d.length; b++) {
        d[b].setAttribute("index", b + 1);
        cells = d[b].cells;
        for (var a = 0; cells && a < cells.length; a++) {
          cells[a].setAttribute("colindex", b + "," + a)
        }
      }
    }
  },
  addArray: function(c, b) {
    for (var a = 0; a < b.length; a++) {
      c.push(b[a])
    }
    return c
  },
  toggleVisibilty: function(a, d) {
    var c = $KU.getNodeByModel(a);
    var b = $KU.isFlexWidget(a);
    if (b) {
      c = c.parentNode
    }
    if (d && d.length > 0 && a.isvisible) {
      c.style.display = "";
      $KU.removeClassName(c, "hide")
    } else {
      c.style.display = "none"
    }
  },
  applyRowSkin: function(d) {
    var c = $KU.getNodeByModel(d);
    var f = c.tBodies[0].rows;
    var h = d.rownormalskin || d.skin || "";
    var e = d.rowalternateskin || d.alternateskin || "";
    if (h || e) {
      for (var b = 0; b < f.length; b++) {
        var a = d.data[b + IndexJL]["metainfo"];
        var g = (a && a.skin) ? a.skin : ((b % 2 != 0 && e) ? e : h);
        if (d.ismultiselect && d.rowfocusskin && d.selectedindices && $KU.inArray(d.selectedindices, b + IndexJL)[0]) {
          f[b].className = d.rowfocusskin
        } else {
          f[b].className = g
        }
      }
    }
  },
  applyCellBorder: function(c) {
    var a = $KU.getNodeByModel(c);
    c.cellBorder = "thin " + c.gridlinestyle + " #" + c.gridlinecolor.substr(0, 6);
    if (a) {
      var b = function(f) {
        for (var e = 0; e < f.length; e++) {
          var g = f[e];
          for (var d = 0; d < g.cells.length; d++) {
            g.cells[d].style.border = c.cellBorder
          }
        }
      };
      b(a.tHead && a.tHead.rows);
      if (c.enablescrollbar == 1 && c.dockingheader) {
        a = $KU.getElementById(c.pf + "_" + c.id + "_body").childNodes[0]
      }
      b(a.tBodies[0].rows)
    }
  },
  resizeColumns: function(e) {
    var d = document.querySelectorAll("#" + e + " table[kwidgettype='DataGrid']");
    for (var b = 0; b < d.length; b++) {
      var a = d[b];
      var c = $KU.getModelByNode(a);
      if (c.allowcolumnresize) {
        c.crInstance = new $KW.DataGrid.ColumnResize(a, c);
        c.crInstance.init()
      }
    }
  },
  adjustColumnResizeGrips: function(f) {
    var e = document.querySelectorAll("#" + f + " table[kwidgettype='DataGrid']");
    for (var b = 0; b < e.length; b++) {
      var a = e[b];
      var d = $KU.getModelByNode(a);
      if (d.allowcolumnresize && d.crInstance) {
        var c = d.crInstance;
        c.syncGrips();
        c.syncColWidth()
      }
    }
  },
  adjustFlexContainers: function(e, c, g, h) {
    $KU.needOptimization = false;
    var a = $KU.getNodeByModel(e);
    var f = "FlexContainer";
    switch (c) {
      case "setdata":
        this.adjustFlexContainersInDataGrid(e, a);
        break;
      case "setdataat":
      case "addat":
        var j = a.tBodies[0].rows[g];
        j && this.adjustFlexContainersInRows(j);
        break;
      case "addall":
        var k = a.tBodies[0].rows;
        for (var d = g; d < k.length; d++) {
          this.adjustFlexContainersInRows(k[d])
        }
        break;
      case "setcelldata":
      case "setheadercelldata":
        var b = a.querySelector('[colindex="' + g + "," + h + '"]');
        b && this.adjustFlexContainer(b);
        break
    }
    $KU.needOptimization = true
  },
  adjustFlexContainersInDataGrid: function(b, a) {
    var e = b.data;
    if (e.length > 0) {
      var d = a.tHead.rows[0];
      d && this.adjustFlexContainersInRows(d);
      var f = a.tBodies[0].rows;
      for (var c = 0; c < f.length; c++) {
        this.adjustFlexContainersInRows(f[c])
      }
    }
  },
  adjustFlexContainersInRows: function(c) {
    var a = c.cells;
    for (var b = 0; b < a.length; b++) {
      this.adjustFlexContainer(a[b])
    }
  },
  adjustFlexContainer: function(a) {
    var c = a.querySelector('div[kwidgettype="FlexContainer"]');
    if (c) {
      var b = $KU.getModelByNode(c);
      $KW.FlexContainer.forceLayout(b, c.parentNode)
    }
  }
};
$KW.DataGrid.ColumnResize = function(a, b) {
  this.dragColumns = a.rows[0].cells;
  this.minWidth = 17;
  if (!this.dragColumns) {
    return
  }
  this.t = $(a);
  this.t.g = [];
  this.t.c = [];
  this.t.w = this.t.width();
  this.t.cs = parseInt(kony.appinit.isIE ? a.cellSpacing || a.currentStyle.borderSpacing : $KU.getStyle(a, "border-spacing")) || 2;
  this.t.b = parseInt(kony.appinit.isIE ? a.border || a.currentStyle.borderLeftWidth : $KU.getStyle(a, "border-left-width")) || 1;
  this.t.ln = this.dragColumns.length;
  this.saveBodyCursor;
  this.cGrips = document.createElement("div");
  this.cGrips.id = a.id + "_cGrips";
  this.cGrips.className = "colgrips";
  this.cGrips.style.margin = $KU.joinArray(b.margin, "% ") + "%";
  a.parentNode.insertBefore(this.cGrips, a);
  this.t.gc = this.t.prev()
};
$KW.DataGrid.ColumnResize.prototype = {
  init: function() {
    for (var a = 0; a < this.dragColumns.length; a++) {
      if (a != this.t.ln - 1) {
        this.cGrips.innerHTML += "<div class='colgrip' index='" + a + "'><div class='colresizer'></div></div>"
      } else {
        this.cGrips.innerHTML += "<div class='lastcolgrip' index='" + a + "'></div>"
      }
      var b = {
        col: this.dragColumns[a]
      };
      b.w = this.width(this.dragColumns[a]);
      this.t.c.push(b)
    }
    this.handleEventListener = this.handleEvent.bind(this);
    for (var a = 0; a < this.cGrips.children.length; a++) {
      this.t.g.push({
        grip: this.cGrips.children[a]
      });
      if (a < this.t.ln - 1) {
        kony.events.addEventListener(this.cGrips.childNodes[a], "mousedown", this.handleEventListener)
      }
    }
    this.syncGrips()
  },
  syncGrips: function() {
    this.t.gc.style.width = this.width(this.t) + "px";
    for (var a = 0; a < this.t.ln; a++) {
      var b = this.t.c[a].col;
      this.t.g[a].grip.style.left = this.offset(b).left - this.offset(this.t).left + b.offsetWidth + this.t.cs / 2 + "px";
      this.t.g[a].grip.style.height = this.t.c[0].col.offsetHeight + "px"
    }
  },
  handleEvent: function(a) {
    switch (a.type) {
      case "mousedown":
        return this.startColumnDrag(a);
        break;
      case "mousemove":
        return this.columnDrag(a);
        break;
      case "mouseup":
        return this.stopColumnDrag(a);
        break
    }
  },
  startColumnDrag: function(f) {
    var d = f.currentTarget || f.srcElement.parentNode;
    this.curGripNo = parseInt(d.getAttribute("index"));
    var b = this.t.g[this.curGripNo];
    b.ox = f.pageX || f.clientX;
    b.l = this.position(b.grip).left;
    kony.events.addEventListener(document, "mousemove", this.handleEventListener);
    kony.events.addEventListener(document, "mouseup", this.handleEventListener);
    this.saveBodyCursor = document.body.style.cursor;
    document.body.style.cursor = "w-resize";
    if (this.t.c[this.curGripNo].l) {
      for (var a = 0, h; a < this.t.ln; a++) {
        h = this.t.c[a];
        h.l = false;
        h.w = this.width(h.col)
      }
    }
    kony.events.preventDefault(f)
  },
  width: function(a) {
    return a.offsetWidth - this.xPadding(a) - this.xBorder(a)
  },
  xPadding: function(a) {
    return parseFloat($KU.getStyle(a, "padding-left").replace("px", "")) + parseFloat($KU.getStyle(a, "padding-right").replace("px", ""))
  },
  xBorder: function(a) {
    if (kony.appinit.isIE8 && a.tagName == "TH") {
      return parseFloat($KU.getStyle(a, "borderSpacing").split(" ")[1])
    } else {
      return parseFloat($KU.getStyle(a, "border-left-width").replace("px", "")) + parseFloat($KU.getStyle(a, "border-right-width").replace("px", ""))
    }
  },
  offset: function(c) {
    var b, g, e, h, a, d, f = {
        top: 0,
        left: 0
      },
      i = c.ownerDocument;
    b = i.documentElement;
    g = i.body;
    if (!i) {
      return
    }
    if (typeof c.getBoundingClientRect !== "undefined") {
      f = c.getBoundingClientRect()
    }
    e = b.clientTop || g.clientTop || 0;
    h = b.clientLeft || g.clientLeft || 0;
    a = window.pageYOffset || b.scrollTop;
    d = window.pageXOffset || b.scrollLeft;
    return {
      top: f.top + a - e,
      left: f.left + d - h
    }
  },
  position: function(c) {
    var b = this.offsetParent(c),
      d = this.offset(c),
      a = this.root.test(b.nodeName) ? {
        top: 0,
        left: 0
      } : this.offset(b);
    d.top -= parseFloat($KU.getStyle(c, "margin-top")) || 0;
    d.left -= parseFloat($KU.getStyle(c, "margin-left")) || 0;
    a.top += parseFloat($KU.getStyle(b, "border-top-width")) || 0;
    a.left += parseFloat($KU.getStyle(b, "border-left-width")) || 0;
    return {
      top: d.top - a.top,
      left: d.left - a.left
    }
  },
  offsetParent: function(b) {
    var a = b.offsetParent || document.body;
    while (a && (!this.root.test(a.nodeName) && $KU.getStyle(b, "position") === "static")) {
      a = a.offsetParent
    }
    return a || document.body
  },
  columnDrag: function(h) {
    var g = this.t.g[this.curGripNo];
    var b = (h.pageX || h.clientX) - g.ox + g.l;
    var j = this.minWidth,
      f = this.curGripNo;
    var c = this.t.cs * 1.5 + j + this.t.b;
    var a = f == this.t.ln - 1 ? this.width(this.t) - c : this.position(this.t.g[f + 1].grip).left - this.t.cs - j;
    var d = f ? this.position(this.t.g[f - 1].grip).left + this.t.cs + j : c;
    b = Math.max(d, Math.min(a, b));
    g.x = b;
    g.grip.style.left = b + "px";
    this.syncCols();
    this.syncGrips();
    kony.events.preventDefault(h)
  },
  stopColumnDrag: function(b) {
    kony.events.removeEventListener(document, "mousemove", this.handleEventListener);
    kony.events.removeEventListener(document, "mouseup", this.handleEventListener);
    document.body.style.cursor = this.saveBodyCursor;
    var a = this.t.g[this.curGripNo];
    if (a.x) {
      this.syncCols(true);
      this.syncGrips()
    }
    kony.events.preventDefault(b)
  },
  syncCols: function(h) {
    var f = this.t.g[this.curGripNo];
    var e = this.curGripNo;
    var g = f.x - f.l,
      j = this.t.c[e],
      d = this.t.c[e + 1];
    var b = j.w + g;
    var a = d.w - g;
    j.col.style.width = b + "px";
    d.col.style.width = a + "px";
    if (h) {
      j.w = b;
      d.w = a
    }
  },
  syncColWidth: function() {
    for (var a = 0; a < this.t.c.length; a++) {
      var b = this.t.c[a];
      b.w = this.width(b.col)
    }
  }
};
$KW.Map = {
  formID: null,
  mapID: null,
  map: null,
  navigateToArgs: null,
  navigateToLocationArgs: null,
  mapScriptRequested: false,
  mapScriptLoaded: false,
  currentLatitude: null,
  currentLongitude: null,
  currentZoom: 15,
  routeToLocationArgs: null,
  initialize: function() {
    kony.events.addEvent("click", "Kinfowindow", this.mapInfoWindowEventHandler);
    kony.events.addEvent("click", "Kstaticmap", this.mapEventHandler);
    kony.events.addEvent("onorientationchange", "Map", this.setMapsHeight)
  },
  initializeView: function(a) {
    if (document.querySelectorAll("div[name=map_canvas]").length > 0) {
      $KW.Map.loadMapScripts()
    }
    $KW.Map.setMapsHeight(a)
  },
  updateView: function(g, j, e, h) {
    switch (j) {
      case "address":
      case "locationdata":
        if ((g.mapsrc === "static") || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
          var l = document.getElementById(g.pf + "_static_map");
          if (!l) {
            return
          }
          var m = l.getAttribute("src");
          if (j == "locationdata") {
            var f = this.getMarkerDataforStaticMaps(g);
            if (m.indexOf("&markers") != -1) {
              l.src = m;
              l.src = l.src.replace(/center=(.*)$/, "");
              var b = "center=" + (!!e.length && e[0].lat || 0) + "," + (!!e.length && e[0].lon || 0) + "&";
              l.src += b;
              l.src += m.match(/markers=(.*)$/)[0] + f
            } else {
              l.src = m + "&markers=" + f
            }
          } else {
            if (m.indexOf("&markers") != -1) {
              m = m.replace(/markers=(.*)$/, "").replace("&markers=", "")
            }
            l.src = m.replace(/center=(.*)&/, "center=" + e.location + "&markers=color:red%7C" + e.location)
          }
        } else {
          var k = $KU.getNodeByModel(g);
          if (!k) {
            return
          }
          if ($KW.Map.mapScriptLoaded) {
            var d = $KU.getElementById("__MainContainer");
            if (!d) {
              $KW.Map.isMainContaineraVailable = false
            } else {
              this.setUpInteractiveCanvasMap()
            }
          } else {
            $KW.Map.loadMapScripts()
          }
        }
        break;
      case "zoom":
      case "zoomlevel":
      case "mode":
        if ($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
          var l = document.getElementById(g.pf + "_static_map");
          if (!l) {
            return
          }
          var m = l.getAttribute("src");
          var a = "";
          switch (parseInt(g.mode, 10)) {
            case 2:
              a = "satellite";
              break;
            case 3:
              a = "hybrid";
              break;
            case 5:
              a = "polygon";
              break;
            case 7:
              a = "terrain";
              break;
            default:
              a = "normal"
          }
          if (j == "mode") {
            l.src = m.replace(/maptype=(.*)&mobile/, ("maptype=" + a + "&mobile"))
          } else {
            if (j == "zoom" || j == "zoomlevel") {
              l.src = m.replace(/zoom(.*)&size/, "zoom=" + parseInt(e) + "&size")
            }
          }
        } else {
          var i = document.querySelectorAll("[name=map_canvas]")[0];
          i && this.setUpInteractiveCanvasMap()
        }
        break;
      case "defaultpinimage":
        var i = document.querySelectorAll("[name=map_canvas]")[0];
        if ((g && g.mapsrc === "static") || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
          var c = $KU.getImageURL(e);
          c = g.newPinimage = location.origin + "/" + c;
          this.setUpInteractiveCanvasMap()
        } else {
          g.defaultpinimage = e;
          i && this.setUpInteractiveCanvasMap()
        }
        break
    }
  },
  loadMapScripts: function() {
    if ("undefined" === typeof google && !$KW.Map.mapScriptRequested) {
      $KW.Map.mapScriptRequested = true;
      var e = document.querySelectorAll("[name=map_canvas]")[0];
      $KW.Map.mapID = e && e.id.split("_")[1] || "";
      var c = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
      var b = c && c.mapClientId;
      var d = document.createElement("script");
      d.type = "text/javascript";
      d.src = "//maps-api-ssl.google.com/maps/api/js?sensor=false" + (!!b && ("&client=" + b) || "") + "&callback=$KW.Map.setUpInteractiveCanvasMap";
      document.body.appendChild(d)
    } else {
      return
    }
    var a = $KU.getElementById("__MainContainer");
    if (!a) {
      $KW.Map.isMainContaineraVailable = false
    } else {
      $KW.Map.isMainContaineraVailable = true
    }
  },
  mapEventHandler: function(b, f) {
    var h = f.id;
    var e = document.getElementById(f.getAttribute("kformname") + "_static_map");
    var g = e.getAttribute("src");
    var a = g.match(/center=(.*)&/);
    var d = a[1].split(",");
    if (h.indexOf("_left") != -1) {
      d[1] = parseFloat(d[1]) - 0.002;
      e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
    } else {
      if (h.indexOf("_right") != -1) {
        d[1] = parseFloat(d[1]) + 0.002;
        e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
      } else {
        if (h.indexOf("_up") != -1) {
          d[0] = parseFloat(d[0]) - 0.002;
          e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
        } else {
          if (h.indexOf("_down") != -1) {
            d[0] = parseFloat(d[0]) + 0.002;
            e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
          } else {
            if (h.indexOf("_zoomin") != -1) {
              var c = g.match(/zoom=(.*)&size/);
              c = parseInt(c[1]) + 1;
              e.src = g.replace(/zoom(.*)&size/, "zoom=" + c + "&size")
            } else {
              if (h.indexOf("_zoomout") != -1) {
                var c = g.match(/zoom=(.*)&size/);
                c = parseInt(c[1]) - 1;
                e.src = g.replace(/zoom(.*)&size/, "zoom=" + c + "&size")
              }
            }
          }
        }
      }
    }
  },
  mapInfoWindowEventHandler: function(c, f) {
    while (!f.getAttribute("kwidgettype")) {
      f = f.parentNode
    }
    var e = f.getAttribute("kinfoid");
    var a = $KU.getElementID(e);
    var g = f.getAttribute("mappointno");
    var b = kony.model.getWidgetModel($KW.Map.formID, a);
    var d = $KU.returnEventReference(b.onselection);
    if (isNaN(parseInt(g, 10))) {
      d && d.call(b, b, b[b.id + "navigatetoloc"])
    } else {
      d && d.call(b, b, b.locationdata[parseInt(g, 10)])
    }
  },
  render: function(g, a) {
    g.needScroller = true;
    this.formID = g.pf;
    this.mapID = g.id;
    var d = $KW.skins.getWidgetSkinList(g, a);
    var f = "",
      i = "";
    var c = g.mapsrc || g.mapsource;
    if ((c === "static") || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
      var o = $KW.skins.getVisibilitySkin(g);
      var b = "";
      switch (parseInt(g.mode, 10)) {
        case 2:
          b = "satellite";
          break;
        case 3:
          b = "hybrid";
          break;
        case 5:
          b = "polygon";
          break;
        case 7:
          b = "terrain";
          break;
        default:
          b = "normal"
      }
      var h = g.locationdata || g.address;
      var n = 0;
      var k = 0;
      var p = "";
      if (h && h[IndexJL]) {
        n = (h[IndexJL].lat == undefined) ? h[IndexJL][IndexJL] : h[IndexJL].lat;
        k = (h[IndexJL].lat == undefined) ? h[IndexJL][1 + IndexJL] : h[IndexJL].lon;
        p = this.getMarkerDataforStaticMaps(g)
      }
      var q = $KU.getImageURL(g.upimg ? g.upimg : "tupF.png");
      var s = $KU.getImageURL(g.downimg ? g.downimg : "tdownF.png");
      var m = $KU.getImageURL(g.rightimg ? g.rightimg : "trightF.png");
      var l = $KU.getImageURL(g.leftimg ? g.leftimg : "tleftF.png");
      var r = $KU.getImageURL(g.zoomin ? g.zoomin : "zoomin.png");
      var e = $KU.getImageURL(g.zoomout ? g.zoomout : "zoomout.png");
      i = "<table><tr><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_up_event' src = '" + q + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_down_event' src = '" + s + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_right_event' src = '" + m + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_left_event' src = '" + l + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomin_event' src = '" + r + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomout_event' src = '" + e + "'/></td></tr></table>";
      if (g.disabled) {
        i = "<table style='position:relative;'><tr><td><div style='background:#fff;bottom:0;left:0;opacity:0.5;filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=50);filter:alpha(opacity=50);position:absolute;right:0;top:0;z-index:2147483647' class='google_map_mask'></div><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_up_event' src = '" + q + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_down_event' src = '" + s + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_right_event' src = '" + m + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_left_event' src = '" + l + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomin_event' src = '" + r + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomout_event' src = '" + e + "'/></td></tr></table>"
      }
      f = "<div id='" + g.pf + "_" + g.id + "'class='" + o + "' style='" + $KW.skins.getMarginSkin(g, a) + $KW.skins.getPaddingSkin(g) + "' kwidgettype='Map' >" + i;
      f += "<img id='" + g.pf + "_static_map' alt='Map Widget' style='width:100%;' src='http://maps.google.com/maps/api/staticmap?sensor=false&zoom=15&size=400x400&format=png32&maptype=" + b + "&mobile=true&center=" + n + "," + k + "&markers=" + p + "'/></div>"
    } else {
      if (c == "native") {
        g.widgetdata = "http://maps.google.com/maps?q=17.447326,78.371358";
        f = "<a style='text-decoration:none;' href='" + g.widgetdata + "'>Google Map Name</a>"
      } else {
        var j = "";
        if (g.mapview === "5" || g.mode == "5") {
          j = " mapview='polygon' "
        }
        f = "<div kwidgettype='googlemap' kformname= '" + g.pf + "' id='" + g.pf + "_" + g.id + "' name='map_canvas'" + j + " style='height:500px;" + $KW.skins.getMarginSkin(g, a) + $KW.skins.getPaddingSkin(g) + "' class='" + d + "' konywidgetdata='" + g.widgetdata + "'></div>"
      }
    }
    return f
  },
  getMarkerDataforStaticMaps: function(b) {
    var a = b.locationdata || b.address;
    var f = "";
    for (var c = IndexJL; c < a.length; c++) {
      var d = (a[IndexJL].lat == undefined) ? a[c][IndexJL] : a[c].lat;
      var e = (a[IndexJL].lat == undefined) ? a[c][1 + IndexJL] : a[c].lon;
      (typeof b.newPinimage != undefined) && (f += "icon:" + b.newPinimage + "%7C");
      f += d + "," + e;
      if (c != a.length) {
        f += "&markers="
      }
    }
    return f
  },
  cachePinSizes: function(c) {
    if (typeof $KW.Map.pinImageSize === "undefined") {
      $KW.Map.pinImageSize = {}
    }
    var a = new Image();
    a.src = c;
    var b = c.slice(c.lastIndexOf("/") + 1);
    if (!$KW.Map.pinImageSize[b]) {
      a.onload = function() {
        $KW.Map.pinImageSize[b] = this.naturalHeight
      }
    }
  },
  setUpInteractiveCanvasMap: function() {
    if ("undefined" === typeof google) {
      $KG.mapScriptLoaded = false;
      $KW.Map.mapScriptLoaded = false;
      return
    }
    var k = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
    if (!k) {
      return
    }
    $KG.mapScriptLoaded = true;
    $KW.Map.mapScriptLoaded = true;
    k.markers = [];
    if (k && k.mapsrc === "static" && ($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9))) {
      var q = document.getElementById(k.pf + "_static_map");
      var y = q.getAttribute("src");
      var D = this.getMarkerDataforStaticMaps(k);
      y = y.replace(/markers=(.*)$/, "");
      q.src = y + "&markers=" + D
    } else {
      var I = document.querySelectorAll("[name=map_canvas]")[0];
      $KG.mapScriptLoaded = "false";
      if (I) {
        try {
          var k = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
          switch (parseInt(k.mode, 10)) {
            case 2:
              var d = google.maps.MapTypeId.SATELLITE;
              break;
            case 3:
              var d = google.maps.MapTypeId.HYBRID;
              break;
            case 7:
              var d = google.maps.MapTypeId.TERRAIN;
              break;
            default:
              var d = google.maps.MapTypeId.ROADMAP
          }
        } catch (E) {
          window.console && console.log("google : map script has not loaded yet");
          return
        }
        var F = I.getAttribute("mapview");
        var l = k.locationdata || k.address;
        var o = l;
        var G = k.zoomlevel || 15;
        var u = {
          zoom: G,
          disableDefaultUI: true,
          zoomControl: true,
          navigationControl: true,
          mapTypeControl: k.displaymaptypecontrols,
          scaleControl: true,
          mapTypeId: d
        };
        var H;
        if (l) {
          var n = new google.maps.Geocoder();
          if (l.location) {
            H = new google.maps.Map(I, u);
            n.geocode({
              address: l.location
            }, function(K, i) {
              if (i == google.maps.GeocoderStatus.OK) {
                H.setCenter(K[0].geometry.location);
                var e = new google.maps.Marker({
                  map: H,
                  position: K[0].geometry.location
                })
              }
            })
          } else {
            if (l.length >= 1 + IndexJL) {
              var A = l[IndexJL].lat,
                w = l[IndexJL].lon;
              var z = [],
                m, u;
              if (l[IndexJL].lat == undefined) {
                A = l[IndexJL][IndexJL];
                w = l[IndexJL][1 + IndexJL]
              }
              m = new google.maps.LatLng(A, w);
              u.center = m, u.zoomControl = undefined;
              H = new google.maps.Map(I, u);
              $KW.Map.map = H;
              this.initializeInfoBox();
              if (F == null && k.mode != "5") {
                var p = null;
                p = new google.maps.InfoWindow({
                  content: "holding..."
                });
                var h = I.getAttribute("id");
                var a = "</div>";
                for (var x = IndexJL; x < (l.length); x++) {
                  var c = '<div kwidgettype="Kinfowindow" kinfoid="' + h + '"';
                  var C = "";
                  var v = "";
                  if (l[IndexJL].lat == undefined) {
                    v = (l[x][4 + IndexJL] || k.defaultpinimage)
                  } else {
                    v = (l[x].image || k.defaultpinimage)
                  }
                  C = $KU.getImageURL(v);
                  this.cachePinSizes(C);
                  var j = new google.maps.LatLng(l[x].lat, l[x].lon);
                  if (l[IndexJL].lat == undefined) {
                    C = $KU.getImageURL(l[x][4 + IndexJL]);
                    j = new google.maps.LatLng(l[x][IndexJL], l[x][1 + IndexJL])
                  }
                  var B = l[x].calloutData || l[x].calloutdata;
                  var t = (B && B.template) || k.callouttemplate;
                  if (t) {
                    this.setParentForTemplateChildren(t, t.children, t);
                    var J = "";
                    B && (J = this.ConvertDataMaptoData(k, B));
                    J && $KW.Utils.updateLayoutData(k, t, J);
                    if (t.wType == "FlexContainer") {
                      $KG.isUILayedOut = false;
                      c = $KW.FlexContainer.render(t, {});
                      if (k.calloutwidth < 1 || k.calloutwidth > 100) {
                        k.calloutwidth = 80
                      }
                      var s = k.calloutwidth && (((I.offsetWidth) * k.calloutwidth * 0.01) + "px") || "280px";
                      var g = document.createElement("DIV");
                      g.innerHTML = c;
                      g.style.width = s;
                      I.appendChild(g);
                      $KW.FlexContainer.forceLayout(t, g.children[0]);
                      c = g.innerHTML;
                      I.removeChild(g);
                      $KG.isUILayedOut = true
                    } else {
                      c = $KW.HBox.render(t, {
                        topLevelBox: true
                      })
                    }
                  }
                  var f = new google.maps.Marker({
                    position: j,
                    map: H,
                    icon: C,
                    html: (l[IndexJL].lat == undefined) ? l[x][3 + IndexJL] : l[x].desc,
                    hdrdescp: (l[IndexJL].lat == undefined) ? l[x][2 + IndexJL] : l[x].name,
                    indexpoint: x,
                    template: t,
                    contentString: c,
                    data: J,
                    calloutPostion: (k.calloutPostion || "top"),
                    showcallout: (l[IndexJL].lat == undefined) ? l[x][5 + IndexJL] : l[x].showcallout
                  });
                  k.markers.push(f);
                  new google.maps.event.addListener(f, "click", function() {
                    if (!this.eventFromNavigateTo) {
                      var N = $KU.returnEventReference(k.onpinclick);
                      N && N.call(k, k, k.locationdata[parseInt(this.indexpoint)])
                    }
                    if (this.showcallout || this.showcallout == undefined || this.forceShowcallout) {
                      if (this.template) {
                        var K = $KU.getNodeByModel(k);
                        if (k.calloutwidth < 1 || k.calloutwidth > 100) {
                          k.calloutwidth = 80
                        }
                        var L = k.calloutwidth && (((K.offsetWidth) * k.calloutwidth * 0.01) + "px") || "280px";
                        var e = parseInt(L, 10) / -2;
                        var i = 0;
                        if (this.calloutPostion != "bottom") {
                          infobox.alignBottom_ = true;
                          var M = (this.icon).slice(this.icon.lastIndexOf("/") + 1);
                          i = -($KW.Map.pinImageSize[M] ? $KW.Map.pinImageSize[M] : 30)
                        }
                        infobox.content_ = this.contentString, infobox.disableAutoPan_ = false, infobox.position_ = this.position, infobox.maxWidth_ = 450, infobox.pixelOffset_ = new google.maps.Size(e, i), infobox.zIndex_ = 10, infobox.boxStyle_ = {
                          opacity: 1,
                          width: L,
                          background: "none"
                        }, infobox.enableEventPropagation_ = true, infobox.closeBoxURL_ = "", this.data && $KW.Utils.updateLayoutData(k, this.template, this.data);
                        infobox.infoBoxClearance_ = new google.maps.Size(0, 0);
                        infobox.open(this.map, this)
                      } else {
                        p.setContent(this.contentString + ' mappointno="' + this.indexpoint + '"><b kwidgettype="Kinfowindow" kinfoid="' + h + '" mappointno="' + this.indexpoint + '">' + this.hdrdescp + "</b> <br />" + this.html + a);
                        p.open(this.map, this)
                      }
                    }
                    this.forceShowcallout = false;
                    this.eventFromNavigateTo = false
                  });
                  f.setMap(H)
                }
              } else {
                var b = "";
                for (var x = IndexJL; x < (l.length); x++) {
                  if (l[IndexJL].lat == undefined) {
                    b = new google.maps.LatLng(l[x][IndexJL], l[x][IndexJL])
                  } else {
                    b = new google.maps.LatLng(l[x].lat, l[x].lon)
                  }
                  z.push(b)
                }
                var r = new google.maps.Polygon({
                  paths: z,
                  strokeColor: "#FF0000",
                  strokeOpacity: 0.8,
                  strokeWeight: 3,
                  fillColor: "#FF0000",
                  fillOpacity: 0.35
                });
                r.setMap(H)
              }
            } else {
              if (l.length == 0) {
                u.center = new google.maps.LatLng(0, 0);
                H = new google.maps.Map(I, u);
                $KW.Map.map = H
              }
            }
          }
        } else {
          u.center = new google.maps.LatLng(0, 0);
          H = new google.maps.Map(I, u);
          $KW.Map.map = H
        }
        $KW.Map.setEnabledMap(k, I);
        if ($KW.Map.navigateToArgs) {
          $KW.Map.navigateTo($KW.Map.navigateToArgs.mapModel, $KW.Map.navigateToArgs.index, $KW.Map.navigateToArgs.showCallOut)
        }
        if ($KW.Map.navigateToLocationArgs) {
          $KW.Map.navigateToLocation($KW.Map.navigateToLocationArgs.mapModel, $KW.Map.navigateToLocationArgs.locationData, $KW.Map.navigateToLocationArgs.showCallOut, $KW.Map.navigateToLocationArgs.dropPin)
        }
        if ($KW.Map.routeToLocationArgs) {
          $KW.Map.navigateToLocation($KW.Map.routeToLocationArgs.mapModel, $KW.Map.routeToLocationArgs.startlocationData, $KW.Map.routeToLocationArgs.endlocationData, $KW.Map.routeToLocationArgs.waypointslocation, $KW.Map.routeToLocationArgs.routeConfig)
        }
        new google.maps.event.addListener(this.map, "click", this.mapClickEventHandler)
      }
    }
  },
  mapClickEventHandler: function(c) {
    var a = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
    if (a.onclick) {
      var d = $KU.returnEventReference(a.onclick);
      var e = c.latLng && c.latLng.lat();
      var b = c.latLng && c.latLng.lng();
      d && d.call(a, a, {
        lat: e,
        lon: b
      })
    }
    c.preventDefault && c.preventDefault();
    c.stopPropagation && c.stopPropagation()
  },
  navigateTo: function(f, g, a) {
    if (!this.navigateToArgs) {
      this.navigateToArgs = {
        mapModel: f,
        index: g,
        showCallOut: a
      }
    }
    if (!this.map) {
      return
    }
    var g = parseInt(g);
    var h = this.map;
    var d = "";
    var e = "";
    var c = f.locationdata;
    if (g < 1 && g >= c.length) {
      return
    }
    if (c[g]) {
      d = c[g].lat;
      e = c[g].lon;
      if (c[g].lat == undefined) {
        d = c[g][IndexJL];
        e = c[g][1 + IndexJL]
      }
    }
    h.setCenter(new google.maps.LatLng(d, e));
    if (a) {
      var b = this.getMarkerByIndex(g, c, f);
      b.forceShowcallout = true;
      b.eventFromNavigateTo = true;
      google.maps.event.trigger(b, "click")
    }
    this.navigateToArgs = null
  },
  navigateToLocation: function(g, k, s, t) {
    if (!this.navigateToLocationArgs) {
      this.navigateToLocationArgs = {
        mapModel: g,
        locationData: k,
        showCallOut: s,
        dropPin: t
      }
    }
    if (!this.map) {
      return
    }
    var l = g.locationdata;
    var i = "navigatetoloc";
    var u = this.map;
    var h = (k.lat) ? k.lat : k[IndexJL];
    var f = (k.lon) ? k.lon : k[1 + IndexJL];
    var r = (k.lat == undefined) ? k[3 + IndexJL] : k.desc;
    var w = (k.lat == undefined) ? k[2 + IndexJL] : k.name;
    var o = (k.lat == undefined) ? k[4 + IndexJL] : (k.image || g.defaultpinimage);
    var p = (t) ? $KU.getImageURL(o) : null;
    var p = "";
    if (t) {
      t = true;
      p = $KU.getImageURL(o)
    } else {
      if (typeof(marker) != "undefined") {
        marker.setMap(null)
      }
    }
    if (typeof(infowindow) != "undefined") {
      infowindow.close()
    }
    this.cachePinSizes(p);
    marker = new google.maps.Marker({
      position: new google.maps.LatLng(h, f),
      map: u,
      icon: p,
      html: r,
      hdrdescp: w,
      visible: t
    });
    if (!t) {
      marker.setMap(null)
    }
    u.setCenter(new google.maps.LatLng(h, f));
    g[g.id + "navigatetoloc"] = k;
    var d = '<div kwidgettype="Kinfowindow" kinfoid="' + g.id + '"';
    var b = "</div>";
    if (s) {
      var q = k.calloutData || k.calloutdata;
      if (q) {
        this.initializeInfoBox();
        var j = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
        var n = (q && q.template) || j.callouttemplate;
        if (n) {
          this.setParentForTemplateChildren(n, n.children, n);
          var v = "";
          q && (v = this.ConvertDataMaptoData(j, q));
          v && $KW.Utils.updateLayoutData(j, n, v);
          d = $KW.HBox.render(n, {
            topLevelBox: true
          })
        }
        var a = (window && window.innerWidth) || document.width;
        if (n.containerWeight < 1 || n.containerWeight > 100) {
          n.containerWeight = 80
        }
        var m = n.containerWeight && ((a * n.containerWeight * 0.01) + "px") || "280px";
        var c = parseInt(m, 10) / -2;
        infobox.alignBottom_ = true;
        var e = (this.icon).slice(this.icon.lastIndexOf("/") + 1);
        infobox_top = -($KW.Map.pinImageSize[e] ? $KW.Map.pinImageSize[e] : 30);
        infobox.content_ = d, infobox.disableAutoPan_ = false, infobox.position_ = new google.maps.LatLng(h, f), infobox.maxWidth_ = 450, infobox.pixelOffset_ = new google.maps.Size(c, infobox_top), infobox.zIndex_ = 10, infobox.boxStyle_ = {
          opacity: 1,
          width: m,
          background: "none"
        }, infobox.enableEventPropagation_ = true, infobox.closeBoxURL_ = "", infobox.infoBoxClearance_ = new google.maps.Size(0, 0);
        new google.maps.event.addListener(marker, "click", function() {
          infobox.open(this.map, infobox)
        });
        infobox.open(this.map, infobox)
      } else {
        infowindow = new google.maps.InfoWindow({
          content: d + ' mappointno="' + i + '"><b>' + w + "</b> <br />" + r + b
        });
        if (k && k.showcallout) {
          new google.maps.event.addListener(marker, "click", function() {
            infowindow.open(this.map, this)
          })
        }
        infowindow.open(u, marker)
      }
    }
    this.navigateToLocationArgs = null
  },
  initializeInfoBox: function() {
    if (typeof InfoBox === "undefined") {
      var a = document.createElement("script");
      a.type = "text/javascript";
      a.src = "//google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/src/infobox.js";
      document.body.appendChild(a);
      var b = function() {
        infobox = new InfoBox()
      };
      if (!a.addEventListener) {
        a.onreadystatechange = function() {
          (this.readyState == "complete" || this.readyState == "loaded") && b()
        }
      } else {
        a.onload = b
      }
    }
  },
  dismissCallout: function(b, a) {
    if (typeof infobox != "undefined") {
      infobox.close()
    }
  },
  getMarkerByIndex: function(i, d, e) {
    if (!this.map) {
      return
    }
    if (e.markers.length) {
      g = e.markers[i];
      return g
    }
    if (!d) {
      var d = e.locationdata
    }
    var c = this.map;
    var j = null;
    var f = (d[i].lat == undefined) ? d[i][4 + IndexJL] : (d[i].image || e.defaultpinimage);
    j = $KU.getImageURL(f);
    var k = (d[i].lat == undefined) ? d[i][IndexJL] : d[i].lat;
    var b = (d[i].lat == undefined) ? d[i][1 + IndexJL] : d[i].lon;
    var h = (d[i].lat == undefined) ? d[i][3 + IndexJL] : d[i].desc;
    var a = (d[i].lat == undefined) ? d[i][2 + IndexJL] : d[i].name;
    var g = new google.maps.Marker({
      position: new google.maps.LatLng(k, b),
      map: c,
      icon: j,
      html: h,
      hdrdescp: a,
      indexpoint: i
    });
    return g
  },
  routeLocations: function(c, i, h, g, f) {
    if (!this.map) {
      return
    }
    markers = {};
    var j = {
      draggable: true,
      suppressMarkers: true,
      polylineOptions: {
        strokeColor: f.lineColor,
        strokeOpacity: 1,
        strokeWeight: f.lineWidth
      }
    };
    directionsService = new google.maps.DirectionsService();
    directionsDisplay = new google.maps.DirectionsRenderer(j);
    geocoder = new google.maps.Geocoder();
    var b = new google.maps.LatLng(i.lat, i.lon);
    var a = new google.maps.LatLng(h.lat, h.lon);
    var d = document.querySelectorAll("[name=map_canvas]")[0];
    var k = {
      zoom: 13,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      center: b
    };
    map = new google.maps.Map(d, k);
    directionsDisplay.setMap(map);
    this.map = map;
    this.RenderTheDirection(b, a, g);
    var e = [i, h, g];
    this.CreateMarker(e)
  },
  ConvertDataMaptoData: function(c, e) {
    var a = c.widgetdatamapforcallout || {};
    var g = {};
    var k = $KU.getkeys(a);
    var l = {};
    for (var f = 0; f < k.length; f++) {
      l[a[k[f]]] = k[f]
    }
    var b = $KU.getkeys(l);
    for (var d = 0; d < b.length; d++) {
      var h = e[b[d]];
      if (h && typeof h != "object" && typeof h !== "number" && h.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
        g[b[d]] = $KU.getI18NValue(h)
      } else {
        g[k[d]] = h
      }
    }
    return g
  },
  CreateMarker: function(d) {
    $KG.__markers = {};
    var l = kony.model.getWidgetModel(this.formID, this.mapID);
    var j = 0;
    var g = document.querySelectorAll("[name=map_canvas]")[0];
    var k = g.getAttribute("id");
    var f = '<div kwidgettype="Kinfowindow" kinfoid="' + k + '"';
    var e = "</div>";
    for (var h = IndexJL; h < (d.length - 1); h++) {
      var a = h;
      imageURL = d[h].image;
      urlt = $KU.getImageURL(imageURL);
      var c = new google.maps.LatLng(d[h].lat, d[h].lon);
      var b = new google.maps.Marker({
        id: a,
        position: c,
        map: map,
        icon: urlt,
        html: d[h].desc,
        hdrdescp: d[h].name,
        indexpoint: h,
        draggable: true
      });
      $KG.__markers[a] = b;
      google.maps.event.addListener(b, "dragend", function(i) {
        return function() {
          geocoder.geocode({
            latLng: b.getPosition()
          }, function(n, m) {
            if (m == google.maps.GeocoderStatus.OK) {
              $KW.Map.RenderTheDirection($KG.__markers[0].getPosition(), $KG.__markers[1].getPosition(), d[2])
            }
          })
        }
      }(b));
      new google.maps.event.addListener(b, "click", function() {
        l.onpinselect && l.onpinselect(l.locationdata[parseInt(this.indexpoint)]);
        if (this.showcallout || this.showcallout == undefined) {
          var i = new google.maps.InfoWindow({
            content: f + ' mappointno="' + j + '"><b>' + name + "</b> <br />" + desc + e
          });
          i.setContent(f + ' mappointno="' + this.indexpoint + '"><b>' + this.hdrdescp + "</b> <br />" + this.html + e);
          i.open(map, this)
        }
      });
      b.setMap(map)
    }
  },
  RenderTheDirection: function(e, f, b) {
    var a = [];
    if (b && b != undefined) {
      for (var c = 0; c < b.length; c++) {
        a[c] = new google.maps.LatLng(b[c].lat, b[c].lon);
        a[c] = {
          location: a[c] + ""
        }
      }
    }
    var d = {
      origin: e,
      destination: f,
      waypoints: a,
      travelMode: google.maps.TravelMode.DRIVING
    };
    directionsService.route(d, function(g, h) {
      if (h == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(g)
      }
    })
  },
  getInfoWindowByIndex: function(h, b) {
    if (!this.map) {
      return
    }
    if (!b) {
      var c = kony.model.getWidgetModel(this.formID, this.mapID);
      var b = c.locationdata
    }
    var f = document.querySelectorAll("[name=map_canvas]")[0];
    var i = f.getAttribute("id");
    var e = '<div kwidgettype="Kinfowindow" kinfoid="' + i + '"';
    var d = "</div>";
    var g = (b[h].lat == undefined) ? b[h][3 + IndexJL] : b[h].desc;
    var a = (b[h].lat == undefined) ? b[h][2 + IndexJL] : b[h].name;
    return new google.maps.InfoWindow({
      content: e + ' mappointno="' + h + '"><b>' + a + "</b> <br />" + g + d
    })
  },
  setParentForTemplateChildren: function(d, c, a) {
    d.pf = a.id;
    if (c && c.length > 0) {
      for (var b = 0; b < c.length; b++) {
        d[c[b]].pf = a.id;
        this.setParentForTemplateChildren(d[c[b]], d[c[b]].children, a)
      }
    }
    kony.ui.Form2.prototype.createFormLevelHierarchy.call(a, a.ownchildrenref)
  },
  setMapsHeight: function(g) {
    var h = document.querySelectorAll("#" + g + " div[kwidgettype='googlemap']");
    if (h) {
      for (var e = 0; e < h.length; e++) {
        var d = h[e];
        var a = d.getAttribute("id").split("_")[1];
        var c = d.getAttribute("id").split("_")[0];
        var f = d.getAttribute("ktabpaneid");
        var b = kony.model.getWidgetModel(c, a, f);
        $KU.setScrollHeight(b)
      }
    }
  },
  setEnabledMap: function(b, c) {
    var d = c;
    if (b && (b.mapsrc === "static" || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9))) {
      d = c.getElementsByTagName("table")[0]
    }
    if (!d) {
      return
    }
    if (b.disabled === true || c.getAttribute("kdisabled") === "true") {
      var a = document.createElement("div");
      a.style.background = "#fff";
      a.style.bottom = "0";
      a.style.left = "0";
      a.style.opacity = "0.5";
      a.style.filter = "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
      a.style.filter = "alpha(opacity=50)";
      a.style.position = "absolute";
      a.style.right = "0";
      a.style.top = "0";
      a.style.zIndex = "2147483647";
      a.className = "google_map_mask";
      if (!!d && !d.querySelectorAll(".google_map_mask")[0]) {
        b.oldPosition = d.style.position;
        d.style.position = "relative";
        d.appendChild(a)
      }
    }
    if (b.disabled === false || c.getAttribute("kdisabled") === "false" && d) {
      var a = d.querySelectorAll(".google_map_mask")[0];
      d.style.position = !!b.oldPosition && b.oldPosition;
      !!a && a.parentNode.removeChild(a)
    }
  }
};
$KW.TabPane = {
  ANIMATION_DELAY: 500,
  initialize: function() {
    kony.events.addEvent("click", "Tab", this.eventHandler);
    kony.events.addEvent("click", "TabArrow", this.eventHandlerArrow);
    kony.events.addEvent("onorientationchange", "TabPane", this.orientationHandler)
  },
  initializeView: function(a) {
    this.toggleDisable(a);
    setTimeout(function() {
      $KW.TabPane.setTabsHeight(a)
    }, 1);
    $KW.touch.computeSnapWidths(a, "Tabpane");
    $KU.setScrollBoxesHeight(a, "TabPane")
  },
  orientationHandler: function(b, a) {
    $KU.setScrollBoxesHeight(b, "TabPane")
  },
  updateView: function(g, j, q, c) {
    var k = g.viewtype;
    switch (j) {
      case "activeskin":
        if (k === "tabview") {
          for (var o = 0; o < g.children.length; o++) {
            var m = $KU.getElementById(g.pf + "_" + g.children[o] + "_Body");
            var e = $KU.getElementById(g.pf + "_" + g.children[o] + "_Li");
            var d = $KU.getElementById(g.pf + "_" + g.children[o] + "_A");
            if (m && m.getAttribute("activebody") === "1") {
              $KU.removeClassName(e, c + "li");
              $KU.removeClassName(d, c + "lia");
              $KU.addClassName(e, q + "li");
              $KU.addClassName(d, q + "lia")
            }
          }
        } else {
          for (var o = 0; o < g.children.length; o++) {
            var p = g.children[o];
            var h = $KU.getElementById(g.pf + "_" + p + "_Header");
            if (h) {
              if (h.getAttribute("active") === "1") {
                $KU.removeClassName(h, c);
                $KU.addClassName(h, q)
              }
            }
          }
        }
        break;
      case "inactiveskin":
        if (k === "tabview") {
          for (var o = 0; o < g.children.length; o++) {
            var m = $KU.getElementById(g.pf + "_" + g.children[o] + "_Body");
            var e = $KU.getElementById(g.pf + "_" + g.children[o] + "_Li");
            var d = $KU.getElementById(g.pf + "_" + g.children[o] + "_A");
            if (m && m.getAttribute("activebody") === "0") {
              $KU.removeClassName(e, c + "li");
              $KU.removeClassName(d, c + "lia");
              $KU.addClassName(e, q + "li");
              $KU.addClassName(d, q + "lia")
            }
          }
        } else {
          for (var o = 0; o < g.children.length; o++) {
            var p = g.children[o];
            var h = $KU.getElementById(g.pf + "_" + p + "_Header");
            if (h) {
              if (h.getAttribute("active") === "0") {
                $KU.removeClassName(h, c);
                $KU.addClassName(h, q)
              }
            }
          }
        }
        break;
      case "activetab":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        if (q >= 0 && q < g.children.length) {
          g.activetab = q;
          if (g.activetabs) {
            g.activetabs[IndexJL] = q
          }
          if (g.viewtype === constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            var l = g.children[g.activetab];
            $KW.TabPane.changeActiveTabSkin(g, l);
            var m = $KU.getElementById(g.pf + "_" + g.id + "_Body");
            if (m) {
              var s = m.children[0];
              var f = g.swipeContext;
              f.currentPage = g.activetab;
              $KW.touch.scrollImages(s, f.imageWidth * f.currentPage, $KU.swipeDuration, false, {
                tabPaneModel: g,
                tabID: l
              });
              $KW.touch.updatePageIndicator(b, f, g)
            }
          } else {
            this.repaint(b, g)
          }
        }
        break;
      case "activetabs":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        if (g.viewtype === constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          var l = g.children[g.activetab];
          $KW.TabPane.changeActiveTabSkin(g, l);
          var s = $KU.getElementById(g.pf + "_" + g.id + "_Body").children[0];
          var f = g.swipeContext;
          f.currentPage = g.activetab;
          $KW.touch.scrollImages(s, f.imageWidth * f.currentPage, $KU.swipeDuration, false, {
            tabPaneModel: g,
            tabID: l
          });
          $KW.touch.updatePageIndicator(b, f, g)
        } else {
          this.repaint(b, g)
        }
        break;
      case "viewconfig":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        if (q && !IndexJL) {
          g.viewconfig.collapsibleviewconfig = q.collapsibleViewConfig;
          if (g.viewconfig.collapsibleviewconfig) {
            g.viewconfig.collapsibleviewconfig.onclick = q.collapsibleviewconfig.onClick;
            g.expandedimage = g.viewconfig.collapsibleviewconfig.expandedimage = q.collapsibleviewconfig.expandedImage;
            g.collapsedimage = g.viewconfig.collapsibleviewconfig.collapsedimage = q.collapsibleviewconfig.collapsedImage;
            g.imageposition = g.viewconfig.collapsibleviewconfig.imageposition = q.collapsibleviewconfig.imagePosition;
            g.tabnamealignment = g.viewconfig.collapsibleviewconfig.tabnamealignment = q.collapsibleviewconfig.tabNameAlignment;
            g.toggletabs = g.viewconfig.collapsibleviewconfig.toggletabs = q.collapsibleviewconfig.toggleTabs
          }
          if (g.viewConfig.pageViewConfig) {
            var n = q.pageViewConfig;
            g.viewConfig.pageViewConfig = q.pageViewConfig;
            g.pageondotimage = n.pageOnDotImage;
            g.pageoffdotimage = n.pageOffDotImage;
            g.needpageindicator = n.needPageIndicator
          }
        }
        this.repaint(b, g);
        break;
      case "viewtype":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        g.viewtype = q;
        if (g.viewconfig) {
          g.toggletabs = g.viewconfig.collapsibleviewconfig.toggletabs
        }
        this.repaint(b, g);
        break;
      case "headertemplatedata":
        var a = $KU.getElementById(g.pf + "_" + g.id + "_Div");
        if (a && g.headertemplate && q instanceof Object) {
          var r = g.headertemplate;
          var t = g.headertemplatedata;
          g.context = {};
          g.widgetsData = t;
          a.innerHTML = $KW.Utils.handleLayout(g, r, t)
        }
        break
    }
  },
  render: function(d, a) {
    var b = d.viewtype;
    var c = "";
    $KU.updateScrollFlag(d);
    if (b == "tabview" || b == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
      this.adjustActiveTabs(d);
      c = this.generateTabView(d, a)
    } else {
      if (d.toggletabs === true) {
        this.adjustActiveTabs(d);
        c = this.generateAccordionView(d, a)
      } else {
        c = this.generateCollapsibleView(d, a)
      }
    }
    return c
  },
  repaint: function(d, c) {
    if (d) {
      if (c.viewtype === "tabview" || c.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        d.innerHTML = $KW.TabPane.generateTabView(c, c.context, true);
        setTimeout(function() {
          $KW.TabPane.checkArrows(c.pf, c.id)
        }, 1);
        if (c.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          setTimeout(function() {
            $KW.touch.computeSnapWidths(c.pf, "Tabpane")
          }, 2);
          var b = document.getElementById(d.id + "_Body");
          var a = new $KW.touch.pageviewScroller(b, {
            widgetModel: c
          });
          $KG[b.id] = a;
          this.updatePageFooter(c)
        }
        $KW.TabPane.adjustFlexContainers(c)
      } else {
        if (c.viewtype === "collapsibleview" && c.toggletabs === "true") {
          d.innerHTML = $KW.TabPane.generateAccordionView(c, c.context, true);
          setTimeout(function() {
            $KW.TabPane.setTabsHeight(c.pf)
          }, 1)
        } else {
          d.innerHTML = $KW.TabPane.generateCollapsibleView(c, c.context, true);
          setTimeout(function() {
            $KW.TabPane.setTabsHeight(c.pf)
          }, 1)
        }
      }
    }
  },
  adjustFlexContainers: function(a) {
    $KU.needOptimization = false;
    $KW.Form.initializeFlexContainersInBox(a);
    $KU.needOptimization = true
  },
  generateTabView: function(p, b, k) {
    var o = "";
    var m = kony.model.getWidgetModel(p.pf, p.id);
    var d = $KW.skins.getBaseStyle(p, b);
    var q = $KW.skins.getPaddingSkin(p);
    var l = $KW.skins.getVisibilitySkin(p);
    var h = " ktabpaneid='" + p.id + "' kformname='" + p.pf + "' ";
    var g = p.pf + "_" + p.id;
    var c;
    var n = $KW.skins.getMarginSkin(p, b) + $KW.skins.getPaddingSkin(p);
    if (!k) {
      o += "<div id = '" + g + "' class='" + l + "' style='" + n + "' kformname='" + p.pf + "' kwidgettype='TabPane'>"
    }
    if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_BOTTOM) {
      if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        o += "<div id = '" + g + "_Body' style='position:relative' name='touchcontainer_Tabpane' class='kstripcontainer'>"
      } else {
        o += "<div id = '" + g + "_Body' style='position:relative'>"
      }
      if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        o += "<div id='imgs' class= 'kstrip' style='";
        if (kony.appinit.isIE) {
          o += "position:relative"
        }
        o += "'>"
      }
      for (var e = 0; e < p.children.length; e++) {
        var a = m[p.children[e]];
        p.context = b;
        o += this.generateTabViewBody(p, a, e, b)
      }
      o += "</div>";
      if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        o += "</div>"
      }
      o += "<div class='ktable kwt100' id = '" + g + "_Header' style='position:relative;table-layout:fixed;'>";
      o += "<div class='krow  kwt100'>";
      if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
        o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_L' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
      } else {
        o += "<div id = '" + g + "_L' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Left</div>"
      }
      o += "<div id = '" + g + "_C' class=' kwt96' style='overflow:hidden;margin:auto;' >";
      o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;white-space:nowrap;position:relative'>";
      for (var f = 0; f < p.children.length; f++) {
        var a = m[p.children[f]];
        o += this.generateTabViewLi(p, a, f)
      }
      o += "</ul>";
      o += "</div>";
      if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
        o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_R' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
      } else {
        o += "<div id = '" + g + "_R' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Right</div>"
      }
      o += "</div>";
      o += "</div>"
    } else {
      if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_LEFT) {
        o += "<div class='ktable kwt100' style='table-layout:fixed;'>";
        o += "<div class='krow kwt100'>";
        if (p.viewconfig.tabViewConfig.headerContainerWeight) {
          o += "<div class='kcell topcenteralign kwt" + p.viewconfig.tabViewConfig.headerContainerWeight + "'>"
        } else {
          o += "<div class='kcell topcenteralign kwt50'>"
        }
        if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
          o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_T' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
        } else {
          o += "<div id = '" + g + "_T' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Top</div>"
        }
        o += "<div id = '" + g + "_Header' class='kwt100' style='overflow:hidden;'>";
        o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;position:relative;'>";
        for (var f = 0; f < p.children.length; f++) {
          var a = m[p.children[f]];
          o += this.generateTabViewSide(p, a, f)
        }
        o += "</ul>";
        o += "</div>";
        if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
          o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_B' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
        } else {
          o += "<div id = '" + g + "_B' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Bottom</div>"
        }
        o += "</div>";
        if (p.viewconfig.tabViewConfig.headerContainerWeight) {
          o += "<div class='kcell kwt" + (100 - p.viewconfig.tabViewConfig.headerContainerWeight) + "'>"
        } else {
          o += "<div class='kcell kwt50'>"
        }
        o += "<div id = '" + g + "_Body'>";
        for (var e = 0; e < p.children.length; e++) {
          var a = m[p.children[e]];
          p.context = b;
          o += this.generateTabViewBody(p, a, e, b)
        }
        o += "</div>";
        o += "</div>";
        o += "</div>";
        o += "</div>"
      } else {
        if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_RIGHT) {
          o += "<div class='ktable kwt100' style='table-layout:fixed;'>";
          o += "<div class='krow kwt100'>";
          if (p.viewconfig.tabViewConfig.headerContainerWeight) {
            o += "<div class='kcell kwt" + (100 - p.viewconfig.tabViewConfig.headerContainerWeight) + "'>"
          } else {
            o += "<div class='kcell kwt50'>"
          }
          o += "<div id = '" + g + "_Body'>";
          for (var e = 0; e < p.children.length; e++) {
            var a = m[p.children[e]];
            p.context = b;
            o += this.generateTabViewBody(p, a, e, b)
          }
          o += "</div>";
          o += "</div>";
          if (p.viewconfig.tabViewConfig.headerContainerWeight) {
            o += "<div class='kcell topcenteralign kwt" + p.viewconfig.tabViewConfig.headerContainerWeight + "'>"
          } else {
            o += "<div class='kcell topcenteralign kwt50'>"
          }
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_T' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_T' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Top</div>"
          }
          o += "<div id = '" + g + "_Header' class='kwt100' style='overflow:hidden;'>";
          o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;position:relative;'>";
          for (var f = 0; f < p.children.length; f++) {
            var a = m[p.children[f]];
            o += this.generateTabViewSide(p, a, f)
          }
          o += "</ul>";
          o += "</div>";
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_B' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_B' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Bottom</div>"
          }
          o += "</div>";
          o += "</div>";
          o += "</div>"
        } else {
          if (p.viewtype !== constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "<div class='ktable kwt100' id = '" + g + "_Header' style='position:relative;table-layout:fixed;'>"
          } else {
            o += "<div class='ktable kwt100' id = '" + g + "_Header' style='position:relative;table-layout:fixed;display:none'>"
          }
          o += "<div class='krow  kwt100'>";
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_L' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_L' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Left</div>"
          }
          o += "<div id = '" + g + "_C' class='kwt96' style='overflow:hidden;margin:auto' >";
          o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;white-space:nowrap;position:relative'>";
          for (var f = 0; f < p.children.length; f++) {
            var a = m[p.children[f]];
            o += this.generateTabViewLi(p, a, f)
          }
          o += "</ul>";
          o += "</div>";
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_R' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_R' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Right</div>"
          }
          o += "</div>";
          o += "</div>";
          if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "<div id = '" + g + "_Body' style='position:relative' name='touchcontainer_Tabpane' " + h + " class='kstripcontainer'>"
          } else {
            o += "<div id = '" + g + "_Body' style='position:relative'>"
          }
          if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "<div id='imgs' class= 'kstrip' style='";
            if (kony.appinit.isIE) {
              o += "position:relative"
            }
            o += "'>"
          }
          for (var e = 0; e < p.children.length; e++) {
            var a = m[p.children[e]];
            p.context = b;
            o += this.generateTabViewBody(p, a, e, b)
          }
          o += "</div>";
          if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "</div>";
            o += this.generatePageFooter(p)
          }
        }
      }
    }
    if (!k) {
      o += "</div>"
    }
    return o
  },
  generateTabViewLi: function(i, a, f) {
    var e = i.activeskin || "";
    var g = i.inactiveskin || "";
    var d = " ktabpaneid='" + i.id + "' kformname='" + i.pf + "' ";
    var h = "";
    var c = a.pf + "_" + a.id;
    var j = i.viewconfig.tabViewConfig && i.viewconfig.tabViewConfig.headerContainerWeight;
    h += "<li id = '" + c + "_Li' index=" + f + " style='display:inline-block;vertical-align:bottom;" + (j ? ("width:" + j + "%") : a.header ? "width:25%" : "") + "' class='" + (f != (i.activetab - IndexJL) ? g : e) + "li' kwidgettype='Tab'" + d + ">";
    h += "<div id = '" + c + "_A' style='' index=" + f + " kwidgettype='Tab' tabHeader='true'" + d + "href='#' class='" + (f != (i.activetab - IndexJL) ? g : e) + ((g || e) ? "lia'" : "'") + ">";
    var b = {};
    if (a.header) {
      b.tabpaneID = i.id;
      b.tabID = a.id;
      a.header.pf = a.pf;
      b.renderingTabHeader = true;
      b.pf = a.pf;
      b.topLevelBox = true;
      this.setPfForTabHeader(a.header, b)
    }
    if (a.header) {
      h += $KW[a.header.wType].render(a.header, b)
    } else {
      if (a.image) {
        h += "<img src='" + $KU.getImageURL(a.image) + "' />"
      }
      if (a.tabname) {
        h += kony.appinit.isIE ? "<div kwidgettype " : "<div ";
        if (a.image) {
          h += " style='display:inline-block' "
        }
        h += ">" + a.tabname + "</div>"
      }
    }
    h += "</div>";
    h += "</li>";
    return h
  },
  generateTabViewSide: function(i, a, f) {
    var e = i.activeskin || "";
    var g = i.inactiveskin || "";
    var d = " ktabpaneid='" + i.id + "' kformname='" + i.pf + "' ";
    var h = "";
    var c = a.pf + "_" + a.id;
    var b = {};
    if (a.header) {
      b.tabpaneID = i.id;
      b.tabID = a.id;
      a.header.pf = a.pf;
      b.renderingTabHeader = true;
      b.pf = a.pf;
      b.topLevelBox = true;
      this.setPfForTabHeader(a.header, b)
    }
    h += "<li id = '" + c + "_Li' index=" + f + " style='display:inline' class='" + (f != (i.activetab - IndexJL) ? g : e) + "li' kwidgettype='Tab'" + d + ">";
    h += "<div id = '" + c + "_A' index=" + f + " style='display:block' kwidgettype='Tab' tabHeader='true'" + d + "href='#' class='" + (f != (i.activetab - IndexJL) ? g : e) + ((g || e) ? "lia'" : "'") + ">";
    if (a.header) {
      h += $KW[a.header.wType].render(a.header, b)
    } else {
      if (a.image) {
        h += "<div style='float:left' ><img src='" + $KU.getImageURL(a.image) + "' /></div>"
      }
      if (a.tabname) {
        h += "<div>" + a.tabname + "</div>"
      }
    }
    h += "</div>";
    h += "</li>";
    return h
  },
  generateTabViewBody: function(g, a, b, d) {
    var f = "";
    var e = " ktabpaneid='" + g.id + "' kformname='" + g.pf + "' ";
    var c = $KW.skins.getMarginSkin(a, d) + $KW.skins.getPaddingSkin(a);
    tabId = a.pf + "_" + a.id;
    f += "<div id = '" + tabId + "_Body' kwidgettype='tabviewTabBody'" + e;
    if (b != (g.activetab - IndexJL)) {
      if (g.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        f += "class='show " + ((a.skin) ? a.skin : "") + "' activebody='0' "
      } else {
        f += "class='hide " + ((a.skin) ? a.skin : "") + "' activebody='0' "
      }
    } else {
      f += "class='show " + ((a.skin) ? a.skin : "") + "' activebody='1' "
    }
    f += " style='" + c + "'>";
    f += this.renderTab(g, a, d);
    f += "</div>";
    return f
  },
  generateCollapsibleView: function(k, b, e) {
    var g = kony.model.getWidgetModel(k.pf, k.id);
    var j = "";
    var c = $KW.skins.getMarginSkin(k, b);
    var l = $KW.skins.getPaddingSkin(k);
    var f = $KW.skins.getVisibilitySkin(k);
    if (!e) {
      var h = $KW.skins.getMarginSkin(k, b) + $KW.skins.getPaddingSkin(k);
      j += "<div class='" + f + "' style='" + h + "' id = '" + k.pf + "_" + k.id + "' kformname='" + k.pf + "' kwidgettype='TabPane'>"
    }
    k.context = b;
    for (var d = 0; d < k.children.length; d++) {
      var a = g[k.children[d]];
      k.context = b;
      j += this.generateCollapsibleViewTab(k, a, d, b)
    }
    if (!e) {
      j += "</div>"
    }
    return j
  },
  generateCollapsibleViewTab: function(l, a, h, b) {
    var k = "";
    var f = l.activeskin || "";
    var i = l.inactiveskin || "";
    var e = " ktabpaneid='" + l.id + "' kformname='" + l.pf + "' ";
    var n = l.collapsedimage ? $KU.getImageURL(l.collapsedimage) : "";
    var d = l.expandedimage ? $KU.getImageURL(l.expandedimage) : "";
    var j = $KW.skins.getMarginSkin(a, b) + $KW.skins.getPaddingSkin(a);
    var m = this.isActiveTab(l, a);
    var c = a.pf + "_" + a.id;
    k += "<div id = '" + c + "_Tab'>";
    k += "<div id = '" + c + "_Header' index=" + h + e + "kwidgettype='Tab' tabHeader='true' class='" + (m ? f : i) + "'" + (m ? " active='1'" : " active='0'") + ">";
    if (a.header) {
      var g = {};
      g.tabpaneID = l.id;
      g.tabID = a.id;
      a.header.pf = a.pf;
      g.renderingTabHeader = true;
      g.pf = a.pf;
      g.topLevelBox = true;
      this.setPfForTabHeader(a.header, g);
      k += $KW[a.header.wType].render(a.header, g)
    } else {
      if (kony.appinit.isIE7) {
        k += "<table class = 'ktable kwt100'>";
        k += "<tr class = 'krow kwt100' >"
      } else {
        k += "<div class = 'ktable kwt100' style='text-decoration: inherit;table-layout: auto;'>";
        k += "<div class = 'krow kwt100' >"
      }
      if (l.imageposition == "left") {
        k += kony.appinit.isIE7 ? "<td class = 'kwt2 middlecenteralign' >" : "<div class = 'kcell kwt2 middlecenteralign' >";
        k += "<img style='vertical-align: middle' ";
        if (!m) {
          if (l.collapsedimage) {
            k += "src='" + n + "'"
          }
        } else {
          if (l.expandedimage) {
            k += "src='" + d + "'"
          }
        }
        k += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        k += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      k += kony.appinit.isIE7 ? "<td class = 'kwt98 middleleftalign' >" : "<div class = 'kcell kwt98 middleleftalign' >";
      if (a.image) {
        k += "<div style='float:left'><img src='" + $KU.getImageURL(a.image) + "' /></div>"
      }
      k += "<div id = '" + c + "_Div' kwidgettype='Tab' " + e;
      if (l.tabnamealignment) {
        k += "style='text-align:" + l.tabnamealignment + "' "
      }
      k += " >";
      if (a.tabname) {
        k += a.tabname
      }
      k += "</div>";
      k += kony.appinit.isIE7 ? "</td>" : "</div>";
      if (l.imageposition === "right") {
        k += kony.appinit.isIE7 ? "<td class = 'kwt2 middlecenteralign' >" : "<div class = 'kcell kwt2 middlecenteralign' >";
        k += "<img style='vertical-align: middle' ";
        if (m) {
          if (l.collapsedimage) {
            k += "src='" + n + "'"
          }
        } else {
          if (l.expandedimage) {
            k += "src='" + d + "'"
          }
        }
        k += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        k += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      k += kony.appinit.isIE7 ? "</tr></table>" : "</div></div>"
    }
    k += "</div>";
    k += "<div id = '" + c + "_Body' class='" + (m ? "tabactivebody " : "tabinactivebody ") + (a.skin || "") + "' kwidgettype='collapsibleTabBody' style='display:none;" + j + "' >";
    l.context = b;
    k += this.renderTab(l, a, b);
    k += "</div>";
    k += "</div>";
    return k
  },
  isActiveTab: function(d, a) {
    if (!d.activetabs) {
      return false
    }
    for (var c = 0; c < d.children.length; c++) {
      if (d.children[c] == a.id) {
        break
      }
    }
    for (var b = IndexJL; b < d.activetabs.length; b++) {
      if (d.activetabs[b] == (c + IndexJL)) {
        return true
      }
    }
    return false
  },
  generateAccordionView: function(p, b, j) {
    var m = kony.model.getWidgetModel(p.pf, p.id);
    var o = "";
    var d = $KW.skins.getMarginSkin(p, b);
    var q = $KW.skins.getPaddingSkin(p);
    var k = $KW.skins.getVisibilitySkin(p);
    var n = $KW.skins.getMarginSkin(p, b) + $KW.skins.getPaddingSkin(p);
    if (!j) {
      o += "<div class='" + k + "' style='" + n + "' id = '" + p.pf + "_" + p.id + "' kformname='" + p.pf + "' kwidgettype='TabPane'>"
    }
    var h = p.activeskin || "";
    var l = p.inactiveskin || "";
    var c;
    var g = " ktabpaneid='" + p.id + "' kformname='" + p.pf + "' ";
    var r = p.collapsedimage ? $KU.getImageURL(p.collapsedimage) : "";
    var e = p.expandedimage ? $KU.getImageURL(p.expandedimage) : "";
    p.context = b;
    for (var f = 0; f < p.children.length; f++) {
      var a = m[p.children[f]];
      o += this.generateAccordionViewTab(p, a, f, b)
    }
    if (!j) {
      o += "</div>"
    }
    return o
  },
  generateAccordionViewTab: function(l, a, h, b) {
    var c = a.pf + "_" + a.id;
    var e = " ktabpaneid='" + l.id + "' kformname='" + l.pf + "' ";
    var f = l.activeskin || "";
    var i = l.inactiveskin || "";
    var m = l.collapsedimage ? $KU.getImageURL(l.collapsedimage) : "";
    var d = l.expandedimage ? $KU.getImageURL(l.expandedimage) : "";
    var k = $KW.skins.getMarginSkin(a, b) + $KW.skins.getPaddingSkin(a);
    var j = "";
    j += "<div id = '" + c + "_Tab'>";
    j += "<div id = '" + c + "_Header' index=" + h + e + "kwidgettype='Tab' tabHeader='true' class='" + ((h == (l.activetab - IndexJL)) ? f + "' active='1'>" : i + "' active='0'>");
    if (a.header) {
      var g = {};
      g.tabpaneID = l.id;
      g.tabID = a.id;
      a.header.pf = a.pf;
      g.renderingTabHeader = true;
      g.pf = a.pf;
      g.topLevelBox = true;
      this.setPfForTabHeader(a.header, g);
      j += $KW[a.header.wType].render(a.header, g)
    } else {
      if (kony.appinit.isIE7) {
        j += "<table class = 'ktable kwt100'>";
        j += "<tr class = 'kwt100' >"
      } else {
        j += "<div class = 'ktable kwt100' style='text-decoration: inherit;table-layout: auto;'>";
        j += "<div class = 'krow kwt100' >"
      }
      if (l.imageposition === "left") {
        j += kony.appinit.isIE7 ? "<td class = 'kwt2 middleleftalign' >" : "<div class = 'kcell kwt2 middleleftalign' >";
        j += "<img ";
        if (h == (l.activetab - IndexJL)) {
          if (l.collapsedimage) {
            j += "src='" + m + "'"
          }
        } else {
          if (l.expandedimage) {
            j += "src='" + d + "'"
          }
        }
        j += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        j += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      j += kony.appinit.isIE7 ? "<td class = 'kwt98 middleleftalign' >" : "<div class = 'kcell kwt98 middleleftalign' >";
      if (a.image) {
        j += "<div style='float:left'><img src='" + $KU.getImageURL(a.image) + "' /></div>"
      }
      j += "<div id = '" + c + "_Div' kwidgettype='Tab'" + e;
      if (l.tabnamealignment) {
        j += "style='text-align:" + l.tabnamealignment + "' "
      }
      j += " >";
      if (a.tabname) {
        j += a.tabname
      }
      j += "</div>";
      j += kony.appinit.isIE7 ? "</td>" : "</div>";
      if (l.imageposition === "right") {
        j += kony.appinit.isIE7 ? "<td class = 'kwt2 middleleftalign' >" : "<div class = 'kcell kwt2 middleleftalign' >";
        j += "<img ";
        if (h == (l.activetab - IndexJL)) {
          if (l.collapsedimage) {
            j += "src='" + m + "'"
          }
        } else {
          if (l.expandedimage) {
            j += "src='" + d + "'"
          }
        }
        j += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        j += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      j += kony.appinit.isIE7 ? "</tr></table>" : "</div></div>"
    }
    j += "</div>";
    j += "<div id = '" + c + "_Body' class='" + (h == (l.activetab - IndexJL) ? "tabactivebody " : "tabinactivebody ") + (a.skin || "") + "' kwidgettype='collapsibleTabBody' style='display:none;" + k + "' >";
    j += this.renderTab(l, a, b);
    j += "</div>";
    j += "</div>";
    return j
  },
  renderTab: function(f, a, c) {
    var d = "";
    c = c || {};
    c.tabpaneID = f.id;
    if (a.wType == "FlexContainer") {
      d = $KW.FlexContainer.render(a, c)
    } else {
      if (a.children) {
        if (a.layouttype == constants.CONTAINER_LAYOUT_GRID) {
          d = $KW.Grid.render(a, c)
        } else {
          for (var b = 0; b < a.children.length; b++) {
            var e = f[a.children[b]];
            c.topLevelBox = true;
            d += $KW[e.wType].render(e, c);
            c.topLevelBox = false
          }
        }
      }
    }
    c.tabpaneID = "";
    return d
  },
  setTabsHeight: function(j) {
    var e = document.querySelectorAll("#" + j + " div[kwidgettype='tabviewTabBody']");
    var b;
    if (e) {
      for (var f = 0; f < e.length; f++) {
        var l = e[f];
        var h = l.getAttribute("id").split("_")[1];
        var k = l.getAttribute("ktabpaneid");
        var g = l.getAttribute("kformname");
        var a = kony.model.getWidgetModel(g, h, k);
        this.checkArrows(g, k);
        if (l.getAttribute("activebody") === "1") {
          b = $KU.returnEventReference(a.oninit);
          a.oninit && b.call(a, a);
          if (a.oninit) {
            delete a.oninit
          }
        }
      }
    }
    var d = document.querySelectorAll("#" + j + " div[kwidgettype='collapsibleTabBody']");
    if (d) {
      for (var f = 0; f < d.length; f++) {
        var c = d[f];
        var h = c.parentNode.getAttribute("id").split("_")[1];
        var k = c.previousSibling.getAttribute("ktabpaneid");
        var g = c.previousSibling.getAttribute("kformname");
        var a = kony.model.getWidgetModel(g, h, k);
        if (c.previousSibling.getAttribute("active") === "1") {
          b = $KU.returnEventReference(a.oninit);
          a.oninit && b.call(a, a);
          $KW.TabPane.expandTab(a, c)
        } else {
          $KW.TabPane.collapseTab(a, c)
        }
        if (c.previousSibling.getAttribute("active") === "1") {
          if (a.oninit) {
            delete a.oninit
          }
        }
      }
    }
  },
  toggleDisable: function(f) {
    var b = document.querySelectorAll("#" + f + " div[kwidgettype='TabPane']");
    for (var e = 0; e < b.length; e++) {
      var g = $KU.getModelByNode(b[e]);
      g.disabled != undefined && $KW.Widget.setenabled(g, (g.disabled == true ? false : true));
      var d = g.children;
      if (d) {
        for (var c = 0; c < d.length; c++) {
          var a = window[g.pf][g.id][d[c]];
          (a && a.disabled != undefined) && $KW.Widget.setenabled(a, (a.disabled == true ? false : true))
        }
      }
    }
  },
  collapseTab: function(a, b) {
    b.style.height = b.scrollHeight + "px";
    var c = a.transDuration ? parseInt(a.transDuration) : $KW.TabPane.ANIMATION_DELAY;
    setTimeout(function() {
      b.style.overflow = "hidden";
      if (kony.appinit.useTransition) {
        b.style[vendor + "Transition"] = "height " + c + "ms ease";
        b.style.height = "0px"
      } else {
        $("#" + b.id).animate({
          height: "0px"
        }, c)
      }
    }, 1);
    setTimeout(function() {
      $KU.addClassName(b, "hide")
    }, c)
  },
  expandTab: function(a, b) {
    b.style.display = "block";
    b.style.overflow = "hidden";
    $KU.removeClassName(b, "hide");
    $KW.TabPane.adjustFlexContainers(a.parent);
    var c = a.transDuration ? parseInt(a.transDuration) : $KW.TabPane.ANIMATION_DELAY;
    if (kony.appinit.useTransition) {
      b.style[vendor + "Transition"] = "height " + c + "ms ease";
      b.style.height = b.scrollHeight + "px"
    } else {
      $("#" + b.id).animate({
        height: b.scrollHeight + "px"
      }, c)
    }
    setTimeout(function() {
      $KW.TabPane.setTabsHeightAuto(b)
    }, c + 100)
  },
  setTabsHeightAuto: function(a) {
    a.style[vendor + "Transition"] = "";
    a.style.height = "auto"
  },
  addTab: function(f, a, d, b, c, e) {
    f.addTab(a, d, b, c, e)
  },
  addChildTab: function(f, a) {
    var b = $KU.getNodeByModel(f);
    var d = a.pf + "_" + a.id + "_Li";
    var e = $KU.getElementById(d);
    if (b && !e) {
      var c = f.children.length;
      this.addChildTabAt(f, a, c)
    }
  },
  removeTabAt: function(k, h, d) {
    h = parseInt(h);
    if (h >= IndexJL && !d) {
      h = h - IndexJL
    }
    if (h >= 0 && h <= k.children.length) {
      var b = k[k.children[h]];
      if (b) {
        _konyConstNS.ContainerWidget.prototype.remove.call(k, b)
      }
      if (k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW || k.viewtype == "tabview" || (k.toggletabs && (k.toggletabs === true))) {
        if (k.activetab == (h + IndexJL)) {
          k.activetab = IndexJL;
          k.activetabs[IndexJL] = k.activetab;
          this.updateView(k, "activetab", k.activetab, k.activetab);
          if (k.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            return
          }
        }
        if (k.activetab > (h + IndexJL)) {
          k.activetab -= 1;
          k.activetabs[IndexJL] = k.activetab
        }
      } else {
        var e = $KU.inArray(k.activetabs, parseInt(h) + IndexJL);
        if (e[0]) {
          k.activetabs.splice(e[1], 1)
        }
        if (k.activetabs.length == IndexJL) {
          if (IndexJL) {
            k.activetabs = [null, 1]
          } else {
            k.activetabs = [0]
          }
          this.updateView(k, "activetabs", k.activetabs, k.activetabs);
          return
        } else {
          for (var f = IndexJL; f < k.activetabs.length; f++) {
            var l = k.activetabs[f];
            if (l > h) {
              k.activetabs[f] = l - 1
            }
          }
        }
      }
      if (k.viewtype == "tabview" || k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        var g = $KU.getNodeByModel(k);
        if (g) {
          var j = $KU.getElementById(k.pf + "_" + k.id + "_Ul");
          if (j.children[h]) {
            j.removeChild(j.children[h])
          }
          var c = $KU.getElementById(k.pf + "_" + k.id + "_Body");
          if (k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            c = c.children[0]
          }
          if (c.children[h]) {
            c.removeChild(c.children[h])
          }
        }
        this.checkArrows(k.pf, k.id);
        if (k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          this.updatePageFooter(k)
        }
      } else {
        var a = $KU.getElementById(b.pf + "_" + b.id + "_Tab");
        if (a) {
          a.parentNode.removeChild(a)
        }
      }
      this.adjustTabIndex(k);
      $KW.TabPane.initializeView(k.pf)
    }
  },
  removeTabById: function(e, a) {
    if (a && a.id) {
      a = a.id
    }
    if (e.viewtype == "tabview" || e.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
      var d = $KU.getElementById(e.pf + "_" + a + "_Li");
      if (d) {
        var b = d.getAttribute("index");
        $KW.TabPane.removeTabAt(e, b, true)
      }
    } else {
      var c = $KU.getElementById(e.pf + "_" + a + "_Header");
      if (c) {
        var b = c.getAttribute("index");
        $KW.TabPane.removeTabAt(e, b, true)
      }
    }
  },
  setTabName: function(f, c, d) {
    var a = f[c];
    if (a) {
      a.tabname = d;
      var c = f.pf + "_" + c;
      if (f.viewtype == "tabview" || f.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        var b = $KU.getElementById(c + "_A");
        if (b) {
          b.childNodes[0].innerText = d
        }
      } else {
        if (f.viewtype === "collapsibleview") {
          var e = $KU.getElementById(c + "_Div");
          if (e) {
            e.innerText = d
          }
        }
      }
    }
  },
  addTabAt: function(f, b, e, c, d, a) {
    f.addTabAt(b, e, c, d, a)
  },
  addChildTabAt: function(o, a, e) {
    e = parseInt(e);
    var k = $KU.getNodeByModel(o);
    if (e < IndexJL) {
      e = IndexJL
    }
    if (e >= o.children.length) {
      e = o.children.length - 1 + IndexJL
    }
    if (o.viewtype == "tabview" || o.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
      var t = a.pf + "_" + a.id + "_Li";
      var q = $KU.getElementById(t);
      if (k && !q) {
        var u = a.pf + "_" + a.id;
        var b = "";
        var c = o.activeskin || "";
        var n = o.inactiveskin || "";
        var p = " ktabpaneid='" + o.id + "' kformname='" + o.pf + "'";
        var s = $KU.getElementById(o.pf + "_" + o.id + "_Ul");
        var g = $KU.getElementById(o.pf + "_" + o.id + "_Body");
        if (o.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          g = g.children[0]
        }
        if (e < o.activetab) {
          o.activetab += 1;
          o.activetabs[IndexJL] = o.activetab
        } else {
          if (e == o.activetab) {
            if (s.childNodes.length > 0) {
              var j = s.childNodes[e];
              var f = s.childNodes[e].childNodes[0];
              var v = g.childNodes[e];
              $KU.removeClassName(j, o.activeskin + "li");
              $KU.addClassName(j, o.inactiveskin + "li");
              $KU.removeClassName(f, o.activeskin + "lia");
              $KU.addClassName(f, o.inactiveskin + "lia");
              $KU.removeClassName(v, "show");
              $KU.addClassName(v, "hide");
              v.setAttribute("activebody", "0")
            }
          }
        }
        if (o.viewconfig.tabViewConfig && (o.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_LEFT || o.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_RIGHT)) {
          b = this.generateTabViewSide(o, a, e)
        } else {
          b = this.generateTabViewLi(o, a, e)
        }
        var d = document.createElement("div");
        d.innerHTML = b;
        if (s.children[e - IndexJL]) {
          s.insertBefore(d.children[0], s.children[e - IndexJL])
        } else {
          s.appendChild(d.children[0])
        }
        b = this.generateTabViewBody(o, a, e, o.context);
        d = document.createElement("div");
        d.innerHTML = b;
        if (g.children[e - IndexJL]) {
          g.insertBefore(d.children[0], g.children[e - IndexJL])
        } else {
          g.appendChild(d.children[0])
        }
        this.checkArrows(o.pf, o.id);
        if (o.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          this.updatePageFooter(o)
        }
      }
    } else {
      if (o.viewtype === "collapsibleview") {
        var l = $KU.getElementById(a.pf + "_" + a.id + "_Tab");
        if (k && !l) {
          if (o.toggletabs === false) {
            b = this.generateCollapsibleViewTab(o, a, e, o.context)
          } else {
            b = this.generateAccordionViewTab(o, a, e, o.context)
          }
          d = document.createElement("div");
          d.innerHTML = b;
          var h = $KU.getNodeByModel(o);
          if (h.children[e - IndexJL]) {
            h.insertBefore(d.children[0], h.children[e - IndexJL])
          } else {
            h.appendChild(d.children[0])
          }
          if (o.toggletabs) {
            l = $KU.getElementById(a.pf + "_" + a.id + "_Tab");
            this.collapseTab(a, l.children[1])
          }
          for (var m = IndexJL; m < o.activetabs.length; m++) {
            var r = o.activetabs[m];
            if (r >= e) {
              o.activetabs[m] = r + 1
            }
          }
          o.activetab = o.activetabs[IndexJL]
        }
      }
    }
    this.adjustTabIndex(o);
    k && $KW.Utils.initializeNewWidgets(a.ownchildrenref);
    $KW.TabPane.initializeView(o.pf)
  },
  adjustTabIndex: function(g) {
    var a = $KU.getNodeByModel(g);
    if (a) {
      if (g.viewtype == "tabview" || g.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        var b = $KU.getElementById(g.pf + "_" + g.id + "_Ul");
        for (var e = 0; e < b.children.length; e++) {
          var d = b.children[e];
          d.setAttribute("index", e);
          d.children[0].setAttribute("index", e)
        }
      } else {
        for (var c = 0; c < a.children.length; c++) {
          var f = a.children[c];
          f.children[0].setAttribute("index", c)
        }
      }
    }
  },
  eventHandler: function(w, C, a, r) {
    var B = C.getAttribute("id");
    var h = C.getAttribute("ktabpaneid");
    var l = C.getAttribute("kformname");
    var n = B.split("_");
    var u = n[1];
    var f = kony.model.getWidgetModel(l, u, h);
    var c = f.transDuration ? parseInt(f.transDuration) : $KW.TabPane.ANIMATION_DELAY;
    var z = kony.model.getWidgetModel(l, h);
    var v = $KU.returnEventReference(f.oninit);
    var d = false;
    if (f.oninit) {
      v.call(f, f)
    }
    var e = $KU.getElementById(n[0] + "_" + u + "_Body");
    var m = $KU.getElementById(n[0] + "_" + u + "_Header");
    var b = $KU.getElementById(n[0] + "_" + u + "_Img");
    var g = $KU.getElementById(n[0] + "_" + u + "_Li");
    if (z.viewtype === "collapsibleview" && z.toggletabs === false) {
      if (e.style.height === "auto") {
        $KW.TabPane.collapseTab(f, e);
        if (z.inactiveskin) {
          setTimeout(function() {
            if (z.inactiveskin) {
              m.className = z.inactiveskin
            }
          }, c)
        }
        m.setAttribute("active", "0");
        var o = m.getAttribute("index");
        z.activetabs = z.activetabs || [];
        var k = $KU.inArray(z.activetabs, parseInt(o) + IndexJL);
        if (k[0]) {
          z.activetabs.splice(k[1], 1)
        }
        if (z.expandedimage && b) {
          setTimeout(function() {
            b.src = $KU.getImageURL(z.expandedimage)
          }, c)
        }
      } else {
        d = true;
        z.activetabs = z.activetabs || [];
        var o = m.getAttribute("index");
        var k = $KU.inArray(z.activeTabs, parseInt(o) + IndexJL);
        if (!k[0]) {
          z.activetabs.push(parseInt(o) + IndexJL);
          if (IndexJL) {
            $KI.table.sort(z.activetabs)
          } else {
            z.activetabs.sort()
          }
        }
        e.style.display = "block";
        $KW.TabPane.expandTab(f, e);
        if (z.activeskin) {
          m.className = z.activeskin
        }
        m.setAttribute("active", "1");
        if (z.collapsedimage && b) {
          b.src = $KU.getImageURL(z.collapsedimage)
        }
      }
    } else {
      if (z.viewtype === "tabview" || z.viewtype === constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        $KW.TabPane.changeActiveTabSkin(z, u);
        if (z.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          var A = $KU.getElementById(z.pf + "_" + z.id + "_Body").children[0];
          var p = z.swipeContext;
          p.currentPage = g.getAttribute("index") * 1;
          $KW.touch.scrollImages(A, p.imageWidth * p.currentPage, $KU.swipeDuration, false, {
            tabPaneModel: z,
            tabID: u,
            tabArray: n
          })
        }
      } else {
        if (z.viewtype === "collapsibleview" && z.toggletabs === true) {
          var y = m.getAttribute("active");
          for (var x = 0; x < z.children.length; x++) {
            var q = $KU.getElementById(n[0] + "_" + z.children[x] + "_Body");
            var t = $KU.getElementById(n[0] + "_" + z.children[x] + "_Header");
            var s = $KU.getElementById(n[0] + "_" + z.children[x] + "_Img");
            if (z.children[x] === u) {
              if (e.style.height === "0px") {
                if (z.activetab == 0) {
                  z.activetab = x + IndexJL;
                  z.activetabs[IndexJL] = z.activetab
                }
                d = true;
                $KW.TabPane.expandTab(f, e);
                if (z.activeskin) {
                  m.className = z.activeskin
                }
                m.setAttribute("active", "1");
                if (z.collapsedimage && b) {
                  b.src = $KU.getImageURL(z.collapsedimage)
                }
                z.activetab = x + IndexJL;
                z.activetabs = IndexJL ? [null, z.activetab] : [z.activetab]
              } else {
                $KW.TabPane.collapseTab(f, e);
                if (z.inactiveskin) {
                  setTimeout(function() {
                    m.className = z.inactiveskin;
                    m.setAttribute("active", "0")
                  }, c)
                }
                if (z.expandedimage && b) {
                  setTimeout(function() {
                    b.src = $KU.getImageURL(z.expandedimage)
                  }, c)
                }
                z.activetab = null;
                z.activetabs = null
              }
            } else {
              if (q.style.height !== "0px") {
                q.style.display = "block";
                $KW.TabPane.collapseTab(f, q);
                if (z.inactiveskin) {
                  t.className = z.inactiveskin
                }
                if (z.expandedimage && b) {
                  s.src = $KU.getImageURL(z.expandedimage)
                }
                t.setAttribute("active", "0")
              }
            }
          }
        }
      }
    }
    if (f.oninit) {
      delete f.oninit
    }
    $KW.Utils.reinitializeWidgets(z);
    var j = $KU.returnEventReference(z.onclick || z.ontabclick);
    if ((r == true || typeof r == "undefined") && j) {
      j.call(f, f, z.activetab, d);
      $KU.onEventHandler(f)
    }
    if ($KW.Map && $KW.Map.map && google) {
      $KW.Map.setMapsHeight(z.pf);
      google.maps.event.trigger($KW.Map.map, "resize")
    }
  },
  adjustActiveTabs: function(b) {
    if (!b.activetabs) {
      return
    }
    var a = IndexJL ? [null] : [];
    a.push(b.activetabs[IndexJL]);
    b.activetabs = a
  },
  changeActiveTabSkin: function(f, b) {
    for (var c = 0; c < f.children.length; c++) {
      var e = $KU.getElementById(f.pf + "_" + f.children[c] + "_Body");
      var d = $KU.getElementById(f.pf + "_" + f.children[c] + "_Li");
      var a = $KU.getElementById(f.pf + "_" + f.children[c] + "_A");
      if (f.children[c] === b) {
        if (f.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          e.className = "show " + ((f[f.children[c]].skin) ? f[f.children[c]].skin : "")
        }
        if (f.activeskin) {
          $KU.removeClassName(d, f.inactiveskin + "li");
          $KU.removeClassName(a, f.inactiveskin + "lia");
          $KU.addClassName(d, f.activeskin + "li");
          $KU.addClassName(a, f.activeskin + "lia");
          e.setAttribute("activebody", "1")
        }
        f.activetab = c + IndexJL;
        f.activetabs[IndexJL] = f.activetab
      } else {
        if (f.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          e.className = "hide " + ((f[f.children[c]].skin) ? f[f.children[c]].skin : "")
        }
        e.setAttribute("activebody", "0");
        $KU.removeClassName(d, f.activeskin + "li");
        $KU.removeClassName(a, f.activeskin + "lia");
        $KU.addClassName(d, f.inactiveskin + "li");
        $KU.addClassName(a, f.inactiveskin + "lia")
      }
      $KW.TabPane.adjustFlexContainers(f)
    }
  },
  updateData: function(e, b, g, j, d, a) {
    if (g && j) {
      var h = b.getAttribute("kcontainerID");
      var c = g[h];
      var i = c.headertemplatedata;
      (a && i) && $KW.Utils.updateContainerMasterData(c, i, e, b);
      var f = false;
      if (d) {
        f = kony.events.executeBoxEvent(e)
      }
      this.eventHandler("", j, "", !f)
    }
  },
  eventHandlerArrow: function(k, s, a, j) {
    var c = s.getAttribute("ktabpaneid");
    var f = s.getAttribute("kformname");
    var m = kony.model.getWidgetModel(f, c);
    var o = s.getAttribute("id");
    var g = o.split("_");
    var q = g[2];
    var p = $KU.getElementById(g[0] + "_" + g[1] + "_Ul");
    if (p) {
      if (!p.style.left) {
        p.style.left = "0px"
      }
      if (!p.style.top) {
        p.style.top = "0px"
      }
      var b = p.style.left;
      var i = p.style.top;
      var d = parseInt(b.replace(/px/, ""), 10);
      var l = parseInt(i.replace(/px/, ""), 10);
      var e = Math.abs(p.scrollWidth - p.offsetWidth);
      var n = p.parentNode.offsetHeight;
      var h = p.parentNode.scrollHeight;
      if (kony.appinit.isIE) {
        h = p.scrollHeight
      }
      var r = Math.abs(h - n);
      if (q === "R" && d != -e) {
        if ((d - 50) <= -e) {
          p.style.left = -e + "px"
        } else {
          p.style.left = (d - 50) + "px"
        }
      }
      if (q === "L" && d != 0) {
        if ((d + 50) <= -50 && (d + 50) <= 0) {
          p.style.left = (d + 50) + "px"
        } else {
          p.style.left = "0px"
        }
      }
      if (q === "T" && l != 0) {
        if ((l + 50) <= -50 && (l + 50) <= 0) {
          p.style.top = (l + 50) + "px"
        } else {
          p.style.top = "0px"
        }
      }
      if (q === "B" && l != -r) {
        if ((l - 50) <= -r) {
          p.style.top = -r + "px"
        } else {
          p.style.top = (l - 50) + "px"
        }
      }
    }
  },
  checkArrows: function(f, l) {
    var k = kony.model.getWidgetModel(f, l);
    var c = $KU.getElementById(f + "_" + l + "_Ul");
    var j = $KU.getElementById(f + "_" + l + "_L");
    var g = $KU.getElementById(f + "_" + l + "_R");
    var a = $KU.getElementById(f + "_" + l + "_T");
    var i = $KU.getElementById(f + "_" + l + "_B");
    var e = c.parentNode;
    if (Math.abs(e.scrollWidth - e.offsetWidth) > 1) {
      if (j) {
        $KU.removeClassName(j, "hide")
      }
      if (g) {
        $KU.removeClassName(g, "hide")
      }
      $KU.addClassName(c.parentNode, "kwt96")
    } else {
      if (j) {
        $KU.addClassName(j, "hide")
      }
      if (g) {
        $KU.addClassName(g, "hide")
      }
      $KU.removeClassName(c.parentNode, "kwt96");
      c.style.left = "0px"
    }
    if (k.viewconfig.tabViewConfig && ((k.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_LEFT) || (k.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_RIGHT))) {
      var d = $KU.getElementById(f + "_" + l + "_Body");
      c.parentNode.style.height = Math.ceil(d.offsetWidth * 0.15) + "px"
    }
    var h = c.parentNode.offsetHeight;
    var b = c.parentNode.scrollHeight;
    if (kony.appinit.isIE) {
      b = c.scrollHeight
    }
    if (b > h) {
      if (a) {
        $KU.removeClassName(a, "hide")
      }
      if (i) {
        $KU.removeClassName(i, "hide")
      }
    } else {
      if (a) {
        $KU.addClassName(a, "hide")
      }
      if (i) {
        $KU.addClassName(i, "hide")
      }
      c.style.top = "0px"
    }
  },
  setPfForTabHeader: function(c, b) {
    if (c && c.children) {
      for (var a = 0; a < c.children.length; a++) {
        c[c.children[a]].pf = b.pf;
        c[c.children[a]].tabId = b.tabID;
        if (c[c.children[a]].children) {
          this.setPfForTabHeader(c[c.children[a]], b)
        }
      }
    }
  },
  generatePageFooter: function(h) {
    var e = "";
    var f = "";
    var a = h.paginationconfig;
    var d = (a && a.hdistance) || 0;
    if (h.children.length > IndexJL) {
      var g = !d || (d == 0);
      var b = g ? "align='center'" : "style='text-align: left;'";
      if (h.needpageindicator) {
        e += "<div class='ktable kwt100 '  id='" + h.pf + "_" + h.id + "_footer' >"
      } else {
        e += "<div class='ktable kwt100 ' style='display:none' id='" + h.pf + "_" + h.id + "_footer' >"
      }
      e += "<div class='krow kwt100' " + b + "><div class='kcell'>";
      h.pageondotimage = h.pageondotimage || "whitedot.gif";
      h.pageoffdotimage = h.pageoffdotimage || "blackdot.gif";
      for (var c = IndexJL; c < h.children.length; c++) {
        f = (typeof h.activetab != "number" && c == IndexJL) ? h.pageondotimage : (h.activetab == c) ? h.pageondotimage : h.pageoffdotimage;
        e += "<span onclick='$KW.touch.navigationDotsHandler(this)' index='" + c + "'><img style='padding-left:4px' src='" + $KU.getImageURL(f) + "' /></span>"
      }
      e += "</div></div></div>"
    }
    return e
  },
  updatePageFooter: function(d) {
    var a = this.generatePageFooter(d);
    var c = document.createElement("div");
    var b = document.getElementById(d.pf + "_" + d.id + "_Body");
    c.innerHTML = a;
    b.parentNode.removeChild(b.nextSibling);
    b.parentNode.appendChild(c.children[0])
  },
  adjustFlexContainersInTab: function(b, a) {
    var d = a.querySelectorAll("div[tabHeader='true']");
    for (var c = 0; c < d.length; c++) {
      this.adjustFlexContainersInTabRows(d[c])
    }
  },
  adjustFlexContainersInTabRows: function(b) {
    var c = b.querySelector('div[kwidgettype="FlexContainer"]');
    if (c) {
      var a = $KU.getModelByNode(c);
      $KW.FlexContainer.forceLayout(a, c.parentNode)
    }
  }
};
$KW.Switch = {
  initialize: function() {
    kony.events.addEvent("click", "Switch", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Switch", this.adjustSwitchWidth)
  },
  initializeView: function(a) {
    this.adjustSwitchWidth(a, true);
    this.adjustSwitchHeight(a)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "selectedindex":
        this.adjustSwitch(e, d, "all 0.125s ease-in-out");
        break
    }
  },
  addA11YAttribute: function(a, b, c) {
    if (!a.accessibilityConfig || c) {
      if (a.leftsidetext && a.selectedIndex === 0) {
        b.setAttribute("aria-label", a.leftsidetext)
      } else {
        if (a.rightsidetext) {
          b.setAttribute("aria-label", a.rightsidetext)
        }
      }
    }
  },
  render: function(a, b) {
    var e = $KW.skins.getWidgetSkinList(a, b);
    var d = $KW.skins.getMarginSkin(a, b);
    var c = a.leftsidetext || "ON";
    var g = a.rightsidetext || "OFF";
    var h = "";
    if (a.accessibilityConfig == undefined) {
      if (a.leftsidetext && a.selectedIndex === 0) {
        h = " aria-label='" + a.leftsidetext + "' "
      } else {
        if (a.rightsidetext) {
          h = " aria-label='" + a.rightsidetext + "' "
        }
      }
    }
    a.selectedindex = (a.selectedindex == IndexJL) ? IndexJL : IndexJL + 1;
    if (kony.appinit.isIE9 || kony.appinit.isIE8) {
      var f = "<div" + $KW.Utils.getBaseHtml(a, b) + "class='ktable kwt100 switch " + e + "' style='" + d + ";position:relative'><div class='krow kwt100 switchRow'><div class='kcell kwt50 " + (a.skin ? (a.skin + "on") : "on konycustomcss") + "' id='" + a.id + "_on'>" + c + "</div><div class='switchThumb thumb kwt50' id='" + a.id + "_thumb' style='left:" + (["40%", "0%"][a.selectedindex]) + "''></div><div class='kcell kwt50 " + (a.skin ? (a.skin + "off") : "off konycustomcss") + "' id='" + a.id + "_off'>" + g + "</div></div></div>"
    } else {
      var f = "<div role='option' aria-selected='" + ["true", "false"][a.selectedIndex] + "' " + h + $KW.Utils.getBaseHtml(a, b) + "class='kwt100 switch " + e + "' style='" + d + "'><div aria-hidden='true' class='" + (a.skin ? (a.skin + "on") : "on konycustomcss") + "' id='" + a.id + "_on'>" + c + "</div><div aria-hidden='true' class='thumb' id='" + a.id + "_thumb'> <span></span></div><div aria-hidden='true' class=' " + (a.skin ? (a.skin + "off") : "off konycustomcss") + "' id='" + a.id + "_off'>" + g + "</div></div>"
    }
    return f
  },
  adjustSwitchWidth: function(e, d) {
    var c = document.querySelectorAll("#" + e + " div[kwidgettype='Switch'], div[class~='popupmain'] div[kwidgettype='Switch']");
    for (var b = 0; b < c.length; b++) {
      var a = $KU.getModelByNode(c[b]);
      $KW.Switch.adjustWidth(a, c[b], d)
    }
  },
  adjustWidth: function(a, c, d) {
    if (!(kony.appinit.isIE9 || kony.appinit.isIE8)) {
      c.children[0].style.marginRight = "-6px";
      c.children[2].style.marginLeft = "-6px";
      a.cWidth = (Math.floor(c.clientWidth / 2));
      a.sWidth = a.cWidth + (c.clientWidth % 2) + 6;
      c.children[0].style.width = (a.sWidth - 2) + "px";
      c.children[2].style.width = a.sWidth + "px";
      c.children[1].childNodes[1].style.width = a.cWidth + "px";
      $KW.Switch.adjustSwitch(a, c, "none");
      if ($KU.isIE11) {
        for (var b = 0; b < c.children.length; b++) {
          c.children[b].style.flex = "none"
        }
      }
    } else {
      c = c.firstChild;
      c.children[1].style.width = c.children[0].offsetWidth
    }
  },
  toggleSwitch: function(b) {
    var d = $KU.getNodeByModel(b);
    var e = d.getAttribute("kdisabled");
    if (d && e != "true") {
      this.applyTrans(d, "all 0.125s ease-in-out");
      if (b.selectedindex == IndexJL) {
        b.selectedindex = IndexJL + 1;
        if (kony.appinit.isIE9 || kony.appinit.isIE8) {
          this.animateSwitch(b, d)
        } else {
          if ($KU.isIOSgt6) {
            d.children[1].style[vendor + "Transform"] = translateOpen + 1.5 + "px,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = "scale(1)"
          } else {
            d.children[0].style[vendor + "Transform"] = translateOpen + (-(b.cWidth + 8)) + "px,0" + translateClose;
            d.children[1].style[vendor + "Transform"] = translateOpen + (-b.cWidth + 2) + "px,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = translateOpen + (-b.cWidth) + "px,0" + translateClose
          }
        }
      } else {
        b.selectedindex = IndexJL;
        if (kony.appinit.isIE9 || kony.appinit.isIE8) {
          if (parseInt(d.style.paddingRight) > 0) {
            var c = d.firstChild;
            b.orgwidthVal = c ? c.offsetLeft + c.firstChild.offsetWidth : [0, 50][b.selectedindex];
            b.orgwidthVal = (b.orgwidthVal) - (b.orgwidthVal % 10)
          }
          b.widthVal = [0, 50][b.selectedindex];
          $KI.timer.schedule(b.id, this.toogleSwitchIE(b, b.selectedindex), 0.05, true)
        } else {
          d.children[0].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
          if ($KU.isIOSgt6) {
            d.children[1].style[vendor + "Transform"] = translateOpen + 21.5 + "px,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = "scale(0.01)"
          } else {
            d.children[1].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose
          }
        }
      }
      var a = $KU.returnEventReference(b.onslide || b.onslidercallback);
      d.setAttribute("aria-selected", [true, false][b.selectedIndex]);
      $KW.Switch.addA11YAttribute(b, d);
      if (a) {
        a.call(b, b);
        $KU.onEventHandler(b)
      }
    }
  },
  toogleSwitchIE: function(a, b) {
    return function() {
      var c = false;
      var d = $KU.getNodeByModel(a);
      d = d.firstChild;
      if (b) {
        if (a.orgwidthVal) {
          a.orgwidthVal1 -= Math.floor(a.orgwidthVal / 5);
          d.children[1].style.left = a.orgwidthVal1 + a.widthVal + "px";
          if (a.orgwidthVal1 >= 0 || a.orgwidthVal1 <= 5) {
            c = true;
            d.children[1].style.left = a.widthVal + "px";
            a.orgwidthVal = null;
            a.orgwidthVal1 = null
          }
        } else {
          a.widthVal -= 10;
          d.children[1].style.left = a.widthVal + "%";
          if (a.widthVal == 0) {
            c = true
          }
        }
      } else {
        if (a.orgwidthVal) {
          a.widthVal += a.orgwidthVal / 5;
          d.children[1].style.left = a.widthVal + "px";
          if (a.widthVal == a.orgwidthVal) {
            c = true;
            a.orgwidthVal = null;
            a.orgwidthVal1 = null
          }
        } else {
          a.widthVal += 10;
          d.children[1].style.left = a.widthVal + "%";
          if (a.widthVal == 50) {
            c = true
          }
        }
      }
      if (c) {
        $KI.timer.cancel(a.id)
      }
    }
  },
  adjustSwitch: function(a, c, b) {
    if (kony.appinit.isIE9 || kony.appinit.isIE8) {
      this.animateSwitch(a, c);
      return
    }
    this.applyTrans(c, b);
    if (a.selectedindex == IndexJL) {
      c.children[0].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
      if ($KU.isIOSgt6) {
        c.children[1].style[vendor + "Transform"] = translateOpen + "21.5px,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = "scale(0.01)"
      } else {
        c.children[1].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = translateOpen + "7px,0" + translateClose
      }
    } else {
      c.children[0].style[vendor + "Transform"] = translateOpen + (-(a.cWidth + 6)) + "px,0" + translateClose;
      if ($KU.isIOSgt6) {
        c.children[1].style[vendor + "Transform"] = translateOpen + 1.5 + "px,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = "scale(1)"
      } else {
        c.children[1].style[vendor + "Transform"] = translateOpen + (-a.cWidth + 2) + "px,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = translateOpen + (-a.cWidth) + "px,0" + translateClose
      }
    }
  },
  animateSwitch: function(a, c) {
    a.widthVal = [0, 50][a.selectedindex];
    if (parseInt(c.style.paddingLeft) > 0) {
      var b = c.firstChild;
      a.widthVal = b.offsetLeft;
      a.orgwidthVal = parseInt(b.children[1].style.left);
      a.orgwidthVal = (a.orgwidthVal) - (a.orgwidthVal % 10);
      a.orgwidthVal = a.orgwidthVal - a.widthVal;
      a.orgwidthVal1 = a.orgwidthVal
    }
    $KI.timer.schedule(a.id, this.toogleSwitchIE(a, a.selectedindex), 0.05, true)
  },
  applyTrans: function(b, a) {
    if (!(kony.appinit.isIE9 || kony.appinit.isIE8)) {
      b.children[1].style[vendor + "Transition"] = a;
      b.children[0].style[vendor + "Transition"] = a;
      b.children[2].style[vendor + "Transition"] = a
    }
  },
  eventHandler: function(b, c) {
    var a = $KU.getModelByNode(c);
    $KW.Switch.toggleSwitch(a)
  },
  adjustThumbHeight: function(b, a) {
    if (kony.appinit.isIE9 || kony.appinit.isIE8) {
      b = b.firstChild
    }
    a.target.naturalHeight = a.target.naturalHeight || a.target.height;
    b.children[0].style.height = b.children[2].style.height = (a.target.naturalHeight + "px");
    b.children[1].childNodes[1].style.height = ((a.target.naturalHeight - 2) + "px")
  },
  adjustSwitchHeight: function(d) {
    var c = document.querySelectorAll("#" + d + " div[kwidgettype='Switch']");
    for (var b = 0; b < c.length; b++) {
      var a = $KU.getModelByNode(c[b]);
      $KW.Switch.adjustHeight(a, c[b])
    }
  },
  adjustHeight: function(b, c) {
    if (!(kony.appinit.isIE9 || kony.appinit.isIE8)) {
      c.children[0].style.minHeight = "27px";
      c.children[2].style.minHeight = "27px"
    }
    if (c.style.padding && (kony.appinit.isIE9 || kony.appinit.isIE8)) {
      var d = c.firstChild;
      var e = d.offsetTop;
      d.children[1].style.top = (e) + "px"
    }
    if (b.skin) {
      var a = $KU.getCSSPropertyFromRule((b.skin + "on"), "background-image")
    }
    if (a) {
      var f = a.replace(/url\(([^\)]*)\)/, "$1");
      $KU.imagePreloader(f, function(g) {
        return function(h) {
          kony.events.preventDefault(h);
          $KW.Switch.adjustThumbHeight(g, h)
        }
      }(c))
    }
  }
};
$KW.Popup = {
  updateView: function(g, d, c, a) {
    switch (d) {
      case "ismodal":
      case "transparencybehindthepopup":
        var f = 1 - (g.transparencybehindthepopup / 100);
        var b = document.getElementById("__popuplayer");
        var h = document.getElementById(g.id + "_container");
        if (b) {
          if (kony.appinit.isIE7 || kony.appinit.isIE8) {
            b.style.filter = "alpha(opacity=" + (f * 100) + ")"
          } else {
            b.style.opacity = f
          }
        }
        break;
      case "title":
        var e = document.getElementById(g.id + "_titlebar");
        if (e) {
          e.childNodes[0].innerHTML = c
        }
        break
    }
  },
  render: function(e) {
    if ($KG.localization) {
      $KI.i18n.translateFormModel(e)
    }
    var l = "";
    var c = "";
    var d = e.id;
    var h = $KW.skins.getMarPadAdjustedContainerWeightSkin(e, e.ismodal ? "" : 100) + " " + ((e.ismodal && e.skin) ? e.skin : "");
    var k = 1 - (e.transparencybehindthepopup / 100);
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      c = "filter:alpha(opacity= " + (k * 100) + ")"
    } else {
      c = "opacity:" + k
    }
    if (e.ismodal) {
      l = "<div id='__popuplayer' style='" + c + "' class='popuplayer'></div>"
    }
    l += "<form action='javascript:;' id='" + d + "' class='" + h + "' style='z-index:9;" + (!e.skin ? "background-color:white;" : "") + (e.ismodal ? "xoverflow:auto;position:absolute;max-height:" + (e.containerheight || 80) + "%;" : "") + "'>";
    l += this.generatePopupHeader(e);
    l += "<div id='" + d + "_body' style='position:relative;width:100%;'>";
    l += "<div style='" + $KW.skins.getPaddingSkin(e) + "'>";
    l += e.header ? $KW.Form.generateHeader(e.header, "header") : "";
    if (e.children) {
      var f = new $KW.WidgetGenerationContext(e.id);
      if (e.layouttype == constants.CONTAINER_LAYOUT_GRID) {
        l += $KW.Grid.render(e, f)
      } else {
        for (var j = 0; j < e.children.length; j++) {
          l += $KW.Form.generateWidget(e, e[e.children[j]])
        }
      }
    }
    l += e.footer ? $KW.Form.generateHeader(e.footer, "footer") : "";
    l += "</div></div>";
    if (e.resizable) {
      l += "<div><div id='" + d + "_resizearea' class='resizearea'></div></div>"
    }
    l += "</form>";
    var b = document.createElement("div");
    b.id = d + "_container";
    if (!e.ismodal) {
      b.className = e.skin || "";
      b.style.position = "fixed";
      b.style.overflow = "hidden";
      b.style.maxHeight = (e.containerheight || 80) + "%";
      b.style.width = (e.containerweight * document.getElementsByTagName("body")[0].offsetWidth / 100) + "px";
      b.setAttribute("name", "nonmodalpopup")
    } else {
      b.className = "popupcontainer"
    }
    b.style.visibility = "hidden";
    b.innerHTML = l;
    $KW.Popup.zindex = $KW.Popup.zindex || 10;
    b.style.zIndex = ++$KW.Popup.zindex;
    var g = $KU.getElementById("__MainContainer");
    if (!g) {
      l = "<div id='__MainContainer'></div>";
      document.body.innerHTML = l;
      g = $KU.getElementById("__MainContainer")
    }
    g.appendChild(b);
    var a = kony.appinit.isFirefox ? "DOMMouseScroll" : "mousewheel";
    kony.events.addEventListener(b, a, function(n) {
      var q = n.wheelDelta ? (n.wheelDelta / 120) : (n.detail ? (-n.detail / 3) : 0);
      n = n || window.event;
      var m = n.target || n.srcElement;
      var o = $KW.Popup.getParentScroller(m);
      while (o) {
        if (!((o.scrollTop == (o.scrollHeight - o.clientHeight) && q < 0) || (o.scrollTop == 0 && q > 0))) {
          return
        }
        o = $KW.Popup.getParentScroller(o.parentNode)
      }
      var p = b.childNodes[1] || b.childNodes[0];
      var i = document.getElementById(p.id + "_body");
      if ((i.scrollTop == (i.scrollHeight - i.clientHeight) && q < 0) || (i.scrollTop == 0 && q > 0)) {
        kony.events.preventDefault(n)
      }
    })
  },
  getParentScroller: function(b) {
    var c = b;
    while (c) {
      var a = c.getAttribute && c.getAttribute(kony.constants.KONY_WIDGET_TYPE);
      if (a) {
        if (a == "Popup") {
          return
        }
        if (a == "ScrollBox") {
          return c
        }
      }
      c = c.parentNode
    }
  },
  show: function(a) {
    $KW.Calendar && $KW.Calendar.__dp.destroyCalendar();
    !kony.system.activity.hasActivity() && $KW.Utils.removeBlockUISkin();
    var i = $KU.getElementById(a.id + "_container");
    if (i) {
      this.dismiss(a)
    }
    $KU.updateScrollFlag(a);
    this.render(a);
    var j = $KU.getElementById(a.id + "_container");
    var b = a.context;
    var h = b && b.widget;
    var d = $KU.getNodeByModel(h);
    if (b && b.widget && b.isenabled && !a.enableScroll) {
      if (d && $KU.getPosition(d).top == 0) {
        j.style.top = d.offsetHeight + "px"
      }
    }
    $KW.TPW.renderWidget(a.id);
    i = j;
    if (a.ismodal) {
      i = j.getElementsByTagName("form")[0]
    }
    if ((!$KG.disableTransition || $KU.isBlackBerryNTH) && kony.appinit.useTransition) {
      $KW.Form.initializeTouchWidgets(a.id)
    } else {
      if (a.ismodal) {
        i.parentNode.style.visibility = "visible"
      } else {
        i.style.visibility = "visible"
      }
      $KW.Scroller.initializePageViews(a.id);
      $KW.Form.initializeView(a.id)
    }
    if (a.draggable) {
      var g = $KU.getElementById(a.id + "_titlebar");
      if (g) {
        a.drag = new $KW.touch.Drag(a, i, g, i.parentNode, this.dragEvent, i);
        $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
        $KW.Popup.undockedpopups[a.id] = a
      }
    }
    if (a.resizable) {
      var k = $KU.getElementById(a.id + "_resizearea");
      new $KW.touch.Drag(a, i, k, i.parentNode, this.dragEvent, i)
    }
    var c = document.getElementById("__popuplayer");
    if (c) {
      c.style.width = document.body.style.width
    }
    if (kony.appinit.isIE7 || kony.appinit.isFirefox) {
      i.parentNode.style.zIndex = $KW.Popup.zindex
    }
    var f = j.querySelectorAll("[name=map_canvas]")[0];
    var e = $KG.mapScriptLoaded;
    if (f && e) {
      $KW.Map.setUpInteractiveCanvasMap()
    }
    $KU.changea11yDynamicElement(a.id);
    this.updateContainerHeight(a, j);
    if (!$KG.disableTransition || $KU.isBlackBerryNTH) {
      this.applyTransition(a, i)
    }
  },
  updateContainerHeight: function(c, a) {
    var b = c.ismodal ? a.childNodes[1] : a;
    if (c.containerheight || c.containerheight == 0) {
      b.style.maxHeight = "";
      b.style.height = "100%"
    } else {
      b.style.height = "auto"
    }
    $KU.setScrollHeight(c, b);
    this.setPopupBodyHeight(c, b);
    this.setPopupPosition(c, b)
  },
  setPopupBodyHeight: function(d, a) {
    var g = $KU.getElementById(d.id + "_titlebar");
    if (g) {
      var b = $KU.getElementById("minmax_" + d.id);
      if (b) {
        g.style.height = (kony.appinit.isFirefox ? b.offsetHeight + 20 : b.parentNode.clientHeight) + "px";
        if (kony.appinit.isIE8) {
          b.onclick = function(h) {
            if (!h) {
              h = window.event
            }
            $KW.Popup.minimize(this, h)
          };
          var c = $KU.getElementById("close_" + d.id);
          c.onclick = function(h) {
            if (!h) {
              h = window.event
            }
            $KW.Popup.close(this, h)
          }
        }
      }
      var f = g.parentNode.childNodes[1];
      var e = parseInt($KU.getStyle(f, "padding-top").replace("px", ""), 10) + parseInt($KU.getStyle(f, "padding-bottom").replace("px", ""), 10);
      f.style.height = ((d.ismodal ? g.parentNode.clientHeight : a.clientHeight) - e - g.clientHeight - (d.resizable ? 13 : 0)) + "px";
      f.style.overflow = "auto"
    } else {
      a.style.overflow = "auto"
    }
  },
  setPopupPosition: function(b, a) {
    if (!b.context) {
      var d = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
      var c = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
      a.style.top = Math.floor((100 - Math.floor((a.offsetHeight * 100) / d)) / 2) + "%";
      if (Math.floor((100 - Math.floor((a.offsetHeight * 100) / d)) / 2) < 10) {
        a.style.top = "0%"
      }
      a.style.left = Math.floor((100 - Math.floor((a.offsetWidth * 100) / c)) / 2) + "%"
    }
  },
  dismiss: function(b) {
    var c = b ? $KU.getElementById(b.id + "_container") : document.querySelector("div[class~='popupmain']");
    if (c) {
      var a = c.getElementsByTagName("form")[0];
      if (!b) {
        var e = a.id.split("_")[0];
        b = window[e]
      }
      if (b.ptranOut && (b.ptranOut.toLowerCase() != "none") && (!$KG.disableTransition || $KU.isBlackBerryNTH)) {
        this.applyTransition(b, (b.ismodal ? a : c), true)
      } else {
        $KW.Popup.domremove(a)
      }
      $KW.Popup.dockedpopups = $KW.Popup.dockedpopups || {};
      if ($KW.Popup.dockedpopups[b.id]) {
        delete $KW.Popup.dockedpopups[b.id]
      }
      $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
      if ($KW.Popup.undockedpopups[b.id]) {
        delete $KW.Popup.undockedpopups[b.id]
      }
      this.updateMinimizePositions(b);
      if (b.drag) {
        b.drag.removeDrag()
      }
      var d = $KU.returnEventReference(b.onhide || b.onHide);
      d && d.call(b, b);
      b.isMinimized = false
    }
  },
  domremove: function(b) {
    if (b) {
      var a = b.parentNode;
      a.parentNode.removeChild(a)
    }
  },
  minimize: function(b, d) {
    if (b) {
      var f = b.parentNode.parentNode;
      var a = f.parentNode;
      var c = $KG.allforms[a.id];
      if (c.isMinimized) {
        return
      }
      $KW.Popup.dockedpopups = $KW.Popup.dockedpopups || {};
      $KW.Popup.dockedpopups[a.id] = c;
      $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
      if (c && $KW.Popup.undockedpopups[c.id]) {
        delete $KW.Popup.undockedpopups[c.id]
      }
      b.src = $KU.getImageURL(c.titlebarconfig.maxicon);
      b.title = "Maximize";
      b.onclick = function(g) {
        if (!g) {
          g = window.event
        }
        $KW.Popup.maximize(this, g)
      };
      var e = c.ismodal ? a : a.parentNode;
      c.width = e.style.width;
      e.style.width = "20%";
      e.style.overflow = "";
      a.children[1].style.display = "none";
      c.position = [e.style.top, e.style.left];
      this.updateMinimizePositions(c);
      if (c.drag) {
        c.drag.removeDrag()
      }
      if (c.resizable) {
        $KU.getElementById(c.id + "_resizearea").style.display = "none"
      }
      c.isMinimized = true
    }
  },
  maximize: function(c, e) {
    if (!e) {
      e = window.event
    }
    if (c) {
      var g = c.parentNode.parentNode;
      var a = g.parentNode;
      var b = a.id;
      var d = $KG.allforms[a.id];
      c.src = $KU.getImageURL(d.titlebarconfig.minicon);
      c.title = "Minimize";
      c.onclick = function(h) {
        if (!h) {
          h = window.event
        }
        $KW.Popup.minimize(this, h)
      };
      var f = d.ismodal ? a : a.parentNode;
      a.children[1].style.display = "block";
      f.style.bottom = "";
      f.style.right = "";
      $KW.Popup.dockedpopups = $KW.Popup.dockedpopups || {};
      if ($KW.Popup.dockedpopups[b]) {
        var d = $KW.Popup.dockedpopups[b];
        delete $KW.Popup.dockedpopups[b];
        if (d.drag) {
          d.drag.addDrag()
        }
        f.style.width = d.width;
        f.style.top = d.position[0];
        f.style.left = d.position[1]
      }
      f.style.overflow = "auto";
      $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
      $KW.Popup.undockedpopups[b] = d;
      f.style["z-index"] = ++$KW.Popup.zindex;
      this.updateMinimizePositions(d);
      if (d.resizable) {
        $KU.getElementById(d.id + "_resizearea").style.display = ""
      }
      d.isMinimized = false
    }
  },
  close: function(b, d) {
    if (b) {
      var a = b.getAttribute("id");
      a = a.substr(a.indexOf("_") + 1);
      var c = $KG.allforms[a];
      this.dismiss(c)
    }
  },
  dragEvent: function(c, b) {
    var a = c.widget;
    switch (b) {
      case $KW.touch.events.touchstart:
        if (a.style["z-index"] < $KW.Popup.zindex) {
          a.style["z-index"] = ++$KW.Popup.zindex
        }
        break;
      case $KW.touch.events.touchmove:
        break;
      case $KW.touch.events.touchend:
        break;
      case $KW.touch.events.touchcancel:
        break
    }
  },
  updateMinimizePositions: function(c) {
    if ($KW.Popup.dockedpopups) {
      var d = 1;
      var b = 20;
      for (var a in $KW.Popup.dockedpopups) {
        var e = $KU.getElementById(a + "_container");
        e = c.ismodal ? e.childNodes[1] : e;
        if (e) {
          e.style.top = "";
          e.style.left = "";
          e.style.right = "20px";
          if (d > 1) {
            b += e.offsetHeight + 5
          }
          e.style.bottom = b + "px";
          d++
        }
      }
    }
  },
  generatePopupHeader: function(b) {
    var c = "";
    var a = b.titlebarconfig;
    if (b.title || (a && (a.minicon || a.maxicon || a.closeicon))) {
      c = "<div id='" + b.id + "_titlebar' class='popupheader " + ((a && a.skin) || "") + "' style='position:relative;padding: 5px;text-align:left;'>";
      if (b.title) {
        c += "<label style='width:100%'>" + b.title + "</label>"
      }
      if (a && (a.minicon || a.maxicon || a.closeicon)) {
        c += "<div class='popupcontrols' style='padding: 5px;'><img src='" + $KU.getImageURL(a.minicon) + "' onclick='$KW.Popup.minimize(this,event)' id='minmax_" + b.id + "' title='Minimize'><img src='" + $KU.getImageURL(a.closeicon) + "' onclick='$KW.Popup.close(this,event)' id='close_" + b.id + "' title='Close'></div>"
      }
      c += "</div>"
    }
    return c
  },
  adjustPopupDim: function(b) {
    var f = $KU.getElementById(b.id + "_titlebar");
    if (f) {
      var a = $KU.getElementById(b.id + "_body");
      var e = $KU.getElementById(b.id + "_container");
      a.style.height = "auto";
      var d = parseInt($KU.getStyle(a, "padding-top").replace("px", ""), 10) + parseInt($KU.getStyle(a, "padding-bottom").replace("px", ""), 10);
      var c = e.offsetHeight - d - f.offsetHeight - (b.resizable ? 13 : 0);
      a.style.height = c + "px"
    }
  },
  applyTransition: function(j, m, p) {
    var h = (j.transitionduration && j.transitionduration >= 0) ? j.transitionduration : 1;
    var l = m.offsetHeight;
    var n = m.offsetWidth;
    var o = p ? j.ptranOut : j.ptran;
    j.height = Math.floor(l + ((window.innerHeight - l) / 2));
    j.width = Math.floor(n + ((window.innerWidth - n) / 2));
    if (o == "rightCenter") {
      j.width = screen.width + n
    }
    if (o == "bottomCenter") {
      j.height = screen.height + l
    }
    m.style[vendor + "AnimationDuration"] = h + "s";
    m.parentNode.style.width = document.getElementsByTagName("body")[0].style.width;
    this.setAnchorPosition(j, m, p);
    var q = $KW.Utils.getKonyStyleSheetIndex(document.styleSheets);
    var k = document.styleSheets[q];
    if (kony.appinit.useTransition) {
      if (o) {
        var d = "AnimationEnd";
        if (kony.appinit.isFirefox || $KU.isIE10 || $KU.isIE11) {
          d = d.toLowerCase()
        } else {
          d = vendor + d
        }
        kony.events.addEventListener(m, d, $KW.Popup.animationEnd(j.id, !!p))
      }
      switch (o) {
        case "topCenter":
        case "bottomCenter":
          var b = (o == "topCenter") ? ("-" + j.height) : j.height;
          if (p) {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "endanimation { from { -" + vendor + "-transform: translateY(0px); } to {-" + vendor + "-transform: translateY( " + b + "px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "endanimation"
          } else {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "animation { from { -" + vendor + "-transform: translateY( " + b + "px); } to {-" + vendor + "-transform: translateY(0px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "animation"
          }
          break;
        case "leftCenter":
        case "rightCenter":
          var g = (o == "leftCenter") ? ("-" + j.width) : j.width;
          if (p) {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "endanimation { from { -" + vendor + "-transform: translateX( 0px); } to {-" + vendor + "-transform: translateX(" + g + "px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "endanimation"
          } else {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "animation { from { -" + vendor + "-transform: translateX( " + g + "px); } to {-" + vendor + "-transform: translateX(0px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "animation"
          }
          break;
        case "fadeAnimation":
          if (p) {
            m.style[vendor + "AnimationName"] = $KW.formEndTransitionsMatrix[o]
          } else {
            m.style[vendor + "AnimationName"] = $KW.formTransitionsMatrix[o]
          }
          break;
        case "slidedown":
          if (p) {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "endanimation { from {height:" + l + "px;} to {height:0px;} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "endanimation"
          } else {
            m.style.overflow = "hidden";
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "animation { from {height:0px;} to {height:" + l + "px;} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "animation"
          }
          break
      }
    } else {
      var e = j.context;
      var i = e && e.widget;
      var f = $KU.getNodeByModel(i);
      switch (o) {
        case "topCenter":
          if (p) {
            $("#" + m.id).animate({
              top: +(-l) + "px"
            }, h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            var a = m.style.top;
            if (!f) {
              a = $(window).height() / 2 - l / 2
            }
            m.style.top = -l + "px";
            $("#" + m.id).animate({
              top: a
            }, h * 1000)
          }
          break;
        case "bottomCenter":
          if (p) {
            $("#" + m.id).animate({
              top: +($(window).height() + l) + "px"
            }, h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            var a = m.style.top;
            if (!f) {
              a = $(window).height() / 2 - l / 2
            }
            m.style.top = $(window).height() + l + "px";
            $("#" + m.id).animate({
              top: a
            }, h * 1000)
          }
          break;
        case "leftCenter":
          if (j.context) {
            var c = $KU.getAnchorPosition(j, m);
            if (p) {
              $("#" + m.id).animate({
                left: +(-n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = -n + "px";
              $("#" + m.id).animate({
                left: +(c.leftPos) + "px"
              }, h * 1000)
            }
          } else {
            if (p) {
              $("#" + m.id).animate({
                left: +(-n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = -n + "px";
              var a = $(window).width() / 2 - n / 2;
              $("#" + m.id).animate({
                left: +(a) + "px"
              }, h * 1000)
            }
          }
          break;
        case "rightCenter":
          if (j.context) {
            var c = $KU.getAnchorPosition(j, m);
            if (p) {
              $("#" + m.id).animate({
                left: +($(window).width() + n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = $(window).width() + n + "px";
              $("#" + m.id).animate({
                left: +(c.leftPos) + "px"
              }, h * 1000)
            }
          } else {
            if (p) {
              $("#" + m.id).animate({
                left: +($(window).width() + n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = $(window).width() + n + "px";
              var a = $(window).width() / 2 - n / 2;
              $("#" + m.id).animate({
                left: +(a) + "px"
              }, h * 1000)
            }
          }
          break;
        case "fadeAnimation":
          if (p) {
            $("#" + m.id).fadeOut(h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            $("#" + m.id).hide().fadeIn(h * 1000)
          }
          break;
        case "slidedown":
          if (p) {
            $("#" + m.id).animate({
              height: "toggle"
            }, h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            m.style.overflow = "hidden";
            m.style.height = "0px";
            $("#" + m.id).animate({
              height: l + "px"
            }, h * 1000)
          }
          break
      }
    }
    if (j.ismodal) {
      m.parentNode.style.visibility = "visible"
    } else {
      m.style.visibility = "visible"
    }
    if (!o) {
      m.tabIndex = -1;
      m.focus()
    }
  },
  setAnchorPosition: function(d, s, b) {
    var c = d.context;
    if (c && c.widget) {
      if (d.enableScroll && !d.ismodal) {
        s = s.parentNode
      }
      var e = c.widget;
      var r;
      if (e.wType == "Form") {
        r = document.getElementById(e.id)
      } else {
        r = $KU.getNodeByModel(e)
      }
      if (r && e.wType != "Form") {
        var q = $KU.getElementById(d.id + "_scroller");
        var i = d.enableScroll && d.ismodal ? q.offsetHeight : s.offsetHeight;
        var p = s.offsetWidth;
        var n = !b ? (d.ptran) : (d.ptranOut);
        var h = $KU.getPosition(r, d);
        if (!$KG.nativeScroll) {
          var l = $KG.__currentForm;
          var f = $KG[l.id + "_scroller"];
          if (f) {
            var m = f.scrollToElement(r, "", true);
            if (m) {
              var a = d.context.widget.parent;
              var g = $KU.getNodeByModel(a);
              if (g.id == a.id + "_" + a.id) {
                m = Math.abs(f._offset(r).top)
              } else {
                m = Math.abs(f._offset(r).top) - Math.abs(m)
              }
              h.top = m
            }
          }
        }
        var o = h.top;
        var j;
        var k = $KU.getAnchorPosition(d, s);
        if (c.anchor == "bottom") {
          s.style.left = k.leftPos + "px";
          j = o + r.clientHeight;
          if (c.isenabled == true && o == 0) {
            s.style.top = 0;
            d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - j) : (i + j)
          } else {
            if ((window.innerHeight || document.body.clientHeight) == j) {
              s.style.bottom = "0px";
              d.height = (n == "bottomCenter") ? i : (i + j)
            } else {
              if ((window.innerHeight || document.body.clientHeight) - j > i) {
                s.style.top = j + "px";
                d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - j) : (i + j)
              } else {
                if (o > i) {
                  s.style.top = (o - i) + "px";
                  d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - o) : (i + o)
                } else {
                  s.style.top = Math.floor((100 - Math.floor((i * 100) / s.parentNode.offsetHeight)) / 2) + "%"
                }
              }
            }
          }
        }
        if (c.anchor == "top") {
          s.style.left = k.leftPos + "px";
          if (!o) {
            s.style.top = 0
          } else {
            if (o > i) {
              s.style.top = (o - i) + "px";
              d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - o) : (i + o)
            } else {
              s.style.top = Math.floor((100 - Math.floor((i * 100) / s.parentNode.offsetHeight)) / 2) + "%"
            }
          }
        }
        if (c.anchor == "left" || c.anchor == "right") {
          s.style.top = k.topPos + "px";
          s.style.left = k.leftPos + "px"
        }
      } else {
        if (r && e.wType == "Form") {
          if (!$KG.nativeScroll && document.getElementById(r.id + "_scroller")) {
            var h = $KU.getPosition(document.getElementById(r.id + "_scroller"))
          } else {
            var h = $KU.getPosition(r)
          }
          var o = h.top;
          var j = o + h.height;
          var q = $KU.getElementById(d.id);
          var i = q.offsetHeight;
          var p = q.offsetWidth;
          var n = !b ? (d.ptran) : (d.ptranOut);
          if (c.anchor == "bottom") {
            if ($KG.nativeScroll) {
              s.style.top = (document.body.querySelector("form").offsetHeight - i) + "px"
            } else {
              s.style.top = (window.innerHeight - i) + "px"
            }
            s.style.left = "0px";
            d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - j) : (i + j)
          }
          if (c.anchor == "top") {
            s.style.top = "0px";
            s.style.left = "0px";
            d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - o) : (i + o)
          }
          if (c.anchor == "left") {
            s.style.top = "0px";
            s.style.left = "0px"
          }
          if (c.anchor == "right") {
            s.style.top = "0px";
            s.style.right = "0px"
          }
        }
      }
      s.style.position = "absolute"
    }
  },
  adjustPopupDimensions: function(d, c) {
    if (!document.getElementById(c.id)) {
      return
    }
    var f = $KU.getElementById(d.id + "_container");
    $KU.setScrollHeight(d, d.ismodal ? f.childNodes[1] : f);
    if (!d.context) {
      $KW.Popup.adjustPosition(d, c)
    }
    $KW.Popup.setAnchorPosition(d, c);
    if ($KG.nativeScroll && d.ismodal) {
      var e = c.previousSibling;
      var b = document.getElementById("__MainContainer").clientHeight;
      if (b < (window.innerHeight || document.body.clientHeight)) {
        e.style.height = (window.innerHeight || document.body.clientHeight) + "px"
      } else {
        e.style.height = b + "px"
      }
    }
    var a = $KG[d.id + "_scroller"];
    a && a.refresh()
  },
  adjustPosition: function(d, b) {
    var c = d.ismodal ? b : b.parentNode;
    if ($KG.nativeScroll) {
      b.parentNode.style.position = "fixed"
    }
    var a = d.ismodal ? b : b.parentNode;
    var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    var e = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    var g = Math.floor((100 - Math.floor((a.offsetHeight * 100) / h)) / 2) + "%";
    var f = Math.floor((100 - Math.floor((a.offsetWidth * 100) / e)) / 2) + "%";
    if (parseInt(g, 10) < 0) {
      c.style.top = 0
    } else {
      c.style.top = g
    }
    c.style.left = f
  },
  animationEnd: function(b, a) {
    return function() {
      var i = "AnimationEnd";
      if (kony.appinit.isFirefox || $KU.isIE10 || $KU.isIE11) {
        i = i.toLowerCase()
      } else {
        i = vendor + i
      }
      var e = $KU.getElementById(b);
      var g = $KG.allforms[b];
      if (!e) {
        return
      }
      e = g.ismodal ? e : e.parentNode;
      kony.events.removeEventListener(e, i, arguments.callee);
      if (e && a) {
        $KW.Popup.domremove(g.ismodal ? e : e.childNodes[0]);
        e.style[vendor + "AnimationName"] = ""
      }
      var h = a ? b + "endanimation" : b + "animation";
      var d = $KW.Utils.getKonyStyleSheetIndex(document.styleSheets);
      var c = document.styleSheets[d];
      var f = c.cssRules.length - 1;
      if (c.cssRules[f] && c.cssRules[f].name == h) {
        if (c.deleteRule) {
          c.deleteRule(f)
        } else {
          c.removeRule(f)
        }
      }
      e.tabIndex = -1;
      e.focus()
    }
  },
  setcontext: function(b, a) {
    if (b instanceof Object && a instanceof Object) {
      b.context = a
    }
  },
  add: function() {
    var a = arguments[0];
    if ("add" in a) {
      var b = [].slice.call(arguments, 1);
      a.add(b)
    }
  },
  addAt: function(c, b, a) {
    if (b == null) {
      return
    }
    c.addAt && c.addAt(b, a)
  },
  widgets: function(a) {
    if (a.widgets) {
      return a.widgets()
    }
  },
  remove: function(b, a) {
    b.remove && b.remove(a)
  },
  removeAt: function(b, a) {
    b.removeAt && b.removeAt(a)
  },
  scrollToBeginning: function(b) {
    var a;
    var c = $KU.getElementById(b.id + "_titlebar");
    if (c) {
      a = $KU.getElementById(b.id + "_body")
    } else {
      a = b.ismodal ? $KU.getElementById(b.id) : $KU.getElementById(b.id + "_container")
    }
    a && $KW.Utils.animateY(a.scrollTop, 0, a.id)
  },
  scrollToEnd: function(b) {
    var a;
    var c = $KU.getElementById(b.id + "_titlebar");
    if (c) {
      a = $KU.getElementById(b.id + "_body")
    } else {
      a = b.ismodal ? $KU.getElementById(b.id) : $KU.getElementById(b.id + "_container")
    }
    a && $KW.Utils.animateY(a.scrollTop, a.scrollHeight, a.id)
  },
  scrollToWidget: function(b, a) {
    $KW.Widget.setfocus(a, b)
  },
  handleshow: function(a) {
    if ("show" in a) {
      a.show()
    }
  },
  destroy: function(a) {
    if ("destroy" in a) {
      a.destroy(a)
    }
  },
  dismissPopup: function(a) {
    var f = a;
    if (a && typeof a == "object") {
      var d = a.target || a.srcElement;
      d = $KU.getParentByAttribute(d, kony.constants.KONY_WIDGET_TYPE);
      a = d ? ($KU.getContainerForm(d) || (d.getAttribute && d.getAttribute("kformname"))) : null
    }
    if (!a || (window[a] && window[a].wType != "Popup")) {
      var b = document.querySelector("div.popupcontainer");
      if (b) {
        var c = b.id.split("_")[0];
        if (window[c] && window[c].wType == "Popup") {
          if (!window[c].ismodal) {
            $KW.Popup.dismiss();
            if ($KG.nativeScroll && !($KU.isWindowsPhone && $KU.isIE9)) {
              kony.events.removeEventListener(document.body, $KU.isIDevice ? $KW.touch.events.touchstart : "click", $KW.Popup.dismissPopup, false);
              if (!$KU.isIDevice) {
                kony.events.removeEventListener(window, "scroll", $KW.Popup.dismissPopup, false)
              }
              kony.events.preventDefault(f)
            }
            return true
          }
        }
      }
    }
    return false
  }
};
$KW.RichText = {
  initialize: function() {
    kony.events.addEvent("click", "RichText", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "text":
        d.innerHTML = b;
        break;
      case "linkskin":
        this.setLinkSkin(e);
        break;
      case "linkfocusskin":
        this.setLinkFocusSkin(e);
        break
    }
  },
  render: function(a, b) {
    if ($KU.isAndroid) {
      this.setLinkSkin(a);
      this.setLinkFocusSkin(a)
    }
    var c = $KW.skins.getWidgetSkinList(a, b);
    var d = "<div" + $KW.Utils.getBaseHtml(a, b) + "class='" + c + "' style='" + $KW.skins.getBaseStyle(a, b);
    if (b.ispercent === false) {
      d += "display:inline-block;" + (b.layoutDir ? ("float:" + b.layoutDir) : "")
    }
    d += ";text-align:" + $KW.skins.getContentAlignment(a) + "'>" + a.text + "</div>";
    if ($KW.Utils.isWidgetDisabled(a, b)) {
      d = d.replace(/href=["'].*?["']/g, "href='javascript:void(0)'")
    }
    return d
  },
  eventHandler: function(c, g, d) {
    var a = $KU.getModelByNode(g),
      f = g.getAttribute("kcontainerID");
    if (f) {
      $KW.Utils.updateContainerData(a, g, true)
    } else {
      if (a.onclick) {
        var i = $KU.returnEventReference(a.onclick);
        if (i) {
          if (d) {
            i.call(a, a, d[0], {
              href: d[1]
            })
          } else {
            i.call(a, a)
          }
          $KU.onEventHandler(a)
        }
      } else {
        if (d && d[1]) {
          if (d[1].charAt(0) == "#") {
            kony.events.stopPropagation(c);
            kony.events.preventDefault(c)
          }
          var h = d[1].substring(1, d[1].length);
          var e = document.querySelector('a[name="' + h + '"]');
          var b = $KG[$KG.__currentForm.id + "_scroller"];
          if (b && e) {
            b.scrollToElement(e, 200)
          }
        }
      }
    }
  },
  setLinkSkin: function(c) {
    var b = c.linkskin;
    if (!b) {
      return
    }
    var d = c.pf + "_" + c.id;
    var a = "#" + d + " > a";
    $KW.Utils.applyStyle(b, a)
  },
  setLinkFocusSkin: function(b) {
    var c = b.linkfocusskin;
    if (!c) {
      return
    }
    var d = b.pf + "_" + b.id;
    var a = "#" + d + " > a:active";
    $KW.Utils.applyStyle(c, a)
  }
};
$KW.ScrollBox = {
  initialize: function() {
    kony.events.addEvent("click", "ScrollBox", this.eventHandler);
    kony.events.addEvent("onorientationchange", "ScrollBox", this.adjustBoxDimensions)
  },
  initializeView: function(a) {
    this.adjustBoxDimensions(a)
  },
  updateView: function(d, c, b, a) {
    switch (c) {
      case "totalWt":
        if (d.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
          var e = $KU.getNodeByModel(d);
          e && this.adjustScrollBoxWidth(d, e)
        }
        break;
      case "showscrollbars":
        var e = $KU.getNodeByModel(d);
        $KW.ScrollBox.addRemoveMouseWheelScroll(d, e);
        break
    }
  },
  render: function(b, a) {
    var c = "";
    if (b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
      c = kony.widgets.ScrollBox.renderHBox(b, a)
    } else {
      c = kony.widgets.ScrollBox.renderVBox(b, a)
    }
    return c
  },
  renderHBox: function(o, b) {
    var d = kony.model.getWidgetModel(o.pf, b.tabpaneID);
    var n = "";
    var h = kony.widgets.skins.getWidgetAlignmentSkin(o);
    var k = o.pf + "_" + o.id;
    var j = "";
    var l = b.topLevelBox;
    var g = kony.widgets.skins.getMarginSkin(o, b) + kony.widgets.skins.getPaddingSkin(o);
    var c = "";
    if (!l) {
      if (kony.appinit.isIE7) {
        n += "<tr class = 'kwt100' >";
        n += "<td class = 'kwt100' >"
      } else {
        n += "<div class = 'krow kwt100' >";
        n += "<div class = 'kcell kwt100' >"
      }
    }
    j = kony.widgets.skins.getWidgetSkinList(o, b);
    var q = kony.widgets.stringifyScrolldirection[o.scrolldirection];
    var a = (q == "both") ? "overflow:auto;" : (q == "horizontal" ? "overflow-x:auto;overflow-y:hidden;" : q == "vertical" ? "overflow-y:auto;overflow-x:hidden;" : q == "none" ? "overflow:hidden;" : "");
    n += "<div style='" + a + g + "' class ='" + j + "'" + kony.widgets.Utils.getBaseHtml(o, b) + " swipeDirection='" + q + "'>";
    if (kony.appinit.isIE7) {
      n += "<table style='table-layout:fixed;" + (o.totalWt ? "width:" + o.totalWt + "%" : "") + "'>";
      n += "<tr class = '" + h + " kwt100' >"
    } else {
      if (o.percent == true) {
        n += "<div style='table-layout:fixed;" + (o.totalWt ? "width:" + o.totalWt + "%" : "") + "' class = 'ktable'>"
      } else {
        n += "<div style='table-layout:fixed; width:100%; ' class = 'ktable'>"
      }
      n += "<div class = 'krow " + h + " kwt100' >"
    }
    if (!o.children || o.children.length == 0) {
      n += kony.appinit.isIE7 ? "</tr></table></div>" : "</div></div></div>";
      if (!l) {
        n += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
      }
      return n
    }
    for (var f = 0; f < o.children.length; f++) {
      var e = d[o.children[f]];
      if (e.wType == "HBox" || e.wType == "VBox" || e.wType == "ScrollBox") {
        b.topLevelBox = false;
        if (e.wType == "HBox") {
          n += kony.widgets.HBox.render(e, b)
        } else {
          n += kony.widgets.VBox.render(e, b)
        }
      } else {
        if (o.percent == true) {
          b.ispercent = true;
          if (o.totalWt && kony.appinit.isIE) {
            c = Math.floor((100 * e.containerweight) / o.totalWt)
          } else {
            c = e.containerweight
          }
          $KW.skins.addWidthRule(c);
          var p = "";
          if (e.containerweight) {
            p = "kwt" + c
          } else {
            p = "auto"
          }
          var m = kony.widgets.skins.getWidgetAlignmentSkin(e);
          n += kony.appinit.isIE7 ? "<td class = '" + p + " " + m + "' >" : "<div class = 'kcell " + p + " " + m + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(e) + "' >"
        } else {
          b.ispercent = false
        }
        n += kony.widgets[e.wType].render(e, b);
        if (o.percent == true) {
          n += kony.appinit.isIE7 ? "</td>" : "</div>"
        }
      }
    }
    if ($KG.appbehaviors.adherePercentageStrictly == true && o.percent === true) {
      o.dummyNodeWidth = $KW.HBox.getExtraNodeWidth(o);
      n += "<div class = 'kcell kwt" + o.dummyNodeWidth + "'  ></div>"
    }
    n += kony.appinit.isIE7 ? "</tr></table>" : "</div></div>";
    n += "</div>";
    if (!l) {
      n += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
    }
    return n
  },
  renderVBox: function(n, b) {
    var c = kony.model.getWidgetModel(n.pf, b.tabpaneID);
    var l = b.topLevelBox;
    var g = kony.widgets.skins.getWidgetAlignmentSkin(n);
    var m = "";
    var j = n.pf + "_" + n.id;
    var h = kony.widgets.skins.getWidgetSkinList(n, b);
    var f = kony.widgets.skins.getMarginSkin(n, b) + kony.widgets.skins.getPaddingSkin(n);
    var o = kony.widgets.stringifyScrolldirection[n.scrolldirection];
    var a = (o == "both") ? "overflow:auto;" : (o == "horizontal" ? "overflow-x:auto;overflow-y:hidden;" : o == "vertical" ? "overflow-y:auto;overflow-x:hidden;" : o == "none" ? "overflow:hidden;" : "");
    m += "<div style='" + a + f + "' swipeDirection='" + o + "'" + kony.widgets.Utils.getBaseHtml(n, b) + " class ='" + h + "' >";
    m += "<div id='" + j + "_scrollee'>";
    m += kony.appinit.isIE7 ? "<table class = 'kwt100'>" : "<div class = 'ktable kwt100'>";
    var k = n.children ? n.children.length : 0;
    for (var e = 0; e < k; e++) {
      var d = c[n.children[e]];
      if (d.wType == "HBox" || d.wType == "VBox" || d.wType == "ScrollBox") {
        b.topLevelBox = false;
        if (d.wType == "HBox") {
          b.ispercent = n.percent;
          m += kony.widgets.HBox.render(d, b)
        } else {
          m += kony.widgets.VBox.render(d, b)
        }
      } else {
        m += kony.appinit.isIE7 ? "<tr class = 'kwt100'>" : "<div class = 'krow kwt100'>";
        g = kony.widgets.skins.getWidgetAlignmentSkin(d);
        vboxComputedSkin = kony.widgets.skins.getMarAdjustedContainerWeightSkin(d, "100");
        vboxComputedSkin += " " + g;
        m += kony.appinit.isIE7 ? "<td class = '" + vboxComputedSkin + "' >" : "<div class = 'kcell " + vboxComputedSkin + "' >";
        m += kony.widgets[d.wType].render(d, b);
        m += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
      }
    }
    m += kony.appinit.isIE7 ? "</table>" : "</div>";
    m += "</div></div>";
    return m
  },
  eventHandler: function(a, d, b) {
    var c = kony.utils.getModelByNode(d);
    d.getAttribute("kcontainerID") && kony.widgets.Utils.updateContainerData(c, d, !c.onclick);
    c.onclick && kony.app[c.onclick](c)
  },
  adjustBoxDimensions: function(e) {
    var a = document.querySelectorAll("#" + e + " div[kwidgettype='ScrollBox']");
    for (var d = 0; d < a.length; d++) {
      var b = a[d].getAttribute("swipeDirection");
      var c = kony.utils.getModelByNode(a[d]);
      if (b != "horizontal") {
        $KU.setScrollHeight(c, a[d])
      }
      if (b != "none" && !c.showscrollbars) {
        kony.widgets.ScrollBox.addRemoveMouseWheelScroll(c, a[d])
      }
    }
  },
  addRemoveMouseWheelScroll: function(b, c) {
    var a = kony.widgets.stringifyScrolldirection[b.scrolldirection];
    if (a != "none") {
      if (!b.showscrollbars) {
        c.style.overflow = "hidden";
        c.style.overflowX = "hidden";
        c.style.overflowY = "hidden";
        if (c.addEventListener) {
          c.addEventListener("mousewheel", $KW.ScrollBox.scrollContent, false);
          c.addEventListener("DOMMouseScroll", $KW.ScrollBox.scrollContent, false)
        } else {
          c.attachEvent("onmousewheel", $KW.ScrollBox.scrollContent)
        }
      } else {
        if (a == "both") {
          c.style.overflow = "auto";
          c.style.overflowX = "auto";
          c.style.overflowY = "auto"
        }
        if (a == "vertical") {
          c.style.overflow = "auto";
          c.style.overflowX = "hidden";
          c.style.overflowY = "auto"
        }
        if (a === "horizontal") {
          c.style.overflow = "auto";
          c.style.overflowX = "auto";
          c.style.overflowY = "hidden"
        }
        if (c.removeEventListener) {
          c.removeEventListener("mousewheel", $KW.ScrollBox.scrollContent, false);
          c.removeEventListener("DOMMouseScroll", $KW.ScrollBox.scrollContent, false)
        } else {
          c.detachEvent("onmousewheel", $KW.ScrollBox.scrollContent)
        }
      }
    }
  },
  scrollContent: function(c) {
    var c = window.event || c;
    var a = c.target || c.srcElement;
    var b = $KU.closestElement(a, "kwidgettype", "ScrollBox");
    if (b) {
      b.scrollTop = (b.scrollTop) - (Math.max(-1, Math.min(1, (c.wheelDelta || -c.detail)))) * 75;
      kony.events.preventDefault(c)
    }
  },
  adjustDimensionsByNode: function(g, i) {
    var d = g.containerheight;
    var a = "";
    if (d > 0) {
      if (g.containerheightreference == 1) {
        var c = screen.availHeight;
        a = Math.round((d * c) / 100)
      } else {
        if (g.containerheightreference == 2) {
          var b = $KU.getParentModel(g);
          var f = $KU.getNodeByModel(b);
          var j = (f && f.offsetWidth) || screen.availWidth;
          a = Math.round((d * j) / 100)
        } else {
          if (g.containerheightreference == 3) {
            var j = screen.height;
            a = Math.round((d * j) / 100)
          }
        }
      }
    } else {
      if (g.wType == "Map" || g.wType == "Browser") {
        a = "500px"
      }
      if (g.wType == "TabPane" || g.wType == "Segment" || g.wType == "Popup" || g.wType == "ScrollBox") {
        a = "auto"
      }
      if (g.containerheight == 0) {
        a = 0
      }
    }
    i.style.height = (a != "auto") ? (a + "px") : "auto";
    if (g.containerheight && g.wType != "ScrollBox") {
      i.style.overflow = "auto"
    }
    if (g.wType == "Popup" && d) {
      i.style.maxHeight = "";
      var h = Number(window.getComputedStyle(i).top.replace("px", ""));
      var e = Number(window.getComputedStyle(i).height.replace("px", ""));
      if ((h + e) > screen.height) {
        i.style.top = "0px"
      }
    }
  },
  adjustScrollBoxWidth: function(b, a) {
    if (b.percent) {
      a.firstChild.style.width = b.totalWt + "%"
    }
  },
  adjustScrollChildrenWidth: function(g, d) {
    if (g.percent && g.totalWt) {
      if (kony.appinit.isIE) {
        var j = d.firstChild.firstChild;
        var h = j.childNodes;
        var c = g.totalWt || 0;
        for (var b = 0; b < h.length; b++) {
          var a = g[h[b].firstChild.id.split("_")[1]];
          var e = Math.floor((100 * a.containerweight) / g.totalWt);
          var f = kony.widgets.skins.getMarAdjustedContainerWeightSkin(a, e || "");
          h[b].className = h[b].className.replace(new RegExp("(^|\\s+)kwt([0-9]+)(\\s+|$)"), " ");
          $KU.addClassName(h[b], f)
        }
      } else {
        d.innerHTML = d.innerHTML
      }
    }
  },
  fadeHImages: function(b) {
    var d = "display:none;";
    var a = kony.widgets.Image.getImageURL(b.leftarrowimage);
    var c = kony.widgets.Image.getImageURL(b.rightarrowimage);
    var e = b.pf + "_" + b.id;
    var f = "<div id='" + e + "_scrollFades' class='scroll_view'><div id='" + e + "_leftimg' class='scroll_fades leftfade' style='" + d + "'><img type='HImg' src='" + a + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div><div id='" + e + "_rightimg' class='scroll_fades rightfade' style='" + d + "'><img type='HImg' src='" + c + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div></div>";
    return f
  },
  fadeVImages: function(b) {
    var c = "display:none;";
    var a = kony.widgets.Image.getImageURL(b.toparrowimage);
    var f = kony.widgets.Image.getImageURL(b.bottomarrowimage);
    var d = b.pf + "_" + b.id;
    var e = "<div id='" + d + "_scrollFades' class='scroll_view' style='height:inherit;'><div id='" + d + "_topimg' class='scroll_fades topfade' style='" + c + "'><img type='VImg' src='" + a + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div><div id='" + d + "_bottomimg' class='scroll_fades bottomfade' style='" + c + "'><img type='VImg' src='" + f + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div></div>";
    return e
  },
  setHeight: function(c) {
    var b = c.parentNode;
    setTimeout(function() {
      b.style.height = c.height || c.naturalHeight;
      b.style.width = c.width || c.naturalWidth
    }, 0);
    var a = c.getAttribute("type");
    if (a == "HImg") {
      b.style.top = Math.floor((b.parentNode.offsetHeight - c.naturalHeight) / 2) + "px"
    } else {
      b.style.left = Math.floor((b.parentNode.offsetWidth - c.naturalWidth) / 2) + "px"
    }
  },
  adjustArrowPosition: function(b) {
    var a = b.firstChild.childNodes[0].getAttribute("type");
    if (a == "HImg") {
      b.firstChild.style.top = b.lastChild.style.top = Math.floor((b.offsetHeight - b.firstChild.childNodes[0].naturalHeight) / 2) + "px"
    } else {
      b.firstChild.style.left = b.lastChild.style.left = Math.floor((b.offsetWidth - b.firstChild.childNodes[0].naturalWidth) / 2) + "px"
    }
  },
  recalculateScrollBoxWidth: function(d) {
    if (d.orientation != constants.BOX_LAYOUT_HORIZONTAL) {
      return
    }
    var c = d.ownchildrenref;
    var e = 0;
    for (var b = 0; b < c.length; b++) {
      e += c[b].containerweight
    }
    d.totalWt = e;
    var a = $KU.getNodeByModel(d);
    if (a == null) {
      return
    }
    a.firstChild.style.width = e + "%"
  }
};
$KW.FlexContainer = {
  initialize: function() {
    kony.events.addEvent("click", "FlexContainer", this.eventHandler);
    kony.events.addEvent("onorientationchange", "FlexContainer", this.orientationHandler)
  },
  initializeView: function(a) {
    this.attachResizeEvent(a, "FlexContainer")
  },
  orientationHandler: function(b, a) {},
  updateView: function(f, c, b, a) {
    var d = $KU.getNodeByModel(f);
    if (!d) {
      return
    }
    switch (c) {
      case "clipbounds":
        var e = $KU.isFlexWidget(f);
        d = e ? d.parentNode.parentNode : d;
        if (b == false) {
          d.style.overflow = "visible"
        } else {
          d.style.overflow = "hidden"
        }
        break
    }
  },
  render: function(a, b) {
    return this.renderTableLayout(a, b)
  },
  renderTableLayout: function(g, c) {
    var e = $KW.skins.getWidgetSkinList(g, c);
    var i = $KU.isFlexWidget(g);
    var d = i ? "" : (g.clipbounds == true ? "overflow:hidden;" : "");
    var f = " position:relative;" + d + (g.zindex ? "z-index:" + g.zindex : "");
    var b = (g.parent && g.parent.wType == "TabPane") ? "" : $KW.skins.getBaseStyle(g, c);
    var h = "";
    h += "<div id='flexcontainer_wrapper' class='" + e + "' style='width:100%; " + b + "'>";
    h += "<div class = 'kwt100'" + $KW.Utils.getBaseHtml(g, c) + " style='" + f + "'>";
    var a = g.widgets();
    if (a.length > 0) {
      h += this.renderChildren(g, a, c)
    }
    h += "</div></div>";
    return h
  },
  renderChildren: function(h, b, c) {
    var j = "";
    for (var f = 0; f < b.length; f++) {
      var e = b[f];
      var g = "kcell " + (e.wType == "TPW" ? "konycustomcss " : "") + (e.isvisible ? "" : "hide ");
      var a = $KW.Utils.getFlexLayoutStyle(e);
      var d = "";
      if (e.wType == "FlexContainer" && !e.clipbounds) {
        d = ";overflow:visible"
      } else {
        d = ";overflow:hidden";
        g += e.skin
      }
      j += "<div class = '" + g + "' style='" + a + d + ((e.wType == "TextArea" || e.wType == "Switch" || e.wType == "Image") ? "font-size:0px" : "") + "'>";
      if (e.wType == "HBox" || e.wType == "VBox") {
        c.topLevelBox = true
      }
      j += $KW[e.wType].render(e, c);
      j += "</div>"
    }
    return j
  },
  adjustFlexContainers: function(b, a) {
    if (b.wType == "Segment") {
      $KW.Segment.adjustFlexContainersInSegment(b, a)
    } else {
      if (b.wType == "DataGrid") {
        $KW.DataGrid.adjustFlexContainersInDataGrid(b, a)
      } else {
        if (b.wType == "TabPane") {
          $KW.TabPane.adjustFlexContainersInTab(b, a)
        }
      }
    }
  },
  adjustFlexContainer: function(a, c) {
    if (!c) {
      if (a.wType == "Form" || a.wType == "Popup") {
        c = document.getElementById(a.id + "_scroller") || document.getElementById(a.id)
      } else {
        c = c || $KW.Utils.getWidgetNode(a)
      }
    }
    if (!c) {
      return
    }
    var b = a.widgets();
    if (b.length > 0) {
      if (a.wType == "FlexContainer" && a.autogrowHeight && (!a.parent || (a.parent && !a.parent.autogrowHeight))) {
        $KW.FlexLayoutEngine.performAutogrowFlexLayout(a, c, b)
      } else {
        $KW.FlexLayoutEngine.performFlexLayout(a.layouttype, a, c, b)
      }
    }
  },
  forceLayout: function(b, c) {
    if (b.wType == "Form" || b.wType == "Popup") {
      c = document.getElementById(b.id + "_scroller") || document.getElementById(b.id)
    } else {
      c = c || $KW.Utils.getWidgetNode(b)
    }
    if (c && b.isvisible) {
      var a = (b.wType == "FlexContainer") ? c.childNodes[0].getAttribute("kcontainerID") : c.getAttribute("kcontainerID");
      a && $KW.Utils.updateContainerDataInDOM(c, a);
      if ((b.parent && !$KU.isFlexWidget(b) && b.wType != "Form") || (b.wType == "FlexContainer" && !b.parent)) {
        $KW.Utils.setFlexContainerStyle(b, c);
        b.frame = $KW.Utils.getWidgetFrame(b, c);
        b.dolayout && b.dolayout.call(b, b)
      }
      if (b.wType == "Form") {
        b.frame = $KW.Utils.getWidgetFrame(b, c)
      }
      this.adjustFlexContainer(b, c)
    }
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    c.blockeduiskin && $KW.Utils.applyBlockUISkin(c);
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  },
  attachResizeEvent: function(k, f) {
    var b = document.querySelectorAll("#" + k + " div[kwidgettype='" + f + "']");
    for (var e = 0; e < b.length; e++) {
      var g = $KU.getModelByNode(b[e]);
      var c = b[e];
      g.onDrag && new $KW.touch.Drag(g, c, c, "", this.dragEvent, c);
      var a = g.children;
      for (var d = 0; a && d < a.length; d++) {
        var h = g[a[d]];
        this.attachDragEvent(h)
      }
    }
  },
  attachDragEvent: function(a) {
    if (a.onDrag) {
      var b = $KU.getNodeByModel(a);
      b = b.parentNode;
      new $KW.touch.Drag(a, b, b, "", this.dragEvent, b)
    }
  },
  dragEvent: function(d, a, e, c) {
    d = d.getAttribute("kwidgettype") ? d : d.childNodes[0];
    var b = $KU.getModelByNode(d);
    b.onDrag && b.onDrag(b, a, e, c)
  }
};
$KW.FlexScrollContainer = {
  initialize: function() {
    kony.events.addEvent("click", "FlexScrollContainer", this.eventHandler);
    kony.events.addEvent("onorientationchange", "FlexScrollContainer", this.orientationHandler)
  },
  initializeView: function(b) {
    $KW.FlexContainer.attachResizeEvent(b, "FlexScrollContainer");
    var a = document.querySelectorAll("#" + b + " div[kwidgettype='FlexScrollContainer']");
    $KW.Utils.initializeScrollEvents(a)
  },
  updateView: function(c, f, b, d) {
    var e = $KU.getNodeByModel(c);
    if (!e) {
      return
    }
    var i = $KW.stringifyScrolldirection[c.scrolldirection];
    switch (f) {
      case "enableScrolling":
      case "scrollDirection":
        if (c.enablescrolling) {
          if (i == "horizontal") {
            e.style.overflowX = "auto";
            e.style.overflowY = "hidden"
          } else {
            if (i == "vertical") {
              e.style.overflowX = "hidden";
              e.style.overflowY = "auto"
            } else {
              if (i == "both") {
                e.style.overflow = "auto"
              } else {
                if (i == "none") {
                  e.style.overflow = "hidden"
                }
              }
            }
          }
        } else {
          e.style.overflow = "hidden"
        }
        break;
      case "scrollDirection":
        if (c.wType == "Form") {
          i = "vertical"
        }
        if (i == "horizontal") {
          e.style.overflowX = "auto";
          e.style.overflowY = "hidden"
        } else {
          if (i == "vertical") {
            e.style.overflowX = "hidden";
            e.style.overflowY = "auto"
          } else {
            if (i == "both") {
              e.style.overflow = "auto"
            } else {
              if (i == "none") {
                e.style.overflow = "hidden"
              }
            }
          }
        }
        break;
      case "onScrollStart":
        var a = c.onscrollstart;
        a.call(c, c);
        break;
      case "onScrollTouchReleased":
        break;
      case "onScrolling":
        var g = c.onscrolling;
        g.call(c, c);
        break;
      case "onDecelerationStarted":
        break;
      case "onScrollEnd":
        var h = c.onscrollend;
        h.call(c, c);
        break;
      case "contentOffset":
        $KW.FlexScrollContainer.setContentOffSet(c, c.contentOffset, true);
        break
    }
  },
  render: function(b, a) {
    var d = kony.widgets.skins.getMarginSkin(b, a) + kony.widgets.skins.getPaddingSkin(b);
    var e = kony.widgets.skins.getWidgetSkinList(b, a);
    var h = kony.widgets.stringifyScrolldirection[b.scrolldirection];
    var c = b.enableScrolling ? ((h == "both") ? "overflow:auto;" : (h == "horizontal" ? "overflow-x:auto;overflow-y:hidden;" : h == "vertical" ? "overflow-y:auto;overflow-x:hidden;" : h == "none" ? "overflow:hidden;" : "")) : "";
    var f = "<div style='position:relative;" + c + d + "' class ='" + e + "'" + kony.widgets.Utils.getBaseHtml(b, a) + " swipeDirection='" + h + "'>";
    var g = b.widgets();
    if (g.length > 0) {
      f += $KW.FlexContainer.renderChildren(b, g, a)
    }
    f += "</div>";
    return f
  },
  forceLayout: function(a, b) {
    $KW.FlexContainer.forceLayout(a, b)
  },
  getContentOffsetMeasured: function(b) {
    var a = {
      x: 0,
      y: 0
    };
    var c = $KU.getNodeByModel(b);
    if (c) {
      a.x = -c.scrollLeft;
      a.y = -c.scrollTop
    }
    return a
  },
  getContentSizeMeasured: function(a) {
    var c = $KU.getNodeByModel(a);
    var b = {
      width: 0,
      height: 0
    };
    if (c) {
      b.width = c.scrollWidth;
      b.height = c.scrollHeight
    }
    return b
  },
  setContentOffSet: function(c, b, d) {
    var f = $KU.getNodeByModel(c);
    if (f) {
      $KW.Widget.setfocus(c);
      var a = $KU.getValueByParentFrame(c, $KU.getValueAndUnit(c, b.x), "x", c.frame);
      var e = $KU.getValueByParentFrame(c, $KU.getValueAndUnit(c, b.y), "y", c.frame);
      f.scrollLeft = a;
      f.scrollTop = e
    }
  },
  scrollToWidget: function(a, c, b) {
    var e = $KU.getNodeByModel(a);
    if (e) {
      $KW.Widget.setfocus(a);
      var d = c.frame;
      e.scrollLeft = d.x;
      e.scrollTop = d.y
    }
  },
  scrollToEnd: function(a, b) {
    var c = $KU.getNodeByModel(a);
    if (c) {
      $KW.Widget.setfocus(a);
      switch (a.scrolldirection) {
        case kony.flex.SCROLL_HORIZONTAL:
          c.scrollLeft = c.scrollWidth;
          break;
        case kony.flex.SCROLL_VERTICAL:
          c.scrollTop = c.scrollHeight;
          break;
        case kony.flex.SCROLL_BOTH:
          c.scrollLeft = c.scrollWidth;
          c.scrollTop = c.scrollHeight;
          break
      }
    }
  }
};
$KW.Video = $KW.Audio = $KW.Media = {
  initializeView: function(d) {
    if (!$KU.isAndroid) {
      return
    }
    var b = document.querySelectorAll("#" + d + " video");
    for (var a = 0; a < b.length; a++) {
      var c = b[a];
      kony.events.addEventListener(c, "click", function(e) {
        e = e || window.event;
        if (e.srcElement.getAttribute("kdisabled") == "true") {
          kony.events.stopPropagation(e);
          kony.events.preventDefault(e);
          return
        } else {
          e.srcElement.play()
        }
      }, false);
      kony.events.addEventListener(c, "playing", function(e) {
        e = e || window.event;
        e.srcElement.playing = true
      }, false)
    }
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "source":
        d.parentNode.innerHTML = this.render(e, {
          formID: e.pf
        });
        break
    }
  },
  render: function(f, c) {
    var g = $KW.skins.getWidgetSkinList(f, c);
    var j = $KW.Utils.getBaseHtml(f, c);
    var h = c.tabpaneID ? (" ktabpaneid=" + c.tabpaneID) : "";
    var d = f.autoplay ? " autoplay='autoplay'" : "";
    var l = f.poster ? (" poster=" + $KU.getImageURL(f.poster)) : "";
    var b = " style='" + $KW.skins.getMarginSkin(f, c) + ";" + $KW.skins.getPaddingSkin(f) + "'";
    var i = f.loop ? " loop='loop'" : "";
    var m = (f.controls || f.controls == undefined) ? " controls='controls'" : "";
    var e = f.heightwidth;
    if (e) {
      e = e.split(",");
      e = (e[1] != "0" ? (" width=" + e[1] + "px ") : "") + (e[0] != "0" ? ("height=" + e[0] + "px ") : "")
    }
    var k = "";
    if (f.wType == "Video") {
      k = "<video" + j + m + e + d + l + i + h
    } else {
      k = "<audio" + j + " controls='controls'" + d + i + h
    }
    k += b;
    var a = this.getSrc(f);
    k += " class = '" + g + a[1] + "'>";
    if (f.wType == "Video") {
      k += a[0] + (f.text || "") + "</video>"
    } else {
      k += a[0] + (f.text || "") + "</audio>"
    }
    return k
  },
  getSrc: function(c) {
    var j = false;
    var b = $KU.getPlatform();
    if (b.name == "android" && b.version <= 2.2) {
      j = true
    }
    var g = c.wType.toLowerCase();
    var e = skin = "";
    var h = count = 0;
    var a = c.source;
    if ($KU.isArray(a)) {
      for (var d = 1; d < a.length; d++) {
        h++;
        if (a[d][2]) {
          var f = g + "/" + a[d][1];
          e += "<source src='" + a[d][2] + "'" + (a[d][1] == "mp4" && j ? "" : " type='" + f + "'") + "/>"
        } else {
          count++
        }
      }
    } else {
      for (var k in a) {
        h++;
        if (a[k]) {
          var f = g + "/" + k;
          e += "<source src='" + a[k] + "'" + (k == "mp4" && j ? "" : " type='" + f + "'") + "/>"
        } else {
          count++
        }
      }
    }
    if (h == count && c.isvisible) {
      skin = " hide"
    }
    return [e, skin]
  },
  eventHandler: function(a, b) {}
};
$KW.Calendar = {
  initialize: function() {
    kony.events.addEvent("click", "Calendar", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Calendar", $KW.Calendar.__dp.reposition)
  },
  initializeView: function(a) {
    $KW.Calendar.__dp.days = (function() {
      if ($KG.i18nArray && $KG.i18nArray["weekdayI18Nkey"]) {
        var f = $KG.i18nArray && $KG.i18nArray["weekdayI18Nkey"] ? kony.i18n.getLocalizedString("weekdayI18Nkey") : null;
        if (f) {
          return f.split(",")
        } else {
          return ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]
        }
      } else {
        var f = [];
        if ($KG.i18nArray) {
          var h, b, i, c, d, g, e;
          h = $KG.i18nArray["platform.calendar.sunday"] ? kony.i18n.getLocalizedString("platform.calendar.sunday") : "SUN";
          h && f.push(h);
          b = $KG.i18nArray["platform.calendar.monday"] ? kony.i18n.getLocalizedString("platform.calendar.monday") : "MON";
          b && f.push(b);
          i = $KG.i18nArray["platform.calendar.tuesday"] ? kony.i18n.getLocalizedString("platform.calendar.tuesday") : "TUE";
          i && f.push(i);
          c = $KG.i18nArray["platform.calendar.wednesday"] ? kony.i18n.getLocalizedString("platform.calendar.wednesday") : "WED";
          c && f.push(c);
          d = $KG.i18nArray["platform.calendar.thursday"] ? kony.i18n.getLocalizedString("platform.calendar.thursday") : "THU";
          d && f.push(d);
          g = $KG.i18nArray["platform.calendar.friday"] ? kony.i18n.getLocalizedString("platform.calendar.friday") : "FRI";
          g && f.push(g);
          e = $KG.i18nArray["platform.calendar.saturday"] ? kony.i18n.getLocalizedString("platform.calendar.saturday") : "SAT";
          e && f.push(e)
        }
        if (f.length > 0) {
          return f
        } else {
          return ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]
        }
      }
    }());
    $KW.Calendar.__dp.months = (function() {
      if ($KG.i18nArray && $KG.i18nArray["monthI18Nkey"]) {
        var j = $KG.i18nArray && $KG.i18nArray["monthI18Nkey"] ? kony.i18n.getLocalizedString("monthI18Nkey") : null;
        if (j) {
          return j.split(",")
        } else {
          return ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
        }
      } else {
        var j = [];
        if ($KG.i18nArray) {
          var d, n, l, h, b, k, g, c, f, i, e, m;
          d = $KG.i18nArray["platform.calendar.january"] ? kony.i18n.getLocalizedString("platform.calendar.january") : "January";
          d && j.push(d);
          n = $KG.i18nArray["platform.calendar.february"] ? kony.i18n.getLocalizedString("platform.calendar.february") : "February";
          n && j.push(n);
          l = $KG.i18nArray["platform.calendar.march"] ? kony.i18n.getLocalizedString("platform.calendar.march") : "March";
          l && j.push(l);
          h = $KG.i18nArray["platform.calendar.april"] ? kony.i18n.getLocalizedString("platform.calendar.april") : "April";
          h && j.push(h);
          b = $KG.i18nArray["platform.calendar.may"] ? kony.i18n.getLocalizedString("platform.calendar.may") : "May";
          b && j.push(b);
          k = $KG.i18nArray["platform.calendar.june"] ? kony.i18n.getLocalizedString("platform.calendar.june") : "June";
          k && j.push(k);
          g = $KG.i18nArray["platform.calendar.july"] ? kony.i18n.getLocalizedString("platform.calendar.july") : "July";
          g && j.push(g);
          c = $KG.i18nArray["platform.calendar.august"] ? kony.i18n.getLocalizedString("platform.calendar.august") : "August";
          c && j.push(c);
          f = $KG.i18nArray["platform.calendar.september"] ? kony.i18n.getLocalizedString("platform.calendar.september") : "September";
          f && j.push(f);
          i = $KG.i18nArray["platform.calendar.october"] ? kony.i18n.getLocalizedString("platform.calendar.october") : "October";
          i && j.push(i);
          e = $KG.i18nArray["platform.calendar.november"] ? kony.i18n.getLocalizedString("platform.calendar.november") : "November";
          e && j.push(e);
          i18December = $KG.i18nArray["platform.calendar.december"] ? kony.i18n.getLocalizedString("platform.calendar.december") : "December";
          i18December && j.push(i18December)
        }
        if (j.length > 0) {
          return j
        } else {
          return ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
        }
      }
    }())
  },
  setcontext: function(b, a) {
    if (b instanceof Object && a instanceof Object) {
      b.context = a
    }
  },
  updateView: function(e, j, d, f) {
    var h = $KU.getNodeByModel(e);
    switch (j) {
      case "date":
        e.luadate = d;
        var c = $KW.Calendar.DateFormater;
        var b = $KW.Calendar.ideDateToString(e.date);
        e.entereddate = b;
        var k = $KU.isValidDate(b, "dd/mm/yyyy");
        if (k) {
          if (!kony.appinit.isMobile && !kony.appinit.isTablet && kony.appinit.isIE8) {
            var g = document.getElementById(e.id);
            g.value = "";
            $KU.removeClassName(g, "konyplaceholder");
            g.value = b
          } else {
            e.day = d[IndexJL + 0];
            e.month = d[IndexJL + 1];
            e.year = d[IndexJL + 2];
            this.updateCalDOMNode(e, true)
          }
        }
        break;
      case "datecomponents":
        e.day = d[IndexJL + 0];
        e.month = d[IndexJL + 1];
        e.year = d[IndexJL + 2];
        e.hour = 0;
        e.minutes = 0;
        e.seconds = 0;
        this.updateCalDOMNode(e, true);
        break;
      case "placeholder":
        var a = document.getElementById(e.id);
        if (a && (a.value.indexOf("/") > -1 || a.value.indexOf("-") > -1)) {
          return false
        }
        d = d || e.dateformat || e.format;
        if (e.placeholder != d) {
          e.placeholder = d
        }
        a && a.setAttribute("placeholder", e.placeholder);
        a && this.setPlaceholder(e, a);
        break;
      case "calendaricon":
        if (h) {
          h.childNodes[1].src = $KU.getImageURL(d)
        }
        e.Image = d;
        break;
      case "dateformat":
        this.updateCalDOMNode(e, true);
        break;
      case "validstartdate":
      case "startdate":
        e.startdate = d;
        break;
      case "validenddate":
      case "enddate":
        e.enddate = d;
        break;
      case "titleonpopup":
        e.title = d;
        break;
      case "dateeditable":
        var i = e.dateEditable;
        if (h) {
          if (!i) {
            h.firstChild.setAttribute("readonly", "readonly")
          } else {
            h.firstChild.removeAttribute("readonly")
          }
        }
        break
    }
  },
  render: function(l, e) {
    l.placeholder = l.placeholder || l.dateformat || l.format;
    var g = $KW.skins.getWidgetSkinList(l, e);
    var h = "";
    var f = "text";
    var c = $KW.Calendar.DateFormater;
    var q = l.Image ? $KU.getImageURL(l.Image) : $KU.getImageURL("calbtn.gif");
    var a = $KW.skins.getBaseStyle(l, e);
    var p = e.tabpaneID || "";
    if (l.viewtype === constants.CALENDAR_VIEW_TYPE_GRID_POPUP || l.viewtype == "default") {
      var j = {};
      if (l.date instanceof Array) {
        l.luadate = l.date;
        l.entereddate = l.date;
        if (l.date && l.date.length > IndexJL) {
          var d = [l.date[0 + IndexJL], l.date[1 + IndexJL], l.date[2 + IndexJL]];
          var m = $KW.Calendar.__dp.dateFormatter(l.dateformat, d);
          if (m != false) {
            l.dateComponents = m.date;
            l.formatteddate = m.string
          }
          l.day = m.date[0];
          l.month = m.date[1];
          l.year = m.date[2];
          l.selectdate = j.selectdate;
          l.pagedate = j.pagedate
        } else {
          l.day = null;
          l.month = null;
          l.year = null
        }
        l.hour = l.minutes = l.seconds = 0
      } else {
        l.formatteddate = l.date
      }
      if (!j.day) {
        l.format = l.dateformat;
        if (!l.datecomponents) {
          this.setCurrentDate(l)
        }
        var r = $KW.Calendar.ideDateToString(l.datecomponents);
        j = c.convertToModelDate(r, l.dateformat);
        l.day = parseInt(j.day, 10);
        l.month = parseInt(j.month, 10);
        l.year = parseInt(j.year, 10);
        l.selectdate = j.selectdate;
        l.pagedate = j.pagedate
      }
      $KW.Calendar.updateCalDOMNode(l, false);
      var b = $KW.skins.getContentAlignment(l);
      if (e.ispercent === false) {
        a += " display: inline-block;"
      }
      var s = "";
      if (typeof document.createElement("input").placeholder == "undefined") {
        s = l.placeholder || ""
      }
      var o = l.pf + "_" + l.id;
      h = "<div " + $KW.Utils.getBaseHtml(l, e) + " kwidgetid=" + o + "  class = '" + g + "'";
      h += " style='text-align: " + b + "; vertical-align: middle;" + a + "'>";
      var k = (e.container ? (l.id + "_" + e.container.counter) : l.id);
      h += "<input onchange='$KW.Calendar.calendarTextfieldChangeEventHandler(arguments[0],this)' kwidgettype='CalendarText'  ' kformname='" + l.pf + "' " + (p && " ktabpaneid='" + p + "' ") + " id='" + k + "' style='-" + vendor + "-appearance: none; text-align: inherit; vertical-align: middle;background:transparent;width:50%;text-decoration:inherit;' name='calBody' ";
      if ((typeof document.createElement("input").placeholder == "undefined") && l.placeholder && !l.formatteddate) {
        if (l.date == null || l.date == undefined || l.date == "") {
          h += " class='konyplaceholder '"
        } else {
          h += ""
        }
      }
      h += (l.placeholder) ? " placeholder='" + l.placeholder + "'" : "";
      h += (l.title) ? " title='" + l.title + "'" : "";
      h += (l.disabled) ? " disabled='true'" : "";
      h += " onfocus='$KW.TextField.onfocusEventHandler(arguments[0],this)' onblur='$KW.TextField.onblurEventHandler(arguments[0],this)' ";
      if ((typeof document.createElement("input").placeholder == "undefined") && l.placeholder && !l.datecomponents[IndexJL + 0]) {
        if (l.date == null || l.date == undefined || l.date == "") {
          h += " value='" + s + "' "
        } else {
          h += " value='" + (l.date || "") + "' "
        }
      } else {
        if (l.date) {
          h += " value='" + (l.formatteddate || "") + "' "
        } else {
          h += (l.formatteddate) ? " value='" + (l.formatteddate || "") + "'" : ""
        }
      }
      h += (!(l.dateEditable || l.dateeditable) ? " readonly='readonly' " : " ");
      var n = $KW.Utils.isWidgetDisabled(l, e) || false;
      h += n ? ' kdisabled="true" disabled="true" ' : "";
      h += " type='text' />";
      var i = (l.accessibilityconfig && l.accessibilityconfig.hint) ? l.accessibilityconfig.hint : "Calendar";
      if (kony.appinit.isIE7) {
        h += "<img id='" + k + "_img' type='image'  alt='" + i + "' style='vertical-align:middle' xalign='right' src='" + q + "' onload='$KW.Calendar.setCalElementStyle(this,false)' "
      } else {
        h += "<img id='" + k + "_img'  type='image'  alt='" + i + "' style='float:right;vertical-align:middle' xalign='right' src='" + q + "' onload='$KW.Calendar.setCalElementStyle(this,false)' "
      }
      h += (l.title) ? " title='" + l.title + "'" : "";
      h += " />";
      h += "</div>"
    }
    return h
  },
  setCurrentDate: function(b) {
    var a = new Date();
    b.datecomponents = [];
    b.datecomponents[IndexJL + 0] = 0;
    b.datecomponents[IndexJL + 1] = a.getMonth() + 1;
    b.datecomponents[IndexJL + 2] = a.getFullYear();
    b.datecomponents[IndexJL + 3] = 0;
    b.datecomponents[IndexJL + 4] = 0;
    b.datecomponents[IndexJL + 5] = 0
  },
  eventHandler: function(R, c) {
    var f = 2099;
    var B = 1900;
    var H = document.getElementById("calendar_close_link");
    var V = document.getElementById("-k-w-c-cal-title");
    if (H != null || H != undefined) {
      H.style.visibility = "visible"
    }
    if (V) {
      V.style.visibility = "visible"
    }
    if (c.getAttribute("k-w-c-id")) {
      var J = c.getAttribute("k-w-c-id")
    } else {
      var J = c.getAttribute("id")
    }
    J = J.split("-")[0];
    var Q = $KU.getElementID(J);
    J = J.split("_").length > 2 ? J.substring(0, J.lastIndexOf("_")) : J;
    var u = kony.model.getWidgetModel(c.getAttribute("kformname"), $KU.getElementID(J), c.getAttribute("ktabpaneid"));
    var G = u.title;
    var d = u;
    if (!d.viewconfig) {
      d.viewconfig = {
        gridconfig: ""
      }
    }
    var k = u.startdate;
    var z = u.enddate;
    if (c.getAttribute("kcontainerid")) {
      $KW.Calendar.updateModelByContainerData(u, c, Q);
      if (!u.datecomponents) {
        $KW.Calendar.setCurrentDate(u)
      }
    }
    if (!d) {
      return
    }
    var L = d.viewconfig.gridconfig || d.viewconfig.gridConfig || {};
    var T = $KW.Calendar.__dp.months;
    if (c.className.indexOf("-kony-w-c-yemo") > -1) {
      u.currentSelectedyearMonth = c.innerHTML.split(",");
      for (var ah = 0; ah < T.length; ah++) {
        if (u.currentSelectedyearMonth[0] == T[ah]) {
          u.currentSelectedMonth = ah
        }
      }
    }
    if (c.className.indexOf("-kony-w-c-next-nav") > -1) {
      var K = document.getElementById(c.getAttribute("k-w-c-id") + "-k-w-c-datepicker");
      var ad = document.querySelectorAll("#" + K.id + " .-kony-w-c-popup-container")[0];
      var r = ad.getAttribute("month"),
        n = ad.getAttribute("year");
      if (Number(n) < f) {
        var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1) * 1 + 1);
        C.splice(0, 1);
        var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
      } else {
        if (Number(n) == f) {
          if (Number(r) < 12) {
            var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1) * 1 + 1);
            C.splice(0, 1);
            var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
          }
        }
      }
      $KW.Calendar.__dp.show(u, C, D, M);
      c.blur();
      var X = document.querySelector(".-kony-w-c-yemo");
      if (X) {
        X.focus()
      }
      return
    } else {
      if (c.className.indexOf("-kony-w-c-prev-nav") > -1) {
        var K = document.getElementById(c.getAttribute("k-w-c-id") + "-k-w-c-datepicker");
        var ad = document.querySelectorAll("#" + K.id + " .-kony-w-c-popup-container")[0];
        var r = ad.getAttribute("month"),
          n = ad.getAttribute("year");
        if (r == 1) {
          r = 12;
          n = n - 1
        } else {
          r = r - 1
        }
        if (Number(n) > B) {
          var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1));
          var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
        } else {
          if (Number(n) == B) {
            if (Number(r) > 0) {
              var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1));
              var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
            }
          }
        }
        $KW.Calendar.__dp.show(u, C, D, M);
        var X = document.querySelector(".-kony-w-c-yemo");
        if (X) {
          X.focus()
        }
        return
      } else {
        if (c.getAttribute("k-w-c-hold-day")) {
          var I = document.getElementById(c.getAttribute("k-w-c-id"));
          I.className = I.className.replace("konyplaceholder", "");
          var w = $KW.Calendar.__dp.dateFormatter(d.dateformat, c.getAttribute("k-w-c-hold-day").split(","));
          if (w != false) {
            d.dateComponents = w.date;
            if (kony.appinit.isIE7 || kony.appinit.isIE8 || IndexJL == 1) {
              w.date[3] = (u.hour != 0) ? u.hour : new Date().getHours();
              w.date[4] = (u.minutes != 0) ? u.minutes : new Date().getMinutes();
              w.date[5] = (u.seconds != 0) ? u.seconds : new Date().getSeconds();
              d.date = w.date;
              d.datecomponents = w.date;
              d.day = w.date[0];
              d.month = w.date[1];
              d.year = w.date[2];
              u.formatteddate = w.string
            }
            if (I) {
              var l = document.getElementById($KW.Calendar.__dp.invoked[I.id].i);
              l.value = w.string;
              $KU.removeClassName(l, "konyplaceholder")
            }
          }
          var F = new Date();
          if (IndexJL == 1 && d.datecomponents[0] != null) {
            d.datecomponents = [null].concat(d.datecomponents)
          }
          d._startG = [0, d.datecomponents[1 + IndexJL], d.datecomponents[2 + IndexJL]];
          d.month = d.datecomponents[1 + IndexJL];
          d.day = d.datecomponents[0 + IndexJL];
          d.year = d.datecomponents[2 + IndexJL];
          var F = new Date();
          d.minutes = F.getMinutes();
          d.hour = F.getHours();
          d.seconds = F.getSeconds();
          var o = I;
          if (o && o.getAttribute("kcontainerID")) {
            $KW.Utils.updateContainerData(d, o, false, true)
          }
          var U = u.accessibilityconfig ? ((u.accessibilityconfig.a11yLabel ? u.accessibilityconfig.a11yLabel : "") + " " + u.date) : ("Calendar " + u.date);
          I.setAttribute("aria-label", U);
          var ac = document.getElementById(u.pf);
          if (ac) {
            ac.setAttribute("aria-hidden", false)
          }
          $KW.Calendar.__dp.destroyCalendar(undefined, o.id);
          I.focus();
          if (!d.containerId) {
            var S = $KU.returnEventReference(d.ondone || d.onselection);
            if (S) {
              S.call(d, d);
              $KU.onEventHandler(d)
            }
          }
          return
        } else {
          if (c.className.indexOf("-kony-w-c-yemo") > -1) {
            H.style.visibility = "hidden";
            if (V) {
              V.style.visibility = "hidden"
            }
            var M = c.getAttribute("k-w-c-id");
            var s = document.getElementById(M + "-k-w-c-datepicker");
            var A;
            if (c.innerText == undefined) {
              A = c.textContent.split(",")
            } else {
              A = c.innerText.split(",")
            }
            var P = A[1].trim();
            var g = $KW.Calendar.__dp.navigatorTemplate(d, M, P, "fromYearMonth");
            var ad = document.createElement("div");
            ad.innerHTML = g;
            ad.style.position = "absolute";
            ad.style.height = ad.style.width = "100%";
            ad.className = "-k-w-c-navigator-scrim";
            ad.style["background-color"] = "White";
            ad.id = M + "-k-w-c-navigator-scrim";
            ad.setAttribute("w-type", "Calendar");
            ad.firstChild.position = "absolute";
            ad.firstChild.style["background-color"] = "white";
            var j = s;
            j.appendChild(ad);
            var Y = ad.clientHeight,
              ae = ad.firstChild.clientHeight,
              ag = ad.clientWidth,
              h = ad.firstChild.clientWidth;
            ad.firstChild.position = "absolute";
            ad.firstChild.style.top = ((Y - ae) / 2) + "px";
            ad.firstChild.style.left = ((ag - h) / 2) + "px";
            ad.style.top = ad.style.left = "0px";
            var m = document.querySelectorAll("[tabindex]");
            for (var ab = 0; ab < m.length; ab++) {
              m[ab].removeAttribute("tabindex")
            }
            document.activeElement.blur();
            document.querySelectorAll(".-kony-w-c-popup-container")[0].setAttribute("aria-hidden", true);
            ad.querySelectorAll("[w-type-inactive]")[0].setAttribute("tabindex", 1);
            ad.querySelectorAll("[w-type-inactive]")[0].focus();
            return false
          }
        }
      }
    }
    if (c.className.indexOf("-kony-w-c-navigator-month") > -1) {
      H.style.visibility = "hidden";
      if (V) {
        V.style.visibility = "hidden"
      }
      var M = c.getAttribute("k-w-c-id"),
        e = document.querySelectorAll("#" + M + "-k-w-c-datepicker  .-kony-w-c-navigator-month-selected");
      for (ab = 0; ab < e.length; ab++) {
        if (e[ab] != c) {
          $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-month-selected");
          $KW.Calendar.__dp.addClass(e[ab], "-kony-w-c-navigator-month")
        }
      }
      $KW.Calendar.__dp.addClass(c, "-kony-w-c-navigator-month-selected");
      var aa = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-k-w-c-nav-selected-ym")[0];
      var t = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected")[0];
      if (t) {
        var O = t.getAttribute("k-w-c-hold") * 1
      }
      var p = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected")[0];
      if (p) {
        var N = $KW.Calendar.__dp.months[(p.getAttribute("k-w-c-hold") * 1) - 1]
      }
      aa.innerHTML = (N || "") + " " + (O || "");
      return false
    } else {
      if (c.className.indexOf("-kony-w-c-navigator-year") > -1) {
        H.style.visibility = "hidden";
        if (V) {
          V.style.visibility = "hidden"
        }
        var M = c.getAttribute("k-w-c-id"),
          e = document.querySelectorAll("#" + M + "-k-w-c-datepicker  .-kony-w-c-navigator-year-selected");
        for (ab = 0; ab < e.length; ab++) {
          if (e[ab] != c) {
            $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected");
            $KW.Calendar.__dp.addClass(e[ab], "-kony-w-c-navigator-year")
          }
        }
        $KW.Calendar.__dp.addClass(c, "-kony-w-c-navigator-year-selected");
        var aa = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-k-w-c-nav-selected-ym")[0];
        var t = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected")[0];
        if (t) {
          var O = t.getAttribute("k-w-c-hold") * 1
        }
        var p = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected")[0];
        if (p) {
          var N = $KW.Calendar.__dp.months[(p.getAttribute("k-w-c-hold") * 1) - 1]
        }
        aa.innerHTML = (N || "") + " " + (O || "");
        return false
      } else {
        if (c.className.indexOf("-kony-w-c-cancel-nav") > -1) {
          var M = c.getAttribute("k-w-c-id");
          var W = document.querySelector("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected");
          var q = document.querySelector("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected");
          W && $KW.Calendar.__dp.removeClass(W, "-kony-w-c-navigator-month-selected");
          q && $KW.Calendar.__dp.removeClass(q, "-kony-w-c-navigator-year-selected");
          if (W || q) {
            H.style.visibility = "hidden";
            if (V) {
              V.style.visibility = "hidden"
            }
            var aa = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-k-w-c-nav-selected-ym")[0];
            aa.innerHTML = ""
          } else {
            var ai = document.getElementById(M + "-k-w-c-navigator-scrim");
            ai.parentNode.removeChild(ai);
            var m = document.querySelectorAll("[tabindex]");
            for (var ab = 0; ab < m.length; ab++) {
              m[ab].removeAttribute("tabindex")
            }
            document.activeElement.blur();
            document.querySelectorAll(".-kony-w-c-popup-container")[0].setAttribute("aria-hidden", false);
            var X = document.querySelector(".-kony-w-c-yemo");
            if (X) {
              X.setAttribute("tabindex", 1);
              X.focus()
            }
          }
          return false
        } else {
          if (c.className.indexOf("-kony-w-c-go-nav") > -1) {
            var M = c.getAttribute("k-w-c-id"),
              t = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected")[0];
            if (t) {
              var O = t.getAttribute("k-w-c-hold") * 1
            }
            var p = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected")[0];
            if (p) {
              var N = p.getAttribute("k-w-c-hold") * 1
            }
            var af = O ? O : u.currentSelectedyearMonth[1].trim();
            var r = N ? N : u.currentSelectedMonth + 1;
            if ((r > 0 && !(r >= 1 && r <= 12))) {
              H.style.visibility = "hidden";
              if (V) {
                V.style.visibility = "hidden"
              }
              alert(d.navigatorAlert);
              return false
            }
            number = parseInt(af, 10);
            if (af || r) {
              var ai = document.getElementById(M + "-k-w-c-navigator-scrim");
              ai.parentNode.removeChild(ai);
              var Z = [];
              var C = $KW.Calendar.__dp.series((af || d.year || new Date().getFullYear()), (r || d.month || new Date().getMonth() + 1), (d.noofmonths || 1) * 1 + 1);
              var v;
              $KW.Calendar.__dp.show(d, C, D, document.getElementById(M))
            } else {
              H.style.visibility = "hidden";
              if (V) {
                V.style.visibility = "hidden"
              }
              alert(d.navigatorAlert);
              return false
            }
            var m = document.querySelectorAll("[tabindex]");
            for (var ab = 0; ab < m.length; ab++) {
              m[ab].removeAttribute("tabindex")
            }
            document.activeElement.blur();
            document.querySelectorAll(".-kony-w-c-popup-container")[0].setAttribute("aria-hidden", false);
            var X = document.querySelector(".-kony-w-c-yemo");
            if (X) {
              X.setAttribute("tabindex", 1);
              X.focus()
            }
            return false
          } else {
            if (c.className.indexOf("-kony-w-c-left-ym-p") > -1) {
              H.style.visibility = "hidden";
              if (V) {
                V.style.visibility = "hidden"
              }
              var M = c.getAttribute("k-w-c-id"),
                e = document.querySelectorAll("#" + M + "-k-w-c-navigator-scrim .-kony-w-c-navigator-year");
              for (var ab = 0; ab < e.length; ab++) {
                if (e[e.length - 1].innerHTML == "") {
                  e[ab].style.visibility = "visible";
                  this.cellVisibility = true;
                  if ((e[ab - 1] != undefined) && e[ab - 1].innerHTML != "") {
                    e[ab].innerHTML = (Number(e[ab - 1].innerHTML) + 1);
                    e[ab].setAttribute("k-w-c-hold", (Number(e[ab].innerHTML)))
                  } else {
                    e[ab].innerHTML = (Number(e[ab].innerHTML) - 16);
                    e[ab].setAttribute("k-w-c-hold", (Number(e[ab].innerHTML)))
                  }
                  $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                } else {
                  var n = e[ab].getAttribute("k-w-c-hold") * 1;
                  if (n - 16 >= B) {
                    e[ab].innerHTML = n - 16;
                    e[ab].setAttribute("k-w-c-hold", (n - 16));
                    if (n - B <= 16) {
                      for (var b = ab - 1; b >= 0; b--) {
                        e[b].innerHTML = "";
                        e[b].style.visibility = "hidden";
                        this.cellVisibility = false
                      }
                    } else {
                      e[ab].style.visibility = "visible";
                      e[ab].setAttribute("k-w-c-hold", (n - 16));
                      $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                    }
                  }
                }
              }
              return false
            } else {
              if (c.className.indexOf("-kony-w-c-right-ym-p") > -1) {
                H.style.visibility = "hidden";
                if (V) {
                  V.style.visibility = "hidden"
                }
                var M = c.getAttribute("k-w-c-id");
                var e = document.querySelectorAll("#" + M + "-k-w-c-navigator-scrim .-kony-w-c-navigator-year");
                for (var ab = 0; ab < e.length; ab++) {
                  if (e[ab].innerHTML == "" && this.cellVisibility == false) {
                    e[ab].style.visibility = "visible";
                    if ((e[ab - 1] != undefined) && e[ab - 1].innerHTML != "") {
                      e[ab].innerHTML = (Number(e[ab - 1].innerHTML) + 1);
                      e[ab].setAttribute("k-w-c-hold", (Number(e[ab].innerHTML)))
                    } else {
                      e[ab].innerHTML = (Number(e[e.length - 1].innerHTML) + 1);
                      e[ab].setAttribute("k-w-c-hold", (Number(e[e.length - 1].innerHTML) + 1))
                    }
                    $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                  } else {
                    var n = e[ab].getAttribute("k-w-c-hold") * 1;
                    if (n + 16 <= f) {
                      e[ab].innerHTML = n + 16;
                      e[ab].setAttribute("k-w-c-hold", (n + 16));
                      if (Number(e[ab].innerHTML) == f) {
                        for (var b = ab + 1; b < 16; b++) {
                          e[b].innerHTML = "";
                          e[b].style.visibility = "hidden"
                        }
                      } else {
                        e[ab].style.visibility = "visible";
                        this.cellVisibility = true;
                        e[ab].setAttribute("k-w-c-hold", (n + 16));
                        $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                      }
                    }
                  }
                }
                return false
              } else {
                if (c.className.indexOf("-k-w-c-close-picker") > -1) {
                  var M = c.getAttribute("k-w-c-id");
                  ai = document.getElementById(M + "-k-w-c-datepicker");
                  var I = $KU.getNodeByModel(u);
                  if (I) {
                    I = I.childNodes[0];
                    if (I.value == "") {
                      $KW.Calendar.clear(u)
                    }
                  }
                  ai.parentNode.removeChild(ai);
                  var ac = document.getElementById(u.pf);
                  if (ac != null) {
                    ac.setAttribute("aria-hidden", false)
                  }
                  $KW.Calendar.__dp.destroyCalendar(undefined, I.id);
                  return
                } else {
                  if (J == d.id) {
                    return false
                  }
                }
              }
            }
          }
        }
      }
    }
    $KW.Calendar.__dp.reAssignData(u);
    if (c.nodeName == "INPUT" || c.nodeName == "IMG") {
      u.__id = c.parentNode.id
    } else {
      u.__id = c.id;
      if (c.firstChild) {
        u.__input = c.firstChild.id
      } else {
        return false
      }
    }
    $KW.Calendar && $KW.Calendar.__dp.destroyCalendar(1);
    var D;
    c.blur();
    $KW.Calendar && $KW.Calendar.__dp.show(u, D, D, c);
    var X = document.querySelector(".-kony-w-c-yemo");
    if (X) {
      X.focus()
    }
  },
  updateModelByContainerData: function(e, g, c) {
    var l = $KU.getParentByAttribute(g, "index");
    var a = c.split("_")[1];
    var f;
    if (l) {
      var b = l.parentNode.parentNode;
      var d = $KU.getModelByNode(b);
      if (d.wType == "DataGrid") {
        var i = $KU.getParentByAttribute(g, "colindex");
        if (l.getAttribute("index") == "0") {
          var k = d.columnheadersconfig[i.cellIndex + IndexJL];
          f = k.columnheadertemplate.data
        } else {
          a = IndexJL ? a : a - 1;
          f = d.data[a][i.id]
        }
      } else {
        f = d.data[a]
      }
      var j = f[c.split("_")[0]].dateComponents;
      var h = f[c.split("_")[0]].dateFormat;
      e.datecomponents = j;
      e.dateformat = e.format = h
    }
  },
  displayedMonth: function(b, e, c) {
    var a = $KW.Calendar.__dp.series(c, e, (b.noofmonths || 1) * 1 + 1);
    var d = $KU.getNodeByModel(b);
    if (!d) {
      return false
    }
    $KW.Calendar.__dp.destroyCalendar(1);
    b.displayedMonths = [e, c];
    $KW.Calendar.__dp.reAssignData(b);
    $KW.Calendar.__dp.show(b, a, 1, d)
  },
  calendarTextfieldChangeEventHandler: function(d, g) {
    var a = g.parentNode.getAttribute("id");
    var k = $KU.getElementID(a);
    a = a.split("_").length > 2 ? a.substring(0, a.lastIndexOf("_")) : a;
    var c = kony.model.getWidgetModel(g.getAttribute("kformname"), $KU.getElementID(a), g.getAttribute("ktabpaneid"));
    var c = kony.model.getWidgetModel(g.getAttribute("kformname"), $KU.getElementID(a), g.getAttribute("ktabpaneid"));
    var b = g.value;
    if (b.length == 0) {
      c.clear();
      return false
    }
    var m = $KW.Calendar.__dp.dateFormatter(c.dateformat, null, b, c.dateComponents[2 + IndexJL]);
    if (c.validstartdate) {
      var l = new Date(c.validstartdate[2], c.validstartdate[1] - 1, c.validstartdate[0]);
      var i = new Date(c.validenddate[2], c.validenddate[1] - 1, c.validenddate[0])
    } else {
      var l = undefined;
      var i = undefined
    }
    if (m) {
      var h = new Date(m.date[2], m.date[1] - 1, m.date[0]);
      if (l < h && h > i) {
        alert("Date is not set in the valid range.Please try again");
        g.value = "";
        return false
      }
    }
    if (b.length > 0 && c.dateComponents) {
      if (m != false) {
        c.dateComponents = m.date;
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          m.date[3] = (c.hour != 0) ? c.hour : new Date().getHours();
          m.date[4] = (c.minutes != 0) ? c.minutes : new Date().getMinutes();
          m.date[5] = (c.seconds != 0) ? c.seconds : new Date().getSeconds();
          c.date = m.date;
          c.datecomponents = m.date;
          c.day = m.date[0];
          c.month = m.date[1];
          c.year = m.date[2];
          c.formatteddate = m.string
        }
        g.className = g.className.replace("konyplaceholder", "");
        g.value = m.string;
        c._startG = c.datecomponents;
        var j = document.getElementById(g.parentNode.id);
        if (IndexJL == 1 && model.datecomponents[0] != null) {
          c.datecomponents = [null].concat(c.datecomponents)
        }
        c.month = c.datecomponents[1 + IndexJL];
        c.day = c.datecomponents[0 + IndexJL];
        c.year = c.datecomponents[2 + IndexJL];
        if (j.getAttribute("kcontainerID")) {
          $KW.Utils.updateContainerData(c, j, false)
        }
        var e = new Date();
        c.minutes = e.getMinutes();
        c.hour = e.getHours();
        c.seconds = e.getSeconds();
        var f = $KU.returnEventReference(c.ondone);
        f && f.call(c, c)
      } else {
        g.value = c.formatteddate || ""
      }
    }
  },
  onfocusEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    var b = document.getElementById(d.id);
    if (kony.utils.placeholderSupported == false) {
      if (b != null && b.value == c.placeholder) {
        b.value = "";
        $KU.removeClassName(b, "konyplaceholder")
      }
    }
  },
  onblurEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    var b = document.getElementById(d.id);
    if (kony.utils.placeholderSupported == false) {
      if (b != null && b.value == "") {
        $KU.addClassName(b, "konyplaceholder");
        b.value = c.placeholder
      }
    }
  },
  setPlaceholder: function(b, a) {
    if (IndexJL == 0) {
      if (kony.utils.placeholderSupported == false) {
        a.value = b.placeholder;
        $KU.addClassName(a, "konyplaceholder")
      }
    } else {
      if (b.formatteddate == null || b.formatteddate == undefined) {
        b.formatteddate = ""
      }
      if (kony.utils.placeholderSupported == false && b.formatteddate.length < 1) {
        a.value = b.placeholder;
        $KU.addClassName(a, "konyplaceholder")
      }
    }
  },
  updateCalDOMNode: function(d, b) {
    var c = "";
    var f = "",
      g = "";
    if (!d.datecomponents) {
      if (!d.datecomponents) {
        return false
      }
    }
    if (IndexJL == 1 && d.datecomponents[0] != null) {
      d.datecomponents = [null].concat(d.datecomponents)
    }
    d.day = d.datecomponents[0 + IndexJL];
    d.month = d.datecomponents[1 + IndexJL];
    d.year = d.datecomponents[2 + IndexJL];
    if (d.day && d.month && d.year) {
      var a = $KW.Calendar.__dp.dateFormatter(d.dateformat, [d.day, d.month, d.year]);
      if (a != false) {
        c = a.string
      }
      var e = document.getElementById(d.id);
      if (e && b) {
        e.value = c;
        if (typeof document.createElement("input").placeholder == "undefined") {
          $KU.removeClassName(e, "konyplaceholder")
        }
      }
      d.formatteddate = c;
      d.selectdate = g + "/" + f + "/" + d.year;
      d.pagedate = g + "/" + d.year
    } else {
      d.formatteddate = c
    }
  },
  clear: function(b) {
    var a = $KU.getNodeByModel(b);
    if (a) {
      a = a.childNodes[0];
      a.value = ""
    }
    b.datecomponents = null;
    b.entereddate = null;
    b.date = null;
    b.formatteddate = null;
    b.day = null;
    b.month = null;
    b.year = null;
    b.seconds = null;
    b.minutes = null;
    b.hour = null;
    if (!kony.utils.placeholderSupported && a) {
      b.placeholder = b.placeholder || b.dateformat || b.format;
      a.value = b.placeholder;
      $KU.addClassName(a, "konyplaceholder")
    }
  },
  setEnableAll: function(a) {
    a.datesGroup = "";
    a.datesGroupSimplified = ""
  },
  navigateToPreviousMonth: function(b) {
    $KW.Calendar.__dp.reAssignData(b);
    var c = b.displayedMonths[0],
      d = b.displayedMonths[1];
    if (c == 1) {
      c = 12;
      d = d - 1
    } else {
      c = c - 1
    }
    var a = $KW.Calendar.__dp.series(d, c, (b.noofmonths || 1));
    $KW.Calendar.displayedMonth(b, a[0][0], a[0][1])
  },
  navigateToNextMonth: function(b) {
    $KW.Calendar.__dp.reAssignData(b);
    var a = $KW.Calendar.__dp.series(b.displayedMonths[1], b.displayedMonths[0], (b.noofmonths || 1) * 1 + 1);
    a.splice(0, 1);
    $KW.Calendar.displayedMonth(b, a[0][0], a[0][1])
  },
  enableRangeOfDates: function(d, b, e, i, a) {
    d.datesState = (a == true ? 1 : 0);
    var g = new Date(b[2 + IndexJL], b[1 + IndexJL] - 1, b[0 + IndexJL]);
    var h = new Date(e[2 + IndexJL], e[1 + IndexJL] - 1, e[0 + IndexJL]);
    d.datesGroupSkin = i;
    var f = d.datesGroup;
    var c = [];
    c.push.apply(c, $KW.Calendar.__dp.between(g, h));
    d.datesGroupSimplified = c
  },
  setEnabled: function(d, k, b, l, a) {
    if (IndexJL == 1 && arguments.length == 4) {
      a = l;
      l = b;
      b = 0
    }
    d.datesState = (a == true ? 1 : 0);
    d.datesGroupSkin = l;
    var c = [];
    if (k && k.length > IndexJL && k[IndexJL] instanceof Array) {
      d.datesGroup = k;
      var f = d.datesGroup;
      for (var e = 0 + IndexJL; e < f.length; e++) {
        var i = f[e];
        if (+i.length == i.length) {
          c.push(new Date(i[2 + IndexJL], i[1 + IndexJL] - 1, i[0 + IndexJL]).setHours(0, 0, 0, 0))
        }
      }
    } else {
      var h = new Date(k[2 + IndexJL], k[1 + IndexJL] - 1, k[0 + IndexJL]);
      var g = new Date(b[2 + IndexJL], b[1 + IndexJL] - 1, b[0 + IndexJL]);
      c.push.apply(c, $KW.Calendar.__dp.between(h, g))
    }
    d.datesGroupSimplified = c
  },
  setDateSkin: function(b, e, d) {
    for (var c = 0 + IndexJL, a = e.length; c < a; c++) {
      b.specialDates = b.specialDates ? b.specialDates : {};
      if (!b.specialDates[d]) {
        b.specialDates[d] = e
      } else {
        b.specialDates[d].push.apply(b.specialDates[d], e)
      }
    }
  },
  formatDate: function(date) {
    if (date) {
      try {
        if (date instanceof Array) {
          date = eval(date);
          date = date[1 + IndexJL] + "/" + date[IndexJL] + "/" + date[2 + IndexJL]
        }
      } catch (e) {
        date = ""
      }
    }
    return date
  },
  ideDateToString: function(date) {
    if (date) {
      try {
        if (date instanceof Array) {
          date = eval(date);
          date = date[IndexJL] + "/" + date[1 + IndexJL] + "/" + date[2 + IndexJL]
        }
      } catch (e) {
        date = ""
      }
    }
    return date
  },
  setCalStyle: function(f, a) {
    var g = document.getElementById("container_c");
    var c = $KU.isAndroid ? ($KU.isAndroid_HTC ? 250 : 100) : 0;
    if (g && $KG.nativeScroll) {
      setTimeout(function() {
        g.style.top = E.getDocumentScrollTop() + 5 + "px"
      }, c)
    }
    var b = document.getElementsByName("calBody");
    if (b) {
      for (var d = 0; d < b.length; d++) {
        var e = b[d];
        $KW.Calendar.setCalElementStyle(e, true)
      }
    }
  },
  adjustCalendars: function(a) {
    var b = document.querySelectorAll("#" + a.pf + "_" + a.id + " input[name='calBody']");
    for (var c = 0; c < b.length; c++) {
      var d = b[c];
      $KW.Calendar.setCalElementStyle(d, true)
    }
  },
  setCalElementStyle: function(f, q) {
    if (!q) {
      f = f.previousSibling
    }
    if (!f) {
      return
    }
    var j = f.parentNode;
    var g = $KU.getModelByNode(j);
    if (j.style.display != "inline-block") {
      var n = f.nextSibling;
      var p = f.parentNode.parentNode;
      f.style.fontFamily = $KU.getStyle(j, "font-family");
      f.style.fontSize = $KU.getStyle(j, "font-size");
      f.style.color = $KU.getStyle(j, "color");
      f.style.fontWeight = $KU.getStyle(j, "font-weight");
      f.style.fontStyle = $KU.getStyle(j, "font-style");
      if (g && g.calimgheight) {
        n.style.height = g.calimgheight
      } else {
        n.style.height = f.clientHeight + "px"
      }
      n.style.width = "auto";
      if (kony.appinit.isIE7) {
        f.style["float"] = "left";
        f.style.borderStyle = "none"
      }
      var b = $KU.getStyle(j, "border-top-left-radius");
      var c = $KU.getStyle(j, "border-bottom-left-radius");
      var d = $KU.getStyle(j, "border-top-right-radius");
      var e = $KU.getStyle(j, "border-bottom-right-radius");
      var o = blr = trr = brr = 0;
      if (b) {
        o = parseInt(b.substring(0, b.indexOf("p")))
      }
      if (c) {
        blr = parseInt(c.substring(0, c.indexOf("p")))
      }
      if (d) {
        trr = parseInt(d.substring(0, d.indexOf("p")))
      }
      if (e) {
        brr = parseInt(e.substring(0, e.indexOf("p")))
      }
      var h = 0;
      var l = 0;
      if (o <= blr) {
        h = parseInt(blr / 2);
        f.style.marginLeft = h + "px"
      } else {
        h = parseInt(o / 2);
        f.style.marginLeft = h + "px"
      }
      if (trr <= brr) {
        l = parseInt(brr / 2);
        n.style.marginRight = l + "px"
      } else {
        l = parseInt(trr / 2);
        n.style.marginRight = l + "px"
      }
      var s = $KU.getStyle(j, "width");
      if (!p) {
        return
      }
      var r = $KU.getStyle(p, "width");
      if (r == "100%") {
        r = p.clientWidth + "px"
      }
      var m = parseInt(r.substring(0, r.indexOf("p")));
      var a = $KU.getStyle(n, "width");
      if (a == "auto") {
        a = n.clientWidth + "px"
      }
      if (a != "auto") {
        var i = parseInt(a.substring(0, a.indexOf("p")));
        if (!m) {
          m = p.offsetWidth
        }
        var k;
        if (kony.appinit.isIE7) {
          k = ((m - (1.4 * i) - h - l) / m) * 100
        } else {
          k = ((m - (2 * i) - h - l) / m) * 100
        }
        if (isFinite(k)) {
          f.style.width = k + "%"
        }
      }
    }
  }
};
if (!Array.prototype.indexOf) {
  Array.prototype.indexOf = function(b) {
    for (var a = 0; a < this.length; a++) {
      if (this[a] === b) {
        return a
      }
    }
    return -1
  }
}
if (!document.querySelectorAll) {
  (function(b, a) {
    b = document, a = b.createStyleSheet();
    b.querySelectorAll = function(g, h, f, e, d) {
      d = b.all, h = [], g = g.replace(/\[for\b/gi, "[htmlFor").split(",");
      for (f = g.length; f--;) {
        a.addRule(g[f], "k:v");
        for (e = d.length; e--;) {
          d[e].currentStyle.k && h.push(d[e])
        }
        a.removeRule(0)
      }
      return h
    }
  })()
}
$KW.Calendar.__dp = {
  navigatorTemplate: function(d, n) {
    var l;
    if (arguments.length > 2 && arguments[3] === "fromYearMonth") {
      l = Number(arguments[2])
    } else {
      l = null
    }
    var o = d.tabpaneId;
    var b = (" kformname='" + d.pf + "' ") + (o && " ktabpaneid='" + o + "' ");
    var c = $KU.getImageURL("sprite.png");
    var q = $KU.getImageURL("left-arrow.png");
    var v = $KU.getImageURL("right-arrow.png");
    var p;
    if (kony.appinit.isWindowsPhone) {
      p = "<div w-type='Calendar' id='" + (d.id + "-k-w-c-navigator-") + "' class='-k-w-c-datepicker-navigator' kwidgettype='Calendar' " + b + " style='height:" + d.popupHeight + ";width:" + d.popupWidth + ";position:absolute;background-color:White'><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%;'><div w-type='Calendar'  style='display:table-row;width:100%;height:100%'><a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-cancel-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  class='-kony-w-c-cancel-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-cancel.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></a><div w-type='Calendar' w-type-inactive='true' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-selected-ym'></div><a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-go-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  class='-kony-w-c-go-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-go.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></a></div></div>";
      var g = this.months.slice(0);
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:30%;width:100%;border-bottom:1px solid #FAFAFA'>";
      g = this.chunks(g, 6);
      for (var s = 0; s < g.length; s++) {
        var t = g[s];
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:50%'>";
        for (var r = 0; r < t.length; r++) {
          p += "<a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:center;vertical-align:middle;font-size:smaller;text-decoration:none;' class='-kony-w-c-navigator-month' k-w-c-hold='" + ((s * 6) + (r + 1)) + "' k-w-c-id='" + n + "' kwidgettype='Calendar'" + b + " >" + t[r].substring(0, 3) + "</a>"
        }
        p += "</div>"
      }
      p += "</div><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%'><div w-type='Calendar'   style='display:table-row;width:100%;height:100%'><a href='javascript:void(0)' w-type='Calendar' style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-left-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><span class='-kony-w-c-left-ym-p' style='height:15px;width:25px;display:inline-block;background:url(" + c + ") no-repeat 0 -450px' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></span></a><div w-type-inactive='true'  w-type='Calendar' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-yr-range'></div><a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-right-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><span w-type='Calendar'  class='-kony-w-c-right-ym-p' style='height:15px;width:25px;display:inline-block;background:url(" + c + ") no-repeat 0 -500px' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></span></a></div></div>";
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:40%;width:100%'>";
      var k = 2001;
      var m;
      if (l != null) {
        if (l > k) {
          m = Math.floor((l - 2001) / 16);
          for (var u = 0; u < m; u++) {
            k = k + 16
          }
        } else {
          m = Math.ceil((2001 - l) / 16);
          for (var u = 0; u < m; u++) {
            k = k - 16
          }
        }
      }
      for (s = 1; s <= 4; s++) {
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:25%'>";
        for (r = 1; r <= 4; r++) {
          if ((k > 1900 && k < 2099) || k == 2099 || k == 1900) {
            p += "<a herf='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:visible;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</a>"
          } else {
            p += "<a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:hidden;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</a>"
          }
          k++
        }
        p += "</div>"
      }
      p += "</div></div>"
    } else {
      var a = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.previousYearLink"] : "Previous set of Years" : "Previous set of Years";
      var e = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.nextYearLink"] : "Next set of Years" : "Next set of Years";
      var f = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.cancelImage"] : "Cancel Selection" : "Cancel Selection";
      var h = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.selectedImage"] : "Done Selecting" : "Done Selecting";
      p = "<div w-type='Calendar' id='" + (d.id + "-k-w-c-navigator-") + "' class='-k-w-c-datepicker-navigator' kwidgettype='Calendar' " + b + " style='height:" + d.popupHeight + ";width:" + d.popupWidth + ";position:absolute;background-color:White'><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%;'><div w-type='Calendar'  style='display:table-row;width:100%;height:100%'><div w-type='Calendar'  style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-cancel-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar' alt='" + f + "' class='-kony-w-c-cancel-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-cancel.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></div><div w-type='Calendar' w-type-inactive='true' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-selected-ym'></div><div w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-go-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  alt='" + h + "'class='-kony-w-c-go-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-go.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></div></div></div>";
      var g = this.months.slice(0);
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:30%;width:100%;border-bottom:1px solid #FAFAFA'>";
      g = this.chunks(g, 6);
      for (var s = 0; s < g.length; s++) {
        var t = g[s];
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:50%'>";
        for (var r = 0; r < t.length; r++) {
          p += "<div w-type='Calendar' role='option' aria-label='" + t[r] + "' style='display:table-cell;width:15%;text-align:center;vertical-align:middle;font-size:smaller' class='-kony-w-c-navigator-month' k-w-c-hold='" + ((s * 6) + (r + 1)) + "' k-w-c-id='" + n + "' kwidgettype='Calendar'" + b + " >" + t[r].substring(0, 3) + "</div>"
        }
        p += "</div>"
      }
      p += "</div><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%'><div w-type='Calendar'   style='display:table-row;width:100%;height:100%'><div w-type='Calendar' style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-left-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img class='-kony-w-c-left-ym-p' src = '" + q + "' alt='" + a + "' style='height:15px;width:25px;display:inline-block' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " /></div><div w-type-inactive='true'  w-type='Calendar' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-yr-range'></div><div w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-right-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  class='-kony-w-c-right-ym-p' src = '" + v + "' alt='" + e + "'style='height:15px;width:25px;display:inline-block' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " /></div></div></div>";
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:40%;width:100%'>";
      var k = 2001;
      var m;
      if (l != null) {
        if (l > k) {
          m = Math.floor((l - 2001) / 16);
          for (var u = 0; u < m; u++) {
            k = k + 16
          }
        } else {
          m = Math.ceil((2001 - l) / 16);
          for (var u = 0; u < m; u++) {
            k = k - 16
          }
        }
      }
      for (s = 1; s <= 4; s++) {
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:25%'>";
        for (r = 1; r <= 4; r++) {
          if ((k > 1900 && k < 2099) || k == 2099 || k == 1900) {
            p += "<div w-type='Calendar' role='option' aria-label = '" + k + "' style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:visible;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</div>"
          } else {
            p += "<div w-type='Calendar' role='option' aria-label = '" + k + "' style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:hidden;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</div>"
          }
          k++
        }
        p += "</div>"
      }
      p += "</div></div>"
    }
    return p
  },
  template: function(h, o, c, d) {
    var m = d.tabpaneId;
    var e = (" kformname='" + d.pf + "' ") + (m && " ktabpaneid='" + m + "' ");
    var l, n;
    if (kony.appinit.isWindowsPhone) {
      n = '<div w-type="Calendar"  style="display:inline-block;" class="-kony-w-c-popup-container" id="{{id}}" style="height:' + o + ";width:" + c + ';"><div w-type="Calendar"  class="-kony-w-c-topSection"><div w-type="Calendar"  class="-kony-w-c-table" style=";width:100%;height:70%;"><div w-type="Calendar"  class="-kony-w-c-row"><a href="javascript:void(0)" w-type="Calendar"  ' + e + ' class="-kony-w-c-cell -kony-w-c-prev-nav" style="width:20%;text-align:left;display:table-cell"><img w-type="Calendar" class="-kony-w-c-next-nav-right-link" alt="Next Month" style="height:15px;width:25px;display:inline-block" /></a><a href="javascript:void(0)" w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="-kony-w-c-cell -kony-w-c-yemo" style="width:60%;display:table-cell;text-align:center;text-decoration:none;color:#000000;"></a><a href="javascript:void(0)" w-type="Calendar" ' + e + ' class="-kony-w-c-cell -kony-w-c-next-nav" style="width:20%;text-align:right;display:table-cell;"><img w-type="Calendar" class="-kony-w-c-next-nav-right-link" alt="Next Month" style="height:15px;width:25px;display:inline-block" /></a></div></div><div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-daysHeader" style="width:100%;height:30%;"><div w-type="Calendar"  class="-kony-w-c-row">';
      for (l = 1; l <= 7; l++) {
        n += '<a href="javascript:void(0)" ' + e + ' w-type = "Calendar" class="" id="-kony-w-c-cell-' + l + '" style="width:' + h[l - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller;text-decoration:none;color:#000000;"></a>'
      }
      n += '</div></div></div><div w-type="Calendar" class="kony-w-c-actualDates">';
      for (; l <= 49; l = l + 7) {
        var g = '<div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-day-table" style=""><div w-type="Calendar"  class="-kony-w-c-row -kony-w-c-day-row">';
        var a = 1;
        for (var k = l; k <= l + 6; k++) {
          g += '<a href="javascript:void(0)" w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="" id="-kony-w-c-cell-' + k + '"  style="width:' + h[a - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller;text-decoration:none;color:inherit;"></a>';
          a++
        }
        g += "</div></div>";
        for (var k = l; k <= l + 7; k++) {
          g = g.replace("{{}}", k)
        }
        n += g
      }
      n += "</div></div>"
    } else {
      var f = $KG.i18nArray ? $KG.i18nArray["platform.calendar.previousMonthLink"] ? $KG.i18nArray["platform.calendar.previousMonthLink"] : "Previous Month" : "Previous Month";
      var b = $KG.i18nArray ? $KG.i18nArray["platform.calendar.nextMonthLink"] ? $KG.i18nArray["platform.calendar.nextMonthLink"] : "Next Month" : "Next Month";
      n = '<div w-type="Calendar"  style="display:inline-block;" class="-kony-w-c-popup-container" id="{{id}}" style="height:' + o + ";width:" + c + ';"><div w-type="Calendar"  class="-kony-w-c-topSection"><div w-type="Calendar"  class="-kony-w-c-table" style=";width:100%;height:70%;"><div w-type="Calendar"  class="-kony-w-c-row"><div w-type="Calendar"  ' + e + ' class="-kony-w-c-cell -kony-w-c-prev-nav" style="width:20%;text-align:left;display:table-cell"><img w-type="Calendar" class="-kony-w-c-prev-nav-left-link" alt="' + f + '" style="height:15px;width:25px;display:inline-block" /></div><div w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="-kony-w-c-cell -kony-w-c-yemo" style="width:60%;display:table-cell;text-align:center;outline-color:#FFFFFF;" tabindex="1"></div><div w-type="Calendar" ' + e + ' class="-kony-w-c-cell -kony-w-c-next-nav" style="width:20%;text-align:right;display:table-cell;"><img w-type="Calendar" class="-kony-w-c-next-nav-right-link" alt="' + b + '" style="height:15px;width:25px;display:inline-block" /></div></div></div><div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-daysHeader" style="width:100%;height:30%;"><div w-type="Calendar"  class="-kony-w-c-row">';
      for (l = 1; l <= 7; l++) {
        n += "<div " + e + ' w-type = "Calendar" class="" id="-kony-w-c-cell-' + l + '" style="width:' + h[l - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller"></div>'
      }
      n += '</div></div></div><div w-type="Calendar" class="kony-w-c-actualDates">';
      for (; l <= 49; l = l + 7) {
        var g = '<div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-day-table" style=""><div w-type="Calendar"  class="-kony-w-c-row -kony-w-c-day-row">';
        var a = 1;
        for (var k = l; k <= l + 6; k++) {
          g += '<div w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="" id="-kony-w-c-cell-' + k + '"  style="width:' + h[a - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller;"></div>';
          a++
        }
        g += "</div></div>";
        for (var k = l; k <= l + 7; k++) {
          g = g.replace("{{}}", k)
        }
        n += g
      }
      n += "</div></div>"
    }
    return n
  },
  reAssignData: function(c, d) {
    if (!c.datecomponents) {
      $KW.Calendar.setCurrentDate(c);
      c.minutes = 0;
      c.hour = 0;
      c.seconds = 0
    }
    c.entereddate = c.datecomponents;
    c.monthsinrow = c.monthsinrow || 3;
    if (c.noofmonths < 1 || isNaN(c.noofmonths * 1)) {
      c.noofmonths = 1
    }
    c.datesGroup = [];
    c.datesState = c.datesState || 0;
    c.enddate = c.enddate || c.validenddate;
    c.startdate = c.startdate || c.validstartdate;
    c.dateformat = c.dateformat || c.format || "dd/mm/yyyy";
    c.popupHeight = c.popupHeight || Math.min.apply(Math, [300, window.innerHeight || document.documentElement.clientHeight]) + "px";
    c.popupWidth = c.popupWidth || Math.min.apply(Math, [300, window.innerWidth || document.documentElement.clientWidth]) + "px";
    c.startDay = c.startDay || 0;
    if (!c.viewconfig) {
      c.viewconfig = {};
      c.viewconfig.gridConfig = c.viewconfig.gridconfig = {}
    }
    var b = c.viewconfig.gridconfig || c.viewconfig.gridConfig || {};
    b.gridCellWeekendSkin = b.gridCellWeekendSkin || b.gridcellweekendskin || "-kony-w-c-weekend-";
    b.gridCellInactiveDaysSkin = b.gridCellInactiveDaysSkin || b.gridcellinactivedaysskin || "-k-w-c-inactive";
    b.gridCellSkin = b.gridCellSkin || b.gridcellskin || "-kony-w-c-day-skin";
    b.gridCellSelectedSkin = b.gridCellSelectedSkin || b.gridcellselectedskin || "-kony-w-c-selected-";
    b.gridCellTodaySkin = b.gridCellTodaySkin || b.gridcelltodayskin || "-kony-w-c-today-";
    b.doneButtonSkin = b.doneButtonSkin || "-k-w-c-cancel-cal-";
    b.monthHeaderSkin = b.monthHeaderSkin || " -kony-w-c-yemo-skin";
    b.dayHeaderSkin = b.dayHeaderSkin || " -kony-w-c-day-label-cell";
    if (b.allowWeekendSelectable == d) {
      b.allowWeekendSelectable = b.allowweekendselectable
    }
    var a, g;
    if (c.startdate) {
      a = c.startdate[2 + IndexJL];
      g = c.startdate[1 + IndexJL]
    }
    var g = c.year || g || new Date().getFullYear(),
      e = c.month || a || new Date().getMonth() + 1;
    c.displayedMonths = c.displayedMonths || [e, g];
    c.dayTextAlignmentInCell = c.dayTextAlignmentInCell || "CONTENT _ALIGN_CENTER";
    if (c.year) {
      var f = c.year.toString();
      if (f.length > 4) {
        c.year = f.substr(f.length - 4) * 1
      }
    }
    c.navigatorAlert = $KG.i18nArray && $KG.i18nArray["gridCalAlertI18Nkey"] ? kony.i18n.getLocalizedString("gridCalAlertI18Nkey") : (c.navigatorAlert || "Invalid Selection")
  },
  dayTextAlignmentInCell: function(b) {
    b = b.toLowerCase().split("_");
    var a = {};
    a["vertical-align"] = (b[2] && b[2] == "center" ? "middle" : b[2]) || "middle";
    a["text-align"] = b[3] || "center";
    return a
  },
  addClass: function(a, b) {
    if (!this.hasClass(a, b)) {
      a.className = (a.className === "") ? b : a.className + " " + b
    }
  },
  getByClass: function(b, a) {
    return document.querySelectorAll("#" + b.id + " ." + a)
  },
  getBySele: function(b, a) {
    return document.querySelectorAll("#" + b.id + " " + a)
  },
  removeClass: function(a, b) {
    a.className = this.trim((" " + a.className + " ").replace(" " + b + " ", " "))
  },
  hasClass: function(a, b) {
    return (" " + a.className + " ").indexOf(" " + b + " ") !== -1
  },
  trim: function(a) {
    return a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "")
  },
  div: function() {
    var a = document.createElement("div");
    return a
  },
  updateMonthData: function(l, k, B, x, h, n, o) {
    if (n == 0) {
      n = this.div();
      n.innerHTML = B;
      n = n.firstChild;
      document.body.appendChild(n);
      var s = 0
    }
    var z = k.viewconfig.gridconfig || k.viewconfig.gridConfig || {},
      t = z.allowWeekendSelectable,
      w = 0;
    this.addClass(n, z.gridSkin);
    var c = this.getBySele(n, ".-kony-w-c-yemo")[0];
    if (k.hideMonthsHeader == true) {
      c.style.display = "none"
    }
    var g = this.getBySele(n, ".-kony-w-c-daysHeader")[0];
    if (k.hideDaysHeader == true) {
      g.style.display = "none"
    }
    n.setAttribute("month", x[0]);
    n.setAttribute("year", x[1]);
    c.innerHTML = this.months[x[0] - 1] + ", " + x[1];
    this.addClass(c, z.monthHeaderSkin);
    c.setAttribute("k-w-c-id", o);
    for (var v = 0; v < l.length; v++) {
      var m = l[v],
        b = this.getBySele(n, "#-kony-w-c-cell-" + (v + 1))[0];
      b.className = "";
      var u = k.dayTextAlignmentInCell;
      var f = this.dayTextAlignmentInCell(u);
      b.style.textAlign = f["text-align"];
      b.style.verticalAlign = f["vertical-align"];
      if (typeof m == "number") {
        if (w == 0) {
          b.className = " -k-w-c-lastMonth " + z.gridCellInactiveDaysSkin;
          b.setAttribute("title", "Previous month");
          b.setAttribute("aria-label", m)
        } else {
          if (w == 1) {
            b.className = " -k-w-c-nextMonth " + z.gridCellInactiveDaysSkin;
            b.setAttribute("title", "Next month");
            b.setAttribute("aria-label", m)
          }
        }
        b.removeAttribute("kwidgettype");
        b.removeAttribute("k-w-c-hold-day");
        b.innerHTML = m
      } else {
        if (typeof m == "string") {
          b.innerHTML = m;
          b.setAttribute("role", "option");
          if (m == "MON" || m == "SUN") {
            b.setAttribute("aria-label", m.toLowerCase() + "day")
          } else {
            if (m == "TUE") {
              b.setAttribute("aria-label", "Tuesday")
            } else {
              if (m == "WED") {
                b.setAttribute("aria-label", "Wednesday")
              } else {
                if (m == "THU") {
                  b.setAttribute("aria-label", "Thursday")
                } else {
                  if (m == "FRI") {
                    b.setAttribute("aria-label", "Friday")
                  } else {
                    if (m == "SAT") {
                      b.setAttribute("aria-label", "Saturday")
                    }
                  }
                }
              }
            }
          }
          b.className += " " + z.dayHeaderSkin
        } else {
          w = 1;
          var p = new Date(m[1].y, m[1].m - 1, m[1].d);
          if ((m[2] == 0 || m[2] == 6) && (t == false)) {
            b.className = " " + z.gridCellInactiveDaysSkin;
            b.innerHTML = ($KG.i18nArray && $KG.i18nArray["platform.calendar." + m[0]]) ? $KG.i18nArray["platform.calendar." + m[0]] : m[0];
            b.removeAttribute("kwidgettype")
          } else {
            b.setAttribute("k-w-c-id", o);
            b.setAttribute("kwidgettype", "Calendar");
            b.setAttribute("weekday", m[2]);
            b.className += " -k-w-c-weekday-" + m[2] + " -kony-w-c-day-";
            b.setAttribute("k-w-c-hold-day", (m[1].d + "," + m[1].m + "," + m[1].y));
            b.innerHTML = ($KG.i18nArray && $KG.i18nArray["platform.calendar." + m[0]]) ? $KG.i18nArray["platform.calendar." + m[0]] : m[0];
            var a = this.dateFormatter("dddd, do mmmm yyyy", [m[1].d, m[1].m, m[1].y]);
            b.setAttribute("role", "option");
            var e = a.string.split(",")[1];
            b.setAttribute("aria-label", e)
          }
        }
      }
    }
    var d = $KU.getImageURL("sprite.png");
    var y = $KU.getImageURL("left-arrow.png");
    var A = $KU.getImageURL("right-arrow.png");
    if (h[0] == 1) {
      var i = this.getByClass(n, "-kony-w-c-prev-nav")[0];
      if (z.leftNavigationImage || z.leftnavigationimage) {
        var C = "<img class='-kony-w-c-prev-nav-left-img' style='width:50%;height:50%' kwidgettype='Calendar' />";
        i.innerHTML = C;
        var r = z.leftNavigationImage ? z.leftNavigationImage : z.leftnavigationimage;
        i.firstChild.src = $KU.getImageURL(r);
        i.firstChild.setAttribute("kformname", k.pf)
      } else {
        i.firstChild.setAttribute("src", y)
      }
      i.setAttribute("k-w-c-id", o);
      i.firstChild.setAttribute("k-w-c-id", o);
      i.setAttribute("kwidgettype", "Calendar")
    }
    if (h[1] == 1) {
      var i = this.getByClass(n, "-kony-w-c-next-nav")[0];
      if (z.rightNavigationImage || z.rightnavigationimage) {
        var C = "<img class='-kony-w-c-next-nav-right-img' style='width:50%;height:50%' kwidgettype='Calendar' />";
        i.innerHTML = C;
        var q = z.rightNavigationImage ? z.rightNavigationImage : z.rightnavigationimage;
        i.firstChild.src = $KU.getImageURL(q);
        i.firstChild.setAttribute("kformname", k.pf)
      } else {
        i.firstChild.setAttribute("src", A)
      }
      i.setAttribute("k-w-c-id", o);
      i.firstChild.setAttribute("k-w-c-id", o);
      i.setAttribute("kwidgettype", "Calendar")
    }
    if (s == 0) {
      return n
    } else {
      return 0
    }
  },
  show: function(n, f, A, l) {
    $KW.Calendar.initializeView();
    var p = n.tabpaneId;
    var G, F, D;
    this.invoked = this.invoked || {};
    if (l != undefined || l != null) {
      this.invoked[l.id] = this.invoked[l.id] || {
          d: l,
          i: l.firstChild.id,
          s: ""
        }
    } else {
      alert(n.navigatorAlert);
      return false
    }
    if (n.startdate) {
      G = n.startdate[0 + IndexJL];
      F = n.startdate[1 + IndexJL];
      D = n.startdate[2 + IndexJL]
    }
    var q = n.year || D || new Date().getFullYear(),
      j = n.month || F || new Date().getMonth() + 1,
      g = n.monthsinrow,
      L = n.noofmonths,
      K = [],
      c = n.popupHeight || "300px",
      b = n.popupWidth || "300px";
    if (f && f[0] && !A) {
      var a = true
    }
    f = f || this.series(q, j, L);
    n.widths = n.widths || ["14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;"];
    var H = "";
    var d = this.template(n.widths, c, b, n);
    var m = document.getElementById(l.id + "-k-w-c-datepicker") || this.div();
    if (m.id == "") {
      if (n.title) {
        var u = document.createElement("div");
        u.className = "-k-w-c-cal-title";
        u.id = "-k-w-c-cal-title";
        u.setAttribute("w-type", "Calendar");
        u.innerHTML = n.title;
        m.appendChild(u)
      }
      m.id = l.id + "-k-w-c-datepicker"
    }
    m.setAttribute("w-type", "Calendar");
    this.invoked[l.id].s = "active";
    var M = l.id + "-k-w-c-datepicker";
    var o = this.getByClass(m, "-kony-w-c-popup-container");
    n.displayedMonths = [f[0][0], f[0][1]];
    for (var N = 0; N < Number(n.noofmonths); N++) {
      var w = [1, 1];
      var v = this.month(f[N][0], f[N][1], n.startDay);
      var C = ("-k-w-c-month-cmp-" + f[N][0] + "-" + f[N][1]);
      if (o[N]) {
        o[N].id = C
      }
      d = d.replace("{{id}}", C);
      var e = this.updateMonthData(v, n, d, f[N], w, o[N] || 0, l.id);
      if (e != 0) {
        m.appendChild(e)
      }
    }
    if (a == true) {
      this.applySkins(n);
      return
    }
    m.className = "-k-w-c-datepicker-holder-main";
    var t = this.getOffset(l.id);
    m.style.position = "absolute";
    m.style.border = "1px solid #CCC";
    var J = document.createElement("div");
    var h = $KG.i18nArray && $KG.i18nArray["gridCalCloseI18Nkey"] ? kony.i18n.getLocalizedString("gridCalCloseI18Nkey") : "Close";
    J.innerHTML = "<a href='#' class='-k-w-c-close-picker' id='calendar_close_link' kformname='" + n.pf + "' kwidgettype='Calendar' " + (p ? "ktabpaneid='" + p + "' " : "") + " style='float:right;color:red'>" + h + "</a>";
    J.setAttribute("w-type", "Calendar");
    J.firstChild.setAttribute("k-w-c-id", l.id);
    m.appendChild(J);
    m.style.zIndex = "1234";
    if ($KU.isMobile() || $KU.isTablet) {
      m.setAttribute("dummy", "a");
      m.style.display = "none";
      var Q = m.id;
      document.getElementById("__MainContainer").appendChild(m);
      var B = document.getElementById(Q);
      B.style.display = "inline-block";
      this.reposition(1);
      var r = document.createElement("div");
      r.className = "k-w-c-scrim-for-popup";
      var O = document.body;
      var k;
      if (document.height != undefined) {
        k = document.height
      } else {
        if (O.scrollHeight != undefined && O.offsetHeight != undefined) {
          if (!kony.appinit.isWindowsPhone) {
            k = Math.max(O.scrollHeight, O.offsetHeight)
          } else {
            k = 100
          }
        } else {
          k = O.scrollHeight || O.offsetHeight
        }
      }
      if (!kony.appinit.isWindowsPhone) {
        r.innerHTML = "<div style='height:" + k + "px;width:100%;opacity:0;line-height:100%'>&nbsp;</div>"
      } else {
        r.innerHTML = "<div style='height:" + k + "%;width:100%;opacity:0;line-height:100%'>&nbsp;</div>";
        r.style.height = "100%"
      }
      r.style.position = "absolute";
      r.style.top = r.style.left = "0px";
      r.style.width = "100%";
      r.style.zIndex = "1230";
      if ($KU.isIE11) {
        r.style.transform = "translateZ(0px)"
      }
      document.getElementById("__MainContainer").appendChild(r);
      var P = document.getElementById(n.pf);
      if (P != null) {
        P.setAttribute("aria-hidden", true)
      }
      if (n.context) {
        var s = $KU.getAnchorPosition(n, m);
        m.style.top = s.topPos + "px";
        m.style.left = s.leftPos + "px"
      }
    } else {
      var I = document.getElementById("__MainContainer");
      I.appendChild(m);
      m.style.display = "inline-block";
      var R = window.innerHeight || document.documentElement.clientHeight;
      if (n.context) {
        var s = $KU.getAnchorPosition(n, m);
        m.style.top = s.topPos + "px";
        m.style.left = s.leftPos + "px"
      } else {
        m.style.top = t[1] + l.offsetHeight + "px";
        m.style.left = (((window.innerWidth || document.documentElement.clientWidth) - m.clientWidth) / 2) + "px"
      }
      var C = m.id;
      m = document.getElementById(C)
    }
    this.active = M;
    this.applySkins(n)
  },
  applySkins: function(d) {
    var k = document.querySelectorAll("#" + this.active + " [k-w-c-hold-day]");
    var t = d.viewconfig.gridconfig || d.viewconfig.gridConfig || {};
    if (d.day != 0) {
      var o = new Date(d.year, d.month - 1, d.day)
    }
    for (var q = 0; q < k.length; q++) {
      today = new Date();
      var j = k[q].getAttribute("k-w-c-hold-day").split(","),
        b = k[q];
      var p = new Date(j[2], j[1] - 1, j[0]);
      var l = b.getAttribute("weekday") * 1;
      if (o && o.setHours(0, 0, 0, 0) == p.setHours(0, 0, 0, 0)) {
        this.addClass(b, t.gridCellSelectedSkin)
      } else {
        if (p.setHours(0, 0, 0, 0) == today.setHours(0, 0, 0, 0)) {
          this.addClass(b, t.gridCellTodaySkin);
          this.removeClass(b, t.gridCellSkin)
        } else {
          if (l == 0 || l == 6) {
            this.addClass(b, t.gridCellWeekendSkin)
          } else {
            this.addClass(b, t.gridCellSkin)
          }
        }
      }
      var s = b.getAttribute("k-w-c-hold-day").split(",");
      if (d.startdate) {
        var f = new Date(d.startdate[2 + IndexJL], d.startdate[1 + IndexJL] - 1, d.startdate[0 + IndexJL]).setHours(0, 0, 0, 0)
      }
      if (d.enddate) {
        var e = new Date(d.enddate[2 + IndexJL], d.enddate[1 + IndexJL] - 1, d.enddate[0 + IndexJL]).setHours(0, 0, 0, 0)
      }
      var m = p.setHours(0, 0, 0, 0),
        n = 0;
      if ((f && f !== 0) && (e && e !== 0)) {
        if (m < f || m > e) {
          n = 1
        }
      } else {
        if (!f && e) {
          if (m > e) {
            n = 1
          }
        } else {
          if (!e && f) {
            if (m < f) {
              n = 1
            }
          }
        }
      }
      if (n == 1) {
        b.setAttribute("kwidgettype", "DisabledCal");
        b.className = t.gridCellInactiveDaysSkin;
        b.removeAttribute("kwidgettype");
        b.removeAttribute("k-w-c-hold-day")
      }
      if (d.datesGroupSimplified) {
        var h = d.datesGroupSimplified;
        if (d.datesState == 0 && h.length > 0) {
          if (h.indexOf(m) > -1) {
            b.setAttribute("kwidgettype", "DisabledCal");
            b.className = t.gridCellInactiveDaysSkin;
            b.removeAttribute("kwidgettype");
            b.removeAttribute("k-w-c-hold-day")
          }
        }
        if (d.datesState == 1 && h.length > 0) {
          if (h.indexOf(m) <= -1) {
            n = 1;
            b.setAttribute("kwidgettype", "DisabledCal");
            b.className = t.gridCellInactiveDaysSkin;
            b.removeAttribute("kwidgettype");
            b.removeAttribute("k-w-c-hold-day")
          } else {
            this.removeClass(b, t.gridCellWeekendSkin);
            this.removeClass(b, t.gridCellSkin);
            if (!this.hasClass(b, t.gridCellSelectedSkin) && !this.hasClass(b, t.gridCellTodaySkin)) {
              this.addClass(b, d.datesGroupSkin)
            }
          }
        }
      }
      if (d.specialDates) {
        for (var c in d.specialDates) {
          var g = d.specialDates[c];
          if (g) {
            for (var r = 0 + IndexJL; r < g.length; r++) {
              if (g[r]) {
                var a = new Date(g[r][2 + IndexJL], g[r][1 + IndexJL] - 1, g[r][0 + IndexJL]).setHours(0, 0, 0, 0);
                if (new Date(s[2], s[1] - 1, s[0]).setHours(0, 0, 0, 0) == a) {
                  this.removeClass(b, t.gridCellWeekendSkin);
                  this.removeClass(b, t.gridCellSkin);
                  this.removeClass(b, d.datesGroupSkin);
                  if (!this.hasClass(b, t.gridCellSelectedSkin) && !this.hasClass(b, t.gridCellTodaySkin)) {
                    this.addClass(b, c)
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  between: function(e, d) {
    function b(f, h) {
      var g = new Date(f.valueOf());
      g.setDate(g.getDate() + h);
      return g
    }
    var c = new Array();
    var a = e;
    while (a <= d) {
      c.push(new Date(a).setHours(0, 0, 0, 0));
      a = b(a, 1)
    }
    return c
  },
  reposition: function(b) {
    var c = document.querySelectorAll(".-k-w-c-datepicker-holder-main")[0];
    if (c) {
      var e = c.clientHeight;
      var d = window.innerWidth || document.documentElement.clientWidth;
      var g = (window.pageYOffset + ((window.innerHeight - e) / 2));
      c.style.left = "0px";
      var f = ((d - c.clientWidth) / 2);
      if ((f * 2 + c.clientWidth) > d) {
        f = 0
      }
      c.style.top = (g > 0 ? g : 0) + "px";
      c.style.left = f + "px";
      if (b != 1) {
        c.innerHTML = c.innerHTML
      }
    }
  },
  getDat: function(c, b) {
    if (!c) {
      return
    }
    var e = (b.dateformat || b.format).toLowerCase().replace(/^\s+|\s+$/g, "").split("/"),
      a = {};
    c = c.split("/");
    for (var d = 0; d < e.length; d++) {
      a[e[d]] = c[d]
    }
    return a
  },
  series: function(e, d, c) {
    e = parseInt(e, 10);
    d = parseInt(d, 10);
    var b = [
      [d, e]
    ];
    for (var a = 0; a < c - 1; a++) {
      if (d + 1 > 12) {
        d = 1;
        e += 1;
        b.push([d, e])
      } else {
        d += 1;
        b.push([d, e])
      }
    }
    return b
  },
  destroyCalendar: function(g, c) {
    var a = document.querySelectorAll("[tabindex]");
    for (var e = 0; e < a.length; e++) {
      a[e].removeAttribute("tabindex")
    }
    if (!g) {
      var f = document.querySelectorAll(".-k-w-c-datepicker-holder-main,.k-w-c-scrim-for-popup");
      for (var e = 0, b = f.length; e < b; e++) {
        f[e].parentNode.removeChild(f[e])
      }
    } else {
      var f = document.querySelectorAll(".k-w-c-scrim-for-popup")[0];
      var d = document.getElementById(this.active);
      d && d.parentNode.removeChild(d);
      f && f.parentNode.removeChild(f)
    }
    if (c) {
      c = document.getElementById(c);
      if (c) {
        if (c.tagName == "INPUT") {
          c = c.parentElement
        }
        c.setAttribute("tabindex", 1);
        c.focus()
      }
    }
  },
  month: function(s, h, r, q) {
    var c = new Date(h, s - 1, 1).getDay(),
      d = [],
      n = 1,
      b = new Date(h, s, 0).getDate();
    var o, k = {},
      l = {},
      e = 0,
      f = 0,
      g;
    g = s == 1 ? this.series(h - 1, 12, 3) : this.series(h, s - 1, 3);
    k.month = g[0][0];
    k.year = g[0][1];
    l.month = g[2][0];
    l.year = g[2][1];
    var t = new Date(k.year, k.month, 0).getDate(),
      a = new Date(l.year, l.month, 0).getDate();
    r = r || 0;
    if (r > c) {
      r -= 7
    }
    for (var p = 0; p <= 6; p++) {
      d.push(this.days[(p + r + 7) % 7])
    }
    for (var p = 0; p < 6; p++) {
      for (var m = 0; m <= 6; m++) {
        if (n <= b && (p > 0 || m + r >= c)) {
          d.push([n, {
            d: n,
            y: h,
            m: s
          }, new Date(h, s - 1, n).getDay()]);
          n++;
          o = 1
        } else {
          if (o) {
            d.push(0);
            f += 1
          } else {
            d.push(-1);
            e += 1
          }
        }
      }
    }
    for (p = 0; p < d.length; p++) {
      if (d[p] == 0) {
        d[p] = o;
        o++
      } else {
        if (d[p] == -1) {
          d[p] = t - e + 1;
          e--
        }
      }
    }
    return d
  },
  chunks: function(c, b) {
    var a = [];
    while (c.length) {
      a.push(c.splice(0, b))
    }
    return a
  },
  getOffset: function(a) {
    var c = document.getElementById(a),
      b = $KU.getPosition(c);
    return [b.left, b.top]
  },
  setDisable: function(c, b, a) {
    c.datesGroup = [b + "-" + a];
    c.dateState = 0
  },
  setEnable: function(c, b, a) {
    c.datesGroup = [b + "-" + a];
    c.dateState = 0
  },
  dateFormatter: function(A, F, D, J) {
    var y = function(e) {
        return e.replace(/ +(?= )/g, "").replace(/^\s+|\s+$/g, "").replace(/[^a-zA-Z0-9]/g, "_").replace(/_+(?=_)/g, "").split("_")
      },
      l = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      f = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      h = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      H = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      w, I, o, p = {};
    if (D && A) {
      D = y(D);
      var a = y(A.toLowerCase());
      if (a.length != D.length) {
        return false
      }
      for (var t = 0, s = a.length; t < s; t++) {
        p[a[t]] = D[t]
      }
      for (var x in p) {
        if (p.hasOwnProperty(x)) {
          switch (x) {
            case "mmm":
              I = f.indexOf(p[x]) + 1;
              if (I == 0) {
                return false
              }
              break;
            case "mmmm":
              I = l.indexOf(p[x]) + 1;
              if (I == 0) {
                return false
              }
              break;
            case "mm":
              I = p[x] * 1;
              if (I < 1 || I > 12) {
                return false
              }
              break;
            case "dd":
              w = p[x] * 1;
              if (w <= 0) {
                return false
              }
              break;
            case "do":
              w = parseInt(p[x], 10);
              if (w <= 0) {
                return false
              }
              break;
            case "yy":
            case "yyyy":
              if (p[x] != "") {
                o = ("" + p[x]).length > 2 ? (p[x] * 1) : (p[x] * 1 + ((Math.floor(J / 100) * 100) || 2000))
              } else {
                o = ("" + p[x]).length > 2 ? (p[x] * 1) : (p[x] * 1 + (new Date().getFullYear()))
              }
              if (o > 2099 || o < 1900) {
                return false
              }
              break
          }
        }
      }
      var d = 1;
      var C = new Date(o, I - 1, w || d);
      if (Object.prototype.toString.call(C) === "[object Date]") {
        if ((C.getFullYear() == o) && (C.getMonth() + 1 == I) && (C.getDate() == (w || d))) {
          F = [w || d, I, o]
        } else {
          return false
        }
      }
    } else {
      if (F) {
        try {
          for (var u = 0; u < 3; u++) {
            F[u] = +F[u]
          }
        } catch (B) {
          console.log(B)
        }
      }
    }
    if (!A || !F) {
      return false
    }
    A = "" + A.toLowerCase().replace(/ +(?= )/g, "").replace(/^\s+|\s+$/g, "");
    var k = new Date(F[2], F[1] - 1, F[0]),
      z = F[1] <= 9 ? "0" + F[1].toString() : F[1],
      b = f[F[1] - 1],
      j = l[F[1] - 1],
      r = (F[2] + "").substring(2, 4),
      q = F[2],
      G = (F[0] >= 1 && F[0] < 10 ? "0" + F[0].toString() : F[0]),
      g = h[k.getDay()],
      c = H[k.getDay()],
      v = F[0] + ((F[0] <= 20) && F[0] >= 10 ? "th" : ["st", "nd", "rd"][(F[0] % 10) - 1] || "th");
    return {
      date: F,
      string: A.replace("dddd", c).replace("mmmm", j).replace("mmm", b).replace("mm", z).replace("ddd", g).replace("dd", G).replace("yyyy", q).replace("yy", r).replace("do", v)
    }
  }
};
$KW.Calendar.DateFormater = {
  DD: "dd",
  MM: "MM",
  mm: "mm",
  yyyy: "yyyy",
  yy: "yy",
  separator_: "-",
  seperator: "/",
  cseperator: "/",
  dateformat: "MM/dd/yyyy",
  setformat: function(a) {
    this.dateformat = a
  },
  format: function(c, b) {
    if (b) {
      this.dateformat = b
    }
    var h = this.formatArray();
    var f = null,
      g = null;
    var a = "";
    for (var e = 0, d = h.length; e < d; e++) {
      f = h[e];
      g = "00";
      switch (f) {
        case this.DD:
          g = c.getDate();
          break;
        case this.mm:
        case this.MM:
          g = c.getMonth() + 1;
          break;
        case this.yyyy:
          g = c.getFullYear();
          break;
        case this.yy:
          g = c.getYear() - 100;
          break
      }
      if (g < 10) {
        g = "0" + g
      }
      a = a + g + this.cseperator
    }
    return a.substr(0, a.length - 1)
  },
  formatArray: function() {
    var a = null;
    if (this.dateformat != null) {
      a = this.dateformat.split(this.seperator);
      if (!a || a.length == 1) {
        a = this.dateformat.split(this.seperator_);
        this.cseperator = this.seperator_
      }
    }
    return a
  },
  convertToModelDate: function(e, b) {
    var f = null;
    var a = null;
    var d = new Array();
    var c = {};
    if (IndexJL) {
      d[0] = null
    }
    if (b != null && e) {
      f = b.split(this.seperator);
      if (e instanceof Array) {
        if (IndexJL) {
          e.shift()
        }
        a = e
      } else {
        a = e.split(this.seperator)
      }
      if (f[0] === "dd") {
        d[IndexJL] = a[0];
        c.day = a[0];
        d[1 + IndexJL] = a[1];
        c.month = a[1];
        d[2 + IndexJL] = a[2];
        c.year = a[2]
      } else {
        d[IndexJL] = a[1];
        c.month = a[1];
        d[1 + IndexJL] = a[0];
        c.day = a[0];
        if (f[2] === "yyyy") {
          d[2 + IndexJL] = a[2];
          c.year = a[2]
        } else {
          if (a[2].length > 3) {
            d[2 + IndexJL] = a[2].substring(2, 4);
            c.year = a[2]
          } else {
            d[2 + IndexJL] = a[2];
            c.year = a[2]
          }
        }
      }
    }
    c.date = d;
    c.dateText = d[IndexJL] + this.seperator + d[1 + IndexJL] + this.seperator + d[2 + IndexJL];
    c.selectdate = c.month + this.seperator + c.day + this.seperator + c.year;
    c.pagedate = c.month + this.seperator + c.year;
    return c
  }
};
$KW.Calendar.Util = {
  isValidDate: function(a, g, c) {
    var f = false;
    var b = new Date();
    try {
      b.setFullYear(c, g, a);
      if (b.getDate() == a && b.getMonth() == g && b.getFullYear() == c) {
        f = true
      }
    } catch (d) {
      f = false
    }
    return f
  },
  daysInMonth: function(c, b) {
    var a = new Date(b, c, 0);
    return a.getDate()
  }
};

kony.widgets.Grid = {
  render: function(f, c) {
    var l = "";
    if (f.children) {
      var b = $KW.skins.getMarginSkin(f, c) + $KW.skins.getPaddingSkin(f);
      l = "<table cellspacing='0' cellpadding='0' style='xborder:0;xtable-layout:fixed;" + b + "'" + (f.wType == "Form" ? "" : $KW.Utils.getBaseHtml(f, c)) + " class='" + $KW.skins.getWidgetSkinList(f, c) + "' >";
      var m = f.layoutmeta;
      var a = this.getRowColumnMap(f, c);
      var d, h;
      for (var g = 0; g < m.rows; g++) {
        l += "<tr>";
        for (var e = 0; e < m.cols; e++) {
          d = a[g][e];
          if (d) {
            var k = d.wType;
            if (k) {
              h = " class='" + kony.widgets.skins.getWidgetAlignmentSkin(d) + "' rowspan=" + d.gridCell.rowSpan + " colspan=" + d.gridCell.colSpan
            }
            l += "<td style=' font-size:0px; width:" + m.colmeta[e].width + "%'" + (k ? h : "") + ">";
            if (k) {
              if (k == "HBox" || k == "VBox" || k == "ScrollBox") {
                c.setTopLevelBox(true)
              }
              l += kony.widgets[k].render(d, c);
              if (k == "HBox" || k == "VBox" || k == "ScrollBox") {
                c.setTopLevelBox(false)
              }
            }
            l += "</td>"
          }
        }
        l += "</tr>"
      }
      l += "</table>"
    }
    return l
  },
  getRowColumnMap: function(f, a) {
    var b = f.children;
    var p = [];
    var d;
    var o = f.layoutmeta;
    for (var h = 0; h < o.rows; h++) {
      p.push([]);
      for (var g = 0; g < o.cols; g++) {
        p[h][g] = "td"
      }
    }
    for (var h = 0; h < b.length; h++) {
      d = kony.model.getWidgetModel(f.pf || f.id, b[h], a.tabpaneID);
      p[d.gridCell.rowNo][d.gridCell.colNo] = d
    }
    for (var h = 0; h < o.rows; h++) {
      for (var g = 0; g < o.cols; g++) {
        var n = p[h][g];
        if (n.wType) {
          var m = n.gridCell.colSpan;
          while (m > 1) {
            p[h][++g] = "";
            m--
          }
        }
      }
      for (var e = h - 1; e >= 0; e--) {
        for (var c = 0; c < o.cols; c++) {
          var n = p[e][c];
          if (n.wType && n.gridCell.rowSpan > h - e) {
            p[h][c] = "";
            var m = n.gridCell.colSpan;
            while (m > 1) {
              p[h][++c] = "";
              m--
            }
          }
        }
      }
    }
    return p
  }
};
kony.widgets.Menubar = {
  initialize: function() {
    kony.events.addEvent("click", "Menubar", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    switch (c) {
      case "skin":
        kony.widgets.Utils.updateDOMSkin(e, b, a);
        break;
      case "focusskin":
        kony.widgets.Utils.updateFocusSkin(e);
        break;
      case "hoverskin":
        kony.widgets.Utils.updateFocusSkin(e, "hoverskin");
        break;
      case "text":
        var d = kony.utils.getNodeByModel(e);
        if (d) {
          d.innerHTML = b
        }
        break;
      case "activemenu":
        this.updateActiveMenuDOM(e);
        break
    }
  },
  initializeView: function(a) {
    this.addHoverToMenu(a)
  },
  addHoverToMenu: function(f) {
    var k = document.querySelectorAll("div[kwidgettype='Menubar']");
    var h = document.querySelectorAll("div[kwidgettype='Menubar'] ul li[level='one']");
    for (var c = 0; c < k.length; c++) {
      var d = k[c];
      var e = kony.utils.getModelByNode(d);
      if (e.view == "1") {
        var g = document.querySelectorAll("#" + d.id + " ul li[level='one']");
        for (var b = 0; b < g.length; b++) {
          var a = g[b];
          if (a.nodeName == "LI") {
            a.onmouseover = function(i) {
              var s = this;
              var p = document.querySelectorAll("#" + s.parentNode.parentNode.id + " ul li[itemindex='" + s.getAttribute("itemindex") + "'] > div[mtype] div[kwidgettype='Label']");
              if (p.length > 0) {
                for (var n = 0; n < 1; n++) {
                  var r = p[n];
                  var t = kony.utils.getModelByNode(r);
                  if (t.hoverskin) {
                    if (t.skin) {
                      kony.utils.removeClassName(r, t.skin)
                    }
                    kony.utils.addClassName(r, t.hoverskin)
                  }
                }
              }
              var o = document.querySelectorAll("#" + s.parentNode.parentNode.id + " ul li[itemindex='" + s.getAttribute("itemindex") + "'] > div[mtype] div[kwidgettype='HBox']");
              if (o.length > 0) {
                for (var j = 0; j < 1; j++) {
                  var l = o[j];
                  var q = kony.utils.getModelByNode(l);
                  if (q.hoverskin) {
                    if (q.skin) {
                      kony.utils.removeClassName(l, q.skin)
                    }
                    kony.utils.addClassName(l, q.hoverskin)
                  }
                }
              }
            };
            a.onmouseout = function(i) {
              var t = this;
              var q = document.querySelectorAll("#" + t.parentNode.parentNode.id + " ul li[itemindex='" + t.getAttribute("itemindex") + "']  > div[mtype] div[kwidgettype='Label']");
              if (q.length > 0) {
                for (var m = 0; m < 1; m++) {
                  var s = q[m];
                  var u = kony.utils.getModelByNode(s);
                  if (u.hoverskin) {
                    if (u.skin) {
                      kony.utils.addClassName(s, u.skin)
                    }
                    kony.utils.removeClassName(s, u.hoverskin)
                  }
                }
              }
              var p = document.querySelectorAll("#" + t.parentNode.parentNode.id + " ul li[itemindex='" + t.getAttribute("itemindex") + "']  > div[mtype] div[kwidgettype='HBox']");
              if (p.length > 0) {
                for (var j = 0; j < 1; j++) {
                  var o = p[j];
                  var r = kony.utils.getModelByNode(o);
                  if (r.hoverskin) {
                    if (r.skin) {
                      kony.utils.addClassName(o, r.skin)
                    }
                    kony.utils.removeClassName(o, r.hoverskin)
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  render: function(d, c) {
    var a = kony.model.getWidgetModel(d.pf, c.tabpaneID);
    c.menuType = d.view;
    if (!d.activemenu) {
      d.activemenu = 1
    }
    var f = kony.widgets.skins.getMarginSkin(d) + " " + kony.widgets.skins.getPaddingSkin(d) + " " + kony.widgets.skins.getMarAdjustedContainerWeightSkin(d, 100);
    var b;
    switch (d.view) {
      case "1":
        b = "kDropDownMenu";
        break;
      case "2":
        b = "kDropLineMenu";
        break;
      case "3":
        b = "kTreeMenu";
        break;
      case "4":
        b = "kContextMenu";
        break
    }
    var g = "<div " + kony.widgets.Utils.getBaseHtml(d, c) + " class = ' " + f + " ";
    if (d.skin) {
      g += d.skin + " "
    }
    g += " '>";
    g += "<ul class='" + b + " ";
    if (d.skin) {
      g += d.submenuskin + " "
    }
    g += "' id='" + d.id + "_Ul'>";
    var e;
    c.formID = d.pf;
    d.context = c;
    g += kony.widgets.Menubar.renderMenubar(d, c);
    g += "</ul>";
    g += "</div>";
    return g
  },
  renderMenubar: function(e, c) {
    var g = "";
    var f;
    if (e.menudata) {
      c.container = e;
      for (var b = 1; b < e.menudata.length; b++) {
        f = e.menudata[b];
        var d = f.template;
        var a = f.data;
        if (f.type === "menu") {
          g += kony.widgets.Menubar.renderMenu(e, f, c, b)
        } else {
          g += kony.widgets.Menubar.renderMenuitem(e, f, c, b)
        }
      }
      c.container = ""
    }
    return g
  },
  renderMenuitem: function(e, f, c, b) {
    var d = f.template;
    var a = f.data;
    var g = "<li ";
    if (b.toString().length === 1) {
      g += " level='one' "
    }
    g += " itemindex='" + b + "' ";
    if (e.activemenu && e.activemenu == b) {
      g += " activemenu=yes "
    }
    g += ">";
    if (d && a) {
      e.widgetsData = a;
      kony.widgets.Utils.updateLayoutData(window[d], a);
      g += kony.widgets.Form.generateTemplate(d, "menuitem", c)
    }
    g += "</li>";
    return g
  },
  renderMenu: function(a, k, b, e) {
    var j = k.template;
    var c = k.data;
    var h;
    var g = "";
    if (k.width) {
      g += "<li style='width:" + k.width + "%;' itemindex='" + e + "' "
    } else {
      g += "<li itemindex='" + e + "' "
    }
    if (e.toString().length === 1) {
      g += " level='one' "
    }
    if (a.activemenu && a.activemenu == e) {
      g += " activemenu=yes "
    }
    g += " >";
    var f = k.items;
    if (a.view === "3" && k.selectionindicator && k.expandedimage && k.collapsibleimage) {
      if (k.isexpand) {
        c[k.selectionindicator] = k.collapsibleimage
      } else {
        c[k.selectionindicator] = k.expandedimage
      }
    }
    a.widgetsData = c;
    kony.widgets.Utils.updateLayoutData(window[j], c);
    g += kony.widgets.Form.generateTemplate(j, "menu", b);
    if (f && f.length > 1) {
      g += "<ul";
      if (a.view === "3") {
        if (k.isexpand) {
          g += " class='show' "
        } else {
          g += " class='hide' "
        }
      } else {
        g += " class='kwt100 ";
        if (a.submenuskin) {
          g += a.submenuskin
        }
        g += " ' "
      }
      g += " style='z-index:1' >";
      for (var d = 1; d < f.length; d++) {
        h = f[d];
        if (h.type === "menu") {
          g += kony.widgets.Menubar.renderMenu(a, h, b, e + "," + d)
        } else {
          g += kony.widgets.Menubar.renderMenuitem(a, h, b, e + "," + d)
        }
      }
      g += "</ul>"
    }
    g += "</li>";
    return g
  },
  setData: function(b, a) {
    if (kony.utils.isArray(a)) {
      b.menudata = a;
      var c = kony.utils.getNodeByModel(b);
      if (c) {
        c.childNodes[0].innerHTML = this.renderMenubar(b, b.context)
      }
    }
  },
  eventHandler: function(b, f) {
    var h = kony.utils.getParentByAttribute(f, "itemindex");
    var g = kony.utils.getParentByAttribute(h, "kwidgettype");
    var a = kony.utils.getModelByNode(g);
    if (a) {
      var e = h.getAttribute("itemindex");
      var l = e.split(",");
      if (l.length > 0) {
        l.splice(0, 0, null)
      }
      a.focusedindex = l;
      var d = a.menudata;
      var k = d;
      for (var c = 1; c < l.length; c++) {
        if (c == 1) {
          k = k[l[c]]
        } else {
          k = k.items[l[c]]
        }
      }
      switch (a.view) {
        case "1":
          kony.widgets.Menubar.kDropDownMenuHoverEvent(b, f, a);
          break;
        case "2":
          break;
        case "3":
          kony.widgets.Menubar.kTreeMenuEvent(b, f, a, k, e);
          break;
        case "4":
          break
      }
      var j = kony.utils.returnEventReference(a.onclick);
      if (a.onclick) {
        j(a, l, k.data)
      }
      if (a.activemenu) {
        if (a.activemenu != a.focusedindex[1]) {
          a.activemenu = a.focusedindex[1];
          this.updateActiveMenuDOM(a)
        }
      }
    }
  },
  kTreeMenuEvent: function(b, h, f, a, e) {
    var g = kony.utils.getParentByAttribute(h, "mtype");
    if (g.getAttribute("mtype") == "menu") {
      var d = kony.utils.getNextSibling(g);
      var c = document.querySelector("[itemindex='" + e + "'] [id='" + g.id + "_" + a.selectionindicator + "']");
      if (kony.utils.hasClassName(d, "hide")) {
        if (a.collapsibleimage && c) {
          c.src = kony.widgets.Image.getImageURL(a.collapsibleimage)
        }
        kony.utils.removeClassName(d, "hide");
        kony.utils.addClassName(d, "show")
      } else {
        kony.utils.removeClassName(d, "show");
        kony.utils.addClassName(d, "hide");
        if (a.expandedimage && c) {
          c.src = kony.widgets.Image.getImageURL(a.expandedimage)
        }
      }
    }
  },
  kDropDownMenuHoverEvent: function(a, c, b) {
    var d = c;
    while (d) {
      if (d.tagName === "UL") {
        if (kony.utils.hasClassName(d, "kDropDownMenu")) {
          break
        }
        kony.utils.addClassName(d, "hide")
      }
      d = d.parentNode
    }
    setTimeout(function() {
      d = c;
      while (d) {
        if (d.tagName === "UL") {
          if (kony.utils.hasClassName(d, "kDropDownMenu")) {
            return
          }
          kony.utils.removeClassName(d, "hide")
        }
        d = d.parentNode
      }
    }, 1)
  },
  updateActiveMenuDOM: function(c) {
    var b = document.querySelectorAll("#" + c.pf + "_" + c.id + " > ul")[0];
    for (var a = 0; a < b.children.length; a++) {
      var d = b.children[a];
      if (d.getAttribute("itemindex") == c.activemenu) {
        d.setAttribute("activemenu", "yes")
      } else {
        if (d.getAttribute("activemenu")) {
          d.removeAttribute("activemenu")
        }
      }
    }
  },
  expandAll: function(a, h) {
    if (a.view === "3") {
      var k = document.querySelectorAll("#" + a.pf + "_" + a.id + " div[mtype=menu]");
      if (k && k.length > 0) {
        for (var f = 0; f < k.length; f++) {
          var d = k[f];
          var n = k[f].parentNode;
          var b = kony.utils.getNextSibling(k[f]);
          var g = n.getAttribute("itemindex");
          var m = g.split(",");
          var l = a.menudata;
          for (var c = 0; c < m.length; c++) {
            if (c == 0) {
              l = l[m[c]]
            } else {
              l = l.items[m[c]]
            }
          }
          var e = document.querySelector("[itemindex='" + g + "'] [id='" + d.id + "_" + l.selectionindicator + "']");
          if (h) {
            if (l.collapsibleimage && e) {
              e.src = kony.widgets.Image.getImageURL(l.collapsibleimage)
            }
            if (kony.utils.hasClassName(b, "hide")) {
              kony.utils.removeClassName(b, "hide");
              kony.utils.addClassName(b, "show")
            } else {
              kony.utils.addClassName(b, "show")
            }
          } else {
            if (kony.utils.hasClassName(b, "show")) {
              kony.utils.removeClassName(b, "show");
              kony.utils.addClassName(b, "hide")
            } else {
              kony.utils.addClassName(b, "hide")
            }
            if (l.expandedimage && e) {
              e.src = kony.widgets.Image.getImageURL(l.expandedimage)
            }
          }
        }
      }
    }
  },
  expand: function(a, m, j) {
    if (a.view === "3") {
      var f = a.menudata;
      var k = f;
      var l = m;
      for (var e = 1; e < l.length; e++) {
        if (e == 1) {
          k = k[l[e]]
        } else {
          k = k.items[l[e]]
        }
      }
      if (m) {
        m.splice(0, 1)
      }
      var g = m.toString();
      var h = document.querySelectorAll("#" + a.pf + "_" + a.id + " li[itemindex='" + g + "']");
      if (h && h.length > 0) {
        var n = h[0];
        var c = n.childNodes[0];
        var b;
        if (c.getAttribute("mtype") === "menu") {
          b = kony.utils.getNextSibling(c)
        }
        if (b) {
          var d = document.querySelector("[itemindex='" + g + "'] [id='" + c.id + "_" + k.selectionindicator + "']");
          if (j) {
            if (k.collapsibleimage && d) {
              d.src = kony.widgets.Image.getImageURL(k.collapsibleimage)
            }
            if (kony.utils.hasClassName(b, "hide")) {
              kony.utils.removeClassName(b, "hide");
              kony.utils.addClassName(b, "show")
            } else {
              kony.utils.addClassName(b, "show")
            }
          } else {
            if (kony.utils.hasClassName(b, "show")) {
              kony.utils.removeClassName(b, "show");
              kony.utils.addClassName(b, "hide")
            } else {
              kony.utils.addClassName(b, "hide")
            }
            if (k.expandedimage && d) {
              d.src = kony.widgets.Image.getImageURL(k.expandedimage)
            }
          }
        }
      }
    }
  }
};
$KW.MenuContainer = {
  initialize: function() {
    kony.events.addEvent("click", "MenuContainer", this.eventHandler)
  },
  updateView: function(g, j, d, e) {
    var c = $KU.getNodeByModel(g),
      h = null,
      b = "";
    switch (j) {
      case "skin":
        $KW.Utils.updateDOMSkin(g, d, e);
        break;
      case "activeskin":
        if (g.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW && $KU.isArray(g.selectedindex)) {
          b = (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) ? g.selectedindex.join(",") : g.selectedindex[0].toString();
          h = (c.querySelector) ? c.querySelector('li[menuindex="' + b + '"]') : document.querySelector("#" + c.id + ' li[menuindex="' + b + '"]');
          $KU.removeClassName(h.firstChild, e);
          $KU.addClassName(h.firstChild, d)
        }
        break;
      case "hoverskin":
        $KW.Utils.updateFocusSkin(g, "hoverskin");
        break;
      case "selectedindex":
      case "selectedmenuindex":
        if (kony.appinit.isIE8 || kony.appinit.isIE7) {
          g.selectedindex = d;
          g.selectedMenuIndex = g.selectedindex;
          g.selectedmenuindex = g.selectedindex
        }
        var l = $KW.MenuContainer.getDetails(g, g.selectedindex, "item");
        if (l) {
          $KW.MenuContainer.updateActiveMenu(g, g.selectedindex, e);
          g.selecteditem = l;
          if (kony.appinit.isIE8 || kony.appinit.isIE7) {
            g.selectedMenuItem = g.selecteditem;
            g.selectedmenuitem = g.selecteditem
          }
          $KW.MenuContainer.expand(g, g.selectedindex)
        } else {
          g.selectedindex = e;
          if (kony.appinit.isIE8 || kony.appinit.isIE7) {
            g.selectedMenuIndex = g.selectedindex;
            g.selectedmenuindex = g.selectedindex
          }
        }
        break;
      case "orientation":
        if (c && d !== e && (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW || g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
          for (var f = 0; f < (c.firstChild.childNodes.length - 1); f++) {
            (function(i) {
              i.style.cssFloat = (d === "horizontal") ? "left" : "none"
            })(c.firstChild.childNodes[f])
          }
        }
        break;
      case "expandedimage":
      case "collapsedimage":
        if (c && d !== e) {
          var k = (c.querySelectorAll) ? c.querySelectorAll('image[src="' + $KU.getImageURL(e) + '"]') : document.querySelectorAll("#" + c.id + ' image[src="' + $KU.getImageURL(e) + '"]');
          var a = $KU.getImageURL(d);
          for (var f = 0; f < k.length; f++) {
            (function(i) {
              i.src = "newpath"
            })(k[f])
          }
        }
        break;
      case "data":
        if (c) {
          c.firstChild.innerHTML = $KW.MenuContainer.renderAll(g, g.context)
        }
        break
    }
  },
  render: function(a, c) {
    c.menuType = a.viewtype;
    c.formID = a.pf;
    a.context = c;
    if (a.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      if (!a.selectedindex || a.selectedindex.length === 0) {
        a.activemenu = "" + 0;
        a.selectedindex = [0];
        a.selecteditem = a.data[0];
        if (kony.appinit.isIE8 || kony.appinit.isIE7) {
          a.selectedMenuIndex = a.selectedindex;
          a.selectedMenuItem = a.selecteditem;
          a.selectedmenuindex = a.selectedindex;
          a.selectedmenuitem = a.selecteditem
        }
      } else {
        a.activemenu = (a.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) ? a.selectedindex.join(",") : a.selectedindex[0].toString();
        a.selecteditem = $KW.MenuContainer.getDetails(a, a.selectedindex, "item")
      }
    }
    var b = "",
      e = $KW.skins.getWidgetSkinList(a, c),
      d = "";
    b += "<div " + $KW.Utils.getBaseHtml(a, c) + ' class = "' + e + '"';
    d += $KW.skins.getMarginSkin(a, c) + " " + $KW.skins.getPaddingSkin(a);
    if (a.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      if (!a.containerweight) {
        a.containerweight = 15
      }
      d += " visibility:hidden; width:" + a.containerweight + "%;"
    }
    b += ' style="' + d + '">';
    b += '<ul class="KMenu">';
    b += $KW.MenuContainer.renderAll(a, c);
    b += "</ul></div>";
    return b
  },
  renderAll: function(a, d) {
    var c = "",
      e = null;
    d.container = a;
    for (var b = 0; b < a.data.length; b++) {
      (function(g, f) {
        e = (g.template) ? g.template : a.menutemplate;
        if ($KU.isArray(g.children) && g.children.length > 0) {
          c += $KW.MenuContainer.renderMenu(a, g, d, f)
        } else {
          c += $KW.MenuContainer.renderItem(a, g, d, f)
        }
      })(a.data[b], b)
    }
    c += '<li class="KClear">';
    d.container = "";
    return c
  },
  renderMenu: function(c, t, a, e) {
    if (typeof e === "string" || typeof e === "number") {
      e = e.toString().split(",")
    }
    if (!$KU.isArray(e)) {
      return
    }
    var h = "",
      k = "",
      b = "",
      l = null,
      d = t.children,
      q = e.join(","),
      n = document.createElement("div"),
      p = (t.metaInfo && t.metaInfo.width) ? t.metaInfo.width : (c.width) ? c.width : 20,
      f = (t.metaInfo && t.metaInfo.subMenuWidth) ? t.metaInfo.subMenuWidth : (c.subMenuWidth) ? c.subMenuWidth : 200,
      u = (t.template) ? t.template : c.menutemplate,
      s = (t.expandedimage) ? t.expandedimage : (c.expandedimage) ? c.expandedimage : "",
      j = (t.collapsedimage) ? t.collapsedimage : (c.collapsedimage) ? c.collapsedimage : "",
      m = (t.indicatorimage) ? t.indicatorimage : (c.indicatorimage) ? c.indicatorimage : "";
    if (c.selectedindex && c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      var o = c.selectedindex.join(",")
    }
    var g = e.join(",");
    h += '<li menuindex="' + g + '"';
    if (c.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      h += " onmouseover=\"$KW.MenuContainer.hover(this, '" + c.pf + "_" + c.id + "', '" + c.viewtype + "', '" + c.orientation + "');\"";
      h += " onmouseout=\"$KW.MenuContainer.hout(this, '" + c.pf + "_" + c.id + "', '" + c.viewtype + "', '" + c.orientation + "');\"";
      b += "position:relative; top:0%; left:0%;"
    }
    if (e.length === 1) {
      if (c.orientation === "horizontal" && (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW || c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
        b += " float:left; width:" + p + "%;"
      }
    } else {
      if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        b += " float:left;"
      }
    }
    h += ' style="' + b + '">';
    c.widgetsData = t;
    n.setAttribute("kformname", c.pf);
    n.setAttribute("id", c.pf + "_" + c.id);
    a.tabPaneID && n.setAttribute("ktabpaneid", a.tabPaneID);
    n.setAttribute("menuindex", g);
    n.innerHTML = $KW.Utils.handleLayout(c, u, t);
    if (!s && !j && !m) {
      if (c.activemenu && c.activemenu === q) {
        if (u.skin) {
          $KU.removeClassName(n.firstChild, u.skin)
        }
        $KU.addClassName(n.firstChild, c.activeclass)
      }
      h += n.innerHTML
    } else {
      h += '<table cellpadding="0" cellspacing="0" border="0" width="100%"><tbody><tr>';
      if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && c.orientation !== "horizontal" && s && j) {
        h += '<td align="left" valign="middle"><img border="0" src="';
        if (q.length < o.length && o.indexOf(q) === 0) {
          h += $KU.getImageURL(s)
        } else {
          h += $KU.getImageURL(j)
        }
        h += '"/></td>'
      }
      if (c.activemenu && c.activemenu === q) {
        if (u.skin) {
          $KU.removeClassName(n.firstChild, u.skin)
        }
        $KU.addClassName(n.firstChild, c.activeclass)
      }
      h += '<td align="left" valign="middle" width="100%">' + n.innerHTML + "</td>";
      if (c.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && m) {
        h += '<td align="right" valign="middle"><img border="0"';
        h += ' src="' + $KU.getImageURL(m) + '"/></td>'
      }
      h += "</tr></tbody></table>"
    }
    h += "<ul";
    if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      if (q.length < o.length && o.indexOf(q) === 0) {
        h += ' class="show"'
      } else {
        h += ' class="hide"'
      }
      k += "padding-left:20px;"
    } else {
      h += ' class="hidden"';
      k += "position:absolute; top:0%; left:0%; z-index:1; ";
      if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        k += "width:99999px;"
      } else {
        if (f) {
          k += "width:" + f + "px;"
        }
      }
    }
    h += ' style="' + k + '">';
    for (var r = 0; r < d.length; r++) {
      (function(v, i) {
        if ($KU.isArray(v.children) && v.children.length > 0) {
          h += $KW.MenuContainer.renderMenu(c, v, a, e.join(",") + "," + i)
        } else {
          h += $KW.MenuContainer.renderItem(c, v, a, e.join(",") + "," + i)
        }
      })(d[r], r)
    }
    h += '<li class="KClear"></ul></li>';
    return h
  },
  renderItem: function(g, m, b, h) {
    if (typeof h === "string" || typeof h === "number") {
      h = h.toString().split(",")
    }
    if (!$KU.isArray(h)) {
      return
    }
    var f = "",
      i = "",
      n = "",
      e = document.createElement("div"),
      l = (m.template) ? m.template : g.menutemplate,
      a = (m.metaInfo && m.metaInfo.width) ? m.metaInfo.width : (g.width) ? g.width : 20,
      d = (m.metaInfo && m.metaInfo.subMenuWidth) ? m.metaInfo.subMenuWidth : (g.subMenuWidth) ? g.subMenuWidth : 200,
      k = (m.expandedimage) ? m.expandedimage : (g.expandedimage) ? g.expandedimage : "",
      c = (m.collapsedimage) ? m.collapsedimage : (g.collapsedimage) ? g.collapsedimage : "",
      j = (m.indicatorimage) ? m.indicatorimage : (g.indicatorimage) ? g.indicatorimage : "";
    f += '<li menuindex="' + h.join(",") + '"';
    if (g.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      f += " onmouseover=\"$KW.MenuContainer.hover(this, '" + g.pf + "_" + g.id + "', '" + g.viewtype + "', '" + g.orientation + "');\"";
      f += " onmouseout=\"$KW.MenuContainer.hout(this, '" + g.pf + "_" + g.id + "', '" + g.viewtype + "', '" + g.orientation + "');\"";
      n += "position:relative; top:0%; left:0%;"
    }
    if (h.length === 1) {
      if (g.orientation === "horizontal" && (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW || g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
        n += " float:left; width:" + a + "%;"
      }
    } else {
      if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        n += " float:left;"
      }
    }
    f += ' style="' + n + '">';
    g.widgetsData = m;
    e.innerHTML = $KW.Utils.handleLayout(g, l, m);
    if (!k && !c && !j) {
      if (g.activemenu && g.activemenu === h.toString()) {
        if (l.skin) {
          $KU.removeClassName(e.firstChild, l.skin)
        }
        $KU.addClassName(e.firstChild, g.activeclass)
      }
      f += e.innerHTML
    } else {
      f += '<table cellpadding="0" cellspacing="0" border="0" width="100%"><tbody><tr>';
      if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && g.orientation !== "horizontal" && k && c) {
        f += '<td align="left" valign="middle" width="0%"><img border="0" src="';
        f += $KU.getImageURL(c);
        f += '"/></td>'
      }
      if (g.activemenu && g.activemenu === h.toString()) {
        if (l.skin) {
          $KU.removeClassName(e.firstChild, l.skin)
        }
        $KU.addClassName(e.firstChild, g.activeclass)
      }
      f += '<td align="left" valign="middle" width="100%">' + e.innerHTML + "</td>";
      if (g.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && j) {
        f += '<td align="right" valign="middle" width="0%"><img border="0"';
        f += ' src="' + $KU.getImageURL(j) + '"/></td>'
      }
      f += "</tr></tbody></table>"
    }
    f += "<ul";
    if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      f += ' class="hide"';
      i += "padding-left:20px;"
    } else {
      f += ' class="hidden"';
      i += "position:absolute; top:0%; left:0%; z-index:1; ";
      if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        i += "width:99999px;"
      } else {
        if (d) {
          i += "width:" + d + "px;"
        }
      }
    }
    f += ' style="' + i + '"><li class="KClear"></ul></li>';
    return f
  },
  eventHandler: function(e, k) {
    var o = null,
      d = null,
      h = null;
    if (k.getAttribute(kony.constants.KONY_WIDGET_TYPE) === "MenuContainer") {
      o = $KU.getParentByAttribute(e.target || e.srcElement, "menuindex")
    } else {
      o = $KU.getParentByAttribute(k, "menuindex")
    }
    if (o) {
      d = $KU.getParentByAttribute(o, kony.constants.KONY_WIDGET_TYPE)
    }
    if (d) {
      h = $KU.getModelByNode(d);
      if (!h) {
        h = d.id.split("_");
        h.splice(0, 1);
        h = window[h.join("_")]
      }
      if (document.getElementById(h.pf + "_" + h.id).getAttribute("kdisabled") == "true") {
        return
      }
    }
    if (!h) {
      return
    }
    var j = o.getAttribute("menuindex");
    if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW && !h.selectedindex) {
      h.selectedindex = j.split(",")
    }
    var f = h.selectedindex.slice();
    j = j.split(",");
    h.selectedindex = [];
    for (var g = 0; g < j.length; g++) {
      h.selectedindex.push(parseInt(j[g], 10))
    }
    h.selecteditem = $KW.MenuContainer.getDetails(h, h.selectedindex, "item");
    if (kony.appinit.isIE8 || kony.appinit.isIE7) {
      h.selectedMenuIndex = h.selectedindex;
      h.selectedMenuItem = h.selecteditem;
      h.selectedmenuindex = h.selectedindex;
      h.selectedmenuitem = h.selecteditem
    }
    $KW.MenuContainer.updateActiveMenu(h, h.selectedindex, f);
    if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      var p = $KW.MenuContainer.getDetails(h, h.selectedindex),
        n = (p.expandedimage) ? p.expandedimage : (h.expandedimage) ? h.expandedimage : "",
        b = (p.collapsedimage) ? p.collapsedimage : (h.collapsedimage) ? h.collapsedimage : "";
      if (p.item.children && p.item.children.length > 0) {
        if ($KU.hasClassName(o.lastChild, "hide")) {
          $KU.removeClassName(o.lastChild, "hide");
          $KU.addClassName(o.lastChild, "show");
          if (o.firstChild.tagName === "TABLE" && n) {
            var l = o.firstChild.firstChild.firstChild;
            if (l.childNodes.length === 2) {
              l.firstChild.firstChild.src = $KU.getImageURL(n)
            }
          }
        } else {
          $KU.removeClassName(o.lastChild, "show");
          $KU.addClassName(o.lastChild, "hide");
          if (o.firstChild.tagName === "TABLE" && b) {
            var l = o.firstChild.firstChild.firstChild;
            if (l.childNodes.length === 2) {
              l.firstChild.firstChild.src = $KU.getImageURL(b)
            }
          }
        }
      }
    } else {
      if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
        d.style.visibility = "hidden"
      } else {
        h.activemenu = h.selectedindex[0].toString()
      }
      var m = (d.firstChild.querySelectorAll) ? d.firstChild.querySelectorAll("ul") : document.querySelectorAll("#" + d.id + " ul");
      for (var g = 0; g < m.length; g++) {
        (function(i) {
          if (!$KU.hasClassName(i, "hidden")) {
            $KU.addClassName(i, "hidden")
          }
        })(m[g])
      }
    }
    var a = kony.events.executeBoxEvent(e, h.selecteditem, h);
    var c = (!a) ? $KU.returnEventReference(h.onclick) : null;
    if (h.onclick && c) {
      c(h, h.selectedindex, h.selecteditem)
    }
    if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      h.activemenu = "";
      h.selectedindex = null
    }
  },
  setData: function(a, b) {
    if ($KU.isArray(b)) {
      a.canUpdateUI = false;
      a.data = b;
      $KW.MenuContainer.updateView(a, "data", b);
      a.canUpdateUI = true
    }
  },
  setDataAt: function(c, f, b) {
    var d = $KW.MenuContainer.getDetails(c, b);
    for (var a in d.item) {
      if (d.item.hasOwnProperty(a)) {
        d.item[a] = f[a]
      }
    }
    if (!d.node) {
      return
    }
    var e = document.createElement("div");
    e.innerHTML = ($KU.isArray(f.children) && f.children.length > 0) ? $KW.MenuContainer.renderMenu(c, f, c.context, b) : $KW.MenuContainer.renderItem(c, f, c.context, b);
    d.node.parentNode.replaceChild(e.firstChild, d.node)
  },
  addAll: function(b, e) {
    if ($KU.isArray(e)) {
      var d = $KU.getNodeByModel(b),
        a = document.createElement("div");
      d = d.firstChild;
      for (var c = 0; c < e.length; c++) {
        (function(g, f) {
          b.data.push(g);
          a.innerHTML = ($KU.isArray(g.children) && g.children.length > 0) ? $KW.MenuContainer.renderMenu(b, g, b.context, (b.data.length - 1)) : $KW.MenuContainer.renderItem(b, g, b.context, (b.data.length - 1));
          d.insertBefore(a.firstChild, d.lastChild)
        })(e[c], c)
      }
    }
  },
  addDataAt: function(b, e, a) {
    var c = $KW.MenuContainer.getDetails(b, a, "add");
    if (typeof e === "object" && $KU.isArray(c.parent)) {
      if (c.position === "append") {
        c.parent.push(e)
      } else {
        if (c.position === "after") {
          c.parent[c.index].push(e)
        } else {
          if (c.position === "before") {
            c.parent.splice(c.index, 0, e)
          }
        }
      }
      if (c.node) {
        var d = document.createElement("div");
        d.innerHTML = ($KU.isArray(e.children)) ? $KW.MenuContainer.renderMenu(b, e, b.context, a) : $KW.MenuContainer.renderItem(b, e, b.context, a);
        if (c.position === "append") {
          c.node.insertBefore(d.firstChild, c.node.lastChild)
        } else {
          if (c.position === "after") {
            c.node.parentNode.insertBefore(d.firstChild, c.node.nextSibling)
          } else {
            if (c.position === "before") {
              c.node.parentNode.insertBefore(d.firstChild, c.node)
            }
          }
        }
        $KW.MenuContainer.adjustIndexes(b)
      }
    }
  },
  removeAll: function(a) {
    $KW.MenuContainer.setData(a, [])
  },
  removeAt: function(b, a) {
    var c = $KW.MenuContainer.getDetails(b, a);
    if ($KU.isArray(c.parent)) {
      c.parent.splice(c.index, 1);
      c.node.parentNode.removeChild(c.node);
      $KW.MenuContainer.adjustIndexes(b)
    }
  },
  hover: function(q, l, a, b) {
    var o = document.getElementById(l);
    var p = o.getAttribute("kdisabled");
    if (p != null && p == "true") {
      return
    } else {
      a = parseInt(a, 10);
      if (a === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
        return
      }
      if (q.lastChild.childNodes.length > 1) {
        var m = q.getAttribute("menuindex");
        if ((a === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW && b === "horizontal" && m.length === 1) || (a === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
          q.lastChild.style.top = "100%";
          q.lastChild.style.left = "0%"
        } else {
          q.lastChild.style.top = "0%";
          q.lastChild.style.left = "100%"
        }
        if (a === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
          var c = document.getElementById(l),
            k = $KU.getModelByNode(c);
          for (var n = 0; n < (q.lastChild.childNodes.length - 1); n++) {
            (function(j, s) {
              var t = $KW.MenuContainer.getDetails(k, m + "," + j, "item"),
                r = (t.metaInfo && t.metaInfo.width) ? t.metaInfo.width : (k.width) ? k.width : 20,
                e = (t.metaInfo && t.metaInfo.subMenuWidth) ? t.metaInfo.subMenuWidth : (k.subMenuWidth) ? k.subMenuWidth : 200;
              s.style.width = Math.ceil((c.offsetWidth * r) / 100) + "px"
            })(n, q.lastChild.childNodes[n])
          }
        }
        $KU.removeClassName(q.lastChild, "hidden");
        var f = q.lastChild.children;
        if (f) {
          for (var g = 0; g < f.length - 1; g++) {
            if (f[g]) {
              var h = f[g].children[0].getElementsByTagName("img");
              if (h) {
                for (var d = 0; d < h.length; d++) {
                  h[d].style.visibility = "visible"
                }
              }
            }
          }
        }
      }
    }
  },
  hout: function(a, g, e, c) {
    if (e === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW.toString()) {
      return
    }
    if (a.lastChild.childNodes.length > 1) {
      $KU.addClassName(a.lastChild, "hidden");
      var b = a.lastChild.children;
      if (b) {
        for (var f = 0; f < b.length - 1; f++) {
          if (b[f]) {
            var h = b[f].children[0].getElementsByTagName("img");
            if (h) {
              for (var d = 0; d < h.length; d++) {
                h[d].style.visibility = "hidden"
              }
            }
          }
        }
      }
    }
  },
  expand: function(d, e, b) {
    if (d.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    if (typeof e === "string" || typeof e === "number") {
      e = e.toString().split(",")
    }
    if (!$KU.isArray(e)) {
      return
    }
    var f = $KU.getNodeByModel(d).firstChild,
      k = null,
      g = null,
      l = $KW.MenuContainer.getDetails(d, e),
      j = (l.expandedimage) ? l.expandedimage : (d.expandedimage) ? d.expandedimage : "",
      a = (l.collapsedimage) ? l.collapsedimage : (d.collapsedimage) ? d.collapsedimage : "";
    for (var c = 0; c < e.length; c++) {
      (function(i) {
        f = f.childNodes[i].lastChild;
        if (f.childNodes.length > 1) {
          $KU.removeClassName(f, "hide");
          $KU.addClassName(f, "show");
          k = f.parentNode;
          if (k.firstChild.tagName === "TABLE" && j) {
            g = k.firstChild.firstChild.firstChild;
            if (g.childNodes.length === 2) {
              g.firstChild.firstChild.src = $KU.getImageURL(j)
            }
          }
        }
      })(e[c])
    }
    if (b === true) {
      var h = f.querySelectorAll("ul.hide");
      for (var c = 0; c < h.length; c++) {
        (function(i) {
          if (i.childNodes.length > 1) {
            $KU.removeClassName(i, "hide");
            $KU.addClassName(i, "show");
            k = i.parentNode;
            if (k.firstChild.tagName === "TABLE" && j) {
              g = k.firstChild.firstChild.firstChild;
              if (g.childNodes.length === 2) {
                g.firstChild.firstChild.src = $KU.getImageURL(j)
              }
            }
          }
        })(h[c])
      }
    }
  },
  collapse: function(d, e, b) {
    if (d.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    if (typeof e === "string" || typeof e === "number") {
      e = e.toString().split(",")
    }
    if (!$KU.isArray(e)) {
      return
    }
    var f = $KU.getNodeByModel(d).firstChild,
      k = null,
      g = null,
      l = $KW.MenuContainer.getDetails(d, e),
      j = (l.expandedimage) ? l.expandedimage : (d.expandedimage) ? d.expandedimage : "",
      a = (l.collapsedimage) ? l.collapsedimage : (d.collapsedimage) ? d.collapsedimage : "";
    for (var c = 0; c < e.length; c++) {
      (function(i) {
        f = f.childNodes[i].lastChild;
        if (f.childNodes.length > 1) {
          $KU.removeClassName(f, "show");
          $KU.addClassName(f, "hide");
          k = f.parentNode;
          if (k.firstChild.tagName === "TABLE" && a) {
            g = k.firstChild.firstChild.firstChild;
            if (g.childNodes.length === 2) {
              g.firstChild.firstChild.src = $KU.getImageURL(a)
            }
          }
        }
      })(e[c])
    }
    if (b === true) {
      var h = f.querySelectorAll("ul.show");
      for (var c = 0; c < h.length; c++) {
        (function(i) {
          if (i.childNodes.length > 1) {
            $KU.removeClassName(i, "show");
            $KU.addClassName(i, "hide")
          }
          k = i.parentNode;
          if (k.firstChild.tagName === "TABLE" && a) {
            g = k.firstChild.firstChild.firstChild;
            if (g.childNodes.length === 2) {
              g.firstChild.firstChild.src = $KU.getImageURL(a)
            }
          }
        })(h[c])
      }
    }
  },
  expandAll: function(a) {
    if (a.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    var d = $KU.getNodeByModel(a);
    var c = (d.firstChild.querySelectorAll) ? d.firstChild.querySelectorAll("ul.hide") : document.firstChild.querySelectorAll("#" + d.id + " ul.hide");
    for (var b = 0; b < c.length; b++) {
      (function(e) {
        if (e.childNodes.length > 1) {
          $KU.removeClassName(e, "hide");
          $KU.addClassName(e, "show")
        }
      })(c[b])
    }
  },
  collapseAll: function(b, a) {
    if (b.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    var e = $KU.getNodeByModel(b);
    var d = (e.firstChild.querySelectorAll) ? e.firstChild.querySelectorAll("ul.show") : document.firstChild.querySelectorAll("#" + e.id + " ul.show");
    for (var c = 0; c < d.length; c++) {
      (function(f) {
        if (f.childNodes.length > 1) {
          $KU.removeClassName(f, "show");
          $KU.addClassName(f, "hide")
        }
      })(d[c])
    }
  },
  getDetails: function(d, g, h) {
    if (typeof g === "string" || typeof g === "number") {
      g = g.toString().split(",")
    }
    if (!$KU.isArray(g)) {
      return
    }
    var j = d.data,
      l = null,
      b = "",
      f = "before",
      e = [],
      a = $KU.getNodeByModel(d),
      k = null;
    for (var c = 0; c < g.length; c++) {
      g[c] = parseInt(g[c], 10);
      if (h === "add" && g[c] < 0) {
        g[c] = 0
      }
      l = j[g[c]];
      if (l) {
        e.push(g[c]);
        k = (l.template) ? l.template : d.menutemplate;
        if (c < (g.length - 1)) {
          j = l.children
        }
      } else {
        break
      }
    }
    if (!l) {
      if (h === "add") {
        f = (e.length === g.length) ? "after" : "append"
      } else {
        return null
      }
    }
    if (!h || h === "add") {
      if (a) {
        a = (a.querySelectorAll) ? a.querySelectorAll('li[menuindex="' + e.join(",") + '"]')[0] : document.querySelectorAll("#" + a.id + ' li[menuindex="' + e.join(",") + '"]')[0]
      }
      if (f === "append") {
        if (!a && !e.length && g.length === 1 && g[0] >= d.data.length) {
          a = $KU.getNodeByModel(d).firstChild
        } else {
          a = a.lastChild
        }
      }
    }
    if (h === "add") {
      return {
        parent: j,
        item: l,
        template: k,
        index: e[e.length - 1],
        loop: e,
        position: f,
        node: a
      }
    } else {
      if (h === "item") {
        return l
      } else {
        if (h === "template") {
          return k
        } else {
          return {
            parent: j,
            item: l,
            node: a,
            index: e[e.length - 1]
          }
        }
      }
    }
  },
  updateActiveMenu: function(b, d, h) {
    if (b.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      return
    }
    if (b.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      h = [h[0]];
      d = [d[0]]
    }
    var c = $KU.getNodeByModel(b),
      a = (c.querySelectorAll) ? c.querySelectorAll('li[menuindex="' + h.join(",") + '"]')[0] : document.querySelectorAll("#" + c.id + ' li[menuindex="' + h.join(",") + '"]')[0],
      e = (c.querySelectorAll) ? c.querySelectorAll('li[menuindex="' + d.join(",") + '"]')[0] : document.querySelectorAll("#" + c.id + ' li[menuindex="' + d.join(",") + '"]')[0],
      g = $KW.MenuContainer.getDetails(b, h, "template"),
      f = $KW.MenuContainer.getDetails(b, d, "template");
    if (a) {
      $KU.removeClassName(a.firstChild, b.activeskin)
    }
    if (g && g.skin) {
      $KU.addClassName(a.firstChild, g.skin)
    }
    if (f && f.skin) {
      $KU.removeClassName(e.firstChild, f.skin)
    }
    if (e) {
      $KU.addClassName(e.firstChild, b.activeskin)
    }
  },
  adjustIndexes: function(b, d, a) {
    d = (!d) ? $KU.getNodeByModel(b).firstChild : d;
    if (typeof a === "undefined") {
      a = ""
    } else {
      if ($KU.isArray(a)) {
        a = a.join(",")
      }
    }
    if (typeof a === "string" || typeof a === "number") {
      a = a.toString()
    }
    for (var c = 0; c < (d.childNodes.length - 1); c++) {
      var e = (a) ? a + "," + c : "" + c;
      d.childNodes[c].setAttribute("menuindex", e);
      $KW.MenuContainer.adjustIndexes(b, d.childNodes[c].lastChild, e)
    }
  }
};

$KW.Slider = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Slider", $KW.Slider.changeOrientation)
  },
  initializeView: function(d) {
    var a = document.querySelectorAll("#" + d + " img[kwttype ='kSlider']");
    for (var b = 0; b < a.length; b++) {
      this.attachSliderEvents(a[b])
    }
    var c = document.querySelectorAll("#" + d + " div[kwttype ='kSlider']");
    for (var b = 0; b < c.length; b++) {
      kony.events.addEventListener(c[b], "click", $KW.Slider.slideClick)
    }
  },
  attachSliderEvents: function(a) {
    kony.events.addEventListener(a, "touchstart", $KW.Slider.sliderStart);
    kony.events.addEventListener(a, "mousedown", $KW.Slider.sliderStart)
  },
  updateView: function(g, d, c, a) {
    var e = $KU.getNodeByModel(g);
    if (!e) {
      return
    }
    switch (d) {
      case "text":
        e.value = c;
        break;
      case "isvisible":
        e.value = c;
        break;
      case "leftskin":
        g.leftskin = c;
        $KU.removeClassName(e, a);
        $KU.addClassName(e, c);
        break;
      case "rightskin":
        g.rightskin = c;
        $KU.removeClassName(e.parentNode, a);
        $KU.addClassName(e.parentNode, c);
        break;
      case "thumbimage":
        e.childNodes[0].src = $KU.getImageURL(c);
        e.childNodes[0].setAttribute("thumbimage", $KU.getImageURL(c));
        break;
      case "focusthumbimage":
        e.childNodes[0].setAttribute("focusimage", $KU.getImageURL(c));
        break;
      case "selectedvalue":
        $KW.Slider.sliderUpdate(e, c);
        break;
      case "containerweight":
        this.imgLoad(e.firstChild);
        break;
      case "minlabel":
        var b = document.getElementById(e.id + "_minLabel");
        b && (b.innerHTML = c);
        break;
      case "maxlabel":
        var f = document.getElementById(e.id + "_maxLabel");
        f && (f.innerHTML = c);
        break;
      case "minlabelskin":
        var b = document.getElementById(e.id + "_minLabel");
        $KU.removeClassName(b, a);
        $KU.addClassName(b, c);
        break;
      case "maxlabelskin":
        var f = document.getElementById(e.id + "_maxLabel");
        $KU.removeClassName(f, a);
        $KU.addClassName(f, c);
        break
    }
  },
  render: function(g, b) {
    if (!g.buiskin) {
      g.buiskin = g.blockeduiskin
    }
    var h = "";
    var a = g.pf + "_" + g.id;
    g.thickness = g.thickness || $KU.isIDevice && 2 || 5;
    var l = g.leftskin || g.leftSkin || "konysliderleft";
    var i = g.rightskin || g.rightSkin || "konysliderright";
    var f = $KW.skins.getVisibilitySkin(g);
    var k = g.max - g.min;
    var d = $KU.getImageURL(g.thumbimage) || $KU.getImageURL("slider.png");
    var j = $KU.getImageURL(g.focusthumbimage) || $KU.getImageURL("sliderfocus.png");
    var c = g.minlabel || "";
    var e = g.maxlabel || "";
    g.view = g.view || "default";
    g.orientation = g.orientation || "horizontal";
    if (g.orientation == "horizontal") {
      h += "<div tabindex='0'style=\" " + $KW.skins.getMarginSkin(g, b) + '" class = "' + $KW.skins.getMarAdjustedContainerWeightSkin(g, 100) + f + '">';
      h += '<div min= "' + g.min + '" max="' + g.max + '" diff ="' + k + '" step ="' + g.step + '" kwttype ="kSlider" ';
      h += 'id="' + a + '_outer" class="' + i + '"  style=" height: ' + g.thickness + 'px;"';
      h += ' kformname="' + g.pf + '">';
      h += '<div role="slider" aria-valuenow="' + g.selectedvalue + '"  align="left"' + $KW.Utils.getBaseHtml(g, b) + ' class="' + l + '"';
      h += 'style= "vertical-align:middle;  position: relative; ">';
      h += '<img onload = "$KW.Slider.imgLoad(this, false)" kwttype ="kSlider" kformname="' + g.pf + '" id ="' + g.pf + "_" + g.id + '_image" src ="' + d + '" thumbimage="' + d + '" focusimage ="' + j + '"style="  position: relative;  vertical-align:top;" ></img>';
      h += "</div></div>";
      h += '<div style="overflow:auto;position:relative;">';
      h += '<label id="' + a + '_minLabel" style="float: left; "class="' + g.minlabelskin + '" >' + c + "</label>";
      h += '<label id="' + a + '_maxLabel" style="float: right; "class="' + g.maxlabelskin + '" >' + e + "</label>";
      h += "</div>";
      h += "</div>"
    } else {
      h += '<div style="margin: 5%; width:90%;" class="' + f + '">';
      h += '<div style="margin-bottom: 2px;" >';
      h += '<label id="' + a + '_maxLabel" class="' + g.maxlabelskin + '" >' + e + "</label>";
      h += "</div>";
      h += '<div min= "' + g.min + '" max="' + g.max + '" diff ="' + k + '" step ="' + g.step + '" kwttype ="kSlider" ';
      h += 'id="' + a + '_outer" class="' + i + '"  style="height: 150px; width: ' + g.thickness + 'px;"';
      h += ' kformname="' + g.pf + '">';
      h += '<div  align="left"' + $KW.Utils.getBaseHtml(g, b) + ' class="' + l + '"';
      h += 'style= "vertical-align:middle;  position: relative; ">';
      h += '<img onload = "$KW.Slider.imgLoad(this, false)" kwttype ="kSlider" kformname="' + g.pf + '" id ="' + a + '_image" src ="' + d + '" thumbimage="' + d + '" focusimage ="' + j + '"style="  position: relative;  vertical-align:top;"></img>';
      h += "</div></div>";
      h += '<div style="margin-top: 2px;" >';
      h += '<label id="' + a + '_minLabel" class="' + g.minlabelskin + '" >' + c + "</label>";
      h += "</div>";
      h += "</div>"
    }
    g.context = b;
    return h
  },
  completeMove: function(c) {
    if (!c) {
      c = window.event
    }
    kony.events.preventDefault(c);
    var b = kony.globals.__activeSlider;
    var n = b.split("_");
    b = n[0] + "_" + n[1];
    var i = document.getElementById(b);
    var o = $KU.getModelByNode(i);
    var k = c.touches && c.touches[0] || c;
    var q = i.firstChild;
    var m = i.parentNode;
    q.src = q.getAttribute("focusimage");
    if (o.orientation == "horizontal") {
      var g = q.offsetWidth / 2;
      var h = (k.pageX || k.clientX) - g;
      var l = m.offsetWidth;
      var j = $KW.Utils.getPosition(m).left - g;
      if (h < (j)) {
        h = j
      }
      if (h >= (l + j)) {
        h = l + j
      }
      var e = Math.round((h - j) / o.stepwidth);
      if (e * o.step <= (o.max - o.min)) {
        o.selectedvalue = o.min + (e * o.step);
        var a = Math.round(e * o.stepwidth);
        i.style.width = (g + a) + "px";
        var p = i.parentNode.offsetWidth;
        var d = g + a;
        i.style.width = (d > p ? p : d) + "px";
        q.style.left = (a - g) + "px"
      } else {
        o.selectedvalue = o.max;
        i.style.width = (l + g) + "px";
        q.style.left = (l + g) + "px"
      }
    } else {
      var g = q.offsetHeight / 2;
      var h = (k.pageY || k.clientY) - g;
      var l = m.offsetHeight;
      var j = $KW.Utils.getOffset(m).top - g;
      if (h < (j)) {
        h = j
      }
      if (h >= (l + j)) {
        h = l + j
      }
      var e = Math.round((h - j) / o.stepwidth);
      if (e * o.step <= (o.max - o.min)) {
        o.selectedvalue = o.min + (e * o.step);
        var a = Math.round(e * o.stepwidth);
        i.style.height = (g + a) + "px";
        q.style.top = (a - g) + "px"
      }
    }
    if (o.view != "progress") {
      var f = $KU.returnEventReference(o.onslide);
      if (f) {
        f.call(o, o, o.selectedvalue)
      }
    }
  },
  sliderStart: function(b) {
    if (!b) {
      b = window.event
    }
    var c = b.target || b.srcElement;
    kony.globals.__activeSlider = c.parentNode.id;
    var a = $KU.getModelByNode(c.parentNode);
    if (a.disabled != true) {
      kony.events.addEventListener(document, "mousemove", $KW.Slider.completeMove);
      kony.events.addEventListener(document, "mouseup", $KW.Slider.completeEnd);
      kony.events.addEventListener(document, "touchmove", $KW.Slider.completeMove);
      kony.events.addEventListener(document, "touchend", $KW.Slider.completeEnd);
      kony.events.preventDefault(b)
    }
  },
  completeEnd: function(a) {
    if (!a) {
      a = window.event
    }
    var b = a.target || a.srcElement;
    kony.events.removeEventListener(document, "mousemove", $KW.Slider.completeMove);
    kony.events.removeEventListener(document, "touchmove", $KW.Slider.completeMove);
    $KW.Slider.sliderEnd(a)
  },
  slideClick: function(b) {
    if (!b) {
      b = window.event
    }
    var c = b.target || b.srcElement;
    kony.globals.__activeSlider = c.id;
    if (!c.firstChild) {
      return
    }
    var a = $KU.getModelByNode(c.firstChild) || $KU.getModelByNode(c);
    if (a.disabled != true && a && a.view != "progress") {
      console.log(c.id);
      kony.events.addEventListener(c, "click", $KW.Slider.completeMove)
    }
  },
  sliderEnd: function(e) {
    if (!e) {
      e = window.event
    }
    var g = kony.globals.__activeSlider;
    if (g == undefined) {
      return
    }
    var d = g.split("_");
    g = d[0] + "_" + d[1];
    var c = document.getElementById(g);
    if (c == undefined) {
      return
    }
    kony.events.removeEventListener(document, "mouseup", $KW.Slider.completeEnd);
    kony.events.removeEventListener(document, "touchend", $KW.Slider.completeEnd);
    var b = $KU.getModelByNode(c);
    if (b.view != "progress") {
      var a = $KU.returnEventReference(b.onselection);
      if (a) {
        a.call(b, b);
        $KU.onEventHandler(b)
      }
    }
    var f = c.firstChild;
    f.src = f.getAttribute("thumbimage");
    return
  },
  changeOrientation: function(c) {
    var a = document.querySelectorAll("img[kwttype ='kSlider']");
    for (var b = 0; b < a.length; b++) {
      $KW.Slider.imgLoad(a[b])
    }
  },
  imgLoad: function(f) {
    if (!f.complete) {
      return
    }
    var a = f.parentNode.parentNode;
    var h = $KU.getModelByNode(f.parentNode);
    if (!h) {
      return
    }
    if (h.view == "progress") {
      f.style.display = "none"
    }
    var k = (h.max - h.min) / h.step;
    if (h.orientation == "horizontal") {
      var g = f.offsetHeight - h.thickness;
      var c = f.width;
      f.style.top = (-(g) / 2) + "px";
      if (h.view == "progress") {
        f.parentNode.style.width = 0 + "px"
      } else {
        f.parentNode.style.width = (c / 2) + "px"
      }
      f.parentNode.style.height = h.thickness + "px";
      var e = a.offsetWidth;
      var d = a.parentNode;
      var l = d.offsetHeight;
      if ($KU.isFlexWidget(h) && l > g) {
        a.style.position = "relative";
        var j = 0;
        if (h.minlabel || h.maxlabel) {
          j = a.nextSibling.offsetHeight
        }
        var i = (l - j - (a.offsetHeight / 2)) / 2;
        a.style.top = i + "px";
        a.style.marginTop = a.style.marginBottom = "";
        if (h.minlabel || h.maxlabel) {
          a.nextSibling.style.top = i + 3 + "px"
        }
      } else {
        if (g > 0) {
          a.style.marginTop = (g / 2) + "px";
          a.style.marginBottom = (g / 2) + "px"
        }
      }
      d.style.paddingLeft = (c / 2) + "px";
      d.style.paddingRight = (c / 2) + "px";
      e = d.childNodes[0].offsetWidth
    } else {
      var g = f.height;
      var c = f.offsetWidth - h.thickness;
      f.style.left = -((c) / 2) + "px";
      if (h.view == "progress") {
        f.parentNode.style.height = "0px"
      } else {
        f.parentNode.style.height = (g / 2) + "px"
      }
      f.parentNode.style.width = h.thickness + "px";
      var e = a.offsetHeight
    }
    var b = e / k;
    h.noofsteps = k;
    h.stepwidth = b;
    h.imgwt = c;
    if (h.selectedvalue > 0) {
      $KW.Slider.sliderLoad(f.parentNode)
    }
  },
  sliderLoad: function(a) {
    var e = 500;
    var i = $KU.getModelByNode(a);
    var j = a.firstChild;
    if (i.orientation == "horizontal") {
      var c = j.offsetWidth / 2;
      var h = a.parentNode;
      var g = h.offsetWidth;
      var f = $KW.Utils.getOffset(h).left - c;
      var b = i.selectedvalue - i.min;
      var d = (b * i.stepwidth) / i.step;
      if (i.view == "progress") {
        if (kony.appinit.useTransition) {
          a.style[vendor + "Transition"] = "width " + e + "ms ease";
          a.style.width = (d + c) + "px"
        } else {
          $(a).animate({
            width: (d + c) + "px"
          }, e)
        }
      } else {
        a.style.width = (d + c) + "px"
      }
      j.style.left = (d - c) + "px"
    } else {
      var c = j.offsetHeight / 2;
      var h = a.parentNode;
      var g = h.offsetHeight;
      var f = $KW.Utils.getOffset(h).top - c;
      var b = i.selectedvalue - i.min;
      var d = (b * i.stepwidth) / i.step;
      if (i.view == "progress") {
        if (kony.appinit.useTransition) {
          a.style[vendor + "Transition"] = "height " + e + "ms ease";
          a.style.height = (d + c) + "px"
        } else {
          $(a).animate({
            height: (d + c) + "px"
          }, e)
        }
      } else {
        a.style.height = (d + c) + "px"
      }
      j.style.top = (d - c) + "px"
    }
  },
  sliderUpdate: function(b, d) {
    var a = $KU.getModelByNode(b);
    if (d >= a.max) {
      d = a.max
    }
    if (d <= a.min) {
      d = a.min
    }
    var c = d % a.step;
    if (c != 0) {
      d = a.step * Math.round(d / a.step)
    }
    a.selectedvalue = d;
    $KW.Slider.sliderLoad(b)
  },
  adjustSliders: function(a) {
    var b = document.querySelectorAll("#" + formId + " img[kwttype ='kSlider']");
    for (var c = 0; c < sliderElements.length; c++) {
      var d = sliderElements[c];
      $KW.Slider.imgLoad(d)
    }
  },
  animSlider: function(b, g, i) {
    if (!b) {
      return 0
    }
    var a = $KU.getNodeByModel(g);
    var h = a.childNodes[0].naturalWidth;
    var e = {
      value: parseFloat(b),
      unit: $KU.getUnit(b)
    };
    var b = $KU.getValueByParentFrame(g, e, "x");
    var b = parseInt(b, 10);
    var f = g.selectedvalue;
    b = (b - h) / 100;
    var c = f - g.min;
    var d = (c * b) / g.step;
    if (i == "width") {
      return (d + (h / 2)) + "px"
    } else {
      return (d - (h / 2)) + "px"
    }
  }
};
kony.inherits = function(c, b) {
  function a() {}
  a.prototype = b.prototype;
  c.prototype = new a();
  c.prototype.constructor = c;
  c.baseConstructor = b;
  c.superClass = b.prototype
};
kony.ui = {
  Widget: function(f, n, i) {
    if (arguments.length < 3) {
      throw new KonyError(101, "Error", "Invalid number of arguments")
    }
    if (f.id === undefined || f.id === null || f.id === "") {
      throw new KonyError(1102, "WidgetError", "Widget cannot be created due to invalid input data.")
    }
    this.id = f.id;
    this.focusskin = f.focusSkin;
    this.isvisible = f.isVisible === undefined ? true : (f.isVisible && true);
    f.i18n_text && (this.i18n_text = f.i18n_text);
    this.containerweight = n.containerWeight || 0;
    this.contentalignment = n.contentAlignment;
    this.widgetalignment = n.widgetAlignment;
    this.marginInPixel = n.marginInPixel;
    this.paddingInPixel = n.paddingInPixel;
    this.blockeduiskin = i.blockedUISkin;
    this.hexpand = (typeof n.hExpand == "undefined") ? false : n.hExpand;
    this.enabled = false;
    this.canUpdateUI = true;
    this.onclick = f.onClick;
    this.accessibilityconfig = f.accessibilityConfig;
    defineGetter(this, "accessibilityConfig", function() {
      return this.accessibilityconfig
    });
    defineSetter(this, "accessibilityConfig", function(q) {
      var p = this.accessibilityconfig;
      this.accessibilityconfig = q;
      kony.model.updateView(this, "accessibilityConfig", q, p)
    });
    var g = (!n.margin) ? [0, 0, 0, 0] : n.margin;
    defineGetter(this, "margin", function() {
      return g
    });
    defineSetter(this, "margin", function(p) {
      g = p;
      $KU.isArray(p) && kony.model.updateView(this, "margin", p)
    });
    var k = (!n.padding) ? [0, 0, 0, 0] : n.padding;
    defineGetter(this, "padding", function() {
      return k
    });
    defineSetter(this, "padding", function(r) {
      var q = k;
      k = r;
      $KU.isArray(r) && kony.model.updateView(this, "padding", r);
      var p = $KU.inArray($KU.contentDrivenWidgets, this.wType)[0];
      p && $KU.setLayoutConfig(this, r, q)
    });
    var o = f.skin;
    defineGetter(this, "skin", function() {
      return o
    });
    defineSetter(this, "skin", function(r) {
      var q = o;
      o = r;
      kony.model.updateView(this, "skin", r, q);
      var p = $KU.inArray($KU.contentDrivenWidgets, this.wType)[0];
      p && $KU.setLayoutConfig(this, r, q)
    });
    this.onDrag = f.onDrag;
    this.frame = {};
    this.layoutConfig = {
      self: true,
      children: false
    };
    var e = f.left;
    defineGetter(this, "left", function() {
      return e
    });
    defineSetter(this, "left", function(q) {
      var p = e;
      e = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var l = f.right;
    defineGetter(this, "right", function() {
      return l
    });
    defineSetter(this, "right", function(q) {
      var p = l;
      l = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var j = f.top;
    defineGetter(this, "top", function() {
      return j
    });
    defineSetter(this, "top", function(q) {
      var p = j;
      j = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var b = f.bottom;
    defineGetter(this, "bottom", function() {
      return b
    });
    defineSetter(this, "bottom", function(q) {
      var p = b;
      b = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var c = f.width;
    defineGetter(this, "width", function() {
      return c
    });
    defineSetter(this, "width", function(q) {
      var p = c;
      c = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var m = f.height;
    defineGetter(this, "height", function() {
      return m
    });
    defineSetter(this, "height", function(q) {
      var p = m;
      m = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.minwidth = f.minWidth;
    defineGetter(this, "minWidth", function() {
      return this.minwidth
    });
    defineSetter(this, "minWidth", function(q) {
      var p = this.minwidth;
      this.minwidth = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.maxwidth = f.maxWidth;
    defineGetter(this, "maxWidth", function() {
      return this.maxwidth
    });
    defineSetter(this, "maxWidth", function(q) {
      var p = this.maxwidth;
      this.maxwidth = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.minheight = f.minHeight;
    defineGetter(this, "minHeight", function() {
      return this.minheight
    });
    defineSetter(this, "minHeight", function(q) {
      var p = this.minheight;
      this.minheight = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.maxheight = f.maxHeight;
    defineGetter(this, "maxHeight", function() {
      return this.maxheight
    });
    defineSetter(this, "maxHeight", function(q) {
      var p = this.maxheight;
      this.maxheight = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.centerx = f.centerX;
    defineGetter(this, "centerX", function() {
      return this.centerx
    });
    defineSetter(this, "centerX", function(q) {
      var p = this.centerx;
      this.centerx = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.centery = f.centerY;
    defineGetter(this, "centerY", function() {
      return this.centery
    });
    defineSetter(this, "centerY", function(q) {
      var p = this.centery;
      this.centery = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.zindex = f.zIndex || 1;
    defineGetter(this, "zIndex", function() {
      return this.zindex
    });
    defineSetter(this, "zIndex", function(p) {
      this.zindex = p;
      kony.model.updateView(this, "zindex", p)
    });
    this.dolayout = f.doLayout;
    defineGetter(this, "doLayout", function() {
      return this.dolayout
    });
    defineSetter(this, "doLayout", function(p) {
      this.dolayout = p
    });
    var h = f.opacity;
    defineGetter(this, "opacity", function() {
      return h
    });
    defineSetter(this, "opacity", function(p) {
      h = p;
      kony.model.updateView(this, "opacity", p)
    });
    var d = f.transform;
    defineGetter(this, "transform", function() {
      return d
    });
    defineSetter(this, "transform", function(p) {
      d = p;
      kony.model.updateView(this, "transform", p)
    });
    var a = f.anchorPoint;
    defineGetter(this, "anchorPoint", function() {
      return this.anchorpoint
    });
    defineSetter(this, "anchorPoint", function(p) {
      a = p;
      kony.model.updateView(this, "anchorpoint", p)
    });
    this.backgroundcolor = f.backgroundColor;
    defineGetter(this, "backgroundColor", function() {
      return this.backgroundcolor
    });
    defineSetter(this, "backgroundColor", function(p) {
      this.backgroundcolor = p;
      kony.model.updateView(this, "backgroundcolor", p)
    });
    this.borderwidth = f.borderWidth;
    defineGetter(this, "borderWidth", function() {
      return this.borderwidth
    });
    defineSetter(this, "borderWidth", function(p) {
      this.borderwidth = p;
      kony.model.updateView(this, "borderwidth", p)
    });
    this.bordercolor = f.borderColor;
    defineGetter(this, "borderColor", function(p) {
      return this.bordercolor
    });
    defineSetter(this, "borderColor", function(p) {
      this.bordercolor = p;
      kony.model.updateView(this, "bordercolor", p)
    });
    this.cornerradius = f.cornerRadius;
    defineGetter(this, "cornerRadius", function() {
      return this.cornerradius
    });
    defineSetter(this, "cornerRadius", function(p) {
      this.cornerradius = p;
      kony.model.updateView(this, "cornerradius", p)
    });
    kony.ui.Widget.prototype.setGetterSetter.call(this);
    this.onTouchStart = f.onTouchStart;
    this.onTouchMove = f.onTouchMove;
    this.onTouchEnd = f.onTouchEnd;
    this.layouttype = n.layoutType || kony.flex.VBOX_LAYOUT;
    this.layoutmeta = n.layoutMeta;
    this.gridCell = n.gridCell;
    this.onhover = i.onHover;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      this.margin = g;
      this.padding = k;
      this.skin = o;
      this.accessibilityConfig = this.accessibilityconfig;
      this.centerx = f.centerX;
      this.centery = f.centerY;
      this.top = j;
      this.right = l;
      this.bottom = b;
      this.left = e;
      this.height = m;
      this.width = c;
      this.zindex = f.zIndex;
      this.minwidth = f.minWidth;
      this.maxwidth = f.maxWidth;
      this.minheight = f.minHeight;
      this.maxheight = f.maxHeight
    }
  },
  ContainerWidget: function(c, b, a) {
    kony.ui.ContainerWidget.baseConstructor.call(this, c, b, a);
    if (this.name != "kony.ui.FlexContainer") {
      this.orientation = c.orientation || constants.BOX_LAYOUT_HORIZONTAL
    }
    this.percent = (b.percent === undefined) ? true : b.percent;
    if (this.percent === false) {
      this.widgetdirection = b.layoutAlignment
    }
    this.ownchildrenref = [];
    this.children = []
  },
  GroupWidget: function(c, b, a) {
    kony.ui.GroupWidget.baseConstructor.call(this, c, b, a);
    this.onselection = c.onSelection;
    this.masterdata = c.masterData;
    this.masterdatamap = c.masterDataMap;
    this.selectedkeyvalue = null;
    this.selectedkey = c.selectedKey || null;
    kony.ui.GroupWidget.prototype.setGetterSetter.call(this)
  },
  createAnimation: function(a) {
    return new $KW.Animator(a)
  },
  makeAffineTransform: function() {
    return new $KW.Transform()
  },
  enableCapturingAnimationRuntimeData: function() {
    $KG.appbehaviors.captureAniamtionData = true
  },
  disableCapturingAnimationRuntimeData: function() {
    $KG.appbehaviors.captureAniamtionData = false
  }
};
kony.inherits(kony.ui.GroupWidget, kony.ui.Widget);
kony.inherits(kony.ui.ContainerWidget, kony.ui.Widget);
kony.ui.Widget.prototype.setVisibility = function(a) {
  $KW.Widget.setvisibility(this, a)
};
kony.ui.Widget.prototype.setFocus = function() {
  $KW.Widget.setfocus(this)
};
kony.ui.Widget.prototype.setEnabled = function(a) {
  $KW.Widget.setenabled(this, a)
};
kony.ui.Widget.prototype.addGestureRecognizer = function(c, b, a) {
  return ($KW.Widget.addgesturerecognizer(this, c, b, a))
};
kony.ui.Widget.prototype.setGestureRecognizer = function(c, b, a) {
  return ($KW.Widget.setgesturerecognizer(this, c, b, a))
};
kony.ui.Widget.prototype.removeGestureRecognizer = function(a) {
  $KW.Widget.removegesturerecognizer(this, a)
};
kony.ui.Widget.prototype.toString = function() {
  return JSON.stringify(this, $KU.jsonReplacer)
};
kony.ui.Widget.prototype.removeFromParent = function() {
  if (!this.parent) {
    return
  }
  if (this.parent.id == this.pf) {
    formWidgetExtendRemove.call(this.parent, this)
  } else {
    boxWidgetExtendRemove.call(this.parent, this)
  }
};
kony.ui.Widget.prototype.setWidgetFrame = function(b, a) {
  $KW.Utils.setWidgetFrame(this, b, a)
};
kony.ui.Widget.prototype.animate = function(c, b, a) {
  if (c) {
    c.animate && c.animate(this, b, a)
  }
};
kony.ui.Widget.prototype.getPreferredSize = function(a) {
  return $KW.Widget.getPreferredSize(this, a)
};
kony.ui.Widget.prototype.convertPointToWidget = function(a, b) {
  return $KW.Widget.convertPointToWidget(this, a, b)
};
kony.ui.Widget.prototype.convertPointFromWidget = function(a, b) {
  return $KW.Widget.convertPointFromWidget(this, a, b)
};
kony.ui.Widget.prototype.setGetterSetter = function() {
  defineGetter(this, "contentAlignment", function() {
    return this.contentalignment
  });
  defineSetter(this, "contentAlignment", function(b) {
    var a = this.contentalignment;
    this.contentalignment = b;
    kony.model.updateView(this, "contentalignment", b, a)
  });
  defineGetter(this, "containerWeight", function() {
    return this.containerweight
  });
  defineSetter(this, "containerWeight", function(b) {
    var a = this.containerweight;
    this.containerweight = b;
    kony.model.updateView(this, "containerweight", b, a)
  });
  defineGetter(this, "focusSkin", function() {
    return this.focusskin
  });
  defineSetter(this, "focusSkin", function(b) {
    var a = this.focusskin;
    this.focusskin = b;
    kony.model.updateView(this, "focusskin", b, a)
  });
  defineGetter(this, "hoverSkin", function() {
    return this.hoverskin
  });
  defineSetter(this, "hoverSkin", function(b) {
    var a = this.hoverskin;
    this.hoverskin = b;
    kony.model.updateView(this, "hoverskin", b, a)
  });
  defineGetter(this, "isVisible", function() {
    return this.isvisible
  });
  defineSetter(this, "isVisible", function(b) {
    var a = this.isvisible;
    this.isvisible = b;
    (a != b) && kony.model.updateView(this, "isvisible", b)
  });
  defineGetter(this, "blockedUISkin", function() {
    return this.blockeduiskin
  });
  defineSetter(this, "blockedUISkin", function(a) {
    this.blockeduiskin = a
  });
  defineGetter(this, "onClick", function() {
    return this.onclick
  });
  defineSetter(this, "onClick", function(a) {
    this.onclick = a
  });
  defineGetter(this, "onTouchStart", function() {
    return this.ontouchstart
  });
  defineSetter(this, "onTouchStart", function(a) {
    this.ontouchstart = a;
    kony.model.updateView(this, "touchstart", a)
  });
  defineGetter(this, "onTouchMove", function() {
    return this.ontouchmove
  });
  defineSetter(this, "onTouchMove", function(a) {
    this.ontouchmove = a;
    kony.model.updateView(this, "touchmove", a)
  });
  defineGetter(this, "onTouchEnd", function() {
    return this.ontouchend
  });
  defineSetter(this, "onTouchEnd", function(a) {
    this.ontouchend = a;
    kony.model.updateView(this, "touchend", a)
  });
  defineGetter(this, "onHover", function() {
    return this.onhover
  });
  defineSetter(this, "onHover", function(a) {
    this.onhover = a;
    new $KI.HoverInit(this)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.contentAlignment = this.contentalignment;
    this.containerWeight = this.containerweight;
    this.focusSkin = this.focusskin;
    this.isVisible = this.isvisible;
    this.blockedUISkin = this.blockeduiskin;
    this.onClick = this.onclick;
    this.accessibilityConfig = this.accessibilityconfig
  }
};
kony.ui.ContainerWidget.prototype.add = function(a) {
  containerWidgetExtendAdd.call(this, a)
};
kony.ui.ContainerWidget.prototype.addAt = function(b, a) {
  containerWidgetExtendAddAt.call(this, b, a)
};
kony.ui.ContainerWidget.prototype.remove = function(a) {
  containerWidgetExtendRemove.call(this, a)
};
kony.ui.ContainerWidget.prototype.removeAt = function(a) {
  return containerWidgetExtendRemoveAt.call(this, a)
};
kony.ui.ContainerWidget.prototype.removeAll = function(a) {
  return containerWidgetExtendRemoveAll.call(this, a)
};
kony.ui.ContainerWidget.prototype.widgets = function() {
  return this.ownchildrenref
};
kony.ui.ContainerWidget.prototype.setparent = function(a) {
  containerWidgetExtendSetParent.call(this, a)
};
kony.ui.ContainerWidget.prototype.createhierarchy = function(a) {
  containerWidgetExtendCreateHierarchy.call(this, a)
};
kony.ui.ContainerWidget.prototype.removeReferences = function(a) {
  containerWidgetExtendRemoveReferences.call(this, a)
};
kony.ui.GroupWidget.prototype.setGetterSetter = function() {
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "masterData", function() {
    return this.masterdata
  });
  defineSetter(this, "masterData", function(a) {
    this.masterdata = a;
    $KW[this.wType]["updateView"](this, "masterdata", a)
  });
  defineGetter(this, "masterDataMap", function() {
    return this.masterdatamap
  });
  defineSetter(this, "masterDataMap", function(a) {
    this.masterdatamap = a;
    $KW[this.wType]["updateView"](this, "masterdatamap", a)
  });
  defineGetter(this, "selectedKey", function() {
    return this.selectedkey
  });
  defineSetter(this, "selectedKey", function(a) {
    this.selectedkey = a;
    $KW[this.wType]["updateView"](this, "selectedkey", a)
  });
  defineGetter(this, "selectedKeyValue", function() {
    return this.selectedkeyvalue
  });
  defineSetter(this, "selectedKeyValue", function() {});
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSelection = this.onselection;
    this.masterData = this.masterdata;
    this.masterDataMap = this.masterdatamap;
    this.selectedKey = this.selectedkey;
    this.selectedKeyValue = this.selectedkeyvalue
  }
};
_konyConstNS = IndexJL ? konyLua : kony.ui;
kony.ui.Form2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Form2"))
  }
  this.layouttype = c.layoutType || b.layoutType || kony.flex.VBOX_LAYOUT;
  if (this.layouttype == kony.flex.VBOX_LAYOUT || this.layouttype == constants.CONTAINER_LAYOUT_GRID) {
    kony.ui.Form2.baseConstructor.call(this, c, b, a)
  } else {
    kony.ui.FlexScrollContainer.call(this, c, b, a);
    $KU.extend(Object.getPrototypeOf ? Object.getPrototypeOf(this) : this.constructor.prototype, kony.ui.FlexScrollContainer.prototype)
  }
  this.type = c.type;
  this.needAppMenu = this.needappmenu = c.needAppMenu === undefined ? true : (c.needAppMenu && true);
  this.enabledForIdleTimeout = this.enabledforidletimeout = c.enabledForIdleTimeout || a.enabledForIdleTimeout || false;
  this.headers = c.headers && c.headers.splice(0, c.headers.length);
  this.footers = c.footers && c.footers.splice(0, c.footers.length);
  this.addWidgets = c.addWidgets;
  this.onDestroy = c.onDestroy;
  this.init = c.init;
  this.preshow = c.preShow;
  this.postshow = c.postShow;
  this.onhide = c.onHide || a.onHide;
  this.onorientationchange = c.onOrientationChange;
  defineGetter(this, "layoutType", function() {
    return this.layouttype
  });
  this.displayOrientation = b.displayOrientation || constants.FORM_DISPLAY_ORIENTATION_BOTH;
  this.resetFocusToTop = a.resetFocusToTop;
  this.useTransform = a.useTransform;
  this.retainScrollPosition = this.retainscrollposition = a.retainScrollPosition || false;
  this.dockableAppmenu = this.dockableappmenu = a.dockableAppmenu;
  this.dockableHeader = this.dockableheader = a.dockableHeader;
  this.dockableFooter = this.dockablefooter = a.dockableFooter;
  this.intransitionconfig = a.inTransitionConfig;
  this.outtransitionconfig = a.outTransitionConfig;
  this.allboxes = [];
  this.wType = "Form";
  this.addWidgetsdone = this.initdone = false;
  if (!this.addWidgets) {
    this.addWidgetsdone = true
  }
  this.name = "kony.ui.Form2";
  $KG.allforms[this.id] = this;
  defineGetter(this, "layoutType", function() {
    return this.layouttype
  });
  var e = c.title;
  defineGetter(this, "title", function() {
    return e
  });
  defineSetter(this, "title", function(f) {
    e = f;
    $KW[this.wType]["updateView"](this, "title", f)
  });
  c.i18n_title && (this.i18n_title = c.i18n_title);
  kony.ui.Form2.prototype.setGetterSetter();
  this.headers && this.commonHeaderFooterSetup("headers");
  this.footers && this.commonHeaderFooterSetup("footers");
  var d = c.addWidgets;
  defineGetter(this, "addWidgets", function() {
    return d
  });
  defineSetter(this, "addWidgets", function(f) {
    d = f;
    this.addWidgetsdone = false
  });
  this.formgetter = function() {
    var g = c.id;
    var f = this;
    defineGetter(window, g, function() {
      if (!f.addWidgetsdone) {
        f.addWidgetsdone = true;
        f.ownchildrenref = [];
        f.children = [];
        f.addWidgets && f.addWidgets(f)
      }
      return f
    })
  };
  this.formsetter = function() {
    var g = c.id;
    var f = this;
    defineSetter(window, g, function() {
      return f
    })
  };
  this.formgetter();
  this.formsetter();
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.title = e;
    this.addWidgets = d
  }
  this.ondeviceback = a.onDeviceBack;
  defineGetter(this, "onDeviceBack", function() {
    return this.ondeviceback
  });
  defineSetter(this, "onDeviceBack", function(f) {
    this.ondeviceback = f
  })
};
kony.inherits(kony.ui.Form2, kony.ui.ContainerWidget);
kony.ui.Form2.prototype.add = function() {
  var a = [].slice.call(arguments);
  formWidgetExtendAdd.call(this, a)
};
kony.ui.Form2.prototype.addAt = function(b, a) {
  formWidgetExtendAddAt.call(this, b, a)
};
kony.ui.Form2.prototype.destroy = function() {
  this.onDestroy && this.onDestroy(this);
  var b = this.widgets();
  for (var a = 0; a < b.length; a++) {
    removeAllReferences(b[a]);
    if (b[a] instanceof _konyConstNS.ContainerWidget) {
      delete this[b[a].id]
    }
  }
  this.addWidgetsdone = false;
  this.initdone = false;
  this.ownchildrenref = [];
  this.children = []
};
kony.ui.Form2.prototype.remove = function(a) {
  formWidgetExtendRemove.call(this, a)
};
kony.ui.Form2.prototype.removeAt = function(a) {
  return formWidgetExtendRemoveAt.call(this, a)
};
kony.ui.Form2.prototype.removeAll = function() {
  formWidgetExtendRemoveAll.call(this)
};
kony.ui.Form2.prototype.show = function() {
  if (!this.addWidgetsdone) {
    this.addWidgetsdone = true;
    this.ownchildrenref = [];
    this.children = [];
    if (this.addWidgets) {
      if (typeof this.addWidgets == "string") {
        window[this.addWidgets](this)
      } else {
        if (typeof this.addWidgets == "function") {
          this.addWidgets(this)
        }
      }
    }
  }
  if (this.name == "kony.ui.Form") {
    !this.masterdataloaddone && this.masterdataload && this.masterdataload.call(this);
    !this.transactionaldataloaddone && this.transactionaldataload && this.transactionaldataload.call(this);
    this.transactionaldataloaddone = this.masterdataloaddone = true
  } else {
    !this.initdone && this.init && this.init(this);
    this.initdone = true
  }
  $KW.Form.show(this)
};
kony.ui.Form2.prototype.scrollToWidget = function(a) {
  $KW.Form.scrollToWidget(this, a)
};
kony.ui.Form2.prototype.scrollToBeginning = function() {
  $KW.Form.scrollToBeginning(this)
};
kony.ui.Form2.prototype.scrollToEnd = function() {
  $KW.Form.scrollToEnd(this)
};
kony.ui.Form2.prototype.widgets = function() {
  return kony.ui.ContainerWidget.prototype.widgets.call(this)
};
kony.ui.Form2.prototype.createFormLevelHierarchy = function(a) {
  formWidgetExtendCreateFormLevelHierarchy.call(this, a)
};
kony.ui.Form2.prototype.commonHeaderFooterSetup = function(a) {
  formWidgetExtendCommonHeaderFooterSetup.call(this, a)
};
kony.ui.Form2.prototype.setGetterSetter = function() {
  defineGetter(this, "preShow", function() {
    return this.preshow
  });
  defineSetter(this, "preShow", function(a) {
    this.preshow = a
  });
  defineGetter(this, "postShow", function() {
    return this.postshow
  });
  defineSetter(this, "postShow", function(a) {
    this.postshow = a
  });
  defineGetter(this, "onHide", function() {
    return this.onhide
  });
  defineSetter(this, "onHide", function(a) {
    this.onhide = a
  });
  defineGetter(this, "onOrientationChange", function() {
    return this.onorientationchange
  });
  defineSetter(this, "onOrientationChange", function(a) {
    this.onorientationchange = a
  });
  defineGetter(this, "inTransitionConfig", function() {
    return this.intransitionconfig
  });
  defineSetter(this, "inTransitionConfig", function(a) {
    this.intransitionconfig = a
  });
  defineGetter(this, "outTransitionConfig", function() {
    return this.outtransitionconfig
  });
  defineSetter(this, "outTransitionConfig", function(a) {
    this.outtransitionconfig = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.preShow = this.preshow;
    this.postShow = this.postshow;
    this.onHide = this.onhide;
    this.onOrientationChange = this.onorientationchange;
    this.inTransitionConfig = this.intransitionconfig;
    this.outTransitionConfig = this.outtransitionconfig
  }
};
kony.ui.Form2.getallboxes = function(a) {
  var b = a;
  if (!(a instanceof Array)) {
    b = [a]
  }
  formWidgetExtendGetAllBoxes.call(this, b)
};
kony.ui.Form2.addHeaderorFooter = function() {
  formWidgetExtendaddHeaderorFooter.call(this, arguments)
};
kony.ui.Form = function(c, b, a) {
  kony.ui.Form.baseConstructor.call(this, c, b, a);
  this.transactionaldataload = c.transactionalDataLoad;
  this.masterdataload = c.masterDataLoad;
  this.transactionaldataloaddone = this.masterdataloaddone = false;
  this.type = a.formType;
  this.preShow = this.preshow = a.preShow;
  this.postShow = this.postshow = a.postShow;
  this.onHide = this.onhide = a.onHide;
  this.needAppMenu = this.needappmenu = a.needAppLevelMenu === undefined ? true : (a.needAppLevelMenu && true);
  this.headers = a.globalHeaders && a.globalHeaders.splice(0);
  this.footers = a.globalFooters && a.globalFooters.splice(0);
  this.headers && this.commonHeaderFooterSetup("headers");
  this.footers && this.commonHeaderFooterSetup("footers");
  this.name = "kony.ui.Form"
};
kony.inherits(kony.ui.Form, kony.ui.Form2);
kony.ui.Box = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("HBox"))
  }
  kony.ui.Box.baseConstructor.call(this, d, b, a);
  this.position = a && a.position;
  this.name = "kony.ui.Box";
  this.allboxes = [];
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  if (this.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
    this.wType = "HBox"
  } else {
    this.wType = "VBox"
  }
  var c = a.backgroundimage;
  defineGetter(this, "backgroundimage", function() {
    return c
  });
  defineSetter(this, "backgroundimage", function(e) {
    c = e;
    kony.model.updateView(this, "backgroundimage", e)
  })
};
kony.inherits(kony.ui.Box, kony.ui.ContainerWidget);
kony.ui.Box.prototype.add = function() {
  var a = [].slice.call(arguments);
  boxWidgetExtendAdd.call(this, a)
};
kony.ui.Box.prototype.addAt = function(b, a) {
  boxWidgetExtendAddAt.call(this, b, a)
};
kony.ui.Box.prototype.remove = function(a) {
  boxWidgetExtendRemove.call(this, a)
};
kony.ui.Box.prototype.removeAt = function(a) {
  return boxWidgetExtendRemoveAt.call(this, a)
};
kony.ui.Box.prototype.widgets = function() {
  return kony.ui.ContainerWidget.prototype.widgets.call(this)
};
kony.ui.Box.prototype.updateBoxWeight = function(a) {
  boxWidgetExtendUpdateBoxWeight.call(this, a)
};
kony.ui.Button = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Button"))
  }
  kony.ui.Button.baseConstructor.call(this, c, b, a);
  this.displaytext = (b.displayText === undefined) ? true : (b.displayText && true);
  this.rawBytes = c.rawBytes;
  this.canUpdateUI = true;
  this.wType = "Button";
  this.name = "kony.ui.Button";
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  this.tooltip = a.toolTip;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d;
    this.toolTip = this.tooltip
  } else {
    defineGetter(this, "toolTip", function() {
      return this.tooltip
    });
    defineSetter(this, "toolTip", function(e) {
      this.tooltip = e;
      kony.model.updateView(this, "tooltip", e)
    })
  }
};
kony.inherits(kony.ui.Button, kony.ui.Widget);
kony.ui.Label = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Label"))
  }
  kony.ui.Label.baseConstructor.call(this, d, b, a);
  this.canUpdateUI = true;
  this.wType = "Label";
  this.name = "kony.ui.Label";
  var e = d.text || "";
  defineGetter(this, "text", function() {
    return e
  });
  defineSetter(this, "text", function(g) {
    var f = e;
    e = g;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", g);
      $KU.setLayoutConfig(this, g, f)
    }
  });
  var c = a.textCopyable;
  defineGetter(this, "textCopyable", function() {
    return c
  });
  defineSetter(this, "textCopyable", function(f) {
    c = f;
    $KW[this.wType]["updateView"](this, "textCopyable", f)
  });
  this.linespacing = d.lineSpacing;
  defineGetter(this, "lineSpacing", function() {
    return this.linespacing
  });
  defineSetter(this, "lineSpacing", function(f) {
    this.linespacing = f;
    $KW[this.wType]["updateView"](this, "linespacing", f)
  });
  this.tooltip = a.toolTip || "";
  defineGetter(this, "toolTip", function() {
    return this.tooltip
  });
  defineSetter(this, "toolTip", function(f) {
    $KW[this.wType]["updateView"](this, "tooltip", f)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = e
  }
};
kony.inherits(kony.ui.Label, kony.ui.Widget);
kony.ui.Line = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Line"))
  }
  kony.ui.Line.baseConstructor.call(this, d, b, a);
  this.wType = "Line";
  this.name = "kony.ui.Line";
  var c = b.thickness;
  defineGetter(this, "thickness", function() {
    return c
  });
  defineSetter(this, "thickness", function(e) {
    c = e;
    $KW[this.wType]["updateView"](this, "thickness", e)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.thickness = c
  }
};
kony.inherits(kony.ui.Line, kony.ui.Widget);
kony.ui.Link = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Link"))
  }
  kony.ui.Link.baseConstructor.call(this, c, b, a);
  this.canUpdateUI = true;
  this.wType = "Link";
  this.name = "kony.ui.Link";
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  this.tooltip = a.toolTip;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d;
    this.toolTip = this.tooltip
  } else {
    defineGetter(this, "toolTip", function() {
      return this.tooltip
    });
    defineSetter(this, "toolTip", function(e) {
      this.tooltip = e;
      kony.model.updateView(this, "tooltip", e)
    })
  }
};
kony.inherits(kony.ui.Link, kony.ui.Widget);
kony.ui.Switch = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Switch"))
  }
  kony.ui.Switch.baseConstructor.call(this, c, b, a);
  this.skin = c.skin;
  this.leftsidetext = c.leftSideText;
  this.rightsidetext = c.rightSideText;
  this.wType = "Switch";
  this.name = "kony.ui.Switch";
  this.onslide = c.onSlide || null;
  this.selectedindex = (c.selectedIndex == IndexJL) ? IndexJL : IndexJL + 1;
  this.setGetterSetter()
};
kony.inherits(kony.ui.Switch, kony.ui.Widget);
kony.ui.Switch.prototype.setGetterSetter = function() {
  defineGetter(this, "onSlide", function() {
    return this.onslide
  });
  defineSetter(this, "onSlide", function(a) {
    this.onslide = a
  });
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(b) {
    var a = this.selectedindex;
    this.selectedindex = b;
    $KW[this.wType]["updateView"](this, "selectedindex", b, a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSlide = this.onslide;
    this.selectedIndex = this.selectedindex
  }
};
kony.ui.Phone = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Phone"))
  }
  kony.ui.Phone.baseConstructor.call(this, c, b, a);
  this.canUpdateUI = true;
  this.wType = "Phone";
  this.name = "kony.ui.Phone";
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d
  }
};
kony.inherits(kony.ui.Phone, kony.ui.Widget);
kony.ui.CustomWidget = function(e, b, a) {
  kony.ui.CustomWidget.baseConstructor.call(this, e, b, a);
  var d = function(f, h, g) {
    defineGetter(f, h, function() {
      return g[h]
    });
    defineSetter(f, h, function(n) {
      var i = g[h];
      g[h] = n;
      var l = g.widgetName.split("."),
        m = window;
      for (var k = 0; k < l.length; k++) {
        m = m[l[k]]
      }
      m.modelChange(f, h, g[h])
    })
  };
  this.wType = "TPW";
  for (var c in a) {
    d(this, c, a)
  }
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    for (var c in a) {
      this[c] = a[c]
    }
  }
};
kony.inherits(kony.ui.CustomWidget, kony.ui.Widget);
kony.ui.Alert = function(c, b, a) {
  $KI.window.alert(c, b, a)
};
kony.ui.Camera = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Camera"))
  }
  kony.ui.Camera.baseConstructor.call(this, c, b, a);
  this.wType = "Camera"
};
kony.inherits(kony.ui.Camera, kony.ui.Widget);
kony.ui.Calendar = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Calendar"))
  }
  kony.ui.Calendar.baseConstructor.call(this, d, b, a);
  this.wType = "Calendar";
  this.name = "kony.ui.Calendar";
  this.datecomponents = d.dateComponents || [];
  this.dateformat = this.format = d.dateFormat || constants.CALENDAR_DATE_FORMAT_DEFAULT;
  this.formatteddate = this.date;
  this.startdate = d.validStartDate;
  this.enddate = d.validEndDate;
  this.validstartdate = d.validStartDate;
  this.validenddate = d.validEndDate;
  this.viewtype = this.advview = d.viewType || constants.CALENDAR_VIEW_TYPE_DEFAULT;
  this.viewconfig = d.viewConfig;
  this.calendaricon = this.Image = d.calendarIcon;
  this.onselection = d.onSelection;
  this.titleonpopup = this.title = a.titleOnPopup;
  this.noofmonths = a.noOfMonths || a.noofmonths || 1;
  this.dateeditable = true;
  this.calimgheight = a.calImgHeight;
  defineGetter(this, "calImgHeight", function() {
    return this.calimgheight
  });
  defineSetter(this, "calImgHeight", function(f) {
    this.calimgheight = f
  });
  var e = d.placeholder;
  defineGetter(this, "placeholder", function() {
    return e
  });
  defineSetter(this, "placeholder", function(f) {
    e = f;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "placeholder", f)
  });
  defineGetter(this, "dateEditable", function() {
    return this.dateeditable
  });
  defineSetter(this, "dateEditable", function(f) {
    if (!f == true || !!f == true) {
      this.dateeditable = f;
      this.canUpdateUI && $KW[this.wType]["updateView"](this, "dateeditable", f)
    }
  });
  var c = d.date;
  defineGetter(this, "date", function() {
    $KW.Calendar.updateCalDOMNode(this, false);
    if (this.formatteddate) {
      return this.formatteddate
    } else {
      return null
    }
  });
  defineSetter(this, "date", function(g) {
    this.Date = g;
    if (!g || !g.length) {
      return false
    }
    if (typeof g == "string") {
      var f = $KW.Calendar.__dp.getDat(g, this)
    } else {
      var f = {
        dd: g[0 + IndexJL],
        mm: g[1 + IndexJL],
        yyyy: g[2 + IndexJL]
      }
    }
    if (g && g.length) {
      this.day = f.dd;
      this.month = f.mm;
      this.year = f.yyyy || f.yy;
      if (!this.datecomponents) {
        this.datecomponents = []
      }
      this.datecomponents[IndexJL + 0] = f.dd;
      this.datecomponents[IndexJL + 1] = f.mm;
      this.datecomponents[IndexJL + 2] = f.yyyy || f.yy;
      this.datecomponents[IndexJL + 3] = 0;
      this.datecomponents[IndexJL + 4] = 0;
      this.datecomponents[IndexJL + 5] = 0
    } else {
      this.day = this.month = this.year = null
    }
    this.hour = this.minutes = this.seconds = 0;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "date", g)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.placeholder = e;
    this.date = c
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.Calendar, kony.ui.Widget);
kony.ui.Calendar.prototype.setGetterSetter = function() {
  defineGetter(this, "titleOnPopup", function() {
    return this.title
  });
  defineSetter(this, "titleOnPopup", function(a) {
    this.titleonpopup = this.title = a
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "calendarIcon", function() {
    return this.calendaricon
  });
  defineSetter(this, "calendarIcon", function(a) {
    this.calendaricon = this.Image = a;
    $KW[this.wType]["updateView"](this, "calendaricon", a)
  });
  defineGetter(this, "viewConfig", function() {
    return this.viewconfig
  });
  defineSetter(this, "viewConfig", function(a) {
    this.viewconfig = a;
    $KW[this.wType]["updateView"](this, "viewconfig", a)
  });
  defineGetter(this, "viewType", function() {
    return this.advview
  });
  defineSetter(this, "viewType", function(a) {
    this.advview = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "validEndDate", function() {
    return this.enddate
  });
  defineSetter(this, "validEndDate", function(a) {
    this.enddate = a;
    $KW[this.wType]["updateView"](this, "validenddate", a)
  });
  defineGetter(this, "validStartDate", function() {
    return this.startdate
  });
  defineSetter(this, "validStartDate", function(a) {
    this.startdate = a;
    $KW[this.wType]["updateView"](this, "validstartdate", a)
  });
  defineGetter(this, "dateFormat", function() {
    return this.format
  });
  defineSetter(this, "dateFormat", function(a) {
    this.dateformat = this.format = a;
    $KW[this.wType]["updateView"](this, "dateformat", a);
    $KW[this.wType]["updateView"](this, "placeholder", this.placeholder || this.dateformat || this.format)
  });
  defineGetter(this, "dateComponents", function() {
    if (this.hour === undefined) {
      this.hour = this.datecomponents[3]
    }
    if (this.minutes === undefined) {
      this.minutes = this.datecomponents[4]
    }
    if (this.seconds === undefined) {
      this.seconds = this.datecomponents[5]
    }
    return [this.day, this.month, this.year, this.hour, this.minutes, this.seconds]
  });
  defineSetter(this, "dateComponents", function(a) {
    this.datecomponents = this.date = a.slice(0, 3);
    $KW[this.wType]["updateView"](this, "datecomponents", a)
  });
  defineGetter(this, "formattedDate", function() {
    $KW.Calendar.updateCalDOMNode(this, false);
    return this.formatteddate
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.titleOnPopup = this.title;
    this.onSelection = this.onselection;
    this.calendarIcon = this.calendaricon;
    this.viewConfig = this.viewconfig;
    this.viewType = this.viewtype;
    this.validEndDate = this.enddate;
    this.validStartDate = this.startdate;
    this.dateFormat = this.dateformat;
    this.dateComponents = this.datecomponents;
    this.formattedDate = this.formatteddate;
    this.noOfMonths = this.noofmonths;
    this.dateEditable = this.dateeditable
  } else {
    defineGetter(this, "noOfMonths", function() {
      return this.noofmonths
    });
    defineSetter(this, "noOfMonths", function(a) {
      this.noofmonths = a
    })
  }
};
kony.ui.Calendar.prototype.setEnabled = function(c, b, a) {
  if (typeof c == "boolean") {
    $KW.Widget.setenabled(this, c);
    return false
  } else {
    $KW.Calendar.setEnabled(this, c, 0, b, a)
  }
};
kony.ui.Calendar.prototype.displayedMonth = function(b, a) {
  $KW.Calendar.displayedMonth(this, b, a)
};
kony.ui.Calendar.prototype.navigateToPreviousMonth = function() {
  $KW.Calendar.navigateToPreviousMonth(this)
};
kony.ui.Calendar.prototype.navigateToNextMonth = function() {
  $KW.Calendar.navigateToNextMonth(this)
};
kony.ui.Calendar.prototype.enableRangeOfDates = function(c, a, d, b) {
  $KW.Calendar.setEnabled(this, c, a, d, b)
};
kony.ui.Calendar.prototype.setEnableAll = function() {
  $KW.Calendar.setEnableAll(this)
};
kony.ui.Calendar.prototype.setDatesSkin = function(b, a) {
  $KW.Calendar.setDateSkin(this, b, a, true)
};
kony.ui.Calendar.prototype.clear = function() {
  $KW.Calendar.clear(this)
};
kony.ui.Calendar.prototype.setContext = function(a) {
  $KW.Calendar.setcontext(this, a)
};
kony.ui.DataGrid = function(f, b, a) {
  if (arguments.length < 3) {
    f = b = a = $KU.mergeDefaults(f, $KU.getAllDefaults("DataGrid"))
  }
  kony.ui.DataGrid.baseConstructor.call(this, f, b, a);
  this.focusedindex = this.focuseditem = this.selecteditems = this.selectedindices = null;
  this.headerskin = f.headerSkin;
  this.rownormalskin = f.rowNormalSkin;
  this.rowfocusskin = f.rowFocusSkin;
  this.rowalternateskin = f.rowAlternateSkin;
  this.showcolumnheaders = f.showColumnHeaders;
  this.columnheadersconfig = f.columnHeadersConfig;
  this.onrowselected = f.onRowSelected;
  this.ismultiselect = f.isMultiSelect;
  this.gridlinecolor = a.gridlineColor;
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.selectedcellindex = this.selectedcellitem = null;
  this.enablescrollbar = a.enableScrollBar;
  this.containerheight = a.containerHeight;
  this.containerheightinpixel = a.containerHeightInPixel;
  this.dockingheader = a.dockingHeader;
  defineGetter(this, "enableScrollBar", function() {
    return this.enablescrollbar
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineGetter(this, "containerHeightInPixel", function() {
    return this.containerheightinpixel
  });
  defineGetter(this, "dockingHeader", function() {
    return this.dockingheader
  });
  this.allowcolumnresize = a.allowColumnResize;
  defineGetter(this, "allowColumnResize", function() {
    return this.allowcolumnresize
  });
  var g = f.data;
  defineGetter(this, "data", function() {
    return g
  });
  defineSetter(this, "data", function(i) {
    g = i;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", i)
  });
  this.rowcount = (g && g.length - IndexJL) || 0;
  this.wType = "DataGrid";
  this.name = "kony.ui.DataGrid";
  this.canUpdateUI = true;
  this.selectedcellindex = this.selectedcellitem = null;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = g
  }
  var d = f.columnHeadersConfig;
  if (d) {
    var h = [];
    for (var e = 0; e < d.length; e++) {
      var c = {};
      c.columnid = d[e].columnID;
      c.columntype = d[e].columnType;
      c.columnheadertext = d[e].columnHeaderText;
      c.columnheadertemplate = d[e].columnHeaderTemplate;
      c.columndatatemplate = d[e].columnDataTemplate;
      c.columnwidthinpercentage = d[e].columnWidthInPercentage;
      c.columncontentalignment = d[e].columnContentAlignment;
      c.columnonclick = d[e].columnOnClick;
      h.push(c)
    }
    this.columnheadersconfig = h
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.DataGrid, kony.ui.Widget);
kony.ui.DataGrid.prototype.setGetterSetter = function() {
  defineGetter(this, "rowNormalSkin", function() {
    return this.rownormalskin
  });
  defineSetter(this, "rowNormalSkin", function(b) {
    var a = this.rownormalskin;
    this.rownormalskin = b;
    $KW[this.wType]["updateView"](this, "rownormalskin", b, a)
  });
  defineGetter(this, "headerSkin", function() {
    return this.headerskin
  });
  defineSetter(this, "headerSkin", function(a) {
    this.headerskin = a;
    $KW[this.wType]["updateView"](this, "headerskin", a)
  });
  defineGetter(this, "isMultiSelect", function() {
    return this.ismultiselect
  });
  defineSetter(this, "isMultiSelect", function(a) {
    this.ismultiselect = a;
    $KW[this.wType]["updateView"](this, "ismultiselect", a)
  });
  defineGetter(this, "rowFocusSkin", function() {
    return this.rowfocusskin
  });
  defineSetter(this, "rowFocusSkin", function(a) {
    this.rowfocusskin = a
  });
  defineGetter(this, "rowAlternateSkin", function() {
    return this.rowalternateskin
  });
  defineSetter(this, "rowAlternateSkin", function(a) {
    this.rowalternateskin = a;
    $KW[this.wType]["updateView"](this, "rowalternateskin", a)
  });
  defineGetter(this, "showColumnHeaders", function() {
    return this.showcolumnheaders
  });
  defineSetter(this, "showColumnHeaders", function(a) {
    this.showcolumnheaders = a;
    $KW[this.wType]["updateView"](this, "showcolumnheaders", a)
  });
  defineGetter(this, "columnHeadersConfig", function() {
    return this.columnheadersconfig
  });
  defineSetter(this, "columnHeadersConfig", function(b) {
    if (b) {
      var d = [];
      for (var c = 0; c < b.length; c++) {
        var a = {};
        a.columnid = b[c].columnid || b[c].columnID;
        a.columntype = b[c].columntype || b[c].columnType;
        a.columnheadertext = b[c].columnheadertext || b[c].columnHeaderText;
        a.columnheadertemplate = b[c].columnheadertemplate || b[c].columnHeaderTemplate;
        a.columndatatemplate = b[c].columndatatemplate || b[c].columnDataTemplate;
        a.columnwidthinpercentage = b[c].columnwidthinpercentage || b[c].columnWidthInPercentage;
        a.columncontentalignment = b[c].columncontentalignment || b[c].columnContentAlignment;
        a.columnonclick = b[c].columnonclick || b[c].columnOnClick;
        d.push(a)
      }
      this.columnheadersconfig = d
    }
    $KW[this.wType]["updateView"](this, "columnheadersconfig", b)
  });
  defineGetter(this, "gridlineColor", function() {
    return this.gridlinecolor
  });
  defineSetter(this, "gridlineColor", function(a) {
    this.gridlinecolor = a;
    $KW[this.wType]["updateView"](this, "gridlinecolor", a)
  });
  defineSetter(this, "onRowSelected", function(a) {
    this.onrowselected = a
  });
  defineGetter(this, "selectedIndex", function() {
    return this.focusedindex
  });
  defineGetter(this, "selectedItem", function() {
    return this.focuseditem
  });
  defineGetter(this, "selectedItems", function() {
    return this.selecteditems
  });
  defineGetter(this, "selectedIndices", function() {
    return this.selectedindices
  });
  defineGetter(this, "rowCount", function() {
    return this.rowcount
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.rowNormalSkin = this.rownormalskin;
    this.headerSkin = this.headerskin;
    this.isMultiSelect = this.ismultiselect;
    this.rowFocusSkin = this.rowfocusskin;
    this.rowAlternateSkin = this.rowalternateskin;
    this.showColumnHeaders = this.showcolumnheaders;
    this.columnHeadersConfig = this.columnheadersconfig;
    this.gridlineColor = this.gridlinecolor;
    this.onRowSelected = this.onrowselected;
    this.selectedIndex = this.focusedindex;
    this.selectedItem = this.focuseditem;
    this.selectedItems = this.selecteditems;
    this.selectedIndices = this.selectedindices;
    this.rowCount = this.rowcount;
    this.selectedCellIndex = this.selectedcellindex;
    this.selectedCellItem = this.selectedcellitem
  } else {
    defineGetter(this, "selectedCellIndex", function() {
      return this.selectedcellindex
    });
    defineGetter(this, "selectedCellItem", function() {
      return this.selectedcellitem
    })
  }
};
kony.ui.DataGrid.prototype.applyCellSkin = function(a, b, c) {
  $KW.DataGrid.applyCellSkin(this, a, b, c)
};
kony.ui.DataGrid.prototype.setData = function(a) {
  $KW.DataGrid.setData(this, a)
};
kony.ui.DataGrid.prototype.setDataAt = function(b, a) {
  $KW.DataGrid.setDataAt(this, b, a)
};
kony.ui.DataGrid.prototype.addDataAt = function(b, a) {
  $KW.DataGrid.addDataAt(this, b, a)
};
kony.ui.DataGrid.prototype.addAll = function(a) {
  $KW.DataGrid.addAll(this, a)
};
kony.ui.DataGrid.prototype.removeAt = function(a) {
  $KW.DataGrid.removeAt(this, a)
};
kony.ui.DataGrid.prototype.removeAll = function() {
  $KW.DataGrid.removeAll(this)
};
kony.ui.DataGrid.prototype.selectAllRows = function(a) {
  $KW.DataGrid.selectAll(this, a)
};
kony.ui.DataGrid.prototype.setCellDataAt = function(c, a, b) {
  $KW.DataGrid.setCellData(this, c, a, b)
};
kony.ui.DataGrid.prototype.setHeaderCellDataAt = function(a, b) {
  $KW.DataGrid.setHeaderCellDataAt(this, a, b)
};
kony.ui.CheckBoxGroup = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("CheckBoxGroup"))
  }
  kony.ui.CheckBoxGroup.baseConstructor.call(this, c, b, a);
  this.itemorientation = b.itemOrientation || constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL;
  this.wType = "CheckBoxGroup";
  this.name = "kony.ui.CheckBoxGroup";
  this.selectedkeys = c.selectedKeys || null;
  this.selectedkeyvalues = null;
  this.viewtype = a.viewType || "defaultview";
  if (this.viewtype != "defaultview") {
    this.wType = "CheckBoxGroupViews"
  }
  this.size = a.size || 18;
  this.checkedimage = a.checkedImage || "checkboxselected.png";
  this.uncheckedimage = a.uncheckedImage || "checkboxnormal.png";
  kony.ui.CheckBoxGroup.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.CheckBoxGroup, kony.ui.GroupWidget);
kony.ui.CheckBoxGroup.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedKeys", function() {
    return this.selectedkeys
  });
  defineSetter(this, "selectedKeys", function(a) {
    this.selectedkeys = a;
    $KW[this.wType]["updateView"](this, "selectedkeys", a)
  });
  defineGetter(this, "selectedKeyValues", function() {
    return this.selectedkeyvalues
  });
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "checkedImage", function(a) {
    this.checkedimage = a;
    $KW[this.wType]["updateView"](this, "checkedimage", a)
  });
  defineGetter(this, "checkedImage", function() {
    return this.checkedimage
  });
  defineSetter(this, "uncheckedImage", function(a) {
    this.uncheckedimage = a;
    $KW[this.wType]["updateView"](this, "uncheckedimage", a)
  });
  defineGetter(this, "uncheckedImage", function() {
    return this.uncheckedimage
  });
  defineSetter(this, "dimension", function(a) {
    this.size = a;
    $KW[this.wType]["updateView"](this, "size", a)
  });
  defineGetter(this, "dimension", function() {
    return this.size
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedKeys = this.selectedkeys;
    this.selectedKeyValues = this.selectedkeyvalues;
    this.viewType = this.viewtype;
    this.checkedImage = this.checkedimage;
    this.uncheckedImage = this.unchekedimage
  }
};
kony.ui.ComboBox = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("ComboBox"))
  }
  kony.ui.ComboBox.baseConstructor.call(this, c, b, a);
  this.wType = "ComboBox";
  this.name = "kony.ui.ComboBox";
  this.viewtype = a.viewType;
  this.autosuggest = a.autoSuggest || false;
  this.editableareaskin = a.editableAreaSkin || "";
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.viewType = this.viewtype;
    this.autoSuggest = this.autosuggest;
    this.editableAreaSkin = this.editableareaskin
  } else {
    defineGetter(this, "viewType", function() {
      return this.viewtype
    });
    defineSetter(this, "viewType", function(d) {
      this.viewtype = d;
      $KW[this.wType]["updateView"](this, "viewtype", d)
    });
    defineGetter(this, "autoSuggest", function() {
      return this.autosuggest
    });
    defineSetter(this, "autoSuggest", function(d) {
      this.autosuggest = d;
      $KW[this.wType]["updateView"](this, "autosuggest", d)
    });
    defineGetter(this, "editableAreaSkin", function() {
      return this.editableareaskin
    });
    defineSetter(this, "editableAreaSkin", function(d) {
      this.editableareaskin = d;
      $KW[this.wType]["updateView"](this, "editableareaskin", d)
    })
  }
};
kony.inherits(kony.ui.ComboBox, kony.ui.GroupWidget);
kony.ui.ListBox = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("ListBox"))
  }
  kony.ui.ListBox.baseConstructor.call(this, c, b, a);
  this.wType = "ListBox";
  this.name = "kony.ui.ListBox";
  this.selectedkeys = a.selectedKeys || null;
  this.selectedkeyvalues = null;
  defineGetter(this, "selectedKeys", function() {
    return this.selectedkeys
  });
  defineSetter(this, "selectedKeys", function(d) {
    this.selectedkeys = d;
    $KW[this.wType]["updateView"](this, "selectedkeys", d)
  });
  defineGetter(this, "selectedKeyValues", function() {
    return this.selectedkeyvalues
  });
  this.multiple = a.multiSelect;
  this.multiselectrows = a.multiSelectRows;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.multiSelect = this.multiple;
    this.selectedKeys = this.selectedkeys;
    this.selectedKeyValues = this.selectedkeyvalues;
    this.multiSelectRows = this.multiselectrows
  } else {
    defineGetter(this, "multiSelectRows", function() {
      return this.multiselectrows
    });
    defineSetter(this, "multiSelectRows", function(d) {
      this.multiselectrows = d;
      $KW[this.wType]["updateView"](this, "multiselectrows", d)
    })
  }
};
kony.inherits(kony.ui.ListBox, kony.ui.GroupWidget);
kony.ui.RadioButtonGroup = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("RadioButtonGroup"))
  }
  kony.ui.RadioButtonGroup.baseConstructor.call(this, c, b, a);
  this.itemorientation = b.itemOrientation || constants.RADIOGROUP_ITEM_ORIENTATION_VERTICAL;
  this.wType = "RadioButtonGroup";
  this.name = "kony.ui.RadioButtonGroup";
  this.viewtype = a.viewType || "defaultview";
  this.size = a.size || 18;
  this.checkedimage = a.checkedImage || "radiobuttonselected.png";
  this.uncheckedimage = a.uncheckedImage || "radiobuttonnormal.png";
  kony.ui.RadioButtonGroup.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.RadioButtonGroup, kony.ui.GroupWidget);
kony.ui.RadioButtonGroup.prototype.setGetterSetter = function() {
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "checkedImage", function(a) {
    this.checkedimage = a;
    $KW[this.wType]["updateView"](this, "checkedimage", a)
  });
  defineGetter(this, "checkedImage", function() {
    return this.checkedimage
  });
  defineSetter(this, "uncheckedImage", function(a) {
    this.uncheckedimage = a;
    $KW[this.wType]["updateView"](this, "uncheckedimage", a)
  });
  defineGetter(this, "uncheckedImage", function() {
    return this.uncheckedimage
  });
  defineSetter(this, "dimension", function(a) {
    this.size = a;
    $KW[this.wType]["updateView"](this, "size", a)
  });
  defineGetter(this, "dimension", function() {
    return this.size
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.viewType = this.viewtype;
    this.checkedImage = this.checkedimage;
    this.uncheckedImage = this.unchekedimage
  }
};
kony.ui.PickerView = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("PickerView"))
  }
  kony.ui.PickerView.baseConstructor.call(this, c, b, a);
  this.wType = "PickerView";
  this.name = "kony.ui.PickerView";
  this.onselect = c.onSelect;
  this.setGetterSetter()
};
kony.inherits(kony.ui.PickerView, kony.ui.CheckBoxGroup);
kony.ui.PickerView.prototype.setComponentData = function(b, a) {
  $KW.PickerView.setcomponentdata(this, b, a)
};
kony.ui.PickerView.prototype.setSelectedKeyInComponent = function(a, b) {
  $KW.PickerView.setselectedkeyincomponent(this, a, b)
};
kony.ui.PickerView.prototype.setGetterSetter = function() {
  defineGetter(this, "onSelect", function() {
    return this.onselect
  });
  defineSetter(this, "onSelect", function(a) {
    this.onselect = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSelect = this.onselect
  }
};
kony.ui.Image2 = function(d, c, b) {
  if (arguments.length < 3) {
    d = c = b = $KU.mergeDefaults(d, $KU.getAllDefaults("Image2"))
  }
  kony.ui.Image2.baseConstructor.call(this, d, c, b);
  this.ondownloadcomplete = d.onDownloadComplete;
  this.imageWhileDownloading = this.imagewhiledownloading = d.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = d.imageWhenFailed;
  this.referencewidth = c.referenceWidth;
  this.referenceheight = c.referenceHeight;
  this.imagescalemode = (typeof c.imageScaleMode == "undefined") ? constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO : c.imageScaleMode;
  this.canUpdateUI = true;
  this.skin = d.skin;
  this.wType = "Image";
  this.name = "kony.ui.Image2";
  var e = d.src;
  if (e) {
    this.srcType = 1
  }
  defineGetter(this, "src", function() {
    return e
  });
  defineSetter(this, "src", function(g) {
    this.srctype = 1;
    var f = this.src;
    e = g;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "src", g, f)
  });
  var a = null;
  defineGetter(this, "base64", function() {
    return a
  });
  defineSetter(this, "base64", function(f) {
    this.srcType = 2;
    a = f;
    $KW[this.wType]["updateView"](this, "base64", f)
  });
  this.tooltip = b.toolTip;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.base64 = a;
    this.src = e;
    this.toolTip = this.tooltip
  } else {
    defineGetter(this, "toolTip", function() {
      return this.tooltip
    });
    defineSetter(this, "toolTip", function(f) {
      this.tooltip = f;
      kony.model.updateView(this, "tooltip", f)
    })
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.Image2, kony.ui.Widget);
kony.ui.Image2.prototype.setGetterSetter = function() {
  defineGetter(this, "imageScaleMode", function() {
    return this.imagescalemode
  });
  defineSetter(this, "imageScaleMode", function(a) {
    this.imagescalemode = a;
    $KW[this.wType]["updateView"](this, "imagescalemode", a)
  });
  defineGetter(this, "referenceHeight", function() {
    return this.referenceheight
  });
  defineSetter(this, "referenceHeight", function(a) {
    this.referenceheight = a;
    $KW[this.wType]["updateView"](this, "referenceheight", a)
  });
  defineGetter(this, "referenceWidth", function() {
    return this.referencewidth
  });
  defineSetter(this, "referenceWidth", function(a) {
    this.referencewidth = a;
    $KW[this.wType]["updateView"](this, "referencewidth", a)
  });
  defineGetter(this, "onDownloadComplete", function() {
    return this.ondownloadcomplete
  });
  defineSetter(this, "onDownloadComplete", function(a) {
    this.ondownloadcomplete = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.referenceWidth = this.referencewidth;
    this.referenceHeight = this.referenceheight;
    this.imageScaleMode = this.imagescalemode;
    this.onDownloadComplete = this.ondownloadcomplete
  }
};
kony.ui.Image = function(c, b, a) {
  kony.ui.Image.baseConstructor.call(this, c, b, a);
  this.scaleMode = this.scalemode = a.scaleMode;
  this.heightwidth = a.heightWidth;
  this.imageWhileDownloading = this.imagewhiledownloading = a.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = a.imageWhenFailed;
  this.skin = c.skin;
  this.name = "kony.ui.Image"
};
kony.inherits(kony.ui.Image, kony.ui.Image2);
kony.ui.ImageGallery2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("ImageGallery2"))
  }
  kony.ui.ImageGallery2.baseConstructor.call(this, c, b, a);
  this.imageWhileDownloading = this.imagewhiledownloading = c.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = c.imageWhenFailed;
  this.spaceBetweenImages = this.spacebetweenimages = c.spaceBetweenImages;
  this.selectedindex = c.selectedIndex || null;
  this.onselection = c.onSelection;
  this.referencewidth = b.referenceWidth;
  this.referenceheight = b.referenceHeight;
  this.imagescalemode = b.imageScaleMode;
  this.wType = "IGallery";
  this.name = "kony.ui.ImageGallery2";
  this.canUpdateUI = true;
  this.selecteditem = null;
  var d = c.data;
  if (d) {
    this.masterdata = d[0];
    this.key = d[1]
  }
  defineGetter(this, "data", function() {
    return d
  });
  defineSetter(this, "data", function(e) {
    d = e;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", e)
  });
  this.viewtype = a.viewType;
  this.noofrowsperpage = a.noofRowsPerPage || 1;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = d;
    this.noofRowsPerPage = this.noofrowsperpage;
    this.viewType = this.viewtype
  } else {
    defineGetter(this, "viewType", function() {
      return this.viewtype
    });
    defineSetter(this, "viewType", function(e) {
      this.viewtype = e;
      $KW[this.wType]["updateView"](this, "viewtype", e)
    });
    defineGetter(this, "noofRowsPerPage", function() {
      return this.noofrowsperpage
    });
    defineSetter(this, "noofRowsPerPage", function(e) {
      this.noofrowsperpage = e;
      $KW[this.wType]["updateView"](this, "noofrowsperpage", e)
    })
  }
  kony.ui.ImageGallery2.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.ImageGallery2, kony.ui.Widget);
kony.ui.ImageGallery2.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(a) {
    this.selectedindex = a;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "referenceWidth", function() {
    return this.referencewidth
  });
  defineSetter(this, "referenceWidth", function(a) {
    this.referencewidth = a;
    $KW[this.wType]["updateView"](this, "referencewidth", a)
  });
  defineGetter(this, "referenceHeight", function() {
    return this.referenceheight
  });
  defineSetter(this, "referenceHeight", function(a) {
    this.referenceheight = a;
    $KW[this.wType]["updateView"](this, "referenceheight", a)
  });
  defineGetter(this, "imageScaleMode", function() {
    return this.imagescalemode
  });
  defineSetter(this, "imageScaleMode", function(a) {
    this.imagescalemode = a;
    $KW[this.wType]["updateView"](this, "imagescalemode", a)
  });
  defineGetter(this, "selectedItem", function() {
    return this.selecteditem
  });
  defineSetter(this, "selectedItem", function() {});
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedIndex = this.selectedindex;
    this.selectedItem = this.selecteditem;
    this.onSelection = this.onselection;
    this.referenceWidth = this.referencewidth;
    this.referenceHeight = this.referenceheight;
    this.imageScaleMode = this.imagescalemode
  }
};
kony.ui.ImageGallery2.prototype.addAll = function(b, a) {
  $KW.IGallery.addAll(this, b, a)
};
kony.ui.ImageGallery2.prototype.setData = function(b, a) {
  $KW.IGallery.setData(this, b, a)
};
kony.ui.ImageGallery2.prototype.setDataAt = function(b, a) {
  $KW.IGallery.setDataAt(this, b, a)
};
kony.ui.ImageGallery2.prototype.addDataAt = function(b, a) {
  $KW.IGallery.addDataAt(this, b, a)
};
kony.ui.ImageGallery2.prototype.removeAt = function(a) {
  $KW.IGallery.removeAt(this, a)
};
kony.ui.ImageGallery2.prototype.removeAll = function() {
  $KW.IGallery.removeAll(this)
};
kony.ui.ImageGallery = function(c, b, a) {
  kony.ui.ImageGallery.baseConstructor.call(this, c, b, a);
  this.itemsperrow = a.itemsPerRow;
  this.heightwidth = a.heightWidth;
  this.name = "kony.ui.ImageGallery";
  this.focuseditem = null;
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  this.focusedindex = c.focusedIndex || null;
  this.setGetterSetter()
};
kony.ui.ImageGallery.prototype.setGetterSetter = function() {
  defineGetter(this, "focusedIndex", function() {
    return this.focusedindex
  });
  defineSetter(this, "focusedIndex", function(a) {
    this.focusedindex = a;
    $KW[this.wType]["updateView"](this, "focusedindex", a)
  });
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.focusedIndex = this.focusedindex;
    this.focusedItem = this.focuseditem
  }
};
kony.inherits(kony.ui.ImageGallery, kony.ui.ImageGallery2);
kony.ui.HorizontalImageStrip2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("HorizontalImageStrip2"))
  }
  kony.ui.HorizontalImageStrip2.baseConstructor.call(this, c, b, a);
  this.imageWhileDownloading = this.imagewhiledownloading = c.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = c.imageWhenFailed;
  this.spaceBetweenImages = this.spacebetweenimages = c.spaceBetweenImages;
  this.showArrows = this.showarrows = c.showArrows || false;
  this.showScrollbars = this.showscrollbars = c.showScrollbars || false;
  this.viewtype = c.viewType || constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW;
  this.referencewidth = b.referenceWidth;
  this.referenceheight = b.referenceHeight;
  this.imagescalemode = b.imageScaleMode;
  this.selectedindex = c.selectedIndex;
  this.selecteditem = null;
  var d = c.arrowConfig || null;
  if (d) {
    this.leftarrowimage = d.leftArrowImage || "";
    this.rightarrowimage = d.rightArrowImage || ""
  }
  this.wType = "HStrip";
  this.name = "kony.ui.HorizontalImageStrip2";
  this.canUpdateUI = true;
  this.onselection = c.onSelection;
  var e = c.data;
  if (e) {
    this.masterdata = e[0];
    this.key = e[1]
  }
  defineGetter(this, "data", function() {
    return e
  });
  defineSetter(this, "data", function(f) {
    e = f;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", f)
  });
  this.viewconfig = c.viewConfig || null;
  this.scrollbounce = this.viewconfig && this.viewconfig.stripviewConfig && this.viewconfig.stripviewConfig.enableScrollBounce;
  kony.ui.HorizontalImageStrip2.prototype.setGetterSetter.call(this);
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = e
  }
};
kony.inherits(kony.ui.HorizontalImageStrip2, kony.ui.Widget);
kony.ui.HorizontalImageStrip2.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(a) {
    this.selectedindex = a;
    $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "selectedItem", function() {
    return this.selecteditem
  });
  defineSetter(this, "selectedItem", function() {});
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "viewConfig", function() {
    return this.viewconfig
  });
  defineSetter(this, "viewConfig", function(a) {
    this.viewconfig = a;
    $KW[this.wType]["updateView"](this, "viewconfig", a)
  });
  defineGetter(this, "referenceWidth", function() {
    return this.referencewidth
  });
  defineSetter(this, "referenceWidth", function(a) {
    this.referencewidth = a;
    $KW[this.wType]["updateView"](this, "referencewidth", a)
  });
  defineGetter(this, "referenceHeight", function() {
    return this.referenceheight
  });
  defineSetter(this, "referenceHeight", function(a) {
    this.referenceheight = a;
    $KW[this.wType]["updateView"](this, "referenceheight", a)
  });
  defineGetter(this, "imageScaleMode", function() {
    return this.imagescalemode
  });
  defineSetter(this, "imageScaleMode", function(a) {
    this.imagescalemode = a;
    $KW[this.wType]["updateView"](this, "imagescalemode", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedIndex = this.selectedindex;
    this.selectedItem = this.selecteditem;
    this.onSelection = this.onselection;
    this.viewType = this.viewtype;
    this.referenceWidth = this.referencewidth;
    this.referenceHeight = this.referenceheight;
    this.imageScaleMode = this.imagescalemode
  }
};
kony.ui.HorizontalImageStrip2.prototype.addAll = function(b, a) {
  $KW.HStrip.addAll(this, b, a)
};
kony.ui.HorizontalImageStrip2.prototype.removeAt = function(a) {
  $KW.HStrip.removeAt(this, a)
};
kony.ui.HorizontalImageStrip2.prototype.removeAll = function() {
  $KW.HStrip.removeAll(this)
};
kony.ui.HorizontalImageStrip2.prototype.setData = function(b, a) {
  $KW.HStrip.setData(this, b, a)
};
kony.ui.HorizontalImageStrip2.prototype.setDataAt = function(b, a) {
  $KW.HStrip.setDataAt(this, b, a)
};
kony.ui.HorizontalImageStrip2.prototype.addDataAt = function(b, a) {
  $KW.HStrip.addDataAt(this, b, a)
};
kony.ui.HorizontalImageStrip = function(c, b, a) {
  kony.ui.HorizontalImageStrip.baseConstructor.call(this, c, b, a);
  this.viewtype = this.view = a.view || constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW;
  this.showArrows = this.showarrows = a.showArrows;
  this.scrollBounce = this.scrollbounce = a.scrollBounce;
  this.heightWidth = this.heightwidth = a.heightWidth;
  this.imageWhenFailed = this.imagewhenfailed = a.imageWhenFailed;
  this.imageWhileDownloading = this.imagewhiledownloading = a.imageWhileDownloading;
  this.spaceBetweenImages = this.spacebetweenimages = a.spaceBetweenImages;
  this.name = "kony.ui.HorizontalImageStrip";
  this.focuseditem = null;
  this.focusedindex = c.focusedIndex || null;
  this.setGetterSetter()
};
kony.inherits(kony.ui.HorizontalImageStrip, kony.ui.HorizontalImageStrip2);
kony.ui.HorizontalImageStrip.prototype.setGetterSetter = function() {
  defineGetter(this, "focusedIndex", function() {
    return this.focusedindex
  });
  defineSetter(this, "focusedIndex", function(a) {
    this.focusedindex = a;
    $KW[this.wType]["updateView"](this, "focusedindex", a)
  });
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.focusedIndex = this.focusedindex;
    this.focusedItem = this.focuseditem
  }
};
kony.ui.Map = function(d, c, b) {
  if (arguments.length < 3) {
    d = c = b = $KU.mergeDefaults(d, $KU.getAllDefaults("Map"))
  }
  kony.ui.Map.baseConstructor.call(this, d, c, b);
  this.provider = d.provider || constants.MAP_PROVIDER_GOOGLE;
  this.mapKey = d.mapKey;
  this.mapClientId = d.clientId;
  this.navControlsImageConfig = b.navControlsImageConfig;
  this.mapSource = this.mapsrc = b.mapSource;
  this.screenLevelWidget = d.screenLevelWidget;
  this.defaultpinimage = d.defaultPinImage;
  this.locationdata = d.locationData;
  this.zoomlevel = b.zoomLevel;
  this.markers = [];
  this.displaymaptypecontrols = true;
  this.onpinclick = d.onPinClick;
  this.onselection = d.onSelection;
  this.containerheight = c.containerHeight;
  this.containerheightreference = c.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(f) {
    this.containerheight = f;
    kony.model.updateView(this, "containerheight", f)
  });
  defineGetter(this, "displayMapTypeControls", function() {
    return this.displaymaptypecontrols
  });
  defineSetter(this, "displayMapTypeControls", function(f) {
    this.displaymaptypecontrols = f
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(f) {
    this.containerheightreference = f;
    kony.model.updateView(this, "containerheightreference", f)
  });
  this.wType = "Map";
  this.name = "kony.ui.Map";
  var a = b.address;
  defineGetter(this, "address", function() {
    return a
  });
  defineSetter(this, "address", function(f) {
    a = f;
    $KW[this.wType]["updateView"](this, "address", f)
  });
  this.calloutPostion = d.calloutPostion;
  this.widgetdatamapforcallout = d.widgetDataMapForCallout;
  defineGetter(this, "widgetDataMapForCallout", function() {
    return this.widgetdatamapforcallout
  });
  defineSetter(this, "widgetDataMapForCallout", function(f) {
    this.widgetdatamapforcallout = f
  });
  this.callouttemplate = d.calloutTemplate;
  this.calloutwidth = d.calloutWidth;
  defineGetter(this, "calloutTemplate", function() {
    return this.callouttemplate
  });
  defineSetter(this, "calloutTemplate", function(f) {
    this.callouttemplate = f
  });
  defineGetter(this, "calloutWidth", function() {
    return this.calloutwidth
  });
  defineSetter(this, "calloutWidth", function(f) {
    this.calloutwidth = f;
    $KW.Map.setUpInteractiveCanvasMap()
  });
  var e = b.mode || constants.MAP_VIEW_MODE_NORMAL;
  defineGetter(this, "mode", function() {
    return e
  });
  defineSetter(this, "mode", function(f) {
    e = f;
    $KW[this.wType]["updateView"](this, "mode", f)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.address = a;
    this.mode = e
  }
  this.setGetterSetter();
  d.locationData && $KW[this.wType]["updateView"](this, "locationdata", d.locationData)
};
kony.inherits(kony.ui.Map, kony.ui.Widget);
kony.ui.Map.prototype.setGetterSetter = function() {
  defineGetter(this, "zoomLevel", function() {
    return this.zoomlevel
  });
  defineSetter(this, "zoomLevel", function(a) {
    this.zoomlevel = a;
    $KW[this.wType]["updateView"](this, "zoomlevel", a)
  });
  defineGetter(this, "locationData", function() {
    return this.locationdata
  });
  defineSetter(this, "locationData", function(a) {
    this.locationdata = a;
    $KW[this.wType]["updateView"](this, "locationdata", a)
  });
  defineGetter(this, "defaultPinImage", function() {
    return this.defaultpinimage
  });
  defineSetter(this, "defaultPinImage", function(a) {
    this.defaultpinimage = a;
    $KW[this.wType]["updateView"](this, "defaultpinimage", a)
  });
  defineGetter(this, "onPinClick", function() {
    return this.onpinclick
  });
  defineSetter(this, "onPinClick", function(a) {
    this.onpinclick = a
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSelection = this.onselection;
    this.onPinClick = this.onpinclick;
    this.defaultPinImage = this.defaultpinimage;
    this.locationData = this.locationdata;
    this.zoomLevel = this.zoomlevel
  }
};
kony.ui.Map.prototype.navigateTo = function(b, a) {
  $KW.Map.navigateTo(this, b, a)
};
kony.ui.Map.prototype.navigateToLocation = function(c, a, b) {
  $KW.Map.navigateToLocation(this, c, a, b)
};
kony.ui.Map.prototype.routeLocations = function(c, d, a, b) {
  $KW.Map.routeLocations(this, c, d, a, b)
};
kony.ui.Map.prototype.dismissCallout = function(b, a) {
  $KW.Map.dismissCallout(this, b, a)
};
kony.ui.Browser = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Browser"))
  }
  kony.ui.Browser.baseConstructor.call(this, c, b, a);
  this.onSuccess = c.onSuccess;
  this.onFailure = c.onFailure;
  this.screenLevelWidget = c.screenLevelWidget;
  this.enableZoom = c.enableZoom;
  this.detectTelNumber = c.detectTelNumber;
  this.readconfig = function(d) {
    this.url = d.URL;
    this.method = d.requestMethod;
    this.data = d.requestData
  };
  c.requestURLConfig && this.readconfig(c.requestURLConfig);
  this.requesturlconfig = c.requestURLConfig;
  this.htmlstring = c.htmlString;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  this.wType = "Browser";
  this.name = "kony.ui.Browser";
  this.setGetterSetter()
};
kony.inherits(kony.ui.Browser, kony.ui.Widget);
kony.ui.Browser.prototype.setGetterSetter = function() {
  defineGetter(this, "htmlString", function() {
    return this.htmlstring
  });
  defineSetter(this, "htmlString", function(a) {
    this.htmlstring = a;
    $KW[this.wType]["updateView"](this, "htmlstring", a)
  });
  defineGetter(this, "requestURLConfig", function() {
    return this.requesturlconfig
  });
  defineSetter(this, "requestURLConfig", function(a) {
    this.requesturlconfig = a;
    this.readconfig(a);
    $KW[this.wType]["updateView"](this, "requesturlconfig", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.htmlString = this.htmlstring;
    this.requestURLConfig = this.requesturlconfig
  }
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  })
};
kony.ui.Browser.prototype.reload = kony.ui.Browser.prototype.goForward = kony.ui.Browser.prototype.goBack = kony.ui.Browser.prototype.canGoBack = kony.ui.Browser.prototype.canGoForward = kony.ui.Browser.prototype.clearHistory = function() {
  console.warn("Browser Methods are not supported in SPA")
};
kony.ui.Browser.prototype.evaluateJavaScript = function(b) {
  console.log("executing javascript in " + this.id + " window handler");
  var c = document.createElement("script");
  c.innerHTML = this.id + "Err = null; try{" + b + "}catch(e){" + this.id + "Err=e}";
  if ($KG["webView" + this.id] && !$KG["webView" + this.id].closed) {
    var a = document.createElement("a");
    a.href = this.url;
    if (window.location.origin != a.origin) {
      throw {
        errorCode: "104",
        name: "Not supported Error",
        message: "Not supported Error"
      }
    }
    $KG["webView" + this.id].document.head.appendChild(c);
    if ($KG["webView" + this.id][this.id + "Err"] != null) {
      throw {
        errorCode: "106",
        name: "Unknown Error",
        message: "Unknown Error"
      }
    }
  } else {
    document.head.appendChild(c);
    if (window[this.id + "Err"] != null) {
      throw {
        errorCode: "106",
        name: "Unknown Error",
        message: "Unknown Error"
      }
    }
  }
  return null
};
kony.ui.Browser.prototype.evaluateJavaScriptAsync = function(a) {
  return null
};
kony.ui.RichText = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("RichText"))
  }
  kony.ui.RichText.baseConstructor.call(this, c, b, a);
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  this.linkskin = c.linkSkin;
  this.linkfocusskin = a.linkFocusSkin;
  defineGetter(this, "linkSkin", function() {
    return this.linkskin
  });
  defineSetter(this, "linkSkin", function(e) {
    this.linkskin = e;
    $KW[this.wType]["updateView"](this, "linkskin", e)
  });
  defineGetter(this, "linkFocusSkin", function() {
    return this.linkfocusskin
  });
  defineSetter(this, "linkFocusSkin", function(e) {
    this.linkfocusskin = e;
    $KW[this.wType]["updateView"](this, "linkfocusskin", e)
  });
  this.canUpdateUI = true;
  this.wType = "RichText";
  this.name = "kony.ui.RichText";
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d
  }
};
kony.inherits(kony.ui.RichText, kony.ui.Widget);
kony.ui.ScrollBox = function(d, c, b) {
  if (arguments.length < 3) {
    d = c = b = $KU.mergeDefaults(d, $KU.getAllDefaults("ScrollBox"))
  }
  kony.ui.ScrollBox.baseConstructor.call(this, d, c, b);
  this.totalWt = 0;
  this.position = d.position || constants.BOX_POSITION_AS_NORMAL;
  this.enableScrollByPage = d.enableScrollByPage || false;
  this.scrollDirection = this.scrolldirection = d.scrollDirection || constants.SCROLLBOX_SCROLL_HORIZONTAL;
  this.showscrollbars = d.showScrollbars === undefined ? true : d.showScrollbars;
  this.scrollbar = this.showscrollbars ? "scrollbar" : "none";
  this.containerheight = c.containerHeight;
  this.containerheightreference = c.containerHeightReference;
  this.wType = "ScrollBox";
  this.name = "kony.ui.ScrollBox";
  var a = (b.scrollArrowConfig && (b.scrollArrowConfig[0] || b.scrollArrowConfig[1] || b.scrollArrowConfig[2] || b.scrollArrowConfig[3])) ? b.scrollArrowConfig : null;
  if (a) {
    this.scrollbar = "arrows";
    if (a.length >= 4) {
      this.leftarrowimage = a[0];
      this.toparrowimage = a[1];
      this.rightarrowimage = a[2];
      this.bottomarrowimage = a[3]
    }
  }
  this.scrollingevents = d.scrollingEvents || null;
  if (this.scrollingevents) {
    this.scrollingevents.onpush = d.scrollingEvents.onPush;
    this.scrollingevents.onpull = d.scrollingEvents.onPull;
    this.scrollingevents.onreachingbeginning = d.scrollingEvents.onReachingBegining;
    this.scrollingevents.onreachingend = d.scrollingEvents.onReachingEnd
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.ScrollBox, kony.ui.Box);
kony.ui.ScrollBox.prototype.setGetterSetter = function() {
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    $KW[this.wType]["updateView"](this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    $KW[this.wType]["updateView"](this, "containerheightreference", a)
  });
  defineGetter(this, "showScrollbars", function() {
    return this.showscrollbars
  });
  defineSetter(this, "showScrollbars", function(a) {
    this.showscrollbars = a;
    $KW[this.wType]["updateView"](this, "showscrollbars", a)
  });
  defineGetter(this, "scrollingEvents", function() {
    return this.scrollingevents
  });
  defineSetter(this, "scrollingEvents", function(a) {
    this.scrollingevents = a;
    if (a) {
      this.scrollingevents.onpush = a.onPush;
      this.scrollingevents.onpull = a.onPull;
      this.scrollingevents.onreachingbeginning = a.onReachingBegining;
      this.scrollingevents.onreachingend = a.onReachingEnd
    }
  });
  this.scrollingevents = this.scrollingevents || {};
  this.scrollingevents.scrollObj = this;
  if (this.scrollingevents) {
    defineGetter(this.scrollingEvents, "onPush", function() {
      return this.onpush
    });
    defineSetter(this.scrollingEvents, "onPush", function(a) {
      this.onpush = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onpush", a)
    });
    defineGetter(this.scrollingEvents, "onPull", function() {
      return this.onpull
    });
    defineSetter(this.scrollingEvents, "onPull", function(a) {
      this.onpull = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onpull", a)
    });
    defineGetter(this.scrollingEvents, "onReachingBegining", function() {
      return this.onreachingbeginning
    });
    defineSetter(this.scrollingEvents, "onReachingBegining", function(a) {
      this.onreachingbeginning = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onreachingbeginning", a)
    });
    defineGetter(this.scrollingEvents, "onReachingEnd", function() {
      return this.onreachingend
    });
    defineSetter(this.scrollingEvents, "onReachingEnd", function(a) {
      this.onreachingend = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onreachingend", a)
    })
  }
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.containerheight = this.containerheight;
    this.containerheightreference = this.containerheightreference;
    this.showScrollbars = this.showscrollbars;
    this.scrollingEvents = this.scrollingevents;
    if (this.scrollingEvents) {
      this.scrollingEvents.onPush = this.scrollingevents.onpush;
      this.scrollingEvents.onPull = this.scrollingevents.onpull;
      this.scrollingEvents.onReachingBeginning = this.scrollingevents.onreachingbegining;
      this.scrollingEvents.onReachingEnd = this.scrollingevents.onreachingend
    }
  }
};
kony.ui.ScrollBox.prototype.scrollToBeginning = function() {
  $KW.ScrollBox.scrollToBeginning(this)
};
kony.ui.ScrollBox.prototype.scrollToEnd = function() {
  $KW.ScrollBox.scrollToEnd(this)
};
kony.ui.FlexContainer = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("FlexContainer"))
  }
  this.name = "kony.ui.FlexContainer";
  kony.ui.FlexContainer.baseConstructor.call(this, c, b, a);
  this.wType = "FlexContainer";
  this.allboxes = [];
  this.autogrowMode = c.autogrowMode;
  this.autogrowHeight = false;
  this.canMeasureChildrenHeight = true;
  this.layouttype = c.layoutType || kony.flex.FREE_FORM;
  defineGetter(this, "layoutType", function() {
    return this.layouttype
  });
  this.clipbounds = (typeof c.clipBounds == "undefined") ? true : c.clipBounds;
  defineGetter(this, "clipBounds", function() {
    return this.clipbounds
  });
  defineSetter(this, "clipBounds", function(d) {
    this.clipbounds = d;
    $KW[this.wType]["updateView"](this, "clipbounds", d)
  });
  this.dolayout = c.doLayout;
  defineGetter(this, "doLayout", function() {
    return this.dolayout
  });
  defineSetter(this, "doLayout", function(d) {
    this.dolayout = d
  })
};
kony.inherits(kony.ui.FlexContainer, kony.ui.ContainerWidget);
kony.ui.FlexContainer.prototype.add = function() {
  var a = [].slice.call(arguments);
  boxWidgetExtendAdd.call(this, a)
};
kony.ui.FlexContainer.prototype.addAt = function(b, a) {
  boxWidgetExtendAddAt.call(this, b, a)
};
kony.ui.FlexContainer.prototype.addAll = function(b, a) {
  boxWidgetExtendAddAt.call(this, b, a)
};
kony.ui.FlexContainer.prototype.remove = function(a) {
  boxWidgetExtendRemove.call(this, a)
};
kony.ui.FlexContainer.prototype.removeAt = function(a) {
  return boxWidgetExtendRemoveAt.call(this, a)
};
kony.ui.FlexContainer.prototype.removeAll = function() {
  boxWidgetExtendRemoveAll.call(this)
};
kony.ui.FlexContainer.prototype.widgets = function() {
  return kony.ui.ContainerWidget.prototype.widgets.call(this)
};
kony.ui.FlexContainer.prototype.forceLayout = function() {
  $KW.FlexContainer.forceLayout(this)
};
kony.ui.FlexContainer.prototype.setDefaultUnit = function(a) {
  this.defaultunit = a
};
kony.ui.FlexScrollContainer = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("FlexScrollContainer"))
  }
  this.name = "kony.ui.FlexScrollContainer";
  kony.ui.FlexScrollContainer.baseConstructor.call(this, c, b, a);
  this.wType = "FlexScrollContainer";
  this.allboxes = [];
  this.enablescrolling = (typeof c.enableScrolling == "undefined") ? true : c.enableScrolling;
  defineGetter(this, "enableScrolling", function() {
    return this.enablescrolling
  });
  defineSetter(this, "enableScrolling", function(d) {
    this.enablescrolling = d;
    $KW[this.wType]["updateView"](this, "enableScrolling", d)
  });
  this.scrolldirection = (typeof c.scrollDirection == "undefined") ? kony.flex.SCROLL_HORIZONTAL : c.scrollDirection;
  defineGetter(this, "scrollDirection", function() {
    return this.scrolldirection
  });
  defineSetter(this, "scrollDirection", function(d) {
    this.scrolldirection = d;
    $KW[this.wType]["updateView"](this, "scrollDirection", d)
  });
  this.contentoffset = c.contentOffset;
  defineGetter(this, "contentOffset", function() {
    return this.contentoffset
  });
  defineSetter(this, "contentOffset", function(d) {
    this.contentoffset = d;
    $KW.FlexScrollContainer.updateView(this, "contentOffset", d)
  });
  this.contentsize = c.contentSize;
  defineGetter(this, "contentSize", function() {
    return this.contentsize
  });
  defineSetter(this, "contentSize", function(d) {
    this.contentsize = d
  });
  defineGetter(this, "contentOffsetMeasured", function() {
    return $KW.FlexScrollContainer.getContentOffsetMeasured(this)
  });
  defineSetter(this, "contentOffsetMeasured", function(d) {});
  this.contentsize = c.contentSize;
  defineGetter(this, "contentSizeMeasured", function() {
    return $KW.FlexScrollContainer.getContentSizeMeasured(this)
  });
  defineSetter(this, "contentSizeMeasured", function(d) {});
  this.bounce = (typeof c.bounces == "undefined") ? true : c.bounces;
  defineGetter(this, "bounces", function() {
    return this.bounce
  });
  defineSetter(this, "bounces", function(d) {
    this.bounce = d;
    $KW[this.wType]["updateView"](this, "bounces", d)
  });
  this.allowhorizontalbounce = (typeof c.allowHorizontalBounce == "undefined") ? true : c.allowHorizontalBounce;
  defineGetter(this, "allowHorizontalBounce", function() {
    return this.allowhorizontalbounce
  });
  defineSetter(this, "allowHorizontalBounce", function(d) {
    this.allowhorizontalbounce = d;
    $KW[this.wType]["updateView"](this, "allowHorizontalBounce", d)
  });
  this.allowverticalbounce = (typeof c.allowVerticalBounce == "undefined") ? true : c.allowVerticalBounce;
  defineGetter(this, "allowVerticalBounce", function() {
    return this.allowverticalbounce
  });
  defineSetter(this, "allowVerticalBounce", function(d) {
    this.allowverticalbounce = d;
    $KW[this.wType]["updateView"](this, "allowVerticalBounce", d)
  });
  this.horizontalscrollindicator = (typeof c.horizontalScrollIndicator == "undefined") ? true : c.horizontalScrollIndicator;
  defineGetter(this, "horizontalScrollIndicator", function() {
    return this.horizontalscrollindicator
  });
  defineSetter(this, "horizontalScrollIndicator", function(d) {
    this.horizontalscrollindicator = d;
    $KW[this.wType]["updateView"](this, "horizontalScrollIndicator", d)
  });
  this.verticalscrollindicator = (typeof c.verticalScrollIndicator == "undefined") ? true : c.verticalScrollIndicator;
  defineGetter(this, "verticalScrollIndicator", function() {
    return this.verticalscrollindicator
  });
  defineSetter(this, "verticalScrollIndicator", function(d) {
    this.verticalscrollindicator = d;
    $KW[this.wType]["updateView"](this, "verticalScrollIndicator", d)
  });
  this.pagineenabled = (typeof c.pagineEnabled == "undefined") ? false : c.pagineEnabled;
  defineGetter(this, "pagineEnabled", function() {
    return this.pagineenabled
  });
  defineSetter(this, "pagineEnabled", function(d) {
    this.pagineenabled = d
  });
  this.dragg = false;
  defineGetter(this, "dragging", function() {
    var d = this.pf + "_" + this.id + "_scroller";
    if ($KG[d]) {
      return $KG[d].dragging
    }
    return false
  });
  defineSetter(this, "dragging", function(d) {});
  defineGetter(this, "tracking", function() {
    var d = this.pf + "_" + this.id + "_scroller";
    if ($KG[d]) {
      return $KG[d].tracking
    }
    return false
  });
  defineSetter(this, "tracking", function(d) {});
  defineGetter(this, "decelerating", function() {
    var d = this.pf + "_" + this.id + "_scroller";
    if ($KG[d]) {
      return !this.tracking && $KG[d].animating
    }
    return false
  });
  defineSetter(this, "decelerating", function(d) {});
  this.onscrollstart = c.onScrollStart;
  defineGetter(this, "onScrollStart", function() {
    return this.onscrollstart
  });
  defineSetter(this, "onScrollStart", function(d) {
    this.onscrollstart = d;
    $KW[this.wType]["updateView"](this, "onScrollStart", d)
  });
  this.onscrolltouchreleased = c.onScrollTouchReleased;
  defineGetter(this, "onScrollTouchReleased", function() {
    return this.onscrolltouchreleased
  });
  defineSetter(this, "onScrollTouchReleased", function(d) {
    this.onscrolltouchreleased = d;
    $KW[this.wType]["updateView"](this, "onScrollTouchReleased", d)
  });
  this.onscrolling = c.onScrolling;
  defineGetter(this, "onScrolling", function() {
    return this.onscrolling
  });
  defineSetter(this, "onScrolling", function(d) {
    this.onscrolling = d;
    $KW[this.wType]["updateView"](this, "onScrolling", d)
  });
  this.ondecelerationstarted = c.onDecelerationStarted;
  defineGetter(this, "onDecelerationStarted", function() {
    return this.ondecelerationstarted
  });
  defineSetter(this, "onDecelerationStarted", function(d) {
    this.ondecelerationstarted = d;
    $KW[this.wType]["updateView"](this, "onDecelerationStarted", d)
  });
  this.onscrollend = c.onScrollEnd;
  defineGetter(this, "onScrollEnd", function() {
    return this.onscrollend
  });
  defineSetter(this, "onScrollEnd", function(d) {
    this.onscrollend = d;
    $KW[this.wType]["updateView"](this, "onScrollEnd", d)
  })
};
kony.inherits(kony.ui.FlexScrollContainer, kony.ui.FlexContainer);
kony.ui.FlexScrollContainer.prototype.forceLayout = function() {
  $KW.FlexScrollContainer.forceLayout(this)
};
kony.ui.FlexScrollContainer.prototype.setContentOffset = function(a, b) {
  $KW.FlexScrollContainer.setContentOffSet(this, a, b)
};
kony.ui.FlexScrollContainer.prototype.scrollToWidget = function(b, a) {
  $KW.FlexScrollContainer.scrollToWidget(this, b, a)
};
kony.ui.FlexScrollContainer.prototype.scrollToEnd = function() {
  $KW.FlexScrollContainer.scrollToEnd(this)
};
kony.ui.SegmentedUI2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("SegmentedUI2"))
  }
  kony.ui.SegmentedUI2.baseConstructor.call(this, c, b, a);
  this.groupcells = c.groupCells || false;
  this.screenLevelWidget = c.screenLevelWidget || false;
  this.widgetskin = c.widgetSkin;
  this.skin = c.skin;
  this.rowskin = c.rowSkin;
  this.focusskin = c.rowFocusSkin;
  this.askin = c.alternateRowSkin;
  this.sectionheaderskin = c.sectionHeaderSkin;
  this.widgetdatamap = c.widgetDataMap;
  this.rowtemplate = c.rowTemplate;
  this.sectionheadertemplate = c.sectionHeaderTemplate;
  this.separatorrequired = c.separatorRequired || false;
  this.separatorthickness = c.separatorThickness;
  this.separatorcolor = c.separatorColor;
  this.viewtype = c.viewType;
  this.autogrowMode = c.autogrowMode;
  this.onrowclick = c.onRowClick;
  this.retainselection = c.retainSelection || false;
  this.needpageindicator = c.needPageIndicator || false;
  this.pageondotimage = c.pageOnDotImage || false;
  this.pageoffdotimage = c.pageOffDotImage || false;
  this.onswipe = c.onSwipe;
  this.showscrollbars = c.showScrollbars;
  this.scrollingevents = c.scrollingEvents || false;
  this.selectionbehavior = c.selectionBehavior || constants.SEGUI_DEFAULT_BEHAVIOR;
  this.selectionbehaviorconfig = c.selectionBehaviorConfig;
  this.selectedindex = c.selectedIndex || null;
  this.selecteditems = null;
  this.selectedindices = c.selectedIndices || null;
  this.selectedrowindex = c.selectedRowIndex || null;
  this.selectedrowindices = c.selectedRowIndices || null;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  this.onrowclick = c.onRowClick;
  var d = c.data;
  defineGetter(this, "data", function() {
    return d
  });
  defineSetter(this, "data", function(e) {
    d = e;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", e)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = d;
    this.rowskin = this.skin;
    this.rowfocusskin = this.focusskin;
    this.alternaterowskin = this.askin
  }
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.setGetterSetter();
  this.wType = "Segment";
  this.name = "kony.ui.SegmentedUI2";
  this.canUpdateUI = true
};
kony.inherits(kony.ui.SegmentedUI2, kony.ui.Widget);
kony.ui.SegmentedUI2.prototype.setGetterSetter = function() {
  defineGetter(this, "widgetSkin", function() {
    return this.widgetskin
  });
  defineSetter(this, "widgetSkin", function(b) {
    var a = this.widgetskin;
    this.widgetskin = b;
    $KW[this.wType]["updateView"](this, "widgetskin", b, a)
  });
  defineGetter(this, "rowSkin", function() {
    return this.rowskin
  });
  defineSetter(this, "rowSkin", function(b) {
    var a = this.skin;
    this.rowskin = b;
    $KW[this.wType]["updateView"](this, "rowskin", b, a)
  });
  defineGetter(this, "rowFocusSkin", function() {
    return this.focusskin
  });
  defineSetter(this, "rowFocusSkin", function(b) {
    var a = this.focusskin;
    this.focusskin = b;
    kony.model.updateView(this, "focusskin", b)
  });
  defineGetter(this, "alternateRowSkin", function() {
    return this.askin
  });
  defineSetter(this, "alternateRowSkin", function(b) {
    var a = this.askin;
    this.askin = b;
    $KW[this.wType]["updateView"](this, "askin", b, a)
  });
  defineGetter(this, "sectionHeaderSkin", function() {
    return this.sectionheaderskin
  });
  defineSetter(this, "sectionHeaderSkin", function(b) {
    var a = this.sectionheaderskin;
    this.sectionheaderskin = b;
    $KW[this.wType]["updateView"](this, "sectionskin", b, a)
  });
  defineGetter(this, "widgetDataMap", function() {
    return this.widgetdatamap
  });
  defineSetter(this, "widgetDataMap", function(a) {
    this.widgetdatamap = a
  });
  defineGetter(this, "rowTemplate", function() {
    return this.rowtemplate
  });
  defineSetter(this, "rowTemplate", function(a) {
    this.rowtemplate = a
  });
  defineGetter(this, "sectionHeaderTemplate", function() {
    return this.sectionheadertemplate
  });
  defineSetter(this, "sectionHeaderTemplate", function(a) {
    this.sectionheadertemplate = a
  });
  defineGetter(this, "separatorRequired", function() {
    return this.separatorrequired
  });
  defineSetter(this, "separatorRequired", function(a) {
    this.separatorrequired = a;
    $KW[this.wType]["updateView"](this, "separatorrequired", a)
  });
  defineGetter(this, "separatorThickness", function() {
    return this.separatorthickness
  });
  defineSetter(this, "separatorThickness", function(a) {
    this.separatorthickness = a;
    $KW[this.wType]["updateView"](this, "separatorthickness", a)
  });
  defineGetter(this, "separatorColor", function() {
    return this.separatorcolor
  });
  defineSetter(this, "separatorColor", function(a) {
    this.separatorcolor = a;
    $KW[this.wType]["updateView"](this, "separatorcolor", a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(b) {
    var a = this.viewtype;
    this.viewtype = b;
    $KW[this.wType]["updateView"](this, "viewtype", b, a)
  });
  defineGetter(this, "onRowClick", function() {
    return this.onrowclick
  });
  defineSetter(this, "onRowClick", function(a) {
    this.onrowclick = a
  });
  defineGetter(this, "retainSelection", function() {
    return this.retainselection
  });
  defineSetter(this, "retainSelection", function(a) {
    this.retainselection = a
  });
  defineGetter(this, "needPageIndicator", function() {
    return this.needpageindicator
  });
  defineSetter(this, "needPageIndicator", function(a) {
    this.needpageindicator = a;
    $KW[this.wType]["updateView"](this, "needpageindicator", a)
  });
  defineGetter(this, "pageOnDotImage", function() {
    return this.pageondotimage
  });
  defineSetter(this, "pageOnDotImage", function(a) {
    this.pageondotimage = a;
    $KW[this.wType]["updateView"](this, "pageondotimage", a)
  });
  defineGetter(this, "pageOffDotImage", function() {
    return this.pageoffdotimage
  });
  defineSetter(this, "pageOffDotImage", function(a) {
    this.pageoffdotimage = a;
    $KW[this.wType]["updateView"](this, "pageoffdotimage", a)
  });
  defineGetter(this, "onSwipe", function() {
    return this.onswipe
  });
  defineSetter(this, "onSwipe", function(a) {
    this.onswipe = a
  });
  defineGetter(this, "showScrollbars", function() {
    return this.showscrollbars
  });
  defineSetter(this, "showScrollbars", function(a) {
    this.showscrollbars = a
  });
  defineGetter(this, "scrollingEvents", function() {
    return this.scrollingevents
  });
  defineSetter(this, "scrollingEvents", function(a) {
    this.scrollingevents = a;
    $KW[this.wType]["updateView"](this, "scrollingevents", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  defineGetter(this, "selectionBehavior", function() {
    return this.selectionbehavior
  });
  defineSetter(this, "selectionBehavior", function(b) {
    var a = this.selectionbehavior;
    this.selectionbehavior = b;
    $KW[this.wType]["updateView"](this, "selectionbehavior", b, a)
  });
  defineGetter(this, "selectionBehaviorConfig", function() {
    return this.selectionbehaviorconfig
  });
  defineSetter(this, "selectionBehaviorConfig", function(a) {
    this.selectionbehaviorconfig = a;
    $KW[this.wType]["updateView"](this, "selectionbehaviorconfig", a)
  });
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(a) {
    this.selectedindex = a;
    $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "selectedItems", function() {
    return this.selecteditems
  });
  defineGetter(this, "selectedIndices", function() {
    return this.selectedindices
  });
  defineSetter(this, "selectedIndices", function(a) {
    this.selectedindices = a;
    $KW[this.wType]["updateView"](this, "selectedindices", a)
  });
  defineGetter(this, "selectedRowIndex", function() {
    return this.selectedrowindex
  });
  defineSetter(this, "selectedRowIndex", function(a) {
    this.selectedrowindex = a;
    $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "selectedRowIndices", function() {
    return this.selectedrowindices
  });
  defineSetter(this, "selectedRowIndices", function(a) {
    this.selectedrowindices = a;
    $KW[this.wType]["updateView"](this, "selectedindices", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.widgetSkin = this.widgetskin;
    this.rowSkin = this.skin;
    this.rowFocusSkin = this.focusskin;
    this.alternateRowSkin = this.askin;
    this.sectionHeaderSkin = this.sectionheaderskin;
    this.widgetDataMap = this.widgetdatamap;
    this.rowTemplate = this.rowtemplate;
    this.sectionHeaderTemplate = this.sectionHeaderTemplate;
    this.separatorRequired = this.separatorrequired;
    this.separatorThickness = this.separatorthickness;
    this.separatorColor = this.separatorcolor;
    this.viewType = this.viewtype;
    this.onRowClick = this.onrowclick;
    this.retainSelection = this.retainselection;
    this.needPageIndicator = this.needpageindicator;
    this.pageOnDotImage = this.pageondotimage;
    this.pageOffDotImage = this.pageoffdotimage;
    this.onSwipe = this.onswipe;
    this.showScrollbars = this.showscrollbars;
    this.scrollingEvents = this.scrollingevents;
    this.selectionBehavior = this.selectionbehavior;
    this.selectionBehaviorConfig = this.selectionbehaviorconfig;
    this.selectedIndex = this.selectedindex;
    this.selectedItems = this.selecteditems;
    this.selectedIndices = this.selectedindices;
    this.selectedRowIndex = this.selectedrowindex;
    this.selectedRowIndices = this.selectedrowindices
  }
};
kony.ui.SegmentedUI2.prototype.addAll = function(a) {
  $KW.Segment.addAll(this, a)
};
kony.ui.SegmentedUI2.prototype.addDataAt = function(a, c, b) {
  $KW.Segment.addDataAt(this, a, c, b)
};
kony.ui.SegmentedUI2.prototype.addSectionAt = function(a, b) {
  $KW.Segment.addSectionAt(this, a, b)
};
kony.ui.SegmentedUI2.prototype.removeAll = function() {
  $KW.Segment.removeAll(this)
};
kony.ui.SegmentedUI2.prototype.removeAt = function(b, a) {
  $KW.Segment.removeAt(this, b, a)
};
kony.ui.SegmentedUI2.prototype.removeSectionAt = function(a) {
  $KW.Segment.removeSectionAt(this, a)
};
kony.ui.SegmentedUI2.prototype.setData = function(a) {
  $KW.Segment.setData(this, a)
};
kony.ui.SegmentedUI2.prototype.setDataAt = function(a, c, b) {
  $KW.Segment.setDataAt(this, a, c, b)
};
kony.ui.SegmentedUI2.prototype.setSectionAt = function(a, b) {
  $KW.Segment.setSectionAt(this, a, b)
};
kony.ui.SegmentedUI2.prototype.setDataWithSections = function(a) {
  $KW.Segment.setDataWithSections(this, a)
};
kony.ui.SegmentedUI = function(c, b, a) {
  kony.ui.SegmentedUI.baseConstructor.call(this, c, b, a);
  this.skin = c.skin;
  this.askin = c.aSkin;
  this.sectionheaderskin = a.secSkin;
  this.name = "kony.ui.SegmentedUI";
  retainSelection = a.retainSelection || false;
  viewType = this.viewtype = a.view;
  selectionBehavior = this.selectionbehavior = a.behavior || constants.SEGUI_DEFAULT_BEHAVIOR;
  separatorThickness = this.separatorthickness = a.sepThickness;
  separatorColor = this.separatorcolor = a.sepColor;
  onRowClick = this.onrowclick = c.onClick;
  this.separatorrequired = true;
  this.focuseditem = null;
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  this.focusedindex = c.focusedIndex || null;
  defineGetter(this, "focusedIndex", function() {
    return this.focusedindex
  });
  defineSetter(this, "focusedIndex", function(d) {
    this.focusedindex = d;
    $KW[this.wType]["updateView"](this, "focusedindex", d)
  });
  this.needpageindicator = a.isPageIndicatorNeeded || null;
  defineGetter(this, "isPageIndicatorNeeded", function() {
    return this.needpageindicator
  });
  defineSetter(this, "isPageIndicatorNeeded", function(d) {
    this.needpageindicator = d;
    $KW[this.wType]["updateView"](this, "needpageindicator", d)
  })
};
kony.inherits(kony.ui.SegmentedUI, kony.ui.SegmentedUI2);
kony.ui.TextBox2 = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("TextBox2"))
  }
  kony.ui.TextBox2.baseConstructor.call(this, d, b, a);
  this.autoCorrect = this.autocorrect = a.autoCorrect || false;
  this.autoComplete = this.autocomplete = a.autoComplete || false;
  this.pattern = a.pattern;
  this.secureTextEntry = this.securetextentry = d.secureTextEntry;
  this.maxtextlength = d.maxTextLength;
  this.textinputmode = d.textInputMode || constants.TEXTBOX_INPUT_MODE_ANY;
  this.keyboardtype = d.keyBoardStyle || constants.TEXTBOX_KEY_BOARD_STYLE_DEFAULT;
  this.containerheightmode = b.containerHeightMode || constants.TEXTBOX_DEFAULT_PLATFORM_HEIGHT;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference;
  this.ondone = d.onDone;
  this.onkeydown = a.onKeyDown;
  this.onkeyup = a.onKeyUp;
  this.onbeginediting = a.onBeginEditing;
  this.onendediting = a.onEndEditing;
  this.ontextchange = d.onTextChange || a.onTextChange;
  this.autocapitalize = d.autoCapitalize || constants.TEXTBOX_AUTO_CAPITALIZE_NONE;
  var g = d.text || "";
  defineGetter(this, "text", function() {
    return g
  });
  defineSetter(this, "text", function(h) {
    g = h;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", h)
    }
  });
  var f = d.placeholder || "";
  defineGetter(this, "placeholder", function() {
    return f
  });
  defineSetter(this, "placeholder", function(h) {
    f = h;
    $KW[this.wType]["updateView"](this, "placeholder", h)
  });
  var e = a.pattern;
  defineGetter(this, "pattern", function() {
    return e
  });
  defineSetter(this, "pattern", function(h) {
    e = h;
    $KW[this.wType]["updateView"](this, "pattern", h)
  });
  var c = a.name || "";
  defineGetter(this, "name", function() {
    return c
  });
  defineSetter(this, "name", function(h) {
    c = h;
    $KW[this.wType]["updateView"](this, "name", h)
  });
  this.canUpdateUI = true;
  this.wType = "TextField";
  this.__name = "kony.ui.TextBox2";
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = g;
    this.placeholder = f
  }
  kony.ui.TextBox2.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.TextBox2, kony.ui.Widget);
kony.ui.TextBox2.prototype.setGetterSetter = function() {
  defineGetter(this, "maxTextLength", function() {
    return this.maxtextlength
  });
  defineSetter(this, "maxTextLength", function(a) {
    this.maxtextlength = a;
    $KW[this.wType]["updateView"](this, "maxtextlength", a)
  });
  defineGetter(this, "textInputMode", function() {
    return this.textinputmode || this.mode
  });
  defineSetter(this, "textInputMode", function(a) {
    this.textinputmode = this.mode = a;
    $KW[this.wType]["updateView"](this, "textinputmode", a)
  });
  defineGetter(this, "keyBoardStyle", function() {
    return this.keyboardtype
  });
  defineSetter(this, "keyBoardStyle", function(a) {
    this.keyboardtype = a;
    $KW[this.wType]["updateView"](this, "keyboardtype", a)
  });
  defineGetter(this, "onDone", function() {
    return this.ondone
  });
  defineSetter(this, "onDone", function(a) {
    this.ondone = a
  });
  defineGetter(this, "onBeginEditing", function() {
    return this.onbeginediting
  });
  defineSetter(this, "onBeginEditing", function(a) {
    this.onbeginediting = a
  });
  defineGetter(this, "onEndEditing", function() {
    return this.onendediting
  });
  defineSetter(this, "onEndEditing", function(a) {
    this.onendediting = a
  });
  defineGetter(this, "onTextChange", function() {
    return this.ontextchange
  });
  defineSetter(this, "onTextChange", function(a) {
    this.ontextchange = a
  });
  defineGetter(this, "autoCapitalize", function() {
    return this.autocapitalize
  });
  defineSetter(this, "autoCapitalize", function(a) {
    this.autocapitalize = a;
    $KW[this.wType]["updateView"](this, "autocapitalize", a)
  });
  defineGetter(this, "containerHeightMode", function() {
    return this.containerheightmode
  });
  defineSetter(this, "containerHeightMode", function(a) {
    this.containerheightmode = a;
    $KW[this.wType]["updateView"](this, "containerheightmode", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    $KW[this.wType]["updateView"](this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    $KW[this.wType]["updateView"](this, "containerheightreference", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.maxTextLength = this.maxtextlength;
    this.textInputMode = this.textinputmode;
    this.keyBoardStyle = this.keyboardtype;
    this.onDone = this.ondone;
    this.onTextChange = this.ontextchange;
    this.autoCapitalize = this.autocapitalize
  }
};
kony.ui.TextBox = function(c, b, a) {
  kony.ui.TextBox.baseConstructor.call(this, c, b, a);
  this.placeholder = a.placeholder;
  this.autocapitalize = a.autoCapitalize;
  this.keyboardtype = a.keyBoardType;
  this.ondone = a.onDone;
  this.__name = "kony.ui.TextBox"
};
kony.inherits(kony.ui.TextBox, kony.ui.TextBox2);
kony.ui.TextArea2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("TextArea2"))
  }
  kony.ui.TextArea2.baseConstructor.call(this, c, b, a);
  this.wType = "TextArea";
  this.name = "kony.ui.TextArea2";
  this.numberofvisiblelines = c.numberOfVisibleLines;
  this.setGetterSetter()
};
kony.inherits(kony.ui.TextArea2, kony.ui.TextBox2);
kony.ui.TextArea2.prototype.setGetterSetter = function() {
  defineGetter(this, "numberOfVisibleLines", function() {
    return this.numberofvisiblelines
  });
  defineSetter(this, "numberOfVisibleLines", function(a) {
    this.numberofvisiblelines = a;
    $KW[this.wType]["updateView"](this, "numberofvisiblelines", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.numberOfVisibleLines = this.numberofvisiblelines
  }
};
kony.ui.TextArea = function(c, b, a) {
  kony.ui.TextArea.baseConstructor.call(this, c, b, a);
  this.numberofrows = a.numberOfRows;
  this.name = "kony.ui.TextArea"
};
kony.inherits(kony.ui.TextArea, kony.ui.TextArea2);
kony.ui.Popup = function(f, c, b) {
  if (arguments.length < 3) {
    f = c = b = $KU.mergeDefaults(f, $KU.getAllDefaults("Popup"))
  }
  kony.ui.Popup.baseConstructor.call(this, f, c, b);
  this.wType = "Popup";
  this.name = "kony.ui.Popup";
  this.containerheight = c.containerHeight;
  this.containerheightreference = c.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  this.draggable = b.draggable;
  this.resizable = b.resizable;
  this.minimizeonlostfocus = b.minimizeOnLostFocus;
  this.retaindisplayonlostfocus = b.retainDisplayOnLostFocus;
  var e = b.titleBarConfig;
  if (e) {
    this.titlebarconfig = {};
    this.titlebarconfig.minicon = e.minIcon;
    this.titlebarconfig.maxicon = e.maxIcon;
    this.titlebarconfig.closeicon = e.closeIcon;
    this.titlebarconfig.skin = e.titleBarSkin
  }
  var a = this.inTransitionConfig || this.intransitionconfig,
    d = this.outTransitionConfig || this.outtransitionconfig;
  if (a) {
    this.ptranIn = this.ptran = a.popupTransition
  }
  if (d) {
    this.ptranOut = d.popupTransition
  }
  this.ismodal = f.isModal;
  this.transparencybehindthepopup = f.transparencyBehindThePopup;
  this.setGetterSetter()
};
kony.inherits(kony.ui.Popup, kony.ui.Form2);
kony.ui.Popup.prototype.setGetterSetter = function() {
  defineGetter(this, "isModal", function() {
    return this.ismodal
  });
  defineSetter(this, "isModal", function(a) {
    this.ismodal = a;
    $KW[this.wType]["updateView"](this, "ismodal", a)
  });
  defineGetter(this, "transparencyBehindThePopup", function() {
    return this.transparencybehindthepopup
  });
  defineSetter(this, "transparencyBehindThePopup", function(a) {
    this.transparencybehindthepopup = a;
    $KW[this.wType]["updateView"](this, "transparencybehindthepopup", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  defineGetter(this, "retainDisplayOnLostFocus", function() {
    return this.retaindisplayonlostfocus
  });
  defineSetter(this, "retainDisplayOnLostFocus", function(a) {
    this.retaindisplayonlostfocus = a
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightreference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightreference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.isModal = this.ismodal;
    this.transparencyBehindThePopup = this.transparencybehindthepopup
  }
};
kony.ui.Popup.prototype.destroy = function() {
  this.onDestroy && this.onDestroy(this);
  $KW.Popup.dismiss(this);
  this.addWidgetsdone = false;
  this.initdone = false;
  this.ownchildrenref = [];
  this.children = []
};
kony.ui.Popup.prototype.dismiss = function() {
  $KW.Popup.dismiss(this)
};
kony.ui.Popup.prototype.show = function() {
  if (!this.addWidgetsdone) {
    this.addWidgetsdone = true;
    this.addWidgets && this.addWidgets(this)
  }!this.initdone && this.init && this.init(this);
  this.initdone = true;
  $KW.Popup.show(this)
};
kony.ui.Popup.prototype.setContext = function(a) {
  $KW.Popup.setcontext(this, a)
};
kony.ui.Popup.prototype.scrollToBeginning = function() {
  $KW.Popup.scrollToBeginning(this)
};
kony.ui.Popup.prototype.scrollToEnd = function() {
  $KW.Popup.scrollToEnd(this)
};
kony.ui.Popup.prototype.scrollToWidget = function(a) {
  $KW.Popup.scrollToWidget(this, a)
};
kony.ui.TabPane = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("TabPane"))
  }
  kony.ui.TabPane.baseConstructor.call(this, d, b, a);
  this.wType = "TabPane";
  this.name = "kony.ui.TabPane";
  this.screenLevelWidget = d.screenLevelWidget || false;
  this.activeskin = d.activeSkin;
  this.activefocusskin = d.activeFocusSkin;
  this.inactiveskin = d.inactiveSkin;
  this.viewtype = d.viewType;
  this.viewconfig = d.viewConfig;
  if (d.viewConfig && d.viewConfig.collapsibleViewConfig) {
    this.viewconfig.collapsibleviewconfig = this.viewconfig.collapsibleViewConfig;
    this.viewconfig.collapsibleviewconfig.onclick = this.viewconfig.collapsibleviewconfig.onClick;
    this.viewconfig.collapsibleviewconfig.expandedimage = this.viewconfig.collapsibleviewconfig.expandedImage;
    this.viewconfig.collapsibleviewconfig.collapsedimage = this.viewconfig.collapsibleviewconfig.collapsedImage;
    this.viewconfig.collapsibleviewconfig.imageposition = this.viewconfig.collapsibleviewconfig.imagePosition;
    this.viewconfig.collapsibleviewconfig.tabnamealignment = this.viewconfig.collapsibleviewconfig.tabNameAlignment;
    this.viewconfig.collapsibleviewconfig.toggletabs = this.viewconfig.collapsibleviewconfig.toggleTabs
  }
  this.ontabclick = d.onTabClick;
  this.retainpositionintab = d.retainPositionInTab;
  this.needpageindicator = d.needPageIndicator;
  this.selectedtabindex = d.selectedTabIndex;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  if (d.viewConfig && d.viewConfig.collapsibleViewConfig) {
    var c = d.viewConfig.collapsibleViewConfig;
    this.collapsedimage = c.expandedImage;
    this.expandedimage = c.collapsedImage;
    this.toggletabs = c.toggleTabs;
    this.imageposition = c.imagePosition;
    this.tabnamealignment = c.tabNameAlignment
  }
  if (d.viewConfig && d.viewConfig.pageViewConfig) {
    var e = d.viewConfig.pageViewConfig;
    this.pageondotimage = e.pageOnDotImage;
    this.pageoffdotimage = e.pageOffDotImage;
    this.needpageindicator = e.needPageIndicator
  }
  this.activetabs = d.activetabs;
  if ((this.viewtype == constants.TABPANE_VIEW_TYPE_TABVIEW || this.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) && (!this.activetabs || (this.activetabs && this.activetabs.length == 0))) {
    this.activetabs = [0];
    this.activetab = 0
  }
  if (this.activetabs && this.activetabs.length > 0) {
    this.activetab = this.activetabs[0]
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.TabPane, kony.ui.ContainerWidget);
kony.ui.TabPane.prototype.setGetterSetter = function() {
  defineGetter(this, "activeSkin", function() {
    return this.activeskin
  });
  defineSetter(this, "activeSkin", function(b) {
    var a = this.activeskin;
    this.activeskin = b;
    $KW[this.wType]["updateView"](this, "activeskin", b, a)
  });
  defineGetter(this, "activeFocusSkin", function() {
    return this.activefocusskin
  });
  defineSetter(this, "activeFocusSkin", function(b) {
    var a = this.activefocusskin;
    this.activefocusskin = b;
    kony.model.updateView(this, "activefocusskin", b, a)
  });
  defineGetter(this, "inactiveSkin", function() {
    return this.inactiveskin
  });
  defineSetter(this, "inactiveSkin", function(b) {
    var a = this.inactiveskin;
    this.inactiveskin = b;
    $KW[this.wType]["updateView"](this, "inactiveskin", b, a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    if ((this.viewtype == constants.TABPANE_VIEW_TYPE_TABVIEW || this.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) && (!this.activetabs || (this.activetabs && this.activetabs.length == 0))) {
      this.activetabs = [0];
      this.activetab = 0
    }
    if (this.activetabs && this.activetabs.length > 0) {
      this.activetab = this.activetabs[0]
    }
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  defineGetter(this, "viewConfig", function() {
    return this.viewconfig
  });
  defineSetter(this, "viewConfig", function(a) {
    this.viewconfig = a;
    $KW[this.wType]["updateView"](this, "viewconfig", a)
  });
  defineGetter(this, "onTabClick", function() {
    return this.ontabclick
  });
  defineSetter(this, "onTabClick", function(a) {
    this.ontabclick = a;
    $KW[this.wType]["updateView"](this, "ontabclick", a)
  });
  defineGetter(this, "retainPositionInTab", function() {
    return this.retainpositionintab
  });
  defineSetter(this, "retainPositionInTab", function(a) {
    this.retainpositionintab = a;
    $KW[this.wType]["updateView"](this, "retainpositionintab", a)
  });
  defineGetter(this, "needPageIndicator", function() {
    return this.needpageindicator
  });
  defineSetter(this, "needPageIndicator", function(a) {
    this.needpageindicator = a;
    $KW[this.wType]["updateView"](this, "needpageindicator", a)
  });
  defineGetter(this, "selectedTabIndex", function() {
    return this.selectedtabindex
  });
  defineSetter(this, "selectedTabIndex", function(a) {
    this.selectedtabindex = a;
    $KW[this.wType]["updateView"](this, "selectedtabindex", a)
  });
  defineGetter(this, "activeTabs", function() {
    return this.activetabs
  });
  defineSetter(this, "activeTabs", function(a) {
    this.activetabs = a;
    if ((this.viewtype == constants.TABPANE_VIEW_TYPE_TABVIEW || this.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) && (!a || (a && a.length == 0))) {
      this.activetabs = [0];
      this.activetab = 0
    }
    if (this.activetabs && this.activetabs.length > 0) {
      this.activetab = this.activetabs[0]
    }
    $KW[this.wType]["updateView"](this, "activetabs", a)
  });
  defineGetter(this, "activeTab", function() {
    return this.activetabs[0]
  });
  defineSetter(this, "activeTab", function(a) {
    this.activetabs[0] = a;
    $KW[this.wType]["updateView"](this, "activetab", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.activeSkin = this.activeskin;
    this.activeFocusSkin = this.activefocusskin;
    this.inactiveSkin = this.inactiveskin;
    this.viewType = this.viewtype;
    this.viewConfig = this.viewconfig;
    this.onTabClick = this.ontabclick;
    this.retainPositionInTab = this.retainpositionintab;
    this.needPageIndicator = this.needpageindicator;
    this.selectedTabIndex = this.selectedtabindex;
    this.activeTabs = this.activetabs;
    this.activetab = this.activetab
  }
};
kony.ui.TabPane.prototype.addTab = function(a, e, c, d, f) {
  var b;
  if (arguments.callee.arguments.length == 3) {
    b = e;
    b.id = a;
    b.header = c;
    kony.ui.Form2.prototype.createFormLevelHierarchy.call(b.header, [b.header]);
    b.header.isheader = true;
    kony.ui.ContainerWidget.prototype.createhierarchy.call(b.header, b.header.ownchildrenref)
  } else {
    b = d;
    b.id = a;
    b.tabname = e;
    b.image = c;
    b.oninit = f
  }
  this.allboxes = [];
  b.name = "kony.ui.Tab";
  var g = "true";
  if (g == "true") {
    kony.ui.ContainerWidget.prototype.add.call(this, [b])
  }
  kony.ui.Form2.prototype.createFormLevelHierarchy.call(this, [b]);
  kony.ui.ContainerWidget.prototype.createhierarchy.call(this, b.ownchildrenref);
  $KW.TabPane.addChildTab(this, b)
};
kony.ui.TabPane.prototype.addTabAt = function(c, g, e, f, b) {
  var d;
  if (arguments.callee.arguments.length == 4) {
    d = g;
    d.id = c;
    d.header = e;
    kony.ui.Form2.prototype.createFormLevelHierarchy.call(d.header, [d.header]);
    d.header.isheader = true;
    b = f;
    kony.ui.ContainerWidget.prototype.createhierarchy.call(d.header, d.header.ownchildrenref)
  } else {
    d = f;
    d.id = c;
    d.tabname = g;
    d.image = e
  }
  this.allboxes = [];
  d.name = "kony.ui.Tab";
  var a = "true";
  if (a == "true") {
    kony.ui.ContainerWidget.prototype.addAt.call(this, d, b)
  }
  kony.ui.Form2.prototype.createFormLevelHierarchy.call(this, [d]);
  kony.ui.ContainerWidget.prototype.createhierarchy.call(this, d.ownchildrenref);
  $KW.TabPane.addChildTabAt(this, d, b)
};
kony.ui.TabPane.prototype.removeTabAt = function(a) {
  $KW.TabPane.removeTabAt(this, a)
};
kony.ui.TabPane.prototype.removeTabById = function(a) {
  $KW.TabPane.removeTabById(this, a)
};
kony.ui.TabPane.prototype.setTabName = function(a, b) {
  $KW.TabPane.setTabName(this, a, b)
};
kony.ui.Slider = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Slider"))
  }
  kony.ui.Slider.baseConstructor.call(this, c, b, a);
  this.min = c.min;
  this.max = c.max;
  this.step = c.step;
  this.onslide = c.onSlide;
  this.onselection = c.onSelection;
  this.leftskin = c.leftSkin;
  this.rightskin = c.rightSkin;
  this.thumbimage = c.thumbImage;
  this.focusthumbimage = c.focusThumbImage;
  this.selectedvalue = c.selectedValue || Math.abs((c.min + (c.min - c.max) / 2));
  this.widgetalignment = b.widgetAlignment;
  var d = (!b.margin) ? [0, 0, 0, 0] : b.margin;
  this.margin = d;
  this.minlabel = a.minLabel;
  this.maxlabel = a.maxLabel;
  this.minlabelskin = a.minLabelSkin;
  this.maxlabelskin = a.maxLabelSkin;
  this.thickness = a.thickness;
  this.view = a.viewType;
  this.orientation = a.orientation;
  this.wType = "Slider";
  this.name = "kony.ui.Slider";
  this.setGetterSetter()
};
kony.inherits(kony.ui.Slider, kony.ui.Widget);
kony.ui.Slider.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedValue", function() {
    return this.selectedvalue
  });
  defineSetter(this, "selectedValue", function(a) {
    this.selectedvalue = a;
    $KW[this.wType]["updateView"](this, "selectedvalue", a)
  });
  defineGetter(this, "focusThumbImage", function() {
    return this.focusthumbimage
  });
  defineSetter(this, "focusThumbImage", function(a) {
    this.focusthumbimage = a;
    $KW[this.wType]["updateView"](this, "focusthumbimage", a)
  });
  defineGetter(this, "thumbImage", function() {
    return this.thumbimage
  });
  defineSetter(this, "thumbImage", function(a) {
    this.thumbimage = a;
    $KW[this.wType]["updateView"](this, "thumbimage", a)
  });
  defineGetter(this, "rightSkin", function() {
    return this.rightskin
  });
  defineSetter(this, "rightSkin", function(a) {
    $KW[this.wType]["updateView"](this, "rightskin", a, this.rightskin)
  });
  defineGetter(this, "leftSkin", function() {
    return this.leftskin
  });
  defineSetter(this, "leftSkin", function(a) {
    $KW[this.wType]["updateView"](this, "leftskin", a, this.leftskin)
  });
  defineGetter(this, "minLabel", function() {
    return this.minlabel
  });
  defineSetter(this, "minLabel", function(a) {
    $KW[this.wType]["updateView"](this, "minlabel", a, this.minlabel)
  });
  defineGetter(this, "maxLabel", function() {
    return this.maxlabel
  });
  defineSetter(this, "maxLabel", function(a) {
    $KW[this.wType]["updateView"](this, "maxlabel", a, this.maxlabel)
  });
  defineGetter(this, "maxLabelSkin", function() {
    return this.maxlabelskin
  });
  defineSetter(this, "maxLabelSkin", function(a) {
    $KW[this.wType]["updateView"](this, "maxlabelskin", a, this.maxlabelskin)
  });
  defineGetter(this, "minLabelSkin", function() {
    return this.minlabelskin
  });
  defineSetter(this, "minLabelSkin", function(a) {
    $KW[this.wType]["updateView"](this, "minlabelskin", a, this.minlabelskin)
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "onSlide", function() {
    return this.onslide
  });
  defineSetter(this, "onSlide", function(a) {
    this.onslide = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedValue = this.selectedvalue;
    this.focusThumbImage = this.focusthumbimage;
    this.thumbImage = this.thumbimage;
    this.rightSkin = this.rightskin;
    this.leftSkin = this.leftskin;
    this.onSelection = this.onselection;
    this.onSlide = this.onslide
  }
};
kony.ui.Video = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Video"))
  }
  kony.ui.Video.baseConstructor.call(this, d, b, a);
  this.wType = "Video";
  this.name = "kony.ui.Video";
  var e = d.source;
  defineGetter(this, "source", function() {
    return e
  });
  defineSetter(this, "source", function(g) {
    e = g;
    $KW[this.wType]["updateView"](this, "source", g)
  });
  var c = a.controls;
  this.controls = a.controls;
  defineGetter(this, "controls", function() {
    return c
  });
  defineSetter(this, "controls", function(g) {
    c = g;
    $KW[this.wType]["updateView"](this, "controls", g)
  });
  var f = a.poster;
  defineGetter(this, "poster", function() {
    return f
  });
  defineSetter(this, "poster", function(g) {
    f = g;
    $KW[this.wType]["updateView"](this, "poster", g)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.source = e;
    this.controls = c;
    this.poster = f
  }
};
kony.inherits(kony.ui.Video, kony.ui.Widget);
kony.ui.MenuContainer = function(d, b, a) {
  kony.ui.MenuContainer.baseConstructor.call(this, d, b, a);
  this.viewtype = a.viewType;
  this.menutemplate = d.menuItemTemplate;
  this.widgetdatamap = d.widgetDataMap || null;
  this.data = d.data || null;
  this.selectedindex = d.selectedMenuIndex || null;
  this.selecteditem = d.selectedMenuItem || null;
  this.activeskin = d.activeSkin || "";
  this.hoverskin = d.hoverSkin || "";
  this.onclick = d.onClick || null;
  this.expandedimage = a.expandedImage;
  this.collapsedimage = a.collapsedImage;
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  var e = d.data;
  defineGetter(this, "data", function() {
    return e
  });
  defineSetter(this, "data", function(g) {
    e = g;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", g)
  });
  var c = a.orientation;
  defineGetter(this, "orientation", function() {
    return c
  });
  defineSetter(this, "orientation", function(h) {
    var g = c;
    c = h;
    $KW[this.wType]["updateView"](this, "orientation", h, g)
  });
  var f = d.info || null;
  defineGetter(this, "info", function() {
    return f
  });
  defineSetter(this, "info", function(h) {
    var g = f;
    f = h;
    $KW[this.wType]["updateView"](this, "info", h, g)
  });
  this.setGetterSetter();
  this.wType = "MenuContainer";
  this.name = "kony.ui.MenuContainer";
  this.canUpdateUI = true;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = e;
    this.info = f;
    this.orientation = c
  }
};
kony.inherits(kony.ui.MenuContainer, kony.ui.Widget);
kony.ui.MenuContainer.prototype.setGetterSetter = function() {
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(b) {
    var a = this.viewtype;
    this.viewtype = b;
    $KW[this.wType]["updateView"](this, "viewtype", b, a)
  });
  defineGetter(this, "menuItemTemplate", function() {
    return this.menutemplate
  });
  defineSetter(this, "menuItemTemplate", function(b) {
    var a = this.menutemplate;
    this.menutemplate = b;
    $KW[this.wType]["updateView"](this, "menutemplate", b, a)
  });
  defineGetter(this, "widgetDataMap", function() {
    return this.widgetdatamap
  });
  defineSetter(this, "widgetDataMap", function(b) {
    var a = this.widgetdatamap;
    this.widgetdatamap = b
  });
  defineGetter(this, "selectedMenuIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedMenuIndex", function(b) {
    var a = this.selectedindex;
    this.selectedindex = b;
    $KW[this.wType]["updateView"](this, "selectedindex", b, a)
  });
  defineGetter(this, "selectedMenuItem", function() {
    return this.selecteditem
  });
  defineGetter(this, "onClick", function() {
    return this.onclick
  });
  defineSetter(this, "onClick", function(a) {
    this.onclick = a
  });
  defineGetter(this, "activeSkin", function() {
    return this.activeskin
  });
  defineSetter(this, "activeSkin", function(b) {
    var a = this.activeskin;
    this.activeskin = b;
    $KW[this.wType]["updateView"](this, "activeskin", b, a)
  });
  defineGetter(this, "hoverSkin", function() {
    return this.hoverskin
  });
  defineSetter(this, "hoverSkin", function(b) {
    var a = this.hoverskin;
    this.hoverskin = b;
    $KW[this.wType]["updateView"](this, "hoverskin", b, a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.viewType = this.viewtype;
    this.menuItemTemplate = this.menutemplate;
    this.widgetDataMap = this.widgetdatamap;
    this.selectedMenuIndex = this.selectedindex;
    this.selectedMenuItem = this.selecteditem;
    this.onClick = this.onclick;
    this.activeSkin = this.activeskin;
    this.hoverSkin = this.hoverskin
  }
};
kony.ui.MenuContainer.prototype.setData = function(a) {
  $KW.MenuContainer.setData(this, a)
};
kony.ui.MenuContainer.prototype.setDataAt = function(a, b) {
  $KW.MenuContainer.setDataAt(this, a, b)
};
kony.ui.MenuContainer.prototype.addAll = function(a) {
  $KW.MenuContainer.addAll(this, a)
};
kony.ui.MenuContainer.prototype.addDataAt = function(a, b) {
  $KW.MenuContainer.addDataAt(this, a, b)
};
kony.ui.MenuContainer.prototype.removeAll = function() {
  $KW.MenuContainer.removeAll(this)
};
kony.ui.MenuContainer.prototype.removeAt = function(a) {
  $KW.MenuContainer.removeAt(this, a)
};
kony.type = function(b) {
  var a = $KI.type(b);
  if (a == "table" || a == "object") {
    a = b.name == undefined ? a : b.name
  }
  return a
};
if ($KI.crypto) {
  kony.crypto = {
    newKey: $KI.crypto.newkey,
    saveKey: $KI.crypto.savekey,
    createHash: $KI.crypto.createhash,
    retrievePublicKey: $KI.crypto.retrievepublickey,
    deleteKey: $KI.crypto.deletekey,
    readKey: $KI.crypto.readkey,
    encrypt: $KI.crypto.encrypt,
    decrypt: $KI.crypto.decrypt
  }
}
if ($KI.db) {
  kony.db = {
    openDatabase: $KI.db.opendatabase,
    transaction: $KI.db.transaction,
    readTransaction: $KI.db.readtransaction,
    executeSql: $KI.db.executesql,
    sqlResultsetRowItem: $KI.db.sqlresultsetrowitem,
    changeVersion: $KI.db.changeversion
  }
}
if ($KI.ds) {
  kony.ds = {
    "delete": $KI.ds.Delete,
    remove: $KI.ds.Delete,
    read: $KI.ds.read,
    save: $KI.ds.save
  }
}
if ($KI.i18n) {
  kony.i18n = {
    deleteResourceBundle: $KI.i18n.deleteresourcebundle,
    getLocalizedString: $KI.i18n.getlocalizedstring,
    getCurrentLocale: $KI.i18n.getcurrentlocale,
    isResourceBundlePresent: $KI.i18n.isresourcebundlepresent,
    setCurrentLocale: $KI.i18n.setcurrentlocale,
    setCurrentLocaleAsync: $KI.i18n.setcurrentlocaleasync,
    setDefaultLocale: $KI.i18n.setdefaultlocale,
    setDefaultLocaleAsync: $KI.i18n.setdefaultlocaleasync,
    setResourceBundle: $KI.i18n.setresourcebundle,
    updateResourceBundle: $KI.i18n.updateresourcebundle,
    getCurrentDeviceLocale: $KI.i18n.getcurrentdevicelocale,
    getSupportedLocales: $KI.i18n.getsupportedlocales,
    isLocaleSupportedByDevice: $KI.i18n.islocalesupportedbydevice
  }
}
if ($KI.localstorage) {
  kony.store = {
    key: $KI.localstorage.key,
    getItem: $KI.localstorage.getitem,
    removeItem: $KI.localstorage.removeitem,
    setItem: $KI.localstorage.setitem,
    clear: $KI.localstorage.clear,
    length: $KI.localstorage.length
  }
}
if ($KI.geolocation) {
  kony.location = {
    clearWatch: $KI.geolocation.clearwatch,
    getCurrentPosition: $KI.geolocation.getcurrentposition,
    watchPosition: $KI.geolocation.watchposition
  }
}
if ($KI.os) {
  kony.os = {
    toNumber: $KI.os.tonumber,
    toCurrency: $KI.os.tocurrency,
    freeMemory: $KI.os.freememory,
    userAgent: $KI.os.useragent,
    deviceInfo: $KI.os.platform,
    hasGPSSupport: $KI.os.hasgpssupport,
    hasCameraSupport: $KI.os.hascamerasupport,
    hasTouchSupport: $KI.os.hastouchsupport,
    hasOrientationSupport: $KI.os.hasorientationsupport,
    hasAccelerometerSupport: $KI.os.hasaccelerometersupport,
    getDeviceCurrentOrientation: $KI.os.getdevicecurrentorientation,
    httpheaders: $KI.os.httpheaders,
    getApplicationMode: $KI.os.getapplicationmode,
    setApplicationMode: $KI.os.setapplicationmode,
    setApplicationScrollMode: $KI.os.setapplicationscrollmode,
    getAppContext: $KI.os.getappcontext,
    print: $KI.os.print
  }
}
if ($KI.net) {
  kony.net = {
    HttpRequest: $KI.net.HttpRequest,
    FormData: $KI.net.FormData,
    invokeServiceAsync: $KI.net.invokeserviceasync,
    invokeService: $KI.net.invokeService,
    cancel: $KI.net.cancel,
    isNetworkAvailable: $KI.net.isNetworkAvailable,
    setNetworkCallbacks: $KI.net.setNetworkCallbacks,
    getActiveNetworkType: $KI.net.getActiveNetworkType,
    getCookies: $KI.net.getCookies,
    clearCookies: $KI.net.clearCookies
  }
}
if ($KI.phone) {
  kony.phone = {
    sendSMS: $KI.phone.sendsms,
    dial: $KI.phone.dial,
    openEmail: $KI.phone.openemail,
    openMediaGallery: $KI.phone.openmediagallery
  }
}
if ($KI.string) {
  kony.string = {
    rep: $KI.string.rep,
    reverse: $KI.string.reverse,
    trim: $KI.string.trim,
    equalsIgnoreCase: $KI.string.equalsignorecase,
    startsWith: $KI.string.startswith,
    endsWith: $KI.string.endswith,
    isNumeric: $KI.string.isnumeric,
    containsChars: $KI.string.containschars,
    containsOnlyGivenChars: $KI.string.containsonlygivenchars,
    containsNoGivenChars: $KI.string.containsnogivenchars,
    isAsciiAlpha: $KI.string.isasciialpha,
    isAsciiAlphaNumeric: $KI.string.isasciialphanumeric,
    isValidEmail: $KI.string.isvalidemail
  }
}
if ($KI.timer) {
  kony.timer = {
    schedule: $KI.timer.schedule,
    cancel: $KI.timer.cancel,
    setCallBack: $KI.timer.setcallback
  }
}
if ($KI.themes) {
  kony.theme = {
    createTheme: $KI.themes.createtheme,
    deleteTheme: $KI.themes.deletetheme,
    getCurrentThemeData: $KI.themes.getcurrentthemedata,
    getCurrentTheme: $KI.themes.getcurrenttheme,
    getAllThemes: $KI.themes.allthemes,
    isThemePresent: $KI.themes.isthemepresent,
    setCurrentTheme: $KI.themes.setcurrenttheme,
    packagedthemes: $KI.themes.packagedthemes
  }
}
kony.stream = {
  registerDataStream: tobeimplemented,
  deregisterDataStream: tobeimplemented,
  setCallback: tobeimplemented
};
kony.convertToBase64 = $KI.converttobase64;
kony.convertToRawBytes = $KI.converttorawbytes;
kony.print = $KI.print;
kony.props = {};
kony.props.getProperty = $KI.props.getProperty;
kony.application = {
  createAppMenu: $KW.Appmenu && $KW.Appmenu.createappmenu,
  setCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.setcurrentappmenu,
  getCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.getcurrentappmenu,
  setAppMenuFocusByID: $KW.Appmenu && $KW.Appmenu.setappmenufocusbyid,
  addAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.addappmenuitemat,
  removeAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.removeappmenuitemat,
  setAppMenu: $KW.Appmenu && $KW.Appmenu.setappmenu,
  setAppMenuFocusIndex: $KW.Appmenu && $KW.Appmenu.setappmenufocusindex,
  showAppMenuItems: $KW.Appmenu && $KW.Appmenu.showappmenuitems,
  hideAppMenuItems: $KW.Appmenu && $KW.Appmenu.hideappmenuitems,
  setBMState: kony.bm.setBMState,
  resetBMState: kony.bm.resetBMState,
  getBMState: kony.bm.getBMState,
  getFormId: kony.bm.getFormId,
  addBMState: kony.bm.addBMState,
  removeBMState: kony.bm.removeBMState,
  exit: $KI.exit,
  getPreviousForm: $KW.Form && $KW.Form.getPreviousForm,
  getCurrentForm: $KW.Form && $KW.Form.getCurrentForm,
  removeGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.removegesturerecognizerforallforms,
  setGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.setgesturerecognizerforallforms,
  addGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.addgesturerecognizerforallforms,
  getApplicationMode: $KI.os && $KI.os.getapplicationmode,
  setApplicationMode: $KI.os && $KI.os.setapplicationmode,
  setApplicationInitializationEvents: $KI.setappevents,
  registerForIdleTimeout: $KI.appevents && $KI.appevents.registerforidletimeout,
  unregisterForIdleTimeout: $KI.appevents && $KI.appevents.unregisterforidletimeout,
  setApplicationBadgeValue: tobeimplemented,
  getApplicationBadgeValue: tobeimplemented,
  setAppMenuBadgeValue: tobeimplemented,
  getAppMenuBadgeValue: tobeimplemented,
  appReset: $KI.appreset,
  setAppHeaders: $KI.setappheaders,
  setAppFooters: $KI.setappfooters,
  setApplicationCallbacks: $KI.setapplicationcallbacks,
  setApplicationBehaviors: $KI.setapplicationbehaviors,
  showLoadingScreen: $KI.window && $KI.window.showLoadingScreen,
  dismissLoadingScreen: $KI.window && $KI.window.dismissLoadingScreen,
  setupWidgetDataRecording: $KI.setupWidgetDataRecording,
  openURL: $KI.window.openURL,
  openMediaURL: $KI.window.openURL
};

function tobeimplemented() {
  console.warn("API to be implemented Yet")
};if (typeof kony == "undefined") {
  kony = {
    api: {},
    app: {},
    globals: {},
    system: {},
    widgets: {},
    io: {},
    constants: {
      KONY_WIDGET_TYPE: "kwidgettype",
      SELECTED_ITEM: "selecteditem",
      IMAGE_PATH: "images",
      RESOURCES_PATH: "resources",
      TRANSLATION_PATH: "strings",
      TRANSLATION_EXT: "js",
      MODE: "s",
      RUNMODE: "debug",
      APPSTATE: 0
    }
  };
  konychannel = "wap";
  kiden = "useragent";
  $KI = kony.api;
  $KW = kony.widgets;
  $KG = kony.globals;
  $KIO = kony.io;
  $KG.allforms = {};
  $KG.appbehaviors = {};
  $KG.widgetPositions = {};
  $KG.cwtexists = [];
  $KG.retina = "";
  $KG.imagecat = "";
  $KG.uniqueId = 0;
  $KG.animStyleSheet = ""
}
app = {
  headers: {},
  footers: {}
};
$KI.print = kony.print = function(a) {
  if (kony.constants.RUNMODE == "debug") {
    if (kony.constants.MODE == "s") {
      if (typeof JSON != "undefined" && typeof a == "object") {
        console.log(JSON.stringify(a, $KU.jsonReplacer))
      } else {
        console.log(a)
      }
    } else {
      alert(a)
    }
  }
};
if (typeof console === "undefined") {
  var alertFallback = false;
  var warnFallback = false;
  var errorFallback = false;
  console = {};
  console.log = function(a) {
    alertFallback && alert(a)
  };
  console.warn = function(a) {
    warnFallback && alert(a)
  };
  console.error = function(a) {
    errorFallback && alert(a)
  }
}
kony.appinit = {
  index: 0,
  JSMapFileCount: 0,
  head: document.getElementsByTagName("head")[0],
  foldertype: IndexJL ? "LuaFiles" : "JSFiles",
  vendor: (/trident/gi).test(navigator.userAgent) ? "ms" : (/webkit/i).test(navigator.userAgent) ? "webkit" : (/firefox/i).test(navigator.userAgent) ? "Moz" : "opera" in window ? "o" : ((/msie/i).test(navigator.userAgent) || (/rv:([1][1-9])/i).test(navigator.userAgent)) ? "ms" : "",
  isIE: window.navigator.appVersion.match(/MSIE (\d+)/) != null || (/rv:([1][1-9])/i).test(navigator.userAgent),
  isIE7: window.navigator.appVersion.match(/MSIE (\d+)/) != null && RegExp.$1 == "7",
  isIE8: window.navigator.appVersion.match(/MSIE (\d+)/) != null && RegExp.$1 == "8",
  isIE9: window.navigator.appVersion.match(/MSIE (\d+)/) != null && RegExp.$1 == "9",
  isIE10: navigator.userAgent.match(/MSIE (\d+)/) != null && RegExp.$1 == "10",
  isIE11: (/rv:([1][1-9])/i).test(navigator.userAgent),
  isFirefox: window.navigator.userAgent.indexOf("Firefox") >= 0,
  isChrome: window.navigator.userAgent.indexOf("Chrome") >= 0,
  isSafari: (window.navigator.userAgent.indexOf("Safari") >= 0) && !(window.navigator.userAgent.indexOf("Chrome") >= 0),
  isOpera: window.navigator.userAgent.indexOf("Opera") >= 0,
  isAndroid: (/android/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isIDevice: (/iphone|ipad/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPhone: (/iphone/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPod: (/ipod/gi).test(navigator.userAgent),
  isiPad: (/ipad/gi).test(navigator.userAgent),
  isPlaybook: (/playbook/gi).test(navigator.userAgent),
  isBlackBerry: ((/bb10/gi).test(navigator.userAgent) || (/blackberry/gi).test(navigator.userAgent)) && typeof bbnth == "undefined",
  isBlackBerry10: (/bb10/gi).test(navigator.userAgent),
  isBlackBerryNTH: (/blackberry/gi).test(navigator.userAgent) && typeof bbnth != "undefined" && bbnth,
  isTouchPad: (/hp-tablet/gi).test(navigator.userAgent),
  isWindowsPhone: (/Windows Phone/gi).test(navigator.userAgent),
  isWindowsTouch: (/Windows/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent) || ((/trident/gi).test(navigator.userAgent)),
  isWindowsTablet: (/Windows NT/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent),
  isTablet: (/hp-tablet|ipad|playbook/gi).test(navigator.userAgent) || ((/android/gi).test(navigator.userAgent) && !(/mobile/gi).test(navigator.userAgent)),
  isMob: (/mobile/gi).test(navigator.userAgent),
  syncFiles: ["jslib/tparty/cal/yahoo-dom-event.js", "jslib/konytextfieldwidget.js"],
  syncJSFiles: ["jslib/konyconstants.js", "jslib/konywidgetdefault.js", "jslib/konyJSLib/ui/konyuiBaseClasses.js", "jslib/konyJSLib/ui/konyuiForm.js", "jslib/konyJSLib/ui/konyuiBox.js"],
  syncLuaFiles: ["jslib/konyLuaLib/ui/windowBaseClasses.js", "jslib/konyLuaLib/ui/windowForm.js", "jslib/konyLuaLib/ui/windowBox.js"],
  asyncViewFiles: ["jslib/konyconstcommon.js", "jslib/konymodel.js", "jslib/konycore.js", "jslib/konysystem.js", "jslib/konyapi.js", "jslib/konymodule.js", "jslib/konytableapi.js", "jslib/konyosapi.js", "jslib/konystringapi.js", "jslib/konymathapi.js", "jslib/konyutils.js", "jslib/konyi18n.js", "jslib/konywidgets.js", "jslib/konytouchwidgets.js", "jslib/konyformwidget.js", "jslib/konyappmenu.js", "jslib/konynetwork.js", "jslib/konyworker.js", "jslib/konylabelwidget.js", "jslib/konybuttonwidget.js", "jslib/konysliderwidget.js", "jslib/konytextfieldautocomplete.js", "jslib/konytextfieldpassword.js", "jslib/konycomboboxgroup.js", "jslib/konyradiobuttongroup.js", "jslib/konylistboxgroup.js", "jslib/konytextareawidget.js", "jslib/konycheckboxgroup.js", "jslib/konylinkwidget.js", "jslib/konyboxwidget.js", "jslib/konyvboxwidget.js", "jslib/konyflexlayoutengine.js", "jslib/konyflexcontainerwidget.js", "jslib/konyflexscrollcontainerwidget.js", "jslib/konylinewidget.js", "jslib/konysegmentwidget.js", "jslib/konyimagewidget.js", "jslib/konyHorizontalImagewidget.js", "jslib/konyHorizontalImageGallerywidget.js", "jslib/konyslotviewwidget.js", "jslib/konybrowserwidget.js", "jslib/konydatagridwidget.js", "jslib/konymapwidget.js", "jslib/konytabwidget.js", "jslib/konyswitchwidget.js", "jslib/konypopup.js", "jslib/konyphone.js", "jslib/konyscrollerwidget.js", "jslib/konyrichtextwidget.js", "jslib/konyscrollboxwidget.js", "jslib/konymediawidget.js", "jslib/konythemesapi.js", "jslib/tparty/cal/calendar-min.js", "jslib/tparty/cal/element-min.js", "jslib/tparty/cal/container-min.js", "jslib/konycalendarwidget.js", "jslib/konyanimations.js", "jslib/konyhybridapi.js", "jslib/konydatabaseapi.js", "jslib/konydatastoreapi.js", "jslib/konygeolocationapi.js", "jslib/konyphoneapi.js", "jslib/konytimerapi.js", "jslib/konypickerview.js", "jslib/konypickerwidget.js", "jslib/konycrypto.js", "jslib/tparty/crypto/cryptojslib-min.js", "jslib/tparty/requirejs/require-min.js"],
  asyncJSFiles: ["jslib/konyJSLib/core/konyJSUtils.js", "jslib/konyJSLib/ui/konyuiBasicWidgets.js", "jslib/konyJSLib/ui/konyuiFlexContainer.js", "jslib/konyJSLib/ui/konyuiCalendar.js", "jslib/konyJSLib/ui/konyuiDataGrid.js", "jslib/konyJSLib/ui/konyuiGroupWidgets.js", "jslib/konyJSLib/ui/konyuiImage.js", "jslib/konyJSLib/ui/konyuiImageGallery.js", "jslib/konyJSLib/ui/konyuiHorizontalImageStrip.js", "jslib/konyJSLib/ui/konyuiMap.js", "jslib/konyJSLib/ui/konyuiBrowser.js", "jslib/konyJSLib/ui/konyuiRichText.js", "jslib/konyJSLib/ui/konyuiScrollBox.js", "jslib/konyJSLib/ui/konyuiSegmentedUI.js", "jslib/konyJSLib/ui/konyuiText.js", "jslib/konyJSLib/ui/konyuiPopup.js", "jslib/konyJSLib/ui/konyuiTabPane.js", "jslib/konyJSLib/ui/konyuiSlider.js", "jslib/konyJSLib/ui/konyuiVideo.js", ],
  JSMapList: ["jslib/konyJSLib/core/konyJSMapping.js", "jslib/konyJSLib/core/konyapplication.js"],
  asyncLuaFiles: ["jslib/konyLuaLib/ui/konyWidgetNativeMapping.js", "jslib/konyLuaLib/ui/windowBasicWidgets.js", "jslib/konyLuaLib/ui/windowCalendar.js", "jslib/konyLuaLib/ui/windowDataGrid.js", "jslib/konyLuaLib/ui/windowForm.js", "jslib/konyLuaLib/ui/windowGallery.js", "jslib/konyLuaLib/ui/windowGroupWidgets.js", "jslib/konyLuaLib/ui/windowHorizontalImageStrip.js", "jslib/konyLuaLib/ui/windowImage.js", "jslib/konyLuaLib/ui/windowMap.js", "jslib/konyLuaLib/ui/windowPopup.js", "jslib/konyLuaLib/ui/windowRichText.js", "jslib/konyLuaLib/ui/windowScrollBox.js", "jslib/konyLuaLib/ui/windowSegmentedUI.js", "jslib/konyLuaLib/ui/windowText.js", "jslib/konyLuaLib/ui/windowBrowser.js", "jslib/konyLuaLib/ui/windowTabPane.js", "jslib/konyLuaLib/ui/windowSlider.js", "jslib/konyLuaLib/ui/windowVideo.js"],
  initializeWidgets: function() {
    var a = [$KW.Form, $KW.HBox, $KW.VBox, $KW.Button, $KW.Image, $KW.Label, $KW.TextField, $KW.ComboBox, $KW.ListBox, $KW.Link, $KW.RichText, $KW.CheckBoxGroup, $KW.RadioButtonGroup, $KW.Map, $KW.HStrip, $KW.IGallery, $KW.Phone, $KW.Segment, $KW.Appmenu, $KW.ScrollBox, $KW.TabPane, $KW.Calendar, $KW.Switch, $KW.TextArea, $KW.DataGrid, $KW.FlexScrollContainer, $KW.MenuContainer, $KW.PickerView, $KW.Slider, $KW.Line, $KW.FlexContainer, $KW.FlexScrollContainer];
    for (var b = 0; b < a.length; b++) {
      if (a[b]) {
        a[b].initialize && a[b].initialize()
      }
    }
  },
  loadlibrarysync: function() {
    var a = kony.appinit;
    if (!($KI.themes)) {
      if (kony.appinit.index == 0 && (kony.appinit.isIE || !kony.appinit.useTransition)) {
        if (!window.jQuery) {
          kony.appinit.syncFiles.push("jslib/tparty/jquery.js")
        }
      }
      if (a.index > 0) {
        console.log("File loaded in sync: " + a.syncFiles[a.index - 1] + "  number: " + a.index)
      }
      if (a.index == a.syncFiles.length) {
        (kony.appinit.isIE7 || kony.appinit.isIE8) && kony.appinit.asyncViewFiles.push("jslib/tparty/polyfill.js");
        a.loadlibraryasync(a.asyncViewFiles, a.ondone);
        return
      }
      kony.appinit.loadScript(kony.appinit.syncFiles[kony.appinit.index], kony.appinit.loadlibrarysync);
      a.index++
    } else {
      $KG.skipproxy = true;
      a.verifyhref()
    }
  },
  ondone: function() {
    var a = kony.appinit;
    console.log("File loaded in async: " + a.asyncViewFiles[a.index] + "  number: " + a.index);
    a.index++;
    if (a.index == a.asyncViewFiles.length) {
      IndexJL ? a.verifyhref() : kony.appinit.loadJSMap();
      return
    }
  },
  loadlibraryasync: function(d, a) {
    var c = kony.appinit;
    c.index = 0;
    for (var b = 0; b < d.length; b++) {
      c.loadScript(d[b], a)
    }
  },
  loadJSMap: function() {
    var a = kony.appinit;
    a.JSMapList[a.JSMapFileCount] && a.loadScript(a.JSMapList[a.JSMapFileCount], a.loadJSMap);
    a.JSMapFileCount++;
    (a.JSMapFileCount == 2) && a.verifyhref()
  },
  loadScript: function(b, c) {
    var a = document.createElement("script");
    if (kony.appinit.isIE7 || kony.appinit.isIE8 || kony.appinit.isIE9 || (kony.appinit.isWindowsPhone && !kony.appinit.isIE10)) {
      a.src = $KG.platformver + b + "?ver=" + $KG.version
    } else {
      a.src = $KG.platformver + b
    }
    a.type = "text/javascript";
    if (!a.addEventListener) {
      a.onreadystatechange = function() {
        (this.readyState == "complete" || this.readyState == "loaded") && c()
      }
    } else {
      a.onload = c
    }
    kony.appinit.head.appendChild(a)
  },
  mergeDownloadLists: function() {
    var a = kony.appinit;
    var b = "sync" + a.foldertype;
    var c = "async" + a.foldertype;
    a.syncFiles = a.syncFiles.concat(a[b]);
    a.asyncViewFiles = a.asyncViewFiles.concat(a[c])
  },
  loadCSS: function() {
    var c = "konywebkit.css";
    if (window.navigator.appVersion.match(/MSIE (\d+)/) != null) {
      var a = parseInt(RegExp.$1);
      c = a == 7 ? "konyie7.css" : (a == 8 ? "konyie8.css" : (a == 9 ? "konyie9.css" : "konyie10.css"))
    } else {
      if (kony.appinit.vendor == "webkit") {
        c = "konywebkit.css"
      } else {
        if (kony.appinit.vendor == "Moz") {
          c = "konyfirefox.css"
        } else {
          if (kony.appinit.vendor == "o") {
            c = "konyopera.css"
          } else {
            if (kony.appinit.isIE11) {
              c = "konyie10.css"
            }
          }
        }
      }
    }
    c = c + "?ver=" + $KG.version;
    var b = document.createElement("link");
    b.setAttribute("rel", "stylesheet");
    b.setAttribute("type", "text/css");
    b.setAttribute("href", $KG.platformver + c);
    kony.appinit.head.appendChild(b)
  },
  appcacheeventhndlr: function(a) {
    if (!a) {
      a = window.event
    }
    switch (a.type) {
      case "checking":
        console.log("Checking for Manifest Version");
        break;
      case "downloading":
        console.log("Downloading of Manifest Resources");
        break;
      case "progress":
        break;
      case "cached":
        console.log("Manifest Resources loading done");
        break;
      case "noupdate":
        console.log("No Change in Manifest File");
        break;
      case "updateready":
        console.log("New manifest resources downloaded,swap the cache");
        try {
          window.applicationCache.swapCache();
          window.location.reload()
        } catch (b) {
          console.log("invalid state: swapping the cache")
        }
        break;
      case "obsolete":
        console.log("Cache Manifest file not found. So deleting app cache");
        break;
      case "error":
        console.log("Error while loading app cache");
        break;
      default:
        console.log("Appcache Event not supported")
    }
  },
  verifyhref: function(b) {
    kony.appinit.useTransition = (typeof(document.body || document.documentElement).style[kony.appinit.vendor + "Transition"] == "string");
    var h = document.getElementsByName("_konyAppProperties")[0];
    if (h && h.value && h.value !== "null") {
      window._konyAppProperties = JSON.parse($KU.getDecodedPropValue(h.value))
    } else {
      window._konyAppProperties = undefined
    }
    var g = document.getElementsByName("_reqParams")[0];
    if (g && g.value && g.value !== "null") {
      kony.globals.konyParams = JSON.parse($KU.getDecodedPropValue(g.value))
    }
    var n = document.getElementsByName("_reqHeaders")[0];
    if (n && n.value && n.value !== "null") {
      var m = [];
      var l = "";
      l = JSON.parse($KU.getDecodedPropValue(n.value).replace(/"="/g, '":"'));
      for (p in l) {
        l[p] = decodeURIComponent(l[p])
      }
      kony.globals.httpheaders = l;
      if (Object.keys) {
        m = Object.keys(kony.globals.httpheaders)
      } else {
        for (var d in kony.globals.httpheaders) {
          m.push(d)
        }
      }
      for (var f = 0; f < m.length; f++) {
        kony.globals.httpheaders[m[f]] = unescape(kony.globals.httpheaders[m[f]])
      }
    }
    var a = window.location.search.slice(1);
    if (a == "") {
      var e = window.location.hash.slice(2);
      var k = null;
      try {
        k = sessionStorage.getItem("klastform")
      } catch (c) {}
      $KG.__launchmode = 1;
      if (e != "") {
        if (k == e) {
          console.log("verifyhref:Last Form Stored: " + k)
        } else {
          console.log("verifyhref:Last Form Stored: " + k + " Hash: " + e)
        }
        if (b) {
          kony.appinit.hashflowshowform()
        } else {
          kony.appinit.loadappjs(kony.appinit.hashflowshowform)
        }
      } else {
        if (k != null) {
          try {
            sessionStorage.removeItem("klastform");
            sessionStorage.removeItem("kmodel")
          } catch (c) {}
          kony.print("verifyhref: Deleted Existing sessionStorage")
        }
        if (b) {
          kony.appinit.deeplinkflow()
        } else {
          kony.appinit.loadappjs(kony.appinit.deeplinkflow)
        }
      }
    } else {
      $KG.__launchmode = 3;
      if (b) {
        kony.appinit.deeplinkflow()
      } else {
        kony.appinit.loadappjs(kony.appinit.deeplinkflow)
      }
    }
  },
  restorespamodel: function() {
    try {
      var b = sessionStorage.getItem("kmodel");
      var a = ""
    } catch (c) {}
    if (b) {
      a = JSON.parse(b)
    }
    if (a) {
      kony.print("restorespamodel:Model Reloaded");
      return true
    } else {
      kony.print("restorespamodel:Case of Corrupt Model");
      return true
    }
  },
  appstartup: function() {
    setTimeout("kony.appinit.disablesplash()", 1500)
  },
  hashflowshowform: function() {
    var c = null;
    try {
      c = sessionStorage.getItem("klastform")
    } catch (b) {}
    if (kony.appinit.restorespamodel() && c) {
      var a = window[c];
      kony.print("hashflowshowform: Display Form " + a.id);
      a && $KW.Form.show(a)
    } else {
      kony.print("hashflowshowform:ERROR recovering model so landing on Home Page");
      kony.appinit.deeplinkflow()
    }
  },
  deeplinkflow: function() {
    var f = window.location.search.slice(1);
    var e = {};
    var a = f.split("&");
    kony.print("deeplinkflow: args:" + a.join());
    for (var c = 0; c < a.length; c++) {
      var k = a[c].replace(/\+/g, " ").split("=");
      var h = decodeURIComponent(k[0]);
      var g = decodeURIComponent(k[1]);
      if (h) {
        e[h] = g
      }
    }
    var j = window.location.href.split("?");
    var d = f.search("kdeeplink=");
    e.deeplinkpath = j[0];
    e.deepLinkPath = j[0];
    e.reqheaders = kony.globals.httpheaders;
    if (kony.globals.konyParams) {
      for (var b in kony.globals.konyParams) {
        e[b] = kony.globals.konyParams[b]
      }
    }
    $KG.kdeepobj = e;
    if (d == -1) {
      kony.print("deeplinkflow:newsession")
    } else {
      kony.print("deeplinkflow:insession")
    }
    setTimeout("kony.appinit.disablesplash()", 1500)
  },
  loadappjs: function(a) {
    var b = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "appjs/appie.js" : "appjs/app.js";
    kony.appinit.loadScript(b, a)
  },
  disablesplash: function() {
    kony.print("disabling splash");
    if (!(kony.appinit.isIE8 || kony.appinit.isIE9)) {
      $KG.animStyleSheet = $KU.createStyleSheet("animSheet")
    }
    kony.appinit.initializeheaders();
    var a = $KG.__konyappevents;
    kony.appinit.konyLoadFunctionalModules();
    kony.print("appmode:not hybrid,invoking initializeapp");
    initializeApp && initializeApp()
  },
  setAppHeaderRef: function() {
    var a = function(f) {
      for (var d in f) {
        var g = f[d];
        var e = f[d] = window[g][d];
        $KU.setChildren(g, e, e.children)
      }
    };
    var c = kony.app.headers;
    c && a(c);
    var b = kony.app.footers;
    b && a(b)
  },
  setChildren: function(d, c, b) {
    if (b && b.length > 0) {
      for (var a = 0; a < b.length; a++) {
        c[b[a]] = window[d][b[a]];
        this.setChildren(d, c, window[d][b[a]].children)
      }
    }
  },
  setImageBasedDP: function() {
    var a = "";
    if ($KU.isAndroid) {
      var b = window.devicePixelRatio;
      if (!$KU.isTablet) {
        if (b <= 1) {
          a = "320/"
        } else {
          if (b > 1 && b <= 1.5) {
            a = "360/"
          } else {
            if (b > 1.5 && b <= 2) {
              a = "400/"
            } else {
              if (b > 2) {
                a = "440/"
              }
            }
          }
        }
      } else {
        if (b <= 1) {
          a = "mdpi/"
        } else {
          if (b <= 1.5) {
            a = "hdpi/"
          } else {
            if (b > 1.5) {
              a = "xhdpi/"
            }
          }
        }
      }
    } else {
      if ($KU.isWindowsPhone) {
        a = "320/"
      } else {
        if ($KU.isBlackBerry || $KU.isBlackBerryNTH) {
          var c = window.orientation;
          var a = window.innerWidth + "/";
          if (c) {
            a = Math.min(window.innerWidth, window.innerHeight)
          }
          if (c && parseInt(a, 10) > 250) {
            a = "360/"
          } else {
            if (c || parseInt(a, 10) < 340) {
              a = "320/"
            } else {
              a = "360/"
            }
          }
          if (window.devicePixelRatio > 2) {
            a = "440/"
          }
        }
      }
    }
    if (typeof spaMarkup != "undefined" && spaMarkup && spaMarkup === "spaiphone") {
      a = ""
    }
    $KG.imagecat = a;
    if ($KG.imagewhiledownloading) {
      new Image().src = $KU.getImageURL($KG.imagewhiledownloading)
    }
    new Image().src = $KU.getImageURL("imgload.gif")
  },
  initializeheaders: function(a) {
    if (kony.constants.APPSTATE == 0) {
      kony.app && kony.appinit.setAppHeaderRef()
    }
  },
  initializeMainContainer: function() {
    var a = $KU.getElementById("__MainContainer");
    if (!a) {
      var b = document.createElement("div");
      b.setAttribute("id", "__MainContainer");
      document.body.appendChild(b)
    }
    kony.events.registerDocumentEvents()
  },
  prepareHttpHeaders: function() {
    var a = document.getElementById("isnewsession");
    if (a != null) {
      kony.appinit.isNewSession = a.innerHTML
    }
    var b = document.getElementById("sessionId");
    if (b != null) {
      kony.appinit.sessionId = a.innerHTML
    }
  },
  initappcache: function() {
    kony.appinit.prepareHttpHeaders();
    $KG.imagecat = "";
    $KG.retina = "";
    kony.appinit.useTransition = (typeof(document.body || document.documentElement).style[kony.appinit.vendor + "Transition"] == "string");
    kony.appinit.syncJSFiles.push("jslib/konyJSLib/ui/konyuiMenuContainer.js");
    kony.appinit.asyncViewFiles.push("jslib/konymenucontainerwidget.js", "jslib/konygridlayout.js");
    kony.appinit.mergeDownloadLists();
    if (document.documentElement.getAttribute("manifest") && !!window.applicationCache) {
      var a = ["checking", "downloading", "progress", "cached", "noupdate", "updateready", "obsolete", "error"];
      for (var b = 0; b < a.length; b++) {
        window.applicationCache.addEventListener(a[b], kony.appinit.appcacheeventhndlr, false)
      }
    } else {}
    kony.appinit.loadlibrarysync()
  },
  konyLoadFunctionalModules: function() {
    if ($KG.functionalModules) {
      var a = $KG.functionalModules;
      for (var b in a) {
        if (b && (b !== "KonydefaultModules") && (a[b].cache || a[b].loadOnStartUp)) {
          kony.modules.loadModule(b)
        }
      }
    }
  }
};
$KI.os = {
  platform: function() {
    var c = {};
    var b = $KG.imagecat;
    b = b.substring(0, b.length - 1);
    var a = $KU.getPlatform();
    if (a.name == "iphone") {
      if (window.devicePixelRatio == 1) {
        b = "320"
      } else {
        b = "640"
      }
    }
    c.name = "thinclient";
    c.model = "";
    c.version = a.version;
    c.deviceWidth = screen.availWidth;
    c.deviceHeight = screen.availHeight;
    c.screenWidth = $KU.getWindowWidth();
    c.screenHeight = $KU.getWindowHeight();
    c.hascamera = false;
    c.hasgps = (navigator.geolocation != undefined ? true : false);
    c.hastouchsupport = $KU.isTouchSupported;
    c.hasorientationsupport = $KU.isOrientationSupported;
    c.iswifiavailable = (navigator.onLine != undefined ? navigator.onLine : true);
    c.type = "spa";
    c.imagecat = b;
    c.deviceid = "";
    c.category = a.name;
    c.userAgent = navigator.userAgent;
    c.ip = "";
    if ($KG.httpheaders) {
      c.httpheaders = JSON.stringify($KG.httpheaders)
    }
    return c
  },
  useragent: function() {
    return navigator.userAgent
  },
  setapplicationmode: function(a) {
    $KG.appmode = a;
    if (a == 2 || a == 3) {
      $KG.platformver = ""
    }
  },
  getapplicationmode: function(a) {
    var a = $KG.appmode;
    return !!a ? a : 1
  }
};
kony.decrement = function(a) {
  if (typeof(a) === "number") {
    return a - 1
  } else {
    return a
  }
};
kony.increment = function(a) {
  if (typeof(a) === "number") {
    return a + 1
  } else {
    return a
  }
};
kony.decrementIndices = function(b) {
  var a = [];
  for (var c = 0; c < b.length; c++) {
    a[c] = b[c] - 1
  }
  return a
};
kony.incrementIndices = function(b) {
  var a = [];
  for (var c = 0; c < b.length; c++) {
    a[c] = b[c] + 1
  }
  return a
};

function containerWidgetExtendAdd(a) {
  this.setparent(a);
  this.ownchildrenref = this.ownchildrenref.concat(a);
  this.createhierarchy(a)
}

function containerWidgetExtendAddAt(b, a) {
  a = a < IndexJL ? IndexJL : (a - IndexJL > this.ownchildrenref.length ? this.ownchildrenref.length + 1 : a - IndexJL);
  this.children.splice(a, 0, b.id);
  this.ownchildrenref.splice(a, 0, b);
  b.parent = this;
  this.createhierarchy([b])
}

function containerWidgetExtendRemove(a) {
  _konyConstNS.ContainerWidget.prototype.removeReferences.call(this, a);
  boxWidgetExtendRemoveUpdate.call(this, a, true)
}

function containerWidgetExtendRemoveAt(a) {
  var b = null;
  if (a >= IndexJL && a - IndexJL <= this.ownchildrenref.length) {
    var b = this.ownchildrenref[a - IndexJL];
    b && _konyConstNS.ContainerWidget.prototype.remove.call(this, b)
  }
  boxWidgetExtendRemoveUpdate.call(this, b, true);
  return b
}

function containerWidgetExtendSetParent(b) {
  for (var a = 0; a < b.length; a++) {
    this.children.push(b[a].id);
    b[a].parent = this
  }
}

function containerWidgetExtendCreateHierarchy(c) {
  for (var a = 0; a < c.length; a++) {
    var b = c[a];
    if (b.id !== this.id) {
      this[b.id] = b
    }
    if (this.wType == "TabPane") {
      b.pf = this.pf
    } else {
      b.pf = this.id
    }
  }
}

function containerWidgetExtendRemoveReferences(c) {
  delete this[c.id];
  if (this.children.remove) {
    this.children.remove(c.id)
  } else {
    var d = this.children;
    if (d.indexOf(c.id) >= 0) {
      d && d.splice(d.indexOf(c.id), 1)
    }
  }
  var b = this.ownchildrenref;
  var a = (kony.appinit.isIE7 || kony.appinit.isIE8) ? jQuery.inArray(c, b) : b.indexOf(c);
  b && b.splice(a, 1);
  removeAllReferences(c)
}

function removeAllReferences(a) {
  var d = window[a.pf];
  if (d) {
    if (a instanceof _konyConstNS.ContainerWidget) {
      var c = a.widgets();
      for (var b = 0; b < c.length; b++) {
        delete d[c[b].id];
        if (c[b] instanceof _konyConstNS.ContainerWidget) {
          removeAllReferences(c[b])
        }
      }
    } else {
      delete d[a.id]
    }
  }
}

function containerWidgetExtendRemoveAll() {
  containerWidgetExtendRemoveAllReferences.call(this);
  this.ownchildrenref = [];
  this.children = []
}

function containerWidgetExtendRemoveAllReferences() {
  var b = this.widgets();
  for (var a = 0; a < b.length; a++) {
    var c = b[a];
    delete this[c.id];
    var d = window[this.pf];
    d && (delete d[c.id])
  }
}

function boxWidgetExtendAdd(a) {
  _konyConstNS.ContainerWidget.prototype.add.call(this, a);
  if ($KG.allforms[this.pf]) {
    $KG.allforms[this.pf].createFormLevelHierarchy(a)
  } else {
    if (window[this.pf]) {
      var b = window[this.pf];
      _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(b, b.ownchildrenref)
    }
  }
  if (this.wType == "ScrollBox") {
    _konyConstNS.Box.prototype.updateBoxWeight.call(this, a)
  }
  $KW.HBox.addChild(this, a)
}

function boxWidgetExtendAddAt(b, a) {
  _konyConstNS.ContainerWidget.prototype.addAt.call(this, b, a);
  $KG.allforms[this.pf] && $KG.allforms[this.pf].createFormLevelHierarchy([b]);
  if (this.wType == "ScrollBox") {
    _konyConstNS.Box.prototype.updateBoxWeight.call(this, b)
  }
  $KW.HBox.addChildat(this, [b], a)
}

function boxWidgetExtendRemove(b) {
  if (b) {
    $KW.HBox.DOMremove(this, b);
    var a = this.ownchildrenref.indexOf(b);
    _konyConstNS.ContainerWidget.prototype.remove.call(this, b);
    if (a != -1) {
      $KU.onWidgetRemove(this, a)
    }
  }
}

function boxWidgetExtendRemoveAt(b) {
  $KW.HBox.DOMremove(this, this.ownchildrenref[b - IndexJL]);
  var a = _konyConstNS.ContainerWidget.prototype.removeAt.call(this, b);
  $KU.onWidgetRemove(this, b);
  return a
}

function boxWidgetExtendRemoveAll() {
  if (this.widgets().length > 0) {
    $KW.HBox.DOMremoveAll(this);
    _konyConstNS.ContainerWidget.prototype.removeAll.call(this)
  }
}

function boxWidgetExtendUpdateBoxWeight(b) {
  if (b.length) {
    for (var a = 0; a < b.length; ++a) {
      this.totalWt += b[a].containerweight
    }
  } else {
    if (b.containerweight) {
      this.totalWt += b.containerweight
    }
  }
  $KW[this.wType]["updateView"](this, "totalWt", this.totalWt)
}

function boxWidgetExtendRemoveUpdate(c, a) {
  if (this.wType == "ScrollBox") {
    this.totalWt = 0;
    for (var b = 0; b < this.children.length; ++b) {
      this.totalWt += this[this.children[b]].containerweight
    }
    $KW[this.wType]["updateView"](this, "totalWt", this.totalWt)
  }
}

function formWidgetExtendAdd(b) {
  _konyConstNS.ContainerWidget.prototype.add.call(this, b);
  this.createFormLevelHierarchy(b);
  try {
    $KW.Form.addChild(this, b)
  } catch (a) {}
}

function formWidgetExtendAddAt(b, a) {
  _konyConstNS.ContainerWidget.prototype.addAt.call(this, b, a);
  this.createFormLevelHierarchy([b]);
  a = a < IndexJL ? 0 : ((a > this.children.length) ? this.children.length : a - IndexJL);
  $KW.Form.addChildAt(this, b, a)
}

function formWidgetExtendRemove(b) {
  if (b) {
    $KW.Form.DOMremove(this, b);
    var a = this.ownchildrenref.indexOf(b);
    _konyConstNS.ContainerWidget.prototype.remove.call(this, b);
    if (a != -1) {
      $KU.onWidgetRemove(this, a)
    }
  }
}

function formWidgetExtendRemoveAt(b) {
  $KW.Form.DOMremoveAt(this, b - IndexJL);
  var a = _konyConstNS.ContainerWidget.prototype.removeAt.call(this, b);
  $KU.onWidgetRemove(this, b);
  return a
}

function formWidgetExtendRemoveAll(a) {
  if (this.widgets().length > 0) {
    $KW.Form.DOMremoveAll(this);
    _konyConstNS.ContainerWidget.prototype.removeAll.call(this)
  }
}

function formWidgetExtendCreateFormLevelHierarchy(c) {
  for (var a = 0; a < c.length; a++) {
    var b = c[a];
    this[b.id] = b;
    if (this.wType == "TabPane") {
      b.pf = this.pf
    } else {
      b.pf = this.id
    }
  }
  _konyConstNS.Form2.getallboxes.call(this, c);
  for (var a = 0; a < this.allboxes.length; a++) {
    var d = this.allboxes[a].ownchildrenref;
    this.createhierarchy.call(this, d)
  }
  this.allboxes = []
}

function formWidgetExtendCommonHeaderFooterSetup(a) {
  var d = {};
  d.children = [];
  for (var b = IndexJL; b < this[a].length; b++) {
    if (app && !app[a][this[a][b].id]) {
      app[a][this[a][b].id] = this[a][b]
    }
    var c = this[a][b];
    if (c.wType == "VBox" && this.wType == "Form") {
      throw new KonyError(1102, "WidgetError", "Widget cannot be created due to invalid input data")
    }
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(this, [c]);
    _konyConstNS.ContainerWidget.prototype.createhierarchy.call(c, [c]);
    app[a][this[a][b].id].isheader = true;
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(app[a][this[a][b].id], [].slice.call([this[a][b]]));
    d.children[b] = this[a][b].id;
    d[this[a][b].id] = this[a][b]
  }
  d.pf = this.id;
  d.id = this[a.substr(0, 6)] = [this.id, a.substr(0, 6)].join("_");
  $KG[d.id] = d
}

function formWidgetExtendGetAllBoxes(b) {
  for (var a = 0; a < b.length; a++) {
    var c = b[a];
    if (c.ownchildrenref) {
      this.allboxes.push(c);
      _konyConstNS.Form2.getallboxes.call(this, c.ownchildrenref)
    }
  }
}

function formWidgetExtendaddHeaderorFooter() {
  var b = [].slice.call(arguments[0]);
  for (var a = 0; a < b.length; a++) {
    if (b[a].wType == "VBox" && this.wType == "Form") {
      throw new KonyError(1102, "WidgetError", "Widget cannot be created due to invalid input data")
    }
  }
  _konyConstNS.ContainerWidget.prototype.createhierarchy.call(this, b);
  _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(this, b)
};
kony.model = {
  update: function(f, b, h) {
    if (f == undefined || f == null) {
      kony.print("kony.model.update:Error in Model,value is undefined or null");
      return
    }
    if (f.wType == undefined || (f[b] && f[b]["wType"])) {
      if ((kony.appinit.isIE7 || kony.appinit.isIE8) && (b == "rowTemplate" || b == "sectionHeaderTemplate")) {
        b = b.toLowerCase()
      }
      f[b] = h
    } else {
      var d = f;
      var g = d.wType;
      if (g == "TPW") {
        var i = d.widgetName.split(".");
        var c = window;
        for (var e = 0; e < i.length; e++) {
          c = c[i[e]]
        }
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          d[b] = h
        }
        c.modelChange && c.modelChange(f, b, h)
      } else {
        b = b.toLowerCase();
        var a = d[b];
        $KI.i18n && $KI.i18n.checkI18nStatus(d, b);
        d[b] = h;
        if (kony.appinit.isIE8) {
          if (b == "padding" || b == "skin" || b == "left" || b == "right" || b == "top" || b == "bottom" || b == "width" || b == "height" || b == "minheight" || b == "minwidth" || b == "maxheight" || b == "maxwidth" || b == "centerx" || b == "centery") {
            $KU.setLayoutConfig(d, h, a)
          }
        }
        this.updateView(d, b, h, a)
      }
    }
  },
  updateView: function(n, r, F, f) {
    var c;
    if (n.wType == "Form") {
      c = document.getElementById(n.id)
    } else {
      if (n.wType == "Popup") {
        c = document.getElementById(n.id + "_body")
      } else {
        c = $KU.getNodeByModel(n)
      }
    }
    if (!c) {
      c = document.getElementById(n.pf + "_" + n.id + "_Body")
    }
    switch (r) {
      case "onhover":
        new $KI.HoverInit(n);
        break;
      case "skin":
        if (n.wType == "Form") {
          var o;
          if (!$KG.needScroller && !$KU.isBlackBerryNTH) {
            document.body.className = F || ""
          } else {
            if ($KU.isBlackBerryNTH) {
              o = document.getElementById(n.id + "_container")
            } else {
              o = document.getElementById(n.id + "_scroller")
            }
          }
          if (o) {
            $KU.removeClassName(o, f);
            $KU.addClassName(o, F)
          }
        } else {
          if (n.wType == "Tab") {
            c = $KU.getElementById(n.pf + "_" + n.id + "_Body")
          } else {
            if (c && n.wType == "Image") {
              c = c.parentNode
            }
          }
        }
        if (c) {
          var C = $KW.skins.getDefaultSkin(n);
          $KU.removeClassName(c, f || C);
          $KU.addClassName(c, F || C);
          if (n.wType == "Line") {
            $KW.Line.applySkin(c, F)
          }
          if (n.wType == "Calendar") {
            c.children[0].style.color = "inherit"
          }
          if ($KU.isFlexWidget(n) && !(n.wType == "FlexContainer" && !n.clipbounds)) {
            c = $KW.Utils.getWidgetNode(n).parentNode;
            if (!c) {
              return
            }
            $KU.removeClassName(c, f || C);
            $KU.addClassName(c, F || C)
          }
        } else {
          $KW.Utils.updateDOMSkin(n, F, f)
        }
        if (n.wType == "Label") {
          $KW.Label.updateView(n, "linespacing", n.linespacing)
        }
        break;
      case "focusskin":
      case "rowfocusskin":
      case "activefocusskin":
        $KW.Utils.updateFocusSkin(n, n.rowfocusskin ? "rowfocusskin" : "focusskin");
        break;
      case "hoverskin":
        $KW.Utils.updateFocusSkin(n, "hoverskin");
        break;
      case "tooltip":
        c && (c.title = F);
        break;
      case "isvisible":
        $KW.Widget.setvisibility(n, F);
        break;
      case "margin":
        if (c && !$KU.isFlexWidget(n)) {
          $KW.skins.setMarginPadding(c, r, n, F);
          if (n.wType == "ScrollBox") {
            var h = $KG[n.pf + "_" + n.id + "_scroller"];
            h && h.refresh()
          }
        }
        break;
      case "padding":
        if ($KU.isFlexContainer(n) || n.wType == "Slider" || n.wType == "Switch") {
          return
        }
        if (n.wType == "Segment") {
          if (n.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            var v = c.childNodes[0].childNodes;
            for (var z = IndexJL; z < v.length; z++) {
              c = v[z].childNodes[0];
              c.style[r] = $KU.joinArray(F, "% ") + "%"
            }
            return
          }
        }
        if (n.wType == "DataGrid") {
          var H = $KU.isFlexWidget(n);
          var p = c.rows;
          for (var z = 0; z < p.length; z++) {
            for (var w = 0; w < p[z].cells.length; w++) {
              if (H) {
                $KW.Utils.setPaddingByParent(n, p[z].cells[w])
              } else {
                p[z].cells[w].style[r] = $KU.joinArray(F, "% ") + "%"
              }
            }
          }
          return
        }
        if (n.wType == "Image") {
          c = c.parentNode
        }
        if (c) {
          var E = c;
          c = (n.wType == "Form") ? c.parentNode : c;
          c = (n.wType == "Popup") ? c.firstChild : c;
          if ($KU.isFlexWidget(n)) {
            $KW.Utils.setPaddingByParent(n, c)
          } else {
            c.style[r] = $KU.joinArray(F, "% ") + "%"
          }
          if (n.wType == "ScrollBox") {
            if (n.scrollDirection == constants.SCROLLBOX_SCROLL_VERTICAL || n.scrollDirection == constants.SCROLLBOX_SCROLL_BOTH) {
              $KU.setScrollHeight(n)
            }
          }
          if (n.wType == "VBox" || n.wType == "HBox") {
            var d = c.style.margin;
            c.style.margin = "1px";
            setTimeout(function() {
              c.style.margin = d
            }, 10)
          }
        }
        break;
      case "containerweight":
        if (c) {
          c = c.parentNode;
          if (n.wType == "Image") {
            c = c.parentNode
          }
          if (n.wType == "Slider") {
            c = c.parentNode.parentNode
          }
          if (n.wType == "HStrip") {
            if (c.parentNode.parentNode.parentNode && c.parentNode.parentNode.parentNode.className.indexOf("kcell") != -1) {
              c = c.parentNode.parentNode.parentNode
            }
          }
          $KU.removeClassName(c, "kwt" + f);
          $KU.addClassName(c, "kwt" + F);
          if ($KG.appbehaviors.adherePercentageStrictly == true) {
            var y = kony.model.getWidgetModel(n.pf, n.parent && n.parent.id);
            if (y && y.wType == "HBox") {
              $KU.removeClassName(c.parentNode.lastChild, "kwt" + y.dummyNodeWidth);
              y.dummyNodeWidth = $KW.HBox.getExtraNodeWidth(y);
              $KU.addClassName(c.parentNode.lastChild, "kwt" + y.dummyNodeWidth)
            }
          }
          if (n.wType == "HStrip") {
            var m = c.parentNode;
            if (m.childNodes.length == 1) {
              cell.style.display = "inline-block"
            }
          } else {
            if (n.wType == "Switch") {
              (function(e) {
                var i = window.setTimeout(function() {
                  $KW.Switch.adjustSwitchWidth(e);
                  $KW.Switch.adjustSwitchHeight(e);
                  window.clearTimeout(i);
                  delete i
                }, 0)
              })(n.pf)
            } else {
              if (n.wType == "ScrollBox") {
                var x = c.childNodes[0].id;
                var u = x.substring(0, x.lastIndexOf("_"));
                $KW.ScrollBox.adjustArrowPosition(u)
              } else {
                if (n.wType == "Slider") {
                  $KW[n.wType]["updateView"](n, "containerweight")
                }
              }
            }
          }
        }
        var G = $KG.allforms[n.pf];
        if (!G) {
          return
        }
        var a = n.parent;
        if (a && a.wType == "ScrollBox") {
          $KW.ScrollBox.recalculateScrollBoxWidth(a)
        }
        break;
      case "containerheightreference":
      case "containerheight":
        var l = n.needScroller;
        $KU.updateScrollFlag(n);
        var t = $KU.getNodeByModel(n);
        if (t) {
          if (n.wType == "Popup") {
            var B = document.getElementById(n.id + "_container")
          }
          $KU.setScrollHeight(n, t);
          if (n.wType == "Popup") {
            $KW.Popup.adjustPopupDimensions(n, B.childNodes[1] || B.childNodes[0])
          }
        }
        break;
      case "backgroundimage":
        $KW.Utils.updateNormalImage(n);
        break;
      case "contentalignment":
        var b = $KW.skins.getContentAlignment(n);
        if (c) {
          c.style.textAlign = b;
          if (n.wType == "Calendar" && $KU.isIE10 && c.firstChild) {
            c.firstChild.style.textAlign = b;
            var k = c.firstChild.style.paddingRight;
            c.firstChild.className += " updateTextAlignment";
            window.setTimeout(function() {
              $KU.removeClassName(c.firstChild, "updateTextAlignment");
              c.firstChild.style.paddingRight = k
            }, 100)
          }
          if (n.wType == "Calendar" && $KU.isIE9 && c.firstChild) {
            c.firstChild.value += ""
          }
        }
        break;
      case "accessibilityConfig":
        if (!c || n.wType == "RadioButtonGroup" || n.wType == "CheckBoxGroup") {
          return
        }
        $KU.addAriatoElement(c, F, n, f);
        break;
      case "zindex":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          if ($KU.isFlexWidget(n)) {
            c.parentNode.style.zIndex = F
          } else {
            c.style.zIndex = F
          }
        }
        break;
      case "opacity":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          if ($KU.isFlexWidget(n)) {
            c.parentNode.style.opacity = F
          } else {
            c.style.opacity = F
          }
        }
        break;
      case "transform":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          var A = $KW.animUtils.applyTransform(n, F);
          if ($KU.isFlexWidget(n)) {
            c.parentNode.style[vendor + "Transform"] = A
          } else {
            c.style[vendor + "Transform"] = A
          }
        }
        break;
      case "anchorpoint":
        var c = $KW.Utils.getWidgetNode(n);
        if (c) {
          if (F) {
            if ((F.x < 0) || (F.x > 1) || (F.y < 0) || (F.y > 1)) {
              return
            }
            if ($KU.isFlexWidget(n)) {
              c.parentNode.style[vendor + "TransformOrigin"] = (F.x * 100) + "% " + (F.y * 100) + "% "
            } else {
              c.style[vendor + "TransformOrigin"] = (F.x * 100) + "% " + (F.y * 100) + "% "
            }
          } else {
            if ($KU.isFlexWidget(n)) {
              c.parentNode.style[vendor + "TransformOrigin"] = "50% 50%"
            } else {
              c.style[vendor + "TransformOrigin"] = "50% 50%"
            }
          }
        }
        break;
      case "touchstart":
      case "touchmove":
      case "touchend":
        if (n.touches && n.touches[r] && n.touches[r].callback === F) {
          break
        }
        $KW.Utils.removetouch(n, r, false);
        $KW.Utils.updateModelWithTouches(n, r, F);
        var c = $KW.Utils.getWidgetNode(n);
        if (c && n.touches[r]) {
          if (c.id && c.id.indexOf("_scroller") > 0) {
            c = c.childNodes[0]
          }
          n.touches[r]["instance"] = new $KW.touch.TouchEvents(n, c, r, F)
        }
        break;
      case "backgroundcolor":
      case "bordercolor":
        var s = $KW.skins.validateHexValue(F);
        if (s) {
          if (kony.appinit.isIE8) {
            F = F.substring(0, 6)
          }
          var q = $KW.skins.convertHexValuetoRGBA(F)
        }
        var c = $KW.Utils.getWidgetNode(n);
        if (r == "backgroundcolor") {
          c && (c.style.background = q)
        } else {
          if (r == "bordercolor") {
            c && (c.style.borderColor = q)
          }
        }
        break;
      case "borderwidth":
        var c = $KW.Utils.getWidgetNode(n);
        c && (c.style.borderWidth = F + "px");
        break;
      case "cornerradius":
        var c = $KW.Utils.getWidgetNode(n);
        c && (c.style.borderRadius = F + "px");
        break;
      default:
        var D = (n.wType == "Tab") ? "TabPane" : n.wType;
        var g = $KW[D];
        g.updateView && g.updateView(n, r, F, f)
    }
  },
  getWidgetModel: function(e, d, f, b) {
    if (!e) {
      return null
    }
    var a = kony.model.getWidgetRef(e);
    if (f && a) {
      if (d) {
        var c = a[f];
        if (b) {
          return c[b]["header"][d]
        } else {
          return c[d]
        }
      }
    }
    if (d && e != d) {
      var c;
      if (typeof a != "undefined") {
        c = a[d]
      } else {
        c = window[d]
      }
      return c
    }
    return a
  },
  getWidgetRef: function(a) {
    var b = $KG.allforms[a];
    if (b && ["Form", "Form2"].contains(b.wType)) {
      return b
    } else {
      return ($KG[a] || window[a])
    }
  }
};
kony.events = {
  widgetEventMap: {},
  hiddenIFrame: null,
  isFrameworkEventsRegistered: false,
  KUnloadEvent: function(c, a, b, d) {
    this.kFormID = c;
    this.kWidgetID = a;
    this.kWidgetType = b;
    this.kEventHandler = d
  },
  addEvent: function(a, b, c) {
    kony.events.widgetEventMap[b] = kony.events.widgetEventMap[b] || {};
    kony.events.widgetEventMap[b][a] = c
  },
  getEventHandler: function(M) {
    M = M || window.event;
    var H = M.target || M.srcElement;
    var F = true;
    var n;
    if ($KG.__idletimeout && $KG.__idletimeout["enabled"]) {
      var L = $KI.appevents.resettimer();
      if (L === false) {
        return
      }
    }
    if (M.type != "mousedown") {
      $KW.Appmenu && $KW.Appmenu.hidemoreappmenuitems()
    }
    if (H.getAttribute("w-type") == "Calendar" || H.getAttribute("kwidgettype") == "Calendar") {
      if (kony.appinit.isIE8 || kony.appinit.isIE9 || kony.appinit.isIE10) {
        var u = kony.utils.getModelByNode(H.parentElement);
        if (u) {
          var k = u.focusSkin;
          if (k) {
            if (M.type == "mousedown" && H.nodeName == "INPUT" && H.parentElement.getAttribute("kWidgetType") == "Calendar") {
              kony.utils.addClassName(H.parentElement, k)
            }
            if (M.type == "mouseup" && H.nodeName == "INPUT" && H.parentElement.getAttribute("kWidgetType") == "Calendar") {
              kony.utils.removeClassName(H.parentElement, k)
            }
          }
        }
      }
    }
    if (H.getAttribute("w-type") != "Calendar" && H.getAttribute("kwidgettype") != "Calendar") {
      $KW.Calendar && $KW.Calendar.__dp.destroyCalendar()
    }
    if (H.getAttribute("w-type-inactive")) {
      return
    }
    var s = document.querySelectorAll("div[" + kony.constants.KONY_WIDGET_TYPE + "='MenuContainer']"),
      t = null;
    for (var A = 0; A < s.length; A++) {
      if (M.type == "click") {
        (function(p) {
          var i = $KU.getModelByNode(p);
          if (!i) {
            i = p.id.split("_");
            i.splice(0, 1);
            i = window[i.join("_")]
          }
          if (i.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
            p.style.visibility = "hidden"
          }
        })(s[A])
      }
    }
    var J = document.querySelectorAll("div.dw"),
      g = null;
    for (var O = 0; O < J.length; O++) {
      g = $KG[J[O].id.replace("_picker", "")];
      g && g.hide()
    }
    if (!$KG.nativeScroll && M.type == "click" && typeof cvox == "undefined" && ($KU.isTouchSupported || $KU.isPointerSupported) && $KG.targetWidget && ($KG.moved || ($KG.targetWidget && H != $KG.targetWidget))) {
      if (H.tagName == "A" && H.getAttribute("href")) {
        kony.events.stopPropagation(M);
        kony.events.preventDefault(M)
      }
      $KG.targetWidget = "";
      $KG.moved = false;
      var v = M.srcElement;
      if ((v.getAttribute && v.getAttribute("kwidgettype") == "Calendar") || (v.parentNode && v.parentNode.getAttribute && v.parentNode.getAttribute("kwidgettype") == "Calendar")) {} else {
        return
      }
    }
    if (H) {
      var m = H.getAttribute(kony.constants.KONY_WIDGET_TYPE);
      if (H.tagName == "A") {
        n = [H.innerText, H.getAttribute("href")]
      }
      if (H.getAttribute("tpwidgettype")) {
        $KW.Popup && $KW.Popup.dismissPopup();
        return
      } else {
        if (!m) {
          var w = H.childNodes[0];
          if (H.getAttribute("index") && w && w.getAttribute("kwidgettype") == "Segment") {
            H = w;
            m = "Segment"
          } else {
            var z = $KU.getParentByAttribute(H, kony.constants.KONY_WIDGET_TYPE);
            if (H && H.tagName == "CANVAS" && ($KU.isIE10 || $KU.isIE11) && z && z.getAttribute("kwidgettype") == "googlemap") {
              return
            }
            var B = $KU.getParentByAttribute(H, "tpwidgettype");
            H = z;
            if (!H || B) {
              $KW.Popup && $KW.Popup.dismissPopup();
              return
            }
            m = H.getAttribute(kony.constants.KONY_WIDGET_TYPE)
          }
        }
      }
      if (m == "RadioButtonGroup" || m == "CheckBoxGroup" || m == "ComboBox" || m == "ListBox") {
        if ($KU.preventClickEvent(M, H)) {
          return
        }
      }
      var r = $KU.getContainerForm(H);
      if (M.type == "contextmenu") {
        var e = (H.getAttribute("kcontextmenuid")) ? H : $KU.getParentByAttribute(H, "kcontextmenuid");
        if (!e) {
          return
        }
        var b = $KU.getModelByNode(e);
        if (b && b.contextmenu && b.contextmenu.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
          kony.events.preventDefault(M);
          e = document.getElementById(b.pf + "_" + b.contextmenu.id);
          if (typeof b.onrightclick === "function" && b.contextmenu) {
            if (["MenuContainer", "Segment", "DataGrid"].indexOf(b.wType) >= 0) {
              var c = $KW.Utils.getIndexAttrNameByContainerModel(b),
                G = null,
                D = null,
                f = null,
                R = null,
                E = null;
              G = $KU.getParentByAttribute(H, c).getAttribute(c).split(",");
              if (b.wType === "DataGrid") {
                f = $KU.getParentByAttribute(event.srcElement, "colindex").getAttribute("colindex");
                if (f) {
                  var l = f.split(",");
                  b.onrightclick(b, l[0] * 1, l[1] * 1)
                }
              } else {
                if (b.wType === "Segment") {
                  R = $KU.getParentByAttribute(event.srcElement, "secindex");
                  if (R) {
                    R = R.getAttribute("secindex");
                    var N = R.split(",");
                    b.onrightclick(b, N[0] * 1, N[1] * 1, b.selectedState)
                  } else {
                    E = $KU.getParentByAttribute(event.srcElement, "index").getAttribute("index");
                    b.onrightclick(b, null * 1, E * 1, b.selectedState)
                  }
                } else {
                  D = $KW.Utils.getRowDataByContainerModelAndIndex(b, G);
                  b.onrightclick(b, G, D)
                }
              }
            } else {
              b.onrightclick(b)
            }
          }
          var x = document.getElementById("__MainContainer");
          if (!x) {
            x = document.body
          }
          if (e) {
            x.removeChild(e)
          }
          var Q = document.createElement("div");
          var y = new $KW.WidgetGenerationContext(b.pf);
          b.contextmenu.pf = b.pf;
          Q.innerHTML = $KW.MenuContainer.render(b.contextmenu, y);
          e = Q.firstChild;
          x.appendChild(e);
          e.style.visibility = "visible";
          e.style.position = "fixed";
          e.style.top = ((M.clientY || M.pageY) + 1) + "px";
          e.style.left = ((M.clientX || M.pageX) + 1) + "px"
        }
        return
      }
      if (!r || (window[r] && window[r].wType != "Popup")) {
        var d = document.querySelectorAll("div[name='nonmodalpopup']");
        for (var P = 0; P < d.length; P++) {
          var C = d[P].childNodes[0];
          var b = window[C.id];
          if (b.minimizeonlostfocus) {
            $KW.Popup.minimize(document.getElementById("minmax_" + C.id), M)
          } else {
            if (b && !b.retaindisplayonlostfocus) {
              $KW.Popup.dismiss(b);
              return
            }
          }
        }
      } else {
        var j = document.getElementById(r + "_container");
        if (j && $KW.Popup.zindex) {
          j.style["z-index"] = ++$KW.Popup.zindex
        }
      }
      var q = $KU.getModelByNode(H);
      var I = kony.events.widgetEventMap[m];
      if (I && I[M.type]) {
        var h = H.getAttribute("kdisabled");
        if (h == "true") {
          kony.events.preventDefault(M);
          return
        }
        var o = I[M.type];
        if (m == "RichText") {
          if (!q.onclick) {
            F = false
          }
        }
        var a = M.target || M.srcElement;
        if (!(m == "TextField" || m == "CheckBoxGroup" || m == "TextArea" || m == "RadioButtonGroup" || (m == "DataGrid" && a.type == "checkbox"))) {
          if (F) {
            kony.events.stopPropagation(M);
            kony.events.preventDefault(M)
          }
        }
        var K = document.querySelectorAll("div[name='SelectOptions']");
        if (K) {
          for (var P = 0; P < K.length; P++) {
            if (K[P].style.display == "block") {
              if (H.id != K[P].parentNode.id) {
                K[P].style.display = "none"
              }
            }
          }
        }
        if (m == "RichText" && n) {
          o(M, H, n)
        } else {
          o(M, H, a)
        }
        if (!kony.system.activity.hasActivity()) {
          $KW.Utils.removeBlockUISkin();
          $KW.unLoadWidget()
        }
      }
    }
  },
  addEventListener: function(a, b, d, c) {
    if (!a) {
      return
    }
    if (!d) {
      d = kony.events.getEventHandler
    }
    if (!c) {
      c = false
    }
    if (a.addEventListener) {
      a.addEventListener(b, d, c)
    } else {
      if (a.attachEvent) {
        a.attachEvent("on" + b, d)
      }
    }
  },
  removeEventListener: function(a, b, d, c) {
    if (!a) {
      return
    }
    if (!d) {
      d = kony.events.getEventHandler
    }
    if (!c) {
      c = false
    }
    if (a.removeEventListener) {
      a.removeEventListener(b, d, c)
    } else {
      if (a.attachEvent) {
        a.detachEvent("on" + b, d)
      }
    }
  },
  preventDefault: function(a) {
    if (!a) {
      return
    }
    if (a.preventDefault) {
      a.preventDefault()
    } else {
      a.returnValue = false
    }
  },
  stopPropagation: function(a) {
    if (!a) {
      return
    }
    if (a.stopPropagation) {
      a.stopPropagation()
    } else {
      a.cancelBubble = true
    }
  },
  ontouchstartHandler: function(b) {
    if (($KU.isIE || $KU.isPointerSupported ? b : b.changedTouches) && !$KG.nativeScroll) {
      var a = b.changedTouches ? (b.changedTouches[0].target || b.changedTouches[0].srcElement) : (b.target || b.srcElement);
      if (a.nodeType == 3) {
        a = a.parentNode
      }
      $KG.targetWidget = a;
      $KG.moved = false
    }
  },
  ontouchmoveHandler: function(a) {
    if (!$KG.nativeScroll) {
      $KG.moved = true
    }
  },
  registerDocumentEvents: function() {
    var a = ($KU.isWindowsPhone && $KU.isIE9) ? document : document.getElementById("__MainContainer");
    kony.events.addEventListener(a, "click");
    kony.events.addEventListener(a, "contextmenu");
    kony.events.addEventListener(a, "mousedown");
    kony.events.addEventListener(a, "mouseup");
    kony.events.addEventListener(a, "change");
    kony.events.addEventListener(a, "keydown");
    kony.events.addEventListener(a, "keyup");
    if ($KG.useNativeScroll) {
      kony.events.addEventListener(a, "touchstart", function() {});
      kony.events.addEventListener(a, "touchmove", function() {})
    }
    kony.appinit.initializeWidgets();
    kony.events.orientationregistration();
    kony.events.addEventListener(window, "unload", kony.events.unregisterListeners);
    window.onbeforeunload = function(b) {
      if (window.refreshMessage) {
        setTimeout(function() {
          $KG.__appservice && $KG.__appservice({
            isRefresh: true,
            refreshForm: $KG.__currentForm
          })
        }, 500);
        return refreshMessage
      }
    };
    kony.events.isFrameworkEventsRegistered = true;
    kony.events.formDisableonModalPopup()
  },
  formDisableonModalPopup: function() {
    if (kony.appinit.isIE8) {
      $(document).focusin(function() {
        var a = document.querySelector("div.popupcontainer form");
        if (a) {
          var b = document.getElementById(a.id);
          if (b && !b.contains(event.srcElement)) {
            b.tabIndex = -1;
            b.focus()
          }
        }
      })
    } else {
      kony.events.addEventListener(document, "focus", function(d) {
        var b = document.querySelector("div.popupcontainer form");
        if (b) {
          console.log(b + " " + b.id);
          var c = document.getElementById(b.id);
          if (c && !c.contains(d.target)) {
            d.stopPropagation();
            if (kony.appinit.isChrome) {
              var a = c.querySelector("select,input,a,textarea");
              a && a.focus()
            } else {
              c.tabIndex = -1;
              c.focus()
            }
          }
        }
      }, true)
    }
  },
  unregisterListeners: function(b) {
    var a = $KU.isWindowsPhone ? document : document.getElementById("__MainContainer");
    kony.events.removeEventListener(a, "click");
    kony.events.removeEventListener(a, "touchstart");
    kony.events.removeEventListener(a, "touchmove");
    kony.events.removeEventListener(a, "change");
    kony.events.removeEventListener(a, "keydown");
    kony.events.removeEventListener(a, "keyup");
    kony.events.removeEventListener(a, "touchstart");
    kony.events.removeEventListener(a, "mousedown");
    kony.events.removeEventListener(a, "mouseup");
    if ($KU.hashChange) {
      kony.events.removeEventListener(window, "hashchange")
    }
    $KW.Form.delistSystemTimerActions()
  },
  windowOrientationChange: function() {
    var d = $KU.getWindowWidth();
    var c = $KU.getWindowHeight();
    var b = window.event;
    if (Math.abs($KG.__oldWindowWidth - d) < 5 || Math.abs($KG.__oldWindowHeight - c) < 5) {
      return
    }
    $KG.__oldWindowWidth = d;
    $KG.__oldWindowHeight = c;
    var a = $KU.detectOrientation();
    if (a != undefined && a == $KG.__orientation) {
      return
    } else {
      $KG.__orientation = a
    }
    if ($KG.__currentForm) {
      window.clearTimeout(kony.events.orientationTimeoutId);
      kony.events.orientationTimeoutId = setTimeout(function() {
        var g = kony.events.widgetEventMap || {};
        for (var e in g) {
          var h = g[e];
          var f = h.onorientationchange || h.onresize;
          f && f($KG.__currentForm.id, $KG.__orientation)
        }
        $KW.Form.resizeForm($KG.__currentForm.id, true)
      }, $KU.orientationDelay)
    }
  },
  orientationregistration: function() {
    $KG.__orientation = $KU.detectOrientation();
    $KG.__oldWindowWidth = $KU.getWindowWidth();
    $KG.__oldWindowHeight = $KU.getWindowHeight();
    var a = ($KU.isOrientationSupported && !$KU.isAndroid) ? "orientationchange" : "resize";
    kony.events.addEventListener(window, a, kony.events.windowOrientationChange)
  },
  executeBoxEvent: function(c, f, t, i, h) {
    if (f && t) {
      var n = null,
        o = null,
        k = null,
        l = null,
        a = c,
        s = null,
        e;
      var q = $KW.Utils.getTemplateByContainerModelAndRowData(t, f, i, h);
      while (a) {
        var d = t.widgetdatamap ? f[t.widgetdatamap[a.id]] : f[a.id];
        n = $KU.cloneObj(d);
        if (typeof n !== "undefined") {
          if (typeof n === "string") {
            n = (a.wType === "Image") ? {
              src: n
            } : {
              text: n
            }
          }
          if (!IndexJL) {
            for (var m in n) {
              if (n.hasOwnProperty(m) && m !== m.toLowerCase()) {
                n[m.toLowerCase()] = n[m]
              }
            }
            if (t.wType == "Segment") {
              e = {
                sectionIndex: t.currentIndex[0],
                rowIndex: t.currentIndex[1],
                widgetInfo: d
              }
            }
          }
          k = n.onclick || a.onclick;
          if (k && n.enable !== false) {
            s = $KU.extend(n, a);
            l = $KU.returnEventReference(s.onclick);
            if (l && s.blockeduiskin) {
              $KW.Utils.applyBlockUISkin(s)
            }
            o = $KU.getNodeByModel(s);
            (!s.containerID && s.wType != "Segment") && $KW.HBox.setProgressIndicator(o);
            l && (e ? l.call(s, s, e) : l.call(s, s));
            return true
          }
        } else {
          if (a.onclick) {
            l = $KU.returnEventReference(a.onclick);
            if (l && a.blockeduiskin) {
              $KW.Utils.applyBlockUISkin(a)
            }
            o = $KU.getNodeByModel(a);
            (!a.containerID && a.wType != "Segment") && $KW.HBox.setProgressIndicator(o);
            l && l.call(a, a);
            return true
          }
        }
        a = a.parent;
        if (!a) {
          return false
        }
      }
    } else {
      var r = c.pf;
      var g = c;
      var b = window[r];
      while (g) {
        if (g.onclick || (g.parent && r == g.parent.id && g.parent.wType != "HBox") || g.id == b.id) {
          if (g.onclick) {
            var j = $KU.returnEventReference(g.onclick);
            g.blockeduiskin && $KW.Utils.applyBlockUISkin(g);
            var o = $KU.getNodeByModel(g);
            (!g.containerID && g.wType != "Segment") && $KW.HBox.setProgressIndicator(o);
            j && j.call(g, g);
            return true
          }
          return false
        }
        g = g.parent
      }
      return false
    }
  },
  browserback: {
    currentHash: window.location.hash,
    HASH_PREFIX: "#_",
    handleBrowserBackEvent: function() {
      var a = false;
      var d;
      if (kony.appinit.isIE7 && kony.events.hiddenIFrame && kony.events.hiddenIFrame.location.hash && kony.events.hiddenIFrame.location.hash != location.hash) {
        a = true;
        d = kony.bm.getFormId(kony.events.hiddenIFrame.location.hash)
      } else {
        if (location.hash && kony.events.browserback.currentHash && location.hash !== kony.events.browserback.currentHash) {
          a = true;
          d = kony.bm.getFormId(location.hash)
        }
      }
      var b = $KG.__currentForm;
      if (a) {
        var c = $KG.__currentForm && $KU.returnEventReference(b.ondeviceback);
        if (c) {
          location.hash = kony.events.browserback.HASH_PREFIX + b.id;
          c();
          return
        }
        var e = window[d];
        if (e && e.wType == "Form" && d !== b.id) {
          e.isfromBrowserBack = true;
          $KW.Form.show(e)
        } else {
          location.hash = kony.events.browserback.HASH_PREFIX + b.id
        }
      }
    },
    updateURLWithLocation: function(c) {
      if (c) {
        var b = kony.bm.getFormId(kony.events.browserback.currentHash);
        if (b !== c) {
          location.hash = kony.events.browserback.currentHash = this.HASH_PREFIX + c
        }
        if (!$KG.__previousForm && kony.appinit.isIE7) {
          var d = document.createElement("IFRAME");
          d.style.display = "none";
          d.setAttribute("src", "javascript:0");
          document.body.parentNode.appendChild(d);
          kony.events.hiddenIFrame = d.contentWindow;
          var a = window.setInterval(function() {
            if (d.contentWindow.document.readyState == "complete") {
              kony.events.browserback.setHistory();
              window.clearInterval(a)
            }
          }, 100)
        } else {
          if (kony.appinit.isIE7) {
            this.setHistory()
          }
        }
      }
    },
    setHistory: function() {
      if (kony.events.hiddenIFrame.location.hash != location.hash) {
        kony.events.hiddenIFrame.document.open();
        kony.events.hiddenIFrame.document.close();
        kony.events.hiddenIFrame.location.hash = location.hash
      }
    }
  }
};
window.onload = function() {
  setTimeout(function() {
    window.scrollTo(0, 1)
  }, 100)
};
kony.system.activity = {
  activityCounter: 0,
  increment: function() {
    this.activityCounter++
  },
  decrement: function() {
    if (this.activityCounter != 0) {
      this.activityCounter--
    }
  },
  hasActivity: function() {
    if (this.activityCounter > 0) {
      return true
    } else {
      return false
    }
  }
};
kony.system.timers = {
  timerActions: new Array(),
  TimerAction: function(a, b) {
    this.actionName = a;
    this.frequency = b;
    this.timer = null;
    this.elapsedTimeSinceLastCall = 0
  },
  registerTimerAction: function(a) {
    if (this.timerActions.containsTimerAction(a) === false) {
      this.timerActions.push(a)
    }
  },
  executeTimerActions: function() {
    if (this.timerActions.length > 0) {
      for (var b = 0; b < this.timerActions.length; b++) {
        var a = this.timerActions[b];
        a.timer = setInterval(a.actionName, a.frequency)
      }
    }
  },
  removeTimerAction: function(b) {
    var c = new Array();
    if (this.timerActions.length > 0) {
      for (var a = 0; a < this.timerActions.length; a++) {
        if (this.timerActions[a].actionName !== b.actionName) {
          c.push(this.timerActions[a])
        }
      }
      this.timerActions = c
    }
  },
  clearTimerAction: function(b) {
    if (this.timerActions.length > 0) {
      for (var a = 0; a < this.timerActions.length; a++) {
        b = this.timerActions[a];
        clearTimeout(b.timer)
      }
    }
  }
};
$KI.HoverInit = function(a) {
  var b = this.node = $KU.getNodeByModel(a);
  if (b) {
    b.onmouseenter = b.onmousemove = b.onmouseout = this.eventListener.bind(this)
  }
};
$KI.HoverInit.prototype = {
  eventListener: function(a) {
    $KI.HoverEvent.executeHoverEvent(a, this.node)
  }
};
$KI.HoverEvent = {
  mouseOut: function(c, b) {
    if (c == b) {
      return false
    }
    var a = b;
    while (a) {
      a = a.parentNode;
      if (a == c) {
        return false
      }
    }
    return true
  },
  mouseIn: function(b, c, a) {
    if (b.contains(c)) {
      return false
    } else {
      return true
    }
  },
  executeHoverEvent: function(o, m) {
    var o = o || window.event;
    var u = o.currentTarget || m;
    if (!u) {
      return
    }
    var h = $KU.getModelByNode(u),
      l = u.getAttribute("kcontainerID");
    if (!h) {
      return
    }
    var v = (o.toElement) ? o.toElement : o.toElement;
    var t = (o.fromElement) ? o.fromElement : o.fromElement;
    if (o.type == "mousemove" || (o.type == "mouseenter" && $KI.HoverEvent.mouseIn(u, t, v)) || (o.type == "mouseout" && $KI.HoverEvent.mouseOut(u, v))) {
      var b = {};
      b.event = o.type;
      if (o.type === "mouseenter") {
        b.eventType = 0
      } else {
        if (o.type === "mousemove") {
          b.eventType = 1
        } else {
          if (o.type === "mouseout") {
            b.eventType = 2
          }
        }
      }
      b.pageX = o.pageX || o.clientX;
      b.pageY = o.pageY || o.clientY;
      b.screenX = o.clientX || null;
      b.screenY = o.clientY || null;
      if (l) {
        var s = $KU.getContainerForm(u);
        var w = $KU.getModelByNode(document.getElementById(s + "_" + l));
        var k = $KU.returnEventReference(h.onhover);
        if (w.wType == "DataGrid") {
          var r = $KU.getParentByAttribute(u, "colindex");
          var d = $KU.getParentByAttribute(u, "index");
          if (d && d.getAttribute("index")) {
            if (parseInt(d.getAttribute("index")) == 0) {
              b.rowIndex = -1
            } else {
              b.rowIndex = parseInt(r.getAttribute("colindex").split(",")[0])
            }
            b.columnIndex = parseInt(r.getAttribute("colindex").split(",")[1])
          }
          var x = w.columnids[b.columnIndex];
          var f = b.rowIndex == -1 ? w.columnHeadersConfig[b.columnIndex] : w.data[b.rowIndex][x];
          var a = b.rowIndex == -1 ? f.columnheadertemplate.data : (w.widgetdatamap ? f[w.widgetdatamap[h.id]] : f[h.id]);
          k = a ? (a.onHover || a.onhover) : k
        } else {
          if (w.wType == "Segment") {
            if (w.viewtype == "pageview") {
              var q = $KU.getParentByAttribute(u, "index");
              b.sectionIndex = 0;
              b.rowIndex = q.getAttribute("index")
            } else {
              var q = $KU.getParentByTagName(u, "li");
              if (q.getAttribute("secindex")) {
                b.sectionIndex = q.getAttribute("secindex") ? parseInt(q.getAttribute("secindex").split(",")[0]) : "";
                b.rowIndex = q.getAttribute("secindex") ? parseInt(q.getAttribute("secindex").split(",")[1]) : ""
              } else {
                if (q.getAttribute("index")) {
                  b.sectionIndex = 0;
                  b.rowIndex = q.getAttribute("index") ? parseInt(q.getAttribute("index").split(",")[0]) : ""
                }
              }
              if ((w.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) || (w.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR)) {
                b.selectionState = false;
                var e = w.selectedIndices;
                if (e) {
                  for (var p = 0; p < e.length; p++) {
                    if (b.sectionIndex == e[p][0]) {
                      var g = e[p][1];
                      for (var n = 0; n < g.length; n++) {
                        if (b.rowIndex == g[n]) {
                          b.selectionState = true
                        }
                      }
                    }
                  }
                }
              }
            }
            var c = w.hasSections ? (b.rowIndex == -1 ? w.data[b.sectionIndex][IndexJL + 0] : w.data[b.sectionIndex][IndexJL + 1][b.rowIndex]) : w.data[b.rowIndex];
            var a = w.widgetdatamap ? c[w.widgetdatamap[h.id]] : c[h.id];
            k = a ? (a.onHover || a.onhover) : k
          }
        }
        k && k.call(h, h, b)
      } else {
        if (h.onhover) {
          h.onhover(h, b)
        }
      }
    }
  }
};
$KI.setappevents = function(o) {
  if ($KG.appmode == constants.APPLICATION_MODE_HYBRID) {
    var t;
    if (IndexJL) {
      t = window.appinit
    } else {
      t = window.appInit
    }
    t && t();
    return
  }
  $KG.__konyappevents = o;
  var q = o.preappinit || null;
  var e = o.init || null;
  var s = o.postappinit || null;
  var g = o.appservice || null;
  var a = o.showstartupform || null;
  var h = o.deeplink || null;
  var l = {};
  var c = null;
  var p = {};
  p.launchparams = {};
  var m;
  if (window.location.hash) {
    var r = kony.bm.getFormId(window.location.hash);
    if (r) {
      l.formID = r;
      var u = kony.bm.getBMState(r);
      if (u) {
        for (var n in u) {
          l[n] = u[n]
        }
      }
    }
  }
  p.launchmode = $KG.__launchmode;
  if ($KG.kdeepobj) {
    p.launchparams = $KG.kdeepobj
  }
  for (var d in l) {
    p.launchparams[d] = l[d]
  }
  q && q(p);
  e = $KU.returnEventReference(e);
  e && e(l);
  l.isRefresh = false;
  l.isNewSPASession = (kony.appinit.isNewSession == "true") ? true : false;
  if (window.location.hash) {
    var f = window[window.location.hash.substring(2)];
    if (f && !l.isNewSPASession) {
      l.isRefresh = true;
      l.refreshForm = f
    }
  }
  for (var d in l) {
    p.launchparams[d] = l[d]
  }
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    for (var j in $KG.allforms) {
      var b = $KG.allforms[j];
      if (b.addWidgets && !b.addWidgetsdone) {
        b.ownchildrenref = [];
        b.children = [];
        b.addWidgets();
        b.addWidgetsdone = true
      }
    }
  }
  if (s) {
    c = s(p)
  }
  if (h || g) {
    if (g) {
      $KG.__appservice = g;
      c = g(p)
    } else {
      if (h) {
        c = h($KG.kdeepobj)
      }
    }
  }
  if ((c == null) || (c.length == 0)) {
    a && a(p)
  } else {
    if (typeof c == "string") {
      m = $KG.allforms[c]
    } else {
      m = c
    }
    if (IndexJL == 1) {
      m && $KW.Form.handleshow(m)
    } else {
      m && m.show()
    }
  }
  document.body.setAttribute("aria-busy", "false")
};
$KI.window = {
  openURL: function(d, e, c) {
    $KW.unLoadWidget();
    if (e) {
      if (e.innewwindow == true) {
        var a = "_blank";
        var b = "";
        b = (e.width ? "width =" + e.width + "px," : "") + (e.height ? "height=" + e.height + "px," : "");
        if (!e.menubar && typeof e.menubar !== "undefined") {
          b = b + "menubar = no, "
        }
        if (!e.statusbar && typeof e.statusbar !== "undefined") {
          b = b + "statusbar = no, "
        }
        if (!e.toolbar && typeof e.toolbar !== "undefined") {
          b = b + "toolbar = no, "
        }
        if (!e.titlebar && typeof e.titlebar !== "undefined") {
          b = b + "titlebar = no"
        }
        window.open(d, a, b)
      } else {
        window.open(d)
      }
    } else {
      window.open(d)
    }
  },
  alert: function(c, e, b) {
    if (c === null) {
      return
    }
    var f = c;
    var a = e || null;
    var g = b || null;
    if (c.message || c.alerttype || c.alertType) {
      g = c.alerttype || c.alertType;
      f = c.message;
      a = c.alerthandler || c.alertHandler || null
    }
    if (g === constants.ALERT_TYPE_INFO || g === constants.ALERT_TYPE_ERROR || !g) {
      alert(f);
      a && a()
    } else {
      if (g === constants.ALERT_TYPE_CONFIRMATION) {
        var d = confirm(f);
        a && a(d)
      }
    }
  },
  openMediaURL: function() {},
  showLoadingScreen: function() {
    var j = arguments[0];
    var h = arguments[1] || "";
    var f = arguments[2] || "fullscreen";
    var k = (arguments[3] === false) ? false : true;
    var c = (arguments[4] === false) ? false : true;
    h = h ? "<label style='padding-left:20px; font-size: 16px; text-align:center;width:100%;display:inline-block'>" + h + "</label>" : "";
    var e = "<div id ='__wrapperDiv' style='top:50%;width:100%;position:fixed;'>";
    var d = document.getElementById("__loadingScreenDiv");
    var g = d || document.createElement("div");
    g.id = "__loadingScreenDiv";
    g.setAttribute("style", "");
    g.style.backgroundPosition = "center";
    g.style.width = "100%";
    g.style.position = "fixed";
    if (!j && c) {
      g.style.backgroundImage = "url('" + $KU.getImageURL("loading.gif") + "')";
      g.style.backgroundRepeat = "no-repeat"
    }
    g.innerHTML = e + h + "</div>";
    g.style.display = "block";
    var b = document.getElementById("__MainContainer");
    if (b) {
      b.appendChild(g)
    } else {
      return
    }
    var a = g.childNodes[0];
    if (a.childNodes[0]) {
      a.style.marginTop = -(a.childNodes[0].offsetHeight / 2) + "px"
    }
    if (f == "fullscreen" || k) {
      g.className = j || "";
      g.style.top = 0;
      g.style.left = 0;
      g.style.bottom = 0;
      g.style.height = "100%"
    } else {
      a.className = j || "";
      g.style.top = "50%"
    }
    g.tabIndex = -1;
    g.focus();
    kony.events.addEventListener(document, "keydown", $KI.window.preventBGFocus)
  },
  preventBGFocus: function(b) {
    if (!b) {
      b = window.event
    }
    var a = document.getElementById("__loadingScreenDiv");
    if (a && a.style.display != "none") {
      kony.events.preventDefault(b)
    }
  },
  dismissLoadingScreen: function() {
    var a = document.getElementById("__loadingScreenDiv");
    if (a) {
      a.style.display = "none"
    }
    kony.events.removeEventListener(document, "keydown", $KI.window.preventBGFocus)
  }
};
$KI.exit = function() {
  if ($KU.isIDevice || !$KU.isMob) {
    window.open("about:blank", "_self", "");
    window.close()
  }
};
$KI.appreset = function() {
  console.warn("appreset not supported in SPA")
};
$KI.assert = function(b, a) {
  if (null === args1 || false === args2) {
    if (arguments.length > 1) {
      if (typeof(args2) === "string") {
        throw new Error(args2)
      } else {
        throw new Error("Invalid argument to assert")
      }
    } else {
      throw new Error("Assertion failed")
    }
  } else {
    return b
  }
};
$KI.type = function(b) {
  var a;
  if (typeof(b) == "undefined" || b + "" == "null") {
    a = IndexJL ? "nil" : "null"
  } else {
    if (typeof(b) === "boolean") {
      a = "boolean"
    } else {
      if (typeof(b) === "number") {
        a = "number"
      } else {
        if (typeof(b) === "string") {
          a = "string"
        } else {
          if (typeof(b) === "function") {
            a = "function"
          } else {
            a = IndexJL ? "table" : "object"
          }
        }
      }
    }
  }
  return a
};
$KI.converttobase64 = function(a) {
  return $KU.getBase64(a)
};
$KI.converttorawbytes = function() {
  console.warn("converttorawbytes api not supported in SPA")
};
$KI.setappheaders = function(a) {
  kony.app.headers = {};
  if (IndexJL) {
    a.splice(0, 1)
  }
  for (i = 0; i < a.length; i++) {
    kony.app.headers[a[i].id] = a[i];
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(a[i], a[i].ownchildrenref)
  }
};
$KI.setappfooters = function(a) {
  kony.app.footers = {};
  if (IndexJL) {
    a.splice(0, 1)
  }
  for (i = 0; i < a.length; i++) {
    kony.app.footers[a[i].id] = a[i];
    _konyConstNS.Form2.prototype.createFormLevelHierarchy.call(a[i], a[i].ownchildrenref)
  }
};
$KI.setapplicationcallbacks = function() {
  console.warn("setapplicationcallbacks API is not supported on SPA")
};
$KI.setapplicationbehaviors = function(b) {
  if (!$KG.appbehaviors) {
    $KG.appbehaviors = b
  } else {
    for (var a in b) {
      $KG.appbehaviors[a] = b[a]
    }
  }
};
$KI.setupWidgetDataRecording = function() {
  $KG.appbehaviors.recording = true
};

function tobeimplemented(a) {
  console.warn(a + "  API to be implemented Yet")
}
KonyError = function(a, b, c) {
  this.errorCode = this.errorcode = a;
  this.name = b;
  this.message = c
};
KonyError.prototype = new Error();
KonyError.prototype.constructor = KonyError;
kony.getError = function(a) {
  return a
};
kony.bm = {
  FORM_PREFIX: "#_",
  GSTATE_PREFIX: "/",
  __global_state__: {},
  __check_args__: function(a, c) {
    if (a.length != c) {
      throw new Error("Invalid number of arguments. Expected: " + c + ", Given: " + a.length)
    }
    for (var b in a) {
      if (typeof(a[b]) === "undefined") {
        throw new Error("Invalid arg[" + b + "] in " + a)
      }
    }
  },
  __initialized__: false,
  __init__: function() {
    var b = window.location.href;
    if (b.indexOf("http") == 0) {
      b = kony.bm.__get_hash__(b)
    }
    var a = kony.bm.__get_raw_state__(b);
    if (a) {
      kony.bm.__global_state__ = JSON.parse(decodeURI(a))
    }
    kony.bm.__initialized__ = true
  },
  __update_hash__: function() {
    var a = JSON.stringify(kony.bm.__global_state__);
    var b = kony.bm.getFormId(window.location.hash);
    window.location.hash = kony.bm.FORM_PREFIX + b + kony.bm.GSTATE_PREFIX + encodeURI(a)
  },
  __get_hash__: function(a) {
    return a.substr(a.indexOf(kony.bm.FORM_PREFIX))
  },
  __get_raw_state__: function(c) {
    var b = c;
    var d = b.indexOf(kony.bm.GSTATE_PREFIX);
    var a = "";
    if (d > 0) {
      a = b.substr(b.indexOf(kony.bm.GSTATE_PREFIX) + kony.bm.GSTATE_PREFIX.length)
    }
    return a
  },
  getFormId: function(b) {
    var a = b;
    if (!a) {
      a = location.hash
    }
    var c = a.substr(a.indexOf(kony.bm.FORM_PREFIX) + kony.bm.FORM_PREFIX.length);
    var e = c.indexOf(kony.bm.GSTATE_PREFIX);
    var d;
    if (e < 0) {
      d = c
    } else {
      d = c.substr(0, e)
    }
    return d
  },
  setBMState: function(b, a) {
    kony.bm.__check_args__(arguments, 2);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    kony.bm.__global_state__[b] = a;
    kony.bm.__update_hash__()
  },
  resetBMState: function(a) {
    kony.bm.__check_args__(arguments, 1);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    delete kony.bm.__global_state__[a];
    kony.bm.__update_hash__()
  },
  addBMState: function(d, a, c) {
    kony.bm.__check_args__(arguments, 3);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    var b = kony.bm.getBMState(d);
    if (!b) {
      b = {};
      kony.bm.setBMState(d, b)
    }
    b[a] = c;
    kony.bm.__update_hash__()
  },
  removeBMState: function(c, a) {
    kony.bm.__check_args__(arguments, 2);
    if (!kony.bm.__initialized__) {
      kony.bm.__init__()
    }
    var b = kony.bm.getBMState(c);
    if (b) {
      delete b[a];
      kony.bm.__update_hash__()
    }
  },
  getBMState: function(a) {
    kony.bm.__check_args__(arguments, 1);
    if (!kony.bm.__initialized) {
      kony.bm.__init__()
    }
    return kony.bm.__global_state__[a]
  }
};
$KI.phone = {
  dial: function(b) {
    $KW.unLoadWidget();
    var c;
    var a = $KU.getPlatform();
    if (a.name == "iphone" && a.version >= "5" && a.version < "8") {
      c = "tel://" + b
    } else {
      c = "tel:" + b
    }
    window.location.href = c
  },
  myLocation: function() {
    console.warn("DEPRECATED API. Instead use geolocation.")
  },
  openmediagallery: function(f, c, d) {
    if (!window.File || !window.FileReader || !window.FileList) {
      kony.print("openMediaGallery error:: 2103, Cannot open media gallery. Not supported.");
      return
    }
    var b = document.createElement("input");
    b.type = "file";
    b.setAttribute("style", "display:none;");
    b.setAttribute("id", "openmediagallery");
    if (c && c.mimetype) {
      b.setAttribute("accept", c.mimetype)
    }
    var e = document.getElementsByTagName("form")[0];
    e.appendChild(b);
    kony.events.addEventListener(b, "change", a);
    b.click();

    function a() {
      kony.events.removeEventListener(b, "change", a);
      e.removeChild(b);
      if (f && f instanceof Function) {
        var g = new FileReader();
        g.onload = function(i) {
          var l = new Uint8Array(i.target.result);
          var k = 32768,
            j = 0,
            h = "",
            m;
          while (j < l.length) {
            m = l.subarray(j, Math.min(j + k, l.length));
            h += String.fromCharCode.apply(null, m);
            j += k
          }
          f(h)
        };
        g.onerror = function(h) {
          if (h.target.error instanceof FileError) {
            switch (h.target.error.code) {
              case FileError.NOT_FOUND_ERR:
                kony.print("openMediaGallery error:: The file resource couldn't be found at the time the read was processed.");
                break;
              case FileError.NOT_READABLE_ERR:
                kony.print("openMediaGallery error:: 2101, The resource couldn't be read. Insufficient Permissions.");
                break;
              case FileError.ENCODING_ERR:
                kony.print("openMediaGallery error:: The resource couldn't be encoded.");
                break;
              case FileError.SECURITY_ERR:
              default:
                kony.print("openMediaGallery error:: The file resource is unsafe/changed/other unspecified security error.")
            }
          } else {
            kony.print("openMediaGallery error:: " + h.target.error.name + ", " + h.target.error.message)
          }
        };
        g.readAsArrayBuffer(this.files[0])
      } else {
        kony.print("openMediaGallery error:: callback function not provided.")
      }
    }
  }
};
$KI.timer = {
  timerinfo: {},
  callbackclosure: function(b) {
    var a = b;
    return function() {
      var c = $KI.timer.timerinfo[a]["cb"];
      typeof c == "function" && c()
    }
  },
  schedule: function(h, b, c, e) {
    var a = $KI.timer.timerinfo;
    if (h && !a[h]) {
      a[h] = {};
      a[h]["cb"] = b;
      a[h]["repeat"] = e;
      var g = $KI.timer.callbackclosure(h);
      var f = c * 1000;
      var d = (e === true) ? "setInterval" : "setTimeout";
      timerid = window[d](g, f);
      a[h]["timerid"] = timerid
    } else {
      console.error("timerId is mandatory or duplicate timer id")
    }
  },
  cancel: function(d) {
    var a = $KI.timer.timerinfo;
    if (a[d]) {
      var c = a[d].timerid;
      var b = (a[d]["repeat"] === true) ? "clearInterval" : "clearTimeout";
      window[b](c);
      a[d] = null
    } else {
      console.error("timerId is mandatory");
      return null
    }
  },
  setcallback: function(c, b) {
    var a = $KI.timer.timerinfo;
    if (a[c]) {
      a[c].cb = b
    }
  }
};
$KI.appevents = (function() {
  var a = {
    id: null,
    value: 0,
    cb: null,
    enabled: false,
    expired: false,
    lastInteraction: 0
  };
  return {
    timercb: function() {
      var c = $KW.Form.getCurrentForm();
      var b = null;
      a.expired = true;
      a.enabled = false;
      if (c.enabledforidletimeout) {
        if (a.cb) {
          b = a.cb;
          a.cb = null;
          b(c)
        }
      }
    },
    registerforidletimeout: function(c, b) {
      if (!a.enabled) {
        a.value = c * 60 * 1000;
        a.id = setTimeout($KI.appevents.timercb, a.value);
        a.lastInteraction = new Date().getTime();
        a.enabled = true;
        a.expired = false;
        a.cb = b;
        $KG.__idletimeout = a
      }
    },
    unregisterforidletimeout: function() {
      clearTimeout(a.id);
      a.enabled = false;
      $KG.__idletimeout = ""
    },
    resettimer: function() {
      var b = new Date().getTime();
      if ((b - a.lastInteraction) >= a.value) {
        $KI.appevents.timercb();
        return
      } else {
        clearTimeout(a.id);
        a.id = setTimeout($KI.appevents.timercb, a.value);
        a.lastInteraction = b
      }
    }
  }
})();
$KI.geolocation = {
  getcurrentposition: function(a, c, b) {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(a, c, b)
    }
  },
  watchposition: function(a, c, b) {
    if (navigator.geolocation) {
      return (navigator.geolocation.watchPosition(a, c, b))
    }
  },
  clearwatch: function(a) {
    if (navigator.geolocation) {
      navigator.geolocation.clearWatch(a)
    }
  }
};

$KI.os.time = function() {
  var a = (new Date()).toTimeString();
  return a.slice(0, a.indexOf(" "))
};
$KI.os.diffdatetime = function(g, f) {
  if (typeof(g) !== "string" || typeof(f) !== "string") {
    throw new Error("Invalid argument(s) to os.diffdatetime")
  }
  var e = g.split(":");
  e[2] = e[2] - 0;
  var d = f.split(":");
  d[2] = d[2] - 0;
  var b = 86400;
  var c = e[0] * 3600 + e[1] * 60 + e[2];
  var a = d[0] * 3600 + d[1] * 60 + d[2];
  return (c > b || a > b) ? null : c - a
};
$KI.os.date = function() {
  var a;
  var b = new Date();
  if (0 === arguments.length) {
    var h = b.toTimeString();
    a = $KI.os.padZero(b.getMonth() + 1) + "/" + $KI.os.padZero(b.getDate()) + "/" + $KI.os.padZero(b.getFullYear() % 100) + " " + h.slice(0, h.indexOf(" "));
    return a
  } else {
    if (typeof(arguments[0]) == "string") {
      if (arguments[0].toLowerCase().indexOf("dd") != -1) {
        return $KI.os.formatDate(arguments[0], b)
      } else {
        var g = arguments[0].charAt(0) === "!";
        var d = g ? 1 : 0;
        if ("*" === arguments[0].charAt(d) && "t" === arguments[0].charAt(d + 1)) {
          var c = g ? b.getUTCDate() : b.getDate();
          var f = (g ? b.getUTCMonth() : b.getMonth()) + 1;
          var e = g ? b.getUTCFullYear() : b.getFullYear();
          a = new Object();
          a.year = e;
          a.month = f;
          a.day = c;
          a.hour = g ? b.getUTCHours() : b.getHours();
          a.min = g ? b.getUTCMinutes() : b.getMinutes();
          a.sec = g ? b.getUTCSeconds() : b.getSeconds();
          a.wday = g ? b.getUTCDay() : b.getDay() + 1;
          a.yday = $KU.getDayOfYear(c, f, e);
          a.isdst = g ? false : $KI.os.checkForDst();
          return a
        } else {
          return null
        }
      }
    } else {
      return null
    }
  }
};
$KI.os.tocurrency = function(a) {
  a -= 0;
  if (isNaN(a)) {
    throw new Error("Invalid argument to os.tocurrency")
  }
  if (a < 0) {
    a *= -1
  }
  var d = a.toFixed(3);
  d = d.substr(0, d.length - 1);
  var c = "";
  for (var b = 0; b < d.length - 4; b++) {
    c += d.charAt(b);
    if ((d.length - b - 1) % 3 === 0) {
      c += ","
    }
  }
  for (; b < d.length; b++) {
    c += d.charAt(b)
  }
  return "$" + c
};
$KI.os.tonumber = function(a) {
  if (arguments.length != 1) {
    throw new Error("Invalid argument to os.tonumber")
  }
  if (typeof(a) === "number") {
    return a
  } else {
    if (typeof(a) === "string") {
      var c = a.replace(/^\s*/, "").replace(/\s*$/, "");
      if (c === "") {
        return null
      } else {
        var b = c - 0;
        return (isNaN(b) ? null : b)
      }
    } else {
      return null
    }
  }
};
$KI.os.freememory = function() {
  return 100 * 1024 * 1024
};
$KI.os.comparedates = function(c, a, f) {
  if (c == null || a == null || f == null || !$KU.isValidDate(c, f) || !$KU.isValidDate(a, f)) {
    return null
  }
  var e = $KU.getDate(c, f);
  var b = $KU.getDate(a, f);
  var d = 24 * 60 * 60 * 1000;
  return parseInt((e.getTime() - b.getTime()) / d)
};
$KI.os.addtodate = function(a, d, b, e) {
  if (a == null || d == null || b == null || e == null) {
    return null
  }
  var k = a;
  var f = d.split(" ")[0];
  var m = b;
  var j = e;
  var i = k.split(" ");
  var l = i[0].split("/");
  var g = i[1];
  if (!$KU.isValidDate(i[0], f)) {
    return null
  }
  if (g) {
    var n = g.split(":");
    var c = 86400;
    var h = n[0] * 3600 + n[1] * 60 + (n[2] - 0);
    if (h > c) {
      return null
    }
  }
  var o = $KU.getDate(k, f);
  if (o) {
    switch (m) {
      case "years":
        o.setFullYear(o.getFullYear() + j);
        break;
      case "months":
        o.setMonth(o.getMonth() + j);
        break;
      case "days":
        o.setDate(o.getDate() + j);
        break;
      case "hours":
        o.setHours(o.getHours() + j);
        break;
      case "minutes":
        o.setMinutes(o.getMinutes() + j);
        break;
      default:
        break
    }
    if ($KI.os.isleapyear([a, f]) && o.getMonth() >= 1 && (m == "years" || (m == "months" && (j == -12 || j == 12)))) {
      o.setDate(o.getDate() - 1)
    }
    return $KI.os.formatDate(f, o) + (g ? " " + o.toTimeString().split(" ")[0] : "")
  }
  return null
};
$KI.os.isleapyear = function(d, e) {
  var c;
  var a = new Date();
  c = a.getFullYear();
  if (typeof(d) == "string" && typeof(e) == "string") {
    if (!$KU.isValidDate(d, e)) {
      return false
    }
    var b = d.split("/")[2];
    c = (b.length == 2) ? parseInt(a.getFullYear().toString().substr(0, 2) + b) : parseInt(b)
  }
  if ((c % 400 == 0) || ((c % 4 == 0) && (c % 100 != 0))) {
    return true
  } else {
    return false
  }
};
$KI.os.formatdate = function(z, s, l) {
  var j;
  if (z == null || s == null || l == null) {
    return null
  } else {
    if (typeof(z) === "string" && typeof(s) === "string" && typeof(l) === "string") {
      var e = z;
      var d = s;
      var n = l;
      var a = d.indexOf("dd");
      var v = d.indexOf("mm");
      var w = (d.indexOf("yyyy") != -1) ? d.indexOf("yyyy") : d.indexOf("yy");
      if ((d == "dd/mm/yyyy" && !$KU.isValidDate(e, d)) || a == -1 || v == -1 || w == -1 || d.indexOf("ddd") != -1 || d.indexOf("mmm") != -1) {
        return null
      }
      var i = d.charAt(a - 1);
      var u = d.charAt(a + 2);
      u = (u == "(") ? "" : u;
      var y = d.charAt(v - 1);
      var g = d.charAt(v + 2);
      var b = d.charAt(w - 1);
      var o = d.charAt(w + 4);
      var t = (i == "") ? e.indexOf(i, a - 1) : e.indexOf(i, a - 2) + 1;
      var k = (y == "") ? e.indexOf(y, v - 1) : e.indexOf(y, v - 2) + 1;
      var f = (b == "") ? e.indexOf(b, w - 1) : ((e.indexOf(b, w - 2) != -1) ? e.indexOf(b, w - 2) + 1 : e.indexOf(b, w - 4) + 1);
      var x = (u != "") ? e.indexOf(u, a) : e.indexOf(u, a + 2);
      var q = (g != "") ? e.indexOf(g, v) : e.indexOf(g, v + 2);
      var h = (o != "") ? e.indexOf(o, w) : e.indexOf(o, w + 4);
      var r = e.substring(t, x);
      var m = e.substring(k, q);
      var p = e.substring(f, h);
      if ((p.length == 2 && n.indexOf("yyyy") != -1)) {
        var c = new Date().getFullYear().toString().substr(0, 2) + p
      }
      n = n.replace(/dd/, $KI.os.padZero(parseInt(r, 10)));
      n = n.replace(/mm/, $KI.os.padZero(parseInt(m, 10)));
      n = n.replace(/(yyyy|yy)/, c ? c : ((n.indexOf("yyyy") == -1 && p.length == 4) ? p.substr(2, 2) : p));
      return n
    }
  }
  return null
};
$KI.os.isvaliddate = function(a, b) {
  return (arguments.length != 2 || a == null || b == null) ? false : $KU.isValidDate(a, b)
};
$KI.os.checkForDst = function() {
  var h = new Date();
  var a = new Date(h.getFullYear(), 0, 1, 0, 0, 0, 0);
  var g = a.toGMTString();
  var i = new Date(g.substring(0, g.lastIndexOf(" ") - 1));
  var d = (a - i) / (1000 * 60 * 60);
  var f = new Date(h.getFullYear(), 6, 1, 0, 0, 0, 0);
  g = f.toGMTString();
  var e = new Date(g.substring(0, g.lastIndexOf(" ") - 1));
  var c = (f - e) / (1000 * 60 * 60);
  var b;
  if (d == c) {
    return false
  } else {
    return true
  }
};
$KI.os.datecomponents = function(d, h) {
  var b;
  var g;
  if (arguments.length == 0) {
    g = new Date()
  } else {
    if (d != null && h != null) {
      if (!$KU.isValidDate(d, h)) {
        return null
      }
      g = $KU.getDate(d, h);
      var a = h.split("/")[2]
    }
  }
  if (g) {
    var c = g.getDate();
    var f = g.getMonth() + 1;
    var e = (a && a.length == 2) ? parseInt(g.getFullYear().toString().substr(2, 2)) : g.getFullYear();
    b = new Object();
    b.year = e;
    b.month = f;
    b.day = c;
    b.hour = g.getHours();
    b.min = g.getMinutes();
    b.sec = g.getSeconds();
    b.wday = g.getDay() + 1;
    b.yday = $KU.getDayOfYear(c, f, e);
    b.isdst = $KI.os.checkForDst();
    return b
  } else {
    return null
  }
};
$KI.os.padZero = function(a) {
  return a < 10 ? ("0" + a) : a
};
$KI.os.formatDate = function(b, a) {
  b = b.toLowerCase();
  b = b.replace(/dd/, $KI.os.padZero(a.getDate()));
  b = b.replace(/mm/, $KI.os.padZero(a.getMonth() + 1));
  return b.replace(/(yyyy|yy)/, b.indexOf("yyyy") == -1 ? a.getFullYear().toString().substr(2, 2) : a.getFullYear())
};
$KI.os.getappcontext = function() {
  var b = {};
  var a = "standalone" in window.navigator && window.navigator.standalone ? 1 : 0;
  b.launchmode = a;
  return b
};
$KI.os.hasgpssupport = function() {
  return "navigator" in window && "geolocation" in navigator
};
$KI.os.hascamerasupport = function() {
  return false
};
$KI.os.hastouchsupport = function() {
  return false
};
$KI.os.hasorientationsupport = function() {
  return false
};
$KI.os.hasaccelerometersupport = function() {
  return false
};
$KI.os.httpheaders = function() {
  if ($KG.httpheaders) {
    return JSON.stringify($KG.httpheaders)
  }
};
$KI.os.getdevicecurrentorientation = function() {
  var a = $KU.detectOrientation();
  return (a == "portrait") ? constants.DEVICE_ORIENTATION_PORTRAIT : constants.DEVICE_ORIENTATION_LANDSCAPE
};
$KI.os.setapplicationscrollmode = function(b) {
  if (!b) {
    return
  }
  var d = $KU.getPlatform();
  var o = d.name.toLowerCase();
  var e = d.version;
  if (o == "blackberryNTH" || (o == "windowsphone" && $KU.isIE9)) {
    return
  }
  var a = b.customscroll;
  var n = b.mixedscroll;
  var g = b.nativescroll;
  var f;
  if (n) {
    var m = n.platforms;
    if (m) {
      for (var l = IndexJL; l < m.length; l++) {
        var d = m[l];
        if (o == d.name.toLowerCase()) {
          var k = d.useragents;
          if (k) {
            for (var h = IndexJL; h < k.length; h++) {
              if (navigator.userAgent.toLowerCase().indexOf(k[h].toLowerCase()) != -1) {
                $KG.useMixedScroll = true;
                f = true;
                break
              }
            }
            if (f) {
              break
            }
          }
          var c = d.versions;
          if ((!k && !c) || c[IndexJL] == -1) {
            $KG.useMixedScroll = true;
            break
          }
          for (var h = IndexJL; h < c.length; h++) {
            if (e == c[h]) {
              $KG.useMixedScroll = true;
              break
            }
          }
        }
      }
    }
  }
  if (g && !f) {
    var m = g.platforms;
    if (m) {
      for (var l = IndexJL; l < m.length; l++) {
        var d = m[l];
        if (o == d.name.toLowerCase()) {
          var k = d.useragents;
          if (k) {
            for (var h = IndexJL; h < k.length; h++) {
              if (navigator.userAgent.toLowerCase().indexOf(k[h].toLowerCase()) != -1) {
                $KG.useNativeScroll = true;
                $KG.useMixedScroll = false;
                f = true;
                break
              }
            }
            if (f) {
              break
            }
          }
          var c = d.versions;
          if ((!k && !c) || c[IndexJL] == -1) {
            if (!$KG.useMixedScroll) {
              $KG.useNativeScroll = true
            }
            break
          }
          for (var h = IndexJL; h < c.length; h++) {
            if (e == c[h]) {
              $KG.useNativeScroll = true;
              $KG.useMixedScroll = false;
              break
            }
          }
        }
      }
    }
  }
  if (!$KG.useMixedScroll && !$KG.useNativeScroll) {
    $KG.useCustomScroll = true
  }
};
$KI.os.print = function(a, f) {
  if (a && a.id && !(a.wType === "Form")) {
    var c = document.getElementById(a.id);
    if (a.wType && a.wType === "Popup") {
      c = document.getElementById(a.id + "_body")
    }
    if (!c) {
      c = $KU.getNodeByModel(a)
    }
    if (c) {
      var g;
      if (a.wType && a.wType === "Popup") {
        var h = document.getElementById(a.id + "_container");
        if (h && h.className) {
          c.className = h.className
        }
        g = c.style.height;
        c.style.height = "auto"
      }
      var d = c.outerHTML;
      if (g !== "undefined") {
        c.style.height = g
      }
      var j = window.open();
      if (j) {
        j.document.write("<!DOCTYPE html><html>");
        j.document.write("<head>");
        var b = document.styleSheets;
        for (var e = 0; e < b.length; e++) {
          if (b[e].href) {
            j.document.write("<link rel='stylesheet' href='");
            j.document.write(b[e].href);
            j.document.write("' type='text/css'></link>")
          }
        }
        if (kony.appinit.isSafari) {
          j.document.write("<style>table{table-layout: auto !important;} .ktable {table-layout: auto !important;} .kcell {display: table !important;}</style>")
        }
        j.document.write("</head>");
        if (kony.appinit.isSafari) {
          j.document.write("<body style='" + window.document.body.style.cssText + "' >")
        } else {
          j.document.write("<body>")
        }
        j.document.write(d);
        setTimeout(function() {
          j.document.write("</body>");
          j.document.write("</html>");
          j.document.close();
          j.focus();
          j.print()
        }, 1000);
        setTimeout(function() {
          j.close()
        }, 2000)
      } else {
        kony.print("Allow popup to open for this site.")
      }
    }
  } else {
    if (a && !(a.wType && a.wType === "Form")) {
      var j = window.open();
      if (j) {
        j.document.write(a);
        j.onload = new function() {
          j.document.close();
          j.focus();
          j.print()
        };
        if (f) {
          setTimeout(function() {
            j.close()
          }, 2000)
        }
      } else {
        kony.print("Allow popup to open for this site.")
      }
    } else {
      window.print()
    }
  }
};
$KI.os.addbookmark = function(b, f, e) {
  var b = b || window.location.href.split("#")[0];
  b = b.split("?")[0];
  if (e && e instanceof Object) {
    var a = "";
    for (var g in e) {
      a += escape(g) + "=" + escape(e[g]) + "&"
    }
    a && (a = a.substring(0, a.length - 1))
  }
  try {
    f = f || document.title;
    b += a ? ("?" + a) : "";
    if ((typeof window.sidebar == "object") && (typeof window.sidebar.addPanel == "function")) {
      window.sidebar.addPanel(f, b, "")
    } else {
      if (kony.appinit.isIE && typeof window.external == "object") {
        window.external.AddFavorite(b, f)
      } else {
        if (kony.appinit.isOpera) {
          var d = document.createElement("a");
          d.setAttribute("href", b);
          d.setAttribute("title", f);
          d.setAttribute("rel", "sidebar");
          d.click()
        }
      }
    }
  } catch (c) {
    console.log(c)
  }
};
$KIO.FileSystem = $KIO.fs = {
  callback: function() {},
  ieFileUploadObj: {},
  init: function() {
    if (!$KU.isAjaxUploadSupported) {
      var a = "<iframe id='konyiframeElem' name='konyiframeElem' src='about:blank' style='opacity:0;width:0px;height:0px;' ></iframe>";
      var b = document.createElement("div");
      b.innerHTML = a;
      document.body.appendChild(b)
    }
  },
  browse: function(h, j) {
    if (!h instanceof Object || !j instanceof Function) {
      return
    }
    this.callback = j;
    var i = "";
    if ($KU.isAjaxUploadSupported) {
      var b = document.getElementById("konyFileElem");
      if (!b) {
        i = "<form name='uploadForm'><input type='file' multiple id='konyFileElem' onchange='$KIO.fs.afterBrowse(arguments[0])' onclick='uploadForm.reset();' style='opacity:0;width:0px;height:0px;' /></form>";
        var a = document.createElement("div");
        a.innerHTML = i;
        document.body.appendChild(a);
        b = document.getElementById("konyFileElem")
      }
      if (h.selectMultipleFiles == false) {
        b.removeAttribute("multiple")
      } else {
        b.setAttribute("multiple", "multiple")
      }
      if (h.filter) {
        b.setAttribute("accept", h.filter.join(","))
      } else {
        b.removeAttribute("accept")
      }
      b.click()
    } else {
      var g = document.getElementById("konyiframeElem").contentWindow || document.getElementById("konyiframeElem").documentWindow;
      var e = g.document.getElementById("uploadForm");
      if (!e) {
        var a = document.createElement("div");
        a.innerHTML = '<form id="uploadForm" method="POST" action="" enctype="multipart/form-data" ></form>';
        if (g.document.body) {
          g.document.body.appendChild(a)
        }
        e = g.document.getElementById("uploadForm")
      }
      var d = new Date().getTime();
      var f = document.createElement("input");
      f.setAttribute("type", "file");
      f.setAttribute("name", "file_" + d);
      f.setAttribute("id", "file_" + d);
      f.setAttribute("onchange", "window.parent.$KIO.fs.afterBrowse(this)");
      f.setAttribute("onclick", "uploadForm.reset()");
      e.appendChild(f);
      var c = g.document.getElementsByTagName("input");
      c = c[c.length - 1];
      if (c) {
        c.click()
      }
    }
  },
  afterBrowse: function(d) {
    var b = [];
    if ($KU.isAjaxUploadSupported) {
      for (var c = 0, g; g = d.target.files[c]; ++c) {
        b.push(new $KIO.File(g))
      }
    } else {
      var h = d.value;
      var e = h.substring(h.lastIndexOf("\\") + 1);
      var a = h.substring(0, h.lastIndexOf("\\"));
      a = a.substring(a.lastIndexOf("\\") + 1);
      b.push(new $KIO.File({
        name: e,
        fullPath: h,
        parent: a,
        file: d
      }))
    }
    $KIO.fs.callback(d, b)
  },
  uploadFiles: function(m, n, e, j) {
    if (!m || !n || (n && n.length < 1)) {
      return
    }
    var d = [];
    for (var g = 0, k; k = n[g]; ++g) {
      d.push({
        file: k,
        status: null,
        uploadBytes: null
      })
    }
    if ($KU.isAjaxUploadSupported) {
      for (var l = 0; l < d.length; l++) {
        this.uploadFile(m, d, l, e, j)
      }
    } else {
      var c = document.getElementById("konyiframeElem");
      if ($KU.isIE) {
        c.attachEvent("onload", $KIO.fs.ieCallback);
        c.attachEvent("onerror", $KIO.fs.ieErrorCallback)
      } else {
        c.onload = $KIO.fs.ieCallback;
        c.onerror = $KIO.fs.ieErrorCallback
      }
      $KIO.fs.ieFileUploadObj.state = d;
      $KIO.fs.ieFileUploadObj.url = m;
      $KIO.fs.ieFileUploadObj.callback = e;
      var o = /^(http|https):\/\/?/;
      if (!o.test(m)) {
        $KIO.fs.ieErrorCallback();
        return
      }
      var b = document.getElementById("konyiframeElem");
      var h = b.contentWindow || b.documentWindow;
      var a = h.document.getElementById("uploadForm");
      a.action = m;
      a.submit()
    }
  },
  uploadFile: function(b, a, j, k, c) {
    try {
      var h = a[j].file;
      var g = new FormData();
      g.append(h.name, h.file);
      var m = /^(http|https):\/\/?/;
      if (!m.test(b)) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        k && k(b, a);
        return
      }
      var l = new XMLHttpRequest();
      l.open("POST", b, true);
      l.upload.onloadstart = function(f) {
        a[j].status = constants.FILE_UPLOAD_START_STATE;
        a[j].uploadBytes = 0;
        k && k(b, a)
      };
      l.upload.onprogress = function(f) {
        if (f.lengthComputable) {
          a[j].uploadBytes = f.loaded
        }
        a[j].status = constants.FILE_UPLOAD_PROGRESS_STATE;
        k && k(b, a)
      };
      l.upload.onerror = function(f) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        a[j].uploadBytes = 0;
        k && k(b, a)
      };
      l.upload.onabort = function(f) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        k && k(b, a)
      };
      l.onload = function(f) {
        if (this.status == 200) {
          a[j].status = constants.FILE_UPLOAD_COMPLETE_STATE;
          a[j].uploadBytes = a[j].file.size;
          k && k(b, a)
        }
      };
      l.onerror = function(f) {
        a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
        a[j].uploadBytes = 0;
        k && k(b, a)
      };
      var d = setTimeout(function() {
        l.abort()
      }, constants.UPLOAD_MAX_WAIT_TIME);
      l.onreadystatechange = function() {
        if (l.readyState != 4) {
          return
        }
        clearTimeout(d);
        if (l.status != 200) {
          a[j].status = constants.FILE_UPLOAD_ERROR_STATE;
          a[j].uploadBytes = 0;
          k && k(b, a)
        }
      };
      l.send(g)
    } catch (i) {
      console.log(i.message)
    }
  },
  ieCallback: function() {
    var c = $KIO.fs.ieFileUploadObj;
    try {
      var a = document.getElementById("konyiframeElem").contentWindow.document.body.innerHTML;
      if (a) {
        for (var b = 0; b < c.state.length; b++) {
          c.state[b].status = constants.FILE_UPLOAD_COMPLETE_STATE
        }
        c.callback && c.callback(c.url, c.state);
        console.log(a)
      }
    } catch (d) {
      console.log(d.message);
      for (var b = 0; b < c.state.length; b++) {
        c.state[b].status = constants.FILE_UPLOAD_ERROR_STATE
      }
      c.callback && c.callback(c.url, c.state)
    }
  },
  ieErrorCallback: function() {
    var b = $KIO.fs.ieFileUploadObj;
    for (var a = 0; a < b.state.length; a++) {
      b.state[a].status = constants.FILE_UPLOAD_ERROR_STATE
    }
    b.callback && b.callback(b.url, b.state)
  }
};
$KIO.File = function(a) {
  if ($KU.isAjaxUploadSupported) {
    this.name = a.name;
    this.file = a
  } else {
    for (var b in a) {
      this[b] = a[b]
    }
  }
  this.readable = true;
  this.writable = false;
  if (a.lastModifiedDate) {
    this.modificationTime = new Date(a.lastModifiedDate).toISOString()
  }
  if (a.size) {
    this.size = a.size
  }
  return this
};

$KW.CheckBoxGroupViews = {
  render: function(a, b) {
    if (a.itemorientation) {
      a.orientation = a.itemorientation
    }
    var d = $KW.Utils.getMasterData(a);
    var c = $KW.skins.getWidgetSkinList(a, b, d);
    var f = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='" + $KW.skins.getMarginSkin(a, b) + $KW.skins.getPaddingSkin(a) + (b.ispercent === false ? "display:inline-block" : "") + "'>";
    a.context = b;
    if ((a.viewtype == "tableview" || a.viewtype == "toggleview") && !kony.appinit.isIE8) {
      f += this.renderViews(a, d, b)
    } else {
      f += this.generateList(a, d, b)
    }
    f += "</div>";
    return f
  },
  renderViews: function(a, f, c) {
    var g = "";
    if (f.length > IndexJL) {
      a.selectedkeys && $KW.Utils.setSelectedValueProperty(a, f, "selectedkeys");
      if (a.viewtype == "toggleview") {
        g += "<div class='ktable kwt100' style='border: 1px solid gray; border-radius: 10px; overflow: hidden; '>"
      }
      for (var b = IndexJL; b < (f.length); b++) {
        if (f[b][IndexJL] != null && f[b][1 + IndexJL] != null) {
          var d = (a.selectedkeys && $KU.inArray(a.selectedkeys, f[b][IndexJL])[0]) ? "checked" : "";
          var j = "middleleftalign";
          if (a.viewtype == "tableview") {
            g += "<div style ='border:none;height:auto;' class='kwt100 middleleftalign kheight' index='" + f[b][IndexJL] + "' >";
            var h;
            if (d == "checked") {
              h = $KU.getImageURL(a.checkedimage)
            } else {
              h = $KU.getImageURL(a.uncheckedimage)
            }
            g += "<label class='kwt90'  name = '" + a.id + "_label' kformname='" + a.pf + "' kwidgettype='" + a.wType + "'  style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            g += f[b][1 + IndexJL];
            g += "</label>";
            g += "<img  kformname='" + a.pf + "' kwidgettype='" + a.wType + "'  src= '" + h + "' style='float: right; margin-right: 10px' >";
            g += "</div>";
            g += "<div style='border-top: 1px solid gray'></div>"
          } else {
            if (a.viewtype == "toggleview") {
              g += "<div style ='margin-right:2px; border-right:1px solid gray;' class =' kcell kheight middlecenteralign' >";
              g += "<div class='' kformname='" + a.pf + "' kwidgettype='" + a.wType + "'    style='  padding-left: 5px; vertical-align: middle; display: inline-block;'>";
              g += f[b][1 + IndexJL];
              g += "</div></div>"
            }
          }
        }
      }
      if (a.viewtype == "toggleview") {
        g += "</div>"
      }
    }
    return g
  },
  changeImage: function(b, a) {
    if (b.getAttribute("checked") == "true") {
      b.childNodes[1].src = $KU.getImageURL(a.uncheckedimage);
      b.setAttribute("checked", "false")
    } else {
      b.childNodes[1].src = $KU.getImageURL(a.checkedimage);
      b.setAttribute("checked", "true")
    }
  },
  changeSkin: function(b, a) {
    if (b.getAttribute("checked") == "true") {
      b.setAttribute("checked", "false");
      $KU.removeClassName(b, a.focusskin);
      $KU.addClassName(b, a.skin)
    } else {
      b.setAttribute("checked", "true");
      $KU.removeClassName(b, a.skin);
      $KU.addClassName(b, a.focusskin)
    }
  },
  eventHandlerViews: function(a, h, d) {
    var g = h.parentNode.parentNode;
    var b = h.parentNode;
    if (d) {
      if (d.viewtype == "tableview" && !kony.appinit.isIE8) {
        $KW.CheckBoxGroupViews.changeImage(b, d)
      } else {
        $KW.CheckBoxGroupViews.changeSkin(b, d)
      }
      if (g.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(d, h, false)
      } else {
        var f = d.selectedkeys || (IndexJL == 1 ? [null] : []);
        $KW.Utils.setSelectedKeys(d, b.getAttribute("checked"), f, b.getAttribute("index"));
        $KW.Utils.setSelectedValueProperty(d, $KW.Utils.getMasterData(d), "selectedkeys");
        var c = $KU.returnEventReference(d.onselection);
        c && c.call(d, d)
      }
    }
  }
};

function accessorDescriptor(b, a) {
  var c = {
    enumerable: true,
    configurable: true
  };
  c[b] = a;
  return c
}

function defineGetter(b, c, a) {
  if (kony.appinit.isIE8 || kony.appinit.isIE7) {
    return
  }
  if (Object.defineProperty) {
    return Object.defineProperty(b, c, accessorDescriptor("get", a))
  }
  if (Object.prototype.__defineGetter__) {
    return b.__defineGetter__(c, a)
  }
  throw new Error("browser does not support getters")
}

function defineSetter(a, c, b) {
  if (kony.appinit.isIE8 || kony.appinit.isIE7) {
    return
  }
  if (Object.defineProperty) {
    return Object.defineProperty(a, c, accessorDescriptor("set", b))
  }
  if (Object.prototype.__defineSetter__) {
    return a.__defineSetter__(c, b)
  }
  throw new Error("browser does not support setters")
}

function ieSetProperty(c, a, b) {
  kony.model.update(c, a, b)
}

function ieGetProperty(b, a) {
  if (!b) {
    return null
  }
  if (b.wType) {
    a = (b[a] instanceof Object && b[a].wType) ? a : a.toLowerCase()
  }
  return b[a]
}
var vendor = (/webkit/i).test(navigator.userAgent) ? "webkit" : (/firefox/i).test(navigator.userAgent) ? "Moz" : "opera" in window ? "o" : ((/msie/i).test(navigator.userAgent) || (/rv:([1][0-9])/i).test(navigator.userAgent)) ? "ms" : "";
var nextFrame = window.requestAnimationFrame || window[vendor + "RequestAnimationFrame"] || function(a) {
    return setTimeout(a, 1)
  };
var cancelFrame = window.cancelAnimationFrame || window[vendor + "CancelRequestAnimationFrame"] || clearTimeout;
$KU = kony.utils = {
  getAllDefaults: function(a) {
    return kony.defaults.getAllDefaults(a)
  },
  mergeProperties: function(b, c, f) {
    var d = b[f];
    if (d && typeof d == "object" && !d.wType) {
      c[f] = c[f] || {};
      for (var a in d) {
        $KU.mergeProperties(d, c[f], a)
      }
    } else {
      c[f] = d
    }
  },
  mergeDefaults: function(b, a) {
    var c = owl.deepCopy(a);
    if (b instanceof Object) {
      for (var d in b) {
        if (b.hasOwnProperty(d)) {
          if (typeof c[d] == "undefined" || c[d] == null || $KU.isArray(c[d])) {
            c[d] = b[d]
          } else {
            $KU.mergeProperties(b, c, d)
          }
        }
      }
    }
    if (typeof c.id == "undefined" || c.id == null) {
      c.id = "konyRandomId" + ($KG.uniqueId++)
    }
    return c
  },
  equals: function(c, b) {
    if (Object.prototype.toString.call(c) !== Object.prototype.toString.call(b)) {
      return false
    } else {
      if (Object.prototype.toString.call(c) === "[object Array]") {
        if (c.length !== b.length) {
          return false
        }
        for (var d = 0; d < b.length; d++) {
          if (!$KU.equals(c[d], b[d])) {
            return false
          }
        }
        return true
      } else {
        if (Object.prototype.toString.call(c) === "[object Object]") {
          for (var a in b) {
            if (Object.prototype.toString.call(b[a]) !== "[object Function]") {
              if (!$KU.equals(c[a], b[a])) {
                return false
              }
            }
          }
          return true
        } else {
          if (Object.prototype.toString.call(b) !== "[object Function]") {
            return (c === b)
          }
        }
      }
    }
  },
  isArray: function(a) {
    return (Object.prototype.toString.call(a) === "[object Array]")
  },
  addArray: function(b, a) {
    b.push.apply(b, a);
    return b
  },
  arrayIndex: function(a, c) {
    for (var b = 0; b < a.length; b++) {
      if ($KU.equals(a[b], c)) {
        return b
      }
    }
    return -1
  },
  inArray: function(d, c, b) {
    var a = -1;
    if (d) {
      a = $KU.arrayIndex(d, c)
    }
    if (b) {
      return (a == -1) ? false : true
    } else {
      return (a == -1) ? [false, -1] : [true, a]
    }
  },
  removeArray: function(c) {
    var g, d = arguments,
      b = d.length,
      f;
    while (b > 1 && c && c.length) {
      g = d[--b];
      while ((f = c.indexOf(g)) != -1) {
        c.splice(f, 1)
      }
    }
    return c
  },
  joinArray: function(a, b) {
    b = b || ",";
    return a[1 + IndexJL] + b + a[2 + IndexJL] + b + a[3 + IndexJL] + b + a[0 + IndexJL]
  },
  mergeObjects: function(f, d) {
    var f = f || {};
    var c = {};
    if (d) {
      var a, b;
      for (a in d) {
        b = d[a];
        if (c[a] !== b) {
          f[a] = b
        }
      }
    }
    return f
  },
  convertObjectToArray: function(c) {
    var a = [];
    for (var b in c) {
      a[b] = c[b]
    }
    return a
  },
  getkeys: function(a) {
    return (Object.keys && Object.keys(a)) || (function() {
        var b = [];
        for (var c in a) {
          b.push(c)
        }
        return b
      }())
  },
  getKey: function(c, b) {
    for (var a in c) {
      if (c[a] === b) {
        return a
      }
    }
  },
  adjustNodeIndex: function(c, f, a) {
    var d = c.childNodes;
    f = f - IndexJL;
    f = (d.length > f) ? f : (d.length - 1);
    if (d && d.length > 0) {
      for (var b = f; b < d.length; b++) {
        d[b].setAttribute(a, b + IndexJL)
      }
    }
  },
  toggleVisibilty: function(c, f, a, d) {
    var b = $KU.isFlexWidget(a);
    if (d != false) {
      if (b || (a.wType == "Segment" && a.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW)) {
        c = c.parentNode
      }
    }
    if (f && f.length > 0 && a.isvisible) {
      this.removeClassName(c, "hide")
    } else {
      this.addClassName(c, "hide")
    }
  },
  removeClassNames: function(c, a) {
    if (!c) {
      return
    }
    if (c.tagName) {
      c = [c]
    }
    if (!c.length) {
      return
    }
    for (var b = 0; b < c.length; b++) {
      $KU.removeClassName(c[b], a)
    }
  },
  addClassNames: function(c, a) {
    if (!c) {
      return
    }
    if (c.tagName) {
      c = [c]
    }
    if (!c.length) {
      return
    }
    for (var b = 0; b < c.length; b++) {
      $KU.addClassName(c[b], a)
    }
  },
  removeClassName: function(c, a) {
    if (c.classList && a) {
      c.classList.remove(a)
    } else {
      if ($KU.hasClassName(c, a)) {
        var b = c.className;
        c.className = b.replace(new RegExp("(^|\\s+)" + a + "(\\s+|$)"), " ")
      }
    }
  },
  hasClassName: function(b, a) {
    return (b.classList && a) ? b.classList.contains(a) : (b.className.length > 0 && (b.className == a || new RegExp("(^|\\s)" + a + "(\\s|$)").test(b.className)))
  },
  addClassName: function(b, a) {
    if (b.classList && a) {
      b.classList.add(a)
    } else {
      if (!$KU.hasClassName(b, a)) {
        b.className += (b.className ? " " : "") + a
      }
    }
  },
  getElementById: function(b, a) {
    return (typeof b == "string") ? ((a || document).getElementById(b) || null) : null
  },
  getPosition: function(a, c) {
    var f = 0,
      d = 0,
      b = a.getBoundingClientRect();
    if (b) {
      f = b.left;
      d = b.top
    }
    if (!(c && c.ismodal)) {
      if (window.pageYOffset) {
        f += window.pageXOffset;
        d += window.pageYOffset
      } else {
        if (a.ownerDocument.documentElement.scrollTop) {
          f += a.ownerDocument.documentElement.scrollLeft;
          d += a.ownerDocument.documentElement.scrollTop
        } else {
          if (document.body.scrollTop) {
            f += document.body.scrollLeft;
            d += document.body.scrollTop
          }
        }
      }
    }
    if (a.ownerDocument.documentElement.clientTop) {
      f -= a.ownerDocument.documentElement.clientLeft;
      d -= a.ownerDocument.documentElement.clientTop
    } else {
      if (document.body.clientTop) {
        f -= document.body.clientLeft;
        d -= document.body.clientTop
      }
    }
    return {
      top: d,
      left: f,
      bottom: d + a.offsetHeight,
      right: f + a.offsetWidth,
      width: a.offsetWidth,
      height: a.offsetHeight
    }
  },
  getAnchorPosition: function(d, i) {
    var f = d.context;
    var c = 0,
      g = 0;
    var h = document.getElementsByTagName("body")[0].offsetWidth;
    var k = document.getElementsByTagName("body")[0].offsetHeight;
    var b = document.getElementsByTagName("body")[0].getAttribute("bodyalign");
    var j = screen.width - h;
    var a = 0;
    if (f.widget.wType == "Form") {
      a = $KU.getPosition(document.getElementById(f.widget.id))
    } else {
      a = $KU.getPosition($KU.getNodeByModel(f.widget, d))
    }
    if (!b) {
      b = "left"
    }
    if (f.anchor == "bottom") {
      if ((a.bottom + i.offsetHeight > k) && (d.wType != "Calendar")) {
        g = a.bottom - (a.bottom + i.offsetHeight - k)
      } else {
        g = a.bottom
      }
      if (a.left + i.offsetWidth > h) {
        c = 0
      } else {
        c = a.left
      }
    }
    if (f.anchor == "top") {
      if (a.top - i.offsetHeight < 0) {
        g = 0
      } else {
        g = a.top - i.offsetHeight
      }
      if (a.left + i.offsetWidth > h) {
        c = 0
      } else {
        c = a.left
      }
    }
    if (f.anchor == "left") {
      if (a.top + i.offsetHeight > k) {
        g = a.top - (a.top + i.offsetHeight - k)
      } else {
        g = a.top
      }
      if (b == "left") {
        if (a.left - i.offsetWidth < 0) {
          c = 0
        } else {
          c = a.left - i.offsetWidth
        }
      }
      if (b == "center") {
        if (a.left - i.offsetWidth < j / 2) {
          c = j / 2
        } else {
          c = a.left - i.offsetWidth
        }
      }
      if (b == "right") {
        if (a.left - i.offsetWidth < j) {
          c = 0
        } else {
          c = a.left - i.offsetWidth - j
        }
      }
    }
    if (f.anchor == "right") {
      if (a.top + i.offsetHeight > k) {
        g = a.top - (a.top + i.offsetHeight - k)
      } else {
        g = a.top
      }
      if (b == "left") {
        if (a.left + a.width + i.offsetWidth > h) {
          c = a.left + a.width - (a.left + a.width + i.offsetWidth - h)
        } else {
          c = a.left + a.width
        }
      }
      if (b == "center") {
        if (a.left + a.width + i.offsetWidth > h + j / 2) {
          c = a.left + a.width - (a.left + a.width + i.offsetWidth - h);
          c = c + j / 2
        } else {
          c = a.left + a.width
        }
      }
      if (b == "right") {
        if (a.left + a.width + i.offsetWidth > h + j) {
          c = a.left + a.width - (a.left + a.width + i.offsetWidth - h)
        } else {
          c = a.left + a.width - j
        }
      }
    }
    return {
      leftPos: c,
      topPos: g
    }
  },
  getNodeByModel: function(a) {
    if (a) {
      var b = a.tabId || "";
      if (b) {
        return document.getElementById(a.pf + "_" + b + "_" + a.id)
      } else {
        return document.getElementById(a.pf + "_" + a.id) || document.getElementById(a.id)
      }
    } else {
      return null
    }
  },
  getElementID: function(b, a) {
    return (b && typeof b == "string") ? (a ? b.substring(b.lastIndexOf("_") + 1, b.length) : b.substring(b.indexOf("_") + 1, b.length)) : null
  },
  getModelByNode: function(f) {
    var b = (f && f.getAttribute("id") && f.getAttribute("id").split("_").length == 3) ? this.getElementID(f.getAttribute("id"), true) : this.getElementID(f.getAttribute("id"));
    if (f.getAttribute("kwidgettype") == "CalendarText") {
      b = f.id.split("_")[0]
    }
    var c = f.getAttribute("ktabpaneid");
    var d = f.getAttribute("kformname");
    var a = f.getAttribute("ktabid");
    return kony.model.getWidgetModel(d, b, c, a)
  },
  getModelByScroller: function(a) {
    var b = a.substring(0, a.lastIndexOf("_"));
    var c = $KU.getElementById(b);
    return $KU.getModelByNode(c)
  },
  getNextSibling: function(b) {
    var a = b.nextSibling;
    while (a.nodeType != 1) {
      a = a.nextSibling
    }
    return a
  },
  applyFade: function(c, a, b) {
    c.style[vendor + "AnimationDuration"] = b + "ms";
    c.style[vendor + "AnimationName"] = a;
    if (a == "fadeIn") {
      c.style.display = ""
    } else {
      c.style.display = "none";
      c.style[vendor + "AnimationName"] = "none"
    }
  },
  getParentByAttribute: function(c, b) {
    var d = c;
    while (d) {
      var a = d.getAttribute && d.getAttribute(b);
      if (a) {
        return d
      }
      d = d.parentNode
    }
  },
  getParentByAttributeValue: function(c, b, d) {
    var f = c;
    while (f) {
      var a = f.getAttribute && f.getAttribute(b);
      if (a == d) {
        return f
      }
      f = f.parentNode
    }
  },
  getParentByTagName: function(b, a) {
    while (b && (b.nodeType != 1 || b.nodeName.toLowerCase() != a)) {
      b = b.parentNode
    }
    return b
  },
  getParentModel: function(a) {
    return a.parent
  },
  getContainerForm: function(f) {
    var a = f.getAttribute("kcontainerid");
    if (a) {
      var g = f;
      var h;
      while (g) {
        h = g.id && g.id.split("_")[1];
        if (h == a && g.getAttribute("kformname")) {
          return g.getAttribute("kformname")
        }
        g = g.parentNode
      }
    } else {
      var d = f.getAttribute("kformname");
      if (d) {
        var c = window[d];
        if (c.wType == "Form" || c.wType == "Popup") {
          return d
        } else {
          var b = $KU.getNodeByModel(c);
          return b.parentNode.getAttribute("kformname")
        }
      }
    }
    return ""
  },
  cloneObj: function(a) {
    if (typeof(a) != "object" || a == null) {
      return a
    }
    var c = a.constructor();
    for (var b in a) {
      if (a.hasOwnProperty(b)) {
        c[b] = this.cloneObj(a[b])
      }
    }
    return c
  },
  returnEventReference: function(a) {
    return typeof(a) == "function" ? a : (typeof(a) == "string" ? window[a] : undefined)
  },
  returnObjectReference: function(a) {
    return typeof(a) == "object" ? a : (typeof(a) == "string" ? window[a] : undefined)
  },
  getStringFromBase64: function(t) {
    var j = {},
      h, n = 0,
      m, p, g = 0,
      o, d = "",
      q = String.fromCharCode,
      k = t.length;
    var f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (h = 0; h < 64; h++) {
      j[f.charAt(h)] = h
    }
    for (p = 0; p < k; p++) {
      m = j[t.charAt(p)];
      n = (n << 6) + m;
      g += 6;
      while (g >= 8) {
        ((o = (n >>> (g -= 8)) & 255) || (p < (k - 2))) && (d += q(o))
      }
    }
    return d
  },
  getDecodedPropValue: function(a) {
    if (!(a.substr(0, 1) == "{")) {
      a = $KU.getStringFromBase64(a)
    }
    return a
  },
  getBase64: function(j) {
    if (!j) {
      return j
    }
    if ("btoa" in window) {
      return window.btoa(unescape(encodeURIComponent(j)))
    }
    var d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var c, b, a, n, m, l, k, o, h = 0,
      p = 0,
      g = "",
      f = [];
    do {
      c = j.charCodeAt(h++) & 255;
      b = j.charCodeAt(h++) & 255;
      a = j.charCodeAt(h++) & 255;
      o = c << 16 | b << 8 | a;
      n = o >> 18 & 63;
      m = o >> 12 & 63;
      l = o >> 6 & 63;
      k = o & 63;
      f[p++] = d.charAt(n) + d.charAt(m) + d.charAt(l) + d.charAt(k)
    } while (h < j.length);
    g = f.join("");
    switch (j.length % 3) {
      case 1:
        g = g.slice(0, -2) + "==";
        break;
      case 2:
        g = g.slice(0, -1) + "=";
        break
    }
    return g
  },
  isValidDate: function(f, g) {
    var a = {};
    f = f.split("/");
    g = g.split("/");
    for (var d = 0, b = g.length; d < b; d++) {
      a[g[d]] = f[d]
    }
    var c = new Date(a.yyyy || ((a.yy * 1) + 2000), a.mm - 1, a.dd);
    if (Object.prototype.toString.call(c) === "[object Date]" && (c.getFullYear() == (a.yyyy || ((a.yy * 1) + 2000)) && c.getFullYear() >= 1900 && c.getFullYear() <= 2100 && c.getMonth() + 1 == a.mm && c.getDate() == a.dd)) {
      return true
    } else {
      return false
    }
  },
  daysArray: function(c) {
    var b = new Date().getFullYear();
    for (var a = 1; a <= c; a++) {
      this[a] = new Date(b, c, 0).getDate()
    }
    return this
  },
  daysInFebruary: function(a) {
    return new Date(a, 2, 0).getDate()
  },
  isInteger: function(b) {
    var a;
    for (a = 0; a < b.length; a++) {
      var d = b.charAt(a);
      if (((d < "0") || (d > "9"))) {
        return false
      }
    }
    return true
  },
  getInt: function(a) {
    var b = parseInt(a);
    return b == null || isNaN(b) ? 0 : b
  },
  getDate: function(b, f) {
    var a;
    if (typeof b === "string" && typeof f === "string") {
      var c = b.split("/");
      var d = new Date().getFullYear().toString().substr(0, 2);
      if (f.indexOf("yyyy") == -1 || c[2].length == 2) {
        c[2] = d + c[2]
      }
      if (f == "mm/dd/yyyy" || f == "mm/dd/yy") {
        a = new Date(c[0] + "/" + c[1] + "/" + c[2])
      } else {
        a = new Date(c[1] + "/" + c[0] + "/" + c[2])
      }
      return a
    }
  },
  getDayOfYear: function(a, c, b) {
    return (Math.ceil((new Date(b, c - 1, a) - new Date(b, 0, 1)) / 86400000)) + 1
  },
  getIntegerDirection: function(a) {
    switch (a) {
      case "LEFT":
        return 1;
      case "RIGHT":
        return 2;
      case "UP":
        return 3;
      case "DOWN":
        return 4
    }
  },
  getSwipeDirection: function(b, a) {
    var d = Math.atan2(-a, -b);
    var f = Math.round(d * 180 / Math.PI);
    if (f < 0) {
      f = 360 - Math.abs(f)
    }
    var c;
    if ((f <= 45) && (f >= 0)) {
      c = $KW.touch.TouchContext.LEFT
    } else {
      if ((f <= 360) && (f >= 315)) {
        c = $KW.touch.TouchContext.LEFT
      } else {
        if ((f >= 135) && (f <= 225)) {
          c = $KW.touch.TouchContext.RIGHT
        } else {
          if ((f > 45) && (f < 135)) {
            c = $KW.touch.TouchContext.UP
          } else {
            c = $KW.touch.TouchContext.DOWN
          }
        }
      }
    }
    return c
  },
  getDistanceMoved: function(d, b) {
    var c = Math.abs(d);
    var a = Math.abs(b);
    return (Math.round(Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2))))
  },
  isMobile: function() {
    if (navigator.userAgent.match(/Mobile/i) && (navigator.userAgent.match(/AppleWebKit/i) || navigator.userAgent.match(/Phone/i))) {
      return true
    }
  },
  getPlatform: function() {
    if (!$KU.platform) {
      var a = {};
      a.name = $KU.getPlatformName();
      a.version = $KU.getPlatformVersion(a.name);
      $KU.platform = a
    }
    return $KU.platform
  },
  getPlatformName: function() {
    if (kony.appinit.isIE) {
      return "IE"
    }
    if (kony.appinit.isFirefox) {
      return "Firefox"
    }
    if (kony.appinit.isChrome) {
      return "Chrome"
    }
    if (kony.appinit.isSafari) {
      return "Safari"
    }
    if (kony.appinit.isOpera) {
      return "Opera"
    } else {
      return ""
    }
  },
  getPlatformVersion: function(b) {
    var a = "";
    var c = navigator.userAgent;
    switch (b) {
      case "IE":
        c.match(/MSIE ([0-9]+)/);
        a = RegExp.$1;
        break;
      case "Firefox":
        c.match(/Firefox[\/\s](\d+\.\d+)/);
        a = RegExp.$1;
        break;
      case "Chrome":
        c.match(/Chrome\/([0-9]+)/);
        a = RegExp.$1;
        break;
      case "Safari":
      case "Opera":
        c.match(/Version\/(\d+\.\d+)/);
        a = RegExp.$1;
        break;
      default:
        a = 0
    }
    return a
  },
  detectDevice: function() {
    var b = $KU.getPlatform();
    var a = b.name;
    var d = b.version;
    if (a == "iphone" || a == "ipad") {
      $KU.iOS = true;
      if (d < "5") {
        $KU.iOS4 = true
      }
    }
    var c = $KU.orientationDelayMatrix[a];
    if ($KU.isAndroid) {
      if ($KU.isAndroid_SonyXPeria) {
        c = $KU.orientationDelayMatrix.SonyXPeria
      } else {
        if ($KU.isAndroid_Galaxy && $KU.isMob) {
          if (window.devicePixelRatio && window.devicePixelRatio > 1.5) {
            c = 500
          } else {
            c = $KU.orientationDelayMatrix.GT
          }
        } else {
          if ($KU.isAndroid_Nexus) {
            c = $KU.orientationDelayMatrix.Nexus
          }
        }
      }
    }
    $KU.orientationDelay = c || 100;
    if (a == "blackberryNTH") {
      $KG.nativeScroll = true;
      $KG.disableTransition = true
    } else {
      if (a == "windowsphone" && $KU.isIE9) {
        $KG.nativeScroll = true;
        $KG.disableTransition = true
      }
    }
    if ($KG.useNativeScroll) {
      $KG.nativeScroll = true;
      $KG.disableTransition = false
    }
    if ($KG.nativeScroll) {
      $KG.needScroller = false
    } else {
      $KG.needScroller = true;
      document.body.style.overflowY = "hidden"
    }
  },
  detectOrientation: function() {
    var a = window.orientation;
    if (typeof a == "undefined" && window.matchMedia) {
      if (window.matchMedia("(orientation: portrait)").matches) {
        a = "portrait"
      } else {
        if (window.matchMedia("(orientation: landscape)").matches) {
          a = "landscape"
        } else {
          a = ""
        }
      }
    } else {
      switch (a) {
        case 0:
        case 180:
          a = ($KU.isAndroid && $KU.isTablet) ? "landscape" : "portrait";
          break;
        case 90:
        case -90:
          a = ($KU.isAndroid && $KU.isTablet) ? "portrait" : "landscape";
          break
      }
    }
    return a
  },
  getBrowserLanguage: function() {
    var b;
    var a = kony.globals.httpheaders;
    if (a && a["Accept-Language"]) {
      b = a["Accept-Language"].split(",")[0]
    } else {
      b = navigator.language || navigator.userLanguage || $KG.defaultlocale
    }
    return b
  },
  domRefresh: function(a) {
    if (a) {
      var b = a.style.margin;
      a.style.margin = "1px";
      setTimeout(function() {
        a.style.margin = b
      }, 10)
    }
  },
  convertjsontoluaobject: function(a) {
    var b = a;
    if (typeof a == "object") {
      b = JSON.stringify(a, $KU.jsonReplacer)
    }
    if (typeof b == "string") {
      obj1 = JSON.parse(b, function(c, d) {
        if (d instanceof Array) {
          d.splice(0, 0, null)
        }
        return d
      });
      return obj1
    } else {
      return a
    }
  },
  getWindowWidth: function() {
    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
  },
  getWindowHeight: function() {
    return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
  },
  getScrollBarWidth: function() {
    var c = document.createElement("p");
    c.style.width = "100%";
    c.style.height = "200px";
    var d = document.createElement("div");
    d.style.position = "absolute";
    d.style.top = "0px";
    d.style.left = "0px";
    d.style.visibility = "hidden";
    d.style.width = "200px";
    d.style.height = "150px";
    d.style.overflow = "hidden";
    d.appendChild(c);
    document.body.appendChild(d);
    var b = c.offsetWidth;
    d.style.overflow = "scroll";
    var a = c.offsetWidth;
    if (b == a) {
      a = d.clientWidth
    }
    document.body.removeChild(d);
    return (b - a)
  },
  convertluatojsonobject: function(a) {
    if (typeof a == "object") {
      luastr = JSON.stringify(a, $KU.jsonReplacer);
      obj2 = JSON.parse(luastr, function(b, c) {
        if (c instanceof Array) {
          c.splice(0, 1)
        }
        return c
      });
      return obj2
    } else {
      return a
    }
  },
  getImageCenterAlign: function(g, c, f) {
    if (g.naturalWidth) {
      var d = f ? f.spanHeight : g.parentNode.clientHeight;
      var b = f ? f.imgHeight : g.offsetHeight;
      var a = parseInt(d, 10) - parseInt(b, 10);
      if (c) {
        if (a > 0) {
          g.style.marginTop = a / 2 + "px"
        } else {
          g.style.marginTop = ""
        }
      } else {
        return a / 2
      }
    }
  },
  setImgAspectRatio: function(g, h, a, p) {
    if (!h) {
      return
    }
    var r = $KU.isFlexWidget(g);
    var j, c, i;
    if (g.wType == "Image" && r) {
      j = $KU.getReferenceWidth(g, h, a.width);
      c = $KU.getReferenceHeight(g, h, a.height)
    } else {
      j = g.referencewidth;
      c = g.referenceheight
    }
    var k = $KW.Image.getNaturalDimensions(h);
    var l = k.width;
    var m = k.height;
    var o = l / m;
    var d = $KU.isPositiveInteger(j);
    var q = $KU.isPositiveInteger(c);
    if (!isNaN(o) && (d || q)) {
      j = j;
      c = c;
      if (l > j || m > c) {
        var b = (d && (l > j)) ? j : l;
        var n = c;
        var f = ((b / o) < n || !q) ? (b / o) : false;
        if (f == false) {
          b = (n * o <= j || !d) ? n * o : b
        } else {
          n = f
        }
        if (n > 0 && n < 1) {
          n = 1
        }
        if (b > 0 && b < 1) {
          b = 1
        }
        if (typeof p == "undefined") {
          if (r) {
            h.style.width = b + "px";
            h.style.height = n + "px"
          } else {
            if (g.wType == "HStrip" && g.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_SLOTVIEW) {
              h.style.width = b + "px";
              h.style.height = n + "px"
            } else {
              h.style.width = h.parentNode.style.width = b + "px";
              h.style.height = h.parentNode.style.height = n + "px"
            }
          }
        } else {
          if (r) {
            a.width = b + "px";
            a.height = n + "px"
          }
        }
      } else {
        if (p == false && r) {
          a.width = l + "px";
          a.height = m + "px"
        }
      }
    }
    if (p == false) {
      return a
    }
  },
  setImgDimensions: function(b, g, f, c) {
    var a = $KU.getReferenceWidth(b, g, f.width);
    var d = $KU.getReferenceHeight(b, g, f.height);
    if (c == false) {
      return {
        width: "100%",
        height: +"100%"
      }
    }
    if (a >= 0) {
      g.style.width = "100%";
      if (d >= 0) {
        g.style.height = "100%"
      }
    }
  },
  getReferenceWidth: function(a, d, c) {
    var i = a.referencewidth;
    if (a.wType == "Image" && $KU.isFlexWidget(a)) {
      var h = {
        value: parseFloat(c),
        unit: $KU.getUnit(c)
      };
      i = $KU.getValueByParentFrame(a, h, "x");
      var b = d.parentNode;
      var f = parseInt($KU.getStyle(b, "border-right-width"), 10) + parseInt($KU.getStyle(b, "border-right-width"), 10);
      var g = parseInt($KU.getStyle(b, "padding-left"), 10) + parseInt($KU.getStyle(b, "padding-right"), 10);
      i = i - g - f
    }
    return i
  },
  getReferenceHeight: function(b, h, a) {
    var g = b.referenceheight;
    if (b.wType == "Image" && $KU.isFlexWidget(b)) {
      var i = {
        value: parseFloat(a),
        unit: $KU.getUnit(a)
      };
      g = $KU.getValueByParentFrame(b, i, "y");
      var d = h.parentNode;
      var c = parseInt($KU.getStyle(d, "border-top-width"), 10) + parseInt($KU.getStyle(d, "border-bottom-width"), 10);
      var f = parseInt($KU.getStyle(d, "padding-top"), 10) + parseInt($KU.getStyle(d, "padding-bottom"), 10);
      g = g - f - c
    }
    return g
  },
  imgLoadHandler: function(k, t) {
    k = k || window.event;
    if (!kony.appinit.isIE7 && !kony.appinit.isIE8) {
      t = k.target ? k.target : k.srcElement
    }
    if (!t) {
      return
    }
    if (!t.parentNode || (t.parentNode && !t.parentNode.parentNode)) {
      return
    }
    var a = t.getAttribute("ktabpaneid");
    var d = t.getAttribute("kwidgettype");
    var s = (d == "Image") ? $KU.getElementID(t.getAttribute("id")) : t.getAttribute("id");
    var g;
    if (d != "Image") {
      s = s.split("_")[1];
      g = t.src;
      g && (g = g.substring(g.lastIndexOf("/") + 1, g.length))
    }
    var j = t.getAttribute("ktabid");
    var h;
    if (j) {
      h = kony.model.getWidgetModel(t.getAttribute("kformname"), $KU.getElementID(s), a, j)
    } else {
      h = kony.model.getWidgetModel(t.getAttribute("kformname"), s, a)
    }
    if (d == "Image") {
      g = h.src
    }
    if (k.type == "load") {
      var b = true;
      if ($KU.inArray($KU.imgCache, g, true)) {
        b = false
      } else {
        $KU.imgCache.push(g)
      }
      if (h.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        $KU.setImgAspectRatio(h, t)
      }
      if (d == "IGallery") {
        t.style.display = ""
      }
      t.style.visibility = "visible";
      t.style.opacity = 1;
      h.loaded = true;
      if (h.animInfo) {
        var o = h.animInfo;
        o.instance.animate(h, o.animConfig, o.animCallback)
      }
      if (b || (t && t.parentNode && t.parentNode.style.background.indexOf("url") != -1)) {
        var l = t.parentNode;
        if (l) {
          if (l.style.removeProperty) {
            l.style.removeProperty("background")
          } else {
            l.style.background = "none"
          }
        }
      }
      if (d == "Image") {
        if (h.scrollBoxID) {
          var m = h.pf + "_" + h.scrollBoxID + "_scroller";
          var p = $KU.getElementById(m);
          if (p) {
            var f = $KG[m];
            f && f.refresh()
          }
        }
        var c = $KU.returnEventReference(t.getAttribute("ondownloadcomplete"));
        c && c.call(h, h, g, true)
      }
    } else {
      t.onerror = "";
      t.style.opacity = 1;
      var r = t.parentNode;
      r && (r.style.background = "none");
      if (d == "Image") {
        h.base64 = null
      }
      if (h.imagewhenfailed) {
        t.src = $KU.getImageURL(h.imagewhenfailed)
      }
      var c = $KU.returnEventReference(t.getAttribute("ondownloadcomplete"));
      c && c.call(h, h, g, false)
    }
    if (d == "HStrip" && (h.viewtype == "stripview" || h.viewtype == "pageview")) {
      h.count++;
      if (h.masterdata.length - IndexJL == h.count) {
        h.count = 0;
        if (h.viewtype == "stripview" && h.scrollInstance) {
          var n = t.getAttribute("kformname") + "_" + s + "_scrollee";
          n = document.getElementById(n);
          if (n) {
            n.style.width = "auto"
          }
          $KW.HStrip.refreshScroller(h)
        } else {
          if (h.view == "pageview") {
            var i = document.getElementById(t.getAttribute("kformname") + "_" + s);
            i.style.height = "auto";
            i.style.height = i.clientHeight + "px"
          }
        }
        var q = document.getElementById(t.getAttribute("kformname") + "_" + s + "_scrollFades");
        q && $KW.touch.setHeight(q.childNodes[0].childNodes[0]);
        q && $KW.touch.setHeight(q.childNodes[1].childNodes[0])
      }
    }
    if (t.parentNode) {
      t.parentNode.parentNode.style["font-size"] = "0px"
    }
    $KU.onImageLoadComplete(h, t)
  },
  onImageLoadComplete: function(h, i) {
    var d, b;
    var j = i.getAttribute("kcontainerID");
    if (j) {
      b = $KW.Utils.getContainerModelById(i, j)
    }
    d = h.parent;
    if ($KU.isFlexWidget(h)) {
      h.layoutConfig = {
        self: true,
        children: false
      };
      if (i.getAttribute("kcontainerid")) {
        var g = $KU.getParentByAttributeValue(i, "kwidgettype", d.wType);
        if (g) {
          if (b.wType == "Segment" && $KU.isFlexWidget(b) && !b.needScroller) {
            b.layoutConfig = {
              self: true,
              children: false
            };
            $KW.FlexContainer.forceLayout(b.parent)
          } else {
            $KW.FlexContainer.forceLayout(d, g.parentNode)
          }
        }
      } else {
        $KW.FlexContainer.forceLayout(d)
      }
    }
    if (b) {
      var f = window[b.pf];
      if (f && f.wType == "Popup") {
        var c = $KU.getElementById(f.id + "_container");
        if (c) {
          var l = f.ismodal ? c.getElementsByTagName("form")[0] : c;
          $KW.Popup.adjustPopupDimensions(f, l)
        }
      }
      if (b.wType == "MenuContainer" && b.viewtype == constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW) {
        var a = $KU.getParentByAttribute(i, "menuindex");
        if (a) {
          var k = a.getAttribute("menuindex");
          if (k && k.split(",").length > 1) {
            i.style.visibility = "hidden"
          }
        }
      }
    }
  },
  getImageURL: function(c) {
    if (c) {
      if (c.startsWith("http")) {
        return c
      } else {
        var a = "";
        var b = "";
        if ($KG.imagecat) {
          a = $KG.imagecat
        }
        if ($KG.platformver) {
          b = $KG.platformver
        }
        return b + "images/" + $KG.retina + a + c
      }
    }
    return ""
  },
  getCSSPropertyFromRule: function(d, b) {
    var a = $KW.Utils.getKonyStyleSheetIndex(document.styleSheets);
    var h = document.styleSheets[a];
    var g = h.rules || h.cssRules;
    for (var c = 0; c < g.length; c++) {
      var f = g[c];
      if (f.selectorText == ("." + d)) {
        return ((f.style.getPropertyValue && f.style.getPropertyValue(b)) || f.style[b])
      }
    }
    return null
  },
  imagePreloader: function(b, c) {
    var a = new Image();
    a.src = b;
    a.onload = c;
    a.onerror = c
  },
  getInnerHeight: function(a) {
    setTimeout(function() {
      $KG.__innerHeight = window.innerHeight
    }, a)
  },
  getgesturePosition: function(b, h, c, f, d, g) {
    var a;
    if (b <= (c - d) / 3 && h <= (f - g) / 3) {
      a = 1
    } else {
      if (b > (c - d) / 3 && b <= (c - d) * 2 / 3 && h <= (f - g) / 3) {
        a = 2
      } else {
        if (b > (c - d) * 2 / 3 && h <= (f - g) / 3) {
          a = 3
        } else {
          if (b <= (c - d) / 3 && h > (f - g) / 3 && h <= (f - g) * 2 / 3) {
            a = 4
          } else {
            if (b > (c - d) / 3 && b <= (c - d) * 2 / 3 && h > (f - g) / 3 && h <= (f - g) * 2 / 3) {
              a = 5
            } else {
              if (b > (c - d) * 2 / 3 && h > (f - g) / 3 && h <= (f - g) * 2 / 3) {
                a = 6
              } else {
                if (b <= (c - d) / 3 && h > (f - g) * 2 / 3) {
                  a = 7
                } else {
                  if (b > (c - d) / 3 && b <= (c - d) * 2 / 3 && h > (f - g) * 2 / 3) {
                    a = 8
                  } else {
                    if (b > (c - d) * 2 / 3 && h > (f - g) * 2 / 3) {
                      a = 9
                    } else {
                      if (b == (c - d) / 2 && h == (f - g) / 2) {
                        a = 10
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return a
  },
  addThirdPartyMeta: function(a) {
    if (a && typeof a == "object") {
      if (!$KG.thirdPartyWidgetsMeta) {
        $KG.thirdPartyWidgetsMeta = {}
      }
      $KG.thirdPartyWidgetsMeta[a.id] = a
    }
  },
  getWidgetTypeByNameSapce: function(a) {
    if (a && typeof a == "string") {
      a = a.split(".");
      return a[a.length - 1]
    } else {
      return ""
    }
  },
  getStyle: function(a, d) {
    try {
      var b = "";
      if (document.defaultView && document.defaultView.getComputedStyle) {
        b = document.defaultView.getComputedStyle(a, "").getPropertyValue(d)
      } else {
        if (a.currentStyle) {
          d = d.replace(/\-(\w)/g, function(f, g) {
            return g.toUpperCase()
          });
          b = a.currentStyle[d]
        } else {
          b = a.style[d]
        }
      }
    } catch (c) {}
    return b
  },
  getContainerParentDivMappings: function() {
    return {
      Form: 1,
      Popup: 1,
      ScrollBox: 0,
      HBox: 0,
      VBox: 0,
      Line: 0,
      TabPane: 0,
      Image: 2,
      Slider: 3,
      FlexContainer: 1,
      FlexScrollContainer: 2
    }
  },
  returnParentChildBloatAdjustedNode: function(d, b) {
    var c = $KU.getContainerParentDivMappings();
    for (var a = typeof c[d.wType] == "undefined" ? 1 : c[d.wType]; a > 0; --a) {
      b = b.parentNode
    }
    return b
  },
  extend: function(c, b) {
    for (var a in b) {
      if (typeof c[a] == "undefined") {
        c[a] = b[a]
      }
    }
    return c
  },
  fireEvent: function(c, b, d) {
    if (document.createEventObject) {
      var a = document.createEventObject();
      a.data = d;
      return c.fireEvent("on" + b, a)
    } else {
      var a = document.createEvent("HTMLEvents");
      a.data = d;
      a.initEvent(b, true, true);
      return !c.dispatchEvent(a)
    }
  },
  elementIndex: function(b) {
    var a = 0;
    while (b && b.previousSibling) {
      b = b.previousSibling;
      a++
    }
    return a
  },
  closestElement: function(b, a, c) {
    while (b && b.tagName) {
      var d = b.getAttribute(a);
      if (a === "class") {
        if ($KU.hasClassName(b, c)) {
          return b
        }
      } else {
        if (arguments.length === 3) {
          if (b.getAttribute(a) === c) {
            return b
          }
        } else {
          if (arguments.length === 2) {
            if (b.hasAttribute(a)) {
              return b
            }
          }
        }
      }
      b = b.parentNode
    }
    return null
  },
  filterElements: function(b, d) {
    var c = [];
    if (b.length) {
      if (d === "visible") {
        for (var a = 0; a < b.length; a++) {
          if (b[a].style.display !== "none") {
            c.push(b[a])
          }
        }
      }
    }
    return c
  },
  mediaSupport: function() {
    var a = document.createElement("video");
    return {
      mpeg4: "" !== a.canPlayType('video/mp4; codecs="mp4v.20.8"'),
      h264: "" !== (a.canPlayType('video/mp4; codecs="avc1.42E01E"') || a.canPlayType('video/mp4; codecs="avc1.42E01E, mp4a.40.2"')),
      ogg: "" !== a.canPlayType('video/ogg; codecs="theora"'),
      webm: "" !== a.canPlayType('video/webm; codecs="vp8, vorbis"')
    }
  },
  getFunctionName: function(a) {
    return a.name ? a.name : a.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
  },
  nativeScrollMatrix: {
    iphone: "5",
    ipad: "5",
    android: "2.3.6",
    blackberry: "7",
    desktop: "0"
  },
  isAndroid: (/android/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isIDevice: (/iphone|ipad/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPhone: (/iphone/gi).test(navigator.userAgent) && !((/trident/gi).test(navigator.userAgent)),
  isiPod: (/ipod/gi).test(navigator.userAgent),
  isiPad: (/ipad/gi).test(navigator.userAgent),
  isIOS7: (/(iPad|iPhone);.*CPU.*OS 7_\d/i).test(navigator.userAgent),
  isIOSgt6: (/(iPad|iPhone);.*CPU.*OS ([7-9]|[1-9][0-9])_\d/i).test(navigator.userAgent),
  isPlaybook: (/playbook/gi).test(navigator.userAgent),
  isBlackBerry: ((/blackberry/gi).test(navigator.userAgent) || (/BB10/gi).test(navigator.userAgent)) && typeof bbnth == "undefined",
  isBlackBerryNTH: (/blackberry/gi).test(navigator.userAgent) && typeof bbnth != "undefined" && bbnth,
  isTouchPad: (/hp-tablet/gi).test(navigator.userAgent),
  isWindowsPhone: (/Windows Phone/gi).test(navigator.userAgent),
  isWindowsTouch: ((/Windows/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent)) || ((/trident/gi).test(navigator.userAgent)),
  isWindowsTablet: (/Windows NT/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent),
  isIE: (/MSIE/gi).test(navigator.userAgent),
  isIE9: navigator.userAgent.match(/MSIE (\d+)/) != null && RegExp.$1 == "9",
  isIE10: navigator.userAgent.match(/MSIE (\d+)/) != null && RegExp.$1 == "10",
  isIE11: (/rv:([1][1-9])/i).test(navigator.userAgent),
  isMob: (/mobile/gi).test(navigator.userAgent),
  isTablet: (/hp-tablet|ipad|playbook/gi).test(navigator.userAgent) || (((/android/gi).test(navigator.userAgent) || (/Windows NT/gi).test(navigator.userAgent) && (/Touch/gi).test(navigator.userAgent)) && !(/mobile/gi).test(navigator.userAgent)),
  isAndroid_SonyXPeria: (/android/gi).test(navigator.userAgent) && (/SonyEricsson/gi).test(navigator.userAgent),
  isAndroid_Galaxy: (/android/gi).test(navigator.userAgent) && (/GT/gi).test(navigator.userAgent),
  isAndroid_HTC: (/android/gi).test(navigator.userAgent) && (/HTC/gi).test(navigator.userAgent),
  isAndroid_Nexus: (/android/gi).test(navigator.userAgent) && (/Nexus/gi).test(navigator.userAgent),
  orientationDelayMatrix: {
    iphone: 100,
    ipad: 100,
    blackberry: 100,
    android: 250,
    GT: 150,
    SonyXPeria: 100,
    Nexus: 500,
    androidtablet: 300
  },
  isTouchSupported: (("ontouchstart" in window) || window.DocumentTouch && document instanceof DocumentTouch) && typeof bbnth == "undefined",
  isPointerSupported: navigator.msPointerEnabled,
  isOrientationSupported: "onorientationchange" in window,
  placeholderSupported: ("placeholder" in document.createElement("input")),
  vendor: ((/webkit/i).test(navigator.userAgent) ? "webkit" : (/firefox/i).test(navigator.userAgent) ? "moz" : "opera" in window ? "o" : (/msie/i).test(navigator.userAgent) ? "ms" : ""),
  has3d: "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MSCSSMatrix" in window && "m11" in new MSCSSMatrix(),
  hasTransform: "webkitTransform" in document.documentElement.style || "msTransform" in document.documentElement.style || "transform" in document.documentElement.style,
  hasWebkitTransform: "webkitTransform" in document.documentElement.style,
  hasMsTransform: "msTransform" in document.documentElement.style,
  hashChange: "onhashchange" in window,
  translatableWidgets: ["Button", "Label", "Link", "RichText", "TextArea", "TextField", "Phone"],
  segmentKeyMap: {
    visible: "isvisible",
    enable: "disabled"
  },
  dpi: window.devicePixelRatio || 1,
  minTouchMoveDisplacement: (window.devicePixelRatio || 1) * 6,
  swipeDuration: 500,
  imgCache: [],
  isAjaxUploadSupported: window.File && window.FileList && new XMLHttpRequest().upload,
  defaultunit: "%",
  flexUnits: ["%", "px", "dp"],
  contentDrivenWidgets: ["Label", "Button", "RichText", "Link", "Phone"],
  widgetsWidthMap: {
    HBox: "200dp",
    VBox: "200dp",
    ScrollBox: "200dp",
    TabPane: "100%",
    Calendar: "200dp",
    DataGrid: "100%",
    CheckBoxGroup: "100%",
    RadioButtonGroup: "260dp",
    Slider: "260dp",
    Switch: "200dp",
    HStrip: "200dp",
    IGallery: "200dp",
    Segment: "100%",
    Browser: "100%",
    Line: "50dp",
    Map: "100%",
    FlexContainer: "100%",
    FlexScrollContainer: "100%",
    TPW: "200dp",
    TextField: "260dp",
    TextArea: "260dp",
    ComboBox: "260dp",
    ListBox: "260dp"
  },
  widgetsHeightMap: {
    Segment: "120dp",
    Browser: "220dp",
    Map: "75%",
    TabPane: "220dp",
    FlexContainer: "220dp",
    FlexScrollContainer: "220dp",
    Line: "2dp",
    Slider: "100dp",
    ListBox: "40dp",
    ComboBox: "40dp",
    CheckBoxGroup: "120dp",
    RadioButtonGroup: "40dp",
    TextArea: "120dp",
    TextField: "40dp",
    DataGrid: "120dp"
  },
  changeFlag: false,
  needOptimization: true,
  setMainHeight: function() {
    var a = $KU.getElementById("__MainContainer");
    if (a) {
      a.style.height = window.innerHeight + "px"
    }
  },
  getI18NValue: function(d) {
    var a = /\((\'|\")([^)]+)(\'|\")\)/;
    var c = a.exec(d);
    var b = "";
    if (c && c[2]) {
      b = c[2]
    }
    return (b && $KI.i18n.getlocalizedstring(b)) || ""
  },
  createa11yDynamicElement: function() {
    var b = document.getElementById("ariaTag");
    if (!b) {
      var a = "<span  id='ariaTag' style='opacity:0;display:inline-block;height:0;width:0'  aria-live='assertive'></span>";
      b = b || document.createElement("div");
      b.innerHTML = a;
      document.body.appendChild(b.firstChild)
    }
  },
  changea11yDynamicElement: function(b) {
    var a = document.getElementById("ariaTag");
    window.setTimeout(function() {
      if (a) {
        a.removeAttribute("aria-hidden");
        a.innerHTML = b;
        window.setTimeout(function() {
          a.setAttribute("aria-hidden", "true")
        }, 10)
      }
    }, 100);
    if (a) {
      a.innerHTML = "title set"
    }
  },
  isRoleRequired: function(a) {
    if ($KU.isiPhone && (a.wType === "HBox" || a.wType === "Label" || a.wType === "VBox" || a.wType == "Segment" || a.wType == "ScrollBox" || a.wType == "HStrip" || a.wType == "Slider" || a.wType == "RichText" || a.wType == "FlexContainer" || a.wType == "FlexScrollContainer")) {
      return true
    } else {
      return false
    }
  },
  addAriatoElement: function(d, b, f, a) {
    if (d && a && a.a11yARIA) {
      for (attr in a.a11yARIA) {
        d.removeAttribute(attr)
      }
    }
    if (d && b) {
      var c = (b.a11yLabel || b.a11yLabel == "") ? b.a11yLabel : b.hint;
      var g = b.a11yValue;
      if (c != null && typeof c != undefined && c.trim() == "") {
        if (f.wType != "Calendar") {
          c = " "
        } else {
          c = f.date ? f.date : f.placeholder
        }
      }
      if (g != null && typeof g != undefined && g.trim() == "") {
        g = " "
      }
      if (f.wType != "Calendar") {
        c = c ? c + " " + (g ? g : "") : (g ? g : null)
      }
      if (c) {
        if (f.wType == "Image") {
          d.setAttribute("alt", c)
        } else {
          d.setAttribute("aria-label", c)
        }
        if ($KU.isRoleRequired(f)) {
          d.setAttribute("role", "option")
        }
      } else {
        if (f.wType == "Image") {
          d.removeAttribute("alt")
        } else {
          if (f.wType != "Calendar") {
            d.removeAttribute("aria-label")
          } else {
            c = f.date ? f.date : f.placeholder;
            d.setAttribute("aria-label", c)
          }
        }
        if ($KU.isRoleRequired(f)) {
          d.removeAttribute("role")
        }
        if (!c && f.wType == "Switch") {
          $KW.Switch.addA11YAttribute(f, d, true)
        }
      }
      var h = b.a11yHint || "";
      if (h.trim() != "") {
        if (!($KU.isBlackBerryNTH || $KU.isBlackBerry)) {
          var i = f.pf + "_" + f.id + "_hint";
          d.setAttribute("aria-describedby", i);
          $KU.createHintWrapper(f, i, h);
          if ($KU.isRoleRequired(f)) {
            d.setAttribute("role", "option")
          }
        }
      } else {
        d.removeAttribute("aria-describedby");
        if ($KU.isRoleRequired(f) && !c) {
          d.removeAttribute("role")
        }
        if (!c && f.wType == "Switch") {
          $KW.Switch.addA11YAttribute(f, d, true)
        }
      }
      b.a11yHidden ? d.setAttribute("aria-hidden", true) : d.removeAttribute("aria-hidden");
      b.required ? d.setAttribute("aria-required", b.required) : d.removeAttribute("aria-required");
      if (b.a11yARIA) {
        for (attr in b.a11yARIA) {
          d.setAttribute(attr, b.a11yARIA[attr])
        }
      }
    } else {
      if (f.wType == "Image") {
        d.removeAttribute("alt")
      } else {
        if (f.wType == "Calendar") {
          d.childNodes[1].alt = "Calendar"
        } else {
          d.removeAttribute("aria-label");
          if (f.wType == "Switch") {
            $KW.Switch.addA11YAttribute(f, d)
          }
        }
      }
      d.removeAttribute("aria-hidden");
      d.removeAttribute("aria-describedby");
      d.removeAttribute("aria-required");
      if ($KU.isRoleRequired(f)) {
        d.removeAttribute("role")
      }
    }
  },
  createHintWrapper: function(c, h, f) {
    var d = c.pf + "_hint";
    var g = document.getElementById(d);
    if (f) {
      var b = "<div id='" + h + "'>" + f + "</div>";
      var a = document.getElementById(h);
      if (!g) {
        var g = document.createElement("div");
        g.id = d;
        g.style.display = "none";
        document.body.appendChild(g)
      }
      if (a) {
        if (a.textContent) {
          a.textContent = f
        } else {
          a.innerText = f
        }
      } else {
        g.innerHTML += b
      }
    }
  },
  getAccessibilityValues: function(d, a, l, k) {
    var g = a || d.accessibilityconfig;
    if (l && l != "") {
      l = l ? "_" + l : "";
      g = a
    }
    var n = " ";
    if (g) {
      var b = (g.a11yLabel || g.a11yLabel == "") ? g.a11yLabel : g.hint;
      var c = g.a11yValue;
      var j = g.a11yHint;
      var f = k || "";
      var m = "";
      if (l) {
        m = d.pf + "_" + d.id + f + l + "_hint"
      } else {
        m = d.pf + "_" + d.id + f + "_hint"
      }
      if (b != null && typeof b != undefined && b.trim() == "") {
        b = " "
      }
      if (c != null && typeof c != undefined && c.trim() == "") {
        c = " "
      }
      if (d.wType != "Calendar") {
        b = b ? b + " " + (c ? c : "") : (c ? c : null);
        b = b ? (d.wType == "Image" ? "  alt='" + b + "' " : "  aria-label='" + b + "' ") : ""
      } else {
        b = b ? b : "";
        b = b + " " + (d.date ? d.date : d.placeholder);
        b = b ? ("aria-label='" + b + "' ") : ""
      }
      if (b && $KU.isRoleRequired(d)) {
        b += "  role='option'"
      }
      var i = "";
      if (j) {
        i = " aria-describedby='" + m + "' ";
        if ($KU.isRoleRequired(d)) {
          b += "  role='option'"
        }
      }
      var h = g.a11yHidden ? " aria-hidden ='" + true + "'" : "";
      $KU.createHintWrapper(d, m, j);
      if (g.a11yARIA) {
        for (attr in g.a11yARIA) {
          n += attr + "= '" + g.a11yARIA[attr] + "' "
        }
      }
      if (d.wType == "HBox" || d.wType == "VBox") {
        n += " tabindex=-1 "
      }
      n += (b + "  " + i + " " + h)
    } else {
      if (d.wType == "Calendar") {
        b = "Calendar " + d.placeholder;
        b = ("aria-label='" + b + "' ");
        n = (b)
      }
    }
    return n
  },
  setScrollBoxesHeight: function(f, d) {
    var a = document.querySelectorAll("#" + f + " div[kwidgettype='" + d + "']");
    for (var c = 0; c < a.length; c++) {
      var b = $KU.getModelByNode(a[c]);
      $KU.setScrollHeight(b, a[c])
    }
  },
  setScrollHeight: function(l, n) {
    var b = l.parent;
    var c = window[l.pf];
    n = n || $KU.getNodeByModel(l);
    var h = n;
    if (!h) {
      return
    }
    if ((b && (b.wType == "FlexContainer" || b.wType == "FlexScrollContainer")) || (c && c.wType == "Form" && c.layouttype != kony.flex.VBOX_LAYOUT)) {
      h.style.overflowY = "auto";
      return
    }
    var g = $KU.getElementById(n.id + "_parent");
    var p = $KW.stringifyScrolldirection[l.scrolldirection];
    var o;
    if (l.wType == "Segment" && l.viewType == "pageview" && l.needpageindicator) {
      o = document.getElementById(l.pf + "_" + l.id + "_footer");
      o && $KU.removeClassName(o, "hide")
    }
    if ((p != "horizontal" && l.wType == "ScrollBox") || l.needScroller) {
      var j = l.containerheight >= 0 ? l.containerheight : l.container_height;
      j = parseFloat(j);
      var a = 0;
      if ($KU.isPositiveInteger(j) && (l.containerheightreference || l.heightreference)) {
        if ([l.containerheightreference, l.heightreference].contains(1)) {
          var f = document.getElementById($KG.__currentForm.id + "_scroller");
          var i = (f && f.offsetHeight) || $KU.getWindowHeight();
          a = Math.round((j * i) / 100)
        } else {
          if ([l.containerheightreference, l.heightreference].contains(2)) {
            var b = $KU.getParentModel(l);
            var k = $KU.getNodeByModel(b);
            var m = (k && k.offsetWidth) || h.parentNode.offsetWidth;
            a = Math.round((j * m) / 100)
          } else {
            if ([l.containerheightreference, l.heightreference].contains(3)) {
              a = Math.round((j * screen.height) / 100)
            }
          }
        }
        var d = padding = 0;
        if (g) {
          d = parseInt($KU.getStyle(g, "border-top-width").replace("px", ""), 10) + parseInt($KU.getStyle(g, "border-bottom-width").replace("px", ""), 10);
          padding = parseInt($KU.getStyle(g, "padding-top").replace("px", ""), 10) + parseInt($KU.getStyle(g, "padding-bottom").replace("px", ""), 10);
          g.style.height = a + "px"
        }
        a = a - d - padding;
        h.style.height = a + "px";
        if (l.wType == "Segment" && l.viewType == "pageview" && l.containerheight == 0) {
          o && $KU.addClassName(o, "hide")
        }
      }
    } else {
      if (l.wType == "Segment" && l.screenLevelWidget == true) {
        return
      }
      if (l.wType == "Segment" || l.wType == "TabPane" || l.wType == "ScrollBox" || l.wType == "Browser" || l.wType == "Popup") {
        a = "auto"
      } else {
        if (l.wType == "Map") {
          a = "500px"
        }
      }
      h.style.height = a
    }
    if ((l.containerheight || l.containerheight == 0) && l.wType != "ScrollBox") {
      n.style.overflowY = "auto"
    }
  },
  isFlexWidget: function(b) {
    var c = b.parent;
    if (c) {
      var a = c.wType;
      if (a == "FlexContainer" || a == "FlexScrollContainer" || (a == "Form" && c.layouttype && c.layouttype != kony.flex.VBOX_LAYOUT && c.layouttype != constants.CONTAINER_LAYOUT_GRID)) {
        return true
      }
    }
    return false
  },
  isFlexContainer: function(b) {
    if (b) {
      var a = b.wType;
      if (a == "FlexContainer" || a == "FlexScrollContainer" || (a == "Form" && b.layouttype && b.layouttype != kony.flex.VBOX_LAYOUT && b.layouttype != constants.CONTAINER_LAYOUT_GRID)) {
        return true
      }
    }
    return false
  },
  onEventHandler: function(a) {
    var b = $KU.isFlexWidget(a);
    if (b) {
      var c = window[a.pf];
      if (c) {
        $KW.Form.initializeAllFlexContainers(c);
        $KW.Form.initializeFlexContainersInTemplate(c)
      }
    }
  },
  updateGestureTempList: function(a, d) {
    var f = $KG.gestureTemplates || [];
    if (d && d.length > IndexJL) {
      f = a.rowtemplate ? [a.rowtemplate.id] : [];
      for (var b = IndexJL; b < d.length; b++) {
        var c = d[b].template;
        if (c && !f.contains(c.id)) {
          f.push(c.id)
        }
      }
    }
    $KG.gestureTemplates = f
  },
  setMainHeight: function() {
    var a = $KU.getElementById("__MainContainer");
    if (a) {
      a.style.height = window.innerHeight + "px"
    }
  },
  getComputedValue: function(a, b) {
    if (!this.isValidCSSLength(b)) {
      return null
    }
    var c = this.getValueAndUnit(a, b);
    return c.value + c.unit
  },
  splitValueAndUnit: function(c) {
    if (c && typeof c == "string") {
      var a = $KU.flexUnits;
      for (var b = 0; b < a.length; b++) {
        if (c.lastIndexOf(a[b]) != -1) {
          c = parseFloat(c);
          unit = a[b];
          break
        }
      }
    }
    return {
      value: c,
      unit: unit
    }
  },
  escapeHTMLSpecialEntities: function(g) {
    if (typeof g !== "string") {
      return g
    }
    if ($KG.appbehaviors && $KG.appbehaviors.skipEscapeHtml == true) {
      return g
    }
    var d = "";
    var f = ($KG.appbehaviors && $KG.appbehaviors.escapeHtml == true) ? true : false;
    if (!f) {
      d = g.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&rsquo;").replace(/"/g, "&rdquo;")
    } else {
      var a = {
        34: "quot",
        38: "amp",
        39: "apos",
        60: "lt",
        62: "gt",
        160: "nbsp",
        161: "iexcl",
        162: "cent",
        163: "pound",
        164: "curren",
        165: "yen",
        166: "brvbar",
        167: "sect",
        168: "uml",
        169: "copy",
        170: "ordf",
        171: "laquo",
        172: "not",
        173: "shy",
        174: "reg",
        175: "macr",
        176: "deg",
        177: "plusmn",
        178: "sup2",
        179: "sup3",
        180: "acute",
        181: "micro",
        182: "para",
        183: "middot",
        184: "cedil",
        185: "sup1",
        186: "ordm",
        187: "raquo",
        188: "frac14",
        189: "frac12",
        190: "frac34",
        191: "iquest",
        192: "Agrave",
        193: "Aacute",
        194: "Acirc",
        195: "Atilde",
        196: "Auml",
        197: "Aring",
        198: "AElig",
        199: "Ccedil",
        200: "Egrave",
        201: "Eacute",
        202: "Ecirc",
        203: "Euml",
        204: "Igrave",
        205: "Iacute",
        206: "Icirc",
        207: "Iuml",
        208: "ETH",
        209: "Ntilde",
        210: "Ograve",
        211: "Oacute",
        212: "Ocirc",
        213: "Otilde",
        214: "Ouml",
        215: "times",
        216: "Oslash",
        217: "Ugrave",
        218: "Uacute",
        219: "Ucirc",
        220: "Uuml",
        221: "Yacute",
        222: "THORN",
        223: "szlig",
        224: "agrave",
        225: "aacute",
        226: "acirc",
        227: "atilde",
        228: "auml",
        229: "aring",
        230: "aelig",
        231: "ccedil",
        232: "egrave",
        233: "eacute",
        234: "ecirc",
        235: "euml",
        236: "igrave",
        237: "iacute",
        238: "icirc",
        239: "iuml",
        240: "eth",
        241: "ntilde",
        242: "ograve",
        243: "oacute",
        244: "ocirc",
        245: "otilde",
        246: "ouml",
        247: "divide",
        248: "oslash",
        249: "ugrave",
        250: "uacute",
        251: "ucirc",
        252: "uuml",
        253: "yacute",
        254: "thorn",
        255: "yuml",
        402: "fnof",
        913: "Alpha",
        914: "Beta",
        915: "Gamma",
        916: "Delta",
        917: "Epsilon",
        918: "Zeta",
        919: "Eta",
        920: "Theta",
        921: "Iota",
        922: "Kappa",
        923: "Lambda",
        924: "Mu",
        925: "Nu",
        926: "Xi",
        927: "Omicron",
        928: "Pi",
        929: "Rho",
        931: "Sigma",
        932: "Tau",
        933: "Upsilon",
        934: "Phi",
        935: "Chi",
        936: "Psi",
        937: "Omega",
        945: "alpha",
        946: "beta",
        947: "gamma",
        948: "delta",
        949: "epsilon",
        950: "zeta",
        951: "eta",
        952: "theta",
        953: "iota",
        954: "kappa",
        955: "lambda",
        956: "mu",
        957: "nu",
        958: "xi",
        959: "omicron",
        960: "pi",
        961: "rho",
        962: "sigmaf",
        963: "sigma",
        964: "tau",
        965: "upsilon",
        966: "phi",
        967: "chi",
        968: "psi",
        969: "omega",
        977: "thetasym",
        978: "upsih",
        982: "piv",
        8226: "bull",
        8230: "hellip",
        8242: "prime",
        8243: "Prime",
        8254: "oline",
        8260: "frasl",
        8472: "weierp",
        8465: "image",
        8476: "real",
        8482: "trade",
        8501: "alefsym",
        8592: "larr",
        8593: "uarr",
        8594: "rarr",
        8595: "darr",
        8596: "harr",
        8629: "crarr",
        8656: "lArr",
        8657: "uArr",
        8658: "rArr",
        8659: "dArr",
        8660: "hArr",
        8704: "forall",
        8706: "part",
        8707: "exist",
        8709: "empty",
        8711: "nabla",
        8712: "isin",
        8713: "notin",
        8715: "ni",
        8719: "prod",
        8721: "sum",
        8722: "minus",
        8727: "lowast",
        8730: "radic",
        8733: "prop",
        8734: "infin",
        8736: "ang",
        8743: "and",
        8744: "or",
        8745: "cap",
        8746: "cup",
        8747: "int",
        8756: "there4",
        8764: "sim",
        8773: "cong",
        8776: "asymp",
        8800: "ne",
        8801: "equiv",
        8804: "le",
        8805: "ge",
        8834: "sub",
        8835: "sup",
        8836: "nsub",
        8838: "sube",
        8839: "supe",
        8853: "oplus",
        8855: "otimes",
        8869: "perp",
        8901: "sdot",
        8968: "lceil",
        8969: "rceil",
        8970: "lfloor",
        8971: "rfloor",
        9001: "lang",
        9002: "rang",
        9674: "loz",
        9824: "spades",
        9827: "clubs",
        9829: "hearts",
        9830: "diams",
        338: "OElig",
        339: "oelig",
        352: "Scaron",
        353: "scaron",
        376: "Yuml",
        710: "circ",
        732: "tilde",
        8194: "ensp",
        8195: "emsp",
        8201: "thinsp",
        8204: "zwnj",
        8205: "zwj",
        8206: "lrm",
        8207: "rlm",
        8211: "ndash",
        8212: "mdash",
        8216: "lsquo",
        8217: "rsquo",
        8218: "sbquo",
        8220: "ldquo",
        8221: "rdquo",
        8222: "bdquo",
        8224: "dagger",
        8225: "Dagger",
        8240: "permil",
        8249: "lsaquo",
        8250: "rsaquo",
        8364: "euro"
      };
      for (var c = 0; c < g.length; c++) {
        var b = g.charCodeAt(c);
        if (a[b]) {
          d += "&" + a[b] + ";"
        } else {
          d += g[c]
        }
      }
    }
    return d
  },
  getValueAndUnit: function(c, g) {
    var a = $KU.isFlexContainer(c) ? c : c.parent;
    var f = a.defaultunit || kony.flex.DEFAULT_UNIT;
    if (g && typeof g == "string") {
      var b = $KU.flexUnits;
      for (var d = 0; d < b.length; d++) {
        if (g.lastIndexOf(b[d]) != -1) {
          g = parseFloat(g);
          f = b[d];
          break
        }
      }
    }
    g = parseFloat(g);
    if (f == kony.flex.PX) {
      g = g / $KU.dpi
    }
    if (f == kony.flex.DP) {
      f = "px"
    }
    return {
      value: g,
      unit: f
    }
  },
  getUnit: function(c) {
    var a = $KU.flexUnits;
    for (var b = 0; b < a.length; b++) {
      if (c.lastIndexOf(a[b]) != -1) {
        unit = a[b];
        return unit
      }
    }
  },
  getValueByParentFrame: function(b, h, c, a) {
    var g = a || b.parent.frame;
    var f = h.value;
    var d = h.unit;
    if (d == kony.flex.PERCENTAGE && g) {
      if (c == "x") {
        f = (f * g.width) / 100
      } else {
        if (c == "y") {
          f = (f * g.height) / 100
        }
      }
    }
    return f
  },
  createStyleSheet: function(b) {
    var a = document.createElement("style");
    a.type = "text/css";
    a.rel = "stylesheet";
    a.id = b;
    document.head && document.head.appendChild(a);
    return a.sheet
  },
  updateScrollFlag: function(b) {
    var c = b.parent || b;
    var a = parseFloat(b.containerheight);
    b.needScroller = $KU.isFlexContainer(c) || !!($KU.isPositiveInteger(a) && b.containerheightreference)
  },
  isValidCSSLength: function(a) {
    return /^[-+]?([0-9]+)(\.[0-9]+)?(px|%|dp)?$/.test(a)
  },
  isPositiveInteger: function(a) {
    return (typeof a == "number" && a >= 0)
  },
  onEventHandler: function(a) {
    var b = window[a.pf];
    if (b) {
      $KW.Form.initializeAllFlexContainers(b)
    }
  },
  setLayoutConfig: function(a, c, b) {
    if (c != b) {
      a.layoutConfig = {
        self: true,
        children: false
      }
    }
    this.updateAutoGrowFlexConfig(a)
  },
  updateAutoGrowFlexConfig: function(a) {
    var b = a.parent;
    if (b && b.wType == "FlexContainer" && b.autogrowHeight) {
      b.layoutConfig = {
        self: true,
        children: true
      };
      this.updateAutoGrowFlexConfig(b)
    }
  },
  updateLayoutConfig: function(a) {
    a.layoutConfig = {
      self: true,
      children: false
    }
  },
  layoutNewWidgets: function(a, c) {
    if (c && c.length > 0) {
      this.updateWidgetsConfig(a, c);
      var b = $KU.isFlexContainer(a);
      if (b) {
        $KW.FlexContainer.adjustFlexContainer(a)
      } else {
        $KW.Form.initializeFlexContainersInBox(a)
      }
    }
  },
  updateWidgetsConfig: function(c, f) {
    if (f && f.length > 0) {
      for (var b = 0; b < f.length; b++) {
        var a = f[b];
        var d = $KU.isFlexWidget(a);
        (d || a.wType == "Segment") && this.updateLayoutConfig(a);
        if (a.wType == "FlexContainer" || a.wType == "FlexScrollContainer") {
          a.layoutConfig.children = true
        } else {
          a.ownchildrenref && this.updateWidgetsConfig(a, a.ownchildrenref)
        }
      }
    }
  },
  onWidgetRemove: function(c, b) {
    if ($KU.isFlexContainer(c) && c.layouttype && c.layouttype != kony.flex.FREE_FORM) {
      var a = c.ownchildrenref[b];
      if (a) {
        this.updateLayoutConfig(a)
      }
    }
  },
  checkProp: function(a, m, k) {
    var d = "Webkit Moz O ms";
    var b = d.split(" ");
    var j = a.charAt(0).toUpperCase() + a.slice(1),
      h = (a + " " + b.join(j + " ") + j).split(" ");
    var n = this.nativeTestProps(h, m);
    if (typeof n != "undefined") {
      return n
    }
    var c, a, l;
    if (!$KU.testNode) {
      $KU.testNode = document.createElement("test")
    }
    var g = $KU.testNode.style;
    for (c in h) {
      a = h[c];
      l = g[a];
      if (!this.contains(a, "-") && g[a] !== undefined) {
        if (!k && typeof m != "undefined") {
          try {
            g[a] = m
          } catch (f) {}
          if (g[a] != l) {
            return true
          }
        } else {
          return true
        }
      }
    }
    return false
  },
  nativeTestProps: function(b, c) {
    var a = b.length;
    if ("CSS" in window && "supports" in window.CSS) {
      while (a--) {
        if (window.CSS.supports(this.domToHyphenated(b[a]), c)) {
          return true
        }
      }
      return false
    }
    return undefined
  },
  domToHyphenated: function(a) {
    return a.replace(/([A-Z])/g, function(c, b) {
      return "-" + b.toLowerCase()
    }).replace(/^ms-/, "-ms-")
  },
  jsonReplacer: function(a, b) {
    if (a === "parent" || a == "rowtemplate" || a == "rowTemplate") {
      return b && (b.id || b)
    } else {
      if (a == "scrollerInstance" || a == "scrollingevents" || a == "scrollingEvents" || a == "ownchildrenref" || a == "touches") {
        return undefined
      }
    }
    return b
  },
  contains: function(b, a) {
    return !!~("" + b).indexOf(a)
  },
  preventClickEvent: function(c, d) {
    var a = c.type;
    var b = d.tagName;
    if (b == "INPUT" || b == "SELECT") {
      if (a == "change") {
        $KU.changeFlag = true
      } else {
        if (a == "click" && $KU.changeFlag) {
          $KU.changeFlag = false;
          return true
        }
      }
    }
    return false
  },
  getTextTrasform: function(a, c) {
    var b = "";
    if (!$KU.isAutoCapitalizeSupported) {
      switch (a.autocapitalize) {
        case constants.TEXTBOX_AUTO_CAPITALIZE_WORDS:
        case constants.TEXTAREA_AUTO_CAPITALIZE_WORDS:
          b = "capitalize";
          break;
        case constants.TEXTBOX_AUTO_CAPITALIZE_ALL:
        case constants.TEXTAREA_AUTO_CAPITALIZE_ALL:
          b = "uppercase";
          break;
        case constants.TEXTBOX_AUTO_CAPITALIZE_SENTENCES:
        case constants.TEXTBOX_AUTO_CAPITALIZE_NONE:
        case constants.TEXTAREA_AUTO_CAPITALIZE_SENTENCES:
        case constants.TEXTAREA_AUTO_CAPITALIZE_NONE:
          b = "none";
          break
      }
    }
    return b
  }
};
var Arraycontains = function(c) {
  var a = this.length;
  if (a == 0) {
    return false
  } else {
    for (var b = 0; b < a; b++) {
      if (this[b] == c) {
        return true
      }
    }
  }
  return false
};
var ArraycontainsTimerAction = function(c) {
  var a = this.length;
  if (a == 0) {
    return false
  } else {
    for (var b = 0; b < a; b++) {
      if ((this[b].actionName == c.actionName)) {
        return true
      }
    }
  }
  return false
};
var Arrayremove = function(c) {
  var a = this.length;
  if (a == 0) {
    return null
  } else {
    for (var b = 0; b < a; b++) {
      if (this[b] == c) {
        return this.removeRange(b)
      }
    }
  }
  return this
};
var ArrayremoveRange = function(c, b) {
  var a = this.slice((b || c) + 1 || this.length);
  this.length = c < 0 ? this.length + c : c;
  return this.push.apply(this, a)
};
try {
  Object.defineProperty(Array.prototype, "contains", {
    value: Arraycontains,
    enumerable: false
  });
  Object.defineProperty(Array.prototype, "containsTimerAction", {
    value: ArraycontainsTimerAction,
    enumerable: false
  });
  Object.defineProperty(Array.prototype, "remove", {
    value: Arrayremove,
    enumerable: false
  });
  Object.defineProperty(Array.prototype, "removeRange", {
    value: ArrayremoveRange,
    enumerable: false
  })
} catch (e) {
  Array.prototype.contains = Arraycontains;
  Array.prototype.containsTimerAction = ArraycontainsTimerAction;
  Array.prototype.remove = Arrayremove;
  Array.prototype.removeRange = ArrayremoveRange
}
String.prototype.trim = function() {
  return this.replace(/^\s+|\s+$/g, "")
};
String.prototype.ltrim = function() {
  return this.replace(/^\s+/, "")
};
String.prototype.rtrim = function() {
  return this.replace(/\s+$/, "")
};
String.prototype.startsWith = function(a) {
  return this.slice(0, a.length) === a
};
kony.json = {
  concat: function(c, b) {
    for (var a in b) {
      c[a] = b[a]
    }
    return c
  }
};
if (!Function.prototype.bind) {
  Function.prototype.bind = function(a) {
    if (typeof this !== "function") {
      throw new TypeError("Function.prototype.bind - what is trying to be fBound is not callable")
    }
    var f = Array.prototype.slice.call(arguments, 1),
      d = this,
      b = function() {},
      c = function() {
        return d.apply(this instanceof b ? this : a || window, f.concat(Array.prototype.slice.call(arguments)))
      };
    b.prototype = this.prototype;
    c.prototype = new b();
    return c
  }
}
var elemInput = document.createElement("input");
$KU.isAutoCapitalizeSupported = "autocapitalize" in elemInput;
var translateOpen = "translate" + ($KU.has3d ? "3d(" : "(");
var translateClose = $KU.has3d ? ",0)" : ")";
$KU.flexbox = false;
owl = (function() {
  function c() {}

  function i(j) {
    if (typeof j == "object") {
      c.prototype = j;
      return new c()
    } else {
      return j
    }
  }

  function h(l) {
    if (typeof l !== "object") {
      return l
    } else {
      var k = l.valueOf();
      if (l != k) {
        return new l.constructor(k)
      } else {
        if (l instanceof l.constructor && l.constructor !== Object) {
          var m = i(l.constructor.prototype);
          for (var j in l) {
            if (l.hasOwnProperty(j)) {
              m[j] = l[j]
            }
          }
        } else {
          var m = {};
          for (var j in l) {
            m[j] = l[j]
          }
        }
        return m
      }
    }
  }
  var g = [];

  function f(j) {
    for (var k in j) {
      this[k] = j[k]
    }
  }
  f.prototype = {
    constructor: f,
    canCopy: function(j) {
      return false
    },
    create: function(j) {},
    populate: function(k, l, j) {}
  };

  function b() {
    this.copiedObjects = [];
    thisPass = this;
    this.recursiveDeepCopy = function(j) {
      return thisPass.deepCopy(j)
    };
    this.depth = 0
  }
  b.prototype = {
    constructor: b,
    maxDepth: 256,
    cacheResult: function(k, j) {
      this.copiedObjects.push([k, j])
    },
    getCachedResult: function(m) {
      var k = this.copiedObjects;
      var l = k.length;
      for (var j = 0; j < l; j++) {
        if (k[j][0] === m) {
          return k[j][1]
        }
      }
      return undefined
    },
    deepCopy: function(m) {
      if (m === null) {
        return null
      }
      if (typeof m !== "object") {
        return m
      }
      var l = this.getCachedResult(m);
      if (l) {
        return l
      }
      for (var k = 0; k < g.length; k++) {
        var j = g[k];
        if (j.canCopy(m)) {
          return this.applyDeepCopier(j, m)
        }
      }
      throw new Error("no DeepCopier is able to copy " + m)
    },
    applyDeepCopier: function(k, l) {
      var j = k.create(l);
      this.cacheResult(l, j);
      this.depth++;
      if (this.depth > this.maxDepth) {
        throw new Error("Exceeded max recursion depth in deep copy.")
      }
      k.populate(this.recursiveDeepCopy, l, j);
      this.depth--;
      return j
    }
  };

  function a(k, l) {
    var j = new b();
    if (l) {
      j.maxDepth = l
    }
    return j.deepCopy(k)
  }
  a.DeepCopier = f;
  a.deepCopiers = g;
  a.register = function(j) {
    if (!(j instanceof f)) {
      j = new f(j)
    }
    g.unshift(j)
  };
  a.register({
    canCopy: function(j) {
      return true
    },
    create: function(j) {
      if (j instanceof j.constructor) {
        return i(j.constructor.prototype)
      } else {
        return {}
      }
    },
    populate: function(k, m, j) {
      for (var l in m) {
        if (m.hasOwnProperty(l) && l != "gestures") {
          j[l] = k(m[l])
        }
      }
      return j
    }
  });
  a.register({
    canCopy: function(j) {
      return (j instanceof Array)
    },
    create: function(j) {
      return new j.constructor()
    },
    populate: function(k, m, j) {
      for (var l = 0; l < m.length; l++) {
        j.push(k(m[l]))
      }
      return j
    }
  });
  a.register({
    canCopy: function(j) {
      return (j instanceof Date)
    },
    create: function(j) {
      return new Date(j)
    }
  });

  function d(j) {
    if (window.Node) {
      return j instanceof Node
    } else {
      if (j === document) {
        return true
      }
      return (typeof j.nodeType === "number" && j.attributes && j.childNodes && j.cloneNode)
    }
  }
  a.register({
    canCopy: function(j) {
      return d(j)
    },
    create: function(j) {
      if (j === document) {
        return document
      }
      return j.cloneNode(false)
    },
    populate: function(k, m, j) {
      if (m === document) {
        return document
      }
      if (m.childNodes && m.childNodes.length) {
        for (var l = 0; l < m.childNodes.length; l++) {
          var n = k(m.childNodes[l]);
          j.appendChild(n)
        }
      }
    }
  });
  return {
    DeepCopyAlgorithm: b,
    copy: h,
    clone: i,
    deepCopy: a
  }
})();
$KI.i18n = {
  setcurrentlocaleasync: function(b, a, c, d) {
    if (!b) {
      console.warn("No locale specified");
      return
    }
    $KG.oldlocale = $KI.i18n.getcurrentlocale();
    $KI.i18n.initializeI18n(b, null, a, c, d)
  },
  setdefaultlocaleasync: function(b, a, f, h) {
    if (!b) {
      console.warn("No locale specified");
      return
    }
    try {
      var c = (localStorage && localStorage.getItem("i18nVersion")) || "";
      if (!$KG.i18nVersion || c != $KG.i18nVersion) {
        try {
          localStorage.setItem("i18nVersion", $KG.i18nVersion)
        } catch (g) {
          if (localStorage && (g.name == "QUOTA_EXCEEDED_ERR" || g.name == "QuotaExceededError")) {
            if (localStorage.length === 0) {
              console.warn("Private Browsing is switched ON")
            } else {
              console.warn("Data storage limit has exceeded")
            }
          } else {
            console.warn("localStorage is not available")
          }
        }
        $KI.i18n.cleanupI18nCache()
      }
    } catch (d) {}
    $KG.oldlocale = $KG.defaultlocale;
    $KG.defaultlocale = b;
    var b = $KI.i18n.determineCurrentLocale();
    $KI.i18n.initializeI18n(b, null, a, f, h)
  },
  setdefaultlocale: function() {
    var a = arguments[0] || null,
      h = arguments[1] || null,
      b = arguments[2] || null,
      g = arguments[3] || null;
    if (!a) {
      console.warn("No locale specified");
      return
    }
    if (g) {
      $KG.locales = $KG.locales.split(",");
      try {
        var c = (localStorage && localStorage.getItem("i18nVersion")) || "";
        if (!$KG.i18nVersion || c != $KG.i18nVersion) {
          try {
            localStorage.setItem("i18nVersion", $KG.i18nVersion)
          } catch (f) {
            if (localStorage && (f.name == "QUOTA_EXCEEDED_ERR" || f.name == "QuotaExceededError")) {
              if (localStorage.length === 0) {
                console.warn("Private Browsing is switched ON")
              } else {
                console.warn("Data storage limit has exceeded")
              }
            } else {
              console.warn("localStorage is not available")
            }
          }
          $KI.i18n.cleanupI18nCache()
        }
      } catch (d) {}
    }
    var a = $KI.i18n.determineCurrentLocale();
    $KI.i18n.initializeI18n(a, g, h, b)
  },
  setcurrentlocale: function(a) {
    if (!a) {
      return
    }
    $KI.i18n.initializeI18n(a)
  },
  getcurrentlocale: function() {
    return $KG.currentlocale
  },
  getsupportedlocales: function() {
    console.warn("getsupportedlocales: Not supported!");
    var a = $KU.getBrowserLanguage();
    return IndexJL ? [null, a] : [a]
  },
  getcurrentdevicelocale: function() {
    var c = $KU.getBrowserLanguage();
    var a = c.split("-");
    var b = {};
    b.language = a[0];
    b.country = a[1];
    b.name = c;
    return b
  },
  updateresourcebundle: function(j, i) {
    if (!i || !j) {
      return
    }
    var a = {};
    var f = $KG.appid + "_" + i;
    try {
      if ($KG[f]) {
        a = $KG[f]
      } else {
        if (localStorage) {
          var b = localStorage.getItem(f);
          if (b) {
            a = JSON.parse(b)
          }
        }
      }
    } catch (d) {}
    $KU.mergeObjects(a, j);
    try {
      try {
        if (!$KG[f]) {
          var h = JSON.stringify(a);
          localStorage.setItem(f, h)
        }
      } catch (g) {
        $KG[f] = a;
        if (localStorage && (g.name == "QUOTA_EXCEEDED_ERR" || g.name == "QuotaExceededError")) {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        } else {
          console.warn("localStorage is not available")
        }
      }
    } catch (d) {}
    if ($KG[f]) {
      $KG[f] = a
    }
    if ($KG.currentlocale == i) {
      $KG.i18nArray = $KU.convertObjectToArray(a)
    }
    var c = $KG.locales;
    if (!$KU.inArray(c, i, true)) {
      c.push(i)
    }
  },
  setresourcebundle: function(c, b) {
    if (!b || !c) {
      return
    }
    var d = JSON.stringify(c);
    var g = $KG.appid + "_" + b;
    try {
      try {
        localStorage.setItem(g, d)
      } catch (i) {
        $KG[g] = c;
        if (localStorage && (i.name == "QUOTA_EXCEEDED_ERR" || i.name == "QuotaExceededError")) {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        } else {
          console.warn("localStorage is not available")
        }
      }
    } catch (f) {}
    if ($KG.currentlocale == b) {
      var h = JSON.parse(d);
      $KG.i18nArray = $KU.convertObjectToArray(h)
    }
    var a = $KG.locales;
    if (!$KU.inArray(a, b, true)) {
      a.push(b)
    }
  },
  deleteresourcebundle: function(a) {
    var c = $KG.appid + "_" + a;
    try {
      localStorage && localStorage.removeItem(c)
    } catch (b) {}
    $KG[c] = "";
    if ($KG.currentlocale == a) {
      $KG.i18nArray = []
    }
    $KU.removeArray($KG.locales, a)
  },
  isresourcebundlepresent: function(a) {
    if (!a) {
      return false
    }
    var b = $KU.inArray($KG.locales, a, true);
    if (b) {
      return true
    } else {
      var d = $KG.appid + "_" + a;
      var e = null;
      try {
        e = (localStorage && localStorage.getItem(d)) || $KG[d]
      } catch (c) {}
      if (e) {
        return true
      } else {
        return false
      }
    }
  },
  islocalesupportedbydevice: function(a) {
    console.warn("islocalesupportedbydevice: Method Not supported");
    return false
  },
  getlocalizedstring: function(a) {
    var b = $KG.i18nArray[a];
    return typeof(b) == "undefined" ? null : b
  },
  determineCurrentLocale: function() {
    var d = $KG.locales;
    var g = $KG.defaultlocale;
    var f = $KU.getBrowserLanguage();
    var c = f.replace("-", "_");
    var e = "";
    var a = $KU.inArray(d, c, true);
    if (a) {
      e = c
    } else {
      var f = c.split("_")[0];
      var b = $KU.inArray(d, f, true);
      if (b) {
        e = f
      } else {
        e = g
      }
    }
    return e
  },
  initializeI18n: function(i, b, e, g, c) {
    if (!$KG.i18nArray) {
      $KG.i18nArray = []
    }
    var f = $KG.appid + "_" + i;
    var a;
    try {
      if (localStorage) {
        a = localStorage.getItem(f)
      }
    } catch (d) {}
    if (!a) {
      $KI.i18n.getResource(i, b, e, g, c)
    } else {
      var h = JSON.parse(a);
      $KG.i18nArray = $KU.convertObjectToArray(h);
      $KG.i18nInitialized = true;
      $KG.currentlocale = i;
      b && b();
      e && e($KG.oldlocale, i, c)
    }
  },
  getResource: function(k, b, f, j, c) {
    var d = "";
    if ($KG.appmode == constants.APPLICATION_MODE_NATIVE) {
      d = $KG.platformver + kony.constants.RESOURCES_PATH + "/" + kony.constants.TRANSLATION_PATH + "/" + k + "." + kony.constants.TRANSLATION_EXT + "?ver=" + $KG.version
    } else {
      d = kony.constants.RESOURCES_PATH + "/" + kony.constants.TRANSLATION_PATH + "/" + k + "." + kony.constants.TRANSLATION_EXT + "?ver=" + $KG.version
    }
    var h = document.getElementsByTagName("head")[0];
    var i = document.createElement("script");
    i.src = d;
    var a = setTimeout(function() {
      console.error("Timeout while loading resource bundle.");
      $KG.i18nInitialized = true;
      b && b()
    }, 60000);
    var g = function() {
      kony.print("i18n resource loaded successfully");
      clearTimeout(a);
      $KG.i18nInitialized = true;
      $KG.currentlocale = k;
      if (typeof i18nObject != "undefined" && i18nObject) {
        $KI.i18n.insertDB(i18nObject, k);
        i18nObject = ""
      }
      b && b();
      f && f($KG.oldlocale, $KI.i18n.getcurrentlocale(), c)
    };
    var e = function() {
      console.error("An error has occurred while loading i18 locales");
      clearTimeout(a);
      $KG.i18nInitialized = true;
      b && b();
      j && j($KG.oldlocale, $KI.i18n.getcurrentlocale(), c)
    };
    if (!i.addEventListener) {
      i.onreadystatechange = function() {
        if (this.readyState == "complete" || this.readyState == "loaded") {
          i.onreadystatechange = null;
          g()
        }
      }
    } else {
      i.onload = g;
      i.onerror = e
    }
    h.appendChild(i)
  },
  insertDB: function(f, b) {
    var d = $KG.appid + "_" + b;
    var h, a;
    if (typeof f == "string") {
      h = JSON.parse(f);
      a = f
    } else {
      h = f;
      a = JSON.stringify(f)
    }
    try {
      try {
        localStorage.setItem(d, a)
      } catch (g) {
        $KG[d] = h;
        localStorage && localStorage.removeItem("i18nVersion");
        if (localStorage && (g.name == "QUOTA_EXCEEDED_ERR" || g.name == "QuotaExceededError")) {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        } else {
          console.warn("localStorage is not available")
        }
      }
    } catch (c) {}
    $KG.i18nArray = $KU.convertObjectToArray(h)
  },
  translateFormModel: function(a) {
    for (var c in a) {
      var b = a[c];
      if (typeof b != "object" || $KU.isArray(b) || !b) {
        continue
      }
      if ($KU.inArray($KU.translatableWidgets, b.wType, true)) {
        if (b.i18n_text && b.i18n_text.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
          b.canUpdateUI = false;
          b.text = $KU.getI18NValue(b.i18n_text);
          b.canUpdateUI = true
        }
      }
    }
  },
  checkI18nStatus: function(a, b) {
    if (!$KG.localization || typeof a != "object" || $KU.isArray(a)) {
      return
    }
    if (b == "text" && a.i18n_text) {
      a.i18n_text = ""
    }
  },
  cleanupI18nCache: function() {
    var e = $KG.locales;
    for (var b = 0; b < e.length; b++) {
      var a = e[b];
      var d = $KG.appid + "_" + a;
      try {
        localStorage && localStorage.removeItem(d)
      } catch (c) {}
      $KG[d] = ""
    }
  },
  getI18nTitle: function(a) {
    var b = a.title;
    if (a.i18n_title && a.i18n_title.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
      return $KU.getI18NValue(a.i18n_title)
    } else {
      return b
    }
  }
};
$KW.formTransitionsMatrix = {
  topCenter: "slidetopin",
  bottomCenter: "slidebottomin",
  rightCenter: "sliderightin",
  leftCenter: "slideleftin",
  fadeAnimation: "fadein"
};
$KW.formEndTransitionsMatrix = {
  rightCenter: "sliderightout",
  leftCenter: "slideleftout",
  topCenter: "slidetopout",
  bottomCenter: "slidebottomout",
  fadeAnimation: "fadeout"
};
$KW.stringifyScrolldirection = {
  1: "horizontal",
  2: "vertical",
  3: "both",
  4: "none"
};
$KW.Widget = {
  setvisibility: function(d, k) {
    if (d) {
      if (d.parent && d.parent.wType == "TabPane") {
        return
      }
      d.isvisible = k;
      var f, l, c;
      if (d.wType == "Tab") {
        c = kony.model.getWidgetModel(d.pf, d.parent && d.parent.id);
        if (c.view === "tabview") {
          f = $KU.getElementById(d.pf + "_" + d.id + "_Li");
          l = $KU.getElementById(d.pf + "_" + d.id + "_Body")
        } else {
          f = $KU.getNodeByModel(d)
        }
      } else {
        f = $KW.Utils.getWidgetNode(d)
      }
      if (f) {
        if (d.wType == "CheckBoxGroup" || d.wType == "ComboBox" || d.wType == "RadioButtonGroup" || d.wType == "ListBox" || d.wType == "Segment") {
          var e = d.masterdata || d.data || $KW.Utils.getMasterData(d);
          if (!e || (e && e.length <= 0)) {
            k = false
          }
        }
        var m = $KU.isFlexWidget(d);
        var n = m ? f.parentNode : f;
        if (k.toString() == "false") {
          $KU.addClassName(n, "hide")
        } else {
          $KU.removeClassName(n, "hide");
          if (d.wType == "Tab" && c.view === "tabview") {
            f.style.display = "inline"
          }
        }
        this.onVisibilityChange(d, k);
        if (d.viewtype && d.viewtype == "pageview") {
          d.isvisible && $KW.touch.computeWidths($KU.getNodeByModel(d), d);
          f.nextSibling && $KU.toggleVisibilty(f.nextSibling, d.data || d.masterdata, d, false)
        }
        if (k && d.viewtype == "stripview") {
          $KW.HStrip.refreshScroller(d, f)
        }
        if (k && d.wType === "Switch") {
          $KW.Switch.adjustWidth(d, f, false);
          $KW.Switch.adjustHeight(d, f)
        }
        if (k && d.wType === "Calendar") {
          $KW.Calendar.setCalElementStyle(f.childNodes[0], true);
          k && $KW.Calendar.adjustCalendars(d)
        }
        if (k && d.wType == "Slider") {
          var a = $KU.getNodeByModel(d);
          $KW.Slider.imgLoad(a.childNodes[0])
        }
        k && d.ownchildrenref && $KW.Utils.reinitializeWidgets(d);
        if (typeof google != "undefined") {
          $KW.Utils.resizeMap(d)
        }
      } else {
        c = kony.model.getWidgetModel(d.pf, d.parent && d.parent.id);
        if (c && c.viewtype === "tabview") {
          f = $KU.getElementById(d.pf + "_" + d.id + "_Li");
          l = $KU.getElementById(d.pf + "_" + d.id + "_Body");
          if (k.toString() == "false") {
            $KU.addClassName(f, "hide")
          } else {
            $KU.removeClassName(f, "hide");
            if (c.viewtype === "tabview") {
              f.style.display = "inline"
            }
          }
        } else {
          f = $KU.getNodeByModel(d)
        }
      }
      if (l) {
        var h = f.getAttribute("index");
        if (k == false || k == "false") {
          $KU.addClassName(l, "hide")
        } else {
          if (c && ((c.activetab - IndexJL) == parseInt(h))) {
            $KU.removeClassName(l, "hide")
          }
        }
      }
      if (k) {
        if (d.id) {
          var b = d.pf || "";
          var j = $KU.getElementById(b + "_" + d.id);
          var g = j && j.querySelectorAll("#" + b + " div[kwidgettype='Line'][direction='V']");
          if (g && g.length > 0) {
            $KW.Line.initializeView(b)
          }
        }
      }
    }
  },
  onVisibilityChange: function(a, b) {
    $KU.updateLayoutConfig(a);
    $KU.updateAutoGrowFlexConfig(a);
    b && a.ownchildrenref && $KU.updateWidgetsConfig(a, a.ownchildrenref)
  },
  setenabled: function(h, n) {
    if (!h || typeof n != "boolean") {
      return
    }
    h.disabled = !n;
    var b = h.pf + "_" + h.id;
    if ((h.wType == "Tab" || h.name == "kony.ui.Tab")) {
      if (h.parent.viewtype == "tabview") {
        var k = $KU.getElementById(b + "_A");
        if (k) {
          k.disabled = !n;
          k.setAttribute("kdisabled", !n);
          var a = $KU.getElementById(b + "_Body");
          a.setAttribute("kdisabled", !n);
          b = b + "_Body"
        }
      }
      if (h.parent.viewtype == "collapsibleview") {
        b = b + "_Tab"
      }
    }
    var c = document.querySelectorAll("#" + b + ", #" + b + " [kwidgettype]");
    var d, m, e;
    for (i = 0; i < c.length; i++) {
      d = c[i];
      m = d.getAttribute("kwidgettype");
      e = d.getAttribute("tpwidgettype");
      if ($KU.isWindowsPhone && $KU.isIE9 && d.tagName == "SELECT") {
        for (var g = 0; g < d.childNodes.length; g++) {
          d.children[g].disabled = !n
        }
      }
      if (m != "Link" && m != "Label" && m != "HBox" && m != "VBox") {
        d.disabled = !n
      }
      if (m == "RichText") {
        var l = document.querySelectorAll("#" + d.id + " a")
      }
      if (m == "RichText" && l && !n) {
        d.ishref = true;
        d.innerHTML = d.innerHTML.replace(/href=["'].*?["']/g, "href='javascript:void(0)'")
      } else {
        if (d.ishref) {
          d.innerHTML = h.text
        }
      }
      if (m == "Link") {
        d.setAttribute("kdisabled", !n)
      }
      if (m == "ComboBox" && d.childNodes[0] && d.childNodes[0].tagName == "INPUT") {
        d.childNodes[0].disabled = !n
      }
      if ((m == "RadioButtonGroup" || m == "CheckBoxGroup") && d.tagName == "INPUT" && h.itemorientation == "vertical") {
        d.parentNode.setAttribute("kdisabled", !n)
      }
      if (h.wType == "Label") {
        var f = !!(n && h.textCopyable) ? "text" : "none";
        if ("MozUserSelect" in d.style) {
          d.style.MozUserSelect = f
        } else {
          if ("webkitUserSelect" in d.style) {
            d.style.webkitUserSelect = f
          } else {
            if ("msUserSelect" in d.style) {
              d.style.msUserSelect = f
            }
          }
        }
      }
      if (m == "Video") {
        if (n) {
          d.oncontextmenu = "";
          d.playing && d.paused && d.play();
          if (h.controls) {
            d.setAttribute("controls", "controls")
          }
        } else {
          d.playing && d.pause();
          d.removeAttribute("controls");
          d.oncontextmenu = function() {
            return false
          }
        }
      }
      d.setAttribute("kdisabled", !n);
      if (h.wType === "Map" && (d.getAttribute("kwidgettype") === "Map" || d.getAttribute("kwidgettype") === "googlemap")) {
        h.disabled = !n;
        $KW.Map.setEnabledMap(h, d)
      }
    }
  },
  setfocus: function(c, d, b) {
    var a = (b) ? b : $KU.getNodeByModel(c);
    a && $KW.Utils.scrollToElement(c, a)
  },
  addgesturerecognizer: function(a, b, d, e) {
    if (!a) {
      return null
    }
    var c = $KW.Utils.updateModelWithGesture(a, b, d, e);
    return (new $KW.touch.gesture(a, c)).gestureIdentifier
  },
  setgesturerecognizer: function(b, c, e, f) {
    if (!b) {
      return null
    }
    var a = (c == 1 ? (e.taps == 1 ? 10 : 11) : c);
    $KW.Widget.removegesturerecognizer(b, a);
    var d = $KW.Utils.updateModelWithGesture(b, c, e, f);
    return (new $KW.touch.gesture(b, d)).gestureIdentifier
  },
  removegesturerecognizer: function(c, d) {
    var b = d;
    if (typeof(d) === "string") {
      var a = ($KG.gestures && $KG.gestures[d]) ? $KG.gestures[d] : null;
      if (!a) {
        return
      }
      c = a.widgetModel;
      d = a.gestureType;
      delete $KG.gestures[b]
    }
    if (!c) {
      return
    }
    if (d == constants.GESTURE_TYPE_TAP) {
      $KW.Utils.removegesture(c, 10, true, b);
      $KW.Utils.removegesture(c, 11, true, b)
    } else {
      $KW.Utils.removegesture(c, d, true, b)
    }
  },
  setgesturerecognizerforallforms: function(b, d, e) {
    var a = (b == 1 ? (d.taps == 1 ? 10 : 11) : b);
    $KW.Widget.removegesturerecognizerforallforms(a);
    var c = $KW.Utils.updateModelWithGesture("", b, d, e);
    return (new $KW.touch.gesture("", c)).gestureIdentifier
  },
  addgesturerecognizerforallforms: function(a, c, d) {
    var b = $KW.Utils.updateModelWithGesture("", a, c, d);
    return (new $KW.touch.gesture("", b)).gestureIdentifier
  },
  removegesturerecognizerforallforms: function(c) {
    if (typeof c == "string") {
      var a = ($KG.gestures && $KG.gestures[c]) ? $KG.gestures[c] : null;
      if (!a) {
        return
      }
      var b = c;
      c = a.gestureType;
      delete $KG.gestures[b]
    }
    $KW.Widget.removegesturerecognizer($KG, c)
  },
  getPreferredSize: function(d, b) {
    var a = {
      width: 0,
      height: 0
    };
    var c = $KW.Utils.getWidgetNode(d);
    if (c && b) {
      a.width = this.getPreferredWidth(d, c, b.width);
      a.height = this.getPreferredHeight(d, c, b.height);
      var e = c.parentNode;
      e.style.maxWidth = e.style.maxHeight = ""
    }
    return a
  },
  getPreferredWidth: function(e, f, g, h) {
    var a = f.parentNode;
    var c = a.style.width;
    var j = $KW.Utils.getDefaultWidth(e);
    a.style.width = j ? j : "auto";
    if (g != Number.MAX_VALUE) {
      a.style.maxWidth = g + "px"
    }
    if (!j) {
      var b = f.style.whiteSpace;
      f.style.whiteSpace = "nowrap";
      f.style.whiteSpace = (a.offsetWidth >= g) ? "pre-wrap" : "nowrap"
    }
    var d = a.offsetWidth;
    if (h == false) {
      a.style.width = c;
      if (!j) {
        f.style.whiteSpace = b
      }
    }
    return d
  },
  getPreferredHeight: function(e, f, l, m) {
    var j, k;
    var b = f.parentNode;
    var h = b.style.height;
    var a = $KW.Utils.getDefaultHeight(e);
    if (e.wType == "Segment" && e.viewtype == constants.SEGUI_VIEW_TYPE_TABLEVIEW) {
      if (e.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
        a = "auto";
        if (l == Number.MAX_VALUE) {
          e.needScroller = false;
          var d = $KG[f.id];
          d && d.destroy()
        }
      }
    }
    if (e.wType == "FlexContainer" && e.autogrowMode == kony.flex.AUTOGROW_HEIGHT && e.canMeasureChildrenHeight) {
      e.autogrowHeight = true;
      var g = e.parent;
      if (g && g.autogrowHeight && g.canMeasureChildrenHeight) {
        return b.offsetHeight
      }
      a = "auto"
    }
    b.style.height = a ? a : "auto";
    if (e.wType == "Image") {
      var n = f.childNodes[0];
      if (m == false) {
        j = n.style.width;
        k = n.style.height
      }
      n.style.height = n.style.width = "auto"
    }
    if (l != Number.MAX_VALUE) {
      b.style.maxHeight = l + "px"
    }
    var c = b.offsetHeight;
    if (m == false) {
      if (e.wType == "Image") {
        n.style.width = j;
        n.style.height = k
      }
      b.style.height = h
    }
    return c
  },
  convertPointToWidget: function(d, b, c) {
    var a = $KW.FlexLayoutEngine.toPointwidget(c, d, b.x, "x");
    var e = $KW.FlexLayoutEngine.toPointwidget(c, d, b.y, "y");
    return {
      x: a.value + a.unit,
      y: e.value + e.unit
    }
  },
  convertPointFromWidget: function(d, b, c) {
    var a = $KW.FlexLayoutEngine.toPointwidget(d, c, b.x, "x");
    var e = $KW.FlexLayoutEngine.toPointwidget(d, c, b.y, "y");
    return {
      x: a.value + a.unit,
      y: e.value + e.unit
    }
  }
};
$KW.skins = {
  getBaseStyle: function(c, a) {
    var b = "";
    if (c.backgroundColor) {
      var d = $KW.skins.validateHexValue(c.backgroundColor);
      if (d) {
        b += "background : " + $KW.skins.convertHexValuetoRGBA(c.backgroundColor) + "; "
      }
    }
    if (c.borderColor) {
      var d = $KW.skins.validateHexValue(c.borderColor);
      if (d) {
        b += "border-color : " + $KW.skins.convertHexValuetoRGBA(c.borderColor) + "; "
      }
    }
    if (c.borderWidth) {
      b += "border-width : " + c.borderWidth + "px; "
    }
    if (c.cornerRadius) {
      b += "border-radius : " + c.cornerRadius + "px; "
    }
    if (c.wType != "DataGrid") {
      b += $KW.skins.getMarginSkin(c, a)
    }
    if (c.wType != "Browser" && c.wType != "Segment" && c.wType != "FlexContainer" && c.wType != "FlexScrollContainer") {
      b += $KW.skins.getPaddingSkin(c)
    }
    return b
  },
  getMarginSkin: function(b, a) {
    if ($KU.isFlexWidget(b)) {
      return ""
    }
    a = a || {};
    var d = b.parent;
    var c = b.margin;
    if ($KG.appbehaviors && $KG.appbehaviors.applyMarginPaddingInBCGMode == true) {
      if ($KU.isArray(c)) {
        return "margin:" + $KU.joinArray(c, "% ") + "%;"
      } else {
        return "margin:0;"
      }
    } else {
      if ((!d || (d.wType == "HBox" && a.ispercent == false)) || (d.wType != "HBox" && !(d.wType == "ScrollBox" && d.orientation == constants.BOX_LAYOUT_HORIZONTAL))) {
        if ($KU.isArray(c)) {
          return "margin:" + $KU.joinArray(c, "% ") + "%;"
        } else {
          return "margin:0;"
        }
      } else {
        return ""
      }
    }
  },
  getChildMarginAsPaddingSkin: function(b) {
    var e = $KU.getParentModel(b);
    if (($KG.appbehaviors.applyMarginPaddingInBCGMode == true)) {
      return ""
    }
    var d = b.margin;
    var a = 0;
    if ($KU.isArray(d) && e && e.wType == "ScrollBox" && e.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
      var c = e.totalWt;
      while (a < 4) {
        d[a] = c && (d[a] * 100) / c;
        a++
      }
      return "padding:" + $KU.joinArray(d, "% ") + "%;"
    }
    if ($KU.isArray(d)) {
      return "padding:" + $KU.joinArray(d, "% ") + "%;"
    } else {
      return ""
    }
  },
  getPaddingSkin: function(c) {
    if (c.wType != "DataGrid" && ($KU.isFlexContainer(c) || $KU.isFlexWidget(c))) {
      return ""
    }
    var f = c.parent;
    var e = c.padding;
    var d = c.margin;
    if ((typeof($KG.appbehaviors.parentLevelPadding) == "undefined" || $KG.appbehaviors.parentLevelPadding == true) && $KG.appbehaviors.applyMarginPaddingInBCGMode == false && f != null && f.wType == "HBox" && f.percent == true) {
      if (e && $KU.isArray(e) && d && $KU.isArray(d)) {
        var g = 100 / (c.containerweight - (parseInt(d[0 + IndexJL]) + parseInt(d[2 + IndexJL])));
        var a = [];
        var h = c.padding;
        for (var b = 0; b < h.length; b++) {
          a[b] = h[b] * g
        }
        return "padding:" + $KU.joinArray(a, "% ") + "%;"
      }
    } else {
      if ($KU.isArray(e)) {
        return "padding:" + $KU.joinArray(e, "% ") + "%;"
      } else {
        return "padding:0%;"
      }
    }
  },
  setMarginPadding: function(e, c, f, b, a) {
    var e = $KW.Utils.getWidgetNode(f);
    if (e) {
      if (typeof a != "number") {
        a = 100
      }
      var g = $KW.skins.getMarPadAdjustedContainerWeightSkin(f, a);
      e.className = e.className.replace(/\kwt/g, "_");
      var d = f.parent;
      if (($KG.appbehaviors && $KG.appbehaviors.applyMarginPaddingInBCGMode == false) && (d && d.percent && (d.wType == "HBox" || (d.wType == "ScrollBox" && d.orientation == constants.BOX_LAYOUT_HORIZONTAL)))) {
        $KU.addClassName(e, "kwt100");
        c = "padding";
        e = e.parentNode;
        e.style[c] = $KU.joinArray(b, "% ") + "%"
      } else {
        if (!((d.wType == "HBox" || d.wType == "ScrollBox") && !d.percent)) {
          $KU.addClassName(e, g)
        }
        e.style[c] = $KU.joinArray(b, "% ") + "%"
      }
    }
  },
  getMarAdjustedContainerWeightSkin: function(c, b) {
    var a = b || ((c.wType == "HBox") ? "100" : c.containerweight);
    if (a) {
      var d = c.margin;
      if (d) {
        a -= (parseInt(d[0 + IndexJL]) + parseInt(d[2 + IndexJL]))
      }
      if (c.padding && kony.appinit.isIE7) {
        var e = c.padding;
        a -= (parseInt(e[0 + IndexJL]) + parseInt(e[2 + IndexJL]))
      }
      $KW.skins.addWidthRule(a);
      return "kwt" + a
    } else {
      return "kwt100"
    }
  },
  addWidthRule: function(a) {
    if (a > 100 && $KG.cwtexists.indexOf(a) == -1) {
      $KG.cwtexists.push(a);
      var b = window.document.styleSheets;
      var e = $KW.Utils.getKonyStyleSheetIndex(b);
      if (e != -1) {
        var c = b[e];
        var d = c.cssRules || c.rules;
        if (c.insertRule) {
          c.insertRule(".kwt" + a + "{width:" + a + "%;}", d.length)
        } else {
          c.addRule(".kwt" + a, "width:" + a + "%;")
        }
      }
    }
  },
  getMarPadAdjustedContainerWeightSkin: function(c, b) {
    var a = b || c.containerweight;
    if (a) {
      try {
        var d = c.margin;
        if (d) {
          a -= (parseInt(d[0 + IndexJL]) + parseInt(d[2 + IndexJL]))
        }
        if (c.padding && kony.appinit.isIE7) {
          var g = c.padding;
          a -= (parseInt(g[0 + IndexJL]) + parseInt(g[2 + IndexJL]))
        }
        return "kwt" + a
      } catch (f) {
        console.error("Error occured in getting container weight " + f)
      }
    } else {
      return "kwt100"
    }
  },
  getWidgetSkin: function(c, b) {
    var e;
    if (b && b.container) {
      var d = b.container.widgetsData;
      var a = d[c.id];
      if (a && a.skin) {
        e = a.skin
      }
    }
    return e || c.skin || this.getDefaultSkin(c) || ""
  },
  getDefaultSkin: function(a) {
    var b = "";
    if (a.wType == "Link" || a.wType == "Label" || a.wType == "Button" || a.wType == "DataGrid" || a.wType == "RichText" || a.wType == "CheckBoxGroup" || a.wType == "RadioButtonGroup" || a.wType == "ComboBox" || a.wType == "ListBox" || a.wType == "Switch") {
      b = "konycustomcss"
    }
    return b
  },
  getWidgetSkinList: function(c, a, d) {
    var e = [];
    a = a || {};
    if (!(c.wType == "FlexContainer" && c.parent && c.parent.wType == "TabPane")) {
      e.push(this.getWidgetWeight(c, a));
      if (c.wType != "Form") {
        e.push(this.getWidgetSkin(c, a))
      }
    }
    var b = $KU.isFlexWidget(c);
    if (!b && (!$KW.Utils.isWidgetVisible(c, a) || (d && d.length <= IndexJL))) {
      e.push("hide")
    }
    return e.join(" ")
  },
  getVisibilitySkin: function(a) {
    var b = $KU.isFlexWidget(a);
    return (!b && !a.isvisible) ? " hide " : ""
  },
  getWidgetWeight: function(b, a) {
    var c = b.parent;
    if (c && ((c.wType == "HBox" || c.wType == "ScrollBox") && c.percent == false) || $KU.isFlexWidget(b)) {
      return ""
    }
    if (c && ($KG.appbehaviors && $KG.appbehaviors.applyMarginPaddingInBCGMode == false && c.wType == "HBox")) {
      return "kwt100"
    } else {
      return this.getMarAdjustedContainerWeightSkin(b, 100)
    }
  },
  getWidgetSelectionSkin: function(a) {
    if (a.wType == "Label" || a.wType == "Button" || a.wType == "Line" || a.wType == "Link" || a.wType == "Switch" || a.wType == "ListBox" || a.wType == "CheckBoxGroup" || a.wType == "ComboBox" || a.wType == "RadioButtonGroup" || a.wType == "Calendar") {
      return (a.wType == "Label" && a.textCopyable) ? "enableSelection" : "disableSelection"
    }
    return ""
  },
  getSplitSkinsBetweenWidgetAndParentDiv: function(d, c) {
    var f = new Array();
    var e = "";
    var b = "";
    var g = "";
    if (d.wType == "HBox" || d.wType == "VBox") {
      g = this.getMarPadAdjustedContainerWeightSkin(d, 100)
    } else {
      g = this.getMarAdjustedContainerWeightSkin(d, 100)
    }
    var a = this.getWidgetSkin(d, c);
    f[0] = e + " " + b + "  " + a + " ";
    f[1] = g;
    f[2] = e + " " + b + "  " + a + " " + g;
    return f
  },
  getWidgetAlignmentSkin: function(a) {
    var b = (a.wType == "IGallery" ? "middleleftalign" : "middlecenteralign");
    if (a.wType == "HBox" || a.wType == "ScrollBox") {
      return this.getBoxAlignment(a)
    }
    return this.getAlignment(a.widgetalign || a.widgetalignment) || b
  },
  getAlignment: function(a) {
    switch (parseInt(a)) {
      case 1:
        return "topleftalign";
      case 2:
        return "topcenteralign";
      case 3:
        return "toprightalign";
      case 4:
        return "middleleftalign";
      case 5:
        return "middlecenteralign";
      case 6:
        return "middlerightalign";
      case 7:
        return "bottomleftalign";
      case 8:
        return "bottomcenteralign";
      case 9:
        return "bottomrightalign"
    }
    return ""
  },
  getContentAlignment: function(a, b) {
    var b = b || a.contentalignment;
    if (a.wType == "DataGrid") {
      return this.getAlignment(b)
    }
    switch (parseInt(b)) {
      case 1:
      case 4:
      case 7:
        return "left";
      case 2:
      case 5:
      case 8:
        return "center";
      case 3:
      case 6:
      case 9:
        return "right"
    }
    return "left"
  },
  getBoxAlignment: function(b) {
    var a = "middlecenteralign";
    if (b.wType == "VBox") {
      switch (parseInt(b.widgetdirection)) {
        case 0:
          a = "topcenteralign";
          break;
        case 1:
          a = "middlecenteralign";
          break;
        case 2:
          a = "bottomcenteralign";
          break
      }
    } else {
      switch (parseInt(b.widgetdirection)) {
        case constants.BOX_LAYOUT_ALIGN_FROM_LEFT:
          a = "middleleftalign";
          break;
        case constants.BOX_LAYOUT_ALIGN_FROM_CENTER:
          a = "middlecenteralign";
          break;
        case constants.BOX_LAYOUT_ALIGN_FROM_RIGHT:
          a = "middlerightalign";
          break
      }
    }
    return a
  },
  validateHexValue: function(a) {
    return (/(^[0-9A-F]{8}$)|(^[0-9A-F]{6}$)/i.test(a))
  },
  convertHexValuetoRGBA: function(h) {
    var f = h.charAt(0) + h.charAt(1);
    var e = h.charAt(2) + h.charAt(3);
    var c = h.charAt(4) + h.charAt(5);
    var d = 0;
    if (h.length == 6) {
      return "#" + f + e + c
    }
    if (h.length > 6 && h.length <= 8) {
      d = h.charAt(6) + h.charAt(7)
    }
    f = parseInt(f, 16);
    e = parseInt(e, 16);
    c = parseInt(c, 16);
    d = ((100 - parseInt(d, 16)) / 100).toFixed(2);
    return "rgba(" + f + "," + e + "," + c + "," + d + ")"
  }
};
$KW.Utils = {
  getBaseHtml: function(f, e, k, h, l) {
    var c = f.tabId || "";
    var j = e.tabID || "";
    var d = k ? f.id : (f.pf + (c && ("_" + c)) + "_" + f.id);
    var o = e.tabpaneID || "";
    var p = (e.container && e.container.id) || "";
    var b = f.tooltip || "";
    var n = this.isWidgetDisabled(f, e) || false;
    if (p && (f.wType == "Calendar")) {
      d = d + "_" + e.container.counter
    }
    if (o) {
      f.tabpaneId = o
    }
    if (p) {
      f.containerId = p
    }
    var g = n ? (" kdisabled='true' " + ((f.wType != "Image" && f.wType != "HBox" && f.wType != "VBox" && f.wType != "Link" && f.wType != "Label") ? "disabled=" + n : "")) : "";
    var a = f.contextmenu || "";
    var q = $KU.getAccessibilityValues(f);
    var m = "";
    if (f.onhover) {
      m = "onmouseenter= '$KI.HoverEvent.executeHoverEvent(event, this)' onmousemove= '$KI.HoverEvent.executeHoverEvent(event, this)' onmouseout= '$KI.HoverEvent.executeHoverEvent(event, this)'"
    }
    if (f.wType == "Image" || f.wType == "Switch" || f.wType == "Link" || f.wType == "Label" || f.wType == "RichText" && f.wType != "ScrollBox") {
      q += " tabindex='0'"
    }
    return q + " id='" + d + "' kwidgettype='" + f.wType + "' kformname='" + f.pf + "'" + (o && " ktabpaneid='" + o + "'") + (j && " ktabid='" + j + "'") + (p && " kcontainerID = '" + p + "'") + (a && " kcontextmenuid = '" + a.id + "'") + g + (b ? " title= '" + b + "'" : "") + m + " "
  },
  isWidgetDisabled: function(a, b) {
    if (b && b.container && b.container.widgetsData) {
      return this.isContainerWidgetDisabled(a, b)
    }
    if (a.disabled) {
      return true
    }
    var d = a.pf;
    var c = a.parent;
    while (c) {
      if (c.disabled || (d == (c.parent && c.parent.id))) {
        return c.disabled
      }
      c = c.parent
    }
  },
  isContainerWidgetDisabled: function(a, c) {
    var f = c.container.widgetsData;
    var b = f[a.id];
    if (b && b.enable != undefined && b.enable == false) {
      return true
    }
    var h = a.pf;
    var e, d;
    var g = a.parent;
    while (g) {
      e = f[g.id];
      d = (e && e.enable != undefined && e.enable == false);
      if (d || (c.container.id == g.id)) {
        return d
      }
      g = g.parent
    }
  },
  isWidgetVisible: function(a, c) {
    if (c && c.container && c.container.widgetsData) {
      var d = c.container.widgetsData;
      var b = d[a.id];
      if (b) {
        return (b.visible != undefined ? b.visible : a.isvisible)
      }
    }
    return a.isvisible
  },
  initializeNewWidgets: function(m) {
    if (m && m.length > 0) {
      for (var e = 0; e < m.length; e++) {
        var d = m[e];
        var j = d.wType;
        switch (j) {
          case "Segment":
            var g = $KU.getNodeByModel(d);
            if (g) {
              if (d.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
                $KG[g.id] = new $KW.touch.pageviewScroller(g, {
                  widgetModel: d
                });
                $KW.touch.computeWidths(g, d)
              }
              if (d.screenLevelWidget || d.needScroller) {
                d.needScroller && $KU.setScrollHeight(d, g)
              }
            }
            break;
          case "HStrip":
            var c = $KU.getNodeByModel(d);
            if (c) {
              if (d.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW) {
                $KW.HStrip.initializeStripView(c)
              }
              if (d.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_PAGEVIEW) {
                $KG[c.id] = new $KW.touch.pageviewScroller(c, {
                  widgetModel: d
                });
                $KW.HStrip.initializePageView(d, false, c);
                $KW.touch.computeWidths(c, d)
              }
              if (d.viewtype == constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_SLOTVIEW) {
                $KW.HStrip.initializeSlotView(d)
              }
            }
            break;
          case "ScrollBox":
            var o = $KU.getNodeByModel(d);
            if (o) {
              var n = o.parentNode.parentNode;
              $KW.Scroller.initialize([n], "ScrollBox");
              $KU.setScrollHeight(d, o)
            }
            break;
          case "FlexScrollContainer":
            break;
          case "Slider":
            var b = $KU.getNodeByModel(d);
            if (b) {
              $KW.Slider.attachSliderEvents(b.childNodes[0]);
              kony.events.addEventListener(b.parentNode, "click", $KW.Slider.slideClick)
            }
            break;
          case "Switch":
            var h = $KU.getNodeByModel(d);
            if (h) {
              $KW.Switch.adjustWidth(d, h, true);
              $KW.Switch.adjustHeight(d, h)
            }
            break;
          case "Video":
            if ($KU.isAndroid) {
              var a = $KU.getNodeByModel(d);
              kony.events.addEventListener(a, "click", function(p) {
                p = p || window.event;
                p.srcElement.play()
              }, false)
            }
            break;
          case "TabPane":
            var l = $KU.getNodeByModel(d);
            l && $KW.TabPane.setTabsHeight(l.id);
            $KW.touch.computeSnapWidths(l.id, "Tabpane");
            if (d.needScroller && l) {
              $KU.setScrollHeight(d, l)
            }
            break;
          case "Map":
            $KW.Map.loadMapScripts();
            $KW.Map.setUpInteractiveCanvasMap();
            $KW.Map.setMapsHeight(d.pf);
            break;
          case "Browser":
            var f = $KU.getNodeByModel(d);
            if (f && d.needScroller) {
              $KU.setScrollHeight(d, f)
            }
            break;
          case "Label":
            var k = $KU.getNodeByModel(d);
            if (k && d.linespacing) {
              $KW.Label.updateLineHeight(d, k)
            }
            break
        }
        if (d.ownchildrenref) {
          this.initializeNewWidgets(d.ownchildrenref);
          $KW.Utils.initializeGestures(d)
        }
        $KW.Utils.initializeGestures({
          newwidget: d
        })
      }
    }
  },
  reinitializeWidgets: function(b) {
    var h = b.ownchildrenref;
    for (var f = 0; f < h.length; f++) {
      var c = h[f];
      var g = c.wType;
      switch (g) {
        case "ScrollBox":
          var j = $KU.getNodeByModel(c);
          $KW.ScrollBox["updateView"](c, "totalWt", c.totalWt);
          $KU.setScrollHeight(c, j);
          break;
        case "Slider":
          var a = $KU.getNodeByModel(c);
          $KW.Slider.imgLoad(a.childNodes[0]);
          break;
        case "Calendar":
          var e = $KU.getNodeByModel(c);
          $KW.Calendar.setCalElementStyle(e.childNodes[0], true);
          break;
        case "Switch":
          var d = $KU.getNodeByModel(c);
          $KW.Switch.adjustWidth(c, d, false);
          $KW.Switch.adjustHeight(c, d);
          break;
        case "DataGrid":
          break
      }
      if (c.ownchildrenref) {
        this.reinitializeWidgets(c)
      }
    }
  },
  resizeMap: function(b) {
    var c = document.querySelector("#" + b.pf + " div[kwidgettype='googlemap']");
    if (c) {
      var a = $KU.getModelByNode(c);
      if (a.mapSource == "non-native") {
        google.maps.event.trigger($KW.Map.map, "resize")
      }
    }
  },
  updateContent: function(c, k, j, b, e, l) {
    var h = c[k];
    if (c.wType == "Segment" && c.hasSections && h && !["setdata", "removeall"].contains(b)) {
      $KW.Segment.updateSectionContent(h, j, b, e, l);
      return
    }
    switch (b) {
      case "setdata":
        c.canUpdateUI = false;
        c[k] = j;
        c.canUpdateUI = true;
        break;
      case "setdataat":
        c[k] && c[k].length > e && c[k].splice(e, 1, j);
        break;
      case "addall":
        var f = IndexJL ? [null] : [];
        var g;
        c.canUpdateUI = false;
        c[k] = c[k] || f;
        if (IndexJL && !j[0] && (j[1] && !j[1].template)) {
          g = $KU.cloneObj(j);
          g.shift()
        }
        c.canUpdateUI = true;
        $KU.addArray(c[k], g || j);
        break;
      case "addat":
      case "adddataat":
        if (c[k]) {
          var a = c[k].length - IndexJL;
          e = (e <= IndexJL) ? IndexJL : (e > a ? a + 1 : e);
          if ($KU.isArray(j)) {
            for (var d = IndexJL; d < j.length; d++) {
              c[k].splice(e++, 0, j[d])
            }
          } else {
            if (!c[k] || c[k].length <= IndexJL) {
              c[k] = (IndexJL) ? [null] : [];
              c[k].push(j)
            } else {
              c[k].splice(e, 0, j)
            }
          }
        }
        break;
      case "removeall":
        c.canUpdateUI = false;
        c[k] = j;
        c.canUpdateUI = true;
        if (c.wType == "Segment" && c.behavior != "default") {
          c.selectedindices = null
        }
        break;
      case "removeat":
        (c[k] && c[k].length >= e && c[k][e]) && c[k].splice(e, 1);
        break
    }
  },
  updateContainerData: function(f, b, e) {
    var d = $KU.getParentByAttribute(b, "index");
    if (d) {
      var a = d.parentNode.parentNode;
      var c = $KU.getModelByNode(a);
      $KW[c.wType].updateData(f, b, c, d, e)
    } else {
      $KW.MenuContainer && $KW.MenuContainer.eventHandler(f, b)
    }
  },
  updateContainerMasterData: function(b, d, g, a) {
    var e = b.widgetdatamap;
    if (e) {
      e = $KU.isArray(e) ? e[IndexJL] : e
    }
    var f = e ? e[g.id] : g.id;
    var c = d[f];
    if (c instanceof Object) {
      if (g.wType == "Calendar") {
        c.date = g.date;
        c.day = g.day;
        c.month = g.month;
        c.year = g.year;
        c.datecomponents = g.datecomponents;
        c.dateComponents = g.datecomponents
      } else {
        if (g.wType == "CheckBoxGroup") {
          $KW.Utils.setSelectedKeys(c, a.checked, (c.selectedkeys || c.selectedKeys) || (IndexJL == 1 ? [null] : []), a.value);
          $KW.Utils.setSelectedValueProperty(c, (c.masterData || c.masterdata), "selectedkeys");
          c.selectedKeys = c.selectedkeys;
          c.selectedKeyValues = c.selectedkeyvalues
        } else {
          if (g.wType == "RadioButtonGroup" || g.wType == "ComboBox") {
            c.selectedkey = g.selectedkey;
            c.selectedKey = g.selectedkey;
            $KW.Utils.setSelectedValueProperty(c, c.masterData || c.masterdata, "selectedkey")
          } else {
            if (g.wType == "TextField" || g.wType == "TextArea") {
              c.text = g.text
            }
          }
        }
      }
    } else {
      if (g.wType != "Link" && (g.wType == "TextField" || g.wType == "TextArea")) {
        d[f] = g.text
      }
    }
    this.updateChildModel(g, c);
    if (g.wType == "ComboBox") {
      $KW.ComboBox.resetOption(g, a, g.masterdata)
    }
    if (g.ondone || g.onDone) {
      $KU.returnEventReference(g.ondone || g.onDone)(g)
    } else {
      if (g.onSelection || g.onselection) {
        $KU.returnEventReference(g.onselection || g.onSelection)(g)
      }
    }
  },
  updateContainerDataInDOM: function(b, d) {
    var a = $KW.Utils.getContainerModelById(b, d);
    if (a) {
      if (a.wType == "Segment") {
        var c;
        var j = $KU.getParentByAttribute(b, "index");
        var e = parseInt(j.getAttribute("index"));
        if (a.hasSections) {
          var g = j.getAttribute("secindex").split(",");
          var h = parseInt(g[0]);
          var f = parseInt(g[1]);
          c = (f == -1) ? a.data[h][IndexJL] : a.data[h][IndexJL + 1][f]
        } else {
          c = a.data[e]
        }
        b.dataObj = {
          data: c,
          map: a.widgetdatamap,
          containerModel: a
        }
      }
    }
  },
  getContainerModelById: function(b, a) {
    var c = b;
    if (a) {
      var d;
      while (c) {
        d = c.id;
        if (d) {
          d = d.substring(d.lastIndexOf("_") + 1)
        }
        if (d == a) {
          break
        }
        c = c.parentNode
      }
    }
    return c ? $KU.getModelByNode(c) : ""
  },
  getSegProperty: function(b) {
    var a = $KU.segmentKeyMap[b];
    return a || b
  },
  updateChildModel: function(e, c) {
    e.canUpdateUI = false;
    if (c instanceof Object) {
      var b = (e.wType == "RadioButtonGroup" || e.wType == "ComboBox" || e.wType == "CheckBoxGroup" || e.wType == "ListBox");
      if (b) {
        e.masterdata = "";
        e.masterdatamap = "";
        if (e.wType == "RadioButtonGroup" || e.wType == "ComboBox") {
          e.selectedkey = null;
          !IndexJL && (c.selectedkey = c.selectedKey)
        }
        if (e.wType == "CheckBoxGroup" || e.wType == "ListBox") {
          e.selectedkeys = null;
          !IndexJL && (c.selectedkeys = c.selectedKeys)
        }
      }
      for (var d in c) {
        var a = $KW.Utils.getSegProperty(d).toLowerCase();
        if (a == "disabled") {
          e[a] = !c[d]
        } else {
          e[a] = c[d]
        }
        if (e.wType == "Image") {
          if (d == "base64") {
            e.srcType = 2
          } else {
            if (d == "src") {
              e.srcType = 1
            }
          }
        }
        if (e.wType == "HBox" || e.wType == "VBox") {
          if (c.isVisible != undefined) {
            e.isvisible = c.isVisible
          }
        }
        if (b && c.masterData && c.masterData.length > IndexJL && (a == "selectedkeys" || a == "selectedkey")) {
          $KW.Utils.setSelectedValueProperty(c, c.masterData, a, c[d])
        }
      }
    } else {
      if (e.wType != "Image") {
        e.text = c
      } else {
        e.src = c;
        e.srcType = 1
      }
    }
    e.canUpdateUI = true
  },
  updateLayoutData: function(e, c, g) {
    if (g instanceof Object) {
      for (var f in g) {
        if (f != "template" && f != "children" && f != "metaInfo") {
          var b = f;
          if (e.widgetdatamap) {
            b = kony.utils.getKey(e.widgetdatamap, f)
          }
          var d = c.parent;
          var a = d ? d[b] : c[b];
          if (a) {
            this.updateChildModel(a, g[f])
          }
        }
      }
    }
  },
  setSelectedKeys: function(b, d, c, e) {
    var a = $KU.inArray(c, e);
    if (d && !a[0]) {
      c.push(e)
    } else {
      if (a[0]) {
        c.splice(a[1], 1)
      }
    }
    b.selectedkeys = c.length > IndexJL ? c : null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      b.selectedKeys = b.selectedkeys
    }
  },
  setSelectedValueProperty: function(c, k, h, g) {
    switch (h) {
      case "selectedkey":
        var e = g || c.selectedkey;
        for (var d = IndexJL; d < (k.length); d++) {
          var j = k[d][IndexJL];
          if (e == j) {
            c.selectedkeyvalue = k[d];
            if (kony.appinit.isIE7 || kony.appinit.isIE8 || g) {
              c.selectedKeyValue = c.selectedkeyvalue
            }
            break
          }
        }
        break;
      case "selectedkeys":
        var a = [];
        var b = g || c.selectedkeys;
        var f = false;
        if (IndexJL == 1) {
          a = [null]
        }
        for (d = IndexJL; d < (k.length); d++) {
          var j = k[d][IndexJL];
          if ($KU.inArray(b, j)[0]) {
            a.push(k[d]);
            f = true
          }
        }
        c.selectedkeyvalues = f ? a : null;
        if (kony.appinit.isIE7 || kony.appinit.isIE8 || g) {
          c.selectedKeyValues = c.selectedkeyvalues
        }
        break
    }
  },
  getMasterData: function(d) {
    var g = $KU.cloneObj(d.masterdata);
    if (!g) {
      var f = d.masterdatamap;
      if (f) {
        g = this.convertmap(d.masterdatamap)
      }
    }
    if (g) {
      var e;
      if (d.needsectionheaders) {
        var a;
        for (var c = IndexJL; c < g.length; c++) {
          a = g[c][1 + IndexJL];
          for (var b = IndexJL; b < a.length; b++) {
            if (g[c][1 + IndexJL] && typeof(e) != "number" && g[c][1 + IndexJL].toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
              g[c][1 + IndexJL] = $KU.getI18NValue(g[c][1 + IndexJL])
            }
          }
        }
      } else {
        for (var c = IndexJL; c < g.length; c++) {
          if (g[c][1 + IndexJL] && typeof(g[c][1 + IndexJL]) != "number" && g[c][1 + IndexJL].toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
            g[c][1 + IndexJL] = $KU.getI18NValue(g[c][1 + IndexJL])
          }
        }
      }
    }
    return g || []
  },
  convertmap: function(b) {
    var f = b.length;
    var j = b[f - 2];
    var g = b[f - 1];
    var c = b[IndexJL];
    var k = [];
    if (IndexJL == 1) {
      k = [null]
    }
    for (var e = IndexJL; e < (c.length); e++) {
      var h = c[e][j];
      var a = c[e][g];
      var d = c[e]["accessibilityConfig"];
      if (a != "" && h != "") {
        if (IndexJL == 1) {
          k.push([null, h, a])
        } else {
          k.push(d ? [h, a, d] : [h, a])
        }
      }
    }
    return k
  },
  updateDOMSkin: function(d, e, g) {
    var c = $KU.getNodeByModel(d);
    if (!c) {
      return
    }
    if (d.wType == "Phone") {
      var b = c.childNodes[0];
      $KU.removeClassName(b, g);
      $KU.addClassName(b, e)
    }
    if (d.wType == "Switch") {
      var a = c.childNodes[0];
      var f = c.childNodes[2];
      $KU.removeClassName(a, g + "on");
      $KU.removeClassName(f, g + "off");
      $KU.addClassName(a, e + "on");
      $KU.addClassName(f, e + "off")
    }
    if (d.wType == "ScrollBox") {
      while (c.parentNode.id != d.pf + "_" + d.id + "_parent") {
        c = c.parentNode
      }
    }
    $KU.removeClassName(c, g);
    $KU.addClassName(c, e)
  },
  updateFocusSkin: function(c, b) {
    var a = c[b];
    var g;
    if (c.wType === "TabPane") {
      a = c.activefocusskin
    }
    var h, f;
    var e = "#" + c.pf + "_" + c.id;
    switch (c.wType) {
      case "TextArea":
      case "RichText":
      case "TextField":
        h = e;
        break;
      case "RadioButtonGroup":
      case "CheckBoxGroup":
        h = e + ">div";
        break;
      case "DataGrid":
        h = e + " tbody tr";
        break;
      case "Segment":
        h = e + " [index]";
        break;
      case "Calendar":
        h = e;
        break;
      case "HStrip":
      case "IGallery":
        h = e + "_img";
        break;
      case "TabPane":
        if (c.viewtype && (c.viewtype === "tabview")) {
          a = a + "lia";
          g = c.activefocusskin + "li";
          h = e + "_Header li div[kwidgettype]";
          f = e + "_Header li"
        } else {
          h = e + " div[active]"
        }
        break;
      case "MenuContainer":
        h = e + " .KMenu li > div";
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          h = e + " .KMenu LI > DIV"
        }
        break;
      default:
        h = e
    }
    var d = (b == "focusskin" || b == "rowfocusskin") ? ":active" : ":hover";
    if (c.wType == "TextField" || c.wType == "TextArea") {
      d = (b == "focusskin") ? ":focus" : ":hover";
      d += (!kony.appinit.isIE7 && !kony.appinit.isIE8 && d == ":focus" ? ":not([kdisabled='true'])" : "")
    } else {
      d = (b == "focusskin" || b == "rowfocusskin") ? ":active" : ":hover";
      d += (!kony.appinit.isIE7 && !kony.appinit.isIE8 && d == ":active" ? ":not([kdisabled='true'])" : "")
    }
    h += d;
    this.applyStyle(a, h, c.wType);
    if (c.wType == "MenuContainer") {
      this.applyStyle(a, e + " .KMenu li td > div:hover", c.wType);
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        this.applyStyle(a, e + " .KMenu LI TD > DIV:hover", c.wType)
      }
    }
    if (c.viewtype && (c.viewtype == "tabview")) {
      f += d;
      this.applyStyle(g, f)
    }
    if (c.wType == "ListBox") {
      this.applyStyle(a + " option", h + " option")
    }
  },
  applyStyle: function(e, h, a) {
    var b = window.document.styleSheets;
    var g = this.getKonyStyleSheetIndex(b);
    if (g != -1) {
      var d = b[g];
      var c = this.getClassIndex(d, e, a);
      this.removeCSSRule(d, h, a);
      if (c != -1) {
        var f = d.cssRules || d.rules;
        if (d.insertRule) {
          d.insertRule(h + "{" + f.item(c).style.cssText + "}", f.length)
        } else {
          d.addRule(h, f.item(c).style.cssText)
        }
      } else {
        kony.print("Specified skin: " + e + " is  not defined in kony.css")
      }
    } else {
      kony.print("Style class not found!")
    }
  },
  removeCSSRule: function(b, c) {
    var a = this.getClassIndex(b, c);
    if (a != -1) {
      if (b.deleteRule) {
        b.deleteRule(a)
      } else {
        b.removeRule(a)
      }
    }
  },
  getKonyStyleSheetIndex: function(f) {
    var d = $KG.imagecat;
    for (var b = 0; b < f.length; b++) {
      var a = f[b].href;
      if (a) {
        var e = a && a.split("/");
        var c = e[e.length - 1];
        if (c && c.indexOf("kony") != -1 && c.indexOf("konyspaiphoneretina") == -1) {
          if (d) {
            if (a.match(d.substring(0, d.length - 1) + ".css")) {
              return b
            }
          } else {
            return b
          }
        }
      }
    }
    console.warn("SPA Stylesheet could not be loaded");
    return -1
  },
  getClassIndex: function(f, d, a) {
    var g = f.cssRules || f.rules;
    var e = 1;
    var c = 0;
    if (d.indexOf("#") == -1) {
      d = "." + d;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        if (a && a != "MenuContainer") {
          e = 2
        }
      }
    }
    for (var b = 0; b < g.length; b++) {
      if (g[b].selectorText == d) {
        e--;
        c = b;
        if (e == 0) {
          return b
        }
      }
    }
    if ((kony.appinit.isIE8 || kony.appinit.isIE7) && c > 0 && e == 1) {
      return c
    }
    return -1
  },
  getScrolledHeight: function() {
    var b = (navigator.appName.indexOf("Netscape") != -1);
    var a = b ? pageYOffset : document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;
    return a
  },
  getViewPortHeight: function() {
    var b = (navigator.appName.indexOf("Netscape") != -1);
    var a = b ? innerHeight : document.documentElement && document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight;
    return a
  },
  getViewPortWidth: function() {
    var b = (navigator.appName.indexOf("Netscape") != -1);
    var a = b ? innerWidth : document.documentElement && document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth;
    return a
  },
  applyBlockUISkin: function(c) {
    var r = this.getScrolledHeight();
    var n = this.getViewPortHeight();
    var j = n + r - 15;
    n = n / 2 + r;
    var s = this.getViewPortWidth();
    s = s / 2;
    if (kony.appinit.isIE8) {
      var g = document.getElementById("blurDiv");
      if (g) {
        return
      }
    }
    var d = undefined;
    var h = undefined;
    var t = undefined;
    if (!c) {
      if (!$KG.blockedSkinModel) {
        return
      }
      d = $KU.getElementById("blurDiv");
      if (!d) {
        console && console.error && console.error("wrong call . look into it");
        return
      }
      c = $KG.blockedSkinModel;
      h = $KG.blockedSkinWidth;
      t = $KG.blockedSkinHeight
    }
    var l = d || document.createElement("div");
    $KG.blockedSkinModel = c;
    l.id = "blurDiv";
    l.className = c.blockeduiskin;
    l.style.position = "fixed";
    var o = window.innerHeight;
    var f = screen.availHeight;
    l.style.backgroundImage = "none";
    !d && document.body.appendChild(l);
    var a = l || $KU.getElementById("blurDiv");
    l.style.backgroundImage = "";
    var b = $KU.getStyle(a, "font-family");
    var m = t || $KU.getStyle(a, "height");
    var p = h || $KU.getStyle(a, "width");
    if (!t) {
      $KG.blockedSkinHeight = m
    }
    if (!h) {
      $KG.blockedSkinWidth = p
    }
    m = m.replace("px", "");
    p = p.replace("px", "");
    l.style.width = "100%";
    var q;
    if ($KG.nativeScroll) {
      var e = document.getElementById("__MainContainer").clientHeight;
      if (e < (window.innerHeight || document.body.clientHeight)) {
        q = (window.innerHeight || document.body.clientHeight) + "px"
      } else {
        q = e + "px"
      }
    } else {
      q = "100%"
    }
    l.style.height = q;
    if (b == "Helvetica") {
      a.style.backgroundImage = "";
      if (p != "auto") {
        a.style.backgroundPosition = (s - (p / 2)) + "px " + (r) + "px"
      }
    } else {
      if (b == "Verdana") {
        if (p != "auto") {
          a.style.backgroundPosition = (s - (p / 2)) + "px " + (n - (m / 2)) + "px"
        }
      } else {
        var k = this.getViewPortHeight() + r;
        if (p != "auto") {
          a.style.backgroundPosition = (s - (p / 2)) + "px " + (k - m) + "px"
        }
      }
    }
  },
  removeBlockUISkin: function() {
    $KG.blockedSkinModel = undefined;
    $KG.blockedSkinWidth = $KG.blockedSkinHeight = undefined;
    var a = $KU.getElementById("blurDiv");
    a && a.parentNode.removeChild(a)
  },
  setProgressIndicator: function(e, a) {
    var c = $KU.getElementById("__progressdiv");
    if (c) {
      c.parentNode.removeChild(c)
    }
    var b = $KU.getModelByNode(e);
    var f = (a && a.skin) || (b && b.skin);
    var d = document.createElement("div");
    d.setAttribute("id", "__progressdiv");
    d.setAttribute("progressindicator", "true");
    d.setAttribute("progressskin", f);
    d.setAttribute("style", "width:" + e.clientWidth + "px;height:" + e.clientHeight + "px;position:absolute;opacity:0.6;");
    return d
  },
  updateNormalImage: function(c) {
    var e = $KU.getNodeByModel(c);
    if (!e || !c.backgroundimage) {
      return
    }
    var b = c.backgroundimage;
    var d = $KW.Utils.getNormalImageStyle(c);
    if (b.index) {
      e = document.querySelectorAll("#" + e.id)[b.index - 1]
    }
    var a = $KU.getImageURL(b.imageurl);
    $KU.imagePreloader(a, function(g, f) {
      return function(j) {
        j = j || window.event;
        var p = j.target || j.srcElement;
        var n = $KU.getModelByNode(g);
        var s = n.backgroundimage;
        if (j.type == "error") {
          if (s.imagewhenfailed) {
            var q = $KU.getImageURL(s.imagewhenfailed);
            var m = s.heightwidth;
            g.style.background = "url(" + q + ") no-repeat center center";
            if (m) {
              g.style.height = m[1] + "px"
            }
            return
          }
        }
        g.setAttribute("style", f);
        g.style.display = (n.isvisible ? "" : "none");
        if (s && s.maintainaspectratio) {
          var r = p.naturalHeight || p.height;
          var o = p.naturalWidth || p.width;
          var l = o / r;
          if (!isNaN(l)) {
            g.setAttribute("aspect-ratio", l);
            var k = g.clientWidth;
            var h = Math.round(1 / l * k);
            g.style.height = h + "px"
          }
        }
      }
    }(e, d))
  },
  getNormalImageStyle: function(c) {
    var d = "";
    var b = c.backgroundimage;
    if (b) {
      var e = b.maintainaspectratio;
      var f = b.heightwidth;
      var a = $KU.getImageURL(b.imageurl);
      d += "background-image: url(" + a + "); background-repeat: no-repeat; "
    }
    if (e) {
      d += "background-size:contain; "
    }
    if (f) {
      d += (e ? "" : " width:" + f[2] + "px;") + "height:" + f[1] + "px;"
    }
    return d
  },
  convertPhoneAlphabetToNumber: function(a) {
    var d = a.length;
    a = a.toLowerCase();
    var c = "";
    for (var b = 0; b < d; b++) {
      var e = a.charAt(b);
      if (c.length > 10) {
        break
      }
      switch (e) {
        case "0":
          c += "0";
          break;
        case "1":
          c += "1";
          break;
        case "2":
          c += "2";
          break;
        case "3":
          c += "3";
          break;
        case "4":
          c += "4";
          break;
        case "5":
          c += "5";
          break;
        case "6":
          c += "6";
          break;
        case "7":
          c += "7";
          break;
        case "8":
          c += "8";
          break;
        case "9":
          c += "9";
          break;
        case "a":
        case "b":
        case "c":
          c += "2";
          break;
        case "d":
        case "e":
        case "f":
          c += "3";
          break;
        case "g":
        case "h":
        case "i":
          c += "4";
          break;
        case "j":
        case "k":
        case "l":
          c += "5";
          break;
        case "m":
        case "n":
        case "o":
          c += "6";
          break;
        case "p":
        case "q":
        case "r":
        case "s":
          c += "7";
          break;
        case "t":
        case "u":
        case "v":
          c += "8";
          break;
        case "w":
        case "x":
        case "y":
        case "z":
          c += "9";
          break
      }
    }
    return c
  },
  getCurrentPosition: function() {
    if (self.pageYOffset) {
      return self.pageYOffset
    }
    if (document.documentElement && document.documentElement.scrollTop) {
      return document.documentElement.scrollTop
    }
    if (document.body.scrollTop) {
      return document.body.scrollTop
    }
    return 0
  },
  scrollTo: function(b, a) {
    if (a && a != "undefined") {
      a = $KU.getElementById(a);
      a.scrollTop = b
    } else {
      window.scrollTo(0, b)
    }
  },
  scrollToElement: function(g, c) {
    var h, a;
    var k = "";
    var d = window[g.pf];
    if (d && d.wType == "Popup") {
      var b;
      var j = $KU.getElementById(d.id + "_titlebar");
      if (j) {
        b = $KU.getElementById(d.id + "_body")
      } else {
        b = d.ismodal ? $KU.getElementById(d.id) : $KU.getElementById(d.id + "_container")
      }
      k = b.id;
      h = b.scrollTop;
      a = this.getOffset(c).top - b.offsetTop
    } else {
      if (d.wType == "Calendar" && c.className.indexOf("grid_Cal_Main") > -1) {
        c = document.querySelectorAll(".grid_Cal_Main")[0]
      } else {
        h = this.getCurrentPosition();
        a = this.getOffset(c).top
      }
    }
    var f = c.getBoundingClientRect();
    if (!(f && f.top >= 0 && f.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {
      this.animateY(h, a, k)
    }
    try {
      c.focus()
    } catch (l) {}
  },
  animateY: function(h, a, j) {
    var b = a > h ? a - h : h - a;
    if (b < 100) {
      $KW.Utils.scrollTo(a, j);
      try {
        el.focus()
      } catch (l) {}
      return
    }
    var f = Math.round(b / 100);
    if (f >= 20) {
      f = 20
    }
    var d = Math.round(b / 25);
    var k = a > h ? h + d : h - d;
    var c = 0;
    if (a > h) {
      for (var g = h; g < a; g += d) {
        setTimeout("$KW.Utils.scrollTo(" + k + ", '" + j + "')", c * f);
        k += d;
        if (k > a) {
          k = a
        }
        c++
      }
    } else {
      for (var g = h; g > a; g -= d) {
        setTimeout("$KW.Utils.scrollTo(" + k + ", '" + j + "')", c * f);
        k -= d;
        if (k < a) {
          k = a
        }
        c++
      }
    }
  },
  getOffset: function(a) {
    var c = a.offsetLeft,
      b = a.offsetTop;
    while (a = a.offsetParent) {
      c += a.offsetLeft;
      b += a.offsetTop
    }
    return {
      left: c,
      top: b
    }
  },
  initializeTemplateGestures: function() {
    if ($KG.gestureTemplates) {
      for (var a = IndexJL; a < $KG.gestureTemplates.length; a++) {
        window[$KG.gestureTemplates[a]] && $KW.Utils.initializeGestures(window[$KG.gestureTemplates[a]]);
        window[$KG.gestureTemplates[a]] && $KW.Utils.initializeGestures({
          templatebox: window[$KG.gestureTemplates[a]]
        })
      }
    }
  },
  initializeGestures: function(l) {
    for (var a in l) {
      var c = l[a];
      if (!c || typeof c != "object" || $KU.isArray(c) || c.id == l.id) {
        continue
      }
      var h = c.gestures;
      if (h) {
        for (var b in h) {
          var n = h[b];
          if (n) {
            for (var f in n) {
              var j = n[f];
              $KW.Utils.removegesture(c, j.gestureType, false, j.gestureIdentifier, j.gestureObj);
              new $KW.touch.gesture(c, j)
            }
          }
        }
      }
      var g = c.touches;
      if (g) {
        for (var b in g) {
          var e = g[b];
          if (e) {
            $KW.Utils.removetouch(c, b, false);
            var d = $KW.Utils.getWidgetNode(c);
            if (d) {
              if (d.id && d.id.indexOf("_scroller") > 0) {
                d = d.childNodes[0]
              }
              c.touches[b]["instance"] = new $KW.touch.TouchEvents(c, d, b, e.callback)
            }
          }
        }
      }
    }
    var m = l.gestures;
    if (m) {
      for (var b in m) {
        var n = m[b];
        if (n) {
          for (var f in n) {
            var j = n[f];
            $KW.Utils.removegesture(l, j.gestureType, false, j.gestureIdentifier, j.gestureObj);
            new $KW.touch.gesture(l, j)
          }
        }
      }
    }
  },
  updateModelWithGesture: function(b, c, e, f) {
    if (!b) {
      b = $KG
    }
    if (!b.gestures) {
      b.gestures = {}
    }
    var a = (c == 1 ? (e.taps == 1 ? 10 : 11) : c);
    if (!b.gestures[a]) {
      b.gestures[a] = []
    }
    var d = {
      gestureObj: e,
      callback: f,
      gestureType: c
    };
    d.gestureIdentifier = (Math.round(new Date().valueOf() * Math.random())) + "";
    b.gestures[a][d.gestureIdentifier] = d;
    return d
  },
  removegesture: function(f, a, c, j, g) {
    var b = (a == 1 ? (g.taps == 1 ? 10 : 11) : a);
    if (f.gestures && f.gestures[b]) {
      var l = f.gestures[b];
      if (j && typeof(j) === "string") {
        l[j]["instance"].removeGesture(a, c);
        if (c) {
          delete l[j]
        }
        return
      }
      for (var d in l) {
        try {
          l[d]["instance"].removeGesture(a, c)
        } catch (h) {
          if (console && console.error) {
            console.error(" remove Gesture " + h)
          }
        }
      }
      if (c) {
        f.gestures[b] = []
      }
    }
  },
  updateModelWithTouches: function(a, b, c) {
    if (!a) {
      a = $KG
    }
    if (!a.touches) {
      a.touches = {}
    }
    if (c) {
      a.touches[b] = {
        callback: c
      }
    } else {
      a.touches[b] = undefined
    }
  },
  removetouch: function(a, c, b) {
    if (a.touches && a.touches[c] && a.touches[c]["instance"]) {
      a.touches[c]["instance"].removeTouch(c, b)
    }
  },
  initializeScrollEvents: function(a, b) {
    for (var c = 0; c < a.length; c++) {
      var d = a[c];
      b = b || $KU.getModelByNode(d);
      if (!b.onScrollStart && !b.onScrolling && !b.onScrollEnd) {
        return
      }
      b.scrollInstance = new $KW.touch.TouchEvents(b, d, "scroll")
    }
  },
  scrollInterface: (function() {
    var a = this;
    var d = true;
    var f = {
      scrollLeft: NaN,
      scrollTop: NaN,
      clientHeight: NaN,
      clientWidth: NaN
    };
    var g = "scrollLeft";
    var e = "scrollTop";
    var c = "clientHeight";
    var j = "clientWidth";
    var b = {
      getScrollX: function() {
        return f[g]
      },
      getScrollY: function() {
        return f[e]
      },
      getClientH: function() {
        return f[c]
      },
      getClientW: function() {
        return f[j]
      }
    };

    function h() {
      if (typeof a.pageXOffset == "number") {
        f = a;
        e = "pageYOffset";
        g = "pageXOffset";
        c = "innerHeight";
        j = "innerWidth"
      } else {
        if ((typeof document.compatMode == "string") && (document.compatMode.indexOf("CSS") >= 0) && (document.documentElement) && (typeof document.documentElement.scrollLeft == "number")) {
          f = document.documentElement
        } else {
          if ((document.body) && (typeof document.body.scrollLeft == "number")) {
            f = document.body
          }
        }
      }
      d = false
    }
    return (function() {
      if (d) {
        h()
      }
      return b
    })
  })()(),
  handleLayout: function(a, d, e) {
    var c = a.context;
    var g = c.tabpaneID;
    c.container = a;
    c.template_generator = d;
    c.tabpaneID = "";
    if (!d.pf) {
      _konyConstNS.Form2.addHeaderorFooter.call(d, d)
    }
    d.isTemplate = true;
    var b = owl.deepCopy(d);
    $KW.Utils.updateLayoutData(a, b, e);
    c.setTopLevelBox(true);
    var f = $KW[b.wType].render(b, c);
    c.setTopLevelBox(false);
    c.tabpaneID = g;
    c.container = "";
    c.template_generator = "";
    return f
  },
  belongsToSegment: function(a) {
    var b = document.getElementById([a.getAttribute("kformname"), a.getAttribute("kcontainerID")].join("_"));
    return b && (b.getAttribute("kwidgettype") == "Segment")
  },
  setScrollWidth: function(c, b) {
    var a = (c.scrollbar == "arrows") ? b.childNodes[1] : b.childNodes[0];
    a.style.width = (a.clientWidth - parseInt($KU.getStyle(b, "padding-right").replace("px", ""), 10) - parseInt($KU.getStyle(b, "padding-left").replace("px", ""), 10)) + "px";
    var d = $KG[c.pf + "_" + c.id + "_scroller"];
    d && d.refresh()
  },
  getTemplateByContainerModelAndRowData: function(c, e, a, b) {
    if (c.wType == "MenuContainer") {
      return e.template || c.menutemplate
    } else {
      if (c.wType == "Segment") {
        if (a) {
          return c.sectionheadertemplate
        } else {
          return e.template || c.rowtemplate
        }
      } else {
        if (c.wType == "DataGrid") {
          if (c.selectedIndex >= IndexJL) {
            var d = c.columnheadersconfig[c.selectedcellindex[0]];
            if (b == "0") {
              return d.columnheadertemplate.template
            }
            return d.columndatatemplate
          }
        }
      }
    }
  },
  getRowDataByContainerModelAndIndex: function(b, a) {
    if (b.wType === "MenuContainer") {
      return $KW.MenuContainer.getDetails(b, a, "item")
    } else {
      if (b.wType === "Segment") {
        return $KW.Segment.getRowDataByIndex(b, a)
      } else {
        if (b.wType === "DataGrid") {}
      }
    }
  },
  getIndexAttrNameByContainerModel: function(a) {
    if (a.wType === "MenuContainer") {
      return "menuindex"
    } else {
      if (a.wType === "Segment") {
        return "index"
      } else {
        if (a.wType === "DataGrid") {
          return "index"
        }
      }
    }
  },
  getOffsetParent: function(b) {
    var a = b.offsetParent || document.documentElement;
    while (a && (!(b.nodeName && b.nodeName.toLowerCase() == "html") && $KU.getStyle(b, "position") === "static")) {
      a = a.offsetParent
    }
    return a || document.documentElement
  },
  getOffset: function(c) {
    var b, d, a = {
      top: 0,
      left: 0
    };
    b = this.getOffsetParent(c);
    d = this.getPosition(c);
    a = this.getPosition(b);
    a.top += $KU.getStyle(b, "borderTopWidth");
    a.left += $KU.getStyle(b, "borderLeftWidth");
    return {
      top: d.top - a.top,
      left: d.left - a.left
    }
  },
  getPosition: function(c) {
    var b = {
        top: 0,
        left: 0
      },
      a = document.documentElement;
    if (typeof c.getBoundingClientRect !== "undefined") {
      b = c.getBoundingClientRect()
    }
    return {
      top: b.top + window.pageYOffset - a.clientTop,
      left: b.left + window.pageXOffset - a.clientLeft
    }
  },
  setFlexContainerStyle: function(m, f) {
    var n, o, l, a;
    var b = m.width;
    b = $KU.isValidCSSLength(b) ? b : $KW.Utils.getDefaultWidth(m, false);
    var d = m.parent;
    if (!d && f.dataObj) {
      d = f.dataObj.containerModel.parent;
      a = f.dataObj.containerModel;
      l = $KW.Utils.getWidgetNode(a)
    } else {
      if (!d) {
        l = f.parentNode
      } else {
        l = $KW.Utils.getWidgetNode(d)
      }
    }
    if (d && d.wType == "TabPane" && $KU.isFlexWidget(d)) {
      a = d;
      d = d.parent
    }
    var c = f;
    if (d && b) {
      var j = $KU.getValueAndUnit(m, b);
      n = j.value;
      o = j.unit;
      if (o == kony.flex.PERCENTAGE) {
        n = (n * l.offsetWidth) / 100
      }
      if (d.percent == false) {
        c.style.width = n + "px"
      } else {
        if (m.hexpand == false) {
          if (n <= c.parentNode.offsetWidth) {
            c.style.width = n + "px"
          }
        }
      }
    }
    var p = m.height;
    if (!$KU.isValidCSSLength(p)) {
      if (m.wType == "FlexContainer" && m.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
        m.layoutModel = {};
        m.autogrowHeight = true;
        p = this.getComputedPreferredHeight(m, f, $KW.FlexLayoutEngine.getAutoGrowFlexHeight(m, f)) + "dp"
      } else {
        p = $KW.Utils.getDefaultHeight(m, false)
      }
    }
    if (p) {
      var j = $KU.getValueAndUnit(m, p);
      n = j.value;
      o = j.unit;
      if (o == kony.flex.PERCENTAGE) {
        if (a && a.wType == "Segment" && !a.needScroller && a.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
          n = 100
        } else {
          if (d && $KU.isFlexContainer(d)) {
            n = (n * l.offsetHeight) / 100
          } else {
            n = (n * l.offsetWidth) / 100
          }
        }
      }
      if (a && a.wType == "Segment" && a.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW && a.needpageindicator) {
        var e = parseInt($KU.getStyle(l, "border-top-width"), 10) + parseInt($KU.getStyle(l, "border-bottom-width"), 10);
        c.style.height = (n - l.childNodes[1].offsetHeight - e) + "px"
      } else {
        if (a && (a.wType == "TabPane") && (!(a.viewconfig.tabViewConfig) || (a.viewconfig.tabViewConfig && (a.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_TOP || a.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_BOTTOM)))) {
          var h = 0;
          if (a.viewtype === "tabview" || a.viewtype === "pageview") {
            var k = $KU.getElementById(a.pf + "_" + a.id + "_Header");
            h = k.offsetHeight
          } else {
            var k = $KU.getElementById(m.pf + "_" + m.id + "_Header");
            h = k.offsetHeight
          }
          c.style.height = (n - h) + "px"
        } else {
          c.style.height = n + "px"
        }
      }
    }
    if (m.wType == "FlexScrollContainer") {
      var g = c.childNodes[0].childNodes[0];
      g.style.width = c.clientWidth + "px";
      g.style.height = c.clientHeight + "px"
    }
    if (m.wType == "FlexContainer") {
      c.childNodes[0].style.height = "100%"
    }
  },
  getFlexLayoutStyle: function(a) {
    var b = [];
    b.push("position:absolute");
    a.zindex && b.push("z-index:" + a.zindex);
    if ($KU.hasTransform) {
      if ($KU.hasWebkitTransform) {
        b.push("-webkit-transform:" + $KW.animUtils.applyTransform(a, a.transform))
      } else {
        b.push("transform:" + $KW.animUtils.applyTransform(a, a.transform))
      }
    }(typeof a.opacity != "undefined") && b.push("opacity:" + a.opacity);
    if (a.wType != "FlexContainer" || a.clipbounds) {
      b.push("border: 0px !important");
      b.push("background: transparent !important")
    }
    return b.join(";")
  },
  getWidth: function(a, o, f, q, r) {
    var e = a.parent;
    var k = false;
    var m;
    var d = o.width;
    if (d) {
      m = (d.value < 0 ? 0 : d.value) + d.unit;
      k = true
    }
    if (!k) {
      var t;
      var h = 0;
      var s = Number.MAX_VALUE;
      var l = o.minWidth;
      var j = o.maxWidth;
      if (l) {
        h = $KU.getValueByParentFrame(a, l, "x");
        h = h < 0 ? 0 : h
      }
      if (j) {
        s = $KU.getValueByParentFrame(a, j, "x");
        s = s < 0 ? 0 : s
      }
      if (e.layouttype == kony.flex.FREE_FORM) {
        var b = e.frame.width;
        var g, c, v;
        if (o.centerX) {
          g = $KU.getValueByParentFrame(a, o.centerX, "x")
        }
        if (o.left) {
          c = $KU.getValueByParentFrame(a, o.left, "x")
        }
        if (o.right) {
          v = $KU.getValueByParentFrame(a, o.right, "x")
        }
        if (o.centerX && o.left) {
          t = (g - c) * 2
        } else {
          if (o.centerX && o.right) {
            t = (b - g - v) * 2
          } else {
            if (o.left && o.right) {
              t = b - c - v
            }
          }
        }
        if (t != undefined) {
          var n = parseInt($KU.getStyle(q, "border-right-width"), 10);
          t = t - n;
          t = (t < 0 ? 0 : t)
        }
      }
      var u = (t != undefined) ? t : $KW.Widget.getPreferredWidth(a, f.childNodes[0], s, r);
      m = this.enforceGivenDimension(u, h, s) + "px"
    }
    if (d || t != undefined) {
      $KW.Utils.setPreferredWidth(a, f)
    }
    if (r == undefined) {
      f.style.width = m
    } else {
      var p = [];
      p.push("width:" + m);
      return p
    }
  },
  enforceGivenDimension: function(a, c, d) {
    var b = a;
    if (c <= d) {
      if (a < c) {
        b = c
      }
      if (a > d) {
        b = d
      }
    }
    return b
  },
  getHeight: function(c, s, g, v, w) {
    var f = c.parent;
    var k = false;
    var o;
    if (c.wType == "FlexContainer") {
      c.autogrowHeight = false
    }
    var a = s.height;
    if (a) {
      o = (a.value < 0 ? 0 : a.value) + a.unit;
      k = true
    }
    if (!k) {
      var l;
      var e = 0;
      var p = Number.MAX_VALUE;
      var b = s.minHeight;
      var q = s.maxHeight;
      if (b) {
        e = $KU.getValueByParentFrame(c, b, "y");
        e = e < 0 ? 0 : e
      }
      if (q) {
        p = $KU.getValueByParentFrame(c, q, "y");
        p = p < 0 ? 0 : p
      }
      if (f.layouttype == kony.flex.FREE_FORM) {
        var x = f.frame.height;
        var j, m, h;
        if (s.centerY) {
          j = $KU.getValueByParentFrame(c, s.centerY, "y")
        }
        if (s.top) {
          m = $KU.getValueByParentFrame(c, s.top, "y")
        }
        if (s.bottom) {
          h = $KU.getValueByParentFrame(c, s.bottom, "y")
        }
        if (s.centerY && s.top) {
          l = (j - m) * 2
        } else {
          if (s.centerY && s.bottom) {
            l = (x - j - h) * 2
          } else {
            if (s.top && s.bottom) {
              l = x - m - h
            }
          }
        }
        if (typeof l != "undefined") {
          var r = parseInt($KU.getStyle(v, "border-bottom-width"), 10);
          l = l - r;
          o = (l < 0 ? 0 : l)
        }
      }
      var n = (typeof l != "undefined") ? l : $KW.Widget.getPreferredHeight(c, g.childNodes[0], p, w);
      if (c.wType == "Image" && c.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        if (typeof l == "undefined") {
          var t = g.childNodes[0];
          var d = {
            width: t.offsetWidth + "px",
            height: t.offsetHeight + "px"
          };
          d = $KU.setImgAspectRatio(c, t.childNodes[0], d, false);
          n = parseInt(d.height, 10)
        }
      }
      o = this.enforceGivenDimension(n, e, p) + "px"
    }
    if (w == undefined) {
      g.style.height = o;
      if (c.wType == "Segment" && c.viewtype == constants.SEGUI_VIEW_TYPE_TABLEVIEW && !c.needScroller && (k || typeof l != "undefined" || q)) {
        c.needScroller = true;
        $KW.Scroller.initialize([g.childNodes[0]], "Segment")
      }
    } else {
      var u = [];
      u.push("height:" + o);
      return u
    }
  },
  setDimensions: function(b, a, h) {
    if (a) {
      a = a.childNodes[0];
      var c = b.parent;
      if (a && b.wType != "Switch") {
        a.style.width = "100%";
        a.style.height = "100%";
        if (b.wType == "FlexContainer") {
          a.childNodes[0].style.height = "100%"
        }
      }
      if (b.wType == "Image") {
        a.style.display = "block";
        var g = a.childNodes[0];
        var f = {
          width: a.offsetWidth + "px",
          height: a.offsetHeight + "px"
        };
        if (b.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          $KU.setImgAspectRatio(b, g, f);
          $KU.getImageCenterAlign(g, true)
        } else {
          if (b.imagescalemode == constants.IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS) {
            $KU.setImgDimensions(b, g, f)
          }
        }
      } else {
        if (b.wType == "Switch") {
          var d = $KU.getNodeByModel(b);
          $KW.Switch.adjustWidth(b, d, true);
          $KW.Switch.adjustHeight(b, d)
        } else {
          if (b.wType == "Slider") {
            var e = $KU.getNodeByModel(b);
            $KW.Slider.imgLoad(e.childNodes[0])
          }
        }
      }
    }
  },
  getDefaultWidth: function(b, a) {
    if (b.wType == "Browser" && !b.htmlstring) {
      return ""
    }
    var c = $KU.widgetsWidthMap[b.wType];
    if (c) {
      return (a == false) ? c : $KU.getComputedValue(b, c)
    }
    return ""
  },
  getDefaultHeight: function(b, a) {
    var c = $KU.widgetsHeightMap[b.wType];
    if (c) {
      return (a == false) ? c : $KU.getComputedValue(b, c)
    }
    return ""
  },
  setPreferredWidth: function(b, a) {
    var c = $KU.inArray($KU.contentDrivenWidgets, b.wType)[0];
    if (c) {
      var d = a.childNodes[0];
      d.style.whiteSpace = "pre-wrap"
    }
  },
  getChildHeight: function(c, b) {
    if (c.autogrowMode == kony.flex.AUTOGROW_HEIGHT) {
      if (c.wType == "FlexContainer") {
        c.autogrowHeight = true;
        var a = b.childNodes[0].getAttribute("kcontainerID");
        a && $KW.Utils.updateContainerDataInDOM(b, a);
        return this.getComputedPreferredHeight(c, b, $KW.FlexLayoutEngine.getAutoGrowFlexHeight(c, b))
      } else {
        if (c.wType == "Segment") {
          b.parentNode.style.height = "auto";
          return this.getComputedPreferredHeight(c, b, $KW.Segment.getAutoGrowSegmentHeight(c, b))
        }
      }
    } else {
      return this.getComputedPreferredHeight(c, b)
    }
  },
  getComputedPreferredHeight: function(e, d, j) {
    var c = e.layoutModel;
    var h = 0;
    var f = Number.MAX_VALUE;
    var g = c.minHeight;
    var b = c.maxHeight;
    if (g) {
      h = $KU.getValueByParentFrame(e, g, "y");
      h = h < 0 ? 0 : h
    }
    if (b) {
      f = $KU.getValueByParentFrame(e, b, "y");
      f = f < 0 ? 0 : f
    }
    if (typeof j == "undefined") {
      j = $KW.Widget.getPreferredHeight(e, d, f);
      if (e.wType == "Image" && e.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        var a = {
          width: d.offsetWidth + "px",
          height: d.offsetHeight + "px"
        };
        a = $KU.setImgAspectRatio(e, d.childNodes[0], a, false);
        j = parseInt(a.height, 10)
      }
    }
    return this.enforceGivenDimension(j, h, f)
  },
  getWidgetDimensions: function(c, b) {
    var e = c.parent;
    if (e && e.frame && typeof e.frame.x != "undefined") {
      var g = b.style.width;
      var d = {
        value: parseFloat(g),
        unit: $KU.getUnit(g)
      };
      g = $KU.getValueByParentFrame(c, d, "x");
      var a = b.style.height;
      var f = {
        value: parseFloat(a),
        unit: $KU.getUnit(a)
      };
      a = $KU.getValueByParentFrame(c, f, "y")
    } else {
      var g = b.offsetWidth;
      var a = b.offsetHeight
    }
    return {
      width: g,
      height: a
    }
  },
  getWidgetFrame: function(b, a, e) {
    var d = (typeof e == "undefined") ? $KW.Utils.getOffset(a) : {
      top: 0,
      left: 0
    };
    var c = this.getWidgetDimensions(b, a);
    return {
      x: parseInt(d.left, 10),
      y: parseInt(d.top, 10),
      width: c.width,
      height: c.height
    }
  },
  setWidgetPosition: function(b, c, a) {
    a = a || $KU.getNodeByModel(b);
    a.style.left = a.style.right = a.style.top = a.style.bottom = "";
    for (var d in c) {
      a.style[d] = c[d]
    }
    if (!a.style.left) {
      a.style.left = "0px"
    }
    if (!a.style.top) {
      a.style.top = "0px"
    }
  },
  saveWidgetFrame: function(a) {
    if (a.wType == "FlexContainer" || a.wType == "FlexScrollContainer") {
      a.oldFrame = owl.deepCopy(a.frame)
    }
  },
  getWidgetNode: function(b, a) {
    if (!b) {
      return null
    }
    var d;
    var c = b.tabId;
    if (c) {
      d = b.pf + "_" + c + "_" + b.id
    } else {
      d = (b.pf ? b.pf + "_" : "") + b.id
    }
    if (b.wType == "Calendar") {
      return a ? a.querySelector("div[kwidgetid=" + d + "]") : document.getElementById(d)
    }
    var e = a ? a.querySelector("#" + d) : document.getElementById(d);
    return $KW.Utils.getWidgetNodeFromNodeByModel(b, e)
  },
  getWidgetNodeFromNodeByModel: function(a, c) {
    if (c) {
      var d = {
        Image: 1,
        Slider: 2,
        FlexContainer: 1,
        DataGrid: 1
      };
      if (a.wType == "Segment" && a.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
        d.Segment = 1
      }
      for (var b = typeof d[a.wType] == "undefined" ? 0 : d[a.wType]; b > 0; --b) {
        c = c.parentNode
      }
      return c
    } else {
      return null
    }
  },
  getWidgetIndex: function(a) {
    var b = a.parent;
    if (b) {
      var d = b.widgets();
      for (var c = 0; c < d.length; c++) {
        if (a.id == d[c].id) {
          return c
        }
      }
    }
    return -1
  },
  setPaddingByParent: function(c, b) {
    if ($KU.isFlexContainer(c) || c.wType == "Slider" || c.wType == "Switch") {
      return
    }
    var f = c.parent;
    var g = c.padding;
    if (f && g && $KU.isArray(g)) {
      var a = "";
      var e = f.frame.width;
      for (var d = 1; d < g.length; d++) {
        a += parseInt((g[d] * e) / 100, 10) + "px "
      }
      a += parseInt((g[0] * e) / 100, 10) + "px ";
      b.style.padding = a
    }
  }
};
$KW.WidgetGenerationContext = function(a) {
  this.formID = a;
  this.topLevelBox = null
};
$KW.WidgetGenerationContext.prototype.setTopLevelBox = function(a) {
  this.topLevelBox = a
};
$KW.unLoadWidget = function() {
  var a = document.querySelector('[selected="progress"]') || document.querySelector('[selected="progressindtr"]');
  if (a) {
    a.removeAttribute("selected")
  }
  a = document.querySelector('[progressindicator="true"]');
  if (a) {
    a.parentNode.removeChild(a)
  }
  $KW.Utils.removeBlockUISkin();
  var c = $KG[kony.constants.SELECTED_ITEM];
  if (c) {
    var b = $KU.getElementById(c.kWidgetID);
    var d = c.kEventHandler;
    d && d(b)
  }
  delete $KG[kony.constants.SELECTED_ITEM]
};
$KW.Camera = {
  render: function(b, a) {
    return ""
  }
};
$KW.Advertisement = {
  render: function(b, a) {
    return ""
  }
};
$KW.SeatMap = {
  render: function(b, a) {
    return ""
  }
};
$KW.MenuItem = {
  render: function(b, a) {
    return ""
  }
};
$KW.TPW = {
  render: function(d, b) {
    var a = "";
    if (typeof d == "object") {
      var g = d.pf + "_" + d.id;
      $KU.addThirdPartyMeta({
        id: g,
        tpwModel: d
      });
      var c = $KU.getWidgetTypeByNameSapce(d.widgetName);
      var f = $KW.skins.getWidgetSkin(d, b) + " " + $KW.skins.getMarPadAdjustedContainerWeightSkin(d, 100);
      var e = "";
      e += $KW.skins.getMarginSkin(d, b) + " " + $KW.skins.getPaddingSkin(d);
      if (d.isvisible == false || !d.isvisible == "false" || d.isVisible == false || !d.isVisible == "false") {
        e += "display:none;"
      }
      a += "<div id='" + g + "' class='" + f + "' tpwidgettype='" + c + "' style='" + e + "'></div>";
      return a
    }
  },
  renderWidget: function(b) {
    if ($KG.thirdPartyWidgetsMeta) {
      for (var e in $KG.thirdPartyWidgetsMeta) {
        var g = document.getElementById($KG.thirdPartyWidgetsMeta[e].id);
        if (g && $KG.thirdPartyWidgetsMeta[e].tpwModel.pf == b) {
          var a = $KG.thirdPartyWidgetsMeta[e].tpwModel;
          var d = a.widgetName.split(".");
          var f = window;
          for (var c = 0; c < d.length; c++) {
            f = f[d[c]]
          }
          if (f && typeof f.initializeWidget == "function") {
            f.initializeWidget(g, a)
          } else {}
        }
      }
    }
  }
};
if (!Array.prototype.indexOf) {
  Array.prototype.indexOf = function(d, c) {
    if (c == null) {
      c = 0
    } else {
      if (c < 0) {
        c = Math.max(0, this.length + c)
      }
    }
    for (var b = c, a = this.length; b < a; b++) {
      if (this[b] === d) {
        return b
      }
    }
    return -1
  }
};
$KW.touch = {
  computeSnapWidths: function(g, f, a) {
    var e = document.querySelectorAll("#" + g + " div[name='touchcontainer_" + f + "']");
    for (var b = 0; b < e.length; b++) {
      var d = e[b];
      var c = $KU.getModelByNode(d);
      if (f == "Tabpane") {
        c = $KU.getModelByNode(d.parentNode)
      }
      $KW.touch.computeWidths(d, c)
    }
  },
  computeWidths: function(b, g) {
    var c = b.children[0];
    var a = c.children;
    var d = a.length;
    c.style.width = d * 100 + "%";
    var i = 0;
    var e = 0;
    var h = 100 / d;
    if (a.length > 0) {
      for (var f = 0; f < a.length; f++) {
        a[f].style.display = "inline";
        if (g.wType == "Segment" || g.wType == "TabPane") {
          a[f].style.width = h + "%";
          if (g.wType == "TabPane") {
            if ($KU.isIE) {
              a[f].style.styleFloat = "left"
            } else {
              a[f].style.cssFloat = "left"
            }
          }
        } else {
          a[f].style.width = Math.floor(a[f].clientWidth / d) + "px"
        }
      }
      a[0].style.display = "block";
      e = a[0].clientWidth
    }
    if (window.orientation === 90 || window.orientation === -90) {
      i = e / screen.height
    } else {
      if (window.orientation === 0 || window.orientation === 180) {
        i = e / screen.width
      }
    }
    b.setAttribute("imageWidth", e);
    b.setAttribute("ratio", i);
    if (!g.swipeContext) {
      g.swipeContext = {}
    }
    var k = g.swipeContext;
    k.imageWidth = e;
    k.widthRatio = i;
    k.wType = g.wType;
    if (g.focusedindex) {
      if (g.wType === "Segment") {
        k.currentPage = g.focusedindex - IndexJL
      } else {
        k.currentPage = Math.ceil(g.focusedindex / g.recperpage) - IndexJL
      }
    } else {
      k.currentPage = 0;
      if (g.wType == "TabPane") {
        k.currentPage = g.activetab;
        g.swipeContext.currentPage = k.currentPage
      }
    }
    $KW.touch.scrollImages(c, k.imageWidth * k.currentPage, $KU.swipeDuration, true);
    $KW.touch.updatePageIndicator(b, k, g)
  },
  updateFocusedIndex: function(c, b) {
    c.focusedindex = c.swipeContext.currentPage + IndexJL;
    c.focuseditem = (c.data && c.data[c.focusedindex]) || (c.masterdata && c.masterdata[c.focusedindex]);
    if (b && c.ongesture) {
      var d = $KU.returnEventReference(c.ongesture);
      var a = (b == "next" ? 1 : (b == "previous" ? 2 : -1));
      d.call(c, c, a)
    }
  },
  updatePageIndicator: function(b, i, d) {
    var f = i.currentPage;
    var h = kony.utils.getElementById(b.id + "_footer");
    if (h && h.childNodes[0]) {
      var l = h.childNodes[0];
      var k = l.childNodes[0];
      var g = k.childNodes;
      for (var c = 0; c < g.length; c++) {
        var e = g[c].childNodes[0];
        var a = (c == f) ? (d.pageondotimage ? d.pageondotimage : "whitedot.gif") : (d.pageoffdotimage ? d.pageoffdotimage : "blackdot.gif");
        if (e.src && e.src.substring(e.src.lastIndexOf("/") + 1) == a) {
          continue
        }
        e.src = $KU.getImageURL(a)
      }
    }(d.wType == "HStrip") && $KW.touch.updateArrows(b, i, d)
  },
  updateArrows: function(e, d, c) {
    var b = e.childNodes[1];
    if (b) {
      var f = b.childNodes[0];
      var g = b.childNodes[1];
      var a = e.childNodes[0].childNodes.length;
      if (d.currentPage == IndexJL) {
        f.style.display = "none"
      } else {
        f.style.display = ""
      }
      if (d.currentPage == (IndexJL ? a : a - 1)) {
        g.style.display = "none"
      } else {
        g.style.display = ""
      }
    }
  },
  previousPage: function(a) {
    var f = a.parentNode.getAttribute("wType");
    var j = a.id.substr(0, a.id.lastIndexOf("_"));
    var b = (f == "HStrip") ? a.parentNode.parentNode : document.getElementById(j);
    var h = $KU.getModelByNode(b);
    var e = a.parentNode.parentNode.childNodes[1];
    var k = a.childNodes[0].getAttribute("type") == "VImg" ? true : false;
    var d = h.scrollInstance || $KG[e.id];
    if (d) {
      var c = e.childNodes[0];
      if (k) {
        var g = Math.abs(d.y) < e.clientHeight ? 0 : (d.y + e.clientHeight);
        d.animateTo(0, g)
      } else {
        var i = Math.abs(d.x) < e.clientWidth ? 0 : (d.x + e.clientWidth);
        d.animateTo(i, 0)
      }
    }
  },
  nextPage: function(a) {
    var f = a.parentNode.getAttribute("wType");
    var k = a.id.substr(0, a.id.lastIndexOf("_"));
    var b = (f == "HStrip") ? a.parentNode.parentNode : document.getElementById(k);
    var h = $KU.getModelByNode(b);
    var e = a.parentNode.parentNode.childNodes[1];
    var l = a.childNodes[0].getAttribute("type") == "VImg" ? true : false;
    var d = h.scrollInstance || $KG[e.id];
    if (d) {
      var c = e.childNodes[0];
      c.style[vendor + "Transition"] = "-" + vendor + "-transform 0.5s ";
      if (l) {
        var j = c.clientHeight - Math.abs(d.y) - e.clientHeight;
        var g = j < e.clientHeight ? (d.y - j) : (d.y - e.clientHeight);
        d.animateTo(0, g)
      } else {
        var j = c.clientWidth - Math.abs(d.x) - e.clientWidth;
        var i = j < e.clientWidth ? (d.x - j) : (d.x - e.clientWidth);
        d.animateTo(i, 0)
      }
    }
  },
  fadeHImages: function(b) {
    var d = "display:none;";
    var a = $KU.getImageURL(b.leftarrowimage);
    var c = $KU.getImageURL(b.rightarrowimage);
    var e = b.pf + "_" + b.id;
    var f = "<div id='" + e + "_scrollFades_H' class='scroll_view' wType='" + b.wType + "'><div id='" + e + "_leftimg' class='scroll_fades leftfade' style='" + d + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.previousPage(this)'" : "") + "><img type='HImg' src='" + a + "' onload='$KW.touch.setHeight(this)' ></div><div id='" + e + "_rightimg' class='scroll_fades rightfade' style='" + d + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.nextPage(this)'" : "") + "><img type='HImg' src='" + c + "' onload='$KW.touch.setHeight(this)' ></div></div>";
    return f
  },
  fadeVImages: function(b) {
    var c = "display:none;";
    var a = $KU.getImageURL(b.toparrowimage);
    var f = $KU.getImageURL(b.bottomarrowimage);
    var d = b.pf + "_" + b.id;
    var e = "<div id='" + d + "_scrollFades_V' class='scroll_view' style='height:inherit;' wType='" + b.wType + "'><div id='" + d + "_topimg' class='scroll_fades topfade' style='" + c + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.previousPage(this)'" : "") + "><img type='VImg' src='" + a + "' onload='$KW.touch.setHeight(this)' ></div><div id='" + d + "_bottomimg' class='scroll_fades bottomfade' style='" + c + "'" + (($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) ? " onclick='$KW.touch.nextPage(this)'" : "") + "><img type='VImg' src='" + f + "' onload='$KW.touch.setHeight(this)' ></div></div>";
    return e
  },
  setHeight: function(c) {
    var b = c.parentNode;
    c.naturalHeight = c.naturalHeight || c.height;
    c.naturalWidth = c.naturalWidth || c.width;
    b.style.height = c.naturalHeight + "px";
    b.style.width = c.naturalWidth + "px";
    var a = c.getAttribute("type");
    if (a == "HImg") {
      b.style.top = Math.floor((b.parentNode.offsetHeight - c.naturalHeight) / 2) + "px"
    } else {
      b.style.left = Math.floor((b.parentNode.offsetWidth - c.naturalWidth) / 2) + "px"
    }
  },
  orientationHandler: function(s, a, d) {
    var r = document.querySelectorAll("#" + s + " div[name='touchcontainer_" + d + "']");
    var u = $KU.getPlatform().name;
    for (var o = 0; o < r.length; o++) {
      var f = r[o];
      var l = f.id;
      var h = $KU.getModelByNode(f);
      var g = h.swipeContext;
      if (!g) {
        continue
      }
      var t = f.children[0];
      var p = t.children;
      var b = p.length;
      if (b > 0) {
        t.style.width = b * 100 + "%";
        var q = 0;
        for (var n = 0; n < p.length; n++) {
          if (n != (g.currentPage + 1)) {
            p[n].style.display = "none"
          }
        }
        var e = screen.height * g.widthRatio + "px";
        var c = screen.width * g.widthRatio + "px";
        for (var m = 0; m < p.length; m++) {
          if (u == "android" || u == "blackberry") {
            if (a === "landscape") {
              p[m].style.width = c
            } else {
              if (a === "portrait") {
                p[m].style.width = c
              }
            }
          } else {
            if (a === "landscape") {
              p[m].style.width = e
            } else {
              if (a === "portrait") {
                p[m].style.width = c
              }
            }
          }
        }
        q = p[0].parentNode.clientWidth / b;
        g.imageWidth = q;
        f.setAttribute("imageWidth", q);
        if (g.currentPage === (b - 1)) {
          $KW.touch.previousImage(f, g, true);
          $KW.touch.nextImage(f, g, true)
        } else {
          $KW.touch.nextImage(f, g, true);
          $KW.touch.previousImage(f, g, true)
        }
        for (var n = 0; n < p.length; n++) {
          p[n].style.display = "inline"
        }
      }
    }
  },
  previousImage: function(c, e, a) {
    var d = c.children[0];
    e.currentPage = Math.max(e.currentPage - 1, 0);
    $KW.touch.scrollImages(d, e.imageWidth * e.currentPage, $KU.swipeDuration, a);
    if (e.wType == "TabPane") {
      var f = $KU.getModelByNode(d.parentNode.parentNode);
      f.activetab = Math.max(f.activetab - 1, 0);
      f.activetabs[IndexJL] = f.activetab;
      var b = f.children[f.activetab];
      $KW.TabPane.changeActiveTabSkin(f, b);
      $KW.touch.updatePageIndicator(c.parentNode, e, f)
    }
  },
  nextImage: function(d, f, a) {
    var e = d.children[0];
    var b = e.children.length;
    f.currentPage = Math.min(f.currentPage + 1, b - 1);
    $KW.touch.scrollImages(e, f.imageWidth * f.currentPage, $KU.swipeDuration, a);
    if (f.wType == "TabPane") {
      var g = $KU.getModelByNode(e.parentNode.parentNode);
      g.activetab = Math.min(g.activetab + 1, b - 1);
      g.activetabs[IndexJL] = g.activetab;
      var c = g.children[g.activetab];
      $KW.TabPane.changeActiveTabSkin(g, c);
      $KW.touch.updatePageIndicator(d.parentNode, f, g)
    }
  },
  scrollImages: function(c, f, e, a, b) {
    if (!a) {
      c.style[vendor + "Transition"] = "-" + vendor + "-transform " + (e / 1000).toFixed(1) + "s "
    } else {
      c.style[vendor + "Transition"] = "-" + vendor + "-transform 0 0"
    }
    var d = (f < 0 ? "" : "-") + Math.abs(f).toString();
    if (kony.appinit.useTransition) {
      c.style[vendor + "Transform"] = translateOpen + d + "px,0" + translateClose
    } else {
      $("#" + c.parentNode.id + " div:first").animate({
        left: d + "px"
      }, e)
    }
    if (b && b.tabPaneModel && b.tabID) {
      $KW.TabPane.changeActiveTabSkin(b.tabPaneModel, b.tabID)
    }
  },
  navigationDotsHandler: function(e) {
    var a = parseInt(e.getAttribute("index"), 10);
    var g = e.parentNode.parentNode.parentNode.getAttribute("id");
    g = g.substr(0, g.lastIndexOf("_footer"));
    var f = $KU.getElementById(g);
    var b = $KU.getModelByNode(f);
    if (!b) {
      return
    }
    var d = null;
    if (b.wType == "Segment") {
      d = f.children[0];
      b.selectedRows = (IndexJL) ? [null, [null, IndexJL, a]] : [
        [IndexJL, a]
      ];
      $KW.Segment.setSelectedItemsAndIndices(b)
    } else {
      if (b.wType == "HStrip") {
        d = f.children[0];
        a -= 1
      } else {
        d = f.children[1].children[0];
        b.activetab = b.currentPage;
        b.activetabs[IndexJL] = b.activetab
      }
    }
    var c = b.swipeContext;
    c.currentPage = parseInt(a) - IndexJL;
    $KW.touch.scrollImages(d, c.imageWidth * c.currentPage, $KU.swipeDuration, false);
    $KW.touch.updatePageIndicator(f, c, b);
    if (b.wType == "Segment" && b.viewType == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      b.onswipe && b.onswipe(b, -1, b.focusedindex, b.selectedState)
    }
  },
  TouchContext: function() {},
  preventDefault: function(a) {
    kony.events.preventDefault(a)
  }
};
$KW.touch.TouchContext.UP = "UP";
$KW.touch.TouchContext.DOWN = "DOWN";
$KW.touch.TouchContext.LEFT = "LEFT";
$KW.touch.TouchContext.RIGHT = "RIGHT";
$KW.touch.pageviewScroller = function(b, a) {
  this.element = b;
  this.handleEventListener = this.handleEvent.bind(this);
  if ("ontouchstart" in window) {
    kony.events.addEventListener(b, "touchstart", this, false)
  } else {
    if ($KU.isPointerSupported) {
      if ("onpointerdown" in window) {
        kony.events.addEventListener(b, "pointerdown", this, false)
      } else {
        kony.events.addEventListener(b, "MSPointerDown", this, false)
      }
    } else {
      kony.events.addEventListener(b, "mousedown", this.handleEventListener)
    }
  }
  this.widgetModel = a.widgetModel
};
$KW.touch.pageviewScroller.prototype = {
  handleEvent: function(a) {
    switch (a.type) {
      case "touchstart":
      case "mousedown":
      case "MSPointerDown":
      case "pointerdown":
        this.onTouchStart(a);
        break;
      case "touchmove":
      case "mousemove":
      case "MSPointerMove":
      case "pointermove":
        this.onTouchMove(a);
        break;
      case "touchend":
      case "touchcancel":
      case "mouseup":
      case "MSPointerUp":
      case "MSPointerCancel":
      case "pointerup":
      case "pointercancel":
        this.onTouchEnd(a);
        break;
      case "mouseout":
        this.onMouseOut(a);
        break
    }
  },
  onTouchStart: function(b) {
    var c = b.touches && b.touches[0] || b;
    if ($KU.isTouchSupported) {
      kony.events.addEventListener(this.element, "touchmove", this, false);
      kony.events.addEventListener(this.element, "touchend", this, false);
      kony.events.addEventListener(this.element, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.addEventListener(this.element, "pointermove", this, false);
          kony.events.addEventListener(this.element, "pointerup", this, false);
          kony.events.addEventListener(this.element, "pointercancel", this, false)
        } else {
          kony.events.addEventListener(this.element, "MSPointerMove", this, false);
          kony.events.addEventListener(this.element, "MSPointerUp", this, false);
          kony.events.addEventListener(this.element, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.addEventListener(this.element, "mousemove", this.handleEventListener);
        kony.events.addEventListener(this.element, "mouseup", this.handleEventListener);
        kony.events.addEventListener(this.element, "mouseout", this.handleEventListener)
      }
    }
    this.x = this.lastx = this.startX = c.pageX || c.clientX;
    this.y = this.lasty = this.startY = c.pageY || c.clientY;
    var a = this.widgetModel.swipeContext;
    if (!a) {
      a = new Object();
      a.imageWidth = this.element.getAttribute("imageWidth");
      a.widthRatio = this.element.getAttribute("ratio");
      a.currentPage = 0
    }
  },
  onTouchMove: function(c) {
    var g = c.touches && c.touches[0] || c;
    var a = g.pageX || g.clientX;
    var j = g.pageY || g.clientY;
    var f = a - this.startX;
    var e = j - this.startY;
    this.lastx, this.lasty = this.x, this.y;
    this.x = a;
    this.y = j;
    var h = $KU.getSwipeDirection(f, e);
    var b = $KU.getDistanceMoved(f, e);
    var d = this.element.children[0];
    var i = this.widgetModel.swipeContext;
    if ($KG.nativeScroll) {
      if (Math.abs(f) >= Math.abs(e)) {
        kony.events.preventDefault(c)
      } else {
        return
      }
    } else {
      kony.events.preventDefault(c)
    }
    if (h == $KW.touch.TouchContext.LEFT) {
      $KW.touch.scrollImages(d, (i.imageWidth * i.currentPage) + b, 0)
    } else {
      if (h == $KW.touch.TouchContext.RIGHT) {
        $KW.touch.scrollImages(d, (i.imageWidth * i.currentPage) - b, 0)
      }
    }
    if (this.widgetModel.wType != "TabPane") {
      $KW.touch.updateFocusedIndex(this.widgetModel)
    }
  },
  onTouchEnd: function(e) {
    this.detachEvents();
    var h = e.changedTouches && e.changedTouches[0] || e;
    var g = h.pageX || h.clientX;
    var f = h.pageY || h.clientY;
    var b = g - this.lastx;
    var a = f - this.lasty;
    var d = this.widgetModel.swipeContext;
    var c;
    if (b <= -7) {
      $KW.touch.nextImage(this.element, d, false);
      c = "next"
    } else {
      if (b >= 7) {
        $KW.touch.previousImage(this.element, d, false);
        c = "previous"
      }
    }
    $KW.touch.updatePageIndicator(this.element, d, this.widgetModel);
    if (this.widgetModel.wType != "TabPane") {
      $KW.touch.updateFocusedIndex(this.widgetModel, c)
    }
    if (c) {
      if (this.widgetModel.wType == "Segment" && this.widgetModel.viewType == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
        this.widgetModel.onswipe && this.widgetModel.onswipe(this.widgetModel, -1, this.widgetModel.focusedindex, this.widgetModel.selectedState)
      } else {
        this.widgetModel.onswipe && this.widgetModel.onswipe(this.widgetModel)
      }
    }
  },
  detachEvents: function() {
    if ($KU.isTouchSupported) {
      kony.events.removeEventListener(this.element, "touchmove", this, false);
      kony.events.removeEventListener(this.element, "touchend", this, false);
      kony.events.removeEventListener(this.element, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.removeEventListener(this.element, "pointermove", this, false);
          kony.events.removeEventListener(this.element, "pointerup", this, false);
          kony.events.removeEventListener(this.element, "pointercancel", this, false)
        } else {
          kony.events.removeEventListener(this.element, "MSPointerMove", this, false);
          kony.events.removeEventListener(this.element, "MSPointerUp", this, false);
          kony.events.removeEventListener(this.element, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.removeEventListener(this.element, "mousemove", this.handleEventListener);
        kony.events.removeEventListener(this.element, "mouseup", this.handleEventListener);
        kony.events.removeEventListener(this.element, "mouseout", this.handleEventListener)
      }
    }
  },
  onMouseOut: function(a) {
    this.onTouchEnd(a)
  },
  destroy: function() {
    if (this.element) {
      if ($KU.isTouchSupported) {
        kony.events.removeEventListener(this.element, "touchstart", this, false);
        kony.events.removeEventListener(this.element, "touchcancel", this, false)
      } else {
        if ($KU.isPointerSupported) {
          if ("onpointerdown" in window) {
            kony.events.removeEventListener(this.element, "pointerdown", this, false);
            kony.events.removeEventListener(this.element, "pointercancel", this, false)
          } else {
            kony.events.removeEventListener(this.element, "MSPointerDown", this, false);
            kony.events.removeEventListener(this.element, "MSPointerCancel", this, false)
          }
        } else {
          kony.events.removeEventListener(this.element, "mousedown", this.handleEventListener);
          kony.events.removeEventListener(this.element, "mouseout", this.handleEventListener)
        }
      }
    }
  }
};
$KW.touch.konyScroller = function(e, b) {
  var f = this;
  f.wrapper = document.getElementById(e);
  var d = b.widgetModel;
  f.scroller = f.wrapper.children[0];
  f.options = {
    hScroll: false,
    vScroll: false,
    hScrollbar: false,
    vScrollbar: false,
    bounce: true,
    hBounce: true,
    vBounce: true,
    fixedScrollbar: !$KU.isIDevice,
    hideScrollbar: true,
    fadeScrollbar: $KU.isIDevice && $KU.has3d,
    scrollbarClass: "",
    checkDOMChanges: false,
    useTransform: true,
    x: 0,
    y: 0,
    topOffset: 0,
    bottomOffset: 0,
    onBeforeScrollStart: function(g) {},
    onRefresh: null,
    onScrollStart: null,
    onScrollMove: null,
    onScrollEnd: null
  };
  for (var c in b) {
    f.options[c] = b[c]
  }
  f.x = f.options.x;
  f.y = f.options.y;
  f.pullDownOffset = f.options.topOffset || 0;
  f.pullUpOffset = f.options.bottomOffset || 0;
  f.options.hBounce = f.options.bounce ? (typeof b.hBounce === "undefined" ? true : b.hBounce) : false;
  f.options.vBounce = f.options.bounce ? (typeof b.vBounce === "undefined" ? true : b.vBounce) : false;
  f.options.vScrollbar = f.options.vScroll && f.options.vScrollbar;
  f.options.hScrollbar = f.options.hScroll && f.options.hScrollbar;
  f.options.useTransform = $KU.hasTransform ? f.options.useTransform : false;
  f.scroller.style[vendor + "TransitionProperty"] = f.options.useTransform ? ("-" + vendor + "-transform") : "top left";
  f.scroller.style[vendor + "TransitionDuration"] = "0";
  f.scroller.style[vendor + "TransformOrigin"] = "0 0";
  if (f.options.useTransform) {
    f.scroller.style[vendor + "Transform"] = translateOpen + (f.x - (f.options.hScroll ? f.pullDownOffset : 0)) + "px," + (f.y - (f.options.vScroll ? f.pullDownOffset : 0)) + "px" + translateClose;
    if (!f.options.scrollbox) {
      f.scroller.style.position = "absolute"
    }
  } else {
    if (kony.appinit.isFirefox || kony.appinit.isIE7 || kony.appinit.isIE8 || kony.appinit.isOpera) {
      f.scroller.style.cssText += ";position:relative;top:" + (f.y - (f.options.vScroll ? f.pullDownOffset : 0)) + "px;left:" + (f.x - (f.options.hScroll ? f.pullDownOffset : 0)) + "px"
    } else {
      f.scroller.style.cssText += ";position:absolute;top:" + (f.y - (f.options.vScroll ? f.pullDownOffset : 0)) + "px;left:" + (f.x - (f.options.hScroll ? f.pullDownOffset : 0)) + "px"
    }
  }
  f.refresh();
  if (f.options.showImages) {
    if (f.options.hScroll) {
      f.toggleFadeImgs()
    }
  }
  var a = f.wrapper.getAttribute("kformname");
  if (!a && !f.options.scrollbox) {
    kony.events.addEventListener(document, "touchmove", $KW.touch.preventDefault)
  }
  f.handleEventListener = f.handleEvent.bind(f);
  if (!f.options.disableUserScroll) {
    if ($KU.isTouchSupported) {
      kony.events.addEventListener(f.scroller, "touchstart", f, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.addEventListener(f.scroller, "pointerdown", f, false)
        } else {
          kony.events.addEventListener(f.scroller, "MSPointerDown", f, false)
        }
      } else {
        kony.events.addEventListener(f.scroller, "mousedown", f.handleEventListener);
        kony.events.addEventListener(f.scroller, "mouseout", f.handleEventListener)
      }
    }
  }
  if ($KU.isOrientationSupported && !$KU.isAndroid) {
    kony.events.addEventListener(window, "orientationchange", f, false)
  } else {
    kony.events.addEventListener(window, "resize", f.handleEventListener)
  }
  if (f.options.checkDOMChanges) {
    f.checkDOMTime = setInterval(function() {
      f._checkDOMChanges()
    }, 1000)
  }
};
$KW.touch.konyScroller.prototype = {
  x: 0,
  y: 0,
  steps: [],
  aniTime: null,
  _checkDOMChanges: function() {
    var a = document.getElementById(this.scroller.id);
    if (a === null) {
      return
    }
    var e, c;
    var d = this.options.widgetModel;
    var b = d.wType;
    var g = ((b == "Form" || b == "Popup") && $KU.isFlexContainer(d));
    if (g) {
      var f = document.getElementById(d.id);
      e = f.scrollHeight;
      c = f.scrollWidth
    } else {
      if (b == "FlexScrollContainer") {
        e = a.childNodes[0].scrollHeight;
        c = a.childNodes[0].scrollWidth
      } else {
        e = a.offsetHeight;
        c = a.offsetWidth
      }
    }
    if (this.moved || this.animating || (this.scrollerW == c * 1 && this.scrollerH == e * 1)) {
      return
    }
    if (this.options.hScroll == true) {
      if (g || b == "FlexScrollContainer") {
        a.style.width = (c / a.parentNode.offsetWidth) * 100 + "%"
      } else {
        a.style.width = (a.scrollWidth / a.parentNode.offsetWidth) * 100 + "%"
      }
    }
    if (this.options.vScroll == true) {
      if (g || b == "FlexScrollContainer") {
        a.style.height = e + "px"
      }
    }
    this.refresh()
  },
  refresh: function() {
    var e = this;
    if (this.refreshDisabled) {
      return
    }
    e.wrapperW = e.wrapper.clientWidth || 1;
    e.wrapperH = e.wrapper.clientHeight || 1;
    e.minScrollY = e.options.vScroll ? -e.pullDownOffset : 0;
    e.maxBiasY = e.options.vScroll ? -e.pullUpOffset : 0;
    e.minScrollX = e.options.hScroll ? -e.pullDownOffset : 0;
    e.maxBiasX = e.options.hScroll ? -e.pullUpOffset : 0;
    e.scrollerW = Math.round(e.minScrollX + e.scroller.scrollWidth + e.maxBiasX);
    e.scrollerH = Math.round(e.minScrollY + e.scroller.scrollHeight + +e.maxBiasY);
    var f = e.options.widgetModel;
    var h = 0;
    var a = 0;
    var i = f.frame;
    if (f.wType == "FlexScrollContainer" && i) {
      var g = f.widgets();
      if (g.length > 0) {
        var b = g[g.length - 1];
        if (f.layouttype == kony.flex.FLOW_HORIZONTAL) {
          var d = $KW.FlexLayoutEngine.getComputedValue(b, i, b.right, "x");
          if (d) {
            h = $KU.getValueByParentFrame(b, d, "x")
          }
        }
        if (f.layouttype == kony.flex.FLOW_VERTICAL) {
          var d = $KW.FlexLayoutEngine.getComputedValue(b, i, b.bottom, "y");
          if (d) {
            a = $KU.getValueByParentFrame(b, d, "y")
          }
        }
      }
    }
    e.maxScrollX = (e.wrapperW - e.scrollerW) + e.minScrollX - h;
    e.maxScrollY = (e.wrapperH - e.scrollerH) + e.minScrollY - a;
    e.dirX = 0;
    e.dirY = 0;
    if (e.options.onRefresh) {
      e.options.onRefresh.call(e)
    }
    e.hScroll = e.options.hScroll && e.maxScrollX < 0;
    e.vScroll = e.options.vScroll && (!e.hScroll || e.scrollerH > e.wrapperH);
    e.hScrollbar = e.hScroll && e.options.hScrollbar;
    e.vScrollbar = e.vScroll && e.options.vScrollbar && e.scrollerH > e.wrapperH;
    var c = e._offset(e.wrapper);
    e.wrapperOffsetLeft = -c.left;
    e.wrapperOffsetTop = -c.top;
    e.scroller.style[$KU.vendor + "TransitionDuration"] = "0";
    e._scrollbar("h");
    e._scrollbar("v");
    e._resetPos(200);
    if (e.options.showImages) {
      if (e.options.vScroll) {
        e.toggleVFadeImgs()
      }
      if (e.options.hScroll) {
        e.toggleFadeImgs()
      }
    }
  },
  handleEvent: function(b) {
    var a = this;
    if ($KG.__idletimeout && $KG.__idletimeout.enabled) {
      $KI.appevents.resettimer()
    }
    if (b.type != "orientationchange" && b.type != "resize") {
      if (b && b.target && b.target.getAttribute && (b.target.getAttribute("kwidgettype") == "Khstrip" || b.target.getAttribute("kwidgettype") == "ScrollBox")) {
        this.angularDirection = true
      }
    } else {
      this.angularDirection = false
    }
    switch (b.type) {
      case "touchstart":
      case "mousedown":
      case "MSPointerDown":
      case "pointerdown":
        a.onTouchStart(b);
        break;
      case "touchmove":
      case "mousemove":
      case "MSPointerMove":
      case "pointermove":
        a.onTouchMove(b);
        break;
      case "touchend":
      case "touchcancel":
      case "mouseup":
      case "MSPointerUp":
      case "MSPointerCancel":
      case "pointerup":
      case "pointercancel":
        a.onTouchEnd(b);
        break;
      case "mouseout":
        a.onMouseOut(b);
        break;
      case "orientationchange":
      case "resize":
        a.resize(b);
        break
    }
  },
  resize: function() {
    var a = this;
    if (!a.options.scrollbox) {
      $KW.Scroller.setHeight(a.options.formid)
    }
    setTimeout(function() {
      a.refresh()
    }, $KU.isAndroid ? 200 : 0)
  },
  onTouchStart: function(b) {
    var c = b.target || b.srcElement;
    c = $KU.getParentByAttribute(c, kony.constants.KONY_WIDGET_TYPE);
    if (c) {
      var a = $KU.getContainerForm(c) || (c.getAttribute && c.getAttribute("kformname"));
      if ($KW.Popup && $KW.Popup.dismissPopup(a)) {
        kony.events.stopPropagation(b, true);
        kony.events.preventDefault(b);
        return
      }
    }
    var d = b.touches && b.touches[0] || b;
    if (this.options.scrollbox) {
      kony.events.ontouchstartHandler(b);
      if (!this.options.HStrip && (typeof this.options.bubbleEvents == "undefined" || !this.options.bubbleEvents)) {
        kony.events.stopPropagation(b)
      }
    }
    if (this.options.onBeforeScrollStart) {
      this.options.onBeforeScrollStart.call(this, b)
    }
    this.extendTouchStart(d);
    this.dragging = false;
    this.startfired = false;
    this.tracking = true
  },
  onTouchMove: function(a) {
    this.dragging = true;
    this.tracking = true;
    var b = a.touches && a.touches[0] || a;
    if (this.options.scrollbox) {
      kony.events.ontouchmoveHandler(a)
    }
    this.extendTouchMove(b, a)
  },
  onTouchEnd: function(a) {
    this.dragging = false;
    this.tracking = false;
    var b = a.touches && a.touches[0] || a;
    this.extendTouchEnd(b)
  },
  onMouseOut: function(b) {
    var a = b.relatedTarget || b.srcElement;
    if (!a) {
      this.onTouchEnd(b);
      return
    }
    while (a = a.parentNode) {
      if (a == this.wrapper) {
        return
      }
    }
    this.onTouchEnd(b)
  },
  extendTouchStart: function(d) {
    this.moved = false;
    this.animating = false;
    this.distX = 0;
    this.distY = 0;
    this.absDistX = 0;
    this.absDistY = 0;
    var a, c;
    if (this.options.useTransform) {
      var b = getComputedStyle(this.scroller, null)[vendor + "Transform"].replace(/[^0-9-.,]/g, "").split(",");
      a = b[4] * 1;
      c = b[5] * 1
    } else {
      a = $KU.getStyle(this.scroller, "left").replace(/[^0-9-]/g, "") * 1;
      c = $KU.getStyle(this.scroller, "top").replace(/[^0-9-]/g, "") * 1
    }
    this.startX = this.x;
    this.startY = this.y;
    this.pointX = d.pageX || d.clientX;
    this.pointY = d.pageY || d.clientY;
    this.startTime = new Date().valueOf();
    if ($KU.isTouchSupported) {
      kony.events.addEventListener(this.scroller, "touchmove", this, false);
      kony.events.addEventListener(this.scroller, "touchend", this, false);
      kony.events.addEventListener(this.scroller, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.addEventListener(window, "pointermove", this, false);
          kony.events.addEventListener(window, "pointerup", this, false);
          kony.events.addEventListener(window, "pointercancel", this, false)
        } else {
          kony.events.addEventListener(window, "MSPointerMove", this, false);
          kony.events.addEventListener(window, "MSPointerUp", this, false);
          kony.events.addEventListener(window, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.addEventListener(this.scroller, "mousemove", this.handleEventListener);
        kony.events.addEventListener(this.scroller, "mouseup", this.handleEventListener)
      }
    }
    this.startEventFired = false;
    this.direction = ""
  },
  extendTouchMove: function(f, b) {
    b = b || f;
    var e = (f.pageX || f.clientX) - this.pointX,
      c = (f.pageY || f.clientY) - this.pointY,
      a = this.x + e,
      l = this.y + c,
      g, d, h = new Date().valueOf();
    var i = $KU.getSwipeDirection(e, c);
    if (this.angularDirection) {
      if ((this.vScroll && (i != $KW.touch.TouchContext.UP && i != $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i != $KW.touch.TouchContext.LEFT && i != $KW.touch.TouchContext.RIGHT))) {
        return
      }
    }
    if (this.options.onScrollStart && !this.startEventFired && ((this.vScroll && (i == $KW.touch.TouchContext.UP || i == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i == $KW.touch.TouchContext.LEFT || i == $KW.touch.TouchContext.RIGHT)))) {
      this.options.onScrollStart.call(this, b)
    }
    this.startEventFired = true;
    if ((typeof this.options.bubbleEvents != "undefined" && this.options.bubbleEvents) && ((this.vScroll && (i == $KW.touch.TouchContext.UP || i == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i == $KW.touch.TouchContext.LEFT || i == $KW.touch.TouchContext.RIGHT)))) {
      kony.events.stopPropagation(b)
    }
    if ($KG.nativeScroll) {
      if (Math.abs(e) >= Math.abs(c)) {
        kony.events.preventDefault(f)
      } else {
        return
      }
    } else {
      kony.events.preventDefault(b)
    }
    if ($KG.appbehaviors[constants.API_LEVEL] >= constants.API_LEVEL_6000 && !this.vScroll && !this.hScroll) {
      return
    }
    this.direction = i;
    this.pointX = f.pageX || f.clientX;
    this.pointY = f.pageY || f.clientY;
    if (a > this.minScrollX || a < this.maxScrollX) {
      a = this.options.hBounce ? this.x + (e / 2) : a >= this.minScrollX || this.maxScrollX >= 0 ? this.minScrollX : this.maxScrollX
    }
    if (l > this.minScrollY || l < this.maxScrollY) {
      l = this.options.vBounce ? this.y + (c / 2) : l >= this.minScrollY || this.maxScrollY >= 0 ? this.minScrollY : this.maxScrollY
    }
    var k = this.absDistX || Math.abs(e);
    var j = this.absDistY || Math.abs(c);
    if (k < $KU.minTouchMoveDisplacement && j < $KU.minTouchMoveDisplacement) {
      this.distX += e;
      this.distY += c;
      this.absDistX = Math.abs(this.distX);
      this.absDistY = Math.abs(this.distY);
      return
    }
    if (this.absDistX > this.absDistY + 5) {
      l = this.y;
      c = 0
    } else {
      if (this.absDistY > this.absDistX + 5) {
        a = this.x;
        e = 0
      }
    }
    this.moved = true;
    this.animateTo(a, l);
    if (h - this.startTime > 300) {
      this.startTime = h;
      this.startX = this.x;
      this.startY = this.y
    }
    if (this.options.onScrollMove && ((this.vScroll && (i == $KW.touch.TouchContext.UP || i == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (i == $KW.touch.TouchContext.LEFT || i == $KW.touch.TouchContext.RIGHT)))) {
      this.options.onScrollMove.call(this, b)
    }
  },
  extendTouchEnd: function(h) {
    if ($KU.isTouchSupported) {
      kony.events.removeEventListener(this.scroller, "touchmove", this, false);
      kony.events.removeEventListener(this.scroller, "touchend", this, false);
      kony.events.removeEventListener(this.scroller, "touchcancel", this, false)
    } else {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.removeEventListener(window, "pointermove", this, false);
          kony.events.removeEventListener(window, "pointerdown", this, false);
          kony.events.removeEventListener(window, "pointercancel", this, false)
        } else {
          kony.events.removeEventListener(window, "MSPointerMove", this, false);
          kony.events.removeEventListener(window, "MSPointerDown", this, false);
          kony.events.removeEventListener(window, "MSPointerCancel", this, false)
        }
      } else {
        kony.events.removeEventListener(this.scroller, "mousemove", this.handleEventListener);
        kony.events.removeEventListener(this.scroller, "mouseup", this.handleEventListener)
      }
    }
    if (this.moved && this.options.onScrollTouchReleased && ((this.vScroll && (this.direction == $KW.touch.TouchContext.UP || this.direction == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (this.direction == $KW.touch.TouchContext.LEFT || this.direction == $KW.touch.TouchContext.RIGHT)))) {
      this.options.onScrollTouchReleased.call(this)
    }
    var g = {
        dist: 0,
        time: 0
      },
      f = {
        dist: 0,
        time: 0
      },
      e = (new Date().valueOf()) - this.startTime,
      d = this.x,
      b = this.y,
      a;
    var c = this.direction;
    if (this.angularDirection) {
      if ((this.vScroll && (c != $KW.touch.TouchContext.UP && c != $KW.touch.TouchContext.DOWN)) || (this.hScroll && (c != $KW.touch.TouchContext.LEFT && c != $KW.touch.TouchContext.RIGHT))) {
        return
      }
    }
    this.direction = c;
    if (e < 300) {
      g = d ? this._momentum(d - this.startX, e, -this.x, (this.maxScrollX < 0 ? this.scrollerW - this.wrapperW + this.x - this.minScrollX : 0), this.options.hBounce ? this.wrapperW : 0) : g;
      f = b ? this._momentum(b - this.startY, e, -this.y, (this.maxScrollY < 0 ? this.scrollerH - this.wrapperH + this.y - this.minScrollY : 0), this.options.vBounce ? this.wrapperH : 0) : f;
      d = this.x + g.dist;
      b = this.y + f.dist;
      if ((this.x > this.minScrollX && d > this.minScrollX) || (this.x < this.maxScrollX && d < this.maxScrollX)) {
        g = {
          dist: 0,
          time: 0
        }
      }
      if ((this.y > this.minScrollY && b > this.minScrollY) || (this.y < this.maxScrollY && b < this.maxScrollY)) {
        f = {
          dist: 0,
          time: 0
        }
      }
    }
    if (g.dist || f.dist) {
      a = Math.max(Math.max(g.time, f.time), 10);
      this.scrollTo(Math.round(d), Math.round(b), a);
      return
    }
    this._resetPos(200)
  },
  animateTo: function(b, d) {
    var a = (this.options.hScroll || this.contentoffsetmove) && !isNaN(b) ? b : 0;
    var c = (this.options.vScroll || this.contentoffsetmove) && !isNaN(d) ? d : 0;
    if (this.options.useTransform) {
      this.scroller.style[vendor + "Transform"] = translateOpen + a + "px," + c + "px" + translateClose
    } else {
      a = Math.round(a);
      c = Math.round(c);
      this.scroller.style.left = a + "px";
      this.scroller.style.top = c + "px"
    }
    this.x = a;
    this.y = c;
    if (this.options.showImages) {
      if (this.options.vScroll) {
        this.toggleVFadeImgs()
      }
      if (this.options.hScroll) {
        this.toggleFadeImgs()
      }
    }
    this._scrollbarPos("h");
    this._scrollbarPos("v")
  },
  toggleFadeImgs: function() {
    var b = this.options.widgetID;
    var h = this.options.formid;
    var f = h + "_" + b;
    var c = $KU.getElementById(f + "_scrollee");
    if (!c) {
      return
    }
    var g = c.scrollWidth + c.offsetLeft + (c.offsetWidth - c.clientWidth);
    var i = Math.min(0, $KU.getElementById(f + "_scroller").clientWidth - g);
    var a = $KU.getElementById(f + "_leftimg");
    var e = $KU.getElementById(f + "_rightimg");
    a && $KW.touch.setHeight(a.childNodes[0]);
    e && $KW.touch.setHeight(e.childNodes[0]);
    var d = -this.x;
    if (d > c.offsetLeft) {
      a && $KU.applyFade(a, "fadeIn", 500)
    } else {
      a && $KU.applyFade(a, "fadeOut", 1000)
    }
    if (d < -i) {
      e && $KU.applyFade(e, "fadeIn", 500)
    } else {
      e && $KU.applyFade(e, "fadeOut", 1000)
    }
  },
  toggleVFadeImgs: function() {
    var b = this.options.widgetID;
    var j = this.options.formid;
    var i = j + "_" + b;
    var d = $KU.getElementById(i + "_scrollee");
    var f = d.scrollHeight + d.offsetTop + (d.offsetHeight - d.clientHeight);
    var a = Math.min(0, $KU.getElementById(i + "_scroller").clientHeight - f);
    var c = $KU.getElementById(i + "_topimg");
    var g = $KU.getElementById(i + "_bottomimg");
    var e = -this.y;
    if (e > d.offsetTop) {
      c && $KU.applyFade(c, "fadeIn", 500)
    } else {
      c && $KU.applyFade(c, "fadeOut", 1000)
    }
    if (e < -a) {
      g && $KU.applyFade(g, "fadeIn", 500)
    } else {
      g && $KU.applyFade(g, "fadeOut", 1000)
    }
  },
  _scrollbarPos: function(a, d) {
    var c = this,
      e = a == "h" ? c.x : c.y,
      b;
    if (!c[a + "Scrollbar"] || ((this.direction == "LEFT" || this.direction == "RIGHT") && !this.options.scrollbox)) {
      return
    }
    e = c[a + "ScrollbarProp"] * e;
    if (e < 0) {
      if (!c.options.fixedScrollbar) {
        b = c[a + "ScrollbarIndicatorSize"] + Math.round(e * 3);
        if (b < 8) {
          b = 8
        }
        c[a + "ScrollbarIndicator"].style[a == "h" ? "width" : "height"] = b + "px"
      }
      e = 0
    } else {
      if (e > c[a + "ScrollbarMaxScroll"]) {
        if (!c.options.fixedScrollbar) {
          b = c[a + "ScrollbarIndicatorSize"] - Math.round((e - c[a + "ScrollbarMaxScroll"]) * 3);
          if (b < 8) {
            b = 8
          }
          c[a + "ScrollbarIndicator"].style[a == "h" ? "width" : "height"] = b + "px";
          e = c[a + "ScrollbarMaxScroll"] + (c[a + "ScrollbarIndicatorSize"] - b)
        } else {
          e = c[a + "ScrollbarMaxScroll"]
        }
      }
    }
    c[a + "ScrollbarWrapper"].style[vendor + "TransitionDelay"] = "0";
    c[a + "ScrollbarWrapper"].style.opacity = d && c.options.hideScrollbar ? "0" : "1";
    if (c.options.useTransform) {
      c[a + "ScrollbarIndicator"].style[vendor + "Transform"] = translateOpen + (a == "h" ? e + "px,0" : "0," + e + "px") + translateClose
    } else {
      if (a == "h") {
        c[a + "ScrollbarIndicator"].style.left = e + "px";
        c[a + "ScrollbarIndicator"].style.top = 0
      } else {
        c[a + "ScrollbarIndicator"].style.left = 0;
        c[a + "ScrollbarIndicator"].style.top = e + "px"
      }
    }
  },
  _scrollbar: function(a) {
    var c = this,
      d = document,
      b;
    if (!c[a + "Scrollbar"]) {
      if (c[a + "ScrollbarWrapper"]) {
        if ($KU.hasTransform) {
          c[a + "ScrollbarIndicator"].style[vendor + "Transform"] = ""
        }
        c[a + "ScrollbarWrapper"].parentNode.removeChild(c[a + "ScrollbarWrapper"]);
        c[a + "ScrollbarWrapper"] = null;
        c[a + "ScrollbarIndicator"] = null
      }
      return
    }
    if (!c[a + "ScrollbarWrapper"]) {
      b = d.createElement("div");
      if (c.options.scrollbarClass) {
        b.className = c.options.scrollbarClass + a.toUpperCase()
      } else {
        b.style.cssText = "position:absolute;z-index:100;" + (a == "h" ? "height:7px;bottom:1px;left:2px;right:" + (c.vScrollbar ? "7" : "2") + "px" : "width:7px;bottom:" + (c.hScrollbar ? "7" : "2") + "px;top:2px;right:1px")
      }
      b.style.cssText += ";pointer-events:none;-" + vendor + "-transition-property:opacity;-" + vendor + "-transition-duration:" + (c.options.fadeScrollbar ? "350ms" : "0") + ";overflow:hidden; opacity:" + (c.options.hideScrollbar ? "0" : "1");
      c.wrapper.appendChild(b);
      c[a + "ScrollbarWrapper"] = b;
      b = d.createElement("div");
      if (!c.options.scrollbarClass) {
        b.style.cssText = "position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9); -" + vendor + "-background-clip:padding-box;-" + vendor + "-box-sizing:border-box; " + (a == "h" ? "height:100%" : "width:100%") + "; -" + vendor + "-border-radius:3px;border-radius:3px"
      }
      if (c.options.useTransform) {
        b.style.cssText += ";pointer-events:none;-" + vendor + "-transition-property:-" + vendor + "-transform; -" + vendor + "-transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);-" + vendor + "-transition-duration:0;-" + vendor + "-transform:" + translateOpen + "0,0" + translateClose
      }
      c[a + "ScrollbarWrapper"].appendChild(b);
      c[a + "ScrollbarIndicator"] = b
    }
    if (a == "h") {
      c.hScrollbarSize = c.hScrollbarWrapper.clientWidth;
      c.hScrollbarIndicatorSize = Math.max(Math.round(c.hScrollbarSize * c.hScrollbarSize / c.scrollerW), 8);
      c.hScrollbarIndicator.style.width = c.hScrollbarIndicatorSize + "px";
      c.hScrollbarMaxScroll = c.hScrollbarSize - c.hScrollbarIndicatorSize;
      c.hScrollbarProp = c.hScrollbarMaxScroll / c.maxScrollX
    } else {
      c.vScrollbarSize = c.vScrollbarWrapper.clientHeight;
      c.vScrollbarIndicatorSize = Math.max(Math.round(c.vScrollbarSize * c.vScrollbarSize / c.scrollerH), 8);
      c.vScrollbarIndicator.style.height = c.vScrollbarIndicatorSize + "px";
      c.vScrollbarMaxScroll = c.vScrollbarSize - c.vScrollbarIndicatorSize;
      c.vScrollbarProp = c.vScrollbarMaxScroll / c.maxScrollY
    }
    c._scrollbarPos(a, true)
  },
  _resetPos: function(c) {
    var a = this,
      d = a.x >= a.minScrollX ? a.minScrollX : a.x < a.maxScrollX ? a.maxScrollX : a.x,
      b = a.y >= a.minScrollY || a.maxScrollY > 0 ? a.minScrollY : a.y < a.maxScrollY ? a.maxScrollY : a.y;
    if (d == a.x && b == a.y) {
      if (a.moved) {
        a.moved = false;
        if (a.options.onScrollEnd && !a.contentoffsetmove && ((this.vScroll && (this.direction == $KW.touch.TouchContext.UP || this.direction == $KW.touch.TouchContext.DOWN)) || (this.hScroll && (this.direction == $KW.touch.TouchContext.LEFT || this.direction == $KW.touch.TouchContext.RIGHT)))) {
          a.options.onScrollEnd.call(a)
        }
      }
      if (a.hScrollbar && a.options.hideScrollbar) {
        a.hScrollbarWrapper.style[vendor + "TransitionDelay"] = "100ms";
        a.hScrollbarWrapper.style.opacity = "0"
      }
      if (a.vScrollbar && a.options.hideScrollbar) {
        a.vScrollbarWrapper.style[vendor + "TransitionDelay"] = "100ms";
        a.vScrollbarWrapper.style.opacity = "0"
      }
      return
    }
    a.scrollTo(d, b, c || 0)
  },
  scrollTo: function(a, h, g, f) {
    var e = this,
      d = a,
      c, b;
    e.stop();
    if (!d.length) {
      d = [{
        x: a,
        y: h,
        time: g,
        relative: f
      }]
    }
    for (c = 0, b = d.length; c < b; c++) {
      if (d[c].relative) {
        d[c].x = e.x - d[c].x;
        d[c].y = e.y - d[c].y
      }
      e.steps.push({
        x: d[c].x,
        y: d[c].y,
        time: d[c].time || 0
      })
    }
    e._startAni()
  },
  scrollToElement: function(b, d, c, a) {
    if (!b) {
      return
    }
    if (!d) {
      d = 1000
    }
    var h = this;
    pos = h._offset(b);
    pos.left += h.wrapperOffsetLeft;
    pos.top += h.wrapperOffsetTop;
    pos.left = pos.left >= h.minScrollX ? h.minScrollX : pos.left <= h.maxScrollX ? h.maxScrollX : pos.left;
    pos.top = pos.top >= h.minScrollY ? h.minScrollY : pos.top <= h.maxScrollY ? h.maxScrollY : pos.top;
    d = d === undefined ? Math.max(Math.abs(pos.left) * 2, Math.abs(pos.top) * 2) : d;
    if (this.scrollerH > this.wrapperH || this.scrollerW > this.wrapperW) {
      var f = 0;
      var g = 0;
      var j = false;
      if (((Math.abs(this.y) + this.wrapperH) < (b.offsetTop + b.offsetHeight)) || (b.offsetTop < Math.abs(this.y)) || ($KU.isWindowsPhone && !c && !a)) {
        if (c) {
          return pos.top
        }
        f = pos.top;
        j = true
      }
      if (((Math.abs(this.x) + this.wrapperW) < (b.offsetLeft + b.offsetWidth)) || (b.offsetLeft < Math.abs(this.x)) || ($KU.isWindowsPhone && !a)) {
        g = pos.left;
        j = true
      }
      if (j) {
        h.scrollTo(g, f, d)
      }
      if (kony.appinit.isiPhone) {
        b.focus()
      } else {
        setTimeout(function() {
          try {
            b.focus()
          } catch (k) {}
        }, d)
      }
    } else {
      if ($KU.isWindowsTablet) {
        setTimeout(function() {
          try {
            b.focus()
          } catch (k) {}
        }, 0)
      } else {
        try {
          b.focus()
        } catch (i) {}
      }
    }
    if (c) {
      return null
    }
    return pos
  },
  stop: function() {
    cancelFrame(this.aniTime);
    this.steps = [];
    this.moved = false;
    this.animating = false
  },
  _startAni: function() {
    var g = this,
      b = g.x,
      a = g.y,
      e = new Date().valueOf(),
      f, d;
    if (g.animating) {
      return
    }
    if (!g.steps.length) {
      g._resetPos(400);
      return
    }
    f = g.steps.shift();
    if (f.x == b && f.y == a) {
      f.time = 0
    }
    g.animating = true;
    g.moved = true;
    (function c() {
      var h = new Date().valueOf(),
        j, i;
      if (h >= e + f.time) {
        g.animateTo(f.x, f.y);
        g.animating = false;
        g._startAni();
        return
      }
      if (h === e) {
        h++
      }
      h = (h - e) / f.time - 1;
      d = Math.sqrt(1 - h * h);
      j = (f.x - b) * d + b;
      i = (f.y - a) * d + a;
      g.animateTo(j, i);
      if (g.animating) {
        g.aniTime = nextFrame(c)
      }
    })()
  },
  _momentum: function(h, c, f, a, k) {
    var i = ($KU.isWindowsTouch ? 4 : 1);
    var g = 0.0006,
      d = Math.abs(h) / c * i,
      b = (d * d) / (2 * g),
      j = 0,
      e = 0;
    if (h > 0 && b > f) {
      e = k / (6 / (b / d * g));
      f = f + e;
      d = d * f / b;
      b = f
    } else {
      if (h < 0 && b > a) {
        e = k / (6 / (b / d * g));
        a = a + e;
        d = d * a / b;
        b = a
      }
    }
    b = b * (h < 0 ? -1 : 1);
    j = d / g;
    return {
      dist: b,
      time: Math.round(j)
    }
  },
  _offset: function(a) {
    var d = -a.offsetLeft,
      c = -a.offsetTop;
    try {
      while (a = a.offsetParent) {
        if (this.options.useTransform == false && a.id && a.id.lastIndexOf("_scrollee") != -1) {
          continue
        }
        d -= a.offsetLeft;
        c -= a.offsetTop
      }
    } catch (b) {}
    return {
      left: d,
      top: c
    }
  },
  destroy: function() {
    this.hScrollbar = false;
    this.vScrollbar = false;
    this._scrollbar("h");
    this._scrollbar("v");
    if (this.scroller) {
      if ($KU.isTouchSupported) {
        kony.events.removeEventListener(this.scroller, "touchstart", this, false);
        kony.events.removeEventListener(this.scroller, "touchcancel", this, false)
      } else {
        if ($KU.isPointerSupported) {
          if ("onpointerdown" in window) {
            kony.events.removeEventListener(this.scroller, "pointerdown", this, false);
            kony.events.removeEventListener(this.scroller, "pointercancel", this, false)
          } else {
            kony.events.removeEventListener(this.scroller, "MSPointerDown", this, false);
            kony.events.removeEventListener(this.scroller, "MSPointerCancel", this, false)
          }
        } else {
          kony.events.removeEventListener(this.scroller, "mousedown", this);
          kony.events.removeEventListener(this.scroller, "mouseout", this)
        }
      }
    }
    if ($KU.isOrientationSupported) {
      kony.events.removeEventListener(window, "orientationchange", this, false)
    } else {
      kony.events.removeEventListener(window, "resize", this)
    }
    if (this.options.checkDOMChanges) {
      clearInterval(this.checkDOMTime)
    }
    var a = this.wrapper.getAttribute("kformname");
    if (!a && !this.options.scrollbox) {
      kony.events.removeEventListener(document, "touchmove", $KW.touch.preventDefault)
    }
  }
};
$KW.touch.StickyScroller = function() {
  var e = this;
  var a = document.forms;
  var c = a[0];
  if (a.length == 2) {
    c = a[1]
  }
  var f = c.id;
  var b = $KG.__currentForm.header;
  var d = $KG.__currentForm.footer;
  var g = "konyappmenudiv";
  this.wrapper = document.getElementById(f);
  this.header = document.getElementById(b);
  this.footer = document.getElementById(d);
  this.appmenu = document.getElementById(g);
  if (this.appmenu && this.footer) {
    this.footer.style.bottom = this.appmenu.clientHeight + "px"
  }
  setTimeout(function() {
    e.follow()
  }, 0);
  kony.events.addEventListener(window, "scroll", this, false)
};
$KW.touch.StickyScroller.prototype = {
  handleEvent: function(a) {
    switch (a.type) {
      case "scroll":
        this.follow(a);
        break
    }
  },
  follow: function() {
    var d = window.scrollX || document.documentElement.scrollLeft;
    var c = window.scrollY || document.documentElement.scrollTop;
    this.headerH = this.header ? this.header.clientHeight : 0;
    this.footerH = this.footer ? this.footer.clientHeight : 0;
    this.appmenuH = this.appmenu ? this.appmenu.clientHeight : 0;
    this.wrapper.style.top = -(this.footerH + this.appmenuH) + "px";
    if (this.header) {
      var b = c;
      this.header.style[vendor + "Transform"] = translateOpen + d + "px," + b + "px" + translateClose
    }
    if (this.footer) {
      var e = (window.innerHeight || document.body.clientHeight) + c - (this.footerH) - (this.headerH);
      this.footer.style.bottom = this.y1 + this.appmenuH + "px";
      this.footer.style[vendor + "Transform"] = translateOpen + d + "px," + e + "px" + translateClose
    }
    if (this.appmenu) {
      var a = (window.innerHeight || document.body.clientHeight) + c - (this.footerH) - (this.headerH) - (this.appmenuH);
      this.appmenu.style[vendor + "Transform"] = translateOpen + d + "px," + a + "px" + translateClose
    }
  },
  destroy: function() {
    kony.events.removeEventListener(window, "scroll", this, false)
  }
};
$KW.touch.gesture = function(b, e) {
  var d = e.gestureType,
    f = e.gestureObj,
    g = e.callback;
  var c = (b ? document.querySelectorAll("#" + b.pf + "_" + b.id) : document);
  if (["Form", "Form2"].contains(b.wType)) {
    if ($KG.nativeScroll) {
      c = document.getElementById(b.id)
    } else {
      c = document.querySelector('div[id="' + b.id + '_scroller"]')
    }
  }
  if (!b) {
    b = $KG
  }
  if (!$KG.gestures) {
    $KG.gestures = {}
  }
  this.gestureIdentifier = e.gestureIdentifier;
  $KG.gestures[this.gestureIdentifier] = {
    widgetModel: b,
    gestureType: d
  };
  this.widgetModel = b;
  this.gestureType = d;
  switch (this.gestureType) {
    case constants.GESTURE_TYPE_TAP:
    case 10:
    case 11:
      this.TAP = true;
      break;
    case constants.GESTURE_TYPE_SWIPE:
      this.SWIPE = true;
      break;
    case constants.GESTURE_TYPE_LONGPRESS:
      this.LONGPRESS = true;
      break;
    case constants.GESTURE_TYPE_PAN:
      this.PAN = true;
      break;
    case constants.GESTURE_TYPE_ROTATION:
      this.ROTATION = true;
      break;
    case constants.GESTURE_TYPE_PINCH:
      this.PINCH = true;
      break
  }
  this.gestureObj = f;
  this.callback = g;
  this.fingers = f.fingers || 1;
  this.taps = f.taps || 1;
  this.longTapDelay = parseInt(f.pressDuration, 10) * 1000 || 1000;
  this.swipedistance = (f.swipedistance || 50) * $KU.dpi;
  this.continuousEvents = f.continuousEvents || false;
  e.instance = this;
  if (!c || (typeof c.length == "number" && c.length == 0)) {
    return this.gestureIdentifier
  }
  if (typeof c.length != "number" || ($KG.nativeScroll && ["Form", "Form2"].contains(b.wType))) {
    this.widget = [c]
  } else {
    this.widget = c
  }
  for (var a = 0; a < this.widget.length; a++) {
    if (this.gestureType === constants.GESTURE_TYPE_PAN || this.gestureType === constants.GESTURE_TYPE_ROTATION || this.gestureType === constants.GESTURE_TYPE_PINCH) {
      kony.events.addEventListener(this.widget[a], "gesturestart", this, false)
    } else {
      if ($KU.isPointerSupported) {
        kony.events.addEventListener(this.widget[a], "MSPointerDown", this, false)
      } else {
        kony.events.addEventListener(this.widget[a], "touchstart", this, false)
      }
    }
  }
  return this.gestureIdentifier
};
$KW.touch.gesture.prototype = {
  removeGesture: function(c, d) {
    clearTimeout(this.touchTimer);
    clearTimeout(this.longPressTimer);
    if (d != false) {
      this.widgetModel.gestures[c] = ""
    }
    var b = this.widget;
    for (var a = 0; b && a < b.length; a++) {
      if ($KU.isPointerSupported) {
        if ("onpointerdown" in window) {
          kony.events.removeEventListener(b[a], "pointerdown", this, false);
          kony.events.removeEventListener(b[a], "pointermove", this, false);
          kony.events.removeEventListener(b[a], "pointerup", this, false);
          kony.events.removeEventListener(b[a], "pointercancel", this, false)
        } else {
          kony.events.removeEventListener(b[a], "MSPointerDown", this, false);
          kony.events.removeEventListener(b[a], "MSPointerMove", this, false);
          kony.events.removeEventListener(b[a], "MSPointerUp", this, false);
          kony.events.removeEventListener(b[a], "MSPointerCancel", this, false)
        }
      } else {
        kony.events.removeEventListener(b[a], "touchstart", this, false);
        kony.events.removeEventListener(b[a], "touchmove", this, false);
        kony.events.removeEventListener(b[a], "touchend", this, false);
        kony.events.removeEventListener(b[a], "gesturestart", this, false);
        kony.events.removeEventListener(b[a], "gesturechange", this, false);
        kony.events.removeEventListener(b[a], "gestureend", this, false);
        kony.events.removeEventListener(b[a], "touchcancel", this, false)
      }
    }
  },
  handleEvent: function(a) {
    switch (a.type) {
      case "touchstart":
      case "MSPointerDown":
      case "pointerdown":
        this.onTouchStart(a);
        break;
      case "touchmove":
      case "MSPointerMove":
      case "pointermove":
        this.onTouchMove(a);
        break;
      case "touchend":
      case "MSPointerUp":
      case "pointerup":
      case "touchcancel":
      case "MSPointerCancel":
      case "pointercancel":
        this.onTouchEnd(a);
        break;
      case "gesturestart":
        this.onGestureStart(a);
        break;
      case "gesturechange":
        this.onGestureChange(a);
        break;
      case "gestureend":
        this.onGestureEnd(a);
        break
    }
  },
  onTouchStart: function(c) {
    var e = c.touches && c.touches[0] || c;
    this.currentTouch = c;
    if ($KU.isPointerSupported) {
      if ("onpointerdown" in window) {
        kony.events.addEventListener(c.currentTarget, "pointermove", this, false);
        kony.events.addEventListener(c.currentTarget, "pointerup", this, false);
        kony.events.addEventListener(c.currentTarget, "pointercancel", this, false)
      } else {
        kony.events.addEventListener(c.currentTarget, "MSPointerMove", this, false);
        kony.events.addEventListener(c.currentTarget, "MSPointerUp", this, false);
        kony.events.addEventListener(c.currentTarget, "MSPointerCancel", this, false)
      }
    } else {
      kony.events.addEventListener(c.currentTarget, "touchmove", this, false);
      kony.events.addEventListener(c.currentTarget, "touchend", this, false);
      kony.events.addEventListener(c.currentTarget, "touchcancel", this, false)
    }
    this.x1 = e.pageX;
    this.y1 = e.pageY;
    var a = new Date().valueOf();
    var d = a - (this.doubleTimer || a);
    this.last = this.doubleTimer = a;
    if (d > 0 && d <= 250) {
      this.isDoubleTap = true
    } else {
      this.isDoubleTap = false
    }
    this.touchTimer && clearTimeout(this.touchTimer);
    this.curTarget = c.currentTarget;
    var b = this;
    this.LONGPRESS && (this.longPressTimer = setTimeout(function() {
      b.onLongTap(b.curTarget)
    }, this.longTapDelay))
  },
  onTouchMove: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.x2 = b.pageX;
    this.y2 = b.pageY
  },
  onTouchEnd: function(g) {
    var h = g.touches && g.touches[0] || g;
    var f = this;
    this.currentTouch = g;
    if ($KU.isPointerSupported) {
      if ("onpointerdown" in window) {
        kony.events.removeEventListener(g.currentTarget, "pointermove", this, false);
        kony.events.removeEventListener(g.currentTarget, "pointerup", this, false);
        kony.events.removeEventListener(g.currentTarget, "pointercancel", this, false)
      } else {
        kony.events.removeEventListener(g.currentTarget, "MSPointerMove", this, false);
        kony.events.removeEventListener(g.currentTarget, "MSPointerUp", this, false);
        kony.events.removeEventListener(g.currentTarget, "MSPointerCancel", this, false)
      }
    } else {
      kony.events.removeEventListener(g.currentTarget, "touchmove", this, false);
      kony.events.removeEventListener(g.currentTarget, "touchend", this, false);
      kony.events.removeEventListener(g.currentTarget, "touchcancel", this, false)
    }
    if (this.isDoubleTap && this.TAP && this.taps == 2) {
      kony.print("DOUBLE TAP");
      this.executeCallback(g.currentTarget);
      delete this.doubleTimer
    }
    var d = (this.x2 ? this.x2 : this.x1) - this.x1;
    var b = (this.y2 ? this.y2 : this.y1) - this.y1;
    if ((this.x2 > 0 && d != 0) || (this.y2 > 0 && b != 0)) {
      if (this.SWIPE) {
        var c = Math.abs(d);
        var a = Math.abs(b);
        if (c > this.swipedistance || a > this.swipedistance) {
          var e = $KU.getSwipeDirection(d, b);
          kony.print("SWIPE: " + e);
          this.executeCallback(g.currentTarget, e)
        }
      }
      this.x1 = this.x2 = this.y1 = this.y2 = 0
    } else {
      if (this.last) {
        if (this.TAP && this.taps == 1) {
          if (this.widgetModel.gestures && this.widgetModel.gestures[10] && this.widgetModel.gestures[11]) {
            this.touchTimer = setTimeout(function() {
              if ($KG.gestures[f.gestureIdentifier]) {
                var j = false;
                var i = f.widgetModel.gestures[11];
                for (var k in i) {
                  j = i[k].instance.isDoubleTap
                }
                if (!j) {
                  f.executeCallback(g.currentTarget)
                }
              }
            }, 250)
          } else {
            if ($KG.gestures[f.gestureIdentifier]) {
              kony.print("TAP");
              f.executeCallback(g.currentTarget)
            }
          }
        }
      }
    }
    this.last = 0
  },
  onTouchCancel: function() {},
  onGestureStart: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.currentTouch = a;
    kony.events.addEventListener(a.currentTarget, "gesturechange", this, false);
    kony.events.addEventListener(a.currentTarget, "gestureend", this, false);
    this.x1 = b.pageX;
    this.y1 = b.pageY;
    this.gestureStartTime = new Date().valueOf();
    this.excecuteGestureEvent(a, 1)
  },
  onGestureChange: function(a) {
    if (!a) {
      return
    }
    if (this.continuousEvents) {
      var b = a.touches && a.touches[0] || a;
      this.x2 = b.pageX;
      this.y2 = b.pageY;
      this.excecuteGestureEvent(a, 2)
    }
  },
  onGestureEnd: function(a) {
    kony.events.removeEventListener(a.currentTarget, "gesturechange", this, false);
    kony.events.removeEventListener(a.currentTarget, "gestureend", this, false);
    var b = a.touches && a.touches[0] || a;
    this.x2 = b.pageX;
    this.y2 = b.pageY;
    this.excecuteGestureEvent(a, 3)
  },
  excecuteGestureEvent: function(b, f) {
    if (this.ROTATION) {
      this.rotation = b.rotation;
      this.executeCallback(b.currentTarget, null, f)
    }
    this.scale = b.scale;
    if (this.PINCH && b.scale !== 1) {
      if (f && f > 1) {
        var a = new Date().valueOf();
        var c = (a - this.gestureStartTime) / 1000;
        this.velocity = (1 - b.scale) / c;
        this.velocityX = (this.x2 - this.x1) / c;
        this.velocityY = (this.y2 - this.y1) / c
      }
      try {
        this.executeCallback(b.currentTarget, null, f)
      } catch (d) {}
    }
    if (this.PAN) {
      this.executeCallback(b.currentTarget, null, f)
    }
  },
  onLongTap: function(a) {
    if (this.last && this.LONGPRESS) {
      var b = new Date().valueOf() - this.last;
      if (b >= this.longTapDelay) {
        if ($KG.gestures[this.gestureIdentifier]) {
          kony.print("LONGPRESS: " + this.longTapDelay + "ms");
          this.executeCallback(a)
        }
      }
    }
  },
  executeCallback: function(n, o, r) {
    if (this.callback) {
      var f = {};
      var b = $KU.cloneObj(this.gestureObj);
      f.gestureType = this.gestureType;
      f.gesturesetUpParams = b;
      f.gestureState = r;
      f.rotation = this.rotation ? (-this.rotation) : 0;
      f.velocity = this.velocity || 0;
      f.velocityX = this.velocityX || 0;
      f.velocityY = this.velocityY || 0;
      f.scale = this.scale || 1;
      var e = n && (n !== document) ? n : (this.widget.length ? this.widget[0] : this.widget);
      var q = $KW.Utils.getOffset(e);
      var i = (this.currentTouch.touches && this.currentTouch.touches[0]) || this.currentTouch;
      f.gesturePosition = $KU.getgesturePosition(i.pageX, i.pageY, e.clientWidth, e.clientHeight, q.left, q.top);
      if (f.gestureType == constants.GESTURE_TYPE_SWIPE) {
        f.swipeDirection = $KU.getIntegerDirection(o)
      }
      f.gestureX = this.x2 || this.x1;
      f.gestureY = this.y2 || this.y1;
      f.widgetWidth = e.clientWidth;
      f.widgetHeight = e.clientHeight;
      if (f.gestureType == constants.GESTURE_TYPE_PAN) {
        f.translationX = Math.abs(f.gestureX - this.x1);
        f.translationY = Math.abs(f.gestureY - this.y1)
      }
      var l = this.widgetModel;
      if (n && (n !== document)) {
        var h = n.getAttribute("kcontainerid");
        var c = "";
        if (h) {
          c = n;
          while (c && !(c.id.split("_")[1] === h)) {
            c = c.parentNode
          }
        }
        var a = {};
        if (c && c.getAttribute("kwidgettype") === "Segment") {
          var d = $KU.getParentByTagName(n, "li");
          var g = $KU.getModelByNode(c);
          var k;
          a.widgetInfo = g;
          if (g.hasSections) {
            var j = d.getAttribute("secindex").split(",");
            a.rowIndex = +j[1];
            a.sectionIndex = +j[0];
            rowdata = g.data[a.sectionIndex][IndexJL + 1][a.rowIndex]
          } else {
            a.rowIndex = +d.getAttribute("index");
            a.sectionIndex = 0;
            rowdata = g.data[a.rowIndex]
          }
          var p = rowdata && rowdata[g.widgetdatamap[this.widgetModel.id]];
          l = $KU.extend({}, this.widgetModel);
          if (p) {
            l = $KU.extend(l, p)
          }
        }
      }
      var m = this.widgetModel.__currentForm;
      if (m) {
        this.callback(m, f)
      } else {
        if (n) {
          this.callback(l, f, a)
        } else {
          this.callback(this.widgetModel, f)
        }
      }
    }
  }
};
$KW.touch.events = {};
(function() {
  var a = false;
  if (a) {
    $KW.touch.events.touchstart = "touchstart";
    $KW.touch.events.touchmove = "touchmove";
    $KW.touch.events.touchend = "touchend";
    $KW.touch.events.touchcancel = "touchcancel"
  } else {
    $KW.touch.events.touchstart = "mousedown";
    $KW.touch.events.touchmove = "mousemove";
    $KW.touch.events.touchend = "mouseup";
    $KW.touch.events.touchcancel = "mouseout"
  }
  if (document.addEventListener) {
    $KW.touch.events.eventListener = "addEventListener"
  } else {
    $KW.touch.events.eventListener = "attachEvent";
    $KW.touch.events.touchstart = "mousedown";
    $KW.touch.events.touchmove = "mousemove";
    $KW.touch.events.touchend = "mouseup";
    $KW.touch.events.touchcancel = "mouseout"
  }
  var b = navigator.msPointerEnabled;
  if (b) {
    if ("onpointerdown" in window) {
      $KW.touch.events.touchstart = "pointerdown";
      $KW.touch.events.touchmove = "pointermove";
      $KW.touch.events.touchend = "pointerup"
    } else {
      $KW.touch.events.touchstart = "MSPointerDown";
      $KW.touch.events.touchmove = "MSPointerMove";
      $KW.touch.events.touchend = "MSPointerUp"
    }
  }
  if (document.removeEventListener) {
    $KW.touch.events.removeEventListener = "removeEventListener"
  } else {
    $KW.touch.events.removeEventListener = "detachEvent"
  }
})();
$KW.touch.TouchEvents = function(c, d, b, e) {
  var a = $KW.touch.events.touchstart;
  switch (b) {
    case "touchstart":
      a = $KW.touch.events.touchstart;
      break;
    case "touchmove":
      a = $KW.touch.events.touchmove;
      break;
    case "touchend":
      a = $KW.touch.events.touchend;
      break;
    case "touchcancel":
      a = $KW.touch.events.touchcancel;
      break;
    case "scroll":
      a = "scroll";
      break
  }
  if (e || b == "scroll") {
    if (e) {
      this.callback = e
    }
    this.widgetModel = c;
    this.widgetNode = d;
    this.widgetTopNode = $KW.Utils.getWidgetNodeFromNodeByModel(c, d) || d;
    this.handleEventListener = this.handleEvent.bind(this);
    kony.events.addEventListener(d, a, this.handleEventListener, false);
    if (b == "scroll") {
      kony.events.addEventListener(d, kony.appinit.isFirefox ? "DOMMouseScroll" : "mousewheel", this.handleEventListener, false);
      this.isScrolling = false
    }
  } else {
    kony.events.removeEventListener(d, a, this.handleEventListener, false)
  }
};
$KW.touch.TouchEvents.prototype = {
  removeTouch: function(b, c) {
    if (c != false) {
      this.widgetModel.touches[b] = ""
    }
    var d = this.widgetNode;
    var a = $KW.touch.events.touchstart;
    switch (b) {
      case "touchstart":
        a = $KW.touch.events.touchstart;
        break;
      case "touchmove":
        a = $KW.touch.events.touchmove;
        break;
      case "touchend":
        a = $KW.touch.events.touchend;
        break;
      case "touchcancel":
        a = $KW.touch.events.touchcancel;
        break
    }
    kony.events.removeEventListener(d, a, this.handleEventListener, false)
  },
  handleEvent: function(c) {
    if (c.type == "scroll" || c.type == "mousewheel" || c.type == "DOMMouseScroll") {
      this.handleScrollEvent(c)
    } else {
      var e = (c.touches && c.touches[0]) || (c.changedTouches && c.changedTouches[0]) || c;
      var a = e.pageX || e.clientX;
      var b = e.pageY || e.clientY;
      var d = $KW.Utils.getPosition(this.widgetTopNode);
      a = a - d.left;
      b = b - d.top;
      this.callback.call(this.widgetModel, this.widgetModel, a, b)
    }
  },
  handleScrollEvent: function(e) {
    var f = this.widgetModel;
    if (!f.enableScrolling) {
      return
    }
    var d = f.frame;
    var h = this.widgetNode;
    var b = d.width;
    var l = d.height;
    var o = (f.wType == "Form") ? "vertical" : $KW.stringifyScrolldirection[f.scrolldirection];
    var k = true;
    var n = b + h.scrollLeft;
    var j = l + h.scrollTop;
    var i = false;
    if ((e.wheelDelta && e.wheelDelta > 0) || (e.detail && e.detail < 0)) {
      i = true
    }
    var g = (h.scrollLeft == 0 && i);
    var c = (h.scrollTop == 0 && i);
    if (o == "horizontal") {
      if (n >= h.scrollWidth || c) {
        k = false
      }
    } else {
      if (o == "vertical") {
        if (j >= h.scrollHeight || g) {
          k = false
        }
      } else {
        if (o == "both") {
          if (n >= h.scrollWidth && j >= h.scrollHeight || (g && c)) {
            k = false
          }
        } else {
          if (o == "none") {
            k = false
          }
        }
      }
    }
    if (k) {
      if (!this.isScrolling) {
        var a = f.onScrollStart;
        if (a) {
          a.call(f, f)
        }
        this.isScrolling = true
      }
      var m = f.onScrolling;
      m && m.call(f, f);
      this.timer && clearTimeout(this.timer);
      this.timer = setTimeout(this.scrollEndCaller.bind(this), 100)
    }
  },
  scrollEndCaller: function() {
    var a = this.widgetModel;
    this.isScrolling = false;
    var b = a.onScrollEnd;
    b && b.call(a, a)
  }
};
$KW.touch.Drag = function(a, d, f, e, c, b) {
  this.model = a;
  this.widget = d;
  this.dragEvent = c;
  this.dragableElement = f;
  this.containerElement = e || document;
  this.moveElement = b || f;
  if (f) {
    kony.events.addEventListener(f, $KW.touch.events.touchstart, this.handleEvent.bind(this))
  }
};
$KW.touch.Drag.prototype = {
  addDrag: function() {
    if (this.dragableElement) {
      kony.events.addEventListener(this.dragableElement, $KW.touch.events.touchstart, this.handleEvent.bind(this))
    }
  },
  removeDrag: function() {
    this.dragableElement[kony.widgets.touch.events.removeEventListener]($KW.touch.events.touchstart, this, false)
  },
  handleEvent: function(a) {
    switch (a.type) {
      case $KW.touch.events.touchstart:
        return this.onTouchStart(a);
        break;
      case $KW.touch.events.touchmove:
        return this.onTouchMove(a);
        break;
      case $KW.touch.events.touchend:
        return this.onTouchEnd(a);
        break;
      case $KW.touch.events.touchcancel:
        return this.onTouchCancel(a);
        break
    }
  },
  onTouchStart: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.x1 = b.pageX || b.clientX;
    this.y1 = b.pageY || b.clientY;
    if (this.model && this.model.wType == "Popup") {
      if (this.dragableElement.className == "resizearea") {
        this.offsetX = this.moveElement.offsetWidth;
        this.offsetY = this.moveElement.childNodes[0].children[1].clientHeight
      } else {
        this.dragableElement.style.cursor = "move";
        this.offsetX = $KU.getInt(this.moveElement.offsetLeft);
        this.offsetY = $KU.getInt(this.moveElement.offsetTop)
      }
      this.dragEvent(this, $KW.touch.events.touchstart)
    } else {
      kony.events.stopPropagation(a);
      this.dragEvent(this.moveElement, this.x1, this.y1, "1")
    }
    this.handleEventListener = this.handleEvent.bind(this);
    kony.events.addEventListener(this.containerElement, $KW.touch.events.touchmove, this.handleEventListener);
    kony.events.addEventListener(this.containerElement, $KW.touch.events.touchend, this.handleEventListener);
    document.onselectstart = function() {
      return false
    };
    this.dragableElement.ondragstart = function() {
      return false
    };
    return false
  },
  onTouchMove: function(d) {
    var f = d.touches && d.touches[0] || d;
    this.x2 = f.pageX || f.clientX;
    this.y2 = f.pageY || f.clientY;
    if (this.model && this.model.wType == "Popup") {
      var b = this.offsetX + this.x2 - this.x1;
      var c = this.offsetY + this.y2 - this.y1;
      var a = (document.documentElement.clientHeight || window.innerHeight || document.body.clientHeight) - this.widget.clientHeight;
      var e = (document.documentElement.clientWidth || window.innerWidth || document.body.clientWidth) - this.widget.clientWidth;
      if (this.dragableElement.className == "resizearea") {
        this.moveElement.style.width = Math.max(b, 150) + "px";
        this.moveElement.childNodes[0].children[1].style.height = Math.max(c, 100) + "px"
      } else {
        if (b < 0) {
          this.moveElement.style.left = "0px"
        } else {
          if (b > e) {
            this.moveElement.style.left = e + "px"
          } else {
            this.moveElement.style.left = (this.offsetX + this.x2 - this.x1) + "px"
          }
        }
        if (c < 0) {
          this.moveElement.style.top = "0px"
        } else {
          if (c > a) {
            this.moveElement.style.top = a + "px"
          } else {
            this.moveElement.style.top = (this.offsetY + this.y2 - this.y1) + "px"
          }
        }
      }
      this.dragEvent(this, $KW.touch.events.touchmove)
    } else {
      this.dragEvent(this.moveElement, this.x2, this.y2, "2")
    }
  },
  onTouchEnd: function(a) {
    var b = a.touches && a.touches[0] || a;
    this.x3 = b.pageX || b.clientX;
    this.y3 = b.pageY || b.clientY;
    if (this.model && this.model.wType == "Popup") {
      this.dragEvent(this, $KW.touch.events.touchend)
    } else {
      this.dragEvent(this.moveElement, this.x3, this.y3, "3")
    }
    document.onselectstart = null;
    this.dragableElement.ondragstart = null;
    this.removeEvents()
  },
  onTouchCancel: function() {
    this.dragEvent(this, $KW.touch.events.touchend);
    this.removeEvents()
  },
  removeEvents: function() {
    this.dragableElement.style.cursor = "auto";
    kony.events.removeEventListener(this.containerElement, kony.widgets.touch.events.touchmove, this.handleEventListener);
    kony.events.removeEventListener(this.containerElement, kony.widgets.touch.events.touchend, this.handleEventListener)
  }
};
constants = {
  ALERT_TYPE_CONFIRMATION: "confirmation",
  ALERT_TYPE_ERROR: "error",
  ALERT_TYPE_INFO: "info",
  APPLICATION_MODE_NATIVE: 1,
  APPLICATION_MODE_HYBRID: 2,
  APPLICATION_MODE_WRAPPER: 3,
  API_LEVEL: "APILevel",
  API_LEVEL_6000: 6000,
  BOX_LAYOUT_HORIZONTAL: 1,
  BOX_LAYOUT_VERTICAL: 2,
  BOX_LAYOUT_ALIGN_FROM_LEFT: 3,
  BOX_LAYOUT_ALIGN_FROM_CENTER: 4,
  BOX_LAYOUT_ALIGN_FROM_RIGHT: 5,
  BOX_POSITION_AS_HEADER: 1,
  BOX_POSTION_AS_FOOTER: 2,
  BOX_POSITION_AS_NORMAL: 3,
  BOX_POSITION_AS_SCREENLEVEL_SEG_HEADER: 4,
  BOX_POSITION_AS_SCREENLEVEL_SEG_FOOTER: 5,
  CHECKBOX_ITEM_ORIENTATION_VERTICAL: "vertical",
  CHECKBOX_ITEM_ORIENTATION_HORIZONTAL: 2,
  CHECKBOX_VIEW_TYPE_DEFAULTTVIEW: "defaultview",
  CHECKBOX_VIEW_TYPE_CUSTOMVIEW: "customview",
  CHECKBOX_VIEW_TYPE_LISTVIEW: 0,
  CHECKBOX_VIEW_TYPE_TABLEVIEW: "tableview",
  CHECKBOX_VIEW_TYPE_TOGGLEVIEW: "toggleview",
  CHECKBOX_VIEW_TYPE_ONSCREENWHEEL: 3,
  COMBOBOX_VIEW_TYPE_LISTVIEW: 0,
  COMBOBOX_VIEW_TYPE_TABLEVIEW: "tableview",
  COMBOBOX_VIEW_TYPE_TOGGLEVIEW: "toggleview",
  COMBOBOX_VIEW_TYPE_ONSCREENWHEEL: 3,
  CONTAINER_HEIGHT_BY_FORM_REFERENCE: 1,
  CONTAINER_HEIGHT_BY_PARENT_WIDTH: 2,
  CONTAINER_HEIGHT_BY_DEVICE_REFERENCE: 3,
  CALENDAR_VIEW_TYPE_DEFAULT: "default",
  CALENDAR_VIEW_TYPE_GRID_POPUP: "popup",
  CALENDAR_VIEW_TYPE_GRID_ONSCREEN: "onscreen",
  CALENDAR_DATE_FORMAT_DEFAULT: "dd/MM/yyyy",
  DEVICE_ORIENTATION_PORTRAIT: 1,
  DEVICE_ORIENTATION_LANDSCAPE: 2,
  FORM_TYPE_STATIC: 1,
  FORM_TYPE_DYNAMIC: 2,
  FORM_TYPE_NATIVE: 3,
  FORM_DISPLAY_ORIENTATION_PORTRAIT: 1,
  FORM_DISPLAY_ORIENTATION_LANDSCAPE: 2,
  FORM_DISPLAY_ORIENTATION_BOTH: 3,
  FORM_DEVICE_ORIENTATION_PORTRAIT: 1,
  FORM_DEVICE_ORIENTATION_LANDSCAPE: 2,
  FORM_ADJUST_RESIZE: 1,
  FORM_ADJUST_PAN: 2,
  FORM_FORWARD_NAVIGATION: 1,
  HTTP_METHOD_GET: "get",
  HTTP_METHOD_POST: "post",
  HTTP_RESPONSE_TYPE_TEXT: "application/text",
  HTTP_RESPONSE_TYPE_JSON: "application/json",
  HTTP_RESPONSE_TYPE_DOCUMENT: "application/xml",
  HTTP_RESPONSE_TYPE_RAWDATA: "image/png",
  HTTP_READY_STATE_UNSENT: 0,
  HTTP_READY_STATE_OPENED: 1,
  HTTP_READY_STATE_HEADERS_RECEIVED: 2,
  HTTP_READY_STATE_LOADING: 3,
  HTTP_READY_STATE_DONE: 4,
  IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS: 0,
  IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO: "maintainaspectratio",
  IMAGE_SCALE_MODE_CROP: 2,
  IMAGE_GLOSSY_EFFECT_DEFAULT: 0,
  IMAGE_GLOSSY_EFFECT_RADIAL: 1,
  IMAGE_GLOSSY_EFFECT_LINEAR: 2,
  LOADING_SCREEN_POSITION_FULL_SCREEN: "fullscreen",
  LOADING_SCREEN_POSITION_ONLY_CENTER: "center",
  LISTBOX_VIEW_TYPE_LISTVIEW: 0,
  LISTBOX_VIEW_TYPE_TABLEVIEW: 1,
  LISTBOX_VIEW_TYPE_TOGGLEVIEW: 2,
  LISTBOX_VIEW_TYPE_ONSCREENWHEEL: 3,
  LISTBOX_VIEW_TYPE_SPINNER: 4,
  MAP_PROVIDER_GOOGLE: "google",
  MAP_SOURCE_NON_NATIVE: "non-native",
  MAP_SOURCE_NATIVE: "native",
  MAP_SOURCE_STATIC: "static",
  MAP_VIEW_MODE_NORMAL: 1,
  MAP_VIEW_MODE_SATELLITE: 2,
  MAP_VIEW_MODE_HYBRID: 3,
  MAP_VIEW_MODE_TERRAIN: 7,
  MAP_VIEW_MODE_POLYGON: 5,
  MAP_HEIGHT_BY_FORM_REFERENCE: 1,
  MAP_HEIGHT_BY_PARENT_WIDTH: 2,
  NETWORK_TYPE_ANY: "ANY",
  NETWORK_TYPE_ETHERNET: "ETHERNET",
  NETWORK_TYPE_WIFI: "WIFI",
  NETWORK_TYPE_3G: "3G",
  POPUP_TYPE_NATIVE: 1,
  POPUP_TYPE_SPA: 2,
  POPUP_TYPE_TC: 3,
  RADIOGROUP_ITEM_ORIENTATION_VERTICAL: "vertical",
  RADIOGROUP_ITEM_ORIENTATION_HORIZONTAL: 2,
  RADIOBUTTON_VIEW_TYPE_DEFAULTTVIEW: "defaultview",
  RADIOBUTTON_VIEW_TYPE_CUSTOMVIEW: "customview",
  SCROLLBOX_HEIGHT_BY_FORM_REFERENCE: 1,
  SCROLLBOX_HEIGHT_BY_PARENT_WIDTH: 2,
  SCROLLBOX_SCROLL_HORIZONTAL: 1,
  SCROLLBOX_SCROLL_VERTICAL: 2,
  SCROLLBOX_SCROLL_BOTH: 3,
  SCROLLBOX_SCROLL_NONE: 4,
  SEGUI_VIEW_TYPE_TABLEVIEW: "tableview",
  SEGUI_VIEW_TYPE_PAGEVIEW: "pageview",
  SEGUI_DEFAULT_BEHAVIOR: 0,
  SEGUI_SINGLE_SELECT_BEHAVIOR: 1,
  SEGUI_MULTI_SELECT_BEHAVIOR: 2,
  TEXTBOX_INPUT_MODE_ANY: "A",
  TEXTBOX_INPUT_MODE_NUMERIC: "N",
  TEXTBOX_INPUT_MODE_PASSWORD: "P",
  TEXTBOX_KEY_BOARD_STYLE_DEFAULT: "A",
  TEXTBOX_KEY_BOARD_STYLE_EMAIL: "emailpad",
  TEXTBOX_KEY_BOARD_STYLE_URL: "urlpad",
  TEXTBOX_KEY_BOARD_STYLE_CHAT: "chatpad",
  TEXTBOX_KEY_BOARD_STYLE_DECIMAL: "number",
  TEXTBOX_KEY_BOARD_STYLE_NUMBER_PAD: "digitpad",
  TEXTBOX_KEY_BOARD_STYLE_PHONE_PAD: "telpad",
  TEXTBOX_VIEW_TYPE_DEFAULT: "default",
  TEXTBOX_VIEW_TYPE_SEARCH_VIEW: "search",
  TEXTBOX_AUTO_CAPITALIZE_NONE: "none",
  TEXTBOX_AUTO_CAPITALIZE_WORDS: "words",
  TEXTBOX_AUTO_CAPITALIZE_SENTENCES: "sentences",
  TEXTBOX_AUTO_CAPITALIZE_ALL: "characters",
  TEXTBOX_DEFAULT_PLATFORM_HEIGHT: 1,
  TEXTBOX_FONT_METRICS_DRIVEN_HEIGHT: 2,
  TEXTBOX_CUSTOM_HEIGHT: 3,
  CONTAINER_HEIGHT_BY_FORM_REFERENCE: 1,
  CONTAINER_HEIGHT_BY_PARENT_WIDTH: 2,
  TEXTAREA_INPUT_MODE_ANY: "A",
  TEXTAREA_INPUT_MODE_NUMERIC: "N",
  TEXTAREA_KEY_BOARD_STYLE_DEFAULT: "A",
  TEXTAREA_KEY_BOARD_STYLE_EMAIL: "emailpad",
  TEXTAREA_KEY_BOARD_STYLE_URL: "urlpad",
  TEXTAREA_KEY_BOARD_STYLE_CHAT: "chatpad",
  TEXTAREA_KEY_BOARD_STYLE_DECIMAL: "number",
  TEXTAREA_KEY_BOARD_STYLE_NUMBER_PAD: "number",
  TEXTAREA_KEY_BOARD_STYLE_PHONE_PAD: "telpad",
  TEXTAREA_AUTO_CAPITALIZE_NONE: "none",
  TEXTAREA_AUTO_CAPITALIZE_WORDS: "words",
  TEXTAREA_AUTO_CAPITALIZE_SENTENCES: "sentences",
  TEXTAREA_AUTO_CAPITALIZE_ALL: "characters",
  HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW: "stripview",
  HORIZONTAL_IMAGESTRIP_VIEW_TYPE_SLOTVIEW: "slotview",
  HORIZONTAL_IMAGESTRIP_VIEW_TYPE_PAGEVIEW: "pageview",
  WIDGET_ALIGN_TOP_LEFT: 1,
  WIDGET_ALIGN_TOP_CENTER: 2,
  WIDGET_ALIGN_TOP_RIGHT: 3,
  WIDGET_ALIGN_MIDDLE_LEFT: 4,
  WIDGET_ALIGN_CENTER: 5,
  WIDGET_ALIGN_MIDDLE_RIGHT: 6,
  WIDGET_ALIGN_BOTTOM_LEFT: 7,
  WIDGET_ALIGN_BOTTOM_CENTER: 8,
  WIDGET_ALIGN_BOTTOM_RIGHT: 9,
  CONTENT_ALIGN_TOP_LEFT: 1,
  CONTENT_ALIGN_TOP_CENTER: 2,
  CONTENT_ALIGN_TOP_RIGHT: 3,
  CONTENT_ALIGN_MIDDLE_LEFT: 4,
  CONTENT_ALIGN_CENTER: 5,
  CONTENT_ALIGN_MIDDLE_RIGHT: 6,
  CONTENT_ALIGN_BOTTOM_LEFT: 7,
  CONTENT_ALIGN_BOTTOM_CENTER: 8,
  CONTENT_ALIGN_BOTTOM_RIGHT: 9,
  GESTURE_TYPE_TAP: 1,
  GESTURE_TYPE_SWIPE: 2,
  GESTURE_TYPE_LONGPRESS: 3,
  GESTURE_TYPE_PAN: 4,
  GESTURE_TYPE_ROTATION: 5,
  GESTURE_TYPE_PINCH: 6,
  BROWSER_REQUEST_METHOD_GET: "get",
  BROWSER_REQUEST_METHOD_POST: "post",
  TABPANE_VIEW_TYPE_TABVIEW: "tabview",
  TABPANE_VIEW_TYPE_COLLAPSIBLEVIEW: "collapsibleview",
  TABPANE_VIEW_TYPE_PAGEVIEW: "pageview",
  TABPANE_COLLAPSIBLE_IMAGE_POSITION_RIGHT: "right",
  TABPANE_COLLAPSIBLE_IMAGE_POSITION_LEFT: "left",
  TABPANE_COLLAPSIBLE_TABNAME_ALIGNMENT_RIGHT: "right",
  TABPANE_COLLAPSIBLE_TABNAME_ALIGNMENT_LEFT: "left",
  TABPANE_COLLAPSIBLE_TABNAME_ALIGNMENT_CENTER: "center",
  TAB_HEADER_POSITION_TOP: "top",
  TAB_HEADER_POSITION_BOTTOM: "bottom",
  TAB_HEADER_POSITION_LEFT: "left",
  TAB_HEADER_POSITION_RIGHT: "right",
  ONHOVER_MOUSE_ENTER: 0,
  ONHOVER_MOUSE_MOVE: 1,
  ONHOVER_MOUSE_LEAVE: 2,
  DATAGRID_COLUMN_TYPE_TEXT: "text",
  DATAGRID_COLUMN_TYPE_IMAGE: "image",
  DATAGRID_COLUMN_TYPE_TEMPLATE: "template",
  CONTAINER_LAYOUT_GRID: 5,
  IMAGE_GALLERY_VIEW_TYPE_PAGEVIEW: "pageview",
  COMBOBOX_VIEW_TYPE_EDITVIEW: "editableview",
  DATAGRID_SCROLLBAR_NONE: 0,
  DATAGRID_SCROLLBAR_VERTICAL: 1,
  FILE_UPLOAD_START_STATE: 0,
  FILE_UPLOAD_PROGRESS_STATE: 1,
  FILE_UPLOAD_COMPLETE_STATE: 2,
  FILE_UPLOAD_ERROR_STATE: 3,
  UPLOAD_MAX_WAIT_TIME: 120000,
  MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW: 1,
  MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW: 2,
  MENU_CONTAINER_VIEW_TYPE_TREEVIEW: 3,
  MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW: 4,
  MENUCONTAINER_POSITION_AS_HORIZONTAL: "horizontal",
  MENUCONTAINER_POSITION_AS_VERTICAL: "vertical",
  SLIDER_HORIZONTAL_ORIENTATION: "horizontal",
  SLIDER_VERTICAL_ORIENTATION: "vertical",
  SLIDER_VIEW_TYPE_DEFAULT: "default",
  SLIDER_VIEW_TYPE_PROGRESS: "progress"
};
kony.flex = {
  DEFAULT_UNIT: "%",
  DP: "dp",
  PX: "px",
  PERCENTAGE: "%",
  FREE_FORM: 1,
  FLOW_HORIZONTAL: 2,
  FLOW_VERTICAL: 3,
  VBOX_LAYOUT: 4,
  USE_PREFERRED_SIZE: "preferred",
  USE_AVAILABLE_SPACE: "available",
  SCROLL_HORIZONTAL: 1,
  SCROLL_VERTICAL: 2,
  SCROLL_BOTH: 3,
  SCROLL_NONE: 4,
  AUTOGROW_HEIGHT: 1,
  AUTOGROW_NONE: 0
};
kony.anim = {
  FILL_MODE_FORWARDS: "forwards",
  FILL_MODE_BACKWARDS: "backwards",
  FILL_MODE_BOTH: "both",
  FILL_MODE_NONE: "none",
  DIRECTION_NONE: "normal",
  DIRECTION_REVERSE: "reverse",
  DIRECTION_ALTERNATE: "alternate",
  DIRECTION_ALTERNATE_REVERSE: "alternate-reverse",
  EASE: "ease",
  EASE_IN: "ease-in",
  EASE_OUT: "ease-out",
  EASE_IN_OUT: "ease-in-out",
  LINEAR: "linear"
};
$KI.net = {
  postdataparams: function(d) {
    var b = "",
      c;
    for (var a in d) {
      if (d.hasOwnProperty(a) && a != "httpheaders") {
        c = d[a];
        kony.print("postdataparams:key  = " + a + "  value  =  " + c);
        b += a + "=" + encodeURIComponent(c);
        b += "&"
      }
    }
    return b
  },
  FormData: function() {
    var a = "",
      b = this;
    b.append = function(c, d) {
      if (c == "undefined" || c == "") {
        throw new Error("FormData append Error: key cannot be empty")
      }
      if (a == "") {
        a = c + "=" + d
      } else {
        a += "&" + (c + "=" + d)
      }
    }, b.toString = function() {
      return a
    }
  },
  HttpRequest: function() {
    var a = false,
      d = null,
      b = 0,
      c = this,
      f = null,
      e = null;
    if (window.XMLHttpRequest) {
      f = new XMLHttpRequest()
    } else {
      f = new ActiveXObject("Microsoft.XMLHTTP")
    }
    c.onReadyStateChange = null;
    c.readyState = undefined;
    c.response = "";
    c.responseType = "";
    c.status = null;
    c.statusText = null;
    c.timeout = 0;
    f.onreadystatechange = function() {
      switch (f.readyState) {
        case 0:
          !!c.onReadyStateChange && c.onReadyStateChange();
        case 1:
          c.readyState = f.readyState;
          c.response = "";
          !!c.onReadyStateChange && c.onReadyStateChange();
        case 2:
          c.readyState = f.readyState;
          c.response = "";
          !!c.onReadyStateChange && c.onReadyStateChange();
        case 3:
          c.readyState = f.readyState;
          c.response = "";
          !!c.onReadyStateChange && c.onReadyStateChange();
          break;
        case 4:
          c.status = f.status;
          c.statusText = "Request Completed";
          c.readyState = f.readyState;
          c.response = f.responseText;
          if (f.status === 200) {
            c.statusText += ": OK";
            clearTimeout(e)
          }
          if (f.status === 400) {
            c.statusText += ": Error";
            clearTimeout(e)
          }!!c.onReadyStateChange && c.onReadyStateChange();
          break;
        default:
          throw new Error("Unknown Error : XMLHttpRequest Error")
      }
    };
    c.timeoutFunction = function() {
      c.abort();
      c.readyState = f.readyState;
      c.status = 0;
      c.statusText = "Request timed out";
      c.response = "";
      !!c.onReadyStateChange && c.onReadyStateChange()
    };
    c.open = function(j, h, i, k, g) {
      if (!j && j !== "GET" && j !== "POST") {
        throw new Error("Syntax Error : Request Method is not defined");
        return
      }
      if (!h) {
        throw new Error("Syntax Error : URL is not defined");
        return
      }
      i = ((i === true) || (i === false)) && i || true;
      d = j;
      a = true;
      f.open(d, h, i, k, g)
    };
    c.send = function(g) {
      if (a === false) {
        throw new Error("InvalidStateError : 'send' called before 'open' ");
        return
      }
      if (b > 1) {
        throw new Error("InvalidStateError : 'send' called more than once ");
        return
      }
      if (g instanceof kony.net.FormData) {
        g = g.toString()
      }
      b++;
      f.timeout = !!c.timeout && c.timeout;
      e = setTimeout(c.timeoutFunction, c.timeout);
      f.send(g)
    };
    c.abort = function() {
      f.abort()
    };
    c.setRequestHeader = function(h, g) {
      if (a === false) {
        throw new Error("InvalidStateError : 'setRequestHeader' called before 'open' ");
        return
      }
      if (b > 1) {
        throw new Error("InvalidStateError : 'setRequestHeader' called after 'send' ");
        return
      }
      f.setRequestHeader(h, g)
    };
    c.getResponseHeader = function(g) {
      return !!f.getResponseHeader(g) && f.getResponseHeader(g) || null
    };
    c.getAllResponseHeaders = function() {
      return !!f.getAllResponseHeaders() && f.getAllResponseHeaders() || null
    }
  },
  sethttpheaders: function(c, f) {
    var d = [],
      e, a = 0;
    for (var b in f) {
      if (f.hasOwnProperty(b) && f[b]) {
        e = f[b] ? f[b] : "";
        d.push(b);
        kony.print("sethttpheaders: key: " + b + "value: " + e);
        c.setRequestHeader(b, e)
      }
    }
    return d
  },
  loadJSFile: function(d, c, g) {
    var a = 0;
    var f = 30000;
    var b = {
      type: "GET",
      url: d,
      timeout: f,
      paramstr: null,
      callback: g,
      info: ""
    };
    kony.print("loadJSFile: options: " + b);
    return (function e() {
      function h(k) {
        if (k) {
          k()
        }
      }
      var j = false;
      var i = new XMLHttpRequest();
      i.open(b.type, b.url, c);
      i.onLoaded = function() {
        if (this.userCancelled) {
          kony.print(" onLoaded: on Abort Mission");
          this.onAbort()
        }
      };
      i.onInteractive = function() {
        if (this.userCancelled) {
          kony.print(" onInteractive: on Abort Mission");
          this.onAbort()
        } else {
          if (!this.firstByte) {
            this.firstByte = true
          }
        }
      };
      i.onAbort = function(k) {
        kony.print(" onInteractive: <- Abort Mission");
        if (this.userCancelled) {
          this.userCancelled = false;
          this.ignoreCallback = true;
          rettable = {
            opstatus: 1,
            errcode: 1022,
            errmsg: "Request cancelled by user"
          };
          kony.print(" onInteractive: Abort Mission Success")
        }
        kony.print(" onInteractive: -> Abort Mission")
      };
      i.onTimeout = function() {
        j = true;
        rettable = {
          opstatus: 1,
          errcode: 1014,
          errmsg: "Request timed out"
        };
        kony.print("Request timed out.")
      };
      i.onreadystatechange = function() {
        switch (!this.ignoreCallback && i.readyState) {
          case 1:
            kony.print("onreadystatechange: ReadyState 1");
            i.onLoaded(i);
            break;
          case 2:
            kony.print("onreadystatechange: ReadyState 2");
            i.onInteractive(i);
            break;
          case 3:
            kony.print("onreadystatechange: ReadyState 3");
            i.onAbort(i);
            break;
          case 4:
            kony.print("onreadystatechange: ReadyState 4");
            if (!j) {
              i.onComplete(i);
              i = null
            }
            break;
          default:
            kony.print("onreadystatechange: ReadyState Invalid: " + i.readyState)
        }
      };
      i.addResponseText = function(l) {
        rettable = l.responseText;
        if (typeof document != "undefined") {
          var k = document.createElement("script");
          k.type = "text/javascript";
          k.text = l.responseText;
          document.getElementsByTagName("head")[0].appendChild(k);
          if (b.callback) {
            b.callback()
          }
          document.getElementsByTagName("head")[0].removeChild(k)
        }
      };
      i.onComplete = function(k) {
        window.clearTimeout(k.timeoutid);
        kony.print("status: " + k.status + "readystate: " + k.readyState);
        this.firstByte = false;
        if (this.userCancelled) {
          kony.print(" onComplete: on Abort Mission");
          this.onAbort();
          return
        }
        if (k.status == 200) {
          if (k.responseText && k.responseText.length > 0) {
            i.addResponseText(k)
          } else {
            kony.print("errcode: 1013, No JS Code");
            rettable = {
              opstatus: "1",
              errcode: "1013",
              errmsg: "Request returned no JS code"
            }
          }
        } else {
          if (k.status == 0 || (/5+/.test(k.status.toString()) == true)) {
            if (k.responseText && k.responseText.length > 0) {
              i.addResponseText(k);
              return
            }
            kony.print("errcode: 1012, Request Failed");
            rettable = {
              opstatus: 1,
              errcode: "1012",
              errmsg: "Request Failed"
            }
          } else {
            if (/4+/.test(k.status.toString()) == true) {
              kony.print("errcode: 1012, Request Failed");
              rettable = {
                opstatus: 1,
                errcode: "1015",
                errmsg: "Request Failed"
              }
            } else {
              if (k.responseText != "") {
                kony.print("Status != 200 but response exists");
                rettable = k.responseText
              } else {
                kony.print("Empty response received.")
              }
            }
          }
        }
      };
      i.timeoutid = setTimeout(i.onTimeout, b.timeout);
      i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      if (typeof(headerobj) == "object") {
        b.httpheaders = $KI.net.sethttpheaders(i, headerobj)
      }
      i.send(b.paramstr);
      return i
    })()
  },
  invokeserviceasync: function(s, u, g, r, c, j) {
    var o = 0;
    var m = null;
    var t = j || 60000;
    var v = window.location.protocol + "//" + window.location.host;
    var l = "";
    var a = "";
    var b = $KG.appmode;
    var f = $KI.props.getProperty(null, "appmiddlewarecontext") || ((typeof appConfig != "undefined") && appConfig && appConfig.middlewareContext) || ((typeof config != "undefined") && config && config.middlewarecontext) || "middleware";
    kony.print("invokeServiceAsync<- " + s);
    kony.print("middlewarecontext<- " + f);
    if (b == constants.APPLICATION_MODE_NATIVE) {
      var q = s.indexOf(f);
      if (q != -1) {
        a = s.slice(0, q)
      }
      if ($KG.skipproxy || ($KI.net.checkOriginandPostOrigin(v, a) && s)) {
        l = v + "/" + f + "/MWServlet"
      } else {
        l = v + "/" + $KG.appid + "/spa";
        kony.print("using proxy: URL " + l);
        if (u) {
          u._desturl = s
        } else {
          u = {};
          u._desturl = s;
          kony.print("Without postdata " + s)
        }
      }
      u.rcid = $KG.rcid || ""
    }
    var p = u && u.httpheaders;
    var e = (u && $KI.net.postdataparams(u)) || "";
    kony.print("invokeServiceAsync: URL: " + s);
    kony.print("invokeServiceAsync: Args are: " + e);
    kony.print("middleware origin: " + a);
    kony.print("location origin: " + v);
    if (s && s.indexOf("/IST") != -1 || s.indexOf("/CMS") != -1) {
      l = s
    } else {
      if (s) {
        if (typeof document != "undefined") {
          var h = document.createElement("a");
          h.href = s;
          if (h.origin == v) {
            l = s
          }
        }
      }
    }
    if (b == constants.APPLICATION_MODE_HYBRID || b == constants.APPLICATION_MODE_WRAPPER) {
      l = s;
      kony.print("!!!!!!!!!!appmode hybrid/wrapper: " + l)
    }
    var k = u && u.httpconfig;
    if (k && k.timeout && !isNaN(k.timeout)) {
      t = parseInt(k.timeout) * 1000
    }
    var d = {
      type: "POST",
      url: l,
      timeout: t,
      paramstr: e,
      callback: g,
      info: r || null
    };
    if (c && typeof c != "undefined" && "GET".toLowerCase() === c.toLowerCase()) {
      d.type = "GET";
      d.url = d.url + "?" + e
    }
    kony.print("invokeServiceAsync: options: " + d);
    kony.system.activity.increment();
    return (function n() {
      function i(C, z, A, B) {
        if (z == 300 || z == 400) {
          kony.system.activity.decrement()
        }
        if (!kony.system.activity.hasActivity()) {
          if (typeof $KW !== "undefined") {
            $KW.Utils.removeBlockUISkin();
            $KW.unLoadWidget()
          }
        }
        if (C) {
          C(z, A, B)
        }
      }
      var x = false;
      var w = new XMLHttpRequest();
      w.open(d.type, d.url, true);
      w.onLoaded = function() {
        if (this.userCancelled) {
          kony.print(" onLoaded: on Abort Mission");
          this.onAbort()
        } else {
          i(d.callback, 100, null)
        }
      };
      w.onInteractive = function() {
        if (this.userCancelled) {
          kony.print(" onInteractive: on Abort Mission");
          this.onAbort()
        } else {
          if (!this.firstByte) {
            this.firstByte = true;
            i(d.callback, 200, null)
          }
        }
      };
      w.onAbort = function(z) {
        kony.print(" onInteractive: <- Abort Mission");
        if (this.userCancelled) {
          this.userCancelled = false;
          this.ignoreCallback = true;
          m = {
            opstatus: 1,
            errcode: 1022,
            errmsg: "Request cancelled by user"
          };
          i(d.callback, 300, m);
          kony.print(" onInteractive: Abort Mission Success")
        }
        kony.print(" onInteractive: -> Abort Mission")
      };
      w.onTimeout = function() {
        if (w.userCancelled) {
          w.onAbort()
        } else {
          x = true;
          m = {
            opstatus: 1,
            errcode: 1014,
            errmsg: "Request timed out"
          };
          i(d.callback, 400, m)
        }
      };
      w.onreadystatechange = function() {
        switch (!this.ignoreCallback && w.readyState) {
          case 1:
            kony.print("onreadystatechange: ReadyState 1");
            w.onLoaded(w);
            break;
          case 2:
            kony.print("onreadystatechange: ReadyState 2");
            w.onInteractive(w);
            break;
          case 3:
            kony.print("onreadystatechange: ReadyState 3");
            w.onAbort(w);
            break;
          case 4:
            kony.print("onreadystatechange: ReadyState 4");
            if (!x) {
              w.onComplete(w);
              w = null
            }
            break;
          default:
            kony.print("onreadystatechange: ReadyState Invalid: " + w.readyState)
        }
      };
      w.onComplete = function(A) {
        window.clearTimeout(A.timeoutid);
        kony.print("status: " + A.status + "readystate: " + A.readyState + "res: " + A.response);
        this.firstByte = false;
        if (this.userCancelled) {
          kony.print(" onComplete: on Abort Mission");
          this.onAbort();
          return
        }
        if (A.status == 200) {
          if (A.responseText && A.responseText.length > 0) {
            m = A.responseText;
            try {
              if (IndexJL == 1) {
                m = $KU.convertjsontoluaobject(m)
              } else {
                m = JSON.parse(m)
              }
            } catch (z) {
              kony.print("errcode: 1013, Invalid JSON string - Unable to parse the returned JSON from server");
              m = {
                opstatus: "1",
                errcode: "1013",
                errmsg: "Middleware returned invalid JSON string",
                response: m
              }
            }
          } else {
            kony.print("errcode: 1013, Invalid JSON string");
            m = {
              opstatus: "1",
              errcode: "1013",
              errmsg: "Middleware returned invalid JSON string"
            }
          }
        } else {
          if (A.status == 0 || A.status == 12200 || (/5+/.test(A.status.toString()) == true)) {
            if (typeof navigator.onLine !== "undefined" && !navigator.onLine) {
              kony.print("errcode: 1011, Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity.");
              m = {
                opstatus: 1,
                errcode: "1011",
                errmsg: "Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity."
              }
            } else {
              kony.print("errcode: 1012, Request Failed");
              m = {
                opstatus: 1,
                errcode: "1012",
                errmsg: "Request Failed"
              }
            }
          } else {
            if (/4+/.test(A.status.toString()) == true) {
              kony.print("errcode: 1015, Cannot find host");
              m = {
                opstatus: 1,
                errcode: "1015",
                errmsg: "Cannot find host"
              }
            } else {
              if (A.responseText != "") {
                kony.print("Status != 200 but response exists");
                m = A.responseText
              } else {
                kony.print("Empty response received.")
              }
            }
          }
        }
        i(d.callback, 400, m, d.info)
      };
      w.timeoutid = setTimeout(w.onTimeout, d.timeout);
      if (typeof(p) == "object") {
        if (d.url.indexOf("/spa") > 0) {
          w.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
          var y = p["Content-Type"];
          if (typeof y != "undefined") {
            delete p["Content-Type"]
          }
        } else {
          if (typeof p["Content-Type"] == "undefined") {
            p["Content-Type"] = "application/x-www-form-urlencoded"
          }
        }
        d.httpheaders = $KI.net.sethttpheaders(w, p);
        if (d.httpheaders.length > 0 && d.url.indexOf("/spa") > 0) {
          if (typeof y != "undefined") {
            d.httpheaders["Content-Type"] = y
          }
          d.paramstr = d.paramstr + "kCustomHeaders=" + d.httpheaders
        }
      }
      if ("POST".toLowerCase() === (d.type).toLowerCase()) {
        w.send(d.paramstr)
      } else {
        w.send()
      }
      return w
    })();
    kony.print("invokeServiceAsync-> ")
  },
  invokeService: function(r, t, f, q, g) {
    var l = 0;
    var k = null;
    var s = g || 60000;
    var v = window.location.protocol + "//" + window.location.host;
    var j = "";
    var a = "";
    var b = $KG.appmode;
    var e = $KI.props.getProperty(null, "appmiddlewarecontext") || ((typeof appConfig != "undefined") && appConfig && appConfig.middlewareContext) || ((typeof config != "undefined") && config && config.middlewarecontext) || "middleware";
    kony.print("invokeServiceAsync<- ");
    if (b == constants.APPLICATION_MODE_NATIVE) {
      var o = r.indexOf(e);
      if (o != -1) {
        a = r.slice(0, o)
      }
      if ($KG.skipproxy || ($KI.net.checkOriginandPostOrigin(v, a) && r)) {
        j = v + "/" + e + "/MWServlet"
      } else {
        j = v + "/" + $KG.appid + "/spa";
        kony.print("using proxy: URL " + j);
        if (t) {
          t._desturl = r
        } else {
          t = {};
          t._desturl = r;
          kony.print("Without postdata " + r)
        }
      }
      t.rcid = $KG.rcid || ""
    }
    var n = t && t.httpheaders;
    var d = (t && $KI.net.postdataparams(t)) || "";
    if (r.indexOf("/IST") != -1 || r.indexOf("/CMS") != -1) {
      j = r
    }
    kony.print("invokeServiceAsync: URL: " + r);
    kony.print("invokeServiceAsync: Args are: " + d);
    kony.print("middleware origin: " + a);
    kony.print("location origin: " + v);
    if (b == constants.APPLICATION_MODE_HYBRID || b == constants.APPLICATION_MODE_WRAPPER) {
      j = r;
      kony.print("!!!!!!!!!!appmode hybrid/wrapper: " + j)
    }
    var c = {
      type: "POST",
      url: j,
      timeout: s,
      paramstr: d,
      callback: f,
      info: q || null
    };
    kony.system.activity.increment();
    var h = false;
    var u = new XMLHttpRequest();
    u.open(c.type, c.url, false);
    if (typeof(n) == "object") {
      if (c.url.indexOf("/spa") > 0) {
        u.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        var p = n["Content-Type"];
        if (typeof p != "undefined") {
          delete n["Content-Type"]
        }
      } else {
        if (typeof n["Content-Type"] == "undefined") {
          n["Content-Type"] = "application/x-www-form-urlencoded"
        }
      }
      c.httpheaders = $KI.net.sethttpheaders(u, n);
      if (c.httpheaders.length > 0 && c.url.indexOf("/spa") > 0) {
        if (typeof p != "undefined") {
          c.httpheaders["Content-Type"] = p
        }
        c.paramstr = c.paramstr + "kCustomHeaders=" + c.httpheaders
      }
    }
    u.send(c.paramstr);
    kony.print("status: " + u.status + "readystate: " + u.readyState + "res: " + u.response);
    if (u.status == 200) {
      if (u.responseText && u.responseText.length > 0) {
        kony.print(" onComplete: JSON obj: " + u.responseText);
        k = u.responseText;
        try {
          if (IndexJL == 1) {
            k = $KU.convertjsontoluaobject(k)
          } else {
            k = JSON.parse(k)
          }
          kony.print(" onComplete: Lua obj: " + JSON.stringify(k))
        } catch (m) {
          kony.print("errcode: 1013, Invalid JSON string - Unable to parse the returned JSON from server");
          k = {
            opstatus: "1",
            errcode: "1013",
            errmsg: "Middleware returned invalid JSON string",
            response: k
          }
        }
      } else {
        kony.print("errcode: 1013, Invalid JSON string");
        k = {
          opstatus: "1",
          errcode: "1013",
          errmsg: "Middleware returned invalid JSON string"
        }
      }
    } else {
      if (u.status == 0 || (/5+/.test(u.status.toString()) == true)) {
        if (typeof navigator.onLine !== "undefined" && !navigator.onLine) {
          kony.print("errcode: 1011, Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity.");
          k = {
            opstatus: 1,
            errcode: "1011",
            errmsg: "Device has no WIFI or mobile connectivity. Please try the operation after establishing connectivity."
          }
        } else {
          kony.print("errcode: 1012, Request Failed");
          k = {
            opstatus: 1,
            errcode: "1012",
            errmsg: "Request Failed"
          }
        }
      } else {
        if (/4+/.test(u.status.toString()) == true) {
          kony.print("errcode: 1015, Cannot find host");
          k = {
            opstatus: 1,
            errcode: "1015",
            errmsg: "Cannot find host"
          }
        } else {
          if (u.responseText != "") {
            kony.print("Status != 200 but response exists");
            k = u.responseText
          } else {
            kony.print("Empty response received.")
          }
        }
      }
    }
    if (typeof $KW !== "undefined") {
      $KW.Utils.removeBlockUISkin();
      $KW.unLoadWidget()
    }
    return k
  },
  cancel: function(a) {
    kony.print("networkcancel<- ");
    if (a) {
      a.userCancelled = true;
      a.abort();
      kony.print("Request aborted on user request")
    }
    kony.print("networkcancel-> ")
  },
  checkOriginandPostOrigin: function(a, b) {
    return a.replace(/([^=]*):(80|443){1}(.*)/, "$1$3") == b.replace(/([^=]*):(80|443){1}(.*)/, "$1$3") ? true : false
  },
  isNetworkAvailable: function(a) {
    if (!!a) {
      if (a === constants.NETWORK_TYPE_ANY) {
        if (typeof navigator.onLine !== "undefined") {
          return navigator.onLine
        } else {
          return false
        }
      } else {
        if (a === constants.NETWORK_TYPE_3G || a === constants.NETWORK_TYPE_WIFI || a === constants.NETWORK_TYPE_ETHERNET) {
          return false
        } else {
          throw new Error("Invalid Network Type")
        }
      }
    } else {
      throw new Error("Invalid Network Type")
    }
  },
  setNetworkCallbacks: function(a) {
    if (a && a.statusChange) {
      if (typeof window.ononline === "object") {
        window.addEventListener("online", function() {
          a.statusChange(navigator.onLine)
        }, false)
      }
      if (typeof window.onoffline === "object") {
        window.addEventListener("offline", function() {
          a.statusChange(navigator.onLine)
        }, false)
      }
    } else {
      throw new Error("Invalid Input : config is not of valid type")
    }
  },
  getActiveNetworkType: function() {
    if (typeof navigator.onLine === "undefined") {
      return constants.NETWORK_TYPE_ANY
    } else {
      if (navigator.onLine) {
        return constants.NETWORK_TYPE_ANY
      } else {
        return null
      }
    }
  },
  getCookies: function(b) {
    console.log("getCookies: " + b);
    if (b) {
      if (window && b.indexOf(window.location.origin) != -1) {
        var a = document && document.cookie;
        if (a && a.length > 0) {
          return a.split(";")
        }
      }
    }
    return null
  },
  clearCookies: function(c, e) {
    var a = document && document.cookie.split(";");
    c = c || document.URL;
    if (window && c.indexOf(window.location.origin) != -1) {
      e = e || a;
      if (e) {
        var g = window.location.pathname.split("/");
        for (var d = 0; d < e.length; d++) {
          var f = "/";
          var h = e[d].trim();
          if (document.cookie.indexOf(h) != -1) {
            for (var b = 0; b < g.length; b++) {
              f += ((f.substr(-1) != "/") ? "/" : "") + g[b];
              if (h.indexOf("=") != -1) {
                document.cookie = h + "; expires=Thu, 01-Jan-1970 00:00:01 GMT;path=" + f + ";"
              } else {
                document.cookie = h + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT;path=" + f + ";"
              }
              if (document.cookie.indexOf(h) == -1) {
                break
              }
            }
          }
        }
      }
    } else {
      throw new KonyError(1005, "invalid input url", "invalid input url")
    }
  }
};
$KI.props = {
  getProperty: function(b, a) {
    if (typeof _konyAppProperties != "undefined" && _konyAppProperties != null && a) {
      return _konyAppProperties[a] || null
    }
  }
};
kony.modules = {
  loadModule: function(b) {
    if (typeof $KG.functionalModules[b] === "undefined") {
      return false
    }
    try {
      var c = $KG.functionalModules[b];
      if (c.loaded == 1) {
        return true
      }
      c.loaded = 1;
      if (kony.modules.preInitCheck(b)) {
        return true
      }
      if (typeof importScripts === "function") {
        importScripts(b + "_kfm.js");
        kony.modules.moduleCallback(b)
      } else {
        var a = $KG.platformver + "appjs/" + b + (kony.appinit.isIE8 ? "ie" : "") + "_kfm.js";
        $KI.net.loadJSFile(a, false, function(g) {
          try {
            kony.modules.addScript(g);
            kony.modules.moduleCallback(b)
          } catch (f) {
            kony.print("Unable to load module " + b + ". Error " + f.message)
          }
        })
      }
      if ($KG.functionalModules[b].loaded === 1) {
        return true
      } else {
        return false
      }
    } catch (d) {
      kony.print(d.message);
      return false
    }
  },
  preInitCheck: function(c) {
    var d = $KG.functionalModules[c];
    for (var b = 0; b < d.depends.length; b++) {
      var a = d.depends[b];
      if (typeof $KG.functionalModules[a] == "undefined") {
        throw new Error("Invalid module : " + a)
      }
      if (typeof $KG.functionalModules[a].loaded == "undefined") {
        if (!kony.modules.loadModule(a)) {
          throw new Error("Unable to load module : " + a)
        }
      }
    }
    return false
  },
  moduleCallback: function(a) {
    var b = $KG.functionalModules[a];
    if (typeof b !== "undefined") {
      var c = null;
      if (typeof(b.init) === "string") {
        c = window[b.init];
        if (typeof c !== "function") {
          b.inProgress = false;
          b.loaded = undefined;
          throw new Error("Invalid module init function : " + a)
        }
      }
      if (typeof b.errorcode === "undefined" && c !== null) {
        c()
      }
      b.inProgress = false;
      b.loaded = 1
    }
  },
  loadModuleAsync: function(d, h, a) {
    try {
      var f = $KG.functionalModules[d];
      if (typeof f === "undefined") {
        return a(d, 1250)
      }
      var c = function(i) {
        if (typeof f.loaded == "undefined") {
          try {
            kony.modules.moduleCallback(d)
          } catch (j) {
            i = 1251
          }
        }
        if (i) {
          a(d, i)
        } else {
          h(d)
        }
      };
      if (f.loaded == 1) {
        h(d);
        return true
      }
      if (f.inProgress) {
        return
      }
      f.inProgress = true;
      kony.modules.loadDependentModules(d, h, a);
      if (typeof importScripts === "function") {
        importScripts(d + "_kfm.js");
        c()
      } else {
        var b = $KG.platformver + "appjs/" + d + (kony.appinit.isIE8 ? "ie" : "") + "_kfm.js";
        $KI.net.loadJSFile(b, true, function(e) {
          kony.modules.checkForDependents(d, e, c)
        })
      }
    } catch (g) {
      a(d, 1251)
    }
  },
  checkForDependents: function(j, c, f, a) {
    var g = true;
    var e = null;
    var h = $KG.functionalModules[j];
    if (typeof h.errorcode !== "undefined") {
      e = h.errorcode
    }
    if (typeof a === "undefined") {
      a = 0
    } else {
      if (a > 30) {
        f(1251);
        return
      } else {
        a++
      }
    }
    for (var d = 0; d < h.depends.length; d++) {
      var b = h.depends[d];
      if (typeof $KG.functionalModules[b] !== "undefined") {
        if (typeof $KG.functionalModules[b].loaded == "undefined") {
          g = false
        }
        if (typeof $KG.functionalModules[b].errorcode !== "undefined") {
          e = $KG.functionalModules[b].errorcode
        }
      }
    }
    if (g && e === null) {
      if (c === null) {
        f()
      } else {
        kony.modules.addScript(c, f)
      }
    } else {
      if (e !== null) {
        f(e)
      } else {
        setTimeout(function() {
          kony.modules.checkForDependents(j, c, f, a)
        }, 100)
      }
    }
  },
  loadDependentModules: function(e, f, b) {
    var d = $KG.functionalModules[e];
    for (var c = 0; c < d.depends.length; c++) {
      var a = d.depends[c];
      if (typeof $KG.functionalModules[a] === "undefined") {
        b(e, 1250)
      } else {
        if (typeof $KG.functionalModules[a].loaded == "undefined" && $KG.functionalModules[a].inProgress !== true) {
          kony.modules.loadModuleAsync(a, kony.modules.onLoadComplete, kony.modules.onLoadComplete)
        }
      }
    }
    return false
  },
  onLoadComplete: function(b, a) {
    $KG.functionalModules[b].errorcode = a
  },
  addScript: function(c, d) {
    var a = document.createElement("script");
    a.type = "text/javascript";
    a.text = c;
    try {
      document.getElementsByTagName("head")[0].appendChild(a);
      if (d) {
        d()
      }
    } catch (b) {
      if (d) {
        d(b)
      }
    } finally {
      document.getElementsByTagName("head")[0].removeChild(a)
    }
  }
};
kony.modules.loadFunctionalModule = kony.modules.loadModule;
kony.modules.loadFunctionalModuleAsync = kony.modules.loadModuleAsync;
$KI.db = {
  changeversion: function(b, e, f, d, c, a) {
    if (window.openDatabase) {
      if (b) {
        b.changeVersion(e, f, d, c, a)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  executesql: function(e, a, d, b, c) {
    if (window.openDatabase) {
      if (e) {
        if (d && d[0] === null) {
          d = d.slice(1)
        }
        e.executeSql(a, d, b, c)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  opendatabase: function(d, b, h, f, a) {
    var c = this.db || null;
    a = a || kony_dummyForDBCallback;
    try {
      if (window.openDatabase) {
        if (!c) {
          c = openDatabase(d, b, h, f, a);
          this.db = c
        }
      } else {
        kony.print("Web Databases not supported")
      }
    } catch (g) {
      if (g == 2) {
        kony.print("opendatabase:Invalid database version.")
      } else {
        kony.print("opendatabase:Unknown error " + g + ".")
      }
      return null
    }
    return c
  },
  readtransaction: function(b, d, c, a) {
    if (window.openDatabase) {
      if (b) {
        b.readTransaction(d, c, a)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  sqlresultsetrowitem: function(c, a, b) {
    if (window.openDatabase) {
      if (b < a.rows.length) {
        return a.rows.item(b)
      } else {
        return null
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  transaction: function(b, d, c, a) {
    if (window.openDatabase) {
      if (b) {
        b.transaction(d, c, a)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  }
};

function kony_dummyForDBCallback() {};
try {
  if (typeof(localStorage) === "object" || kony.appinit.isIE7) {
    $KI.ds = {
      save: function(d, f, a) {
        if (localStorage) {
          try {
            localStorage.setItem(f, JSON.stringify(d))
          } catch (c) {
            if (c.name == "QUOTA_EXCEEDED_ERR") {
              var b = 0,
                g = "";
              if (localStorage.length === 0) {
                b = 707;
                g = "Private Browsing is switched ON"
              } else {
                b = 708;
                g = "Data storage limit has exceeded"
              }
              return {
                errcode: b,
                errmsg: g
              }
            }
          }
        } else {
          kony.print("localStorage not supported")
        }
      },
      read: function(b) {
        if (localStorage) {
          var a = JSON.parse(localStorage.getItem(b) || "null");
          return a
        } else {
          kony.print("localStorage readitem failed");
          return null
        }
      },
      Delete: function(a) {
        if (localStorage) {
          localStorage.removeItem(a);
          return true
        } else {
          kony.print("localStorage delete failed");
          return false
        }
      }
    };
    $KI.localstorage = {
      key: function(a) {
        return (localStorage.key(a - IndexJL))
      },
      getitem: function(b) {
        var a = JSON.parse(localStorage.getItem(b) || "null");
        return a
      },
      setitem: function(d, b) {
        var a = d,
          f = b;
        if (typeof d == "object") {
          for (x in d) {
            a = x
          }
          f = d[x]
        }
        try {
          localStorage.setItem(a, JSON.stringify(f))
        } catch (c) {
          if (c.name == "QUOTA_EXCEEDED_ERR") {
            if (localStorage.length === 0) {
              console.warn("Private Browsing is switched ON")
            } else {
              console.warn("Data storage limit has exceeded")
            }
          }
        }
      },
      removeitem: function(a) {
        localStorage.removeItem(a)
      },
      clear: function() {
        localStorage.clear()
      },
      length: function() {
        return localStorage.length
      }
    }
  } else {
    kony.print("localStorage not supported")
  }
} catch (e) {
  $KI.ds = {
    save: function() {},
    read: function(a) {},
    Delete: function(a) {}
  }
};
$KW.Scroller = {
  initializeFormScroller: function(b) {
    var a = document.querySelectorAll("#" + b + "[kwidgettype='KFormScroller'] ,#" + b + " div[kwidgettype='KFormScroller']");
    a && this.initialize(a, "Form")
  },
  initializeScrollBoxes: function(b) {
    var a = document.querySelectorAll("#" + b + " div[kwidgettype='KScrollBox']");
    a && this.initialize(a, "ScrollBox")
  },
  initializeFlexScrollContainers: function(b) {
    var a = document.querySelectorAll("#" + b + " div[kwidgettype='KFlexScrollContainer']");
    a && this.initialize(a, "FlexScrollContainer")
  },
  initialize: function(A, L) {
    if ($KG.stickyScroll) {
      var d = new $KW.touch.StickyScroller();
      $KG[$KG.__currentForm + "_scroller"] = d;
      return
    } else {
      if ($KG.nativeScroll && L == "Form") {
        var v = document.forms;
        var J = v[0];
        if (v.length == 2) {
          J = v[1]
        }
        return
      }
    }
    for (var G = 0; G < A.length; G++) {
      var g = A[G].id;
      var E = g.substring(0, g.lastIndexOf("_"));
      var o = A[G];
      var b = document.getElementById(E);
      var x = o.getAttribute("widgetType");
      var h = o.getAttribute("swipeDirection");
      var j;
      if (L == "Form") {
        j = window[E]
      } else {
        j = $KU.getModelByNode(b)
      }
      var s;
      j.pf && (s = window[j.pf]);
      var q = {};
      q.checkDOMChanges = true;
      q.widgetModel = j;
      if (L == "Form" && $KU.isFlexContainer(j)) {
        h = "vertical"
      }
      if (h == "vertical") {
        q.vScroll = true;
        q.scrollbox = true
      } else {
        if (h == "horizontal") {
          q.hScroll = true;
          q.scrollbox = true
        } else {
          if (h == "both") {
            q.vScroll = true;
            q.hScroll = true;
            q.scrollbox = true
          } else {
            if (L !== "FlexScrollContainer") {
              q.vScroll = true;
              q.hScroll = true;
              q.scrollbox = true
            }
          }
        }
      }
      if (L == "Form") {
        q.scrollbox = false
      }
      if (L == "FlexScrollContainer" || (L == "Form" && $KU.isFlexContainer(j))) {
        (L == "Form") && $KW.Scroller.setHeight(E);
        q.formid = j.pf;
        q.vBounce = j.allowverticalbounce;
        q.hBounce = j.allowhorizontalbounce;
        q.bounce = j.bounces;
        q.disableUserScroll = !j.enablescrolling;
        q.hideScrollbar = true;
        if (h == "horizontal") {
          q.hScrollbar = j.horizontalscrollindicator
        } else {
          if (h == "vertical") {
            q.vScrollbar = j.verticalscrollindicator
          } else {
            if (h == "both") {
              q.hScrollbar = j.horizontalscrollindicator;
              q.vScrollbar = j.verticalscrollindicator
            } else {
              q.hScrollbar = false;
              q.vScrollbar = false
            }
          }
        }
        if (j.onscrollstart) {
          q.onscrollstart = j.onscrollstart;
          q.onScrollStart = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrollstart.call(i.widgetModel, i.widgetModel)
          }
        }
        if (j.onscrolling) {
          q.onscrolling = j.onscrolling;
          q.onScrollMove = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrolling.call(i.widgetModel, i.widgetModel)
          }
        }
        if (j.onscrolltouchreleased) {
          q.onscrolltouchreleased = j.onscrolltouchreleased;
          q.onScrollTouchReleased = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrolltouchreleased.call(i.widgetModel, i.widgetModel)
          }
        }
        if (j.onscrollend) {
          q.onscrollend = j.onscrollend;
          q.onScrollEnd = function() {
            var i = this.options;
            i.widgetModel.contentoffset = {
              x: -this.x,
              y: -this.y
            };
            i.onscrollend.call(i.widgetModel, i.widgetModel)
          }
        }
      } else {
        if (x == "form") {
          $KW.Scroller.setHeight(E);
          q.vScrollbar = true;
          q.formid = E;
          q.scrollbox = false;
          q.bounce = (j.scrollbounce != undefined) ? j.scrollbounce : true;
          if ($KG.nativeScroll && (j.wType === "Popup")) {
            o.style.overflowY = "auto";
            continue
          }
        } else {
          var j = $KU.getModelByNode(b);
          if ($KG.nativeScroll && j) {
            var n, l;
            switch (j.scrollDirection) {
              case 1:
                n = "auto";
                l = "hidden";
                break;
              case 2:
                n = "hidden";
                l = "auto";
                break;
              case 3:
                n = "auto";
                l = "auto";
                break;
              case 4:
                n = "hidden";
                l = "hidden";
              default:
                n = "";
                l = ""
            }
            var H = o.style;
            H.overflowX = n;
            H.overflowY = l;
            continue
          }
          q.scrollbox = true;
          q.formid = j.pf;
          q.bounce = j.scrollbounce != undefined ? j.scrollbounce : true;
          q.disableUserScroll = (j.scrolldirection == constants.SCROLLBOX_SCROLL_NONE);
          if (j.scrollbar == "arrows") {
            q.showImages = true;
            q.widgetID = j.id
          } else {
            if (j.scrollbar == "scrollbar") {
              if (j.autohidescrollbar === false) {
                q.hideScrollbar = false
              }
              if (h == "horizontal") {
                q.hScrollbar = true
              } else {
                if (h == "vertical") {
                  q.vScrollbar = true
                } else {
                  if (h == "both") {
                    q.hScrollbar = true;
                    q.vScrollbar = true
                  }
                }
              }
            }
          }
          var m = j.scrollingevents;
          if (m) {
            var K, t, C, u;
            var f = 0,
              a = 0;
            var B = "",
              D = "",
              F = "";
            var y = "#" + j.pf + "_" + j.id + "_pullDown";
            var e = "#" + j.pf + "_" + j.id + "_pullUp";
            K = document.querySelector(y);
            K && (f = K.offsetHeight);
            t = document.querySelector(e);
            t && (a = t.offsetHeight);
            !m.onpull && (C = true);
            !m.onpush && (u = true);
            B = function() {
              var M = this.options.pullDownEl;
              var i = this.options.pullUpEl;
              if (M && M.className.match("loading")) {
                M.className = "";
                M.querySelector(".pullDownLabel").innerHTML = "Pull down to refresh.."
              } else {
                if (i && i.className.match("loading")) {
                  i.className = "";
                  i.querySelector(".pullUpLabel").innerHTML = "Pull up to refresh.."
                }
              }
            };
            D = function() {
              var M = this.options.pullDownEl;
              var i = this.options.pullUpEl;
              if (M) {
                if (((this.options.vScroll && this.y > 5) || (this.options.hScroll && this.x > 5)) && !M.className.match("flip")) {
                  M.className = "flip";
                  C = false;
                  M.querySelector(".pullDownLabel").innerHTML = "Release to refresh..";
                  if (this.options.vScroll) {
                    this.minScrollY = 0
                  } else {
                    this.minScrollX = 0
                  }
                } else {
                  if (((this.options.vScroll && this.y < 5) || (this.options.hScroll && this.x < 5)) && M.className.match("flip")) {
                    M.className = "";
                    M.querySelector(".pullDownLabel").innerHTML = "Pull down to refresh..";
                    if (this.options.vScroll) {
                      this.minScrollY = -this.pullDownOffset
                    } else {
                      this.minScrollX = -this.pullDownOffset
                    }
                  }
                }
              }
              if (i) {
                if (((this.options.vScroll && this.y < (this.maxScrollY - 5 - this.pullUpOffset)) || (this.options.hScroll && this.x < (this.maxScrollX - 5 - this.pullUpOffset))) && !i.className.match("flip")) {
                  i.className = "flip";
                  u = false;
                  i.querySelector(".pullUpLabel").innerHTML = "Release to refresh..";
                  if (this.options.vScroll) {
                    this.maxScrollY -= this.pullUpOffset
                  } else {
                    this.maxScrollX -= this.pullUpOffset
                  }
                } else {
                  if (((this.options.vScroll && this.y > (this.maxScrollY + 5)) || (this.options.hScroll && this.x > (this.maxScrollX + 5))) && i.className.match("flip")) {
                    i.className = "";
                    i.querySelector(".pullUpLabel").innerHTML = "Pull up to refresh..";
                    this.maxScrollY = this.maxScrollY
                  }
                }
              }
            };
            F = function() {
              var O = this.options.pullDownEl;
              var i = this.options.pullUpEl;
              if (((this.options.vScroll && this.y >= this.minScrollY) || (this.options.hScroll && this.x >= this.minScrollX)) && this.options.pullInitFlag) {
                var M = $KU.getModelByScroller(this.wrapper.id);
                if (typeof M === "undefined") {
                  return
                }
                console.log("On Reach beginning");
                var N = $KU.returnEventReference(M.scrollingevents.onreachingbeginning);
                N && N.call(M, M)
              }
              if (O && O.className.match("flip")) {
                O.className = "loading";
                O.querySelector(".pullDownLabel").innerHTML = "Loading..";
                $KW.Scroller.pullAction.call(this, "DOWN")
              }
              if (((this.options.vScroll && this.y <= this.maxScrollY) || (this.options.hScroll && this.x <= this.maxScrollX)) && this.options.pushInitFlag) {
                var M = $KU.getModelByScroller(this.wrapper.id);
                if (typeof M === "undefined") {
                  return
                }
                console.log("On Reach end");
                var N = $KU.returnEventReference(M.scrollingevents.onreachingend);
                N && N.call(M, M)
              }
              if (i && i.className.match("flip")) {
                i.className = "loading";
                i.querySelector(".pullUpLabel").innerHTML = "Loading..";
                $KW.Scroller.pullAction.call(this, "UP")
              }
              if (!this.options.pullInitFlag) {
                this.options.pullInitFlag = true
              }
              if (!this.options.pushInitFlag) {
                this.options.pushInitFlag = true
              }
            };
            $KU.extend(q, {
              topOffset: f,
              bottomOffset: a,
              onRefresh: B,
              onScrollMove: D,
              onScrollEnd: F,
              pullDownEl: K,
              pullUpEl: t,
              pullInitFlag: C,
              pushInitFlag: u
            })
          }
        }
      }
      if (x == "vbox") {
        q.onBeforeScrollStart = $KW.Scroller.onBeforeScrollStartHandler()
      }
      if (s && typeof(s.useTransform) == "boolean") {
        q.useTransform = s.useTransform
      }
      var z = document.querySelectorAll("#" + $KG.__currentForm.id + " select");
      if (z.length > 0 && x == "form") {
        q.useTransform = false
      }
      if ((L == "ScrollBox" && $KU.isFlexContainer(s)) || $KU.isFlexContainer(s) || (L == "FlexScrollContainer" && (j.parent.wType === "FlexScrollContainer" || j.parent.wType == "FlexContainer"))) {
        q.bubbleEvents = true
      }
      var d = new $KW.touch.konyScroller(E + "_scroller", q);
      if (x == "form") {
        var p = $KG.allforms[E].header;
        var c = $KG.allforms[E].footer;
        $KG.allforms[E].scrollerTimer = setInterval(function(i) {
          return function() {
            $KW.Scroller.checkDOMChanges(i + "_scroller", p, c)
          }
        }(E), 1000)
      }
      if (h == "horizontal" || h == "both") {
        if (o.children[0].scrollWidth != 0) {
          o.children[0].style.width = o.children[0].scrollWidth + "px";
          d.refresh()
        }
      }
      if (L == "FlexScrollContainer" || (L == "Form" && $KU.isFlexContainer(j))) {
        var k;
        if (L == "Form") {
          $KW.Form.setFormDimensions(j);
          var w = document.getElementById(j.id);
          k = w.scrollHeight
        } else {
          var I = o.children[0].children[0];
          k = I.scrollHeight;
          I.style.width = o.clientWidth + "px";
          I.style.height = o.clientHeight + "px"
        }
        if ((h == "vertical" || h == "both") && k != 0) {
          var r = j.parent;
          if (!r || (r && r.wType !== "FlexScrollContainer" && r.wType !== "FlexContainer")) {
            o.children[0].style.height = k + "px"
          }
          d.refresh()
        }
        $KW.FlexScrollContainer.setContentOffSet(j, j.contentoffset, 0, d);
        j.scrollerInstance = d
      }
      $KG[E + "_scroller"] = d
    }
  },
  destroyFormScroller: function(e) {
    if ($KG.stickyScroll) {
      var d = $KG[e + "_scroller"];
      d && d.destroy();
      $KG[e + "_scroller"] = ""
    }
    var b = document.querySelectorAll("#" + e + "[kwidgettype='KFormScroller'] ,#" + e + " div[kwidgettype='KFormScroller']");
    for (var c = 0; c < b.length; c++) {
      var a = b[c].id;
      var d = $KG[a];
      d && d.destroy();
      $KG[a] = ""
    }
  },
  destroyScrollBoxes: function(e) {
    var b = document.querySelectorAll("#" + e + " div[kwidgettype='KScrollBox']");
    for (var c = 0; c < b.length; c++) {
      var a = b[c].id;
      var d = $KG[a];
      d && d.destroy()
    }
  },
  destroyImageStripStripViews: function(e) {
    var a = document.querySelectorAll("#" + e + " div[name='ImageStrip_StripView']");
    for (var b = 0; b < a.length; b++) {
      var c = $KU.getModelByNode(a[b]);
      if (c) {
        var d = c.scrollInstance;
        if (d) {
          d.destroy();
          c.scrollInstance = null
        }
      }
    }
  },
  initializePageViews: function(g) {
    if ($KG.disableTransition) {
      return
    }
    var f = document.querySelectorAll("#" + g + " div[name='touchcontainer_HStrip'], #" + g + " div[name='touchcontainer_Segment'], #" + g + " div[name='touchcontainer_Tabpane']");
    for (var c = 0; c < f.length; c++) {
      var e = f[c];
      var d = $KU.getModelByNode(e);
      if (!d) {
        d = $KU.getModelByNode(e.parentNode)
      }
      var a = {};
      a.widgetModel = d;
      var b = new $KW.touch.pageviewScroller(e, a);
      $KG[e.id] = b
    }
  },
  destroyPageViews: function(e) {
    var b = document.querySelectorAll("#" + e + " div[name='touchcontainer_HStrip'], #" + e + " div[name='touchcontainer_Segment']");
    for (var c = 0; c < b.length; c++) {
      var a = b[c].id;
      var d = $KG[a];
      d && d.destroy()
    }
  },
  checkDOMChanges: function(d, k, h) {
    var j = document.getElementById(k);
    var f = document.getElementById(h);
    var g = document.getElementById("konyappmenudiv");
    var i = $KG.allforms[d.split("_")[0]];
    var e = false;
    if (j && (this.headerH != j.offsetHeight) && i.dockableheader) {
      var a = document.getElementById(d);
      var c = $KG[d];
      if (a && c) {
        this.headerH = j.offsetHeight;
        a.style.top = j.offsetHeight + "px";
        c.refresh()
      }
    }
    if (f && (this.footerH != f.offsetHeight) && i.dockablefooter) {
      var a = document.getElementById(d);
      var c = $KG[d];
      if (a && c) {
        this.footerH = f.offsetHeight;
        a.style.bottom = f.offsetHeight + "px";
        c.refresh()
      }
    }
    if (i.wType != "Popup" && g && (this.appmenuH != g.offsetHeight) && i.dockableappmenu) {
      var a = document.getElementById(d);
      var c = $KG[d];
      if (a && c) {
        this.appmenuH = g.offsetHeight;
        a.style.bottom = g.offsetHeight + "px";
        c.refresh()
      }
    }
    if (i.wType == "Form" && $KU.isFlexContainer(i)) {
      var a = document.getElementById(d);
      var b = document.getElementById(i.id);
      if (b && b.clientHeight != a.clientHeight) {
        b.style.height = a.clientHeight + "px";
        $KU.needOptimization = false;
        i.forceLayout();
        $KU.needOptimization = true
      }
    }
    e && $KW.ScrollBox.adjustBoxDimensions(i.id)
  },
  setHeight: function(d, c) {
    var h;
    if (c) {
      h = document.getElementById(d)
    } else {
      h = document.getElementById(d + "_scroller")
    }
    if (!h) {
      return
    }
    this.headerH = 0;
    this.footerH = 0;
    this.appmenuH = 0;
    var a = $KG.allforms[d];
    var b = a.header;
    var e = a.footer;
    var g = "konyappmenudiv";
    header = $KG.needScroller ? $KU.getElementById(d + "_header") : $KU.getElementById("header_container");
    footer = $KG.needScroller ? $KU.getElementById(d + "_footer") : $KU.getElementById("footer_container");
    var f = document.getElementById(g);
    if (header && a.dockableheader) {
      this.headerH = header.offsetHeight
    }
    if (a.wType != "Popup" && f && a.dockableappmenu) {
      this.appmenuH = f.offsetHeight
    }
    if (footer && a.dockablefooter) {
      this.footerH = footer.offsetHeight;
      footer.style.bottom = this.appmenuH + "px"
    }
    h.style.top = this.headerH + "px";
    h.style.bottom = this.footerH + this.appmenuH + "px";
    $KW.Form.setFormDimensions(a);
    c && (h.style.paddingBottom = this.footerH + this.appmenuH + "px");
    $KW.ScrollBox.adjustBoxDimensions(a.id)
  },
  onBeforeScrollStartHandler: function() {
    return function(a) {
      kony.events.stopPropagation(a)
    }
  },
  pullAction: function(a) {
    var b = this;
    b.refreshDisabled = true;
    setTimeout(function() {
      var c = $KU.getModelByScroller(b.wrapper.id);
      if (typeof c === "undefined") {
        return
      }
      if (c.scrollingevents) {
        var d;
        if (a == "UP") {
          console.log("On Push");
          d = $KU.returnEventReference(c.scrollingevents.onpush)
        } else {
          d = $KU.returnEventReference(c.scrollingevents.onpull);
          console.log("On Pull")
        }
        d && d.call(c, c);
        b.refreshDisabled = false
      }
      b.refresh()
    }, 500)
  }
};
$KW.FlexLayoutEngine = {
  performFlexLayout: function(c, a, d, b) {
    switch (c) {
      case kony.flex.FLOW_HORIZONTAL:
        this.performHorizontalLayout(a, d, b);
        break;
      case kony.flex.FLOW_VERTICAL:
        this.performVerticalLayout(a, d, b);
        break;
      default:
        this.performFreeFlowLayout(a, d, b);
        break
    }
  },
  performAutogrowFlexLayout: function(b, e, c) {
    var a = this.getAutoGrowFlexHeight(b, e, c);
    if (b.canMeasureChildrenHeight) {
      var d = $KU.isFlexWidget(b) ? e.parentNode : e;
      d.style.height = $KW.Utils.getComputedPreferredHeight(b, e, a) + "px";
      b.frame = $KW.Utils.getWidgetFrame(b, d);
      b.layoutConfig.children = true;
      $KW.FlexLayoutEngine.performFlexLayout(b.layouttype, b, e, c)
    }
  },
  getAutoGrowFlexHeight: function(o, s, n) {
    var v = o.layouttype;
    var f = o.frame;
    var a, e;
    var u = 0;
    o.canMeasureChildrenHeight = true;
    n = n || o.widgets();
    for (var r = 0; r < n.length; r++) {
      a = n[r];
      if (!this.isVisible(a, s)) {
        continue
      }
      e = $KW.Utils.getWidgetNode(a, s);
      if (!e) {
        continue
      }
      this.computeLayoutValues(a, s, f);
      if (!o.canMeasureChildrenHeight) {
        var t = $KU.isFlexWidget(o) ? s.parentNode : s;
        t.style.height = $KW.Utils.getComputedPreferredHeight(o, s) + "px";
        o.frame = $KW.Utils.getWidgetFrame(o, t);
        o.layoutConfig.children = true;
        $KW.FlexLayoutEngine.performFlexLayout(v, o, s, n);
        return o.frame.height
      }
      var q = a.layoutModel;
      var t = e.parentNode;
      $KW.Utils.getWidth(a, q, t, s);
      var h = q.centerY;
      var l = q.top;
      var g = q.bottom;
      var m = q.height;
      var x = 0;
      var p, k;
      if (h) {
        if (m) {
          x = h.value + (m.value / 2)
        } else {
          if (l && v == kony.flex.FREE_FORM) {
            k = (h.value - l.value) * 2;
            x = k + l.value
          } else {
            p = $KW.Utils.getChildHeight(a, e);
            x = h.value + (p / 2)
          }
        }
      } else {
        if (l) {
          if (m) {
            x = l.value + m.value
          } else {
            p = $KW.Utils.getChildHeight(a, e);
            x = l.value + p
          }
        } else {
          if (m) {
            x = m.value
          } else {
            p = $KW.Utils.getChildHeight(a, e);
            x = p
          }
        }
      }
      if (g) {
        x += g.value
      }
      t.style.height = (m ? m.value : (k != undefined ? k : p)) + "px";
      t.style.maxWidth = t.style.maxHeight = "";
      var d = $KW.Utils.getWidgetDimensions(a, t);
      a.finalFrame = {};
      if (v != kony.flex.FREE_FORM) {
        var b, w, j;
        var c = this.getPreviousNode(a, t, s);
        if (c) {
          b = c[0];
          w = c[1]
        }
        j = w && b.frame
      }
      if (v == kony.flex.FREE_FORM || v == kony.flex.FLOW_VERTICAL) {
        this.determineX(a, d, s, f)
      } else {
        this.determineHorizontalFlowX(a, d, b, j)
      }
      if (v == kony.flex.FREE_FORM || v == kony.flex.FLOW_HORIZONTAL) {
        this.determineY(a, d, s, f)
      } else {
        this.determineVerticalFlowY(a, d, b, j)
      }
      $KW.Utils.setWidgetPosition(a, a.finalFrame, t);
      a.frame = this.getWidgetFrame(a, d, a.finalFrame);
      a.dolayout && a.dolayout.call(a, a);
      if (v == kony.flex.FLOW_VERTICAL) {
        u += x
      } else {
        if (u < x) {
          u = x
        }
      }
    }
    return u
  },
  performFreeFlowLayout: function(a, h, e) {
    var g = a.frame;
    var c, b, f;
    for (var d = 0; d < e.length; d++) {
      c = e[d];
      if (!this.canLayoutUI(a, c, h)) {
        continue
      }
      b = $KW.Utils.getWidgetNode(c, h);
      if (!b) {
        continue
      }
      b = b.parentNode;
      c.finalFrame = {};
      this.computeLayoutValues(c, h, g);
      this.determineSize(h, c, b);
      f = $KW.Utils.getWidgetDimensions(c, b);
      this.determineX(c, f, h, g);
      this.determineY(c, f, h, g);
      $KW.Utils.setWidgetPosition(c, c.finalFrame, b);
      $KW.Utils.saveWidgetFrame(c);
      c.frame = this.getWidgetFrame(c, f, c.finalFrame);
      this.onWidgetLayout(c, b)
    }
    this.onFlexContainerLayout(a)
  },
  performHorizontalLayout: function(b, e, k) {
    var m = b.frame;
    var j, d, a, l;
    for (var g = 0; g < k.length; g++) {
      j = k[g];
      if (!this.canLayoutUI(b, j, e)) {
        continue
      }
      d = $KW.Utils.getWidgetNode(j, e);
      if (!d) {
        continue
      }
      d = d.parentNode;
      j.finalFrame = {};
      this.computeLayoutValues(j, e, m);
      var c, h;
      var f = this.getPreviousNode(j, d, e);
      if (f) {
        c = f[0];
        h = f[1]
      }
      l = h && c.frame;
      this.determineSize(e, j, d);
      a = $KW.Utils.getWidgetDimensions(j, d);
      this.determineHorizontalFlowX(j, a, c, l);
      this.determineY(j, a, e, m);
      $KW.Utils.setWidgetPosition(j, j.finalFrame, d);
      $KW.Utils.saveWidgetFrame(j);
      j.frame = this.getWidgetFrame(j, a, j.finalFrame);
      this.onWidgetLayout(j, d)
    }
    this.onFlexContainerLayout(b)
  },
  performVerticalLayout: function(b, e, k) {
    var m = b.frame;
    var j, d, a, l;
    for (var g = 0; g < k.length; g++) {
      j = k[g];
      if (!this.canLayoutUI(b, j, e)) {
        continue
      }
      d = $KW.Utils.getWidgetNode(j, e);
      if (!d) {
        continue
      }
      d = d.parentNode;
      j.finalFrame = {};
      this.computeLayoutValues(j, e, m);
      var c, h;
      var f = this.getPreviousNode(j, d, e);
      if (f) {
        c = f[0];
        h = f[1]
      }
      l = h && c.frame;
      this.determineSize(e, j, d);
      a = $KW.Utils.getWidgetDimensions(j, d);
      this.determineX(j, a, e, m);
      this.determineVerticalFlowY(j, a, c, l);
      $KW.Utils.setWidgetPosition(j, j.finalFrame, d);
      $KW.Utils.saveWidgetFrame(j);
      j.frame = this.getWidgetFrame(j, a, j.finalFrame);
      this.onWidgetLayout(j, d)
    }
    this.onFlexContainerLayout(b)
  },
  onFlexContainerLayout: function(a) {
    a.layoutConfig.children = false
  },
  onWidgetLayout: function(b, a) {
    b.dolayout && b.dolayout.call(b, b);
    this.compareFrames(b);
    this.layoutNestedConatiners(b, a);
    b.layoutConfig.self = false
  },
  compareFrames: function(a) {
    if (a.wType == "FlexContainer" || a.wType == "FlexScrollContainer") {
      var b = a.oldFrame;
      var c = a.frame;
      if (b.width != c.width || b.height != c.height) {
        a.layoutConfig.children = true
      }
    }
  },
  layoutNestedConatiners: function(b, a) {
    if (b.wType == "FlexContainer" || b.wType == "FlexScrollContainer") {
      $KW.FlexContainer.forceLayout(b, a ? a.childNodes[0] : null)
    }
    if (b.wType == "Segment") {
      var d = $KU.getNodeByModel(b);
      if (d) {
        if (b.layoutConfig.self) {
          $KU.needOptimization = false;
          $KW.FlexContainer.adjustFlexContainers(b, d);
          if (b.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            $KW.touch.computeWidths(d, b)
          }
          $KU.needOptimization = true
        }
        if (b.layoutModel && !b.needScroller) {
          var a = $KW.Utils.getWidgetNode(b);
          var c = $KW.Utils.getComputedPreferredHeight(b, a);
          a.parentNode.style.height = c + "px";
          b.frame.height = c
        }
      }
    }
    if (b.wType == "DataGrid") {
      var a = $KU.getNodeByModel(b);
      if (b.layoutConfig.self) {
        $KU.needOptimization = false;
        $KW.FlexContainer.adjustFlexContainers(b, a);
        $KU.needOptimization = true
      }
    }
    if (b.wType == "TabPane") {
      var a = $KU.getNodeByModel(b);
      if (b.layoutConfig.self) {
        $KU.needOptimization = false
      }
      $KW.FlexContainer.adjustFlexContainers(b, a);
      $KU.needOptimization = true;
      $KW.Form.initializeFlexContainersInBox(b)
    }
  },
  determineSize: function(d, h, c, k) {
    if (typeof k == "undefined") {
      $KW.Utils.setPaddingByParent(h, c.childNodes[0])
    }
    var b = h.layoutModel;
    var e = $KW.Utils.getWidth(h, b, c, d, k);
    var j = $KW.Utils.getHeight(h, b, c, d, k);
    c.style.maxWidth = c.style.maxHeight = "";
    if (typeof k == "undefined") {
      $KW.Utils.setDimensions(h, c, d)
    } else {
      var a = e.concat(j);
      for (var g = 0; g < a.length; g++) {
        var f = a[g].split(":");
        h.finalFrame[f[0]] = f[1]
      }
    }
  },
  determineX: function(g, a, d, k) {
    var c = g.layoutModel;
    var f = g.finalFrame;
    var i = g.parent;
    if (c.centerX) {
      var e = c.centerX.value;
      var b = a.width;
      if (c.centerX.unit == kony.flex.PERCENTAGE && i.layouttype == kony.flex.FREE_FORM) {
        b = Math.floor((b / k.width) * 100)
      }
      f.left = (e - (b / 2)) + c.centerX.unit
    } else {
      if (c.left) {
        f.left = c.left.value + c.left.unit
      } else {
        if (c.right) {
          var j = d.clientWidth;
          var h = $KU.getValueByParentFrame(g, c.right, "x");
          h = j - parseInt(a.width + h, 10);
          f.left = h + kony.flex.PX
        }
      }
    }
  },
  determineHorizontalFlowX: function(d, c, e, g) {
    var b = d.layoutModel;
    var a = d.finalFrame;
    g = g || {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      };
    var f = g.x + g.width;
    if (b.centerX) {
      f += b.centerX.value - (c.width / 2)
    } else {
      if (b.left) {
        f += b.left.value
      }
    }
    if (e && e.layoutModel && e.layoutModel.right) {
      f += e.layoutModel.right.value
    }
    a.left = parseInt(f, 10) + kony.flex.PX
  },
  determineY: function(g, a, c, k) {
    var b = g.layoutModel;
    var e = g.finalFrame;
    var i = g.parent;
    if (b.centerY) {
      var d = b.centerY.value;
      var j = a.height;
      if (b.centerY.unit == kony.flex.PERCENTAGE && i.layouttype == kony.flex.FREE_FORM) {
        j = Math.floor((j / k.height) * 100)
      }
      e.top = (d - (j / 2)) + b.centerY.unit
    } else {
      if (b.top) {
        e.top = b.top.value + b.top.unit
      } else {
        if (b.bottom) {
          var f = c.clientHeight;
          var h = $KU.getValueByParentFrame(g, b.bottom, "y");
          h = f - parseInt(a.height + h, 10);
          e.top = h + kony.flex.PX
        }
      }
    }
  },
  determineVerticalFlowY: function(d, c, e, g) {
    var b = d.layoutModel;
    var a = d.finalFrame;
    g = g || {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      };
    var f = g.y + g.height;
    if (b.centerY) {
      f += b.centerY.value - (c.height / 2)
    } else {
      if (b.top) {
        f += b.top.value
      }
    }
    if (e && e.layoutModel && e.layoutModel.bottom) {
      f += e.layoutModel.bottom.value
    }
    a.top = f + kony.flex.PX
  },
  getComputedValue: function(a, g, f, d) {
    if (!$KU.isValidCSSLength(f)) {
      return null
    }
    var c = $KU.getValueAndUnit(a, f);
    var f = c.value;
    var e = c.unit;
    var b = a.parent;
    if (b.wType == "FlexContainer" && b.autogrowHeight && e == kony.flex.PERCENTAGE && d == "y") {
      b.autogrowHeight = false;
      b.canMeasureChildrenHeight = false
    }
    if (b.layouttype != kony.flex.FREE_FORM && e == kony.flex.PERCENTAGE) {
      if (d == "x") {
        f = (f * g.width) / 100
      } else {
        if (d == "y") {
          f = (f * g.height) / 100
        }
      }
      e = kony.flex.PX
    }
    return {
      value: f,
      unit: e
    }
  },
  computeLayoutValues: function(a, r, f, k) {
    var c = a.layoutModel = {};
    var t = k || a;
    var j, h, d, u, m, g, p, l, s, n, e, o;
    var b = {};
    if (r.dataObj) {
      var q = r.dataObj;
      var i = q.data;
      var v = q.map;
      var w = i[v[a.id]];
      if (w && w instanceof Object) {
        b = w
      }
    }
    j = this.isAvailable(b.centerX) ? b.centerX : t.centerX;
    h = this.isAvailable(b.centerY) ? b.centerY : t.centerY;
    d = this.isAvailable(b.left) ? b.left : t.left;
    u = this.isAvailable(b.right) ? b.right : t.right;
    m = this.isAvailable(b.top) ? b.top : t.top;
    g = this.isAvailable(b.bottom) ? b.bottom : t.bottom;
    p = this.isAvailable(b.width) ? b.width : t.width;
    l = this.isAvailable(b.minWidth) ? b.minWidth : t.minWidth;
    s = this.isAvailable(b.maxWidth) ? b.maxWidth : t.maxWidth;
    n = this.isAvailable(b.height) ? b.height : t.height;
    e = this.isAvailable(b.minHeight) ? b.minHeight : t.minHeight;
    o = this.isAvailable(b.maxHeight) ? b.maxHeight : t.maxHeight;
    c.centerX = this.getComputedValue(a, f, j, "x");
    c.centerY = this.getComputedValue(a, f, h, "y");
    c.left = this.getComputedValue(a, f, d, "x");
    c.right = this.getComputedValue(a, f, u, "x");
    c.top = this.getComputedValue(a, f, m, "y");
    c.bottom = this.getComputedValue(a, f, g, "y");
    c.width = this.getComputedValue(a, f, p, "x");
    c.minWidth = this.getComputedValue(a, f, l, "x");
    c.maxWidth = this.getComputedValue(a, f, s, "x");
    c.height = this.getComputedValue(a, f, n, "y");
    c.minHeight = this.getComputedValue(a, f, e, "y");
    c.maxHeight = this.getComputedValue(a, f, o, "y")
  },
  computeKeyFrameValues: function(c, l) {
    var b = [];
    var k = {};
    if (l) {
      c.finalFrame = {};
      var h = $KW.Utils.getWidgetNode(c);
      h = h.parentNode;
      var a = c.parent;
      var w = $KW.Utils.getWidgetNode(a);
      var j = a.frame;
      this.computeLayoutValues(c, w, j, l);
      this.determineSize(w, c, h, false);
      var v = $KW.Utils.getWidgetFrame(c, h, false);
      var t = c.layoutModel;
      if (c.finalFrame.width && (t.centerX || t.right)) {
        var s = c.finalFrame.width;
        var x = {
          value: parseFloat(s),
          unit: $KU.getUnit(s)
        };
        v.width = $KU.getValueByParentFrame(c, x, "x")
      }
      if (c.finalFrame.height && (t.centerY || t.bottom)) {
        var p = c.finalFrame.height;
        var x = {
          value: parseFloat(p),
          unit: $KU.getUnit(p)
        };
        v.height = $KU.getValueByParentFrame(c, x, "y")
      }
      var n = $KW.Utils.getWidgetIndex(c);
      var q = a.widgets();
      var f, y;
      var g = this.getPreviousNode(c, h, w);
      if (g) {
        f = g[0];
        y = g[1]
      }
      var o = y && $KW.Utils.getWidgetFrame(f, y);
      if (a.layouttype == kony.flex.FLOW_HORIZONTAL) {
        this.determineHorizontalFlowX(c, v, f, o)
      } else {
        this.determineX(c, v, w, j)
      }
      if (a.layouttype == kony.flex.FLOW_VERTICAL) {
        this.determineVerticalFlowY(c, v, f, o)
      } else {
        this.determineY(c, v, w, j)
      }
      if (!c.finalFrame.left) {
        c.finalFrame.left = "0px"
      }
      if (!c.finalFrame.top) {
        c.finalFrame.top = "0px"
      }
      for (var e in c.finalFrame) {
        k[e] = c.finalFrame[e]
      }
      b.push(k);
      if (a.layouttype == kony.flex.FLOW_HORIZONTAL) {
        if (k.left || k.width || k["min-width"] || k["max-width"]) {
          for (var u = n + 1; u < q.length; u++) {
            var r = q[u];
            var d = q[u - 1];
            var m = r.frame;
            if (r.isvisible && m) {
              var o = {};
              var s;
              o.x = k.left ? parseInt(k.left, 10) : d.frame.x;
              if (k.width) {
                s = parseInt(k.width, 10)
              } else {
                if (k["min-width"]) {
                  s = parseInt(k["min-width"], 10);
                  if (s < d.frame.width) {
                    s = d.frame.width;
                    k["min-width"] = d.frame.width + "px"
                  }
                } else {
                  if (k["max-width"]) {
                    s = parseInt(k["max-width"], 10);
                    if (s > d.frame.width) {
                      s = d.frame.width;
                      k["max-width"] = d.frame.width + "px"
                    }
                  } else {
                    s = d.frame.width
                  }
                }
              }
              o.width = s;
              this.computeLayoutValues(r, w, j);
              this.determineHorizontalFlowX(r, m, d, o);
              k = {
                left: r.finalFrame.left
              };
              b.push(k)
            }
          }
        }
      }
      if (a.layouttype == kony.flex.FLOW_VERTICAL) {
        if (k.top || k.height || k["min-height"] || k["max-height"]) {
          for (var u = n + 1; u < q.length; u++) {
            var r = q[u];
            var d = q[u - 1];
            var m = r.frame;
            if (r.isvisible && m) {
              var o = {};
              var p;
              o.y = k.top ? parseInt(k.top, 10) : d.frame.y;
              if (k.height) {
                p = parseInt(k.height, 10)
              } else {
                if (k["min-height"]) {
                  p = parseInt(k["min-height"], 10);
                  if (p < d.frame.height) {
                    p = d.frame.height;
                    k["min-height"] = d.frame.height + "px"
                  }
                } else {
                  if (k["max-height"]) {
                    p = parseInt(k["max-height"], 10);
                    if (p > d.frame.height) {
                      p = d.frame.height;
                      k["max-height"] = d.frame.height + "px"
                    }
                  } else {
                    p = d.frame.height
                  }
                }
              }
              o.height = p;
              this.computeLayoutValues(r, w, j);
              this.determineVerticalFlowY(r, m, d, o);
              k = {
                top: r.finalFrame.top
              };
              b.push(k)
            }
          }
        }
      }
    }
    return b
  },
  isAvailable: function(a) {
    return a == undefined ? false : true
  },
  toPointwidget: function(g, c, h, b) {
    if (!$KU.isValidCSSLength(h)) {
      return null
    }
    var e = $KU.getValueAndUnit(g, h);
    var h = e.value;
    var i = e.unit;
    var d = $KW.Utils.getWidgetNode(g);
    var a = $KW.Utils.getPosition(d);
    var f = $KW.Utils.getWidgetNode(c);
    var j = $KW.Utils.getPosition(f);
    if (b == "x") {
      h = j.left - a.left + h
    } else {
      if (b == "y") {
        h = j.top - a.top + h
      }
    }
    return {
      value: h,
      unit: i
    }
  },
  getPreviousNode: function(h, c, e) {
    var g = $KW.Utils.getWidgetIndex(h);
    if (g == 0) {
      return null
    }
    var b = h.parent;
    var k = b.widgets();
    var d = g - 1;
    var j = c.previousSibling;
    if (!j) {
      return null
    }
    for (var f = d; f >= 0; f--) {
      var a = k[f];
      if (!this.isVisible(a, e)) {
        if (!e.dataObj) {
          j = j.previousSibling
        }
        continue
      }
      return [a, j]
    }
  },
  canLayoutUI: function(a, b, f) {
    if (!$KU.needOptimization) {
      if (!this.isVisible(b, f)) {
        return false
      }
      return true
    }
    if ($KG.isUILayedOut) {
      var e = b.layoutConfig;
      var d = a.layoutConfig;
      var c = a.layouttype;
      if (c == kony.flex.FLOW_HORIZONTAL || c == kony.flex.FLOW_VERTICAL) {
        if (e.self) {
          d.children = true
        }
      }
      if (e.self || d.children) {
        if (!this.isVisible(b, f)) {
          e.self = false;
          return false
        }
        return true
      } else {
        if (b.wType == "FlexContainer" || b.wType == "FlexScrollContainer" || b.wType == "Segment" || b.wType == "TabPane") {
          this.layoutNestedConatiners(b);
          return false
        } else {
          return false
        }
      }
    } else {
      if (!this.isVisible(b, f)) {
        return false
      } else {
        if (!$KG.isUILayedOut && b.wType == "Image") {
          return false
        }
      }
    }
    return true
  },
  getWidgetFrame: function(d, e, b) {
    var g = b.left || "0px";
    var c = {
      value: parseFloat(g),
      unit: $KU.getUnit(g)
    };
    g = $KU.getValueByParentFrame(d, c, "x");
    var f = b.top || "0px";
    var a = {
      value: parseFloat(f),
      unit: $KU.getUnit(f)
    };
    f = $KU.getValueByParentFrame(d, a, "y");
    return {
      x: g,
      y: f,
      width: e.width,
      height: e.height
    }
  },
  isVisible: function(b, f) {
    if (f && f.dataObj) {
      var a = f.dataObj;
      var d = a.data;
      var e = a.map;
      var c = d[e[b.id]];
      if (c && c instanceof Object && typeof c.isVisible != "undefined") {
        return c.isVisible
      }
    }
    return b.isvisible
  }
};
$KW.Animator = function(a) {
  this.validateKeyFrame(a);
  this.animationDef = a
};
$KW.Animator.prototype = {
  getNextAnimationValue: function() {
    return ($KW.Animator.indexCounter >= 0) ? (++$KW.Animator.indexCounter) : ($KW.Animator.indexCounter = 0)
  },
  getAnimationTime: function() {
    return new Date().getTime()
  },
  validateKeyFrame: function(b) {
    for (var a in b) {
      if (a > 100) {
        throw new KonyError(1000, "AnimationError", "Invalid Animation Definition Exception: Animation Definition can not be greater than 100")
      }
    }
    if (b["100"] == undefined) {
      throw new KonyError(1000, "AnimationError", "Invalid Animation Definition Exception: Animation Definition does not have 100 value")
    }
  },
  getComputedAnimationFrames: function(h, n) {
    var b = {};
    var o = this.animationDef;
    var l = {};
    var a = {};
    var c = {};
    h.originalFrames = {};
    this.flexDepFrames = {};
    var s = {};
    var g = ["width", "height", "centerX", "centerY", "left", "top", "bottom", "left", "right", "minWidth", "maxWidth", "minHeight", "maxHeight", "transform", "opacity", "zIndex", "anchorPoint"];
    var w = {};
    var f = null;
    for (var r = 0; r < g.length; r++) {
      var q = g[r];
      w[q] = h[q]
    }
    if (!o[0]) {
      this.flexDepFrames[0] = $KW.FlexLayoutEngine.computeKeyFrameValues(h, w);
      f = this.flexDepFrames[0][0];
      if (h.wType == "Image") {
        var m = n.childNodes[0];
        var e = {
          width: f.width,
          height: f.height
        };
        if (h.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          e = $KU.setImgAspectRatio(h, m, e, false);
          var t = $KU.getImageCenterAlign(m, false, {
            spanHeight: f.height,
            imgHeight: e.height
          });
          if (t > 0) {
            b.margintop = t
          }
        } else {
          e = $KU.setImgDimensions(h, m, e, false)
        }
        b.width = e.width;
        b.height = e.height
      }
      a[0] = f;
      c[0] = b;
      if (h.wType == "Slider") {
        s[0] = {};
        s[0].left = $KW.Slider.animSlider(a[0].width, h, "left");
        c[0].width = $KW.Slider.animSlider(a[0].width, h, "width")
      }
    }
    var v = [];
    for (var r in o) {
      v.push(r)
    }
    v.sort(function(j, i) {
      return j - i
    });
    for (var r = 0; r < v.length; r++) {
      var d = v[r];
      b = $KU.cloneObj(o[d]);
      for (var q in b) {
        if (g.contains(q)) {
          w[q] = b[q];
          delete b[q]
        }
      }
      this.flexDepFrames[d] = $KW.FlexLayoutEngine.computeKeyFrameValues(h, w);
      f = this.flexDepFrames[d][0];
      if (h.wType == "Image") {
        var m = n.childNodes[0];
        var e = {
          width: f.width,
          height: f.height
        };
        if (h.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          e = $KU.setImgAspectRatio(h, m, e, false);
          var t = $KU.getImageCenterAlign(m, false, {
            spanHeight: f.height,
            imgHeight: e.height
          });
          if (t > 0) {
            b.margintop = t
          }
        } else {
          e = $KU.setImgDimensions(h, m, e, false)
        }
        b.width = e.width;
        b.height = e.height
      }
      if (w.transform) {
        f.transform = w.transform
      }
      if (typeof(w.opacity) != "undefined") {
        f.opacity = w.opacity
      }
      if (w.zIndex) {
        f.zIndex = w.zIndex
      }
      if (w.anchorPoint) {
        f.anchorPoint = w.anchorPoint
      }
      if (b.stepConfig) {
        b.timingFunction = f.timingFunction = b.stepConfig.timingFunction;
        for (var p in this.flexDepFrames[d]) {
          this.flexDepFrames[d][p].timingFunction = b.stepConfig.timingFunction
        }
      }
      if (f["min-height"] != undefined) {
        b["min-height"] = f["min-height"]
      }
      a[d] = f;
      c[d] = b;
      var u = owl.deepCopy(w);
      u.backgroundColor = b.backgroundColor;
      h.originalFrames[d] = u;
      if (h.wType == "Slider") {
        s[d] = {};
        s[d].left = $KW.Slider.animSlider(a[d].width, h, "left");
        c[d].width = $KW.Slider.animSlider(a[d].width, h, "width")
      }
    }
    this.cellFrame = a;
    this.skinFrame = c;
    if (h.wType == "Slider") {
      this.imageFrame = s
    }
  },
  createKeyFrames: function(e, b, g, l) {
    var c = $KG.animStyleSheet;
    if (c && b) {
      var n = "";
      for (var f in b) {
        var p = "",
          k = "";
        var h = b[f];
        for (var d in h) {
          if (d == "timingFunction") {
            if (typeof h[d] == "string") {
              k += "-" + vendor + "-animation-timing-function :" + h[d] + ";"
            } else {
              k += "-" + vendor + "-animation-timing-function : cubic-bezier(" + h[d] + ");"
            }
          } else {
            if (d == "zIndex") {
              p += "z-index:" + h[d] + ";"
            } else {
              if (d == "transform") {
                var a = $KW.animUtils.applyTransform(e, h[d]);
                p += "-" + vendor + "-transform:" + a + ";"
              } else {
                if (d == "anchorPoint") {
                  if (h[d]) {
                    if ((h[d].x >= 0) && (h[d].x <= 1) && (h[d].y >= 0) || (h[d].y <= 1)) {
                      p += "-" + vendor + "-transform-origin:" + (h[d].x * 100) + "% " + (h[d].y * 100) + "%; "
                    }
                  }
                } else {
                  if (d == "backgroundColor" || d == "borderColor") {
                    var m = $KW.skins.validateHexValue(h[d]);
                    if (m) {
                      var o = $KW.skins.convertHexValuetoRGBA(h[d])
                    }
                    if (d == "backgroundColor") {
                      if (e.wType == "ComboBox" || e.wType == "ListBox") {
                        p += "background-color:" + o + ";"
                      } else {
                        p += "background:" + o + ";"
                      }
                    } else {
                      if (d == "borderColor") {
                        p += "border-color:" + o + ";"
                      }
                    }
                  } else {
                    if (d == "margintop") {
                      p += "margin-top:" + h[d] + "px;"
                    } else {
                      p += d + ":" + h[d] + ";"
                    }
                  }
                }
              }
            }
          }
        }
        n += " " + f + "%{" + p + " " + k + "}"
      }
      if ($KG.appbehaviors.captureAniamtionData) {
        $KG.animataionData[this.animatorID].data[l] = n
      }
      c.insertRule("@-" + vendor + "-keyframes " + g + " { " + n + "}", c.cssRules.length)
    } else {
      console.log("kony css style sheet is not found")
    }
  },
  animate: function(p, g, y) {
    if (p) {
      var v = $KW.Utils.getWidgetNode(p);
      if (!v) {
        return
      }
      this.animatorID = "anim_" + p.id + "_" + this.getNextAnimationValue();
      this.animator1ID = this.animatorID + "_skin";
      if ($KG.appbehaviors.captureAniamtionData) {
        if (!$KG.animataionData) {
          $KG.animataionData = {}
        }
        $KG.animataionData[this.animatorID] = {};
        var d = $KG.animataionData[this.animatorID];
        d.animationID = this.animatorID;
        d.data = {
          startFrame: p.frame
        };
        d.animationRequestTime = d.animationRequestHandleBeginTime = this.getAnimationTime()
      }
      if (p.wType == "Image" && !p.loaded) {
        p.animInfo = {
          instance: this,
          animConfig: g,
          animCallback: y
        };
        return
      }
      if ((p.parent.wType == "FlexContainer" || p.parent.wType == "FlexScrollContainer" || ((p.parent.wType == "Form" || p.parent.wType == "Popup") && p.parent.layouttype != kony.flex.VBOX_LAYOUT))) {
        this.getComputedAnimationFrames(p, v);
        var r = this.flexDepFrames;
        this.createKeyFrames(p, this.cellFrame, this.animatorID, "widgetFrame");
        this.createKeyFrames(p, this.skinFrame, this.animator1ID, "skinFrame");
        var b = g.duration || 0;
        var B = g.iterationCount || 1;
        if (g.iterationCount == 0) {
          B = "infinite"
        }
        var E = g.direction || "normal";
        var f = g.delay || 0;
        var D = g.fillMode || "none";
        v.direction = E;
        v.fillMode = D;
        v.iterations = B;
        v.wModel = p;
        var q = vendor + "Animation";
        var o = this.animator1ID + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
        var A = this.animatorID + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
        if (p.wType == "Slider") {
          this.animator2ID = this.animatorID + "_image";
          this.createKeyFrames(p, this.imageFrame, this.animator2ID);
          var n = this.animator2ID + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
          v.childNodes[0].childNodes[0].childNodes[0].style[q] = n
        }
        var m = v.parentNode;
        if (p.wType == "Image") {
          v.childNodes[0].style[q] = o
        } else {
          if (p.wType == "Slider") {
            v.childNodes[0].childNodes[0].style[q] = o
          } else {
            v.style[q] = o
          }
        }
        m.style[q] = A;
        if ($KG.appbehaviors.captureAniamtionData) {
          d.animationRequestHandleEndTime = d.animationInvokeTime = this.getAnimationTime()
        }
        if (D == kony.anim.FILL_MODE_BACKWARDS || D == kony.anim.FILL_MODE_BOTH) {
          var u = [];
          var t = [];
          if (E == kony.anim.DIRECTION_NONE || E == kony.anim.DIRECTION_ALTERNATE) {
            u = this.animationDef[0]
          }
          for (var z in u) {
            t[z] = p[z];
            p[z] = u[z]
          }
          v.initialPosition = t
        }
        m.callBackConfig = y || {};
        if (kony.appinit.isFirefox || kony.appinit.isIE10 || kony.appinit.isIE11) {
          kony.events.addEventListener(m, "animationstart", this, false);
          kony.events.addEventListener(m, "animationiteration", this, false);
          kony.events.addEventListener(m, "animationend", this, false)
        } else {
          if (kony.appinit.isIE8 || kony.appinit.isIE9) {
            this.start(m);
            this.move(m);
            this.end(m)
          } else {
            kony.events.addEventListener(m, vendor + "AnimationStart", this, false);
            kony.events.addEventListener(m, vendor + "AnimationIteration", this, false);
            kony.events.addEventListener(m, vendor + "AnimationEnd", this, false)
          }
        }
        var a = p.parent;
        if (a.layoutType == kony.flex.FLOW_HORIZONTAL || a.layoutType == kony.flex.FLOW_VERTICAL) {
          widgetIndex = $KW.Utils.getWidgetIndex(p);
          if (widgetIndex != -1) {
            var s = a.widgets();
            var h = s.length;
            var x = 1;
            for (var z = (widgetIndex + 1); z < h; z++) {
              var C = s[z];
              if (!C.isvisible) {
                continue
              }
              var F = {};
              for (var w in r) {
                F[w] = r[w][x]
              }
              var l = $KW.Utils.getWidgetNode(C);
              var e = "dep_" + p.id + "_" + this.getNextAnimationValue();
              var c = e + " " + b + "s " + f + "s " + B + " " + E + " " + D + " ";
              this.createKeyFrames(p, F, e, "depFrame" + z);
              x++;
              l.parentNode.style[q] = c
            }
          }
        }
      }
    }
  },
  handleEvent: function(c) {
    var b = c.target;
    if (!b.childNodes[0]) {
      return
    }
    var d = b.childNodes[0];
    var a = d.wModel;
    if (!a) {
      return
    }
    switch (c.type) {
      case vendor + "AnimationStart":
      case "animationstart":
        this.start(b);
        break;
      case vendor + "AnimationIteration":
        this.move(b);
        break;
      case vendor + "AnimationEnd":
      case "animationend":
        this.end(b)
    }
  },
  start: function(c) {
    var d = c.childNodes[0];
    var a = d.wModel;
    if ($KG.appbehaviors.captureAniamtionData) {
      $KG.animataionData[this.animatorID].animationBeginTime = this.getAnimationTime()
    }
    var b = c.callBackConfig && $KU.returnEventReference(c.callBackConfig.animationStart);
    this.execute(b, a)
  },
  move: function(a) {},
  end: function(c, g) {
    var h = c.childNodes[0];
    var e = h.wModel;
    var b = h.fillMode;
    var j = h.direction;
    var d = h.iterations;
    if (!e) {
      return
    }
    var a = ["width", "height", "centerX", "centerY", "left", "top", "bottom", "right", "minWidth", "maxWidth", "minHeight", "maxHeight", "transform", "opacity", "zIndex", "anchorPoint", "backgroundColor"];
    if ($KG.appbehaviors.captureAniamtionData) {
      $KG.animataionData[this.animatorID].animationEndTime = this.getAnimationTime()
    }
    var g = c.callBackConfig && $KU.returnEventReference(c.callBackConfig.animationEnd);
    var k = [];
    if (b == kony.anim.FILL_MODE_FORWARDS || b == kony.anim.FILL_MODE_BOTH) {
      if (j == kony.anim.DIRECTION_NONE) {
        k = e.originalFrames[100]
      } else {
        if (j == kony.anim.DIRECTION_ALTERNATE) {
          if (d % 2 == 0) {
            k = e.originalFrames[0]
          } else {
            k = e.originalFrames[100]
          }
        }
      }
    }
    if (b == kony.anim.FILL_MODE_BACKWARDS) {
      k = h.initialPosition
    }
    for (var f in k) {
      if (a.contains(f)) {
        e[f] = k[f]
      }
    }
    this.removeListeners(c);
    if (b != kony.anim.FILL_MODE_NONE) {
      if (kony.appinit.isIE8) {
        $KU.updateLayoutConfig(e)
      }
      e.parent.forceLayout && e.parent.forceLayout()
    }
    c.style[vendor + "Animation"] = "";
    if ($KG.appbehaviors.captureAniamtionData) {
      $KG.animataionData[this.animatorID].data.endFrame = e.frame
    }
    if (e.wType == "Image") {
      delete e.animInfo
    }
    this.execute(g, e)
  },
  execute: function(b, a) {
    var c = {};
    b && setTimeout(function() {
      b.call(a, a, c)
    }, 0)
  },
  removeListeners: function(a) {
    if (kony.appinit.isFirefox || kony.appinit.isIE10 || kony.appinit.isIE11) {
      kony.events.removeEventListener(a, "animationstart", this, false);
      kony.events.removeEventListener(a, "animationiteration", this, false);
      kony.events.removeEventListener(a, "animationend", this, false)
    } else {
      kony.events.removeEventListener(a, vendor + "AnimationStart", this, false);
      kony.events.removeEventListener(a, vendor + "AnimationIteration", this, false);
      kony.events.removeEventListener(a, vendor + "AnimationEnd", this, false)
    }
  },
  cancel: function(a) {}
};
$KW.Transform = function() {
  this.transform = {}
};
$KW.Transform.prototype = {
  rotate: function(a) {
    if (a == "undefined") {
      a = 0
    }
    if (a < 0) {
      this.transform.rotate = "rotate(" + Math.abs(a) + "deg) "
    } else {
      this.transform.rotate = "rotate( -" + a + "deg) "
    }
    return this
  },
  translate: function(a, c) {
    if (a == "undefined") {
      a = 0
    }
    if (c == "undefined") {
      c = 0
    }
    var b = {};
    b.x = a;
    b.y = c;
    this.transform.translate = "translate(" + b.x + "px, " + b.y + "px) ";
    return this
  },
  scale: function(a, b) {
    if (a == "undefined") {
      a = 1
    }
    if (b == "undefined") {
      b = 1
    }
    this.transform.scale = "scale(" + a + ", " + b + ") ";
    return this
  }
};
$KW.animUtils = {
  applyTransform: function(c, a) {
    if (!a) {
      return ($KU.hasWebkitTransform) ? "translateZ(0px)" : ""
    }
    var b = "";
    if (a.transform.scale) {
      b += a.transform.scale
    }
    if (a.transform.translate) {
      b += a.transform.translate
    }
    if (a.transform.rotate) {
      b += a.transform.rotate
    }
    return b
  },
  AnimationDataComapre: function(h) {
    if (h == "record") {
      var b = JSON.stringify($KG.animataionData);
      localStorage.setItem("animataionData", b)
    } else {
      if (h == "play") {
        var d = localStorage.getItem("animataionData");
        var b = JSON.parse(d);
        var g = $KG.animataionData;
        for (var c in b) {
          console.log("Animation Testing for: " + b[c].animationID);
          var a = b[c].data;
          var e = g[c].data;
          for (var f in a) {
            if (f != "startFrame" && f != "endFrame") {
              if (a[f] == e[f]) {
                console.log("PASSED Frame is \n" + a[f] + " \n" + e[f])
              } else {
                console.log("FAILED Frame is \n" + a[f] + " \n" + e[f])
              }
            } else {}
          }
        }
      }
    }
  }
};
$KI.themes = {
  relativePath: true,
  setcurrenttheme: function(o, g, p) {
    if (!($KU.inArray($KG.themes, o, true))) {
      p();
      return
    }
    if (o == $KI.themes.getcurrenttheme()) {
      g();
      return
    }
    try {
      var d = window.document.styleSheets;
      var c = $KW.Utils.getKonyStyleSheetIndex(d);
      var l = "";
      var a = "";
      if (c == -1 && $KG[$KG.theme + "remoteurl"] && $KG.lastStyleSheet) {
        l = $KG.lastStyleSheet.lastIndexOf("/");
        if ($KG.theme && $KG.theme != "default") {
          var q = $KG.lastStyleSheet.substring(0, l);
          if (q.indexOf($KG.theme)) {
            l = q.lastIndexOf("/")
          }
        }
        a = $KG.lastStyleSheet
      } else {
        l = d[c].href.lastIndexOf("/");
        a = d[c].href
      }
      var b = "";
      if (this.relativePath || this.relativePath === undefined) {
        this.relativePath = false;
        var k = a.substring(0, l + 1);
        $KG.relativepath = k;
        b = a.substring(a.lastIndexOf("/"), a.length);
        $KG.themerelcssfile = b
      }
      b = $KG.themerelcssfile;
      var n = document.createElement("link");
      n.type = "text/css";
      n.rel = "stylesheet";
      var r = document.getElementsByTagName("head");
      var m = new XMLHttpRequest();
      if ($KG.relativepath) {
        k = $KG.relativepath
      }
      var f = $KG.imagecat;
      var j = k + (o == "default" ? "" : o) + b;
      var h = $KG.theme;
      if ($KG[h + "remoteurl"]) {
        b = $KG[h + "remoteurl"]
      }
      $KG[o + "remoteurl"] && (j = $KG[o + "remoteurl"]);
      m.open("GET", j, true);
      m.timeout = 60000;
      m.onreadystatechange = function() {
        if (this.readyState == 4) {
          if (this.status == 200) {
            for (var t = 0; t < r[0].childNodes.length; t++) {
              if (r[0].childNodes[t].nodeName == "LINK") {
                if (r[0].childNodes[t].getAttribute("href").indexOf(b) != -1) {
                  $KG.lastStyleSheet = r[0].childNodes[t].href;
                  var u = r[0].childNodes[t].getAttribute("media") || "screen";
                  var s = document.createElement("link");
                  s.rel = "stylesheet";
                  s.type = "text/css";
                  s.href = j;
                  s.media = u;
                  r[0].replaceChild(s, r[0].childNodes[t]);
                  var e = document.createElement("img");
                  e.onerror = function() {
                    var v = window.document.styleSheets;
                    $KG.currentStyleSheet = v[$KW.Utils.getKonyStyleSheetIndex(v)];
                    $KG.theme = o;
                    g();
                    m = null
                  };
                  e.src = j;
                  break
                }
              }
            }
          } else {
            p()
          }
        }
      };
      m.ontimeout = function() {
        p()
      };
      m.send(null)
    } catch (i) {
      p()
    }
  },
  deletetheme: function(f, j, b) {
    var a = $KG.themes;
    var h = a.length;
    var g = a.length;
    try {
      for (var c = 0; c < a.length; c++) {
        if (a[c] == f) {
          a.splice(c, 1)
        }
      }
      $KG.themes = a;
      if ($KG.theme == f) {
        $KI.themes.setcurrenttheme("default", j, b);
        return
      }
      g = a.length;
      if (h - 1 == g) {
        j()
      } else {
        b()
      }
    } catch (d) {
      b()
    }
  },
  isthemepresent: function(a) {
    return $KU.inArray($KG.themes, a, true)
  },
  createtheme: function(d, h, g, c) {
    if (($KU.inArray($KG.themes, h, true))) {
      g();
      return
    }
    try {
      var f = new XMLHttpRequest();
      var b = d;
      f.open("GET", b, true);
      f.timeout = 60000;
      var a = document.getElementsByTagName("head");
      $KG[h + "remoteurl"] = d;
      f.onreadystatechange = function() {
        if (this.readyState == 4) {
          if (this.status == 200) {
            $KG.themes.push(h);
            g();
            f = null
          } else {
            c()
          }
        }
      };
      f.ontimeout = function() {
        c()
      };
      f.send(null)
    } catch (i) {
      c()
    }
  },
  allthemes: function() {
    return $KG.themes
  },
  getcurrentthemedata: function() {
    return true
  },
  getcurrenttheme: function() {
    return $KG.theme
  },
  packagedthemes: function(c) {
    var a = [];
    if (IndexJL == 1) {
      a.push(null)
    }
    for (var b = IndexJL; b < (c.length); b++) {
      a.push(c[b])
    }
    $KG.themes = a;
    $KG.theme = "default"
  }
};
$KI.crypto = {
  stringify: function(a) {
    var b = {
      ct: a.ciphertext.toString(CryptoJS.enc.Base64)
    };
    if (a.iv) {
      b.iv = a.iv.toString()
    }
    if (a.salt) {
      b.s = a.salt.toString()
    }
    return JSON.stringify(b)
  },
  parse: function(a) {
    var c = JSON.parse(a);
    var b = CryptoJS.lib.CipherParams.create({
      ciphertext: CryptoJS.enc.Base64.parse(c.ct)
    });
    if (c.iv) {
      b.iv = CryptoJS.enc.Hex.parse(c.iv)
    }
    if (c.s) {
      b.salt = CryptoJS.enc.Hex.parse(c.s)
    }
    return b
  },
  createhash: function(a, b) {
    var e;
    var d;
    if (typeof(b) != "string") {
      return {
        errcode: 100,
        errmessage: "invalid input parameters"
      }
    }
    try {
      switch (a.toLowerCase()) {
        case "md5":
          e = CryptoJS.MD5(b);
          break;
        case "sha256":
          e = CryptoJS.SHA256(b);
          break;
        case "sha1":
          e = CryptoJS.SHA1(b);
          break;
        case "sha512":
          e = CryptoJS.SHA512(b);
          break;
        default:
          e = {
            errcode: 101,
            errmessage: "unsupported algorithm"
          };
          break
      }
      return e
    } catch (c) {
      return {
        errcode: 102,
        errmessage: "unknown  error"
      }
    }
  },
  encrypt: function(g, f, a, c) {
    if (typeof(g) != "string" && a && f) {
      return {
        errcode: 100,
        errmessage: "invalid input parameters"
      }
    }
    var e = CryptoJS.mode.CBC;
    var d = CryptoJS.pad.Pkcs7;
    try {
      if (c) {
        if (c.mode) {
          switch (c.mode.toLowerCase()) {
            case "cfb":
              e = CryptoJS.mode.CFB;
              break;
            case "ctr":
              e = CryptoJS.mode.CTR;
              break;
            case "ofb":
              e = CryptoJS.mode.OFB;
              break;
            case "ecb":
              e = CryptoJS.mode.ECB;
              break
          }
        }
        if (c.padding) {
          switch (c.padding.toLowerCase()) {
            case "iso97971":
              d = CryptoJS.pad.Iso97971;
              break;
            case "iso10126":
              d = CryptoJS.pad.Iso10126;
              break;
            case "zeropadding":
              d = CryptoJS.pad.ZeroPadding;
              break;
            case "nopadding":
              d = CryptoJS.pad.NoPadding;
              break
          }
        }
      }
      if (g.toLowerCase() == "aes") {
        var h = CryptoJS.AES.encrypt(a, f, {
          mode: e,
          padding: d
        });
        return $KI.crypto.stringify(h)
      } else {
        if (g.toLowerCase() == "tripledes") {
          var h = CryptoJS.TripleDES.encrypt(a, f, {
            mode: e,
            padding: d,
            format: $KI.crypto.JsonFormatter
          });
          return $KI.crypto.stringify(h)
        } else {
          return {
            errcode: 101,
            errmessage: "unsupported algorithm"
          }
        }
      }
    } catch (b) {
      return {
        errcode: 102,
        errmessage: "unknown  error"
      }
    }
  },
  decrypt: function(h, g, a, c) {
    if (typeof(h) != "string" && a && g) {
      return {
        errcode: 100,
        errmessage: "invalid input parameters"
      }
    }
    var f = CryptoJS.mode.CBC;
    var e = CryptoJS.pad.Pkcs7;
    try {
      if (c) {
        if (c.mode) {
          switch (c.mode.toLowerCase()) {
            case "cfb":
              f = CryptoJS.mode.CFB;
              break;
            case "ctr":
              f = CryptoJS.mode.CTR;
              break;
            case "ofb":
              f = CryptoJS.mode.OFB;
              break;
            case "ecb":
              f = CryptoJS.mode.ECB;
              break
          }
        }
        if (c.padding) {
          switch (c.padding.toLowerCase()) {
            case "iso97971":
              e = CryptoJS.pad.Iso97971;
              break;
            case "iso10126":
              e = CryptoJS.pad.Iso10126;
              break;
            case "zeropadding":
              e = CryptoJS.pad.ZeroPadding;
              break;
            case "nopadding":
              e = CryptoJS.pad.NoPadding;
              break
          }
        }
      }
      a = $KI.crypto.parse(a);
      if (h.toLowerCase() == "aes") {
        var d = CryptoJS.AES.decrypt(a, g, {
          mode: f,
          padding: e
        });
        return d.toString(CryptoJS.enc.Utf8)
      } else {
        if (h.toLowerCase() == "tripledes") {
          var d = CryptoJS.TripleDES.decrypt(a, g, {
            mode: f,
            padding: e
          });
          return d.toString(CryptoJS.enc.Utf8)
        } else {
          return {
            errcode: 101,
            errmessage: "unsupported algorithm"
          }
        }
      }
    } catch (b) {
      return {
        errcode: 102,
        errmessage: "unknown  error"
      }
    }
  },
  retrievepublickey: function() {
    return
  },
  newkey: function(d, c, b) {
    try {
      if (d != "passphrase") {
        return {
          errcode: 100,
          errmessage: "invalid input parameters"
        }
      } else {
        if (!b.subalgo) {
          return {
            errcode: 105,
            errmessage: "subalgo parameter is missing"
          }
        }
      }
      if (b.subalgo.toLowerCase() == "aes" || b.subalgo.toLowerCase() == "tripledes") {
        return b.passphrasetext[IndexJL]
      } else {
        return {
          errcode: 101,
          errmessage: "unsupported algorithm"
        }
      }
    } catch (a) {
      return {
        errcode: 102,
        errmessage: "unknown error"
      }
    }
  },
  savekey: function(a, b, c) {
    if (a == undefined || b == undefined) {
      return {
        errcode: 100,
        errmsg: "Invalid input parameters"
      }
    }
    try {
      if (localStorage) {
        try {
          localStorage.setItem(a, JSON.stringify(b));
          return a
        } catch (g) {
          if (g.name == "QUOTA_EXCEEDED_ERR") {
            var f = 0,
              h = "";
            if (localStorage.length === 0) {
              f = 102;
              h = "Private Browsing is switched ON"
            } else {
              f = 101;
              h = "unable to save the key with the specified name"
            }
            return {
              errcode: f,
              errmsg: h
            }
          }
        }
      } else {
        return {
          errcode: 102,
          errmsg: "unknown error, storage not supported"
        }
      }
    } catch (d) {}
  },
  readkey: function(c) {
    if (c == undefined) {
      return {
        errcode: 100,
        errmsg: "Invalid input parameters"
      }
    }
    try {
      if (localStorage) {
        var b = JSON.parse(localStorage.getItem(c) || "null");
        if (b == null) {
          return {
            errcode: 101,
            errmsg: "unable to find the key with the specified unique ID"
          }
        } else {
          return b
        }
      } else {
        kony.print("crypto readkey failed");
        return {
          errcode: 102,
          errmsg: "unknown error, storage not supported"
        }
      }
    } catch (a) {}
  },
  deletekey: function(b) {
    try {
      if (localStorage) {
        localStorage.removeItem(b)
      } else {
        kony.print("crypto delete failed")
      }
    } catch (a) {}
  }
};
/*! jQuery v1.7.1 jquery.com | jquery.org/license */
if (!window.jQuery) {
  (function(a, b) {
    function cy(a) {
      return f.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1
    }

    function cv(a) {
      if (!ck[a]) {
        var b = c.body,
          d = f("<" + a + ">").appendTo(b),
          e = d.css("display");
        d.remove();
        if (e === "none" || e === "") {
          cl || (cl = c.createElement("iframe"), cl.frameBorder = cl.width = cl.height = 0), b.appendChild(cl);
          if (!cm || !cl.createElement) {
            cm = (cl.contentWindow || cl.contentDocument).document, cm.write((c.compatMode === "CSS1Compat" ? "<!doctype html>" : "") + "<html><body>"), cm.close()
          }
          d = cm.createElement(a), cm.body.appendChild(d), e = f.css(d, "display"), b.removeChild(cl)
        }
        ck[a] = e
      }
      return ck[a]
    }

    function cu(a, b) {
      var c = {};
      f.each(cq.concat.apply([], cq.slice(0, b)), function() {
        c[this] = a
      });
      return c
    }

    function ct() {
      cr = b
    }

    function cs() {
      setTimeout(ct, 0);
      return cr = f.now()
    }

    function cj() {
      try {
        return new a.ActiveXObject("Microsoft.XMLHTTP")
      } catch (b) {}
    }

    function ci() {
      try {
        return new a.XMLHttpRequest
      } catch (b) {}
    }

    function cc(a, c) {
      a.dataFilter && (c = a.dataFilter(c, a.dataType));
      var d = a.dataTypes,
        e = {},
        g, h, i = d.length,
        j, k = d[0],
        l, m, n, o, p;
      for (g = 1; g < i; g++) {
        if (g === 1) {
          for (h in a.converters) {
            typeof h == "string" && (e[h.toLowerCase()] = a.converters[h])
          }
        }
        l = k, k = d[g];
        if (k === "*") {
          k = l
        } else {
          if (l !== "*" && l !== k) {
            m = l + " " + k, n = e[m] || e["* " + k];
            if (!n) {
              p = b;
              for (o in e) {
                j = o.split(" ");
                if (j[0] === l || j[0] === "*") {
                  p = e[j[1] + " " + k];
                  if (p) {
                    o = e[o], o === !0 ? n = p : p === !0 && (n = o);
                    break
                  }
                }
              }
            }!n && !p && f.error("No conversion from " + m.replace(" ", " to ")), n !== !0 && (c = n ? n(c) : p(o(c)))
          }
        }
      }
      return c
    }

    function cb(a, c, d) {
      var e = a.contents,
        f = a.dataTypes,
        g = a.responseFields,
        h, i, j, k;
      for (i in g) {
        i in d && (c[g[i]] = d[i])
      }
      while (f[0] === "*") {
        f.shift(), h === b && (h = a.mimeType || c.getResponseHeader("content-type"))
      }
      if (h) {
        for (i in e) {
          if (e[i] && e[i].test(h)) {
            f.unshift(i);
            break
          }
        }
      }
      if (f[0] in d) {
        j = f[0]
      } else {
        for (i in d) {
          if (!f[0] || a.converters[i + " " + f[0]]) {
            j = i;
            break
          }
          k || (k = i)
        }
        j = j || k
      }
      if (j) {
        j !== f[0] && f.unshift(j);
        return d[j]
      }
    }

    function ca(a, b, c, d) {
      if (f.isArray(b)) {
        f.each(b, function(b, e) {
          c || bE.test(a) ? d(a, e) : ca(a + "[" + (typeof e == "object" || f.isArray(e) ? b : "") + "]", e, c, d)
        })
      } else {
        if (!c && b != null && typeof b == "object") {
          for (var e in b) {
            ca(a + "[" + e + "]", b[e], c, d)
          }
        } else {
          d(a, b)
        }
      }
    }

    function b_(a, c) {
      var d, e, g = f.ajaxSettings.flatOptions || {};
      for (d in c) {
        c[d] !== b && ((g[d] ? a : e || (e = {}))[d] = c[d])
      }
      e && f.extend(!0, a, e)
    }

    function b$(a, c, d, e, f, g) {
      f = f || c.dataTypes[0], g = g || {}, g[f] = !0;
      var h = a[f],
        i = 0,
        j = h ? h.length : 0,
        k = a === bT,
        l;
      for (; i < j && (k || !l); i++) {
        l = h[i](c, d, e), typeof l == "string" && (!k || g[l] ? l = b : (c.dataTypes.unshift(l), l = b$(a, c, d, e, l, g)))
      }(k || !l) && !g["*"] && (l = b$(a, c, d, e, "*", g));
      return l
    }

    function bZ(a) {
      return function(b, c) {
        typeof b != "string" && (c = b, b = "*");
        if (f.isFunction(c)) {
          var d = b.toLowerCase().split(bP),
            e = 0,
            g = d.length,
            h, i, j;
          for (; e < g; e++) {
            h = d[e], j = /^\+/.test(h), j && (h = h.substr(1) || "*"), i = a[h] = a[h] || [], i[j ? "unshift" : "push"](c)
          }
        }
      }
    }

    function bC(a, b, c) {
      var d = b === "width" ? a.offsetWidth : a.offsetHeight,
        e = b === "width" ? bx : by,
        g = 0,
        h = e.length;
      if (d > 0) {
        if (c !== "border") {
          for (; g < h; g++) {
            c || (d -= parseFloat(f.css(a, "padding" + e[g])) || 0), c === "margin" ? d += parseFloat(f.css(a, c + e[g])) || 0 : d -= parseFloat(f.css(a, "border" + e[g] + "Width")) || 0
          }
        }
        return d + "px"
      }
      d = bz(a, b, b);
      if (d < 0 || d == null) {
        d = a.style[b] || 0
      }
      d = parseFloat(d) || 0;
      if (c) {
        for (; g < h; g++) {
          d += parseFloat(f.css(a, "padding" + e[g])) || 0, c !== "padding" && (d += parseFloat(f.css(a, "border" + e[g] + "Width")) || 0), c === "margin" && (d += parseFloat(f.css(a, c + e[g])) || 0)
        }
      }
      return d + "px"
    }

    function bp(a, b) {
      b.src ? f.ajax({
        url: b.src,
        async: !1,
        dataType: "script"
      }) : f.globalEval((b.text || b.textContent || b.innerHTML || "").replace(bf, "/*$0*/")), b.parentNode && b.parentNode.removeChild(b)
    }

    function bo(a) {
      var b = c.createElement("div");
      bh.appendChild(b), b.innerHTML = a.outerHTML;
      return b.firstChild
    }

    function bn(a) {
      var b = (a.nodeName || "").toLowerCase();
      b === "input" ? bm(a) : b !== "script" && typeof a.getElementsByTagName != "undefined" && f.grep(a.getElementsByTagName("input"), bm)
    }

    function bm(a) {
      if (a.type === "checkbox" || a.type === "radio") {
        a.defaultChecked = a.checked
      }
    }

    function bl(a) {
      return typeof a.getElementsByTagName != "undefined" ? a.getElementsByTagName("*") : typeof a.querySelectorAll != "undefined" ? a.querySelectorAll("*") : []
    }

    function bk(a, b) {
      var c;
      if (b.nodeType === 1) {
        b.clearAttributes && b.clearAttributes(), b.mergeAttributes && b.mergeAttributes(a), c = b.nodeName.toLowerCase();
        if (c === "object") {
          b.outerHTML = a.outerHTML
        } else {
          if (c !== "input" || a.type !== "checkbox" && a.type !== "radio") {
            if (c === "option") {
              b.selected = a.defaultSelected
            } else {
              if (c === "input" || c === "textarea") {
                b.defaultValue = a.defaultValue
              }
            }
          } else {
            a.checked && (b.defaultChecked = b.checked = a.checked), b.value !== a.value && (b.value = a.value)
          }
        }
        b.removeAttribute(f.expando)
      }
    }

    function bj(a, b) {
      if (b.nodeType === 1 && !!f.hasData(a)) {
        var c, d, e, g = f._data(a),
          h = f._data(b, g),
          i = g.events;
        if (i) {
          delete h.handle, h.events = {};
          for (c in i) {
            for (d = 0, e = i[c].length; d < e; d++) {
              f.event.add(b, c + (i[c][d].namespace ? "." : "") + i[c][d].namespace, i[c][d], i[c][d].data)
            }
          }
        }
        h.data && (h.data = f.extend({}, h.data))
      }
    }

    function bi(a, b) {
      return f.nodeName(a, "table") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }

    function U(a) {
      var b = V.split("|"),
        c = a.createDocumentFragment();
      if (c.createElement) {
        while (b.length) {
          c.createElement(b.pop())
        }
      }
      return c
    }

    function T(a, b, c) {
      b = b || 0;
      if (f.isFunction(b)) {
        return f.grep(a, function(a, d) {
          var e = !!b.call(a, d, a);
          return e === c
        })
      }
      if (b.nodeType) {
        return f.grep(a, function(a, d) {
          return a === b === c
        })
      }
      if (typeof b == "string") {
        var d = f.grep(a, function(a) {
          return a.nodeType === 1
        });
        if (O.test(b)) {
          return f.filter(b, d, !c)
        }
        b = f.filter(b, d)
      }
      return f.grep(a, function(a, d) {
        return f.inArray(a, b) >= 0 === c
      })
    }

    function S(a) {
      return !a || !a.parentNode || a.parentNode.nodeType === 11
    }

    function K() {
      return !0
    }

    function J() {
      return !1
    }

    function n(a, b, c) {
      var d = b + "defer",
        e = b + "queue",
        g = b + "mark",
        h = f._data(a, d);
      h && (c === "queue" || !f._data(a, e)) && (c === "mark" || !f._data(a, g)) && setTimeout(function() {
        !f._data(a, e) && !f._data(a, g) && (f.removeData(a, d, !0), h.fire())
      }, 0)
    }

    function m(a) {
      for (var b in a) {
        if (b === "data" && f.isEmptyObject(a[b])) {
          continue
        }
        if (b !== "toJSON") {
          return !1
        }
      }
      return !0
    }

    function l(a, c, d) {
      if (d === b && a.nodeType === 1) {
        var e = "data-" + c.replace(k, "-$1").toLowerCase();
        d = a.getAttribute(e);
        if (typeof d == "string") {
          try {
            d = d === "true" ? !0 : d === "false" ? !1 : d === "null" ? null : f.isNumeric(d) ? parseFloat(d) : j.test(d) ? f.parseJSON(d) : d
          } catch (g) {}
          f.data(a, c, d)
        } else {
          d = b
        }
      }
      return d
    }

    function h(a) {
      var b = g[a] = {},
        c, d;
      a = a.split(/\s+/);
      for (c = 0, d = a.length; c < d; c++) {
        b[a[c]] = !0
      }
      return b
    }
    var c = a.document,
      d = a.navigator,
      e = a.location,
      f = function() {
        function J() {
          if (!e.isReady) {
            try {
              c.documentElement.doScroll("left")
            } catch (a) {
              setTimeout(J, 1);
              return
            }
            e.ready()
          }
        }
        var e = function(a, b) {
            return new e.fn.init(a, b, h)
          },
          f = a.jQuery,
          g = a.$,
          h, i = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
          j = /\S/,
          k = /^\s+/,
          l = /\s+$/,
          m = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
          n = /^[\],:{}\s]*$/,
          o = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
          p = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
          q = /(?:^|:|,)(?:\s*\[)+/g,
          r = /(webkit)[ \/]([\w.]+)/,
          s = /(opera)(?:.*version)?[ \/]([\w.]+)/,
          t = /(msie) ([\w.]+)/,
          u = /(mozilla)(?:.*? rv:([\w.]+))?/,
          v = /-([a-z]|[0-9])/ig,
          w = /^-ms-/,
          x = function(a, b) {
            return (b + "").toUpperCase()
          },
          y = d.userAgent,
          z, A, B, C = Object.prototype.toString,
          D = Object.prototype.hasOwnProperty,
          E = Array.prototype.push,
          F = Array.prototype.slice,
          G = String.prototype.trim,
          H = Array.prototype.indexOf,
          I = {};
        e.fn = e.prototype = {
          constructor: e,
          init: function(a, d, f) {
            var g, h, j, k;
            if (!a) {
              return this
            }
            if (a.nodeType) {
              this.context = this[0] = a, this.length = 1;
              return this
            }
            if (a === "body" && !d && c.body) {
              this.context = c, this[0] = c.body, this.selector = a, this.length = 1;
              return this
            }
            if (typeof a == "string") {
              a.charAt(0) !== "<" || a.charAt(a.length - 1) !== ">" || a.length < 3 ? g = i.exec(a) : g = [null, a, null];
              if (g && (g[1] || !d)) {
                if (g[1]) {
                  d = d instanceof e ? d[0] : d, k = d ? d.ownerDocument || d : c, j = m.exec(a), j ? e.isPlainObject(d) ? (a = [c.createElement(j[1])], e.fn.attr.call(a, d, !0)) : a = [k.createElement(j[1])] : (j = e.buildFragment([g[1]], [k]), a = (j.cacheable ? e.clone(j.fragment) : j.fragment).childNodes);
                  return e.merge(this, a)
                }
                h = c.getElementById(g[2]);
                if (h && h.parentNode) {
                  if (h.id !== g[2]) {
                    return f.find(a)
                  }
                  this.length = 1, this[0] = h
                }
                this.context = c, this.selector = a;
                return this
              }
              return !d || d.jquery ? (d || f).find(a) : this.constructor(d).find(a)
            }
            if (e.isFunction(a)) {
              return f.ready(a)
            }
            a.selector !== b && (this.selector = a.selector, this.context = a.context);
            return e.makeArray(a, this)
          },
          selector: "",
          jquery: "1.7.1",
          length: 0,
          size: function() {
            return this.length
          },
          toArray: function() {
            return F.call(this, 0)
          },
          get: function(a) {
            return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a]
          },
          pushStack: function(a, b, c) {
            var d = this.constructor();
            e.isArray(a) ? E.apply(d, a) : e.merge(d, a), d.prevObject = this, d.context = this.context, b === "find" ? d.selector = this.selector + (this.selector ? " " : "") + c : b && (d.selector = this.selector + "." + b + "(" + c + ")");
            return d
          },
          each: function(a, b) {
            return e.each(this, a, b)
          },
          ready: function(a) {
            e.bindReady(), A.add(a);
            return this
          },
          eq: function(a) {
            a = +a;
            return a === -1 ? this.slice(a) : this.slice(a, a + 1)
          },
          first: function() {
            return this.eq(0)
          },
          last: function() {
            return this.eq(-1)
          },
          slice: function() {
            return this.pushStack(F.apply(this, arguments), "slice", F.call(arguments).join(","))
          },
          map: function(a) {
            return this.pushStack(e.map(this, function(b, c) {
              return a.call(b, c, b)
            }))
          },
          end: function() {
            return this.prevObject || this.constructor(null)
          },
          push: E,
          sort: [].sort,
          splice: [].splice
        }, e.fn.init.prototype = e.fn, e.extend = e.fn.extend = function() {
          var a, c, d, f, g, h, i = arguments[0] || {},
            j = 1,
            k = arguments.length,
            l = !1;
          typeof i == "boolean" && (l = i, i = arguments[1] || {}, j = 2), typeof i != "object" && !e.isFunction(i) && (i = {}), k === j && (i = this, --j);
          for (; j < k; j++) {
            if ((a = arguments[j]) != null) {
              for (c in a) {
                d = i[c], f = a[c];
                if (i === f) {
                  continue
                }
                l && f && (e.isPlainObject(f) || (g = e.isArray(f))) ? (g ? (g = !1, h = d && e.isArray(d) ? d : []) : h = d && e.isPlainObject(d) ? d : {}, i[c] = e.extend(l, h, f)) : f !== b && (i[c] = f)
              }
            }
          }
          return i
        }, e.extend({
          noConflict: function(b) {
            a.$ === e && (a.$ = g), b && a.jQuery === e && (a.jQuery = f);
            return e
          },
          isReady: !1,
          readyWait: 1,
          holdReady: function(a) {
            a ? e.readyWait++ : e.ready(!0)
          },
          ready: function(a) {
            if (a === !0 && !--e.readyWait || a !== !0 && !e.isReady) {
              if (!c.body) {
                return setTimeout(e.ready, 1)
              }
              e.isReady = !0;
              if (a !== !0 && --e.readyWait > 0) {
                return
              }
              A.fireWith(c, [e]), e.fn.trigger && e(c).trigger("ready").off("ready")
            }
          },
          bindReady: function() {
            if (!A) {
              A = e.Callbacks("once memory");
              if (c.readyState === "complete") {
                return setTimeout(e.ready, 1)
              }
              if (c.addEventListener) {
                c.addEventListener("DOMContentLoaded", B, !1), a.addEventListener("load", e.ready, !1)
              } else {
                if (c.attachEvent) {
                  c.attachEvent("onreadystatechange", B), a.attachEvent("onload", e.ready);
                  var b = !1;
                  try {
                    b = a.frameElement == null
                  } catch (d) {}
                  c.documentElement.doScroll && b && J()
                }
              }
            }
          },
          isFunction: function(a) {
            return e.type(a) === "function"
          },
          isArray: Array.isArray || function(a) {
            return e.type(a) === "array"
          },
          isWindow: function(a) {
            return a && typeof a == "object" && "setInterval" in a
          },
          isNumeric: function(a) {
            return !isNaN(parseFloat(a)) && isFinite(a)
          },
          type: function(a) {
            return a == null ? String(a) : I[C.call(a)] || "object"
          },
          isPlainObject: function(a) {
            if (!a || e.type(a) !== "object" || a.nodeType || e.isWindow(a)) {
              return !1
            }
            try {
              if (a.constructor && !D.call(a, "constructor") && !D.call(a.constructor.prototype, "isPrototypeOf")) {
                return !1
              }
            } catch (c) {
              return !1
            }
            var d;
            for (d in a) {}
            return d === b || D.call(a, d)
          },
          isEmptyObject: function(a) {
            for (var b in a) {
              return !1
            }
            return !0
          },
          error: function(a) {
            throw new Error(a)
          },
          parseJSON: function(b) {
            if (typeof b != "string" || !b) {
              return null
            }
            b = e.trim(b);
            if (a.JSON && a.JSON.parse) {
              return a.JSON.parse(b)
            }
            if (n.test(b.replace(o, "@").replace(p, "]").replace(q, ""))) {
              return (new Function("return " + b))()
            }
            e.error("Invalid JSON: " + b)
          },
          parseXML: function(c) {
            var d, f;
            try {
              a.DOMParser ? (f = new DOMParser, d = f.parseFromString(c, "text/xml")) : (d = new ActiveXObject("Microsoft.XMLDOM"), d.async = "false", d.loadXML(c))
            } catch (g) {
              d = b
            }(!d || !d.documentElement || d.getElementsByTagName("parsererror").length) && e.error("Invalid XML: " + c);
            return d
          },
          noop: function() {},
          globalEval: function(b) {
            b && j.test(b) && (a.execScript || function(b) {
              a.eval.call(a, b)
            })(b)
          },
          camelCase: function(a) {
            return a.replace(w, "ms-").replace(v, x)
          },
          nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase()
          },
          each: function(a, c, d) {
            var f, g = 0,
              h = a.length,
              i = h === b || e.isFunction(a);
            if (d) {
              if (i) {
                for (f in a) {
                  if (c.apply(a[f], d) === !1) {
                    break
                  }
                }
              } else {
                for (; g < h;) {
                  if (c.apply(a[g++], d) === !1) {
                    break
                  }
                }
              }
            } else {
              if (i) {
                for (f in a) {
                  if (c.call(a[f], f, a[f]) === !1) {
                    break
                  }
                }
              } else {
                for (; g < h;) {
                  if (c.call(a[g], g, a[g++]) === !1) {
                    break
                  }
                }
              }
            }
            return a
          },
          trim: G ? function(a) {
            return a == null ? "" : G.call(a)
          } : function(a) {
            return a == null ? "" : (a + "").replace(k, "").replace(l, "")
          },
          makeArray: function(a, b) {
            var c = b || [];
            if (a != null) {
              var d = e.type(a);
              a.length == null || d === "string" || d === "function" || d === "regexp" || e.isWindow(a) ? E.call(c, a) : e.merge(c, a)
            }
            return c
          },
          inArray: function(a, b, c) {
            var d;
            if (b) {
              if (H) {
                return H.call(b, a, c)
              }
              d = b.length, c = c ? c < 0 ? Math.max(0, d + c) : c : 0;
              for (; c < d; c++) {
                if (c in b && b[c] === a) {
                  return c
                }
              }
            }
            return -1
          },
          merge: function(a, c) {
            var d = a.length,
              e = 0;
            if (typeof c.length == "number") {
              for (var f = c.length; e < f; e++) {
                a[d++] = c[e]
              }
            } else {
              while (c[e] !== b) {
                a[d++] = c[e++]
              }
            }
            a.length = d;
            return a
          },
          grep: function(a, b, c) {
            var d = [],
              e;
            c = !!c;
            for (var f = 0, g = a.length; f < g; f++) {
              e = !!b(a[f], f), c !== e && d.push(a[f])
            }
            return d
          },
          map: function(a, c, d) {
            var f, g, h = [],
              i = 0,
              j = a.length,
              k = a instanceof e || j !== b && typeof j == "number" && (j > 0 && a[0] && a[j - 1] || j === 0 || e.isArray(a));
            if (k) {
              for (; i < j; i++) {
                f = c(a[i], i, d), f != null && (h[h.length] = f)
              }
            } else {
              for (g in a) {
                f = c(a[g], g, d), f != null && (h[h.length] = f)
              }
            }
            return h.concat.apply([], h)
          },
          guid: 1,
          proxy: function(a, c) {
            if (typeof c == "string") {
              var d = a[c];
              c = a, a = d
            }
            if (!e.isFunction(a)) {
              return b
            }
            var f = F.call(arguments, 2),
              g = function() {
                return a.apply(c, f.concat(F.call(arguments)))
              };
            g.guid = a.guid = a.guid || g.guid || e.guid++;
            return g
          },
          access: function(a, c, d, f, g, h) {
            var i = a.length;
            if (typeof c == "object") {
              for (var j in c) {
                e.access(a, j, c[j], f, g, d)
              }
              return a
            }
            if (d !== b) {
              f = !h && f && e.isFunction(d);
              for (var k = 0; k < i; k++) {
                g(a[k], c, f ? d.call(a[k], k, g(a[k], c)) : d, h)
              }
              return a
            }
            return i ? g(a[0], c) : b
          },
          now: function() {
            return (new Date).getTime()
          },
          uaMatch: function(a) {
            a = a.toLowerCase();
            var b = r.exec(a) || s.exec(a) || t.exec(a) || a.indexOf("compatible") < 0 && u.exec(a) || [];
            return {
              browser: b[1] || "",
              version: b[2] || "0"
            }
          },
          sub: function() {
            function a(b, c) {
              return new a.fn.init(b, c)
            }
            e.extend(!0, a, this), a.superclass = this, a.fn = a.prototype = this(), a.fn.constructor = a, a.sub = this.sub, a.fn.init = function(d, f) {
              f && f instanceof e && !(f instanceof a) && (f = a(f));
              return e.fn.init.call(this, d, f, b)
            }, a.fn.init.prototype = a.fn;
            var b = a(c);
            return a
          },
          browser: {}
        }), e.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(a, b) {
          I["[object " + b + "]"] = b.toLowerCase()
        }), z = e.uaMatch(y), z.browser && (e.browser[z.browser] = !0, e.browser.version = z.version), e.browser.webkit && (e.browser.safari = !0), j.test(" ") && (k = /^[\s\xA0]+/, l = /[\s\xA0]+$/), h = e(c), c.addEventListener ? B = function() {
          c.removeEventListener("DOMContentLoaded", B, !1), e.ready()
        } : c.attachEvent && (B = function() {
          c.readyState === "complete" && (c.detachEvent("onreadystatechange", B), e.ready())
        });
        return e
      }(),
      g = {};
    f.Callbacks = function(a) {
      a = a ? g[a] || h(a) : {};
      var c = [],
        d = [],
        e, i, j, k, l, m = function(b) {
          var d, e, g, h, i;
          for (d = 0, e = b.length; d < e; d++) {
            g = b[d], h = f.type(g), h === "array" ? m(g) : h === "function" && (!a.unique || !o.has(g)) && c.push(g)
          }
        },
        n = function(b, f) {
          f = f || [], e = !a.memory || [b, f], i = !0, l = j || 0, j = 0, k = c.length;
          for (; c && l < k; l++) {
            if (c[l].apply(b, f) === !1 && a.stopOnFalse) {
              e = !0;
              break
            }
          }
          i = !1, c && (a.once ? e === !0 ? o.disable() : c = [] : d && d.length && (e = d.shift(), o.fireWith(e[0], e[1])))
        },
        o = {
          add: function() {
            if (c) {
              var a = c.length;
              m(arguments), i ? k = c.length : e && e !== !0 && (j = a, n(e[0], e[1]))
            }
            return this
          },
          remove: function() {
            if (c) {
              var b = arguments,
                d = 0,
                e = b.length;
              for (; d < e; d++) {
                for (var f = 0; f < c.length; f++) {
                  if (b[d] === c[f]) {
                    i && f <= k && (k--, f <= l && l--), c.splice(f--, 1);
                    if (a.unique) {
                      break
                    }
                  }
                }
              }
            }
            return this
          },
          has: function(a) {
            if (c) {
              var b = 0,
                d = c.length;
              for (; b < d; b++) {
                if (a === c[b]) {
                  return !0
                }
              }
            }
            return !1
          },
          empty: function() {
            c = [];
            return this
          },
          disable: function() {
            c = d = e = b;
            return this
          },
          disabled: function() {
            return !c
          },
          lock: function() {
            d = b, (!e || e === !0) && o.disable();
            return this
          },
          locked: function() {
            return !d
          },
          fireWith: function(b, c) {
            d && (i ? a.once || d.push([b, c]) : (!a.once || !e) && n(b, c));
            return this
          },
          fire: function() {
            o.fireWith(this, arguments);
            return this
          },
          fired: function() {
            return !!e
          }
        };
      return o
    };
    var i = [].slice;
    f.extend({
      Deferred: function(a) {
        var b = f.Callbacks("once memory"),
          c = f.Callbacks("once memory"),
          d = f.Callbacks("memory"),
          e = "pending",
          g = {
            resolve: b,
            reject: c,
            notify: d
          },
          h = {
            done: b.add,
            fail: c.add,
            progress: d.add,
            state: function() {
              return e
            },
            isResolved: b.fired,
            isRejected: c.fired,
            then: function(a, b, c) {
              i.done(a).fail(b).progress(c);
              return this
            },
            always: function() {
              i.done.apply(i, arguments).fail.apply(i, arguments);
              return this
            },
            pipe: function(a, b, c) {
              return f.Deferred(function(d) {
                f.each({
                  done: [a, "resolve"],
                  fail: [b, "reject"],
                  progress: [c, "notify"]
                }, function(a, b) {
                  var c = b[0],
                    e = b[1],
                    g;
                  f.isFunction(c) ? i[a](function() {
                    g = c.apply(this, arguments), g && f.isFunction(g.promise) ? g.promise().then(d.resolve, d.reject, d.notify) : d[e + "With"](this === i ? d : this, [g])
                  }) : i[a](d[e])
                })
              }).promise()
            },
            promise: function(a) {
              if (a == null) {
                a = h
              } else {
                for (var b in h) {
                  a[b] = h[b]
                }
              }
              return a
            }
          },
          i = h.promise({}),
          j;
        for (j in g) {
          i[j] = g[j].fire, i[j + "With"] = g[j].fireWith
        }
        i.done(function() {
          e = "resolved"
        }, c.disable, d.lock).fail(function() {
          e = "rejected"
        }, b.disable, d.lock), a && a.call(i, i);
        return i
      },
      when: function(a) {
        function m(a) {
          return function(b) {
            e[a] = arguments.length > 1 ? i.call(arguments, 0) : b, j.notifyWith(k, e)
          }
        }

        function l(a) {
          return function(c) {
            b[a] = arguments.length > 1 ? i.call(arguments, 0) : c, --g || j.resolveWith(j, b)
          }
        }
        var b = i.call(arguments, 0),
          c = 0,
          d = b.length,
          e = Array(d),
          g = d,
          h = d,
          j = d <= 1 && a && f.isFunction(a.promise) ? a : f.Deferred(),
          k = j.promise();
        if (d > 1) {
          for (; c < d; c++) {
            b[c] && b[c].promise && f.isFunction(b[c].promise) ? b[c].promise().then(l(c), j.reject, m(c)) : --g
          }
          g || j.resolveWith(j, b)
        } else {
          j !== a && j.resolveWith(j, d ? [a] : [])
        }
        return k
      }
    }), f.support = function() {
      var b, d, e, g, h, i, j, k, l, m, n, o, p, q = c.createElement("div"),
        r = c.documentElement;
      q.setAttribute("className", "t"), q.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>", d = q.getElementsByTagName("*"), e = q.getElementsByTagName("a")[0];
      if (!d || !d.length || !e) {
        return {}
      }
      g = c.createElement("select"), h = g.appendChild(c.createElement("option")), i = q.getElementsByTagName("input")[0], b = {
        leadingWhitespace: q.firstChild.nodeType === 3,
        tbody: !q.getElementsByTagName("tbody").length,
        htmlSerialize: !!q.getElementsByTagName("link").length,
        style: /top/.test(e.getAttribute("style")),
        hrefNormalized: e.getAttribute("href") === "/a",
        opacity: /^0.55/.test(e.style.opacity),
        cssFloat: !!e.style.cssFloat,
        checkOn: i.value === "on",
        optSelected: h.selected,
        getSetAttribute: q.className !== "t",
        enctype: !!c.createElement("form").enctype,
        html5Clone: c.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>",
        submitBubbles: !0,
        changeBubbles: !0,
        focusinBubbles: !1,
        deleteExpando: !0,
        noCloneEvent: !0,
        inlineBlockNeedsLayout: !1,
        shrinkWrapBlocks: !1,
        reliableMarginRight: !0
      }, i.checked = !0, b.noCloneChecked = i.cloneNode(!0).checked, g.disabled = !0, b.optDisabled = !h.disabled;
      try {
        delete q.test
      } catch (s) {
        b.deleteExpando = !1
      }!q.addEventListener && q.attachEvent && q.fireEvent && (q.attachEvent("onclick", function() {
        b.noCloneEvent = !1
      }), q.cloneNode(!0).fireEvent("onclick")), i = c.createElement("input"), i.value = "t", i.setAttribute("type", "radio"), b.radioValue = i.value === "t", i.setAttribute("checked", "checked"), q.appendChild(i), k = c.createDocumentFragment(), k.appendChild(q.lastChild), b.checkClone = k.cloneNode(!0).cloneNode(!0).lastChild.checked, b.appendChecked = i.checked, k.removeChild(i), k.appendChild(q), q.innerHTML = "", a.getComputedStyle && (j = c.createElement("div"), j.style.width = "0", j.style.marginRight = "0", q.style.width = "2px", q.appendChild(j), b.reliableMarginRight = (parseInt((a.getComputedStyle(j, null) || {
          marginRight: 0
        }).marginRight, 10) || 0) === 0);
      if (q.attachEvent) {
        for (o in {
          submit: 1,
          change: 1,
          focusin: 1
        }) {
          n = "on" + o, p = n in q, p || (q.setAttribute(n, "return;"), p = typeof q[n] == "function"), b[o + "Bubbles"] = p
        }
      }
      k.removeChild(q), k = g = h = j = q = i = null, f(function() {
        var a, d, e, g, h, i, j, k, m, n, o, r = c.getElementsByTagName("body")[0];
        !r || (j = 1, k = "position:absolute;top:0;left:0;width:1px;height:1px;margin:0;", m = "visibility:hidden;border:0;", n = "style='" + k + "border:5px solid #000;padding:0;'", o = "<div " + n + "><div></div></div><table " + n + " cellpadding='0' cellspacing='0'><tr><td></td></tr></table>", a = c.createElement("div"), a.style.cssText = m + "width:0;height:0;position:static;top:0;margin-top:" + j + "px", r.insertBefore(a, r.firstChild), q = c.createElement("div"), a.appendChild(q), q.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>", l = q.getElementsByTagName("td"), p = l[0].offsetHeight === 0, l[0].style.display = "", l[1].style.display = "none", b.reliableHiddenOffsets = p && l[0].offsetHeight === 0, q.innerHTML = "", q.style.width = q.style.paddingLeft = "1px", f.boxModel = b.boxModel = q.offsetWidth === 2, typeof q.style.zoom != "undefined" && (q.style.display = "inline", q.style.zoom = 1, b.inlineBlockNeedsLayout = q.offsetWidth === 2, q.style.display = "", q.innerHTML = "<div style='width:4px;'></div>", b.shrinkWrapBlocks = q.offsetWidth !== 2), q.style.cssText = k + m, q.innerHTML = o, d = q.firstChild, e = d.firstChild, h = d.nextSibling.firstChild.firstChild, i = {
          doesNotAddBorder: e.offsetTop !== 5,
          doesAddBorderForTableAndCells: h.offsetTop === 5
        }, e.style.position = "fixed", e.style.top = "20px", i.fixedPosition = e.offsetTop === 20 || e.offsetTop === 15, e.style.position = e.style.top = "", d.style.overflow = "hidden", d.style.position = "relative", i.subtractsBorderForOverflowNotVisible = e.offsetTop === -5, i.doesNotIncludeMarginInBodyOffset = r.offsetTop !== j, r.removeChild(a), q = a = null, f.extend(b, i))
      });
      return b
    }();
    var j = /^(?:\{.*\}|\[.*\])$/,
      k = /([A-Z])/g;
    f.extend({
      cache: {},
      uuid: 0,
      expando: "jQuery" + (f.fn.jquery + Math.random()).replace(/\D/g, ""),
      noData: {
        embed: !0,
        object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
        applet: !0
      },
      hasData: function(a) {
        a = a.nodeType ? f.cache[a[f.expando]] : a[f.expando];
        return !!a && !m(a)
      },
      data: function(a, c, d, e) {
        if (!!f.acceptData(a)) {
          var g, h, i, j = f.expando,
            k = typeof c == "string",
            l = a.nodeType,
            m = l ? f.cache : a,
            n = l ? a[j] : a[j] && j,
            o = c === "events";
          if ((!n || !m[n] || !o && !e && !m[n].data) && k && d === b) {
            return
          }
          n || (l ? a[j] = n = ++f.uuid : n = j), m[n] || (m[n] = {}, l || (m[n].toJSON = f.noop));
          if (typeof c == "object" || typeof c == "function") {
            e ? m[n] = f.extend(m[n], c) : m[n].data = f.extend(m[n].data, c)
          }
          g = h = m[n], e || (h.data || (h.data = {}), h = h.data), d !== b && (h[f.camelCase(c)] = d);
          if (o && !h[c]) {
            return g.events
          }
          k ? (i = h[c], i == null && (i = h[f.camelCase(c)])) : i = h;
          return i
        }
      },
      removeData: function(a, b, c) {
        if (!!f.acceptData(a)) {
          var d, e, g, h = f.expando,
            i = a.nodeType,
            j = i ? f.cache : a,
            k = i ? a[h] : h;
          if (!j[k]) {
            return
          }
          if (b) {
            d = c ? j[k] : j[k].data;
            if (d) {
              f.isArray(b) || (b in d ? b = [b] : (b = f.camelCase(b), b in d ? b = [b] : b = b.split(" ")));
              for (e = 0, g = b.length; e < g; e++) {
                delete d[b[e]]
              }
              if (!(c ? m : f.isEmptyObject)(d)) {
                return
              }
            }
          }
          if (!c) {
            delete j[k].data;
            if (!m(j[k])) {
              return
            }
          }
          f.support.deleteExpando || !j.setInterval ? delete j[k] : j[k] = null, i && (f.support.deleteExpando ? delete a[h] : a.removeAttribute ? a.removeAttribute(h) : a[h] = null)
        }
      },
      _data: function(a, b, c) {
        return f.data(a, b, c, !0)
      },
      acceptData: function(a) {
        if (a.nodeName) {
          var b = f.noData[a.nodeName.toLowerCase()];
          if (b) {
            return b !== !0 && a.getAttribute("classid") === b
          }
        }
        return !0
      }
    }), f.fn.extend({
      data: function(a, c) {
        var d, e, g, h = null;
        if (typeof a == "undefined") {
          if (this.length) {
            h = f.data(this[0]);
            if (this[0].nodeType === 1 && !f._data(this[0], "parsedAttrs")) {
              e = this[0].attributes;
              for (var i = 0, j = e.length; i < j; i++) {
                g = e[i].name, g.indexOf("data-") === 0 && (g = f.camelCase(g.substring(5)), l(this[0], g, h[g]))
              }
              f._data(this[0], "parsedAttrs", !0)
            }
          }
          return h
        }
        if (typeof a == "object") {
          return this.each(function() {
            f.data(this, a)
          })
        }
        d = a.split("."), d[1] = d[1] ? "." + d[1] : "";
        if (c === b) {
          h = this.triggerHandler("getData" + d[1] + "!", [d[0]]), h === b && this.length && (h = f.data(this[0], a), h = l(this[0], a, h));
          return h === b && d[1] ? this.data(d[0]) : h
        }
        return this.each(function() {
          var b = f(this),
            e = [d[0], c];
          b.triggerHandler("setData" + d[1] + "!", e), f.data(this, a, c), b.triggerHandler("changeData" + d[1] + "!", e)
        })
      },
      removeData: function(a) {
        return this.each(function() {
          f.removeData(this, a)
        })
      }
    }), f.extend({
      _mark: function(a, b) {
        a && (b = (b || "fx") + "mark", f._data(a, b, (f._data(a, b) || 0) + 1))
      },
      _unmark: function(a, b, c) {
        a !== !0 && (c = b, b = a, a = !1);
        if (b) {
          c = c || "fx";
          var d = c + "mark",
            e = a ? 0 : (f._data(b, d) || 1) - 1;
          e ? f._data(b, d, e) : (f.removeData(b, d, !0), n(b, c, "mark"))
        }
      },
      queue: function(a, b, c) {
        var d;
        if (a) {
          b = (b || "fx") + "queue", d = f._data(a, b), c && (!d || f.isArray(c) ? d = f._data(a, b, f.makeArray(c)) : d.push(c));
          return d || []
        }
      },
      dequeue: function(a, b) {
        b = b || "fx";
        var c = f.queue(a, b),
          d = c.shift(),
          e = {};
        d === "inprogress" && (d = c.shift()), d && (b === "fx" && c.unshift("inprogress"), f._data(a, b + ".run", e), d.call(a, function() {
          f.dequeue(a, b)
        }, e)), c.length || (f.removeData(a, b + "queue " + b + ".run", !0), n(a, b, "queue"))
      }
    }), f.fn.extend({
      queue: function(a, c) {
        typeof a != "string" && (c = a, a = "fx");
        if (c === b) {
          return f.queue(this[0], a)
        }
        return this.each(function() {
          var b = f.queue(this, a, c);
          a === "fx" && b[0] !== "inprogress" && f.dequeue(this, a)
        })
      },
      dequeue: function(a) {
        return this.each(function() {
          f.dequeue(this, a)
        })
      },
      delay: function(a, b) {
        a = f.fx ? f.fx.speeds[a] || a : a, b = b || "fx";
        return this.queue(b, function(b, c) {
          var d = setTimeout(b, a);
          c.stop = function() {
            clearTimeout(d)
          }
        })
      },
      clearQueue: function(a) {
        return this.queue(a || "fx", [])
      },
      promise: function(a, c) {
        function m() {
          --h || d.resolveWith(e, [e])
        }
        typeof a != "string" && (c = a, a = b), a = a || "fx";
        var d = f.Deferred(),
          e = this,
          g = e.length,
          h = 1,
          i = a + "defer",
          j = a + "queue",
          k = a + "mark",
          l;
        while (g--) {
          if (l = f.data(e[g], i, b, !0) || (f.data(e[g], j, b, !0) || f.data(e[g], k, b, !0)) && f.data(e[g], i, f.Callbacks("once memory"), !0)) {
            h++, l.add(m)
          }
        }
        m();
        return d.promise()
      }
    });
    var o = /[\n\t\r]/g,
      p = /\s+/,
      q = /\r/g,
      r = /^(?:button|input)$/i,
      s = /^(?:button|input|object|select|textarea)$/i,
      t = /^a(?:rea)?$/i,
      u = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
      v = f.support.getSetAttribute,
      w, x, y;
    f.fn.extend({
      attr: function(a, b) {
        return f.access(this, a, b, !0, f.attr)
      },
      removeAttr: function(a) {
        return this.each(function() {
          f.removeAttr(this, a)
        })
      },
      prop: function(a, b) {
        return f.access(this, a, b, !0, f.prop)
      },
      removeProp: function(a) {
        a = f.propFix[a] || a;
        return this.each(function() {
          try {
            this[a] = b, delete this[a]
          } catch (c) {}
        })
      },
      addClass: function(a) {
        var b, c, d, e, g, h, i;
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).addClass(a.call(this, b, this.className))
          })
        }
        if (a && typeof a == "string") {
          b = a.split(p);
          for (c = 0, d = this.length; c < d; c++) {
            e = this[c];
            if (e.nodeType === 1) {
              if (!e.className && b.length === 1) {
                e.className = a
              } else {
                g = " " + e.className + " ";
                for (h = 0, i = b.length; h < i; h++) {
                  ~g.indexOf(" " + b[h] + " ") || (g += b[h] + " ")
                }
                e.className = f.trim(g)
              }
            }
          }
        }
        return this
      },
      removeClass: function(a) {
        var c, d, e, g, h, i, j;
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).removeClass(a.call(this, b, this.className))
          })
        }
        if (a && typeof a == "string" || a === b) {
          c = (a || "").split(p);
          for (d = 0, e = this.length; d < e; d++) {
            g = this[d];
            if (g.nodeType === 1 && g.className) {
              if (a) {
                h = (" " + g.className + " ").replace(o, " ");
                for (i = 0, j = c.length; i < j; i++) {
                  h = h.replace(" " + c[i] + " ", " ")
                }
                g.className = f.trim(h)
              } else {
                g.className = ""
              }
            }
          }
        }
        return this
      },
      toggleClass: function(a, b) {
        var c = typeof a,
          d = typeof b == "boolean";
        if (f.isFunction(a)) {
          return this.each(function(c) {
            f(this).toggleClass(a.call(this, c, this.className, b), b)
          })
        }
        return this.each(function() {
          if (c === "string") {
            var e, g = 0,
              h = f(this),
              i = b,
              j = a.split(p);
            while (e = j[g++]) {
              i = d ? i : !h.hasClass(e), h[i ? "addClass" : "removeClass"](e)
            }
          } else {
            if (c === "undefined" || c === "boolean") {
              this.className && f._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : f._data(this, "__className__") || ""
            }
          }
        })
      },
      hasClass: function(a) {
        var b = " " + a + " ",
          c = 0,
          d = this.length;
        for (; c < d; c++) {
          if (this[c].nodeType === 1 && (" " + this[c].className + " ").replace(o, " ").indexOf(b) > -1) {
            return !0
          }
        }
        return !1
      },
      val: function(a) {
        var c, d, e, g = this[0];
        if (!!arguments.length) {
          e = f.isFunction(a);
          return this.each(function(d) {
            var g = f(this),
              h;
            if (this.nodeType === 1) {
              e ? h = a.call(this, d, g.val()) : h = a, h == null ? h = "" : typeof h == "number" ? h += "" : f.isArray(h) && (h = f.map(h, function(a) {
                return a == null ? "" : a + ""
              })), c = f.valHooks[this.nodeName.toLowerCase()] || f.valHooks[this.type];
              if (!c || !("set" in c) || c.set(this, h, "value") === b) {
                this.value = h
              }
            }
          })
        }
        if (g) {
          c = f.valHooks[g.nodeName.toLowerCase()] || f.valHooks[g.type];
          if (c && "get" in c && (d = c.get(g, "value")) !== b) {
            return d
          }
          d = g.value;
          return typeof d == "string" ? d.replace(q, "") : d == null ? "" : d
        }
      }
    }), f.extend({
      valHooks: {
        option: {
          get: function(a) {
            var b = a.attributes.value;
            return !b || b.specified ? a.value : a.text
          }
        },
        select: {
          get: function(a) {
            var b, c, d, e, g = a.selectedIndex,
              h = [],
              i = a.options,
              j = a.type === "select-one";
            if (g < 0) {
              return null
            }
            c = j ? g : 0, d = j ? g + 1 : i.length;
            for (; c < d; c++) {
              e = i[c];
              if (e.selected && (f.support.optDisabled ? !e.disabled : e.getAttribute("disabled") === null) && (!e.parentNode.disabled || !f.nodeName(e.parentNode, "optgroup"))) {
                b = f(e).val();
                if (j) {
                  return b
                }
                h.push(b)
              }
            }
            if (j && !h.length && i.length) {
              return f(i[g]).val()
            }
            return h
          },
          set: function(a, b) {
            var c = f.makeArray(b);
            f(a).find("option").each(function() {
              this.selected = f.inArray(f(this).val(), c) >= 0
            }), c.length || (a.selectedIndex = -1);
            return c
          }
        }
      },
      attrFn: {
        val: !0,
        css: !0,
        html: !0,
        text: !0,
        data: !0,
        width: !0,
        height: !0,
        offset: !0
      },
      attr: function(a, c, d, e) {
        var g, h, i, j = a.nodeType;
        if (!!a && j !== 3 && j !== 8 && j !== 2) {
          if (e && c in f.attrFn) {
            return f(a)[c](d)
          }
          if (typeof a.getAttribute == "undefined") {
            return f.prop(a, c, d)
          }
          i = j !== 1 || !f.isXMLDoc(a), i && (c = c.toLowerCase(), h = f.attrHooks[c] || (u.test(c) ? x : w));
          if (d !== b) {
            if (d === null) {
              f.removeAttr(a, c);
              return
            }
            if (h && "set" in h && i && (g = h.set(a, d, c)) !== b) {
              return g
            }
            a.setAttribute(c, "" + d);
            return d
          }
          if (h && "get" in h && i && (g = h.get(a, c)) !== null) {
            return g
          }
          g = a.getAttribute(c);
          return g === null ? b : g
        }
      },
      removeAttr: function(a, b) {
        var c, d, e, g, h = 0;
        if (b && a.nodeType === 1) {
          d = b.toLowerCase().split(p), g = d.length;
          for (; h < g; h++) {
            e = d[h], e && (c = f.propFix[e] || e, f.attr(a, e, ""), a.removeAttribute(v ? e : c), u.test(e) && c in a && (a[c] = !1))
          }
        }
      },
      attrHooks: {
        type: {
          set: function(a, b) {
            if (r.test(a.nodeName) && a.parentNode) {
              f.error("type property can't be changed")
            } else {
              if (!f.support.radioValue && b === "radio" && f.nodeName(a, "input")) {
                var c = a.value;
                a.setAttribute("type", b), c && (a.value = c);
                return b
              }
            }
          }
        },
        value: {
          get: function(a, b) {
            if (w && f.nodeName(a, "button")) {
              return w.get(a, b)
            }
            return b in a ? a.value : null
          },
          set: function(a, b, c) {
            if (w && f.nodeName(a, "button")) {
              return w.set(a, b, c)
            }
            a.value = b
          }
        }
      },
      propFix: {
        tabindex: "tabIndex",
        readonly: "readOnly",
        "for": "htmlFor",
        "class": "className",
        maxlength: "maxLength",
        cellspacing: "cellSpacing",
        cellpadding: "cellPadding",
        rowspan: "rowSpan",
        colspan: "colSpan",
        usemap: "useMap",
        frameborder: "frameBorder",
        contenteditable: "contentEditable"
      },
      prop: function(a, c, d) {
        var e, g, h, i = a.nodeType;
        if (!!a && i !== 3 && i !== 8 && i !== 2) {
          h = i !== 1 || !f.isXMLDoc(a), h && (c = f.propFix[c] || c, g = f.propHooks[c]);
          return d !== b ? g && "set" in g && (e = g.set(a, d, c)) !== b ? e : a[c] = d : g && "get" in g && (e = g.get(a, c)) !== null ? e : a[c]
        }
      },
      propHooks: {
        tabIndex: {
          get: function(a) {
            var c = a.getAttributeNode("tabindex");
            return c && c.specified ? parseInt(c.value, 10) : s.test(a.nodeName) || t.test(a.nodeName) && a.href ? 0 : b
          }
        }
      }
    }), f.attrHooks.tabindex = f.propHooks.tabIndex, x = {
      get: function(a, c) {
        var d, e = f.prop(a, c);
        return e === !0 || typeof e != "boolean" && (d = a.getAttributeNode(c)) && d.nodeValue !== !1 ? c.toLowerCase() : b
      },
      set: function(a, b, c) {
        var d;
        b === !1 ? f.removeAttr(a, c) : (d = f.propFix[c] || c, d in a && (a[d] = !0), a.setAttribute(c, c.toLowerCase()));
        return c
      }
    }, v || (y = {
      name: !0,
      id: !0
    }, w = f.valHooks.button = {
      get: function(a, c) {
        var d;
        d = a.getAttributeNode(c);
        return d && (y[c] ? d.nodeValue !== "" : d.specified) ? d.nodeValue : b
      },
      set: function(a, b, d) {
        var e = a.getAttributeNode(d);
        e || (e = c.createAttribute(d), a.setAttributeNode(e));
        return e.nodeValue = b + ""
      }
    }, f.attrHooks.tabindex.set = w.set, f.each(["width", "height"], function(a, b) {
      f.attrHooks[b] = f.extend(f.attrHooks[b], {
        set: function(a, c) {
          if (c === "") {
            a.setAttribute(b, "auto");
            return c
          }
        }
      })
    }), f.attrHooks.contenteditable = {
      get: w.get,
      set: function(a, b, c) {
        b === "" && (b = "false"), w.set(a, b, c)
      }
    }), f.support.hrefNormalized || f.each(["href", "src", "width", "height"], function(a, c) {
      f.attrHooks[c] = f.extend(f.attrHooks[c], {
        get: function(a) {
          var d = a.getAttribute(c, 2);
          return d === null ? b : d
        }
      })
    }), f.support.style || (f.attrHooks.style = {
      get: function(a) {
        return a.style.cssText.toLowerCase() || b
      },
      set: function(a, b) {
        return a.style.cssText = "" + b
      }
    }), f.support.optSelected || (f.propHooks.selected = f.extend(f.propHooks.selected, {
      get: function(a) {
        var b = a.parentNode;
        b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);
        return null
      }
    })), f.support.enctype || (f.propFix.enctype = "encoding"), f.support.checkOn || f.each(["radio", "checkbox"], function() {
      f.valHooks[this] = {
        get: function(a) {
          return a.getAttribute("value") === null ? "on" : a.value
        }
      }
    }), f.each(["radio", "checkbox"], function() {
      f.valHooks[this] = f.extend(f.valHooks[this], {
        set: function(a, b) {
          if (f.isArray(b)) {
            return a.checked = f.inArray(f(a).val(), b) >= 0
          }
        }
      })
    });
    var z = /^(?:textarea|input|select)$/i,
      A = /^([^\.]*)?(?:\.(.+))?$/,
      B = /\bhover(\.\S+)?\b/,
      C = /^key/,
      D = /^(?:mouse|contextmenu)|click/,
      E = /^(?:focusinfocus|focusoutblur)$/,
      F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
      G = function(a) {
        var b = F.exec(a);
        b && (b[1] = (b[1] || "").toLowerCase(), b[3] = b[3] && new RegExp("(?:^|\\s)" + b[3] + "(?:\\s|$)"));
        return b
      },
      H = function(a, b) {
        var c = a.attributes || {};
        return (!b[1] || a.nodeName.toLowerCase() === b[1]) && (!b[2] || (c.id || {}).value === b[2]) && (!b[3] || b[3].test((c["class"] || {}).value))
      },
      I = function(a) {
        return f.event.special.hover ? a : a.replace(B, "mouseenter$1 mouseleave$1")
      };
    f.event = {
      add: function(a, c, d, e, g) {
        var h, i, j, k, l, m, n, o, p, q, r, s;
        if (!(a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(h = f._data(a)))) {
          d.handler && (p = d, d = p.handler), d.guid || (d.guid = f.guid++), j = h.events, j || (h.events = j = {}), i = h.handle, i || (h.handle = i = function(a) {
            return typeof f != "undefined" && (!a || f.event.triggered !== a.type) ? f.event.dispatch.apply(i.elem, arguments) : b
          }, i.elem = a), c = f.trim(I(c)).split(" ");
          for (k = 0; k < c.length; k++) {
            l = A.exec(c[k]) || [], m = l[1], n = (l[2] || "").split(".").sort(), s = f.event.special[m] || {}, m = (g ? s.delegateType : s.bindType) || m, s = f.event.special[m] || {}, o = f.extend({
              type: m,
              origType: l[1],
              data: e,
              handler: d,
              guid: d.guid,
              selector: g,
              quick: G(g),
              namespace: n.join(".")
            }, p), r = j[m];
            if (!r) {
              r = j[m] = [], r.delegateCount = 0;
              if (!s.setup || s.setup.call(a, e, n, i) === !1) {
                a.addEventListener ? a.addEventListener(m, i, !1) : a.attachEvent && a.attachEvent("on" + m, i)
              }
            }
            s.add && (s.add.call(a, o), o.handler.guid || (o.handler.guid = d.guid)), g ? r.splice(r.delegateCount++, 0, o) : r.push(o), f.event.global[m] = !0
          }
          a = null
        }
      },
      global: {},
      remove: function(a, b, c, d, e) {
        var g = f.hasData(a) && f._data(a),
          h, i, j, k, l, m, n, o, p, q, r, s;
        if (!!g && !!(o = g.events)) {
          b = f.trim(I(b || "")).split(" ");
          for (h = 0; h < b.length; h++) {
            i = A.exec(b[h]) || [], j = k = i[1], l = i[2];
            if (!j) {
              for (j in o) {
                f.event.remove(a, j + b[h], c, d, !0)
              }
              continue
            }
            p = f.event.special[j] || {}, j = (d ? p.delegateType : p.bindType) || j, r = o[j] || [], m = r.length, l = l ? new RegExp("(^|\\.)" + l.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
            for (n = 0; n < r.length; n++) {
              s = r[n], (e || k === s.origType) && (!c || c.guid === s.guid) && (!l || l.test(s.namespace)) && (!d || d === s.selector || d === "**" && s.selector) && (r.splice(n--, 1), s.selector && r.delegateCount--, p.remove && p.remove.call(a, s))
            }
            r.length === 0 && m !== r.length && ((!p.teardown || p.teardown.call(a, l) === !1) && f.removeEvent(a, j, g.handle), delete o[j])
          }
          f.isEmptyObject(o) && (q = g.handle, q && (q.elem = null), f.removeData(a, ["events", "handle"], !0))
        }
      },
      customEvent: {
        getData: !0,
        setData: !0,
        changeData: !0
      },
      trigger: function(c, d, e, g) {
        if (!e || e.nodeType !== 3 && e.nodeType !== 8) {
          var h = c.type || c,
            i = [],
            j, k, l, m, n, o, p, q, r, s;
          if (E.test(h + f.event.triggered)) {
            return
          }
          h.indexOf("!") >= 0 && (h = h.slice(0, -1), k = !0), h.indexOf(".") >= 0 && (i = h.split("."), h = i.shift(), i.sort());
          if ((!e || f.event.customEvent[h]) && !f.event.global[h]) {
            return
          }
          c = typeof c == "object" ? c[f.expando] ? c : new f.Event(h, c) : new f.Event(h), c.type = h, c.isTrigger = !0, c.exclusive = k, c.namespace = i.join("."), c.namespace_re = c.namespace ? new RegExp("(^|\\.)" + i.join("\\.(?:.*\\.)?") + "(\\.|$)") : null, o = h.indexOf(":") < 0 ? "on" + h : "";
          if (!e) {
            j = f.cache;
            for (l in j) {
              j[l].events && j[l].events[h] && f.event.trigger(c, d, j[l].handle.elem, !0)
            }
            return
          }
          c.result = b, c.target || (c.target = e), d = d != null ? f.makeArray(d) : [], d.unshift(c), p = f.event.special[h] || {};
          if (p.trigger && p.trigger.apply(e, d) === !1) {
            return
          }
          r = [
            [e, p.bindType || h]
          ];
          if (!g && !p.noBubble && !f.isWindow(e)) {
            s = p.delegateType || h, m = E.test(s + h) ? e : e.parentNode, n = null;
            for (; m; m = m.parentNode) {
              r.push([m, s]), n = m
            }
            n && n === e.ownerDocument && r.push([n.defaultView || n.parentWindow || a, s])
          }
          for (l = 0; l < r.length && !c.isPropagationStopped(); l++) {
            m = r[l][0], c.type = r[l][1], q = (f._data(m, "events") || {})[c.type] && f._data(m, "handle"), q && q.apply(m, d), q = o && m[o], q && f.acceptData(m) && q.apply(m, d) === !1 && c.preventDefault()
          }
          c.type = h, !g && !c.isDefaultPrevented() && (!p._default || p._default.apply(e.ownerDocument, d) === !1) && (h !== "click" || !f.nodeName(e, "a")) && f.acceptData(e) && o && e[h] && (h !== "focus" && h !== "blur" || c.target.offsetWidth !== 0) && !f.isWindow(e) && (n = e[o], n && (e[o] = null), f.event.triggered = h, e[h](), f.event.triggered = b, n && (e[o] = n));
          return c.result
        }
      },
      dispatch: function(c) {
        c = f.event.fix(c || a.event);
        var d = (f._data(this, "events") || {})[c.type] || [],
          e = d.delegateCount,
          g = [].slice.call(arguments, 0),
          h = !c.exclusive && !c.namespace,
          i = [],
          j, k, l, m, n, o, p, q, r, s, t;
        g[0] = c, c.delegateTarget = this;
        if (e && !c.target.disabled && (!c.button || c.type !== "click")) {
          m = f(this), m.context = this.ownerDocument || this;
          for (l = c.target; l != this; l = l.parentNode || this) {
            o = {}, q = [], m[0] = l;
            for (j = 0; j < e; j++) {
              r = d[j], s = r.selector, o[s] === b && (o[s] = r.quick ? H(l, r.quick) : m.is(s)), o[s] && q.push(r)
            }
            q.length && i.push({
              elem: l,
              matches: q
            })
          }
        }
        d.length > e && i.push({
          elem: this,
          matches: d.slice(e)
        });
        for (j = 0; j < i.length && !c.isPropagationStopped(); j++) {
          p = i[j], c.currentTarget = p.elem;
          for (k = 0; k < p.matches.length && !c.isImmediatePropagationStopped(); k++) {
            r = p.matches[k];
            if (h || !c.namespace && !r.namespace || c.namespace_re && c.namespace_re.test(r.namespace)) {
              c.data = r.data, c.handleObj = r, n = ((f.event.special[r.origType] || {}).handle || r.handler).apply(p.elem, g), n !== b && (c.result = n, n === !1 && (c.preventDefault(), c.stopPropagation()))
            }
          }
        }
        return c.result
      },
      props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
      fixHooks: {},
      keyHooks: {
        props: "char charCode key keyCode".split(" "),
        filter: function(a, b) {
          a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode);
          return a
        }
      },
      mouseHooks: {
        props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
        filter: function(a, d) {
          var e, f, g, h = d.button,
            i = d.fromElement;
          a.pageX == null && d.clientX != null && (e = a.target.ownerDocument || c, f = e.documentElement, g = e.body, a.pageX = d.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0), a.pageY = d.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0)), !a.relatedTarget && i && (a.relatedTarget = i === a.target ? d.toElement : i), !a.which && h !== b && (a.which = h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0);
          return a
        }
      },
      fix: function(a) {
        if (a[f.expando]) {
          return a
        }
        var d, e, g = a,
          h = f.event.fixHooks[a.type] || {},
          i = h.props ? this.props.concat(h.props) : this.props;
        a = f.Event(g);
        for (d = i.length; d;) {
          e = i[--d], a[e] = g[e]
        }
        a.target || (a.target = g.srcElement || c), a.target.nodeType === 3 && (a.target = a.target.parentNode), a.metaKey === b && (a.metaKey = a.ctrlKey);
        return h.filter ? h.filter(a, g) : a
      },
      special: {
        ready: {
          setup: f.bindReady
        },
        load: {
          noBubble: !0
        },
        focus: {
          delegateType: "focusin"
        },
        blur: {
          delegateType: "focusout"
        },
        beforeunload: {
          setup: function(a, b, c) {
            f.isWindow(this) && (this.onbeforeunload = c)
          },
          teardown: function(a, b) {
            this.onbeforeunload === b && (this.onbeforeunload = null)
          }
        }
      },
      simulate: function(a, b, c, d) {
        var e = f.extend(new f.Event, c, {
          type: a,
          isSimulated: !0,
          originalEvent: {}
        });
        d ? f.event.trigger(e, null, b) : f.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault()
      }
    }, f.event.handle = f.event.dispatch, f.removeEvent = c.removeEventListener ? function(a, b, c) {
      a.removeEventListener && a.removeEventListener(b, c, !1)
    } : function(a, b, c) {
      a.detachEvent && a.detachEvent("on" + b, c)
    }, f.Event = function(a, b) {
      if (!(this instanceof f.Event)) {
        return new f.Event(a, b)
      }
      a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? K : J) : this.type = a, b && f.extend(this, b), this.timeStamp = a && a.timeStamp || f.now(), this[f.expando] = !0
    }, f.Event.prototype = {
      preventDefault: function() {
        this.isDefaultPrevented = K;
        var a = this.originalEvent;
        !a || (a.preventDefault ? a.preventDefault() : a.returnValue = !1)
      },
      stopPropagation: function() {
        this.isPropagationStopped = K;
        var a = this.originalEvent;
        !a || (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0)
      },
      stopImmediatePropagation: function() {
        this.isImmediatePropagationStopped = K, this.stopPropagation()
      },
      isDefaultPrevented: J,
      isPropagationStopped: J,
      isImmediatePropagationStopped: J
    }, f.each({
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    }, function(a, b) {
      f.event.special[a] = {
        delegateType: b,
        bindType: b,
        handle: function(a) {
          var c = this,
            d = a.relatedTarget,
            e = a.handleObj,
            g = e.selector,
            h;
          if (!d || d !== c && !f.contains(c, d)) {
            a.type = e.origType, h = e.handler.apply(this, arguments), a.type = b
          }
          return h
        }
      }
    }), f.support.submitBubbles || (f.event.special.submit = {
      setup: function() {
        if (f.nodeName(this, "form")) {
          return !1
        }
        f.event.add(this, "click._submit keypress._submit", function(a) {
          var c = a.target,
            d = f.nodeName(c, "input") || f.nodeName(c, "button") ? c.form : b;
          d && !d._submit_attached && (f.event.add(d, "submit._submit", function(a) {
            this.parentNode && !a.isTrigger && f.event.simulate("submit", this.parentNode, a, !0)
          }), d._submit_attached = !0)
        })
      },
      teardown: function() {
        if (f.nodeName(this, "form")) {
          return !1
        }
        f.event.remove(this, "._submit")
      }
    }), f.support.changeBubbles || (f.event.special.change = {
      setup: function() {
        if (z.test(this.nodeName)) {
          if (this.type === "checkbox" || this.type === "radio") {
            f.event.add(this, "propertychange._change", function(a) {
              a.originalEvent.propertyName === "checked" && (this._just_changed = !0)
            }), f.event.add(this, "click._change", function(a) {
              this._just_changed && !a.isTrigger && (this._just_changed = !1, f.event.simulate("change", this, a, !0))
            })
          }
          return !1
        }
        f.event.add(this, "beforeactivate._change", function(a) {
          var b = a.target;
          z.test(b.nodeName) && !b._change_attached && (f.event.add(b, "change._change", function(a) {
            this.parentNode && !a.isSimulated && !a.isTrigger && f.event.simulate("change", this.parentNode, a, !0)
          }), b._change_attached = !0)
        })
      },
      handle: function(a) {
        var b = a.target;
        if (this !== b || a.isSimulated || a.isTrigger || b.type !== "radio" && b.type !== "checkbox") {
          return a.handleObj.handler.apply(this, arguments)
        }
      },
      teardown: function() {
        f.event.remove(this, "._change");
        return z.test(this.nodeName)
      }
    }), f.support.focusinBubbles || f.each({
      focus: "focusin",
      blur: "focusout"
    }, function(a, b) {
      var d = 0,
        e = function(a) {
          f.event.simulate(b, a.target, f.event.fix(a), !0)
        };
      f.event.special[b] = {
        setup: function() {
          d++ === 0 && c.addEventListener(a, e, !0)
        },
        teardown: function() {
          --d === 0 && c.removeEventListener(a, e, !0)
        }
      }
    }), f.fn.extend({
      on: function(a, c, d, e, g) {
        var h, i;
        if (typeof a == "object") {
          typeof c != "string" && (d = c, c = b);
          for (i in a) {
            this.on(i, c, d, a[i], g)
          }
          return this
        }
        d == null && e == null ? (e = c, d = c = b) : e == null && (typeof c == "string" ? (e = d, d = b) : (e = d, d = c, c = b));
        if (e === !1) {
          e = J
        } else {
          if (!e) {
            return this
          }
        }
        g === 1 && (h = e, e = function(a) {
          f().off(a);
          return h.apply(this, arguments)
        }, e.guid = h.guid || (h.guid = f.guid++));
        return this.each(function() {
          f.event.add(this, a, e, d, c)
        })
      },
      one: function(a, b, c, d) {
        return this.on.call(this, a, b, c, d, 1)
      },
      off: function(a, c, d) {
        if (a && a.preventDefault && a.handleObj) {
          var e = a.handleObj;
          f(a.delegateTarget).off(e.namespace ? e.type + "." + e.namespace : e.type, e.selector, e.handler);
          return this
        }
        if (typeof a == "object") {
          for (var g in a) {
            this.off(g, c, a[g])
          }
          return this
        }
        if (c === !1 || typeof c == "function") {
          d = c, c = b
        }
        d === !1 && (d = J);
        return this.each(function() {
          f.event.remove(this, a, d, c)
        })
      },
      bind: function(a, b, c) {
        return this.on(a, null, b, c)
      },
      unbind: function(a, b) {
        return this.off(a, null, b)
      },
      live: function(a, b, c) {
        f(this.context).on(a, this.selector, b, c);
        return this
      },
      die: function(a, b) {
        f(this.context).off(a, this.selector || "**", b);
        return this
      },
      delegate: function(a, b, c, d) {
        return this.on(b, a, c, d)
      },
      undelegate: function(a, b, c) {
        return arguments.length == 1 ? this.off(a, "**") : this.off(b, a, c)
      },
      trigger: function(a, b) {
        return this.each(function() {
          f.event.trigger(a, b, this)
        })
      },
      triggerHandler: function(a, b) {
        if (this[0]) {
          return f.event.trigger(a, b, this[0], !0)
        }
      },
      toggle: function(a) {
        var b = arguments,
          c = a.guid || f.guid++,
          d = 0,
          e = function(c) {
            var e = (f._data(this, "lastToggle" + a.guid) || 0) % d;
            f._data(this, "lastToggle" + a.guid, e + 1), c.preventDefault();
            return b[e].apply(this, arguments) || !1
          };
        e.guid = c;
        while (d < b.length) {
          b[d++].guid = c
        }
        return this.click(e)
      },
      hover: function(a, b) {
        return this.mouseenter(a).mouseleave(b || a)
      }
    }), f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
      f.fn[b] = function(a, c) {
        c == null && (c = a, a = null);
        return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
      }, f.attrFn && (f.attrFn[b] = !0), C.test(b) && (f.event.fixHooks[b] = f.event.keyHooks), D.test(b) && (f.event.fixHooks[b] = f.event.mouseHooks)
    }),
      function() {
        function x(a, b, c, e, f, g) {
          for (var h = 0, i = e.length; h < i; h++) {
            var j = e[h];
            if (j) {
              var k = !1;
              j = j[a];
              while (j) {
                if (j[d] === c) {
                  k = e[j.sizset];
                  break
                }
                if (j.nodeType === 1) {
                  g || (j[d] = c, j.sizset = h);
                  if (typeof b != "string") {
                    if (j === b) {
                      k = !0;
                      break
                    }
                  } else {
                    if (m.filter(b, [j]).length > 0) {
                      k = j;
                      break
                    }
                  }
                }
                j = j[a]
              }
              e[h] = k
            }
          }
        }

        function w(a, b, c, e, f, g) {
          for (var h = 0, i = e.length; h < i; h++) {
            var j = e[h];
            if (j) {
              var k = !1;
              j = j[a];
              while (j) {
                if (j[d] === c) {
                  k = e[j.sizset];
                  break
                }
                j.nodeType === 1 && !g && (j[d] = c, j.sizset = h);
                if (j.nodeName.toLowerCase() === b) {
                  k = j;
                  break
                }
                j = j[a]
              }
              e[h] = k
            }
          }
        }
        var a = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
          d = "sizcache" + (Math.random() + "").replace(".", ""),
          e = 0,
          g = Object.prototype.toString,
          h = !1,
          i = !0,
          j = /\\/g,
          k = /\r\n/g,
          l = /\W/;
        [0, 0].sort(function() {
          i = !1;
          return 0
        });
        var m = function(b, d, e, f) {
          e = e || [], d = d || c;
          var h = d;
          if (d.nodeType !== 1 && d.nodeType !== 9) {
            return []
          }
          if (!b || typeof b != "string") {
            return e
          }
          var i, j, k, l, n, q, r, t, u = !0,
            v = m.isXML(d),
            w = [],
            x = b;
          do {
            a.exec(""), i = a.exec(x);
            if (i) {
              x = i[3], w.push(i[1]);
              if (i[2]) {
                l = i[3];
                break
              }
            }
          } while (i);
          if (w.length > 1 && p.exec(b)) {
            if (w.length === 2 && o.relative[w[0]]) {
              j = y(w[0] + w[1], d, f)
            } else {
              j = o.relative[w[0]] ? [d] : m(w.shift(), d);
              while (w.length) {
                b = w.shift(), o.relative[b] && (b += w.shift()), j = y(b, j, f)
              }
            }
          } else {
            !f && w.length > 1 && d.nodeType === 9 && !v && o.match.ID.test(w[0]) && !o.match.ID.test(w[w.length - 1]) && (n = m.find(w.shift(), d, v), d = n.expr ? m.filter(n.expr, n.set)[0] : n.set[0]);
            if (d) {
              n = f ? {
                expr: w.pop(),
                set: s(f)
              } : m.find(w.pop(), w.length === 1 && (w[0] === "~" || w[0] === "+") && d.parentNode ? d.parentNode : d, v), j = n.expr ? m.filter(n.expr, n.set) : n.set, w.length > 0 ? k = s(j) : u = !1;
              while (w.length) {
                q = w.pop(), r = q, o.relative[q] ? r = w.pop() : q = "", r == null && (r = d), o.relative[q](k, r, v)
              }
            } else {
              k = w = []
            }
          }
          k || (k = j), k || m.error(q || b);
          if (g.call(k) === "[object Array]") {
            if (!u) {
              e.push.apply(e, k)
            } else {
              if (d && d.nodeType === 1) {
                for (t = 0; k[t] != null; t++) {
                  k[t] && (k[t] === !0 || k[t].nodeType === 1 && m.contains(d, k[t])) && e.push(j[t])
                }
              } else {
                for (t = 0; k[t] != null; t++) {
                  k[t] && k[t].nodeType === 1 && e.push(j[t])
                }
              }
            }
          } else {
            s(k, e)
          }
          l && (m(l, h, e, f), m.uniqueSort(e));
          return e
        };
        m.uniqueSort = function(a) {
          if (u) {
            h = i, a.sort(u);
            if (h) {
              for (var b = 1; b < a.length; b++) {
                a[b] === a[b - 1] && a.splice(b--, 1)
              }
            }
          }
          return a
        }, m.matches = function(a, b) {
          return m(a, null, null, b)
        }, m.matchesSelector = function(a, b) {
          return m(b, null, null, [a]).length > 0
        }, m.find = function(a, b, c) {
          var d, e, f, g, h, i;
          if (!a) {
            return []
          }
          for (e = 0, f = o.order.length; e < f; e++) {
            h = o.order[e];
            if (g = o.leftMatch[h].exec(a)) {
              i = g[1], g.splice(1, 1);
              if (i.substr(i.length - 1) !== "\\") {
                g[1] = (g[1] || "").replace(j, ""), d = o.find[h](g, b, c);
                if (d != null) {
                  a = a.replace(o.match[h], "");
                  break
                }
              }
            }
          }
          d || (d = typeof b.getElementsByTagName != "undefined" ? b.getElementsByTagName("*") : []);
          return {
            set: d,
            expr: a
          }
        }, m.filter = function(a, c, d, e) {
          var f, g, h, i, j, k, l, n, p, q = a,
            r = [],
            s = c,
            t = c && c[0] && m.isXML(c[0]);
          while (a && c.length) {
            for (h in o.filter) {
              if ((f = o.leftMatch[h].exec(a)) != null && f[2]) {
                k = o.filter[h], l = f[1], g = !1, f.splice(1, 1);
                if (l.substr(l.length - 1) === "\\") {
                  continue
                }
                s === r && (r = []);
                if (o.preFilter[h]) {
                  f = o.preFilter[h](f, s, d, r, e, t);
                  if (!f) {
                    g = i = !0
                  } else {
                    if (f === !0) {
                      continue
                    }
                  }
                }
                if (f) {
                  for (n = 0;
                       (j = s[n]) != null; n++) {
                    j && (i = k(j, f, n, s), p = e ^ i, d && i != null ? p ? g = !0 : s[n] = !1 : p && (r.push(j), g = !0))
                  }
                }
                if (i !== b) {
                  d || (s = r), a = a.replace(o.match[h], "");
                  if (!g) {
                    return []
                  }
                  break
                }
              }
            }
            if (a === q) {
              if (g == null) {
                m.error(a)
              } else {
                break
              }
            }
            q = a
          }
          return s
        }, m.error = function(a) {
          throw new Error("Syntax error, unrecognized expression: " + a)
        };
        var n = m.getText = function(a) {
            var b, c, d = a.nodeType,
              e = "";
            if (d) {
              if (d === 1 || d === 9) {
                if (typeof a.textContent == "string") {
                  return a.textContent
                }
                if (typeof a.innerText == "string") {
                  return a.innerText.replace(k, "")
                }
                for (a = a.firstChild; a; a = a.nextSibling) {
                  e += n(a)
                }
              } else {
                if (d === 3 || d === 4) {
                  return a.nodeValue
                }
              }
            } else {
              for (b = 0; c = a[b]; b++) {
                c.nodeType !== 8 && (e += n(c))
              }
            }
            return e
          },
          o = m.selectors = {
            order: ["ID", "NAME", "TAG"],
            match: {
              ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
              CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
              NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
              ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
              TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
              CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
              POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
              PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
            },
            leftMatch: {},
            attrMap: {
              "class": "className",
              "for": "htmlFor"
            },
            attrHandle: {
              href: function(a) {
                return a.getAttribute("href")
              },
              type: function(a) {
                return a.getAttribute("type")
              }
            },
            relative: {
              "+": function(a, b) {
                var c = typeof b == "string",
                  d = c && !l.test(b),
                  e = c && !d;
                d && (b = b.toLowerCase());
                for (var f = 0, g = a.length, h; f < g; f++) {
                  if (h = a[f]) {
                    while ((h = h.previousSibling) && h.nodeType !== 1) {}
                    a[f] = e || h && h.nodeName.toLowerCase() === b ? h || !1 : h === b
                  }
                }
                e && m.filter(b, a, !0)
              },
              ">": function(a, b) {
                var c, d = typeof b == "string",
                  e = 0,
                  f = a.length;
                if (d && !l.test(b)) {
                  b = b.toLowerCase();
                  for (; e < f; e++) {
                    c = a[e];
                    if (c) {
                      var g = c.parentNode;
                      a[e] = g.nodeName.toLowerCase() === b ? g : !1
                    }
                  }
                } else {
                  for (; e < f; e++) {
                    c = a[e], c && (a[e] = d ? c.parentNode : c.parentNode === b)
                  }
                  d && m.filter(b, a, !0)
                }
              },
              "": function(a, b, c) {
                var d, f = e++,
                  g = x;
                typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("parentNode", b, f, a, d, c)
              },
              "~": function(a, b, c) {
                var d, f = e++,
                  g = x;
                typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("previousSibling", b, f, a, d, c)
              }
            },
            find: {
              ID: function(a, b, c) {
                if (typeof b.getElementById != "undefined" && !c) {
                  var d = b.getElementById(a[1]);
                  return d && d.parentNode ? [d] : []
                }
              },
              NAME: function(a, b) {
                if (typeof b.getElementsByName != "undefined") {
                  var c = [],
                    d = b.getElementsByName(a[1]);
                  for (var e = 0, f = d.length; e < f; e++) {
                    d[e].getAttribute("name") === a[1] && c.push(d[e])
                  }
                  return c.length === 0 ? null : c
                }
              },
              TAG: function(a, b) {
                if (typeof b.getElementsByTagName != "undefined") {
                  return b.getElementsByTagName(a[1])
                }
              }
            },
            preFilter: {
              CLASS: function(a, b, c, d, e, f) {
                a = " " + a[1].replace(j, "") + " ";
                if (f) {
                  return a
                }
                for (var g = 0, h;
                     (h = b[g]) != null; g++) {
                  h && (e ^ (h.className && (" " + h.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a) >= 0) ? c || d.push(h) : c && (b[g] = !1))
                }
                return !1
              },
              ID: function(a) {
                return a[1].replace(j, "")
              },
              TAG: function(a, b) {
                return a[1].replace(j, "").toLowerCase()
              },
              CHILD: function(a) {
                if (a[1] === "nth") {
                  a[2] || m.error(a[0]), a[2] = a[2].replace(/^\+|\s*/g, "");
                  var b = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2] === "even" && "2n" || a[2] === "odd" && "2n+1" || !/\D/.test(a[2]) && "0n+" + a[2] || a[2]);
                  a[2] = b[1] + (b[2] || 1) - 0, a[3] = b[3] - 0
                } else {
                  a[2] && m.error(a[0])
                }
                a[0] = e++;
                return a
              },
              ATTR: function(a, b, c, d, e, f) {
                var g = a[1] = a[1].replace(j, "");
                !f && o.attrMap[g] && (a[1] = o.attrMap[g]), a[4] = (a[4] || a[5] || "").replace(j, ""), a[2] === "~=" && (a[4] = " " + a[4] + " ");
                return a
              },
              PSEUDO: function(b, c, d, e, f) {
                if (b[1] === "not") {
                  if ((a.exec(b[3]) || "").length > 1 || /^\w/.test(b[3])) {
                    b[3] = m(b[3], null, null, c)
                  } else {
                    var g = m.filter(b[3], c, d, !0 ^ f);
                    d || e.push.apply(e, g);
                    return !1
                  }
                } else {
                  if (o.match.POS.test(b[0]) || o.match.CHILD.test(b[0])) {
                    return !0
                  }
                }
                return b
              },
              POS: function(a) {
                a.unshift(!0);
                return a
              }
            },
            filters: {
              enabled: function(a) {
                return a.disabled === !1 && a.type !== "hidden"
              },
              disabled: function(a) {
                return a.disabled === !0
              },
              checked: function(a) {
                return a.checked === !0
              },
              selected: function(a) {
                a.parentNode && a.parentNode.selectedIndex;
                return a.selected === !0
              },
              parent: function(a) {
                return !!a.firstChild
              },
              empty: function(a) {
                return !a.firstChild
              },
              has: function(a, b, c) {
                return !!m(c[3], a).length
              },
              header: function(a) {
                return /h\d/i.test(a.nodeName)
              },
              text: function(a) {
                var b = a.getAttribute("type"),
                  c = a.type;
                return a.nodeName.toLowerCase() === "input" && "text" === c && (b === c || b === null)
              },
              radio: function(a) {
                return a.nodeName.toLowerCase() === "input" && "radio" === a.type
              },
              checkbox: function(a) {
                return a.nodeName.toLowerCase() === "input" && "checkbox" === a.type
              },
              file: function(a) {
                return a.nodeName.toLowerCase() === "input" && "file" === a.type
              },
              password: function(a) {
                return a.nodeName.toLowerCase() === "input" && "password" === a.type
              },
              submit: function(a) {
                var b = a.nodeName.toLowerCase();
                return (b === "input" || b === "button") && "submit" === a.type
              },
              image: function(a) {
                return a.nodeName.toLowerCase() === "input" && "image" === a.type
              },
              reset: function(a) {
                var b = a.nodeName.toLowerCase();
                return (b === "input" || b === "button") && "reset" === a.type
              },
              button: function(a) {
                var b = a.nodeName.toLowerCase();
                return b === "input" && "button" === a.type || b === "button"
              },
              input: function(a) {
                return /input|select|textarea|button/i.test(a.nodeName)
              },
              focus: function(a) {
                return a === a.ownerDocument.activeElement
              }
            },
            setFilters: {
              first: function(a, b) {
                return b === 0
              },
              last: function(a, b, c, d) {
                return b === d.length - 1
              },
              even: function(a, b) {
                return b % 2 === 0
              },
              odd: function(a, b) {
                return b % 2 === 1
              },
              lt: function(a, b, c) {
                return b < c[3] - 0
              },
              gt: function(a, b, c) {
                return b > c[3] - 0
              },
              nth: function(a, b, c) {
                return c[3] - 0 === b
              },
              eq: function(a, b, c) {
                return c[3] - 0 === b
              }
            },
            filter: {
              PSEUDO: function(a, b, c, d) {
                var e = b[1],
                  f = o.filters[e];
                if (f) {
                  return f(a, c, b, d)
                }
                if (e === "contains") {
                  return (a.textContent || a.innerText || n([a]) || "").indexOf(b[3]) >= 0
                }
                if (e === "not") {
                  var g = b[3];
                  for (var h = 0, i = g.length; h < i; h++) {
                    if (g[h] === a) {
                      return !1
                    }
                  }
                  return !0
                }
                m.error(e)
              },
              CHILD: function(a, b) {
                var c, e, f, g, h, i, j, k = b[1],
                  l = a;
                switch (k) {
                  case "only":
                  case "first":
                    while (l = l.previousSibling) {
                      if (l.nodeType === 1) {
                        return !1
                      }
                    }
                    if (k === "first") {
                      return !0
                    }
                    l = a;
                  case "last":
                    while (l = l.nextSibling) {
                      if (l.nodeType === 1) {
                        return !1
                      }
                    }
                    return !0;
                  case "nth":
                    c = b[2], e = b[3];
                    if (c === 1 && e === 0) {
                      return !0
                    }
                    f = b[0], g = a.parentNode;
                    if (g && (g[d] !== f || !a.nodeIndex)) {
                      i = 0;
                      for (l = g.firstChild; l; l = l.nextSibling) {
                        l.nodeType === 1 && (l.nodeIndex = ++i)
                      }
                      g[d] = f
                    }
                    j = a.nodeIndex - e;
                    return c === 0 ? j === 0 : j % c === 0 && j / c >= 0
                }
              },
              ID: function(a, b) {
                return a.nodeType === 1 && a.getAttribute("id") === b
              },
              TAG: function(a, b) {
                return b === "*" && a.nodeType === 1 || !!a.nodeName && a.nodeName.toLowerCase() === b
              },
              CLASS: function(a, b) {
                return (" " + (a.className || a.getAttribute("class")) + " ").indexOf(b) > -1
              },
              ATTR: function(a, b) {
                var c = b[1],
                  d = m.attr ? m.attr(a, c) : o.attrHandle[c] ? o.attrHandle[c](a) : a[c] != null ? a[c] : a.getAttribute(c),
                  e = d + "",
                  f = b[2],
                  g = b[4];
                return d == null ? f === "!=" : !f && m.attr ? d != null : f === "=" ? e === g : f === "*=" ? e.indexOf(g) >= 0 : f === "~=" ? (" " + e + " ").indexOf(g) >= 0 : g ? f === "!=" ? e !== g : f === "^=" ? e.indexOf(g) === 0 : f === "$=" ? e.substr(e.length - g.length) === g : f === "|=" ? e === g || e.substr(0, g.length + 1) === g + "-" : !1 : e && d !== !1
              },
              POS: function(a, b, c, d) {
                var e = b[2],
                  f = o.setFilters[e];
                if (f) {
                  return f(a, c, b, d)
                }
              }
            }
          },
          p = o.match.POS,
          q = function(a, b) {
            return "\\" + (b - 0 + 1)
          };
        for (var r in o.match) {
          o.match[r] = new RegExp(o.match[r].source + /(?![^\[]*\])(?![^\(]*\))/.source), o.leftMatch[r] = new RegExp(/(^(?:.|\r|\n)*?)/.source + o.match[r].source.replace(/\\(\d+)/g, q))
        }
        var s = function(a, b) {
          a = Array.prototype.slice.call(a, 0);
          if (b) {
            b.push.apply(b, a);
            return b
          }
          return a
        };
        try {
          Array.prototype.slice.call(c.documentElement.childNodes, 0)[0].nodeType
        } catch (t) {
          s = function(a, b) {
            var c = 0,
              d = b || [];
            if (g.call(a) === "[object Array]") {
              Array.prototype.push.apply(d, a)
            } else {
              if (typeof a.length == "number") {
                for (var e = a.length; c < e; c++) {
                  d.push(a[c])
                }
              } else {
                for (; a[c]; c++) {
                  d.push(a[c])
                }
              }
            }
            return d
          }
        }
        var u, v;
        c.documentElement.compareDocumentPosition ? u = function(a, b) {
          if (a === b) {
            h = !0;
            return 0
          }
          if (!a.compareDocumentPosition || !b.compareDocumentPosition) {
            return a.compareDocumentPosition ? -1 : 1
          }
          return a.compareDocumentPosition(b) & 4 ? -1 : 1
        } : (u = function(a, b) {
          if (a === b) {
            h = !0;
            return 0
          }
          if (a.sourceIndex && b.sourceIndex) {
            return a.sourceIndex - b.sourceIndex
          }
          var c, d, e = [],
            f = [],
            g = a.parentNode,
            i = b.parentNode,
            j = g;
          if (g === i) {
            return v(a, b)
          }
          if (!g) {
            return -1
          }
          if (!i) {
            return 1
          }
          while (j) {
            e.unshift(j), j = j.parentNode
          }
          j = i;
          while (j) {
            f.unshift(j), j = j.parentNode
          }
          c = e.length, d = f.length;
          for (var k = 0; k < c && k < d; k++) {
            if (e[k] !== f[k]) {
              return v(e[k], f[k])
            }
          }
          return k === c ? v(a, f[k], -1) : v(e[k], b, 1)
        }, v = function(a, b, c) {
          if (a === b) {
            return c
          }
          var d = a.nextSibling;
          while (d) {
            if (d === b) {
              return -1
            }
            d = d.nextSibling
          }
          return 1
        }),
          function() {
            var a = c.createElement("div"),
              d = "script" + (new Date).getTime(),
              e = c.documentElement;
            a.innerHTML = "<a name='" + d + "'/>", e.insertBefore(a, e.firstChild), c.getElementById(d) && (o.find.ID = function(a, c, d) {
              if (typeof c.getElementById != "undefined" && !d) {
                var e = c.getElementById(a[1]);
                return e ? e.id === a[1] || typeof e.getAttributeNode != "undefined" && e.getAttributeNode("id").nodeValue === a[1] ? [e] : b : []
              }
            }, o.filter.ID = function(a, b) {
              var c = typeof a.getAttributeNode != "undefined" && a.getAttributeNode("id");
              return a.nodeType === 1 && c && c.nodeValue === b
            }), e.removeChild(a), e = a = null
          }(),
          function() {
            var a = c.createElement("div");
            a.appendChild(c.createComment("")), a.getElementsByTagName("*").length > 0 && (o.find.TAG = function(a, b) {
              var c = b.getElementsByTagName(a[1]);
              if (a[1] === "*") {
                var d = [];
                for (var e = 0; c[e]; e++) {
                  c[e].nodeType === 1 && d.push(c[e])
                }
                c = d
              }
              return c
            }), a.innerHTML = "<a href='#'></a>", a.firstChild && typeof a.firstChild.getAttribute != "undefined" && a.firstChild.getAttribute("href") !== "#" && (o.attrHandle.href = function(a) {
              return a.getAttribute("href", 2)
            }), a = null
          }(), c.querySelectorAll && function() {
          var a = m,
            b = c.createElement("div"),
            d = "__sizzle__";
          b.innerHTML = "<p class='TEST'></p>";
          if (!b.querySelectorAll || b.querySelectorAll(".TEST").length !== 0) {
            m = function(b, e, f, g) {
              e = e || c;
              if (!g && !m.isXML(e)) {
                var h = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);
                if (h && (e.nodeType === 1 || e.nodeType === 9)) {
                  if (h[1]) {
                    return s(e.getElementsByTagName(b), f)
                  }
                  if (h[2] && o.find.CLASS && e.getElementsByClassName) {
                    return s(e.getElementsByClassName(h[2]), f)
                  }
                }
                if (e.nodeType === 9) {
                  if (b === "body" && e.body) {
                    return s([e.body], f)
                  }
                  if (h && h[3]) {
                    var i = e.getElementById(h[3]);
                    if (!i || !i.parentNode) {
                      return s([], f)
                    }
                    if (i.id === h[3]) {
                      return s([i], f)
                    }
                  }
                  try {
                    return s(e.querySelectorAll(b), f)
                  } catch (j) {}
                } else {
                  if (e.nodeType === 1 && e.nodeName.toLowerCase() !== "object") {
                    var k = e,
                      l = e.getAttribute("id"),
                      n = l || d,
                      p = e.parentNode,
                      q = /^\s*[+~]/.test(b);
                    l ? n = n.replace(/'/g, "\\$&") : e.setAttribute("id", n), q && p && (e = e.parentNode);
                    try {
                      if (!q || p) {
                        return s(e.querySelectorAll("[id='" + n + "'] " + b), f)
                      }
                    } catch (r) {} finally {
                      l || k.removeAttribute("id")
                    }
                  }
                }
              }
              return a(b, e, f, g)
            };
            for (var e in a) {
              m[e] = a[e]
            }
            b = null
          }
        }(),
          function() {
            var a = c.documentElement,
              b = a.matchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.msMatchesSelector;
            if (b) {
              var d = !b.call(c.createElement("div"), "div"),
                e = !1;
              try {
                b.call(c.documentElement, "[test!='']:sizzle")
              } catch (f) {
                e = !0
              }
              m.matchesSelector = function(a, c) {
                c = c.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                if (!m.isXML(a)) {
                  try {
                    if (e || !o.match.PSEUDO.test(c) && !/!=/.test(c)) {
                      var f = b.call(a, c);
                      if (f || !d || a.document && a.document.nodeType !== 11) {
                        return f
                      }
                    }
                  } catch (g) {}
                }
                return m(c, null, null, [a]).length > 0
              }
            }
          }(),
          function() {
            var a = c.createElement("div");
            a.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (!!a.getElementsByClassName && a.getElementsByClassName("e").length !== 0) {
              a.lastChild.className = "e";
              if (a.getElementsByClassName("e").length === 1) {
                return
              }
              o.order.splice(1, 0, "CLASS"), o.find.CLASS = function(a, b, c) {
                if (typeof b.getElementsByClassName != "undefined" && !c) {
                  return b.getElementsByClassName(a[1])
                }
              }, a = null
            }
          }(), c.documentElement.contains ? m.contains = function(a, b) {
          return a !== b && (a.contains ? a.contains(b) : !0)
        } : c.documentElement.compareDocumentPosition ? m.contains = function(a, b) {
          return !!(a.compareDocumentPosition(b) & 16)
        } : m.contains = function() {
          return !1
        }, m.isXML = function(a) {
          var b = (a ? a.ownerDocument || a : 0).documentElement;
          return b ? b.nodeName !== "HTML" : !1
        };
        var y = function(a, b, c) {
          var d, e = [],
            f = "",
            g = b.nodeType ? [b] : b;
          while (d = o.match.PSEUDO.exec(a)) {
            f += d[0], a = a.replace(o.match.PSEUDO, "")
          }
          a = o.relative[a] ? a + "*" : a;
          for (var h = 0, i = g.length; h < i; h++) {
            m(a, g[h], e, c)
          }
          return m.filter(f, e)
        };
        m.attr = f.attr, m.selectors.attrMap = {}, f.find = m, f.expr = m.selectors, f.expr[":"] = f.expr.filters, f.unique = m.uniqueSort, f.text = m.getText, f.isXMLDoc = m.isXML, f.contains = m.contains
      }();
    var L = /Until$/,
      M = /^(?:parents|prevUntil|prevAll)/,
      N = /,/,
      O = /^.[^:#\[\.,]*$/,
      P = Array.prototype.slice,
      Q = f.expr.match.POS,
      R = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
      };
    f.fn.extend({
      find: function(a) {
        var b = this,
          c, d;
        if (typeof a != "string") {
          return f(a).filter(function() {
            for (c = 0, d = b.length; c < d; c++) {
              if (f.contains(b[c], this)) {
                return !0
              }
            }
          })
        }
        var e = this.pushStack("", "find", a),
          g, h, i;
        for (c = 0, d = this.length; c < d; c++) {
          g = e.length, f.find(a, this[c], e);
          if (c > 0) {
            for (h = g; h < e.length; h++) {
              for (i = 0; i < g; i++) {
                if (e[i] === e[h]) {
                  e.splice(h--, 1);
                  break
                }
              }
            }
          }
        }
        return e
      },
      has: function(a) {
        var b = f(a);
        return this.filter(function() {
          for (var a = 0, c = b.length; a < c; a++) {
            if (f.contains(this, b[a])) {
              return !0
            }
          }
        })
      },
      not: function(a) {
        return this.pushStack(T(this, a, !1), "not", a)
      },
      filter: function(a) {
        return this.pushStack(T(this, a, !0), "filter", a)
      },
      is: function(a) {
        return !!a && (typeof a == "string" ? Q.test(a) ? f(a, this.context).index(this[0]) >= 0 : f.filter(a, this).length > 0 : this.filter(a).length > 0)
      },
      closest: function(a, b) {
        var c = [],
          d, e, g = this[0];
        if (f.isArray(a)) {
          var h = 1;
          while (g && g.ownerDocument && g !== b) {
            for (d = 0; d < a.length; d++) {
              f(g).is(a[d]) && c.push({
                selector: a[d],
                elem: g,
                level: h
              })
            }
            g = g.parentNode, h++
          }
          return c
        }
        var i = Q.test(a) || typeof a != "string" ? f(a, b || this.context) : 0;
        for (d = 0, e = this.length; d < e; d++) {
          g = this[d];
          while (g) {
            if (i ? i.index(g) > -1 : f.find.matchesSelector(g, a)) {
              c.push(g);
              break
            }
            g = g.parentNode;
            if (!g || !g.ownerDocument || g === b || g.nodeType === 11) {
              break
            }
          }
        }
        c = c.length > 1 ? f.unique(c) : c;
        return this.pushStack(c, "closest", a)
      },
      index: function(a) {
        if (!a) {
          return this[0] && this[0].parentNode ? this.prevAll().length : -1
        }
        if (typeof a == "string") {
          return f.inArray(this[0], f(a))
        }
        return f.inArray(a.jquery ? a[0] : a, this)
      },
      add: function(a, b) {
        var c = typeof a == "string" ? f(a, b) : f.makeArray(a && a.nodeType ? [a] : a),
          d = f.merge(this.get(), c);
        return this.pushStack(S(c[0]) || S(d[0]) ? d : f.unique(d))
      },
      andSelf: function() {
        return this.add(this.prevObject)
      }
    }), f.each({
      parent: function(a) {
        var b = a.parentNode;
        return b && b.nodeType !== 11 ? b : null
      },
      parents: function(a) {
        return f.dir(a, "parentNode")
      },
      parentsUntil: function(a, b, c) {
        return f.dir(a, "parentNode", c)
      },
      next: function(a) {
        return f.nth(a, 2, "nextSibling")
      },
      prev: function(a) {
        return f.nth(a, 2, "previousSibling")
      },
      nextAll: function(a) {
        return f.dir(a, "nextSibling")
      },
      prevAll: function(a) {
        return f.dir(a, "previousSibling")
      },
      nextUntil: function(a, b, c) {
        return f.dir(a, "nextSibling", c)
      },
      prevUntil: function(a, b, c) {
        return f.dir(a, "previousSibling", c)
      },
      siblings: function(a) {
        return f.sibling(a.parentNode.firstChild, a)
      },
      children: function(a) {
        return f.sibling(a.firstChild)
      },
      contents: function(a) {
        return f.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : f.makeArray(a.childNodes)
      }
    }, function(a, b) {
      f.fn[a] = function(c, d) {
        var e = f.map(this, b, c);
        L.test(a) || (d = c), d && typeof d == "string" && (e = f.filter(d, e)), e = this.length > 1 && !R[a] ? f.unique(e) : e, (this.length > 1 || N.test(d)) && M.test(a) && (e = e.reverse());
        return this.pushStack(e, a, P.call(arguments).join(","))
      }
    }), f.extend({
      filter: function(a, b, c) {
        c && (a = ":not(" + a + ")");
        return b.length === 1 ? f.find.matchesSelector(b[0], a) ? [b[0]] : [] : f.find.matches(a, b)
      },
      dir: function(a, c, d) {
        var e = [],
          g = a[c];
        while (g && g.nodeType !== 9 && (d === b || g.nodeType !== 1 || !f(g).is(d))) {
          g.nodeType === 1 && e.push(g), g = g[c]
        }
        return e
      },
      nth: function(a, b, c, d) {
        b = b || 1;
        var e = 0;
        for (; a; a = a[c]) {
          if (a.nodeType === 1 && ++e === b) {
            break
          }
        }
        return a
      },
      sibling: function(a, b) {
        var c = [];
        for (; a; a = a.nextSibling) {
          a.nodeType === 1 && a !== b && c.push(a)
        }
        return c
      }
    });
    var V = "abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
      W = / jQuery\d+="(?:\d+|null)"/g,
      X = /^\s+/,
      Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
      Z = /<([\w:]+)/,
      $ = /<tbody/i,
      _ = /<|&#?\w+;/,
      ba = /<(?:script|style)/i,
      bb = /<(?:script|object|embed|option|style)/i,
      bc = new RegExp("<(?:" + V + ")", "i"),
      bd = /checked\s*(?:[^=]|=\s*.checked.)/i,
      be = /\/(java|ecma)script/i,
      bf = /^\s*<!(?:\[CDATA\[|\-\-)/,
      bg = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        area: [1, "<map>", "</map>"],
        _default: [0, "", ""]
      },
      bh = U(c);
    bg.optgroup = bg.option, bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead, bg.th = bg.td, f.support.htmlSerialize || (bg._default = [1, "div<div>", "</div>"]), f.fn.extend({
      text: function(a) {
        if (f.isFunction(a)) {
          return this.each(function(b) {
            var c = f(this);
            c.text(a.call(this, b, c.text()))
          })
        }
        if (typeof a != "object" && a !== b) {
          return this.empty().append((this[0] && this[0].ownerDocument || c).createTextNode(a))
        }
        return f.text(this)
      },
      wrapAll: function(a) {
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).wrapAll(a.call(this, b))
          })
        }
        if (this[0]) {
          var b = f(a, this[0].ownerDocument).eq(0).clone(!0);
          this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
            var a = this;
            while (a.firstChild && a.firstChild.nodeType === 1) {
              a = a.firstChild
            }
            return a
          }).append(this)
        }
        return this
      },
      wrapInner: function(a) {
        if (f.isFunction(a)) {
          return this.each(function(b) {
            f(this).wrapInner(a.call(this, b))
          })
        }
        return this.each(function() {
          var b = f(this),
            c = b.contents();
          c.length ? c.wrapAll(a) : b.append(a)
        })
      },
      wrap: function(a) {
        var b = f.isFunction(a);
        return this.each(function(c) {
          f(this).wrapAll(b ? a.call(this, c) : a)
        })
      },
      unwrap: function() {
        return this.parent().each(function() {
          f.nodeName(this, "body") || f(this).replaceWith(this.childNodes)
        }).end()
      },
      append: function() {
        return this.domManip(arguments, !0, function(a) {
          this.nodeType === 1 && this.appendChild(a)
        })
      },
      prepend: function() {
        return this.domManip(arguments, !0, function(a) {
          this.nodeType === 1 && this.insertBefore(a, this.firstChild)
        })
      },
      before: function() {
        if (this[0] && this[0].parentNode) {
          return this.domManip(arguments, !1, function(a) {
            this.parentNode.insertBefore(a, this)
          })
        }
        if (arguments.length) {
          var a = f.clean(arguments);
          a.push.apply(a, this.toArray());
          return this.pushStack(a, "before", arguments)
        }
      },
      after: function() {
        if (this[0] && this[0].parentNode) {
          return this.domManip(arguments, !1, function(a) {
            this.parentNode.insertBefore(a, this.nextSibling)
          })
        }
        if (arguments.length) {
          var a = this.pushStack(this, "after", arguments);
          a.push.apply(a, f.clean(arguments));
          return a
        }
      },
      remove: function(a, b) {
        for (var c = 0, d;
             (d = this[c]) != null; c++) {
          if (!a || f.filter(a, [d]).length) {
            !b && d.nodeType === 1 && (f.cleanData(d.getElementsByTagName("*")), f.cleanData([d])), d.parentNode && d.parentNode.removeChild(d)
          }
        }
        return this
      },
      empty: function() {
        for (var a = 0, b;
             (b = this[a]) != null; a++) {
          b.nodeType === 1 && f.cleanData(b.getElementsByTagName("*"));
          while (b.firstChild) {
            b.removeChild(b.firstChild)
          }
        }
        return this
      },
      clone: function(a, b) {
        a = a == null ? !1 : a, b = b == null ? a : b;
        return this.map(function() {
          return f.clone(this, a, b)
        })
      },
      html: function(a) {
        if (a === b) {
          return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(W, "") : null
        }
        if (typeof a == "string" && !ba.test(a) && (f.support.leadingWhitespace || !X.test(a)) && !bg[(Z.exec(a) || ["", ""])[1].toLowerCase()]) {
          a = a.replace(Y, "<$1></$2>");
          try {
            for (var c = 0, d = this.length; c < d; c++) {
              this[c].nodeType === 1 && (f.cleanData(this[c].getElementsByTagName("*")), this[c].innerHTML = a)
            }
          } catch (e) {
            this.empty().append(a)
          }
        } else {
          f.isFunction(a) ? this.each(function(b) {
            var c = f(this);
            c.html(a.call(this, b, c.html()))
          }) : this.empty().append(a)
        }
        return this
      },
      replaceWith: function(a) {
        if (this[0] && this[0].parentNode) {
          if (f.isFunction(a)) {
            return this.each(function(b) {
              var c = f(this),
                d = c.html();
              c.replaceWith(a.call(this, b, d))
            })
          }
          typeof a != "string" && (a = f(a).detach());
          return this.each(function() {
            var b = this.nextSibling,
              c = this.parentNode;
            f(this).remove(), b ? f(b).before(a) : f(c).append(a)
          })
        }
        return this.length ? this.pushStack(f(f.isFunction(a) ? a() : a), "replaceWith", a) : this
      },
      detach: function(a) {
        return this.remove(a, !0)
      },
      domManip: function(a, c, d) {
        var e, g, h, i, j = a[0],
          k = [];
        if (!f.support.checkClone && arguments.length === 3 && typeof j == "string" && bd.test(j)) {
          return this.each(function() {
            f(this).domManip(a, c, d, !0)
          })
        }
        if (f.isFunction(j)) {
          return this.each(function(e) {
            var g = f(this);
            a[0] = j.call(this, e, c ? g.html() : b), g.domManip(a, c, d)
          })
        }
        if (this[0]) {
          i = j && j.parentNode, f.support.parentNode && i && i.nodeType === 11 && i.childNodes.length === this.length ? e = {
            fragment: i
          } : e = f.buildFragment(a, this, k), h = e.fragment, h.childNodes.length === 1 ? g = h = h.firstChild : g = h.firstChild;
          if (g) {
            c = c && f.nodeName(g, "tr");
            for (var l = 0, m = this.length, n = m - 1; l < m; l++) {
              d.call(c ? bi(this[l], g) : this[l], e.cacheable || m > 1 && l < n ? f.clone(h, !0, !0) : h)
            }
          }
          k.length && f.each(k, bp)
        }
        return this
      }
    }), f.buildFragment = function(a, b, d) {
      var e, g, h, i, j = a[0];
      b && b[0] && (i = b[0].ownerDocument || b[0]), i.createDocumentFragment || (i = c), a.length === 1 && typeof j == "string" && j.length < 512 && i === c && j.charAt(0) === "<" && !bb.test(j) && (f.support.checkClone || !bd.test(j)) && (f.support.html5Clone || !bc.test(j)) && (g = !0, h = f.fragments[j], h && h !== 1 && (e = h)), e || (e = i.createDocumentFragment(), f.clean(a, i, e, d)), g && (f.fragments[j] = h ? e : 1);
      return {
        fragment: e,
        cacheable: g
      }
    }, f.fragments = {}, f.each({
      appendTo: "append",
      prependTo: "prepend",
      insertBefore: "before",
      insertAfter: "after",
      replaceAll: "replaceWith"
    }, function(a, b) {
      f.fn[a] = function(c) {
        var d = [],
          e = f(c),
          g = this.length === 1 && this[0].parentNode;
        if (g && g.nodeType === 11 && g.childNodes.length === 1 && e.length === 1) {
          e[b](this[0]);
          return this
        }
        for (var h = 0, i = e.length; h < i; h++) {
          var j = (h > 0 ? this.clone(!0) : this).get();
          f(e[h])[b](j), d = d.concat(j)
        }
        return this.pushStack(d, a, e.selector)
      }
    }), f.extend({
      clone: function(a, b, c) {
        var d, e, g, h = f.support.html5Clone || !bc.test("<" + a.nodeName) ? a.cloneNode(!0) : bo(a);
        if ((!f.support.noCloneEvent || !f.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !f.isXMLDoc(a)) {
          bk(a, h), d = bl(a), e = bl(h);
          for (g = 0; d[g]; ++g) {
            e[g] && bk(d[g], e[g])
          }
        }
        if (b) {
          bj(a, h);
          if (c) {
            d = bl(a), e = bl(h);
            for (g = 0; d[g]; ++g) {
              bj(d[g], e[g])
            }
          }
        }
        d = e = null;
        return h
      },
      clean: function(a, b, d, e) {
        var g;
        b = b || c, typeof b.createElement == "undefined" && (b = b.ownerDocument || b[0] && b[0].ownerDocument || c);
        var h = [],
          i;
        for (var j = 0, k;
             (k = a[j]) != null; j++) {
          typeof k == "number" && (k += "");
          if (!k) {
            continue
          }
          if (typeof k == "string") {
            if (!_.test(k)) {
              k = b.createTextNode(k)
            } else {
              k = k.replace(Y, "<$1></$2>");
              var l = (Z.exec(k) || ["", ""])[1].toLowerCase(),
                m = bg[l] || bg._default,
                n = m[0],
                o = b.createElement("div");
              b === c ? bh.appendChild(o) : U(b).appendChild(o), o.innerHTML = m[1] + k + m[2];
              while (n--) {
                o = o.lastChild
              }
              if (!f.support.tbody) {
                var p = $.test(k),
                  q = l === "table" && !p ? o.firstChild && o.firstChild.childNodes : m[1] === "<table>" && !p ? o.childNodes : [];
                for (i = q.length - 1; i >= 0; --i) {
                  f.nodeName(q[i], "tbody") && !q[i].childNodes.length && q[i].parentNode.removeChild(q[i])
                }
              }!f.support.leadingWhitespace && X.test(k) && o.insertBefore(b.createTextNode(X.exec(k)[0]), o.firstChild), k = o.childNodes
            }
          }
          var r;
          if (!f.support.appendChecked) {
            if (k[0] && typeof(r = k.length) == "number") {
              for (i = 0; i < r; i++) {
                bn(k[i])
              }
            } else {
              bn(k)
            }
          }
          k.nodeType ? h.push(k) : h = f.merge(h, k)
        }
        if (d) {
          g = function(a) {
            return !a.type || be.test(a.type)
          };
          for (j = 0; h[j]; j++) {
            if (e && f.nodeName(h[j], "script") && (!h[j].type || h[j].type.toLowerCase() === "text/javascript")) {
              e.push(h[j].parentNode ? h[j].parentNode.removeChild(h[j]) : h[j])
            } else {
              if (h[j].nodeType === 1) {
                var s = f.grep(h[j].getElementsByTagName("script"), g);
                h.splice.apply(h, [j + 1, 0].concat(s))
              }
              d.appendChild(h[j])
            }
          }
        }
        return h
      },
      cleanData: function(a) {
        var b, c, d = f.cache,
          e = f.event.special,
          g = f.support.deleteExpando;
        for (var h = 0, i;
             (i = a[h]) != null; h++) {
          if (i.nodeName && f.noData[i.nodeName.toLowerCase()]) {
            continue
          }
          c = i[f.expando];
          if (c) {
            b = d[c];
            if (b && b.events) {
              for (var j in b.events) {
                e[j] ? f.event.remove(i, j) : f.removeEvent(i, j, b.handle)
              }
              b.handle && (b.handle.elem = null)
            }
            g ? delete i[f.expando] : i.removeAttribute && i.removeAttribute(f.expando), delete d[c]
          }
        }
      }
    });
    var bq = /alpha\([^)]*\)/i,
      br = /opacity=([^)]*)/,
      bs = /([A-Z]|^ms)/g,
      bt = /^-?\d+(?:px)?$/i,
      bu = /^-?\d/,
      bv = /^([\-+])=([\-+.\de]+)/,
      bw = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
      bx = ["Left", "Right"],
      by = ["Top", "Bottom"],
      bz, bA, bB;
    f.fn.css = function(a, c) {
      if (arguments.length === 2 && c === b) {
        return this
      }
      return f.access(this, a, c, !0, function(a, c, d) {
        return d !== b ? f.style(a, c, d) : f.css(a, c)
      })
    }, f.extend({
      cssHooks: {
        opacity: {
          get: function(a, b) {
            if (b) {
              var c = bz(a, "opacity", "opacity");
              return c === "" ? "1" : c
            }
            return a.style.opacity
          }
        }
      },
      cssNumber: {
        fillOpacity: !0,
        fontWeight: !0,
        lineHeight: !0,
        opacity: !0,
        orphans: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0
      },
      cssProps: {
        "float": f.support.cssFloat ? "cssFloat" : "styleFloat"
      },
      style: function(a, c, d, e) {
        if (!!a && a.nodeType !== 3 && a.nodeType !== 8 && !!a.style) {
          var g, h, i = f.camelCase(c),
            j = a.style,
            k = f.cssHooks[i];
          c = f.cssProps[i] || i;
          if (d === b) {
            if (k && "get" in k && (g = k.get(a, !1, e)) !== b) {
              return g
            }
            return j[c]
          }
          h = typeof d, h === "string" && (g = bv.exec(d)) && (d = +(g[1] + 1) * +g[2] + parseFloat(f.css(a, c)), h = "number");
          if (d == null || h === "number" && isNaN(d)) {
            return
          }
          h === "number" && !f.cssNumber[i] && (d += "px");
          if (!k || !("set" in k) || (d = k.set(a, d)) !== b) {
            try {
              j[c] = d
            } catch (l) {}
          }
        }
      },
      css: function(a, c, d) {
        var e, g;
        c = f.camelCase(c), g = f.cssHooks[c], c = f.cssProps[c] || c, c === "cssFloat" && (c = "float");
        if (g && "get" in g && (e = g.get(a, !0, d)) !== b) {
          return e
        }
        if (bz) {
          return bz(a, c)
        }
      },
      swap: function(a, b, c) {
        var d = {};
        for (var e in b) {
          d[e] = a.style[e], a.style[e] = b[e]
        }
        c.call(a);
        for (e in b) {
          a.style[e] = d[e]
        }
      }
    }), f.curCSS = f.css, f.each(["height", "width"], function(a, b) {
      f.cssHooks[b] = {
        get: function(a, c, d) {
          var e;
          if (c) {
            if (a.offsetWidth !== 0) {
              return bC(a, b, d)
            }
            f.swap(a, bw, function() {
              e = bC(a, b, d)
            });
            return e
          }
        },
        set: function(a, b) {
          if (!bt.test(b)) {
            return b
          }
          b = parseFloat(b);
          if (b >= 0) {
            return b + "px"
          }
        }
      }
    }), f.support.opacity || (f.cssHooks.opacity = {
      get: function(a, b) {
        return br.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : ""
      },
      set: function(a, b) {
        var c = a.style,
          d = a.currentStyle,
          e = f.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : "",
          g = d && d.filter || c.filter || "";
        c.zoom = 1;
        if (b >= 1 && f.trim(g.replace(bq, "")) === "") {
          c.removeAttribute("filter");
          if (d && !d.filter) {
            return
          }
        }
        c.filter = bq.test(g) ? g.replace(bq, e) : g + " " + e
      }
    }), f(function() {
      f.support.reliableMarginRight || (f.cssHooks.marginRight = {
        get: function(a, b) {
          var c;
          f.swap(a, {
            display: "inline-block"
          }, function() {
            b ? c = bz(a, "margin-right", "marginRight") : c = a.style.marginRight
          });
          return c
        }
      })
    }), c.defaultView && c.defaultView.getComputedStyle && (bA = function(a, b) {
      var c, d, e;
      b = b.replace(bs, "-$1").toLowerCase(), (d = a.ownerDocument.defaultView) && (e = d.getComputedStyle(a, null)) && (c = e.getPropertyValue(b), c === "" && !f.contains(a.ownerDocument.documentElement, a) && (c = f.style(a, b)));
      return c
    }), c.documentElement.currentStyle && (bB = function(a, b) {
      var c, d, e, f = a.currentStyle && a.currentStyle[b],
        g = a.style;
      f === null && g && (e = g[b]) && (f = e), !bt.test(f) && bu.test(f) && (c = g.left, d = a.runtimeStyle && a.runtimeStyle.left, d && (a.runtimeStyle.left = a.currentStyle.left), g.left = b === "fontSize" ? "1em" : f || 0, f = g.pixelLeft + "px", g.left = c, d && (a.runtimeStyle.left = d));
      return f === "" ? "auto" : f
    }), bz = bA || bB, f.expr && f.expr.filters && (f.expr.filters.hidden = function(a) {
      var b = a.offsetWidth,
        c = a.offsetHeight;
      return b === 0 && c === 0 || !f.support.reliableHiddenOffsets && (a.style && a.style.display || f.css(a, "display")) === "none"
    }, f.expr.filters.visible = function(a) {
      return !f.expr.filters.hidden(a)
    });
    var bD = /%20/g,
      bE = /\[\]$/,
      bF = /\r?\n/g,
      bG = /#.*$/,
      bH = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
      bI = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
      bJ = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
      bK = /^(?:GET|HEAD)$/,
      bL = /^\/\//,
      bM = /\?/,
      bN = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
      bO = /^(?:select|textarea)/i,
      bP = /\s+/,
      bQ = /([?&])_=[^&]*/,
      bR = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
      bS = f.fn.load,
      bT = {},
      bU = {},
      bV, bW, bX = ["*/"] + ["*"];
    try {
      bV = e.href
    } catch (bY) {
      bV = c.createElement("a"), bV.href = "", bV = bV.href
    }
    bW = bR.exec(bV.toLowerCase()) || [], f.fn.extend({
      load: function(a, c, d) {
        if (typeof a != "string" && bS) {
          return bS.apply(this, arguments)
        }
        if (!this.length) {
          return this
        }
        var e = a.indexOf(" ");
        if (e >= 0) {
          var g = a.slice(e, a.length);
          a = a.slice(0, e)
        }
        var h = "GET";
        c && (f.isFunction(c) ? (d = c, c = b) : typeof c == "object" && (c = f.param(c, f.ajaxSettings.traditional), h = "POST"));
        var i = this;
        f.ajax({
          url: a,
          type: h,
          dataType: "html",
          data: c,
          complete: function(a, b, c) {
            c = a.responseText, a.isResolved() && (a.done(function(a) {
              c = a
            }), i.html(g ? f("<div>").append(c.replace(bN, "")).find(g) : c)), d && i.each(d, [c, b, a])
          }
        });
        return this
      },
      serialize: function() {
        return f.param(this.serializeArray())
      },
      serializeArray: function() {
        return this.map(function() {
          return this.elements ? f.makeArray(this.elements) : this
        }).filter(function() {
          return this.name && !this.disabled && (this.checked || bO.test(this.nodeName) || bI.test(this.type))
        }).map(function(a, b) {
          var c = f(this).val();
          return c == null ? null : f.isArray(c) ? f.map(c, function(a, c) {
            return {
              name: b.name,
              value: a.replace(bF, "\r\n")
            }
          }) : {
            name: b.name,
            value: c.replace(bF, "\r\n")
          }
        }).get()
      }
    }), f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(a, b) {
      f.fn[b] = function(a) {
        return this.on(b, a)
      }
    }), f.each(["get", "post"], function(a, c) {
      f[c] = function(a, d, e, g) {
        f.isFunction(d) && (g = g || e, e = d, d = b);
        return f.ajax({
          type: c,
          url: a,
          data: d,
          success: e,
          dataType: g
        })
      }
    }), f.extend({
      getScript: function(a, c) {
        return f.get(a, b, c, "script")
      },
      getJSON: function(a, b, c) {
        return f.get(a, b, c, "json")
      },
      ajaxSetup: function(a, b) {
        b ? b_(a, f.ajaxSettings) : (b = a, a = f.ajaxSettings), b_(a, b);
        return a
      },
      ajaxSettings: {
        url: bV,
        isLocal: bJ.test(bW[1]),
        global: !0,
        type: "GET",
        contentType: "application/x-www-form-urlencoded",
        processData: !0,
        async: !0,
        accepts: {
          xml: "application/xml, text/xml",
          html: "text/html",
          text: "text/plain",
          json: "application/json, text/javascript",
          "*": bX
        },
        contents: {
          xml: /xml/,
          html: /html/,
          json: /json/
        },
        responseFields: {
          xml: "responseXML",
          text: "responseText"
        },
        converters: {
          "* text": a.String,
          "text html": !0,
          "text json": f.parseJSON,
          "text xml": f.parseXML
        },
        flatOptions: {
          context: !0,
          url: !0
        }
      },
      ajaxPrefilter: bZ(bT),
      ajaxTransport: bZ(bU),
      ajax: function(a, c) {
        function w(a, c, l, m) {
          if (s !== 2) {
            s = 2, q && clearTimeout(q), p = b, n = m || "", v.readyState = a > 0 ? 4 : 0;
            var o, r, u, w = c,
              x = l ? cb(d, v, l) : b,
              y, z;
            if (a >= 200 && a < 300 || a === 304) {
              if (d.ifModified) {
                if (y = v.getResponseHeader("Last-Modified")) {
                  f.lastModified[k] = y
                }
                if (z = v.getResponseHeader("Etag")) {
                  f.etag[k] = z
                }
              }
              if (a === 304) {
                w = "notmodified", o = !0
              } else {
                try {
                  r = cc(d, x), w = "success", o = !0
                } catch (A) {
                  w = "parsererror", u = A
                }
              }
            } else {
              u = w;
              if (!w || a) {
                w = "error", a < 0 && (a = 0)
              }
            }
            v.status = a, v.statusText = "" + (c || w), o ? h.resolveWith(e, [r, w, v]) : h.rejectWith(e, [v, w, u]), v.statusCode(j), j = b, t && g.trigger("ajax" + (o ? "Success" : "Error"), [v, d, o ? r : u]), i.fireWith(e, [v, w]), t && (g.trigger("ajaxComplete", [v, d]), --f.active || f.event.trigger("ajaxStop"))
          }
        }
        typeof a == "object" && (c = a, a = b), c = c || {};
        var d = f.ajaxSetup({}, c),
          e = d.context || d,
          g = e !== d && (e.nodeType || e instanceof f) ? f(e) : f.event,
          h = f.Deferred(),
          i = f.Callbacks("once memory"),
          j = d.statusCode || {},
          k, l = {},
          m = {},
          n, o, p, q, r, s = 0,
          t, u, v = {
            readyState: 0,
            setRequestHeader: function(a, b) {
              if (!s) {
                var c = a.toLowerCase();
                a = m[c] = m[c] || a, l[a] = b
              }
              return this
            },
            getAllResponseHeaders: function() {
              return s === 2 ? n : null
            },
            getResponseHeader: function(a) {
              var c;
              if (s === 2) {
                if (!o) {
                  o = {};
                  while (c = bH.exec(n)) {
                    o[c[1].toLowerCase()] = c[2]
                  }
                }
                c = o[a.toLowerCase()]
              }
              return c === b ? null : c
            },
            overrideMimeType: function(a) {
              s || (d.mimeType = a);
              return this
            },
            abort: function(a) {
              a = a || "abort", p && p.abort(a), w(0, a);
              return this
            }
          };
        h.promise(v), v.success = v.done, v.error = v.fail, v.complete = i.add, v.statusCode = function(a) {
          if (a) {
            var b;
            if (s < 2) {
              for (b in a) {
                j[b] = [j[b], a[b]]
              }
            } else {
              b = a[v.status], v.then(b, b)
            }
          }
          return this
        }, d.url = ((a || d.url) + "").replace(bG, "").replace(bL, bW[1] + "//"), d.dataTypes = f.trim(d.dataType || "*").toLowerCase().split(bP), d.crossDomain == null && (r = bR.exec(d.url.toLowerCase()), d.crossDomain = !(!r || r[1] == bW[1] && r[2] == bW[2] && (r[3] || (r[1] === "http:" ? 80 : 443)) == (bW[3] || (bW[1] === "http:" ? 80 : 443)))), d.data && d.processData && typeof d.data != "string" && (d.data = f.param(d.data, d.traditional)), b$(bT, d, c, v);
        if (s === 2) {
          return !1
        }
        t = d.global, d.type = d.type.toUpperCase(), d.hasContent = !bK.test(d.type), t && f.active++ === 0 && f.event.trigger("ajaxStart");
        if (!d.hasContent) {
          d.data && (d.url += (bM.test(d.url) ? "&" : "?") + d.data, delete d.data), k = d.url;
          if (d.cache === !1) {
            var x = f.now(),
              y = d.url.replace(bQ, "$1_=" + x);
            d.url = y + (y === d.url ? (bM.test(d.url) ? "&" : "?") + "_=" + x : "")
          }
        }(d.data && d.hasContent && d.contentType !== !1 || c.contentType) && v.setRequestHeader("Content-Type", d.contentType), d.ifModified && (k = k || d.url, f.lastModified[k] && v.setRequestHeader("If-Modified-Since", f.lastModified[k]), f.etag[k] && v.setRequestHeader("If-None-Match", f.etag[k])), v.setRequestHeader("Accept", d.dataTypes[0] && d.accepts[d.dataTypes[0]] ? d.accepts[d.dataTypes[0]] + (d.dataTypes[0] !== "*" ? ", " + bX + "; q=0.01" : "") : d.accepts["*"]);
        for (u in d.headers) {
          v.setRequestHeader(u, d.headers[u])
        }
        if (d.beforeSend && (d.beforeSend.call(e, v, d) === !1 || s === 2)) {
          v.abort();
          return !1
        }
        for (u in {
          success: 1,
          error: 1,
          complete: 1
        }) {
          v[u](d[u])
        }
        p = b$(bU, d, c, v);
        if (!p) {
          w(-1, "No Transport")
        } else {
          v.readyState = 1, t && g.trigger("ajaxSend", [v, d]), d.async && d.timeout > 0 && (q = setTimeout(function() {
            v.abort("timeout")
          }, d.timeout));
          try {
            s = 1, p.send(l, w)
          } catch (z) {
            if (s < 2) {
              w(-1, z)
            } else {
              throw z
            }
          }
        }
        return v
      },
      param: function(a, c) {
        var d = [],
          e = function(a, b) {
            b = f.isFunction(b) ? b() : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
          };
        c === b && (c = f.ajaxSettings.traditional);
        if (f.isArray(a) || a.jquery && !f.isPlainObject(a)) {
          f.each(a, function() {
            e(this.name, this.value)
          })
        } else {
          for (var g in a) {
            ca(g, a[g], c, e)
          }
        }
        return d.join("&").replace(bD, "+")
      }
    }), f.extend({
      active: 0,
      lastModified: {},
      etag: {}
    });
    var cd = f.now(),
      ce = /(\=)\?(&|$)|\?\?/i;
    f.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function() {
        return f.expando + "_" + cd++
      }
    }), f.ajaxPrefilter("json jsonp", function(b, c, d) {
      var e = b.contentType === "application/x-www-form-urlencoded" && typeof b.data == "string";
      if (b.dataTypes[0] === "jsonp" || b.jsonp !== !1 && (ce.test(b.url) || e && ce.test(b.data))) {
        var g, h = b.jsonpCallback = f.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback,
          i = a[h],
          j = b.url,
          k = b.data,
          l = "$1" + h + "$2";
        b.jsonp !== !1 && (j = j.replace(ce, l), b.url === j && (e && (k = k.replace(ce, l)), b.data === k && (j += (/\?/.test(j) ? "&" : "?") + b.jsonp + "=" + h))), b.url = j, b.data = k, a[h] = function(a) {
          g = [a]
        }, d.always(function() {
          a[h] = i, g && f.isFunction(i) && a[h](g[0])
        }), b.converters["script json"] = function() {
          g || f.error(h + " was not called");
          return g[0]
        }, b.dataTypes[0] = "json";
        return "script"
      }
    }), f.ajaxSetup({
      accepts: {
        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
      },
      contents: {
        script: /javascript|ecmascript/
      },
      converters: {
        "text script": function(a) {
          f.globalEval(a);
          return a
        }
      }
    }), f.ajaxPrefilter("script", function(a) {
      a.cache === b && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1)
    }), f.ajaxTransport("script", function(a) {
      if (a.crossDomain) {
        var d, e = c.head || c.getElementsByTagName("head")[0] || c.documentElement;
        return {
          send: function(f, g) {
            d = c.createElement("script"), d.async = "async", a.scriptCharset && (d.charset = a.scriptCharset), d.src = a.url, d.onload = d.onreadystatechange = function(a, c) {
              if (c || !d.readyState || /loaded|complete/.test(d.readyState)) {
                d.onload = d.onreadystatechange = null, e && d.parentNode && e.removeChild(d), d = b, c || g(200, "success")
              }
            }, e.insertBefore(d, e.firstChild)
          },
          abort: function() {
            d && d.onload(0, 1)
          }
        }
      }
    });
    var cf = a.ActiveXObject ? function() {
        for (var a in ch) {
          ch[a](0, 1)
        }
      } : !1,
      cg = 0,
      ch;
    f.ajaxSettings.xhr = a.ActiveXObject ? function() {
      return !this.isLocal && ci() || cj()
    } : ci,
      function(a) {
        f.extend(f.support, {
          ajax: !!a,
          cors: !!a && "withCredentials" in a
        })
      }(f.ajaxSettings.xhr()), f.support.ajax && f.ajaxTransport(function(c) {
      if (!c.crossDomain || f.support.cors) {
        var d;
        return {
          send: function(e, g) {
            var h = c.xhr(),
              i, j;
            c.username ? h.open(c.type, c.url, c.async, c.username, c.password) : h.open(c.type, c.url, c.async);
            if (c.xhrFields) {
              for (j in c.xhrFields) {
                h[j] = c.xhrFields[j]
              }
            }
            c.mimeType && h.overrideMimeType && h.overrideMimeType(c.mimeType), !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest");
            try {
              for (j in e) {
                h.setRequestHeader(j, e[j])
              }
            } catch (k) {}
            h.send(c.hasContent && c.data || null), d = function(a, e) {
              var j, k, l, m, n;
              try {
                if (d && (e || h.readyState === 4)) {
                  d = b, i && (h.onreadystatechange = f.noop, cf && delete ch[i]);
                  if (e) {
                    h.readyState !== 4 && h.abort()
                  } else {
                    j = h.status, l = h.getAllResponseHeaders(), m = {}, n = h.responseXML, n && n.documentElement && (m.xml = n), m.text = h.responseText;
                    try {
                      k = h.statusText
                    } catch (o) {
                      k = ""
                    }!j && c.isLocal && !c.crossDomain ? j = m.text ? 200 : 404 : j === 1223 && (j = 204)
                  }
                }
              } catch (p) {
                e || g(-1, p)
              }
              m && g(j, k, m, l)
            }, !c.async || h.readyState === 4 ? d() : (i = ++cg, cf && (ch || (ch = {}, f(a).unload(cf)), ch[i] = d), h.onreadystatechange = d)
          },
          abort: function() {
            d && d(0, 1)
          }
        }
      }
    });
    var ck = {},
      cl, cm, cn = /^(?:toggle|show|hide)$/,
      co = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
      cp, cq = [
        ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
        ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
        ["opacity"]
      ],
      cr;
    f.fn.extend({
      show: function(a, b, c) {
        var d, e;
        if (a || a === 0) {
          return this.animate(cu("show", 3), a, b, c)
        }
        for (var g = 0, h = this.length; g < h; g++) {
          d = this[g], d.style && (e = d.style.display, !f._data(d, "olddisplay") && e === "none" && (e = d.style.display = ""), e === "" && f.css(d, "display") === "none" && f._data(d, "olddisplay", cv(d.nodeName)))
        }
        for (g = 0; g < h; g++) {
          d = this[g];
          if (d.style) {
            e = d.style.display;
            if (e === "" || e === "none") {
              d.style.display = f._data(d, "olddisplay") || ""
            }
          }
        }
        return this
      },
      hide: function(a, b, c) {
        if (a || a === 0) {
          return this.animate(cu("hide", 3), a, b, c)
        }
        var d, e, g = 0,
          h = this.length;
        for (; g < h; g++) {
          d = this[g], d.style && (e = f.css(d, "display"), e !== "none" && !f._data(d, "olddisplay") && f._data(d, "olddisplay", e))
        }
        for (g = 0; g < h; g++) {
          this[g].style && (this[g].style.display = "none")
        }
        return this
      },
      _toggle: f.fn.toggle,
      toggle: function(a, b, c) {
        var d = typeof a == "boolean";
        f.isFunction(a) && f.isFunction(b) ? this._toggle.apply(this, arguments) : a == null || d ? this.each(function() {
          var b = d ? a : f(this).is(":hidden");
          f(this)[b ? "show" : "hide"]()
        }) : this.animate(cu("toggle", 3), a, b, c);
        return this
      },
      fadeTo: function(a, b, c, d) {
        return this.filter(":hidden").css("opacity", 0).show().end().animate({
          opacity: b
        }, a, c, d)
      },
      animate: function(a, b, c, d) {
        function g() {
          e.queue === !1 && f._mark(this);
          var b = f.extend({}, e),
            c = this.nodeType === 1,
            d = c && f(this).is(":hidden"),
            g, h, i, j, k, l, m, n, o;
          b.animatedProperties = {};
          for (i in a) {
            g = f.camelCase(i), i !== g && (a[g] = a[i], delete a[i]), h = a[g], f.isArray(h) ? (b.animatedProperties[g] = h[1], h = a[g] = h[0]) : b.animatedProperties[g] = b.specialEasing && b.specialEasing[g] || b.easing || "swing";
            if (h === "hide" && d || h === "show" && !d) {
              return b.complete.call(this)
            }
            c && (g === "height" || g === "width") && (b.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY], f.css(this, "display") === "inline" && f.css(this, "float") === "none" && (!f.support.inlineBlockNeedsLayout || cv(this.nodeName) === "inline" ? this.style.display = "inline-block" : this.style.zoom = 1))
          }
          b.overflow != null && (this.style.overflow = "hidden");
          for (i in a) {
            j = new f.fx(this, b, i), h = a[i], cn.test(h) ? (o = f._data(this, "toggle" + i) || (h === "toggle" ? d ? "show" : "hide" : 0), o ? (f._data(this, "toggle" + i, o === "show" ? "hide" : "show"), j[o]()) : j[h]()) : (k = co.exec(h), l = j.cur(), k ? (m = parseFloat(k[2]), n = k[3] || (f.cssNumber[i] ? "" : "px"), n !== "px" && (f.style(this, i, (m || 1) + n), l = (m || 1) / j.cur() * l, f.style(this, i, l + n)), k[1] && (m = (k[1] === "-=" ? -1 : 1) * m + l), j.custom(l, m, n)) : j.custom(l, h, ""))
          }
          return !0
        }
        var e = f.speed(b, c, d);
        if (f.isEmptyObject(a)) {
          return this.each(e.complete, [!1])
        }
        a = f.extend({}, a);
        return e.queue === !1 ? this.each(g) : this.queue(e.queue, g)
      },
      stop: function(a, c, d) {
        typeof a != "string" && (d = c, c = a, a = b), c && a !== !1 && this.queue(a || "fx", []);
        return this.each(function() {
          function h(a, b, c) {
            var e = b[c];
            f.removeData(a, c, !0), e.stop(d)
          }
          var b, c = !1,
            e = f.timers,
            g = f._data(this);
          d || f._unmark(!0, this);
          if (a == null) {
            for (b in g) {
              g[b] && g[b].stop && b.indexOf(".run") === b.length - 4 && h(this, g, b)
            }
          } else {
            g[b = a + ".run"] && g[b].stop && h(this, g, b)
          }
          for (b = e.length; b--;) {
            e[b].elem === this && (a == null || e[b].queue === a) && (d ? e[b](!0) : e[b].saveState(), c = !0, e.splice(b, 1))
          }(!d || !c) && f.dequeue(this, a)
        })
      }
    }), f.each({
      slideDown: cu("show", 1),
      slideUp: cu("hide", 1),
      slideToggle: cu("toggle", 1),
      fadeIn: {
        opacity: "show"
      },
      fadeOut: {
        opacity: "hide"
      },
      fadeToggle: {
        opacity: "toggle"
      }
    }, function(a, b) {
      f.fn[a] = function(a, c, d) {
        return this.animate(b, a, c, d)
      }
    }), f.extend({
      speed: function(a, b, c) {
        var d = a && typeof a == "object" ? f.extend({}, a) : {
          complete: c || !c && b || f.isFunction(a) && a,
          duration: a,
          easing: c && b || b && !f.isFunction(b) && b
        };
        d.duration = f.fx.off ? 0 : typeof d.duration == "number" ? d.duration : d.duration in f.fx.speeds ? f.fx.speeds[d.duration] : f.fx.speeds._default;
        if (d.queue == null || d.queue === !0) {
          d.queue = "fx"
        }
        d.old = d.complete, d.complete = function(a) {
          f.isFunction(d.old) && d.old.call(this), d.queue ? f.dequeue(this, d.queue) : a !== !1 && f._unmark(this)
        };
        return d
      },
      easing: {
        linear: function(a, b, c, d) {
          return c + d * a
        },
        swing: function(a, b, c, d) {
          return (-Math.cos(a * Math.PI) / 2 + 0.5) * d + c
        }
      },
      timers: [],
      fx: function(a, b, c) {
        this.options = b, this.elem = a, this.prop = c, b.orig = b.orig || {}
      }
    }), f.fx.prototype = {
      update: function() {
        this.options.step && this.options.step.call(this.elem, this.now, this), (f.fx.step[this.prop] || f.fx.step._default)(this)
      },
      cur: function() {
        if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {
          return this.elem[this.prop]
        }
        var a, b = f.css(this.elem, this.prop);
        return isNaN(a = parseFloat(b)) ? !b || b === "auto" ? 0 : b : a
      },
      custom: function(a, c, d) {
        function h(a) {
          return e.step(a)
        }
        var e = this,
          g = f.fx;
        this.startTime = cr || cs(), this.end = c, this.now = this.start = a, this.pos = this.state = 0, this.unit = d || this.unit || (f.cssNumber[this.prop] ? "" : "px"), h.queue = this.options.queue, h.elem = this.elem, h.saveState = function() {
          e.options.hide && f._data(e.elem, "fxshow" + e.prop) === b && f._data(e.elem, "fxshow" + e.prop, e.start)
        }, h() && f.timers.push(h) && !cp && (cp = setInterval(g.tick, g.interval))
      },
      show: function() {
        var a = f._data(this.elem, "fxshow" + this.prop);
        this.options.orig[this.prop] = a || f.style(this.elem, this.prop), this.options.show = !0, a !== b ? this.custom(this.cur(), a) : this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur()), f(this.elem).show()
      },
      hide: function() {
        this.options.orig[this.prop] = f._data(this.elem, "fxshow" + this.prop) || f.style(this.elem, this.prop), this.options.hide = !0, this.custom(this.cur(), 0)
      },
      step: function(a) {
        var b, c, d, e = cr || cs(),
          g = !0,
          h = this.elem,
          i = this.options;
        if (a || e >= i.duration + this.startTime) {
          this.now = this.end, this.pos = this.state = 1, this.update(), i.animatedProperties[this.prop] = !0;
          for (b in i.animatedProperties) {
            i.animatedProperties[b] !== !0 && (g = !1)
          }
          if (g) {
            i.overflow != null && !f.support.shrinkWrapBlocks && f.each(["", "X", "Y"], function(a, b) {
              h.style["overflow" + b] = i.overflow[a]
            }), i.hide && f(h).hide();
            if (i.hide || i.show) {
              for (b in i.animatedProperties) {
                f.style(h, b, i.orig[b]), f.removeData(h, "fxshow" + b, !0), f.removeData(h, "toggle" + b, !0)
              }
            }
            d = i.complete, d && (i.complete = !1, d.call(h))
          }
          return !1
        }
        i.duration == Infinity ? this.now = e : (c = e - this.startTime, this.state = c / i.duration, this.pos = f.easing[i.animatedProperties[this.prop]](this.state, c, 0, 1, i.duration), this.now = this.start + (this.end - this.start) * this.pos), this.update();
        return !0
      }
    }, f.extend(f.fx, {
      tick: function() {
        var a, b = f.timers,
          c = 0;
        for (; c < b.length; c++) {
          a = b[c], !a() && b[c] === a && b.splice(c--, 1)
        }
        b.length || f.fx.stop()
      },
      interval: 13,
      stop: function() {
        clearInterval(cp), cp = null
      },
      speeds: {
        slow: 600,
        fast: 200,
        _default: 400
      },
      step: {
        opacity: function(a) {
          f.style(a.elem, "opacity", a.now)
        },
        _default: function(a) {
          a.elem.style && a.elem.style[a.prop] != null ? a.elem.style[a.prop] = a.now + a.unit : a.elem[a.prop] = a.now
        }
      }
    }), f.each(["width", "height"], function(a, b) {
      f.fx.step[b] = function(a) {
        f.style(a.elem, b, Math.max(0, a.now) + a.unit)
      }
    }), f.expr && f.expr.filters && (f.expr.filters.animated = function(a) {
      return f.grep(f.timers, function(b) {
        return a === b.elem
      }).length
    });
    var cw = /^t(?:able|d|h)$/i,
      cx = /^(?:body|html)$/i;
    "getBoundingClientRect" in c.documentElement ? f.fn.offset = function(a) {
      var b = this[0],
        c;
      if (a) {
        return this.each(function(b) {
          f.offset.setOffset(this, a, b)
        })
      }
      if (!b || !b.ownerDocument) {
        return null
      }
      if (b === b.ownerDocument.body) {
        return f.offset.bodyOffset(b)
      }
      try {
        c = b.getBoundingClientRect()
      } catch (d) {}
      var e = b.ownerDocument,
        g = e.documentElement;
      if (!c || !f.contains(g, b)) {
        return c ? {
          top: c.top,
          left: c.left
        } : {
          top: 0,
          left: 0
        }
      }
      var h = e.body,
        i = cy(e),
        j = g.clientTop || h.clientTop || 0,
        k = g.clientLeft || h.clientLeft || 0,
        l = i.pageYOffset || f.support.boxModel && g.scrollTop || h.scrollTop,
        m = i.pageXOffset || f.support.boxModel && g.scrollLeft || h.scrollLeft,
        n = c.top + l - j,
        o = c.left + m - k;
      return {
        top: n,
        left: o
      }
    } : f.fn.offset = function(a) {
      var b = this[0];
      if (a) {
        return this.each(function(b) {
          f.offset.setOffset(this, a, b)
        })
      }
      if (!b || !b.ownerDocument) {
        return null
      }
      if (b === b.ownerDocument.body) {
        return f.offset.bodyOffset(b)
      }
      var c, d = b.offsetParent,
        e = b,
        g = b.ownerDocument,
        h = g.documentElement,
        i = g.body,
        j = g.defaultView,
        k = j ? j.getComputedStyle(b, null) : b.currentStyle,
        l = b.offsetTop,
        m = b.offsetLeft;
      while ((b = b.parentNode) && b !== i && b !== h) {
        if (f.support.fixedPosition && k.position === "fixed") {
          break
        }
        c = j ? j.getComputedStyle(b, null) : b.currentStyle, l -= b.scrollTop, m -= b.scrollLeft, b === d && (l += b.offsetTop, m += b.offsetLeft, f.support.doesNotAddBorder && (!f.support.doesAddBorderForTableAndCells || !cw.test(b.nodeName)) && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), e = d, d = b.offsetParent), f.support.subtractsBorderForOverflowNotVisible && c.overflow !== "visible" && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), k = c
      }
      if (k.position === "relative" || k.position === "static") {
        l += i.offsetTop, m += i.offsetLeft
      }
      f.support.fixedPosition && k.position === "fixed" && (l += Math.max(h.scrollTop, i.scrollTop), m += Math.max(h.scrollLeft, i.scrollLeft));
      return {
        top: l,
        left: m
      }
    }, f.offset = {
      bodyOffset: function(a) {
        var b = a.offsetTop,
          c = a.offsetLeft;
        f.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(f.css(a, "marginTop")) || 0, c += parseFloat(f.css(a, "marginLeft")) || 0);
        return {
          top: b,
          left: c
        }
      },
      setOffset: function(a, b, c) {
        var d = f.css(a, "position");
        d === "static" && (a.style.position = "relative");
        var e = f(a),
          g = e.offset(),
          h = f.css(a, "top"),
          i = f.css(a, "left"),
          j = (d === "absolute" || d === "fixed") && f.inArray("auto", [h, i]) > -1,
          k = {},
          l = {},
          m, n;
        j ? (l = e.position(), m = l.top, n = l.left) : (m = parseFloat(h) || 0, n = parseFloat(i) || 0), f.isFunction(b) && (b = b.call(a, c, g)), b.top != null && (k.top = b.top - g.top + m), b.left != null && (k.left = b.left - g.left + n), "using" in b ? b.using.call(a, k) : e.css(k)
      }
    }, f.fn.extend({
      position: function() {
        if (!this[0]) {
          return null
        }
        var a = this[0],
          b = this.offsetParent(),
          c = this.offset(),
          d = cx.test(b[0].nodeName) ? {
            top: 0,
            left: 0
          } : b.offset();
        c.top -= parseFloat(f.css(a, "marginTop")) || 0, c.left -= parseFloat(f.css(a, "marginLeft")) || 0, d.top += parseFloat(f.css(b[0], "borderTopWidth")) || 0, d.left += parseFloat(f.css(b[0], "borderLeftWidth")) || 0;
        return {
          top: c.top - d.top,
          left: c.left - d.left
        }
      },
      offsetParent: function() {
        return this.map(function() {
          var a = this.offsetParent || c.body;
          while (a && !cx.test(a.nodeName) && f.css(a, "position") === "static") {
            a = a.offsetParent
          }
          return a
        })
      }
    }), f.each(["Left", "Top"], function(a, c) {
      var d = "scroll" + c;
      f.fn[d] = function(c) {
        var e, g;
        if (c === b) {
          e = this[0];
          if (!e) {
            return null
          }
          g = cy(e);
          return g ? "pageXOffset" in g ? g[a ? "pageYOffset" : "pageXOffset"] : f.support.boxModel && g.document.documentElement[d] || g.document.body[d] : e[d]
        }
        return this.each(function() {
          g = cy(this), g ? g.scrollTo(a ? f(g).scrollLeft() : c, a ? c : f(g).scrollTop()) : this[d] = c
        })
      }
    }), f.each(["Height", "Width"], function(a, c) {
      var d = c.toLowerCase();
      f.fn["inner" + c] = function() {
        var a = this[0];
        return a ? a.style ? parseFloat(f.css(a, d, "padding")) : this[d]() : null
      }, f.fn["outer" + c] = function(a) {
        var b = this[0];
        return b ? b.style ? parseFloat(f.css(b, d, a ? "margin" : "border")) : this[d]() : null
      }, f.fn[d] = function(a) {
        var e = this[0];
        if (!e) {
          return a == null ? null : this
        }
        if (f.isFunction(a)) {
          return this.each(function(b) {
            var c = f(this);
            c[d](a.call(this, b, c[d]()))
          })
        }
        if (f.isWindow(e)) {
          var g = e.document.documentElement["client" + c],
            h = e.document.body;
          return e.document.compatMode === "CSS1Compat" && g || h && h["client" + c] || g
        }
        if (e.nodeType === 9) {
          return Math.max(e.documentElement["client" + c], e.body["scroll" + c], e.documentElement["scroll" + c], e.body["offset" + c], e.documentElement["offset" + c])
        }
        if (a === b) {
          var i = f.css(e, d),
            j = parseFloat(i);
          return f.isNumeric(j) ? j : i
        }
        return this.css(d, typeof a == "string" ? a : a + "px")
      }
    }), a.jQuery = a.$ = f, typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function() {
      return f
    })
  })(window)
};
if (!document.querySelectorAll) {
  document.querySelectorAll = function(a) {
    return $(a)
  }
}
if (!document.querySelector || kony.appinit.isIE8) {
  document.querySelector = function(a) {
    var b = $(a);
    return (b && b[0]) || null
  }
}
if (typeof window.localStorage == "undefined") {
  (function() {
    var a = function(d) {
      var f = {};
      _storage_elm = null;
      _storage_service = {
        lStorage: "{}"
      };

      function b() {
        try {
          _storage_service.lStorage = JSON.stringify(f);
          if (_storage_elm) {
            _storage_elm.setAttribute("lStorage", _storage_service.lStorage);
            _storage_elm.save("lStorage")
          }
        } catch (h) {}
      }

      function g() {
        _storage_elm = document.createElement("link");
        if (_storage_elm.addBehavior) {
          _storage_elm.style.behavior = "url(#default#userData)";
          document.getElementsByTagName("head")[0].appendChild(_storage_elm);
          _storage_elm.load("lStorage");
          var h = "{}";
          try {
            h = _storage_elm.getAttribute("lStorage")
          } catch (i) {}
          _storage_service.lStorage = h
        } else {
          return
        }
        e()
      }

      function e() {
        if (_storage_service.lStorage) {
          try {
            f = JSON.parse(String(_storage_service.lStorage))
          } catch (h) {
            _storage_service.lStorage = "{}"
          }
        }
      }
      g();
      return {
        clear: function() {
          f = {};
          b()
        },
        getItem: function(h) {
          return f[h]
        },
        key: function(j) {
          var l = 0;
          for (var h in f) {
            if (l == j) {
              return h
            } else {
              l++
            }
          }
          return null
        },
        removeItem: function(h) {
          if (h in f) {
            delete f[h];
            b()
          }
        },
        setItem: function(h, i) {
          f[h] = i;
          b()
        }
      }
    };
    if (typeof window.localStorage == "undefined") {
      window.localStorage = new a()
    }
  })()
}
if (typeof sessionStorage === "undefined") {
  (function(j) {
    var k = j;
    try {
      while (k !== k.top) {
        k = k.top
      }
    } catch (i) {}
    var f = (function(e, n) {
      return {
        decode: function(o, p) {
          return this.encode(o, p)
        },
        encode: function(y, u) {
          for (var p = y.length, w = u.length, o = [], x = [], v = 0, s = 0, r = 0, q = 0, t; v < 256; ++v) {
            x[v] = v
          }
          for (v = 0; v < 256; ++v) {
            s = (s + (t = x[v]) + y.charCodeAt(v % p)) % 256;
            x[v] = x[s];
            x[s] = t
          }
          for (s = 0; r < w; ++r) {
            v = r % 256;
            s = (s + (t = x[v])) % 256;
            p = x[v] = x[s];
            x[s] = t;
            o[q++] = e(u.charCodeAt(r) ^ x[(p + t) % 256])
          }
          return o.join("")
        },
        key: function(q) {
          for (var p = 0, o = []; p < q; ++p) {
            o[p] = e(1 + ((n() * 255) << 0))
          }
          return o.join("")
        }
      }
    })(j.String.fromCharCode, j.Math.random);
    var a = (function(n) {
      function o(r, q, p) {
        this._i = (this._data = p || "").length;
        if (this._key = q) {
          this._storage = r
        } else {
          this._storage = {
            _key: r || ""
          };
          this._key = "_key"
        }
      }
      o.prototype.c = String.fromCharCode(1);
      o.prototype._c = ".";
      o.prototype.clear = function() {
        this._storage[this._key] = this._data
      };
      o.prototype.del = function(p) {
        var q = this.get(p);
        if (q !== null) {
          this._storage[this._key] = this._storage[this._key].replace(e.call(this, p, q), "")
        }
      };
      o.prototype.escape = n.escape;
      o.prototype.get = function(q) {
        var s = this._storage[this._key],
          t = this.c,
          p = s.indexOf(q = t.concat(this._c, this.escape(q), t, t), this._i),
          r = null;
        if (-1 < p) {
          p = s.indexOf(t, p + q.length - 1) + 1;
          r = s.substring(p, p = s.indexOf(t, p));
          r = this.unescape(s.substr(++p, r))
        }
        return r
      };
      o.prototype.key = function() {
        var u = this._storage[this._key],
          v = this.c,
          q = v + this._c,
          r = this._i,
          t = [],
          s = 0,
          p = 0;
        while (-1 < (r = u.indexOf(q, r))) {
          t[p++] = this.unescape(u.substring(r += 2, s = u.indexOf(v, r)));
          r = u.indexOf(v, s) + 2;
          s = u.indexOf(v, r);
          r = 1 + s + 1 * u.substring(r, s)
        }
        return t
      };
      o.prototype.set = function(p, q) {
        this.del(p);
        this._storage[this._key] += e.call(this, p, q)
      };
      o.prototype.unescape = n.unescape;

      function e(p, q) {
        var r = this.c;
        return r.concat(this._c, this.escape(p), r, r, (q = this.escape(q)).length, r, q)
      }
      return o
    })(j);
    if (Object.prototype.toString.call(j.opera) === "[object Opera]") {
      history.navigationMode = "compatible";
      a.prototype.escape = j.encodeURIComponent;
      a.prototype.unescape = j.decodeURIComponent
    }

    function l() {
      function r() {
        s.cookie = ["sessionStorage=" + j.encodeURIComponent(h = f.key(128))].join(";");
        g = f.encode(h, g);
        a = new a(k, "name", k.name)
      }
      var e = k.name,
        s = k.document,
        n = /\bsessionStorage\b=([^;]+)(;|$)/,
        p = n.exec(s.cookie),
        q;
      if (p) {
        h = j.decodeURIComponent(p[1]);
        g = f.encode(h, g);
        a = new a(k, "name");
        for (var t = a.key(), q = 0, o = t.length, u = {}; q < o; ++q) {
          if ((p = t[q]).indexOf(g) === 0) {
            b.push(p);
            u[p] = a.get(p);
            a.del(p)
          }
        }
        a = new a.constructor(k, "name", k.name);
        if (0 < (this.length = b.length)) {
          for (q = 0, o = b.length, c = a.c, p = []; q < o; ++q) {
            p[q] = c.concat(a._c, a.escape(t = b[q]), c, c, (t = a.escape(u[t])).length, c, t)
          }
          k.name += p.join("")
        }
      } else {
        r();
        if (!n.exec(s.cookie)) {
          b = null
        }
      }
    }
    l.prototype = {
      length: 0,
      key: function(e) {
        if (typeof e !== "number" || e < 0 || b.length <= e) {
          throw "Invalid argument"
        }
        return b[e]
      },
      getItem: function(e) {
        e = g + e;
        if (d.call(m, e)) {
          return m[e]
        }
        var n = a.get(e);
        if (n !== null) {
          n = m[e] = f.decode(h, n)
        }
        return n
      },
      setItem: function(e, n) {
        this.removeItem(e);
        e = g + e;
        a.set(e, f.encode(h, m[e] = "" + n));
        this.length = b.push(e)
      },
      removeItem: function(e) {
        var n = a.get(e = g + e);
        if (n !== null) {
          delete m[e];
          a.del(e);
          this.length = b.remove(e)
        }
      },
      clear: function() {
        a.clear();
        m = {};
        b.length = 0
      }
    };
    var g = k.document.domain,
      b = [],
      m = {},
      d = m.hasOwnProperty,
      h;
    b.remove = function(n) {
      var e = this.indexOf(n);
      if (-1 < e) {
        this.splice(e, 1)
      }
      return this.length
    };
    if (!b.indexOf) {
      b.indexOf = function(o) {
        for (var e = 0, n = this.length; e < n; ++e) {
          if (this[e] === o) {
            return e
          }
        }
        return -1
      }
    }
    if (k.sessionStorage) {
      l = function() {};
      l.prototype = k.sessionStorage
    }
    l = new l;
    if (b !== null) {
      j.sessionStorage = l
    }
  })(window)
};
kony.worker = {
  WorkerThread: function(h, a, g) {
    if (h === undefined || h === null || h === "") {
      throw new KonyError(3001, "WorkerThreadError", "WorkerThread: MissingMandatoryParameter. Failed to construct WorkerThread")
    }
    if (typeof h !== "string") {
      throw new KonyError(3002, "WorkerThreadError", "WorkerThread: InvalidParameter. Invalid script name")
    }
    var f = this,
      c = $KG.platformver + "appjs/";
    if (typeof nestedWorker === "undefined") {
      this.oWorker = new Worker(c + "konyworkerinit.js")
    } else {
      this.oWorker = new Worker("konyworkerinit.js")
    }
    var e = $KG.appmode || "";
    var j = $KG.appid || "";
    var i = $KG.skipproxy || "";
    var b = $KG.rcid || "";
    var k = false;
    var d = kony.os.userAgent();
    if (typeof $KG.functionalModules !== "undefined") {
      k = true
    }
    this.oWorker.postMessage({
      moduleName: h,
      contextPath: c,
      kgAppMode: e,
      kgAppID: j,
      kgSkipProxy: i,
      kgRcid: b,
      isFMSupported: k,
      kgUserAgent: d
    }), f.defaultListener = a || function(l) {
        kony.print("Data: " + l.data)
      };
    f.defaultErrorListener = g || function(l) {
        kony.print(l.message + " : in file - " + l.filename + " at location :" + l.lineno + "," + l.colno)
      };
    this.oWorker.addEventListener("error", f.defaultErrorListener)
  },
  hasWorkerThreadSupport: function() {
    if (typeof Worker === "undefined") {
      return false
    }
    return true
  }
};
kony.worker.WorkerThread.prototype.postMessage = function(a) {
  if (a === undefined || a === null || a === "") {
    throw new KonyError(3001, "WorkerThreadError", "postMessage: MissingMandatoryParameter. Message undefined")
  }
  if (typeof a === "number" || typeof a === "boolean" || typeof a === "function") {
    throw new KonyError(3002, "WorkerThreadError", "postMessage: InvalidParameter. Invalid Message")
  }
  try {
    Worker.prototype.postMessage.call(this.oWorker, a)
  } catch (b) {
    kony.print("Error occured in WorkerThread postMessage: " + b.message);
    throw new KonyError(3002, "WorkerThreadError", "postMessage: InvalidParameter. Invalid Message")
  }
};
kony.worker.WorkerThread.prototype.terminate = function() {
  Worker.prototype.terminate.call(this.oWorker)
};
kony.worker.WorkerThread.prototype.addEventListener = function(b, a) {
  if (arguments.length < 2) {
    throw new KonyError(3001, "WorkerThreadError", "addEventListener: MissingMandatoryParameter. Mandatory arguments missing")
  }
  if (typeof arguments[0] != "string" || typeof arguments[1] != "function") {
    throw new KonyError(3002, "WorkerThreadError", "addEventListener: InvalidParameter. Invalid arguments")
  }
  if (b != "message" && b != "error") {
    throw new KonyError(3002, "WorkerThreadError", "addEventListener: InvalidParameter. Invalid arguments")
  }
  a = a ? a : this.defaultListener;
  Worker.prototype.addEventListener.call(this.oWorker, b, a, false);
  if ("error" === b) {
    Worker.prototype.removeEventListener.call(this.oWorker, "error", this.defaultErrorListener, false)
  }
};
kony.worker.WorkerThread.prototype.removeEventListener = function(b, a) {
  if (arguments.length < 2) {
    throw new KonyError(3001, "WorkerThreadError", "removeEventListener: MissingMandatoryParameter. Mandatory arguments missing")
  }
  if (typeof arguments[0] != "string" || typeof arguments[1] != "function") {
    throw new KonyError(3002, "WorkerThreadError", "removeEventListener: InvalidParameter. Invalid arguments")
  }
  if (b != "message" && b != "error") {
    throw new KonyError(3002, "WorkerThreadError", "removeEventListener: InvalidParameter. Invalid arguments")
  }
  Worker.prototype.removeEventListener.call(this.oWorker, b, a, false);
  if ("error" === b) {
    Worker.prototype.addEventListener.call(this.oWorker, "error", this.defaultErrorListener, false)
  }
};
var requirejs, require, define;
(function(ba) {
  function G(b) {
    return "[object Function]" === K.call(b)
  }

  function H(b) {
    return "[object Array]" === K.call(b)
  }

  function v(b, c) {
    if (b) {
      var d;
      for (d = 0; d < b.length && (!b[d] || !c(b[d], d, b)); d += 1) {}
    }
  }

  function T(b, c) {
    if (b) {
      var d;
      for (d = b.length - 1; - 1 < d && (!b[d] || !c(b[d], d, b)); d -= 1) {}
    }
  }

  function t(b, c) {
    return fa.call(b, c)
  }

  function m(b, c) {
    return t(b, c) && b[c]
  }

  function B(b, c) {
    for (var d in b) {
      if (t(b, d) && c(b[d], d)) {
        break
      }
    }
  }

  function U(b, c, d, e) {
    c && B(c, function(c, g) {
      if (d || !t(b, g)) {
        e && "object" === typeof c && c && !H(c) && !G(c) && !(c instanceof RegExp) ? (b[g] || (b[g] = {}), U(b[g], c, d, e)) : b[g] = c
      }
    });
    return b
  }

  function u(b, c) {
    return function() {
      return c.apply(b, arguments)
    }
  }

  function ca(b) {
    throw b
  }

  function da(b) {
    if (!b) {
      return b
    }
    var c = ba;
    v(b.split("."), function(b) {
      c = c[b]
    });
    return c
  }

  function C(b, c, d, e) {
    c = Error(c + "\nhttp://requirejs.org/docs/errors.html#" + b);
    c.requireType = b;
    c.requireModules = e;
    d && (c.originalError = d);
    return c
  }

  function ga(b) {
    function c(a, k, b) {
      var f, l, c, d, e, g, i, p, k = k && k.split("/"),
        h = j.map,
        n = h && h["*"];
      if (a) {
        a = a.split("/");
        l = a.length - 1;
        j.nodeIdCompat && Q.test(a[l]) && (a[l] = a[l].replace(Q, ""));
        "." === a[0].charAt(0) && k && (l = k.slice(0, k.length - 1), a = l.concat(a));
        l = a;
        for (c = 0; c < l.length; c++) {
          if (d = l[c], "." === d) {
            l.splice(c, 1), c -= 1
          } else {
            if (".." === d && !(0 === c || 1 == c && ".." === l[2] || ".." === l[c - 1]) && 0 < c) {
              l.splice(c - 1, 2), c -= 2
            }
          }
        }
        a = a.join("/")
      }
      if (b && h && (k || n)) {
        l = a.split("/");
        c = l.length;
        a: for (; 0 < c; c -= 1) {
          e = l.slice(0, c).join("/");
          if (k) {
            for (d = k.length; 0 < d; d -= 1) {
              if (b = m(h, k.slice(0, d).join("/"))) {
                if (b = m(b, e)) {
                  f = b;
                  g = c;
                  break a
                }
              }
            }
          }!i && (n && m(n, e)) && (i = m(n, e), p = c)
        }!f && i && (f = i, g = p);
        f && (l.splice(0, g, f), a = l.join("/"))
      }
      return (f = m(j.pkgs, a)) ? f : a
    }

    function d(a) {
      z && v(document.getElementsByTagName("script"), function(k) {
        if (k.getAttribute("data-requiremodule") === a && k.getAttribute("data-requirecontext") === i.contextName) {
          return k.parentNode.removeChild(k), !0
        }
      })
    }

    function e(a) {
      var k = m(j.paths, a);
      if (k && H(k) && 1 < k.length) {
        return k.shift(), i.require.undef(a), i.makeRequire(null, {
          skipMap: !0
        })([a]), !0
      }
    }

    function n(a) {
      var k, c = a ? a.indexOf("!") : -1; - 1 < c && (k = a.substring(0, c), a = a.substring(c + 1, a.length));
      return [k, a]
    }

    function p(a, k, b, f) {
      var l, d, e = null,
        g = k ? k.name : null,
        j = a,
        p = !0,
        h = "";
      a || (p = !1, a = "_@r" + (K += 1));
      a = n(a);
      e = a[0];
      a = a[1];
      e && (e = c(e, g, f), d = m(r, e));
      a && (e ? h = d && d.normalize ? d.normalize(a, function(a) {
        return c(a, g, f)
      }) : -1 === a.indexOf("!") ? c(a, g, f) : a : (h = c(a, g, f), a = n(h), e = a[0], h = a[1], b = !0, l = i.nameToUrl(h)));
      b = e && !d && !b ? "_unnormalized" + (O += 1) : "";
      return {
        prefix: e,
        name: h,
        parentMap: k,
        unnormalized: !!b,
        url: l,
        originalName: j,
        isDefine: p,
        id: (e ? e + "!" + h : h) + b
      }
    }

    function s(a) {
      var k = a.id,
        b = m(h, k);
      b || (b = h[k] = new i.Module(a));
      return b
    }

    function q(a, k, b) {
      var f = a.id,
        c = m(h, f);
      if (t(r, f) && (!c || c.defineEmitComplete)) {
        "defined" === k && b(r[f])
      } else {
        if (c = s(a), c.error && "error" === k) {
          b(c.error)
        } else {
          c.on(k, b)
        }
      }
    }

    function w(a, b) {
      var c = a.requireModules,
        f = !1;
      if (b) {
        b(a)
      } else {
        if (v(c, function(b) {
            if (b = m(h, b)) {
              b.error = a, b.events.error && (f = !0, b.emit("error", a))
            }
          }), !f) {
          g.onError(a)
        }
      }
    }

    function x() {
      R.length && (ha.apply(A, [A.length, 0].concat(R)), R = [])
    }

    function y(a) {
      delete h[a];
      delete V[a]
    }

    function F(a, b, c) {
      var f = a.map.id;
      a.error ? a.emit("error", a.error) : (b[f] = !0, v(a.depMaps, function(f, d) {
        var e = f.id,
          g = m(h, e);
        g && (!a.depMatched[d] && !c[e]) && (m(b, e) ? (a.defineDep(d, r[e]), a.check()) : F(g, b, c))
      }), c[f] = !0)
    }

    function D() {
      var a, b, c = (a = 1000 * j.waitSeconds) && i.startTime + a < (new Date).getTime(),
        f = [],
        l = [],
        g = !1,
        h = !0;
      if (!W) {
        W = !0;
        B(V, function(a) {
          var i = a.map,
            j = i.id;
          if (a.enabled && (i.isDefine || l.push(a), !a.error)) {
            if (!a.inited && c) {
              e(j) ? g = b = !0 : (f.push(j), d(j))
            } else {
              if (!a.inited && (a.fetched && i.isDefine) && (g = !0, !i.prefix)) {
                return h = !1
              }
            }
          }
        });
        if (c && f.length) {
          return a = C("timeout", "Load timeout for modules: " + f, null, f), a.contextName = i.contextName, w(a)
        }
        h && v(l, function(a) {
          F(a, {}, {})
        });
        if ((!c || b) && g) {
          if ((z || ea) && !X) {
            X = setTimeout(function() {
              X = 0;
              D()
            }, 50)
          }
        }
        W = !1
      }
    }

    function E(a) {
      t(r, a[0]) || s(p(a[0], null, !0)).init(a[1], a[2])
    }

    function I(a) {
      var a = a.currentTarget || a.srcElement,
        b = i.onScriptLoad;
      a.detachEvent && !Y ? a.detachEvent("onreadystatechange", b) : a.removeEventListener("load", b, !1);
      b = i.onScriptError;
      (!a.detachEvent || Y) && a.removeEventListener("error", b, !1);
      return {
        node: a,
        id: a && a.getAttribute("data-requiremodule")
      }
    }

    function J() {
      var a;
      for (x(); A.length;) {
        a = A.shift();
        if (null === a[0]) {
          return w(C("mismatch", "Mismatched anonymous define() module: " + a[a.length - 1]))
        }
        E(a)
      }
    }
    var W, Z, i, L, X, j = {
        waitSeconds: 7,
        baseUrl: "./",
        paths: {},
        bundles: {},
        pkgs: {},
        shim: {},
        config: {}
      },
      h = {},
      V = {},
      $ = {},
      A = [],
      r = {},
      S = {},
      aa = {},
      K = 1,
      O = 1;
    L = {
      require: function(a) {
        return a.require ? a.require : a.require = i.makeRequire(a.map)
      },
      exports: function(a) {
        a.usingExports = !0;
        if (a.map.isDefine) {
          return a.exports ? r[a.map.id] = a.exports : a.exports = r[a.map.id] = {}
        }
      },
      module: function(a) {
        return a.module ? a.module : a.module = {
          id: a.map.id,
          uri: a.map.url,
          config: function() {
            return m(j.config, a.map.id) || {}
          },
          exports: a.exports || (a.exports = {})
        }
      }
    };
    Z = function(a) {
      this.events = m($, a.id) || {};
      this.map = a;
      this.shim = m(j.shim, a.id);
      this.depExports = [];
      this.depMaps = [];
      this.depMatched = [];
      this.pluginMaps = {};
      this.depCount = 0
    };
    Z.prototype = {
      init: function(a, b, c, f) {
        f = f || {};
        if (!this.inited) {
          this.factory = b;
          if (c) {
            this.on("error", c)
          } else {
            this.events.error && (c = u(this, function(a) {
              this.emit("error", a)
            }))
          }
          this.depMaps = a && a.slice(0);
          this.errback = c;
          this.inited = !0;
          this.ignore = f.ignore;
          f.enabled || this.enabled ? this.enable() : this.check()
        }
      },
      defineDep: function(a, b) {
        this.depMatched[a] || (this.depMatched[a] = !0, this.depCount -= 1, this.depExports[a] = b)
      },
      fetch: function() {
        if (!this.fetched) {
          this.fetched = !0;
          i.startTime = (new Date).getTime();
          var a = this.map;
          if (this.shim) {
            i.makeRequire(this.map, {
              enableBuildCallback: !0
            })(this.shim.deps || [], u(this, function() {
              return a.prefix ? this.callPlugin() : this.load()
            }))
          } else {
            return a.prefix ? this.callPlugin() : this.load()
          }
        }
      },
      load: function() {
        var a = this.map.url;
        S[a] || (S[a] = !0, i.load(this.map.id, a))
      },
      check: function() {
        if (this.enabled && !this.enabling) {
          var a, b, c = this.map.id;
          b = this.depExports;
          var f = this.exports,
            l = this.factory;
          if (this.inited) {
            if (this.error) {
              this.emit("error", this.error)
            } else {
              if (!this.defining) {
                this.defining = !0;
                if (1 > this.depCount && !this.defined) {
                  if (G(l)) {
                    if (this.events.error && this.map.isDefine || g.onError !== ca) {
                      try {
                        f = i.execCb(c, l, b, f)
                      } catch (d) {
                        a = d
                      }
                    } else {
                      f = i.execCb(c, l, b, f)
                    }
                    this.map.isDefine && void 0 === f && ((b = this.module) ? f = b.exports : this.usingExports && (f = this.exports));
                    if (a) {
                      return a.requireMap = this.map, a.requireModules = this.map.isDefine ? [this.map.id] : null, a.requireType = this.map.isDefine ? "define" : "require", w(this.error = a)
                    }
                  } else {
                    f = l
                  }
                  this.exports = f;
                  if (this.map.isDefine && !this.ignore && (r[c] = f, g.onResourceLoad)) {
                    g.onResourceLoad(i, this.map, this.depMaps)
                  }
                  y(c);
                  this.defined = !0
                }
                this.defining = !1;
                this.defined && !this.defineEmitted && (this.defineEmitted = !0, this.emit("defined", this.exports), this.defineEmitComplete = !0)
              }
            }
          } else {
            this.fetch()
          }
        }
      },
      callPlugin: function() {
        var a = this.map,
          b = a.id,
          d = p(a.prefix);
        this.depMaps.push(d);
        q(d, "defined", u(this, function(f) {
          var l, d;
          d = m(aa, this.map.id);
          var e = this.map.name,
            P = this.map.parentMap ? this.map.parentMap.name : null,
            n = i.makeRequire(a.parentMap, {
              enableBuildCallback: !0
            });
          if (this.map.unnormalized) {
            if (f.normalize && (e = f.normalize(e, function(a) {
                  return c(a, P, !0)
                }) || ""), f = p(a.prefix + "!" + e, this.map.parentMap), q(f, "defined", u(this, function(a) {
                this.init([], function() {
                  return a
                }, null, {
                  enabled: !0,
                  ignore: !0
                })
              })), d = m(h, f.id)) {
              this.depMaps.push(f);
              if (this.events.error) {
                d.on("error", u(this, function(a) {
                  this.emit("error", a)
                }))
              }
              d.enable()
            }
          } else {
            d ? (this.map.url = i.nameToUrl(d), this.load()) : (l = u(this, function(a) {
              this.init([], function() {
                return a
              }, null, {
                enabled: !0
              })
            }), l.error = u(this, function(a) {
              this.inited = !0;
              this.error = a;
              a.requireModules = [b];
              B(h, function(a) {
                0 === a.map.id.indexOf(b + "_unnormalized") && y(a.map.id)
              });
              w(a)
            }), l.fromText = u(this, function(f, c) {
              var d = a.name,
                e = p(d),
                P = M;
              c && (f = c);
              P && (M = !1);
              s(e);
              t(j.config, b) && (j.config[d] = j.config[b]);
              try {
                g.exec(f)
              } catch (h) {
                return w(C("fromtexteval", "fromText eval for " + b + " failed: " + h, h, [b]))
              }
              P && (M = !0);
              this.depMaps.push(e);
              i.completeLoad(d);
              n([d], l)
            }), f.load(a.name, n, l, j))
          }
        }));
        i.enable(d, this);
        this.pluginMaps[d.id] = d
      },
      enable: function() {
        V[this.map.id] = this;
        this.enabling = this.enabled = !0;
        v(this.depMaps, u(this, function(a, b) {
          var c, f;
          if ("string" === typeof a) {
            a = p(a, this.map.isDefine ? this.map : this.map.parentMap, !1, !this.skipMap);
            this.depMaps[b] = a;
            if (c = m(L, a.id)) {
              this.depExports[b] = c(this);
              return
            }
            this.depCount += 1;
            q(a, "defined", u(this, function(a) {
              this.defineDep(b, a);
              this.check()
            }));
            this.errback && q(a, "error", u(this, this.errback))
          }
          c = a.id;
          f = h[c];
          !t(L, c) && (f && !f.enabled) && i.enable(a, this)
        }));
        B(this.pluginMaps, u(this, function(a) {
          var b = m(h, a.id);
          b && !b.enabled && i.enable(a, this)
        }));
        this.enabling = !1;
        this.check()
      },
      on: function(a, b) {
        var c = this.events[a];
        c || (c = this.events[a] = []);
        c.push(b)
      },
      emit: function(a, b) {
        v(this.events[a], function(a) {
          a(b)
        });
        "error" === a && delete this.events[a]
      }
    };
    i = {
      config: j,
      contextName: b,
      registry: h,
      defined: r,
      urlFetched: S,
      defQueue: A,
      Module: Z,
      makeModuleMap: p,
      nextTick: g.nextTick,
      onError: w,
      configure: function(a) {
        a.baseUrl && "/" !== a.baseUrl.charAt(a.baseUrl.length - 1) && (a.baseUrl += "/");
        var b = j.shim,
          c = {
            paths: !0,
            bundles: !0,
            config: !0,
            map: !0
          };
        B(a, function(a, b) {
          c[b] ? (j[b] || (j[b] = {}), U(j[b], a, !0, !0)) : j[b] = a
        });
        a.bundles && B(a.bundles, function(a, b) {
          v(a, function(a) {
            a !== b && (aa[a] = b)
          })
        });
        a.shim && (B(a.shim, function(a, c) {
          H(a) && (a = {
            deps: a
          });
          if ((a.exports || a.init) && !a.exportsFn) {
            a.exportsFn = i.makeShimExports(a)
          }
          b[c] = a
        }), j.shim = b);
        a.packages && v(a.packages, function(a) {
          var b, a = "string" === typeof a ? {
            name: a
          } : a;
          b = a.name;
          a.location && (j.paths[b] = a.location);
          j.pkgs[b] = a.name + "/" + (a.main || "main").replace(ia, "").replace(Q, "")
        });
        B(h, function(a, b) {
          !a.inited && !a.map.unnormalized && (a.map = p(b))
        });
        if (a.deps || a.callback) {
          i.require(a.deps || [], a.callback)
        }
      },
      makeShimExports: function(a) {
        return function() {
          var b;
          a.init && (b = a.init.apply(ba, arguments));
          return b || a.exports && da(a.exports)
        }
      },
      makeRequire: function(a, e) {
        function j(c, d, m) {
          var n, q;
          e.enableBuildCallback && (d && G(d)) && (d.__requireJsBuild = !0);
          if ("string" === typeof c) {
            if (G(d)) {
              return w(C("requireargs", "Invalid require call"), m)
            }
            if (a && t(L, c)) {
              return L[c](h[a.id])
            }
            if (g.get) {
              return g.get(i, c, a, j)
            }
            n = p(c, a, !1, !0);
            n = n.id;
            return !t(r, n) ? w(C("notloaded", 'Module name "' + n + '" has not been loaded yet for context: ' + b + (a ? "" : ". Use require([])"))) : r[n]
          }
          J();
          i.nextTick(function() {
            J();
            q = s(p(null, a));
            q.skipMap = e.skipMap;
            q.init(c, d, m, {
              enabled: !0
            });
            D()
          });
          return j
        }
        e = e || {};
        U(j, {
          isBrowser: z,
          toUrl: function(b) {
            var d, e = b.lastIndexOf("."),
              k = b.split("/")[0];
            if (-1 !== e && (!("." === k || ".." === k) || 1 < e)) {
              d = b.substring(e, b.length), b = b.substring(0, e)
            }
            return i.nameToUrl(c(b, a && a.id, !0), d, !0)
          },
          defined: function(b) {
            return t(r, p(b, a, !1, !0).id)
          },
          specified: function(b) {
            b = p(b, a, !1, !0).id;
            return t(r, b) || t(h, b)
          }
        });
        a || (j.undef = function(b) {
          x();
          var c = p(b, a, !0),
            e = m(h, b);
          d(b);
          delete r[b];
          delete S[c.url];
          delete $[b];
          T(A, function(a, c) {
            a[0] === b && A.splice(c, 1)
          });
          e && (e.events.defined && ($[b] = e.events), y(b))
        });
        return j
      },
      enable: function(a) {
        m(h, a.id) && s(a).enable()
      },
      completeLoad: function(a) {
        var b, c, d = m(j.shim, a) || {},
          g = d.exports;
        for (x(); A.length;) {
          c = A.shift();
          if (null === c[0]) {
            c[0] = a;
            if (b) {
              break
            }
            b = !0
          } else {
            c[0] === a && (b = !0)
          }
          E(c)
        }
        c = m(h, a);
        if (!b && !t(r, a) && c && !c.inited) {
          if (j.enforceDefine && (!g || !da(g))) {
            return e(a) ? void 0 : w(C("nodefine", "No define call for " + a, null, [a]))
          }
          E([a, d.deps || [], d.exportsFn])
        }
        D()
      },
      nameToUrl: function(a, b, c) {
        var d, e, h;
        (d = m(j.pkgs, a)) && (a = d);
        if (d = m(aa, a)) {
          return i.nameToUrl(d, b, c)
        }
        if (g.jsExtRegExp.test(a)) {
          d = a + (b || "")
        } else {
          d = j.paths;
          a = a.split("/");
          for (e = a.length; 0 < e; e -= 1) {
            if (h = a.slice(0, e).join("/"), h = m(d, h)) {
              H(h) && (h = h[0]);
              a.splice(0, e, h);
              break
            }
          }
          d = a.join("/");
          d += b || (/^data\:|\?/.test(d) || c ? "" : ".js");
          d = ("/" === d.charAt(0) || d.match(/^[\w\+\.\-]+:/) ? "" : j.baseUrl) + d
        }
        return j.urlArgs ? d + ((-1 === d.indexOf("?") ? "?" : "&") + j.urlArgs) : d
      },
      load: function(a, b) {
        g.load(i, a, b)
      },
      execCb: function(a, b, c, d) {
        return b.apply(d, c)
      },
      onScriptLoad: function(a) {
        if ("load" === a.type || ja.test((a.currentTarget || a.srcElement).readyState)) {
          N = null, a = I(a), i.completeLoad(a.id)
        }
      },
      onScriptError: function(a) {
        var b = I(a);
        if (!e(b.id)) {
          return w(C("scripterror", "Script error for: " + b.id, a, [b.id]))
        }
      }
    };
    i.require = i.makeRequire();
    return i
  }
  var g, x, y, D, I, E, N, J, s, O, ka = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,
    la = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
    Q = /\.js$/,
    ia = /^\.\//;
  x = Object.prototype;
  var K = x.toString,
    fa = x.hasOwnProperty,
    ha = Array.prototype.splice,
    z = !!("undefined" !== typeof window && "undefined" !== typeof navigator && window.document),
    ea = !z && "undefined" !== typeof importScripts,
    ja = z && "PLAYSTATION 3" === navigator.platform ? /^complete$/ : /^(complete|loaded)$/,
    Y = "undefined" !== typeof opera && "[object Opera]" === opera.toString(),
    F = {},
    q = {},
    R = [],
    M = !1;
  if ("undefined" === typeof define) {
    if ("undefined" !== typeof requirejs) {
      if (G(requirejs)) {
        return
      }
      q = requirejs;
      requirejs = void 0
    }
    "undefined" !== typeof require && !G(require) && (q = require, require = void 0);
    g = requirejs = function(b, c, d, e) {
      var n, p = "_";
      !H(b) && "string" !== typeof b && (n = b, H(c) ? (b = c, c = d, d = e) : b = []);
      n && n.context && (p = n.context);
      (e = m(F, p)) || (e = F[p] = g.s.newContext(p));
      n && e.configure(n);
      return e.require(b, c, d)
    };
    g.config = function(b) {
      return g(b)
    };
    g.nextTick = "undefined" !== typeof setTimeout ? function(b) {
      setTimeout(b, 4)
    } : function(b) {
      b()
    };
    require || (require = g);
    g.version = "2.1.14";
    g.jsExtRegExp = /^\/|:|\?|\.js$/;
    g.isBrowser = z;
    x = g.s = {
      contexts: F,
      newContext: ga
    };
    g({});
    v(["toUrl", "undef", "defined", "specified"], function(b) {
      g[b] = function() {
        var c = F._;
        return c.require[b].apply(c, arguments)
      }
    });
    if (z && (y = x.head = document.getElementsByTagName("head")[0], D = document.getElementsByTagName("base")[0])) {
      y = x.head = D.parentNode
    }
    g.onError = ca;
    g.createNode = function(b) {
      var c = b.xhtml ? document.createElementNS("http://www.w3.org/1999/xhtml", "html:script") : document.createElement("script");
      c.type = b.scriptType || "text/javascript";
      c.charset = "utf-8";
      c.async = !0;
      return c
    };
    g.load = function(b, c, d) {
      var e = b && b.config || {};
      b.completeLoad(c)
    };
    z && !q.skipDataMain && T(document.getElementsByTagName("script"), function(b) {
      y || (y = b.parentNode);
      if (I = b.getAttribute("data-main")) {
        return s = I, q.baseUrl || (E = s.split("/"), s = E.pop(), O = E.length ? E.join("/") + "/" : "./", q.baseUrl = O), s = s.replace(Q, ""), g.jsExtRegExp.test(s) && (s = I), q.deps = q.deps ? q.deps.concat(s) : [s], !0
      }
    });
    define = function(b, c, d) {
      var e, g;
      "string" !== typeof b && (d = c, c = b, b = null);
      H(c) || (d = c, c = null);
      !c && G(d) && (c = [], d.length && (d.toString().replace(ka, "").replace(la, function(b, d) {
        c.push(d)
      }), c = (1 === d.length ? ["require"] : ["require", "exports", "module"]).concat(c)));
      if (M) {
        if (!(e = J)) {
          N && "interactive" === N.readyState || T(document.getElementsByTagName("script"), function(b) {
            if ("interactive" === b.readyState) {
              return N = b
            }
          }), e = N
        }
        e && (b || (b = e.getAttribute("data-requiremodule")), g = F[e.getAttribute("data-requirecontext")])
      }(g ? g.defQueue : R).push([b, c, d])
    };
    define.amd = {
      jQuery: !0
    };
    g.exec = function(b) {
      return eval(b)
    };
    g(q)
  }
})(this);
var CryptoJS = CryptoJS || function(l, r) {
    var s = {},
      g = s.lib = {},
      m = g.Base = function() {
        function a() {}
        return {
          extend: function(c) {
            a.prototype = this;
            var b = new a;
            c && b.mixIn(c);
            b.$super = this;
            return b
          },
          create: function() {
            var b = this.extend();
            b.init.apply(b, arguments);
            return b
          },
          init: function() {},
          mixIn: function(c) {
            for (var b in c) {
              c.hasOwnProperty(b) && (this[b] = c[b])
            }
            c.hasOwnProperty("toString") && (this.toString = c.toString)
          },
          clone: function() {
            return this.$super.extend(this)
          }
        }
      }(),
      k = g.WordArray = m.extend({
        init: function(b, a) {
          b = this.words = b || [];
          this.sigBytes = a != r ? a : 4 * b.length
        },
        toString: function(a) {
          return (a || n).stringify(this)
        },
        concat: function(d) {
          var c = this.words,
            a = d.words,
            e = this.sigBytes,
            d = d.sigBytes;
          this.clamp();
          if (e % 4) {
            for (var b = 0; b < d; b++) {
              c[e + b >>> 2] |= (a[b >>> 2] >>> 24 - 8 * (b % 4) & 255) << 24 - 8 * ((e + b) % 4)
            }
          } else {
            if (65535 < a.length) {
              for (b = 0; b < d; b += 4) {
                c[e + b >>> 2] = a[b >>> 2]
              }
            } else {
              c.push.apply(c, a)
            }
          }
          this.sigBytes += d;
          return this
        },
        clamp: function() {
          var b = this.words,
            a = this.sigBytes;
          b[a >>> 2] &= 4294967295 << 32 - 8 * (a % 4);
          b.length = l.ceil(a / 4)
        },
        clone: function() {
          var a = m.clone.call(this);
          a.words = this.words.slice(0);
          return a
        },
        random: function(c) {
          for (var b = [], a = 0; a < c; a += 4) {
            b.push(4294967296 * l.random() | 0)
          }
          return k.create(b, c)
        }
      }),
      h = s.enc = {},
      n = h.Hex = {
        stringify: function(d) {
          for (var c = d.words, d = d.sigBytes, a = [], e = 0; e < d; e++) {
            var b = c[e >>> 2] >>> 24 - 8 * (e % 4) & 255;
            a.push((b >>> 4).toString(16));
            a.push((b & 15).toString(16))
          }
          return a.join("")
        },
        parse: function(c) {
          for (var b = c.length, a = [], d = 0; d < b; d += 2) {
            a[d >>> 3] |= parseInt(c.substr(d, 2), 16) << 24 - 4 * (d % 8)
          }
          return k.create(a, b / 2)
        }
      },
      i = h.Latin1 = {
        stringify: function(c) {
          for (var b = c.words, c = c.sigBytes, a = [], d = 0; d < c; d++) {
            a.push(String.fromCharCode(b[d >>> 2] >>> 24 - 8 * (d % 4) & 255))
          }
          return a.join("")
        },
        parse: function(c) {
          for (var b = c.length, a = [], d = 0; d < b; d++) {
            a[d >>> 2] |= (c.charCodeAt(d) & 255) << 24 - 8 * (d % 4)
          }
          return k.create(a, b)
        }
      },
      f = h.Utf8 = {
        stringify: function(b) {
          try {
            return decodeURIComponent(escape(i.stringify(b)))
          } catch (a) {
            throw Error("Malformed UTF-8 data")
          }
        },
        parse: function(a) {
          return i.parse(unescape(encodeURIComponent(a)))
        }
      },
      o = g.BufferedBlockAlgorithm = m.extend({
        reset: function() {
          this._data = k.create();
          this._nDataBytes = 0
        },
        _append: function(a) {
          "string" == typeof a && (a = f.parse(a));
          this._data.concat(a);
          this._nDataBytes += a.sigBytes
        },
        _process: function(j) {
          var c = this._data,
            a = c.words,
            q = c.sigBytes,
            b = this.blockSize,
            d = q / (4 * b),
            d = j ? l.ceil(d) : l.max((d | 0) - this._minBufferSize, 0),
            j = d * b,
            q = l.min(4 * j, q);
          if (j) {
            for (var e = 0; e < j; e += b) {
              this._doProcessBlock(a, e)
            }
            e = a.splice(0, j);
            c.sigBytes -= q
          }
          return k.create(e, q)
        },
        clone: function() {
          var a = m.clone.call(this);
          a._data = this._data.clone();
          return a
        },
        _minBufferSize: 0
      });
    g.Hasher = o.extend({
      init: function() {
        this.reset()
      },
      reset: function() {
        o.reset.call(this);
        this._doReset()
      },
      update: function(a) {
        this._append(a);
        this._process();
        return this
      },
      finalize: function(a) {
        a && this._append(a);
        this._doFinalize();
        return this._hash
      },
      clone: function() {
        var a = o.clone.call(this);
        a._hash = this._hash.clone();
        return a
      },
      blockSize: 16,
      _createHelper: function(a) {
        return function(c, b) {
          return a.create(b).finalize(c)
        }
      },
      _createHmacHelper: function(a) {
        return function(c, b) {
          return p.HMAC.create(a, b).finalize(c)
        }
      }
    });
    var p = s.algo = {};
    return s
  }(Math);
(function() {
  var c = CryptoJS,
    d = c.lib.WordArray;
  c.enc.Base64 = {
    stringify: function(l) {
      var m = l.words,
        h = l.sigBytes,
        b = this._map;
      l.clamp();
      for (var l = [], n = 0; n < h; n += 3) {
        for (var i = (m[n >>> 2] >>> 24 - 8 * (n % 4) & 255) << 16 | (m[n + 1 >>> 2] >>> 24 - 8 * ((n + 1) % 4) & 255) << 8 | m[n + 2 >>> 2] >>> 24 - 8 * ((n + 2) % 4) & 255, a = 0; 4 > a && n + 0.75 * a < h; a++) {
          l.push(b.charAt(i >>> 6 * (3 - a) & 63))
        }
      }
      if (m = b.charAt(64)) {
        for (; l.length % 4;) {
          l.push(m)
        }
      }
      return l.join("")
    },
    parse: function(k) {
      var k = k.replace(/\s/g, ""),
        n = k.length,
        b = this._map,
        a = b.charAt(64);
      a && (a = k.indexOf(a), -1 != a && (n = a));
      for (var a = [], o = 0, i = 0; i < n; i++) {
        if (i % 4) {
          var m = b.indexOf(k.charAt(i - 1)) << 2 * (i % 4),
            l = b.indexOf(k.charAt(i)) >>> 6 - 2 * (i % 4);
          a[o >>> 2] |= (m | l) << 24 - 8 * (o % 4);
          o++
        }
      }
      return d.create(a, o)
    },
    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function(p) {
  function h(b, c, d, a, f, e, g) {
    b = b + (c & d | ~c & a) + f + g;
    return (b << e | b >>> 32 - e) + c
  }

  function i(b, c, d, a, f, e, g) {
    b = b + (c & a | d & ~a) + f + g;
    return (b << e | b >>> 32 - e) + c
  }

  function l(b, c, d, a, f, e, g) {
    b = b + (c ^ d ^ a) + f + g;
    return (b << e | b >>> 32 - e) + c
  }

  function r(b, c, d, a, f, e, g) {
    b = b + (d ^ (c | ~a)) + f + g;
    return (b << e | b >>> 32 - e) + c
  }
  var o = CryptoJS,
    m = o.lib,
    s = m.WordArray,
    m = m.Hasher,
    n = o.algo,
    k = [];
  (function() {
    for (var a = 0; 64 > a; a++) {
      k[a] = 4294967296 * p.abs(p.sin(a + 1)) | 0
    }
  })();
  n = n.MD5 = m.extend({
    _doReset: function() {
      this._hash = s.create([1732584193, 4023233417, 2562383102, 271733878])
    },
    _doProcessBlock: function(a, c) {
      for (var d = 0; 16 > d; d++) {
        var j = c + d,
          f = a[j];
        a[j] = (f << 8 | f >>> 24) & 16711935 | (f << 24 | f >>> 8) & 4278255360
      }
      for (var j = this._hash.words, f = j[0], e = j[1], g = j[2], b = j[3], d = 0; 64 > d; d += 4) {
        16 > d ? (f = h(f, e, g, b, a[c + d], 7, k[d]), b = h(b, f, e, g, a[c + d + 1], 12, k[d + 1]), g = h(g, b, f, e, a[c + d + 2], 17, k[d + 2]), e = h(e, g, b, f, a[c + d + 3], 22, k[d + 3])) : 32 > d ? (f = i(f, e, g, b, a[c + (d + 1) % 16], 5, k[d]), b = i(b, f, e, g, a[c + (d + 6) % 16], 9, k[d + 1]), g = i(g, b, f, e, a[c + (d + 11) % 16], 14, k[d + 2]), e = i(e, g, b, f, a[c + d % 16], 20, k[d + 3])) : 48 > d ? (f = l(f, e, g, b, a[c + (3 * d + 5) % 16], 4, k[d]), b = l(b, f, e, g, a[c + (3 * d + 8) % 16], 11, k[d + 1]), g = l(g, b, f, e, a[c + (3 * d + 11) % 16], 16, k[d + 2]), e = l(e, g, b, f, a[c + (3 * d + 14) % 16], 23, k[d + 3])) : (f = r(f, e, g, b, a[c + 3 * d % 16], 6, k[d]), b = r(b, f, e, g, a[c + (3 * d + 7) % 16], 10, k[d + 1]), g = r(g, b, f, e, a[c + (3 * d + 14) % 16], 15, k[d + 2]), e = r(e, g, b, f, a[c + (3 * d + 5) % 16], 21, k[d + 3]))
      }
      j[0] = j[0] + f | 0;
      j[1] = j[1] + e | 0;
      j[2] = j[2] + g | 0;
      j[3] = j[3] + b | 0
    },
    _doFinalize: function() {
      var b = this._data,
        c = b.words,
        d = 8 * this._nDataBytes,
        a = 8 * b.sigBytes;
      c[a >>> 5] |= 128 << 24 - a % 32;
      c[(a + 64 >>> 9 << 4) + 14] = (d << 8 | d >>> 24) & 16711935 | (d << 24 | d >>> 8) & 4278255360;
      b.sigBytes = 4 * (c.length + 1);
      this._process();
      b = this._hash.words;
      for (c = 0; 4 > c; c++) {
        d = b[c], b[c] = (d << 8 | d >>> 24) & 16711935 | (d << 24 | d >>> 8) & 4278255360
      }
    }
  });
  o.MD5 = m._createHelper(n);
  o.HmacMD5 = m._createHmacHelper(n)
})(Math);
(function() {
  var h = CryptoJS,
    j = h.lib,
    f = j.Base,
    g = j.WordArray,
    j = h.algo,
    i = j.EvpKDF = f.extend({
      cfg: f.extend({
        keySize: 4,
        hasher: j.MD5,
        iterations: 1
      }),
      init: function(a) {
        this.cfg = this.cfg.extend(a)
      },
      compute: function(c, e) {
        for (var b = this.cfg, k = b.hasher.create(), d = g.create(), v = d.words, a = b.keySize, b = b.iterations; v.length < a;) {
          m && k.update(m);
          var m = k.update(c).finalize(e);
          k.reset();
          for (var n = 1; n < b; n++) {
            m = k.finalize(m), k.reset()
          }
          d.concat(m)
        }
        d.sigBytes = 4 * a;
        return d
      }
    });
  h.EvpKDF = function(b, c, a) {
    return i.create(a).compute(b, c)
  }
})();
CryptoJS.lib.Cipher || function(i) {
  var n = CryptoJS,
    o = n.lib,
    r = o.Base,
    m = o.WordArray,
    h = o.BufferedBlockAlgorithm,
    s = n.enc.Base64,
    a = n.algo.EvpKDF,
    e = o.Cipher = h.extend({
      cfg: r.extend(),
      createEncryptor: function(b, d) {
        return this.create(this._ENC_XFORM_MODE, b, d)
      },
      createDecryptor: function(b, d) {
        return this.create(this._DEC_XFORM_MODE, b, d)
      },
      init: function(j, b, d) {
        this.cfg = this.cfg.extend(d);
        this._xformMode = j;
        this._key = b;
        this.reset()
      },
      reset: function() {
        h.reset.call(this);
        this._doReset()
      },
      process: function(b) {
        this._append(b);
        return this._process()
      },
      finalize: function(b) {
        b && this._append(b);
        return this._doFinalize()
      },
      keySize: 4,
      ivSize: 4,
      _ENC_XFORM_MODE: 1,
      _DEC_XFORM_MODE: 2,
      _createHelper: function() {
        return function(b) {
          return {
            encrypt: function(q, d, j) {
              return ("string" == typeof d ? f : g).encrypt(b, q, d, j)
            },
            decrypt: function(q, d, j) {
              return ("string" == typeof d ? f : g).decrypt(b, q, d, j)
            }
          }
        }
      }()
    });
  o.StreamCipher = e.extend({
    _doFinalize: function() {
      return this._process(!0)
    },
    blockSize: 1
  });
  var p = n.mode = {},
    k = o.BlockCipherMode = r.extend({
      createEncryptor: function(d, b) {
        return this.Encryptor.create(d, b)
      },
      createDecryptor: function(d, b) {
        return this.Decryptor.create(d, b)
      },
      init: function(d, b) {
        this._cipher = d;
        this._iv = b
      }
    }),
    p = p.CBC = function() {
      function d(v, u, q) {
        var j = this._iv;
        j ? this._iv = i : j = this._prevBlock;
        for (var t = 0; t < q; t++) {
          v[u + t] ^= j[t]
        }
      }
      var b = k.extend();
      b.Encryptor = b.extend({
        processBlock: function(u, q) {
          var j = this._cipher,
            t = j.blockSize;
          d.call(this, u, q, t);
          j.encryptBlock(u, q);
          this._prevBlock = u.slice(q, q + t)
        }
      });
      b.Decryptor = b.extend({
        processBlock: function(v, q) {
          var j = this._cipher,
            t = j.blockSize,
            u = v.slice(q, q + t);
          j.decryptBlock(v, q);
          d.call(this, v, q, t);
          this._prevBlock = u
        }
      });
      return b
    }(),
    l = (n.pad = {}).Pkcs7 = {
      pad: function(t, q) {
        for (var u = 4 * q, u = u - t.sigBytes % u, b = u << 24 | u << 16 | u << 8 | u, d = [], j = 0; j < u; j += 4) {
          d.push(b)
        }
        u = m.create(d, u);
        t.concat(u)
      },
      unpad: function(b) {
        b.sigBytes -= b.words[b.sigBytes - 1 >>> 2] & 255
      }
    };
  o.BlockCipher = e.extend({
    cfg: e.cfg.extend({
      mode: p,
      padding: l
    }),
    reset: function() {
      e.reset.call(this);
      var j = this.cfg,
        d = j.iv,
        j = j.mode;
      if (this._xformMode == this._ENC_XFORM_MODE) {
        var b = j.createEncryptor
      } else {
        b = j.createDecryptor, this._minBufferSize = 1
      }
      this._mode = b.call(j, this, d && d.words)
    },
    _doProcessBlock: function(d, b) {
      this._mode.processBlock(d, b)
    },
    _doFinalize: function() {
      var d = this.cfg.padding;
      if (this._xformMode == this._ENC_XFORM_MODE) {
        d.pad(this._data, this.blockSize);
        var b = this._process(!0)
      } else {
        b = this._process(!0), d.unpad(b)
      }
      return b
    },
    blockSize: 4
  });
  var c = o.CipherParams = r.extend({
      init: function(b) {
        this.mixIn(b)
      },
      toString: function(b) {
        return (b || this.formatter).stringify(this)
      }
    }),
    p = (n.format = {}).OpenSSL = {
      stringify: function(d) {
        var b = d.ciphertext,
          d = d.salt,
          b = (d ? m.create([1398893684, 1701076831]).concat(d).concat(b) : b).toString(s);
        return b = b.replace(/(.{64})/g, "$1\n")
      },
      parse: function(b) {
        var b = s.parse(b),
          j = b.words;
        if (1398893684 == j[0] && 1701076831 == j[1]) {
          var d = m.create(j.slice(2, 4));
          j.splice(0, 4);
          b.sigBytes -= 16
        }
        return c.create({
          ciphertext: b,
          salt: d
        })
      }
    },
    g = o.SerializableCipher = r.extend({
      cfg: r.extend({
        format: p
      }),
      encrypt: function(b, j, d, q) {
        var q = this.cfg.extend(q),
          t = b.createEncryptor(d, q),
          j = t.finalize(j),
          t = t.cfg;
        return c.create({
          ciphertext: j,
          key: d,
          iv: t.iv,
          algorithm: b,
          mode: t.mode,
          padding: t.padding,
          blockSize: b.blockSize,
          formatter: q.format
        })
      },
      decrypt: function(q, b, d, j) {
        j = this.cfg.extend(j);
        b = this._parse(b, j.format);
        return q.createDecryptor(d, j).finalize(b.ciphertext)
      },
      _parse: function(d, b) {
        return "string" == typeof d ? b.parse(d) : d
      }
    }),
    n = (n.kdf = {}).OpenSSL = {
      compute: function(b, d, j, q) {
        q || (q = m.random(8));
        b = a.create({
          keySize: d + j
        }).compute(b, q);
        j = m.create(b.words.slice(d), 4 * j);
        b.sigBytes = 4 * d;
        return c.create({
          key: b,
          iv: j,
          salt: q
        })
      }
    },
    f = o.PasswordBasedCipher = g.extend({
      cfg: g.cfg.extend({
        kdf: n
      }),
      encrypt: function(q, b, d, j) {
        j = this.cfg.extend(j);
        d = j.kdf.compute(d, q.keySize, q.ivSize);
        j.iv = d.iv;
        q = g.encrypt.call(this, q, b, d.key, j);
        q.mixIn(d);
        return q
      },
      decrypt: function(q, b, d, j) {
        j = this.cfg.extend(j);
        b = this._parse(b, j.format);
        d = j.kdf.compute(d, q.keySize, q.ivSize, b.salt);
        j.iv = d.iv;
        return g.decrypt.call(this, q, b, d.key, j)
      }
    })
}();
(function() {
  var k = CryptoJS,
    o = k.lib.BlockCipher,
    p = k.algo,
    s = [],
    m = [],
    h = [],
    a = [],
    e = [],
    g = [],
    r = [],
    l = [],
    n = [],
    f = [];
  (function() {
    for (var d = [], c = 0; 256 > c; c++) {
      d[c] = 128 > c ? c << 1 : c << 1 ^ 283
    }
    for (var j = 0, q = 0, c = 0; 256 > c; c++) {
      var v = q ^ q << 1 ^ q << 2 ^ q << 3 ^ q << 4,
        v = v >>> 8 ^ v & 255 ^ 99;
      s[j] = v;
      m[v] = j;
      var u = d[j],
        t = d[u],
        w = d[t],
        b = 257 * d[v] ^ 16843008 * v;
      h[j] = b << 24 | b >>> 8;
      a[j] = b << 16 | b >>> 16;
      e[j] = b << 8 | b >>> 24;
      g[j] = b;
      b = 16843009 * w ^ 65537 * t ^ 257 * u ^ 16843008 * j;
      r[v] = b << 24 | b >>> 8;
      l[v] = b << 16 | b >>> 16;
      n[v] = b << 8 | b >>> 24;
      f[v] = b;
      j ? (j = u ^ d[d[d[w ^ u]]], q ^= d[d[q]]) : j = q = 1
    }
  })();
  var i = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
    p = p.AES = o.extend({
      _doReset: function() {
        for (var c = this._key, b = c.words, d = c.sigBytes / 4, c = 4 * ((this._nRounds = d + 6) + 1), q = this._keySchedule = [], t = 0; t < c; t++) {
          if (t < d) {
            q[t] = b[t]
          } else {
            var j = q[t - 1];
            t % d ? 6 < d && 4 == t % d && (j = s[j >>> 24] << 24 | s[j >>> 16 & 255] << 16 | s[j >>> 8 & 255] << 8 | s[j & 255]) : (j = j << 8 | j >>> 24, j = s[j >>> 24] << 24 | s[j >>> 16 & 255] << 16 | s[j >>> 8 & 255] << 8 | s[j & 255], j ^= i[t / d | 0] << 24);
            q[t] = q[t - d] ^ j
          }
        }
        b = this._invKeySchedule = [];
        for (d = 0; d < c; d++) {
          t = c - d, j = d % 4 ? q[t] : q[t - 4], b[d] = 4 > d || 4 >= t ? j : r[s[j >>> 24]] ^ l[s[j >>> 16 & 255]] ^ n[s[j >>> 8 & 255]] ^ f[s[j & 255]]
        }
      },
      encryptBlock: function(b, c) {
        this._doCryptBlock(b, c, this._keySchedule, h, a, e, g, s)
      },
      decryptBlock: function(c, b) {
        var d = c[b + 1];
        c[b + 1] = c[b + 3];
        c[b + 3] = d;
        this._doCryptBlock(c, b, this._invKeySchedule, r, l, n, f, m);
        d = c[b + 1];
        c[b + 1] = c[b + 3];
        c[b + 3] = d
      },
      _doCryptBlock: function(b, c, d, j, q, u, v, t) {
        for (var x = this._nRounds, w = b[c] ^ d[0], y = b[c + 1] ^ d[1], A = b[c + 2] ^ d[2], z = b[c + 3] ^ d[3], B = 4, U = 1; U < x; U++) {
          var V = j[w >>> 24] ^ q[y >>> 16 & 255] ^ u[A >>> 8 & 255] ^ v[z & 255] ^ d[B++],
            W = j[y >>> 24] ^ q[A >>> 16 & 255] ^ u[z >>> 8 & 255] ^ v[w & 255] ^ d[B++],
            X = j[A >>> 24] ^ q[z >>> 16 & 255] ^ u[w >>> 8 & 255] ^ v[y & 255] ^ d[B++],
            z = j[z >>> 24] ^ q[w >>> 16 & 255] ^ u[y >>> 8 & 255] ^ v[A & 255] ^ d[B++],
            w = V,
            y = W,
            A = X
        }
        V = (t[w >>> 24] << 24 | t[y >>> 16 & 255] << 16 | t[A >>> 8 & 255] << 8 | t[z & 255]) ^ d[B++];
        W = (t[y >>> 24] << 24 | t[A >>> 16 & 255] << 16 | t[z >>> 8 & 255] << 8 | t[w & 255]) ^ d[B++];
        X = (t[A >>> 24] << 24 | t[z >>> 16 & 255] << 16 | t[w >>> 8 & 255] << 8 | t[y & 255]) ^ d[B++];
        z = (t[z >>> 24] << 24 | t[w >>> 16 & 255] << 16 | t[y >>> 8 & 255] << 8 | t[A & 255]) ^ d[B++];
        b[c] = V;
        b[c + 1] = W;
        b[c + 2] = X;
        b[c + 3] = z
      },
      keySize: 8
    });
  k.AES = o._createHelper(p)
})();
(function() {
  var B = CryptoJS;
  var A = B.lib;
  var u = A.WordArray;
  var p = A.BlockCipher;
  var t = B.algo;
  var o = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];
  var q = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];
  var r = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];
  var s = [{
    0: 8421888,
    268435456: 32768,
    536870912: 8421378,
    805306368: 2,
    1073741824: 512,
    1342177280: 8421890,
    1610612736: 8389122,
    1879048192: 8388608,
    2147483648: 514,
    2415919104: 8389120,
    2684354560: 33280,
    2952790016: 8421376,
    3221225472: 32770,
    3489660928: 8388610,
    3758096384: 0,
    4026531840: 33282,
    134217728: 0,
    402653184: 8421890,
    671088640: 33282,
    939524096: 32768,
    1207959552: 8421888,
    1476395008: 512,
    1744830464: 8421378,
    2013265920: 2,
    2281701376: 8389120,
    2550136832: 33280,
    2818572288: 8421376,
    3087007744: 8389122,
    3355443200: 8388610,
    3623878656: 32770,
    3892314112: 514,
    4160749568: 8388608,
    1: 32768,
    268435457: 2,
    536870913: 8421888,
    805306369: 8388608,
    1073741825: 8421378,
    1342177281: 33280,
    1610612737: 512,
    1879048193: 8389122,
    2147483649: 8421890,
    2415919105: 8421376,
    2684354561: 8388610,
    2952790017: 33282,
    3221225473: 514,
    3489660929: 8389120,
    3758096385: 32770,
    4026531841: 0,
    134217729: 8421890,
    402653185: 8421376,
    671088641: 8388608,
    939524097: 512,
    1207959553: 32768,
    1476395009: 8388610,
    1744830465: 2,
    2013265921: 33282,
    2281701377: 32770,
    2550136833: 8389122,
    2818572289: 514,
    3087007745: 8421888,
    3355443201: 8389120,
    3623878657: 0,
    3892314113: 33280,
    4160749569: 8421378
  }, {
    0: 1074282512,
    16777216: 16384,
    33554432: 524288,
    50331648: 1074266128,
    67108864: 1073741840,
    83886080: 1074282496,
    100663296: 1073758208,
    117440512: 16,
    134217728: 540672,
    150994944: 1073758224,
    167772160: 1073741824,
    184549376: 540688,
    201326592: 524304,
    218103808: 0,
    234881024: 16400,
    251658240: 1074266112,
    8388608: 1073758208,
    25165824: 540688,
    41943040: 16,
    58720256: 1073758224,
    75497472: 1074282512,
    92274688: 1073741824,
    109051904: 524288,
    125829120: 1074266128,
    142606336: 524304,
    159383552: 0,
    176160768: 16384,
    192937984: 1074266112,
    209715200: 1073741840,
    226492416: 540672,
    243269632: 1074282496,
    260046848: 16400,
    268435456: 0,
    285212672: 1074266128,
    301989888: 1073758224,
    318767104: 1074282496,
    335544320: 1074266112,
    352321536: 16,
    369098752: 540688,
    385875968: 16384,
    402653184: 16400,
    419430400: 524288,
    436207616: 524304,
    452984832: 1073741840,
    469762048: 540672,
    486539264: 1073758208,
    503316480: 1073741824,
    520093696: 1074282512,
    276824064: 540688,
    293601280: 524288,
    310378496: 1074266112,
    327155712: 16384,
    343932928: 1073758208,
    360710144: 1074282512,
    377487360: 16,
    394264576: 1073741824,
    411041792: 1074282496,
    427819008: 1073741840,
    444596224: 1073758224,
    461373440: 524304,
    478150656: 0,
    494927872: 16400,
    511705088: 1074266128,
    528482304: 540672
  }, {
    0: 260,
    1048576: 0,
    2097152: 67109120,
    3145728: 65796,
    4194304: 65540,
    5242880: 67108868,
    6291456: 67174660,
    7340032: 67174400,
    8388608: 67108864,
    9437184: 67174656,
    10485760: 65792,
    11534336: 67174404,
    12582912: 67109124,
    13631488: 65536,
    14680064: 4,
    15728640: 256,
    524288: 67174656,
    1572864: 67174404,
    2621440: 0,
    3670016: 67109120,
    4718592: 67108868,
    5767168: 65536,
    6815744: 65540,
    7864320: 260,
    8912896: 4,
    9961472: 256,
    11010048: 67174400,
    12058624: 65796,
    13107200: 65792,
    14155776: 67109124,
    15204352: 67174660,
    16252928: 67108864,
    16777216: 67174656,
    17825792: 65540,
    18874368: 65536,
    19922944: 67109120,
    20971520: 256,
    22020096: 67174660,
    23068672: 67108868,
    24117248: 0,
    25165824: 67109124,
    26214400: 67108864,
    27262976: 4,
    28311552: 65792,
    29360128: 67174400,
    30408704: 260,
    31457280: 65796,
    32505856: 67174404,
    17301504: 67108864,
    18350080: 260,
    19398656: 67174656,
    20447232: 0,
    21495808: 65540,
    22544384: 67109120,
    23592960: 256,
    24641536: 67174404,
    25690112: 65536,
    26738688: 67174660,
    27787264: 65796,
    28835840: 67108868,
    29884416: 67109124,
    30932992: 67174400,
    31981568: 4,
    33030144: 65792
  }, {
    0: 2151682048,
    65536: 2147487808,
    131072: 4198464,
    196608: 2151677952,
    262144: 0,
    327680: 4198400,
    393216: 2147483712,
    458752: 4194368,
    524288: 2147483648,
    589824: 4194304,
    655360: 64,
    720896: 2147487744,
    786432: 2151678016,
    851968: 4160,
    917504: 4096,
    983040: 2151682112,
    32768: 2147487808,
    98304: 64,
    163840: 2151678016,
    229376: 2147487744,
    294912: 4198400,
    360448: 2151682112,
    425984: 0,
    491520: 2151677952,
    557056: 4096,
    622592: 2151682048,
    688128: 4194304,
    753664: 4160,
    819200: 2147483648,
    884736: 4194368,
    950272: 4198464,
    1015808: 2147483712,
    1048576: 4194368,
    1114112: 4198400,
    1179648: 2147483712,
    1245184: 0,
    1310720: 4160,
    1376256: 2151678016,
    1441792: 2151682048,
    1507328: 2147487808,
    1572864: 2151682112,
    1638400: 2147483648,
    1703936: 2151677952,
    1769472: 4198464,
    1835008: 2147487744,
    1900544: 4194304,
    1966080: 64,
    2031616: 4096,
    1081344: 2151677952,
    1146880: 2151682112,
    1212416: 0,
    1277952: 4198400,
    1343488: 4194368,
    1409024: 2147483648,
    1474560: 2147487808,
    1540096: 64,
    1605632: 2147483712,
    1671168: 4096,
    1736704: 2147487744,
    1802240: 2151678016,
    1867776: 4160,
    1933312: 2151682048,
    1998848: 4194304,
    2064384: 4198464
  }, {
    0: 128,
    4096: 17039360,
    8192: 262144,
    12288: 536870912,
    16384: 537133184,
    20480: 16777344,
    24576: 553648256,
    28672: 262272,
    32768: 16777216,
    36864: 537133056,
    40960: 536871040,
    45056: 553910400,
    49152: 553910272,
    53248: 0,
    57344: 17039488,
    61440: 553648128,
    2048: 17039488,
    6144: 553648256,
    10240: 128,
    14336: 17039360,
    18432: 262144,
    22528: 537133184,
    26624: 553910272,
    30720: 536870912,
    34816: 537133056,
    38912: 0,
    43008: 553910400,
    47104: 16777344,
    51200: 536871040,
    55296: 553648128,
    59392: 16777216,
    63488: 262272,
    65536: 262144,
    69632: 128,
    73728: 536870912,
    77824: 553648256,
    81920: 16777344,
    86016: 553910272,
    90112: 537133184,
    94208: 16777216,
    98304: 553910400,
    102400: 553648128,
    106496: 17039360,
    110592: 537133056,
    114688: 262272,
    118784: 536871040,
    122880: 0,
    126976: 17039488,
    67584: 553648256,
    71680: 16777216,
    75776: 17039360,
    79872: 537133184,
    83968: 536870912,
    88064: 17039488,
    92160: 128,
    96256: 553910272,
    100352: 262272,
    104448: 553910400,
    108544: 0,
    112640: 553648128,
    116736: 16777344,
    120832: 262144,
    124928: 537133056,
    129024: 536871040
  }, {
    0: 268435464,
    256: 8192,
    512: 270532608,
    768: 270540808,
    1024: 268443648,
    1280: 2097152,
    1536: 2097160,
    1792: 268435456,
    2048: 0,
    2304: 268443656,
    2560: 2105344,
    2816: 8,
    3072: 270532616,
    3328: 2105352,
    3584: 8200,
    3840: 270540800,
    128: 270532608,
    384: 270540808,
    640: 8,
    896: 2097152,
    1152: 2105352,
    1408: 268435464,
    1664: 268443648,
    1920: 8200,
    2176: 2097160,
    2432: 8192,
    2688: 268443656,
    2944: 270532616,
    3200: 0,
    3456: 270540800,
    3712: 2105344,
    3968: 268435456,
    4096: 268443648,
    4352: 270532616,
    4608: 270540808,
    4864: 8200,
    5120: 2097152,
    5376: 268435456,
    5632: 268435464,
    5888: 2105344,
    6144: 2105352,
    6400: 0,
    6656: 8,
    6912: 270532608,
    7168: 8192,
    7424: 268443656,
    7680: 270540800,
    7936: 2097160,
    4224: 8,
    4480: 2105344,
    4736: 2097152,
    4992: 268435464,
    5248: 268443648,
    5504: 8200,
    5760: 270540808,
    6016: 270532608,
    6272: 270540800,
    6528: 270532616,
    6784: 8192,
    7040: 2105352,
    7296: 2097160,
    7552: 0,
    7808: 268435456,
    8064: 268443656
  }, {
    0: 1048576,
    16: 33555457,
    32: 1024,
    48: 1049601,
    64: 34604033,
    80: 0,
    96: 1,
    112: 34603009,
    128: 33555456,
    144: 1048577,
    160: 33554433,
    176: 34604032,
    192: 34603008,
    208: 1025,
    224: 1049600,
    240: 33554432,
    8: 34603009,
    24: 0,
    40: 33555457,
    56: 34604032,
    72: 1048576,
    88: 33554433,
    104: 33554432,
    120: 1025,
    136: 1049601,
    152: 33555456,
    168: 34603008,
    184: 1048577,
    200: 1024,
    216: 34604033,
    232: 1,
    248: 1049600,
    256: 33554432,
    272: 1048576,
    288: 33555457,
    304: 34603009,
    320: 1048577,
    336: 33555456,
    352: 34604032,
    368: 1049601,
    384: 1025,
    400: 34604033,
    416: 1049600,
    432: 1,
    448: 0,
    464: 34603008,
    480: 33554433,
    496: 1024,
    264: 1049600,
    280: 33555457,
    296: 34603009,
    312: 1,
    328: 33554432,
    344: 1048576,
    360: 1025,
    376: 34604032,
    392: 33554433,
    408: 34603008,
    424: 0,
    440: 34604033,
    456: 1049601,
    472: 1024,
    488: 33555456,
    504: 1048577
  }, {
    0: 134219808,
    1: 131072,
    2: 134217728,
    3: 32,
    4: 131104,
    5: 134350880,
    6: 134350848,
    7: 2048,
    8: 134348800,
    9: 134219776,
    10: 133120,
    11: 134348832,
    12: 2080,
    13: 0,
    14: 134217760,
    15: 133152,
    2147483648: 2048,
    2147483649: 134350880,
    2147483650: 134219808,
    2147483651: 134217728,
    2147483652: 134348800,
    2147483653: 133120,
    2147483654: 133152,
    2147483655: 32,
    2147483656: 134217760,
    2147483657: 2080,
    2147483658: 131104,
    2147483659: 134350848,
    2147483660: 0,
    2147483661: 134348832,
    2147483662: 134219776,
    2147483663: 131072,
    16: 133152,
    17: 134350848,
    18: 32,
    19: 2048,
    20: 134219776,
    21: 134217760,
    22: 134348832,
    23: 131072,
    24: 0,
    25: 131104,
    26: 134348800,
    27: 134219808,
    28: 134350880,
    29: 133120,
    30: 2080,
    31: 134217728,
    2147483664: 131072,
    2147483665: 2048,
    2147483666: 134348832,
    2147483667: 133152,
    2147483668: 32,
    2147483669: 134348800,
    2147483670: 134217728,
    2147483671: 134219808,
    2147483672: 134350880,
    2147483673: 134217760,
    2147483674: 134219776,
    2147483675: 0,
    2147483676: 133120,
    2147483677: 2080,
    2147483678: 131104,
    2147483679: 134350848
  }];
  var w = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679];
  var z = t.DES = p.extend({
    _doReset: function() {
      var f = this._key;
      var b = f.words;
      var g = [];
      for (var h = 0; h < 56; h++) {
        var j = o[h] - 1;
        g[h] = (b[j >>> 5] >>> (31 - j % 32)) & 1
      }
      var d = this._subKeys = [];
      for (var a = 0; a < 16; a++) {
        var i = d[a] = [];
        var e = r[a];
        for (var h = 0; h < 24; h++) {
          i[(h / 6) | 0] |= g[((q[h] - 1) + e) % 28] << (31 - h % 6);
          i[4 + ((h / 6) | 0)] |= g[28 + (((q[h + 24] - 1) + e) % 28)] << (31 - h % 6)
        }
        i[0] = (i[0] << 1) | (i[0] >>> 31);
        for (var h = 1; h < 7; h++) {
          i[h] = i[h] >>> ((h - 1) * 4 + 3)
        }
        i[7] = (i[7] << 5) | (i[7] >>> 27)
      }
      var c = this._invSubKeys = [];
      for (var h = 0; h < 16; h++) {
        c[h] = d[15 - h]
      }
    },
    encryptBlock: function(a, b) {
      this._doCryptBlock(a, b, this._subKeys)
    },
    decryptBlock: function(a, b) {
      this._doCryptBlock(a, b, this._invSubKeys)
    },
    _doCryptBlock: function(g, a, c) {
      this._lBlock = g[a];
      this._rBlock = g[a + 1];
      y.call(this, 4, 252645135);
      y.call(this, 16, 65535);
      x.call(this, 2, 858993459);
      x.call(this, 8, 16711935);
      y.call(this, 1, 1431655765);
      for (var e = 0; e < 16; e++) {
        var i = c[e];
        var b = this._lBlock;
        var d = this._rBlock;
        var h = 0;
        for (var j = 0; j < 8; j++) {
          h |= s[j][((d ^ i[j]) & w[j]) >>> 0]
        }
        this._lBlock = d;
        this._rBlock = b ^ h
      }
      var f = this._lBlock;
      this._lBlock = this._rBlock;
      this._rBlock = f;
      y.call(this, 1, 1431655765);
      x.call(this, 8, 16711935);
      x.call(this, 2, 858993459);
      y.call(this, 16, 65535);
      y.call(this, 4, 252645135);
      g[a] = this._lBlock;
      g[a + 1] = this._rBlock
    },
    keySize: 64 / 32,
    ivSize: 64 / 32,
    blockSize: 64 / 32
  });

  function y(a, c) {
    var b = ((this._lBlock >>> a) ^ this._rBlock) & c;
    this._rBlock ^= b;
    this._lBlock ^= b << a
  }

  function x(a, c) {
    var b = ((this._rBlock >>> a) ^ this._lBlock) & c;
    this._lBlock ^= b;
    this._rBlock ^= b << a
  }
  B.DES = p._createHelper(z);
  var v = t.TripleDES = p.extend({
    _doReset: function() {
      var b = this._key;
      var a = b.words;
      this._des1 = z.createEncryptor(u.create(a.slice(0, 2)));
      this._des2 = z.createEncryptor(u.create(a.slice(2, 4)));
      this._des3 = z.createEncryptor(u.create(a.slice(4, 6)))
    },
    encryptBlock: function(a, b) {
      this._des1.encryptBlock(a, b);
      this._des2.decryptBlock(a, b);
      this._des3.encryptBlock(a, b)
    },
    decryptBlock: function(a, b) {
      this._des3.decryptBlock(a, b);
      this._des2.encryptBlock(a, b);
      this._des1.decryptBlock(a, b)
    },
    keySize: 192 / 32,
    ivSize: 64 / 32,
    blockSize: 64 / 32
  });
  B.TripleDES = p._createHelper(v)
}());
(function(v) {
  var x = CryptoJS;
  var w = x.lib;
  var p = w.WordArray;
  var t = w.Hasher;
  var o = x.algo;
  var s = [];
  (function() {
    for (var a = 0; a < 64; a++) {
      s[a] = (v.abs(v.sin(a + 1)) * 4294967296) | 0
    }
  }());
  var n = o.MD5 = t.extend({
    _doReset: function() {
      this._hash = p.create([1732584193, 4023233417, 2562383102, 271733878])
    },
    _doProcessBlock: function(c, f) {
      for (var e = 0; e < 16; e++) {
        var g = f + e;
        var b = c[g];
        c[g] = ((((b << 8) | (b >>> 24)) & 16711935) | (((b << 24) | (b >>> 8)) & 4278255360))
      }
      var h = this._hash.words;
      var i = h[0];
      var j = h[1];
      var a = h[2];
      var d = h[3];
      for (var e = 0; e < 64; e += 4) {
        if (e < 16) {
          i = q(i, j, a, d, c[f + e], 7, s[e]);
          d = q(d, i, j, a, c[f + e + 1], 12, s[e + 1]);
          a = q(a, d, i, j, c[f + e + 2], 17, s[e + 2]);
          j = q(j, a, d, i, c[f + e + 3], 22, s[e + 3])
        } else {
          if (e < 32) {
            i = u(i, j, a, d, c[f + ((e + 1) % 16)], 5, s[e]);
            d = u(d, i, j, a, c[f + ((e + 6) % 16)], 9, s[e + 1]);
            a = u(a, d, i, j, c[f + ((e + 11) % 16)], 14, s[e + 2]);
            j = u(j, a, d, i, c[f + (e % 16)], 20, s[e + 3])
          } else {
            if (e < 48) {
              i = m(i, j, a, d, c[f + ((e * 3 + 5) % 16)], 4, s[e]);
              d = m(d, i, j, a, c[f + ((e * 3 + 8) % 16)], 11, s[e + 1]);
              a = m(a, d, i, j, c[f + ((e * 3 + 11) % 16)], 16, s[e + 2]);
              j = m(j, a, d, i, c[f + ((e * 3 + 14) % 16)], 23, s[e + 3])
            } else {
              i = r(i, j, a, d, c[f + ((e * 3) % 16)], 6, s[e]);
              d = r(d, i, j, a, c[f + ((e * 3 + 7) % 16)], 10, s[e + 1]);
              a = r(a, d, i, j, c[f + ((e * 3 + 14) % 16)], 15, s[e + 2]);
              j = r(j, a, d, i, c[f + ((e * 3 + 5) % 16)], 21, s[e + 3])
            }
          }
        }
      }
      h[0] = (h[0] + i) | 0;
      h[1] = (h[1] + j) | 0;
      h[2] = (h[2] + a) | 0;
      h[3] = (h[3] + d) | 0
    },
    _doFinalize: function() {
      var c = this._data;
      var b = c.words;
      var a = this._nDataBytes * 8;
      var d = c.sigBytes * 8;
      b[d >>> 5] |= 128 << (24 - d % 32);
      b[(((d + 64) >>> 9) << 4) + 14] = ((((a << 8) | (a >>> 24)) & 16711935) | (((a << 24) | (a >>> 8)) & 4278255360));
      c.sigBytes = (b.length + 1) * 4;
      this._process();
      var f = this._hash.words;
      for (var g = 0; g < 4; g++) {
        var e = f[g];
        f[g] = (((e << 8) | (e >>> 24)) & 16711935) | (((e << 24) | (e >>> 8)) & 4278255360)
      }
    }
  });

  function q(g, h, b, d, a, e, f) {
    var c = g + ((h & b) | (~h & d)) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }

  function u(g, h, b, d, a, e, f) {
    var c = g + ((h & d) | (b & ~d)) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }

  function m(g, h, b, d, a, e, f) {
    var c = g + (h ^ b ^ d) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }

  function r(g, h, b, d, a, e, f) {
    var c = g + (b ^ (h | ~d)) + a + f;
    return ((c << e) | (c >>> (32 - e))) + h
  }
  x.MD5 = t._createHelper(n);
  x.HmacMD5 = t._createHmacHelper(n)
}(Math));
(function(k) {
  var l = CryptoJS;
  var p = l.lib;
  var i = p.Base;
  var m = p.WordArray;
  var j = l.x64 = {};
  var o = j.Word = i.extend({
    init: function(a, b) {
      this.high = a;
      this.low = b
    }
  });
  var n = j.WordArray = i.extend({
    init: function(a, b) {
      a = this.words = a || [];
      if (b != k) {
        this.sigBytes = b
      } else {
        this.sigBytes = a.length * 8
      }
    },
    toX32: function() {
      var b = this.words;
      var c = b.length;
      var e = [];
      for (var d = 0; d < c; d++) {
        var a = b[d];
        e.push(a.high);
        e.push(a.low)
      }
      return m.create(e, this.sigBytes)
    },
    clone: function() {
      var a = i.clone.call(this);
      var b = a.words = this.words.slice(0);
      var c = b.length;
      for (var d = 0; d < c; d++) {
        b[d] = b[d].clone()
      }
      return a
    }
  })
}());
(function() {
  var j = CryptoJS;
  var m = j.lib;
  var k = m.WordArray;
  var h = m.Hasher;
  var l = j.algo;
  var i = [];
  var n = l.SHA1 = h.extend({
    _doReset: function() {
      this._hash = k.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
    },
    _doProcessBlock: function(e, t) {
      var x = this._hash.words;
      var a = x[0];
      var b = x[1];
      var c = x[2];
      var d = x[3];
      var f = x[4];
      for (var g = 0; g < 80; g++) {
        if (g < 16) {
          i[g] = e[t + g] | 0
        } else {
          var v = i[g - 3] ^ i[g - 8] ^ i[g - 14] ^ i[g - 16];
          i[g] = (v << 1) | (v >>> 31)
        }
        var w = ((a << 5) | (a >>> 27)) + f + i[g];
        if (g < 20) {
          w += ((b & c) | (~b & d)) + 1518500249
        } else {
          if (g < 40) {
            w += (b ^ c ^ d) + 1859775393
          } else {
            if (g < 60) {
              w += ((b & c) | (b & d) | (c & d)) - 1894007588
            } else {
              w += (b ^ c ^ d) - 899497514
            }
          }
        }
        f = d;
        d = c;
        c = (b << 30) | (b >>> 2);
        b = a;
        a = w
      }
      x[0] = (x[0] + a) | 0;
      x[1] = (x[1] + b) | 0;
      x[2] = (x[2] + c) | 0;
      x[3] = (x[3] + d) | 0;
      x[4] = (x[4] + f) | 0
    },
    _doFinalize: function() {
      var b = this._data;
      var a = b.words;
      var d = this._nDataBytes * 8;
      var c = b.sigBytes * 8;
      a[c >>> 5] |= 128 << (24 - c % 32);
      a[(((c + 64) >>> 9) << 4) + 15] = d;
      b.sigBytes = a.length * 4;
      this._process()
    }
  });
  j.SHA1 = h._createHelper(n);
  j.HmacSHA1 = h._createHmacHelper(n)
}());
(function(r) {
  var t = CryptoJS;
  var s = t.lib;
  var n = s.WordArray;
  var p = s.Hasher;
  var m = t.algo;
  var k = [];
  var l = [];
  (function() {
    function a(e) {
      var f = r.sqrt(e);
      for (var g = 2; g <= f; g++) {
        if (!(e % g)) {
          return false
        }
      }
      return true
    }

    function b(e) {
      return ((e - (e | 0)) * 4294967296) | 0
    }
    var d = 2;
    var c = 0;
    while (c < 64) {
      if (a(d)) {
        if (c < 8) {
          k[c] = b(r.pow(d, 1 / 2))
        }
        l[c] = b(r.pow(d, 1 / 3));
        c++
      }
      d++
    }
  }());
  var q = [];
  var o = m.SHA256 = p.extend({
    _doReset: function() {
      this._hash = n.create(k.slice(0))
    },
    _doProcessBlock: function(O, P) {
      var K = this._hash.words;
      var G = K[0];
      var H = K[1];
      var J = K[2];
      var M = K[3];
      var a = K[4];
      var b = K[5];
      var c = K[6];
      var d = K[7];
      for (var e = 0; e < 64; e++) {
        if (e < 16) {
          q[e] = O[P + e] | 0
        } else {
          var Q = q[e - 15];
          var g = ((Q << 25) | (Q >>> 7)) ^ ((Q << 14) | (Q >>> 18)) ^ (Q >>> 3);
          var I = q[e - 2];
          var i = ((I << 15) | (I >>> 17)) ^ ((I << 13) | (I >>> 19)) ^ (I >>> 10);
          q[e] = g + q[e - 7] + i + q[e - 16]
        }
        var j = (a & b) ^ (~a & c);
        var R = (G & H) ^ (G & J) ^ (H & J);
        var f = ((G << 30) | (G >>> 2)) ^ ((G << 19) | (G >>> 13)) ^ ((G << 10) | (G >>> 22));
        var h = ((a << 26) | (a >>> 6)) ^ ((a << 21) | (a >>> 11)) ^ ((a << 7) | (a >>> 25));
        var L = d + h + j + l[e] + q[e];
        var N = f + R;
        d = c;
        c = b;
        b = a;
        a = (M + L) | 0;
        M = J;
        J = H;
        H = G;
        G = (L + N) | 0
      }
      K[0] = (K[0] + G) | 0;
      K[1] = (K[1] + H) | 0;
      K[2] = (K[2] + J) | 0;
      K[3] = (K[3] + M) | 0;
      K[4] = (K[4] + a) | 0;
      K[5] = (K[5] + b) | 0;
      K[6] = (K[6] + c) | 0;
      K[7] = (K[7] + d) | 0
    },
    _doFinalize: function() {
      var a = this._data;
      var d = a.words;
      var c = this._nDataBytes * 8;
      var b = a.sigBytes * 8;
      d[b >>> 5] |= 128 << (24 - b % 32);
      d[(((b + 64) >>> 9) << 4) + 15] = c;
      a.sigBytes = d.length * 4;
      this._process()
    }
  });
  t.SHA256 = p._createHelper(o);
  t.HmacSHA256 = p._createHmacHelper(o)
}(Math));
(function() {
  var v = CryptoJS;
  var u = v.lib;
  var r = u.Hasher;
  var q = v.x64;
  var s = q.Word;
  var m = q.WordArray;
  var n = v.algo;

  function p() {
    return s.create.apply(s, arguments)
  }
  var l = [p(1116352408, 3609767458), p(1899447441, 602891725), p(3049323471, 3964484399), p(3921009573, 2173295548), p(961987163, 4081628472), p(1508970993, 3053834265), p(2453635748, 2937671579), p(2870763221, 3664609560), p(3624381080, 2734883394), p(310598401, 1164996542), p(607225278, 1323610764), p(1426881987, 3590304994), p(1925078388, 4068182383), p(2162078206, 991336113), p(2614888103, 633803317), p(3248222580, 3479774868), p(3835390401, 2666613458), p(4022224774, 944711139), p(264347078, 2341262773), p(604807628, 2007800933), p(770255983, 1495990901), p(1249150122, 1856431235), p(1555081692, 3175218132), p(1996064986, 2198950837), p(2554220882, 3999719339), p(2821834349, 766784016), p(2952996808, 2566594879), p(3210313671, 3203337956), p(3336571891, 1034457026), p(3584528711, 2466948901), p(113926993, 3758326383), p(338241895, 168717936), p(666307205, 1188179964), p(773529912, 1546045734), p(1294757372, 1522805485), p(1396182291, 2643833823), p(1695183700, 2343527390), p(1986661051, 1014477480), p(2177026350, 1206759142), p(2456956037, 344077627), p(2730485921, 1290863460), p(2820302411, 3158454273), p(3259730800, 3505952657), p(3345764771, 106217008), p(3516065817, 3606008344), p(3600352804, 1432725776), p(4094571909, 1467031594), p(275423344, 851169720), p(430227734, 3100823752), p(506948616, 1363258195), p(659060556, 3750685593), p(883997877, 3785050280), p(958139571, 3318307427), p(1322822218, 3812723403), p(1537002063, 2003034995), p(1747873779, 3602036899), p(1955562222, 1575990012), p(2024104815, 1125592928), p(2227730452, 2716904306), p(2361852424, 442776044), p(2428436474, 593698344), p(2756734187, 3733110249), p(3204031479, 2999351573), p(3329325298, 3815920427), p(3391569614, 3928383900), p(3515267271, 566280711), p(3940187606, 3454069534), p(4118630271, 4000239992), p(116418474, 1914138554), p(174292421, 2731055270), p(289380356, 3203993006), p(460393269, 320620315), p(685471733, 587496836), p(852142971, 1086792851), p(1017036298, 365543100), p(1126000580, 2618297676), p(1288033470, 3409855158), p(1501505948, 4234509866), p(1607167915, 987167468), p(1816402316, 1246189591)];
  var t = [];
  (function() {
    for (var a = 0; a < 80; a++) {
      t[a] = p()
    }
  }());
  var o = n.SHA512 = r.extend({
    _doReset: function() {
      this._hash = m.create([p(1779033703, 4089235720), p(3144134277, 2227873595), p(1013904242, 4271175723), p(2773480762, 1595750129), p(1359893119, 2917565137), p(2600822924, 725511199), p(528734635, 4215389547), p(1541459225, 327033209)])
    },
    _doProcessBlock: function(bo, bi) {
      var bn = this._hash.words;
      var b = bn[0];
      var e = bn[1];
      var g = bn[2];
      var h = bn[3];
      var j = bn[4];
      var H = bn[5];
      var ah = bn[6];
      var al = bn[7];
      var aW = b.high;
      var aY = b.low;
      var a4 = e.high;
      var a6 = e.low;
      var bk = g.high;
      var c = g.low;
      var bE = h.high;
      var bG = h.low;
      var bM = j.high;
      var bP = j.low;
      var bp = H.high;
      var br = H.low;
      var aU = ah.high;
      var aV = ah.low;
      var a2 = al.high;
      var a3 = al.low;
      var a8 = aW;
      var be = aY;
      var bu = a4;
      var bw = a6;
      var aX = bk;
      var aZ = c;
      var a5 = bE;
      var a9 = bG;
      var a = bM;
      var i = bP;
      var bF = bp;
      var bH = br;
      var bO = aU;
      var a7 = aV;
      var bq = a2;
      var bt = a3;
      for (var aS = 0; aS < 80; aS++) {
        var a0 = t[aS];
        if (aS < 16) {
          var bg = a0.high = bo[bi + aS * 2] | 0;
          var bl = a0.low = bo[bi + aS * 2 + 1] | 0
        } else {
          var bm = t[aS - 15];
          var bc = bm.high;
          var bd = bm.low;
          var bQ = ((bd << 31) | (bc >>> 1)) ^ ((bd << 24) | (bc >>> 8)) ^ (bc >>> 7);
          var ba = ((bc << 31) | (bd >>> 1)) ^ ((bc << 24) | (bd >>> 8)) ^ ((bc << 25) | (bd >>> 7));
          var bA = t[aS - 2];
          var bf = bA.high;
          var bj = bA.low;
          var bs = ((bj << 13) | (bf >>> 19)) ^ ((bf << 3) | (bj >>> 29)) ^ (bf >>> 6);
          var bv = ((bf << 13) | (bj >>> 19)) ^ ((bj << 3) | (bf >>> 29)) ^ ((bf << 26) | (bj >>> 6));
          var bD = t[aS - 7];
          var bx = bD.high;
          var bz = bD.low;
          var bN = t[aS - 16];
          var by = bN.high;
          var aQ = bN.low;
          var bl = ba + bz;
          var bg = bQ + bx + ((bl >>> 0) < (ba >>> 0) ? 1 : 0);
          var bl = bl + bv;
          var bg = bg + bs + ((bl >>> 0) < (bv >>> 0) ? 1 : 0);
          var bl = bl + aQ;
          var bg = bg + by + ((bl >>> 0) < (aQ >>> 0) ? 1 : 0);
          a0.high = bg;
          a0.low = bl
        }
        var aR = (a & bF) ^ (~a & bO);
        var aT = (i & bH) ^ (~i & a7);
        var d = (a8 & bu) ^ (a8 & aX) ^ (bu & aX);
        var k = (be & bw) ^ (be & aZ) ^ (bw & aZ);
        var bB = ((be << 4) | (a8 >>> 28)) ^ ((a8 << 30) | (be >>> 2)) ^ ((a8 << 25) | (be >>> 7));
        var bC = ((a8 << 4) | (be >>> 28)) ^ ((be << 30) | (a8 >>> 2)) ^ ((be << 25) | (a8 >>> 7));
        var bK = ((i << 18) | (a >>> 14)) ^ ((i << 14) | (a >>> 18)) ^ ((a << 23) | (i >>> 9));
        var bL = ((a << 18) | (i >>> 14)) ^ ((a << 14) | (i >>> 18)) ^ ((i << 23) | (a >>> 9));
        var a1 = l[aS];
        var f = a1.high;
        var M = a1.low;
        var bJ = bt + bL;
        var bI = bq + bK + ((bJ >>> 0) < (bt >>> 0) ? 1 : 0);
        var bJ = bJ + aT;
        var bI = bI + aR + ((bJ >>> 0) < (aT >>> 0) ? 1 : 0);
        var bJ = bJ + M;
        var bI = bI + f + ((bJ >>> 0) < (M >>> 0) ? 1 : 0);
        var bJ = bJ + bl;
        var bI = bI + bg + ((bJ >>> 0) < (bl >>> 0) ? 1 : 0);
        var bh = bC + k;
        var bb = bB + d + ((bh >>> 0) < (bC >>> 0) ? 1 : 0);
        bq = bO;
        bt = a7;
        bO = bF;
        a7 = bH;
        bF = a;
        bH = i;
        i = (a9 + bJ) | 0;
        a = (a5 + bI + ((i >>> 0) < (a9 >>> 0) ? 1 : 0)) | 0;
        a5 = aX;
        a9 = aZ;
        aX = bu;
        aZ = bw;
        bu = a8;
        bw = be;
        be = (bJ + bh) | 0;
        a8 = (bI + bb + ((be >>> 0) < (bJ >>> 0) ? 1 : 0)) | 0
      }
      aY = b.low = (aY + be) | 0;
      b.high = (aW + a8 + ((aY >>> 0) < (be >>> 0) ? 1 : 0)) | 0;
      a6 = e.low = (a6 + bw) | 0;
      e.high = (a4 + bu + ((a6 >>> 0) < (bw >>> 0) ? 1 : 0)) | 0;
      c = g.low = (c + aZ) | 0;
      g.high = (bk + aX + ((c >>> 0) < (aZ >>> 0) ? 1 : 0)) | 0;
      bG = h.low = (bG + a9) | 0;
      h.high = (bE + a5 + ((bG >>> 0) < (a9 >>> 0) ? 1 : 0)) | 0;
      bP = j.low = (bP + i) | 0;
      j.high = (bM + a + ((bP >>> 0) < (i >>> 0) ? 1 : 0)) | 0;
      br = H.low = (br + bH) | 0;
      H.high = (bp + bF + ((br >>> 0) < (bH >>> 0) ? 1 : 0)) | 0;
      aV = ah.low = (aV + a7) | 0;
      ah.high = (aU + bO + ((aV >>> 0) < (a7 >>> 0) ? 1 : 0)) | 0;
      a3 = al.low = (a3 + bt) | 0;
      al.high = (a2 + bq + ((a3 >>> 0) < (bt >>> 0) ? 1 : 0)) | 0
    },
    _doFinalize: function() {
      var d = this._data;
      var c = d.words;
      var b = this._nDataBytes * 8;
      var a = d.sigBytes * 8;
      c[a >>> 5] |= 128 << (24 - a % 32);
      c[(((a + 128) >>> 10) << 5) + 31] = b;
      d.sigBytes = c.length * 4;
      this._process();
      this._hash = this._hash.toX32()
    },
    blockSize: 1024 / 32
  });
  v.SHA512 = r._createHelper(o);
  v.HmacSHA512 = r._createHmacHelper(o)
}());
CryptoJS.mode.CFB = (function() {
  var c = CryptoJS.lib.BlockCipherMode.extend();
  c.Encryptor = c.extend({
    processBlock: function(a, b) {
      var h = this._cipher;
      var g = h.blockSize;
      d.call(this, a, b, g, h);
      this._prevBlock = a.slice(b, b + g)
    }
  });
  c.Decryptor = c.extend({
    processBlock: function(a, b) {
      var j = this._cipher;
      var h = j.blockSize;
      var i = a.slice(b, b + h);
      d.call(this, a, b, h, j);
      this._prevBlock = i
    }
  });

  function d(a, b, k, n) {
    var m = this._iv;
    if (m) {
      var i = m.slice(0);
      this._iv = undefined
    } else {
      var i = this._prevBlock
    }
    n.encryptBlock(i, 0);
    for (var l = 0; l < k; l++) {
      a[b + l] ^= i[l]
    }
  }
  return c
}());
CryptoJS.mode.ECB = (function() {
  var b = CryptoJS.lib.BlockCipherMode.extend();
  b.Encryptor = b.extend({
    processBlock: function(d, a) {
      this._cipher.encryptBlock(d, a)
    }
  });
  b.Decryptor = b.extend({
    processBlock: function(d, a) {
      this._cipher.decryptBlock(d, a)
    }
  });
  return b
}());
CryptoJS.mode.OFB = (function() {
  var c = CryptoJS.lib.BlockCipherMode.extend();
  var d = c.Encryptor = c.extend({
    processBlock: function(a, b) {
      var n = this._cipher;
      var k = n.blockSize;
      var m = this._iv;
      var i = this._keystream;
      if (m) {
        i = this._keystream = m.slice(0);
        this._iv = undefined
      }
      n.encryptBlock(i, 0);
      for (var l = 0; l < k; l++) {
        a[b + l] ^= i[l]
      }
    }
  });
  c.Decryptor = d;
  return c
}());
CryptoJS.mode.CTR = (function() {
  var c = CryptoJS.lib.BlockCipherMode.extend();
  var d = c.Encryptor = c.extend({
    processBlock: function(a, b) {
      var p = this._cipher;
      var l = p.blockSize;
      var n = this._iv;
      var o = this._counter;
      if (n) {
        o = this._counter = n.slice(0);
        this._iv = undefined
      }
      var i = o.slice(0);
      p.encryptBlock(i, 0);
      o[l - 1] = (o[l - 1] + 1) | 0;
      for (var m = 0; m < l; m++) {
        a[b + m] ^= i[m]
      }
    }
  });
  c.Decryptor = d;
  return c
}());
CryptoJS.pad.ZeroPadding = {
  pad: function(f, e) {
    var d = e * 4;
    f.clamp();
    f.sigBytes += d - ((f.sigBytes % d) || d)
  },
  unpad: function(d) {
    var f = d.words;
    var e = d.sigBytes - 1;
    while (!((f[e >>> 2] >>> (24 - (e % 4) * 8)) & 255)) {
      e--
    }
    d.sigBytes = e + 1
  }
};
CryptoJS.pad.NoPadding = {
  pad: function() {},
  unpad: function() {}
};
CryptoJS.pad.Iso97971 = {
  pad: function(c, d) {
    c.concat(CryptoJS.lib.WordArray.create([2147483648], 1));
    CryptoJS.pad.ZeroPadding.pad(c, d)
  },
  unpad: function(b) {
    CryptoJS.pad.ZeroPadding.unpad(b);
    b.sigBytes--
  }
};
CryptoJS.pad.Iso10126 = {
  pad: function(h, f) {
    var e = f * 4;
    var g = e - h.sigBytes % e;
    h.concat(CryptoJS.lib.WordArray.random(g - 1)).concat(CryptoJS.lib.WordArray.create([g << 24], 1))
  },
  unpad: function(d) {
    var c = d.words[(d.sigBytes - 1) >>> 2] & 255;
    d.sigBytes -= c
  }
};
$KI.db = {
  changeversion: function(g, j, i, k, l, h) {
    if (window.openDatabase) {
      if (g) {
        g.changeVersion(j, i, k, l, h)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  executesql: function(h, g, i, f, j) {
    if (window.openDatabase) {
      if (h) {
        if (i && i[0] === null) {
          i = i.slice(1)
        }
        h.executeSql(g, i, f, j)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  opendatabase: function(m, e, j, l, i) {
    var n = this.db || null;
    i = i || kony_dummyForDBCallback;
    try {
      if (window.openDatabase) {
        if (!n) {
          n = openDatabase(m, e, j, l, i);
          this.db = n
        }
      } else {
        kony.print("Web Databases not supported")
      }
    } catch (k) {
      if (k == 2) {
        kony.print("opendatabase:Invalid database version.")
      } else {
        kony.print("opendatabase:Unknown error " + k + ".")
      }
      return null
    }
    return n
  },
  readtransaction: function(e, g, h, f) {
    if (window.openDatabase) {
      if (e) {
        e.readTransaction(g, h, f)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  sqlresultsetrowitem: function(f, e, d) {
    if (window.openDatabase) {
      if (d < e.rows.length) {
        return e.rows.item(d)
      } else {
        return null
      }
    } else {
      kony.print("Web Databases not supported")
    }
  },
  transaction: function(e, g, h, f) {
    if (window.openDatabase) {
      if (e) {
        e.transaction(g, h, f)
      }
    } else {
      kony.print("Web Databases not supported")
    }
  }
};

function kony_dummyForDBCallback() {}
if (typeof(localStorage) === "object" || kony.appinit.isIE7) {
  $KI.ds = {
    save: function(k, j, h) {
      if (localStorage) {
        try {
          localStorage.setItem(j, JSON.stringify(k))
        } catch (l) {
          if (l.name == "QUOTA_EXCEEDED_ERR") {
            var e = 0,
              i = "";
            if (localStorage.length === 0) {
              e = 707;
              i = "Private Browsing is switched ON"
            } else {
              e = 708;
              i = "Data storage limit has exceeded"
            }
            return {
              errcode: e,
              errmsg: i
            }
          }
        }
      } else {
        kony.print("localStorage not supported")
      }
    },
    read: function(c) {
      if (localStorage) {
        var d = JSON.parse(localStorage.getItem(c) || "null");
        return d
      } else {
        kony.print("localStorage readitem failed");
        return null
      }
    },
    Delete: function(b) {
      if (localStorage) {
        localStorage.removeItem(b);
        return true
      } else {
        kony.print("localStorage delete failed");
        return false
      }
    }
  };
  $KI.localstorage = {
    key: function(b) {
      return (localStorage.key(b - IndexJL))
    },
    getitem: function(c) {
      var d = JSON.parse(localStorage.getItem(c) || "null");
      return d
    },
    setitem: function(i, e) {
      var g = i,
        h = e;
      if (typeof i == "object") {
        for (x in i) {
          g = x
        }
        h = i[x]
      }
      try {
        localStorage.setItem(g, JSON.stringify(h))
      } catch (j) {
        if (j.name == "QUOTA_EXCEEDED_ERR") {
          if (localStorage.length === 0) {
            console.warn("Private Browsing is switched ON")
          } else {
            console.warn("Data storage limit has exceeded")
          }
        }
      }
    },
    removeitem: function(b) {
      localStorage.removeItem(b)
    },
    clear: function() {
      localStorage.clear()
    },
    length: function() {
      return localStorage.length
    }
  }
} else {
  kony.print("localStorage not supported")
}
kony.application = {
  createAppMenu: $KW.Appmenu && $KW.Appmenu.createappmenu,
  setCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.setcurrentappmenu,
  getCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.getcurrentappmenu,
  setAppMenuFocusByID: $KW.Appmenu && $KW.Appmenu.setappmenufocusbyid,
  addAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.addappmenuitemat,
  removeAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.removeappmenuitemat,
  setAppMenu: $KW.Appmenu && $KW.Appmenu.setappmenu,
  setAppMenuFocusIndex: $KW.Appmenu && $KW.Appmenu.setappmenufocusindex,
  showAppMenuItems: $KW.Appmenu && $KW.Appmenu.showappmenuitems,
  hideAppMenuItems: $KW.Appmenu && $KW.Appmenu.hideappmenuitems,
  setBMState: kony.bm.setBMState,
  resetBMState: kony.bm.resetBMState,
  getBMState: kony.bm.getBMState,
  getFormId: kony.bm.getFormId,
  addBMState: kony.bm.addBMState,
  removeBMState: kony.bm.removeBMState,
  exit: $KI.exit,
  getPreviousForm: $KW.Form && $KW.Form.getPreviousForm,
  getCurrentForm: $KW.Form && $KW.Form.getCurrentForm,
  removeGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.removegesturerecognizerforallforms,
  setGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.addgesturerecognizerforallforms,
  getApplicationMode: $KI.os && $KI.os.getapplicationmode,
  setApplicationMode: $KI.os && $KI.os.setapplicationmode,
  setApplicationInitializationEvents: $KI.setappevents,
  registerForIdleTimeout: $KI.appevents && $KI.appevents.registerforidletimeout,
  unregisterForIdleTimeout: $KI.appevents && $KI.appevents.unregisterforidletimeout,
  setApplicationBadgeValue: tobeimplemented,
  getApplicationBadgeValue: tobeimplemented,
  setAppMenuBadgeValue: tobeimplemented,
  getAppMenuBadgeValue: tobeimplemented,
  appReset: $KI.appreset,
  setAppHeaders: $KI.setappheaders,
  setAppFooters: $KI.setappfooters,
  setApplicationCallbacks: $KI.setapplicationcallbacks,
  setApplicationBehaviors: $KI.setapplicationbehaviors,
  showLoadingScreen: $KI.window && $KI.window.showLoadingScreen,
  dismissLoadingScreen: $KI.window && $KI.window.dismissLoadingScreen,
  openURL: $KI.window.openURL
};
kony.cloud = {};
kony.cloud.appevents = (function() {
  var a = {
    id: null,
    value: 0,
    cb: null,
    enabled: false,
    expired: false,
    lastInteraction: 0
  };
  return {
    timercb: function() {
      var b = $KW.Form.getCurrentForm();
      a.cb && a.cb(b)
    },
    registerforidletimeout: function(c, b) {
      if (!a.enabled) {
        a.value = c * 60 * 1000;
        a.id = setTimeout(kony.cloud.appevents.timercb, a.value);
        a.lastInteraction = new Date().getTime();
        a.enabled = true;
        a.expired = false;
        a.cb = b;
        $KG.__cloudidletimeout = a
      }
    },
    unregisterforidletimeout: function() {
      clearTimeout(a.id);
      a.enabled = false;
      $KG.__cloudidletimeout = ""
    },
    resettimer: function() {
      var b = new Date().getTime();
      if ((b - a.lastInteraction) >= a.value) {
        $KI.appevents.timercb();
        return
      } else {
        clearTimeout(a.id);
        a.id = setTimeout(kony.cloud.appevents.timercb, a.value);
        a.lastInteraction = b
      }
    }
  }
})();
kony.setUserID = function(b) {
  var a = new Array;
  a.push(b);
  kony.ds.save(a, "konyUserID")
};
kony.license = {};
kony.license.lastIdleTimeoutTime = 0;
kony.license.timeoutVal = 30;
kony.license.nextSession = true;
kony.metric = {};
kony.license.disableMetricReporting = function() {
  kony.ds.save(["true"], "LicenseDisableFlag")
};
kony.license.startLicenseService = function() {
  kony.setUserID = function(b) {
    var a = new Array;
    a.push(b);
    kony.ds.save(a, "konyUserID")
  };
  kony.metric.reportCallback = function(b, a) {
    kony.print("Status : " + b);
    kony.print("Result : " + a);
    if (b === 400) {
      if (a.opstatus === 0) {
        kony.ds.remove("konyCustomReportData")
      }
    }
  };
  kony.metric.report = function(h, e) {
    if (typeof(h) === "undefined" || typeof(e) === "undefined") {
      kony.print("Invalid parameters to kony.metric.report");
      return
    }
    if (typeof(e) !== "object") {
      kony.print("Invalid parameters to kony.metric.report");
      return
    }
    if (typeof(h) !== "string") {
      if (typeof h === "object") {
        if (typeof(h.id) === "undefined" || h.id === null || typeof(h.id) !== "string") {
          kony.print("Invalid parameters to kony.metric.report");
          return
        }
        h = h.id.toString()
      } else {
        kony.print("Invalid parameters to kony.metric.report");
        return
      }
    }
    var a = {};
    var b = kony.ds.read("konyCustomReportData");
    if (b === undefined || b === null) {
      b = new Array()
    }
    kony.ds.remove("konyCustomReportData");
    var d = {};
    var c = kony.ds.read("konyUUID");
    if (c !== undefined && c !== null && c.length > 0) {
      d.rsid = c[0]
    } else {
      d.rsid = new Date().getTime().toString()
    }
    d.fid = h;
    if (!h) {
      var f = document.getElementsByTagName("form")[0];
      if (f != null && (f.id != undefined || f.id != null)) {
        d.fid = f.id
      }
    }
    d.metrics = e;
    d.ts = kony.license.getCurrentDateTime();
    b.push(d);
    var g = "";
    if (appConfig.url !== undefined && appConfig.url !== null) {
      g = appConfig.url.slice(0, -9) + "CMS"
    }
    a.httpconfig = {
      timeout: 60
    };
    $KI.net.invokeserviceasync(g, a, function(j, i) {
      kony.print("Status : " + j);
      kony.print("Result : " + JSON.stringify(i));
      if (j === 400) {
        if (i.opstatus === 0) {
          kony.print("metrics data successfully sent")
        } else {
          var k = kony.ds.read("konyCustomReportData");
          if (!k) {
            k = new Array()
          }
          k.push(b);
          kony.ds.save(k, "konyCustomReportData")
        }
      }
    }, null, "metric", b)
  };
  kony.license.generateUUID = function() {
    var a = function() {
      return (((1 + Math.random()) * 65536) | 0).toString(16).substring(1)
    };
    return (new Date().getTime() + "-" + a() + "-" + a() + "-" + a())
  };
  kony.license.isCloud = function() {
    var a = kony.ds.read("LicenseDisableFlag");
    if (a && a[0] === "true") {
      return false
    }
    return true
  };
  kony.license.getCurrentDateTime = function() {
    var a, c, b;
    a = new Date();
    c = new Date().getUTCMonth() + 1;
    b = (("00" + a.getUTCFullYear()).slice(-4)) + "-" + (("00" + c).slice(-2)) + "-" + (("00" + a.getUTCDate()).slice(-2)) + " " + (("00" + a.getUTCHours()).slice(-2)) + ":" + (("00" + a.getUTCMinutes()).slice(-2)) + ":" + (("00" + a.getUTCSeconds()).slice(-2));
    return b
  };
  kony.license.appendLicenseTrackingKeys = function(g, c) {
    var e = {};
    if (kony.license.isCloud() === true) {
      e.plat = kony.os.deviceInfo().name;
      e.aid = appConfig.appId;
      e.aver = appConfig.appVersion;
      e.aname = appConfig.appName;
      var i = kony.ds.read("deviceID");
      if (!i) {
        i = kony.license.generateUUID().toString();
        kony.ds.save(i, "deviceID")
      }
      e.did = i;
      e.os = kony.os.deviceInfo().version;
      e.stype = "b2c";
      e.dm = kony.os.deviceInfo().model;
      e.ua = kony.os.userAgent();
      e.chnl = getChannel();
      e.plat = getPlatform();
      e.atype = "spa";
      var j = document.getElementsByTagName("form")[0];
      if (j != null && (j.id != undefined || j.id != null)) {
        e.fid = j.id
      }
      var f = $KI.ds.read("konyUserID");
      if (f !== undefined && f !== null && f.length > 0) {
        e.kuid = f[0]
      } else {
        e.kuid = ""
      }
      if (g === "session") {
        var b = new Array();
        b.push(kony.license.generateUUID().toString());
        kony.ds.save(b, "konyUUID");
        var d = kony.ds.read("konyOfflineAccessData");
        if (d === undefined || d === null) {
          d = new Array()
        }
        var a = new Array();
        a.push(b[0]);
        a.push(kony.license.getCurrentDateTime());
        d.push(a);
        kony.ds.save(d, "konyOfflineAccessData");
        if (d === undefined || d === null) {
          e.launchDates = a
        } else {
          e.launchDates = d
        }
        var h = new Array();
        e.metrics = h;
        e.svcid = "RegisterKonySession";
        kony.print("---------->LaunchDates : " + e.launchDates)
      } else {
        if (g === "metric") {
          if (c === undefined || c === null) {
            c = new Array()
          }
          e.reportData = c;
          e.svcid = "CaptureKonyCustomMetrics"
        } else {
          var b = kony.ds.read("konyUUID");
          if (b !== undefined && b !== null && b.length > 0) {
            e.rsid = b[0]
          } else {
            e.rsid = kony.license.generateUUID().toString()
          }
          var h = new Array();
          e.metrics = h
        }
      }
    }
    return e
  };
  kony.license.licenseUsageServiceCallback = function(c, a) {
    kony.print("Status : " + c);
    kony.print("Result : " + a);
    if (c === 400) {
      if (a.opstatus === 0) {
        kony.ds.remove("konyOfflineAccessData");
        kony.ds.remove("konyOfflineSessionsCount")
      } else {
        var d, b;
        b = kony.ds.read("konyOfflineSessionsCount");
        if (b === undefined || b === null || b.length < 1) {
          b = new Array();
          b.push(1)
        } else {
          d = b[0] + 1;
          b[0] = d
        }
        kony.ds.save(b, "konyOfflineSessionsCount");
        if (d >= 50) {
          alert("Maximum Offline Sessions Exceeded")
        }
      }
    }
  };
  kony.license.captureKonyLicenseUsage = function(g) {
    var d, e, f, a;
    var c = true;
    if (g === undefined || g === null) {
      g = false
    } else {
      if (g !== true) {
        g = false
      }
    }
    if (kony.license.isCloud() === false) {
      kony.print("Not Cloud");
      c = false
    }
    if (kony.ds.read("konyLastAccessTime") !== undefined && kony.ds.read("konyLastAccessTime") !== null) {
      d = new Date();
      e = new Date(kony.ds.read("konyLastAccessTime")[0]);
      f = d.getTime() - e.getTime();
      if (f < 1800000 && g === false) {
        c = false
      } else {
        kony.ds.remove("konyLastAccessTime")
      }
    }
    if (c === true) {
      a = "";
      if (window.location.protocol === "https:") {
        if (appConfig.secureurl !== undefined && appConfig.secureurl !== null) {
          a = appConfig.secureurl.slice(0, -9) + "IST"
        }
      } else {
        if (appConfig.url !== undefined && appConfig.url !== null) {
          a = appConfig.url.slice(0, -9) + "IST"
        }
      }
      var b = {};
      b.httpconfig = {};
      $KI.net.invokeserviceasync(a, b, kony.license.licenseUsageServiceCallback, null, "session")
    }
  };
  kony.license.backgroundTimeCapture = function() {
    if (kony.license.isCloud() === true) {
      var a = new Array();
      a.push(new Date().toString());
      kony.ds.save(a, "konyLastAccessTime")
    }
  };
  kony.license.clearLastAccess = function() {
    if (kony.license.isCloud() === true) {
      kony.ds.remove("konyLastAccessTime")
    }
  };
  kony.license.setAppCallbacksOverride = function() {
    var b = kony.application.setApplicationCallbacks;

    function a(c) {
      if (kony.license.isCloud() === true) {
        if (c !== undefined && c !== null) {
          if (c.onforeground !== undefined && c.onforeground !== null) {
            var f = c.onforeground;
            var h = function() {
              kony.license.captureKonyLicenseUsage(false);
              f()
            };
            c.onforeground = h
          }
          if (c.onbackground !== undefined && c.onbackground !== null) {
            var i = c.onbackground;
            var g = function() {
              kony.license.backgroundTimeCapture();
              i()
            };
            c.onbackground = g
          }
          if (c.onappterminate !== undefined && c.onappterminate !== null) {
            var e = c.onappterminate;
            var d = function() {
              kony.license.clearLastAccess();
              e()
            };
            c.onappterminate = d
          }
        }
      }
      return b(c)
    }
    kony.application.setApplicationCallbacks = a
  };
  kony.license.invokeServiceAsyncOverride = function() {
    var b = $KI.net.invokeserviceasync;

    function a(g, d, i, f, c, e) {
      if (kony.license.isCloud() === true) {
        if (d === undefined || d === null) {
          d = {}
        }
        if (d !== undefined && d !== null) {
          if (c !== undefined && c !== null) {
            d.konyreportingparams = h(d.konyreportingparams, c, e)
          } else {
            d.konyreportingparams = h(d.konyreportingparams, null, null)
          }
        }
      }
      return b(g, d, i, f);

      function h(o, j, k) {
        var m = kony.license.appendLicenseTrackingKeys(j, k);
        if (!o) {
          return JSON.stringify(m)
        } else {
          try {
            if (typeof(o) === "string") {
              o = JSON.parse(o)
            }
            for (var l in m) {
              if (typeof(o[l]) === "undefined") {
                o[l] = m[l]
              }
            }
            return JSON.stringify(o)
          } catch (n) {
            kony.print("unable to parse params " + o);
            return JSON.stringify(m)
          }
        }
      }
    }
    $KI.net.invokeserviceasync = a
  };
  kony.license.invokeServiceSyncOverride = function() {
    var b = $KI.net.invokeservicesync;

    function a(d, c, e) {
      if (kony.license.isCloud() === true) {
        if (c === undefined || c === null) {
          c = {}
        }
        if (c !== undefined && c !== null) {
          c.konyreportingparams = JSON.stringify(kony.license.appendLicenseTrackingKeys(null))
        }
      }
      return b(d, c, e)
    }
    $KI.net.invokeservicesync = a
  };
  kony.license.setAppInitializationEventsOverride = function() {
    var b = $KI.setappevents;

    function a(c) {
      if (kony.license.isCloud() === true) {
        kony.print("Registering session time out");
        kony.cloud.appevents.registerforidletimeout(30, cloudSessionCallback);
        if (c !== undefined && c !== null) {
          if (c.postappinit !== undefined && c.postappinit !== null) {
            var d = c.postappinit;
            var e = function() {
              kony.license.captureKonyLicenseUsage(true);
              var f = d();
              if (f !== undefined || f !== null) {
                return f
              }
            };
            c.postappinit = e
          } else {
            var e = function() {
              kony.license.captureKonyLicenseUsage(true)
            };
            c.postappinit = e
          }
        }
      }
      return b(c)
    }
    $KI.setappevents = a
  };
  kony.license.apiOverride = function() {
    var a = {
      onforeground: kony.license.captureKonyLicenseUsage,
      onbackground: kony.license.backgroundTimeCapture,
      onappterminate: kony.license.clearLastAccess
    };
    kony.license.invokeServiceAsyncOverride();
    kony.license.invokeServiceSyncOverride();
    kony.license.setAppInitializationEventsOverride()
  };
  kony.license.apiOverride()
};
kony.license.startLicenseService();

function cloudSessionCallback() {
  kony.ds.remove("konyLastAccessTime");
  kony.ds.remove("konyUUID");
  kony.ds.remove("konyCustomReportData");
  kony.ds.remove("konyOfflineAccessData");
  kony.license.captureKonyLicenseUsage();
  kony.cloud.appevents.unregisterforidletimeout();
  kony.cloud.appevents.registerforidletimeout(30, cloudSessionCallback)
}

function getPlatform() {
  if ((/android/gi).test(navigator.userAgent)) {
    return "android"
  } else {
    if ((/iphone|ipad|ipod/gi).test(navigator.userAgent)) {
      return "ios"
    } else {
      if ((/bb10/gi).test(navigator.userAgent) || (/blackberry/gi).test(navigator.userAgent)) {
        return "blackberry"
      } else {
        if ((/Windows/gi).test(navigator.userAgent)) {
          return "windows"
        } else {
          if ((/j2me/gi).test(navigator.userAgent)) {
            return "j2me"
          } else {
            return ""
          }
        }
      }
    }
  }
}

function getChannel() {
  if ((/hp-tablet|ipad|playbook/gi).test(navigator.userAgent) || ((/android/gi).test(navigator.userAgent) && !(/mobile/gi).test(navigator.userAgent))) {
    return "tablet"
  } else {
    if ((/mobile/gi).test(navigator.userAgent)) {
      return "mobile"
    } else {
      return "desktop"
    }
  }
};
$KW.Form = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Form", this.orientationHandler)
  },
  initializeView: function(g, e) {
    var a = [$KW.Label, $KW.Calendar, $KW.HStrip, $KW.Segment, $KW.ScrollBox, $KW.TabPane, $KW.Line, $KW.Switch, $KW.TextField, $KW.DataGrid, $KW.Media, $KW.MenuContainer, $KW.ComboBox, $KW.Slider, $KW.Map, $KW.FlexContainer, $KW.FlexScrollContainer, $KW.Browser];
    for (var c = 0; c < a.length; c++) {
      if (a[c]) {
        a[c].initializeView && a[c].initializeView(g)
      }
    }
    if (e) {
      $KW.Form.resizeForm(g)
    }
    var f = document.getElementsByTagName("body")[0];
    var d = f.style.width;
    if (d.indexOf("%") != -1) {
      d = d.replace("%", "");
      f.setAttribute("percentage", "true");
      var b = (screen.width / 100) * d;
      f.setAttribute("formWidth", b)
    }
    if (f.getAttribute("percentage") == "true") {
      $KW.Form.adjustBodyWidth(g)
    }
  },
  updateView: function(d, c, b, a) {
    switch (c) {
      case "title":
        document.title = b || $KG.apptitle || $KG.appid;
        d.i18n_title = "";
        break;
      case "padding":
        var e = document.getElementById(d.id);
        if (!$KG.needScroller) {
          e && (e.style[c] = $KU.joinArray(b, "% ") + "%")
        }
        break
    }
  },
  orientationHandler: function(d, b) {
    var a = $KG.allforms[d];
    if (a) {
      $KW.Form.setFormDimensions(a);
      $KW.Form.initializeFlexContainers(a);
      var c = $KU.returnEventReference(a.onorientationchange);
      c && c.call(a, a, b)
    }
  },
  setFormDimensions: function(b) {
    if ($KU.isFlexContainer(b)) {
      var c = document.getElementById(b.id);
      var a = document.getElementById(b.id + "_scroller");
      if (c && a) {
        c.style.height = a.offsetHeight + "px";
        c.style.width = a.offsetWidth + "px"
      }
    }
  },
  generateAppmenu: function(a) {
    var b = document.getElementById("appmenumore_container");
    if (b) {
      b.parentNode.removeChild(b)
    }
    if ($KG.__appmenu && a.needappmenu) {
      return $KW.Appmenu && $KW.Appmenu.render($KG.__appmenu)
    } else {
      return ""
    }
  },
  initializeTemplates: function(a) {
    $KW.touch.computeSnapWidths(a, "Segment");
    this.initializeTouchWidgets(a)
  },
  initializeTouchWidgets: function(b, a) {
    $KW.Scroller.initializeScrollBoxes(b);
    $KW.Scroller.initializePageViews(b);
    this.initializeView(b, a)
  },
  initializeFlexContainers: function(a) {
    $KG.isUILayedOut = false;
    if (!a) {
      return
    }
    var b = $KG.needScroller ? a.id + "_container" : a.id;
    $KW.touch.computeSnapWidths(b, "Segment");
    this.initializeFlexContainersInTemplate(a);
    this.initializeAllFlexContainers(a);
    $KG.isUILayedOut = true
  },
  initializeFlexContainersInTemplate: function(a) {
    if (a.headers && a.headers.length > 0) {
      this.initializeBox(a, a.headers[0], $KG.needScroller ? a.id + "_header" : "header_container")
    }
    if (a.footers && a.footers.length > 0) {
      this.initializeBox(a, a.footers[0], $KG.needScroller ? a.id + "_footer" : "footer_container")
    }
  },
  initializeBox: function(a, b, d) {
    if (b.wType == "FlexContainer") {
      var c = document.querySelector("#" + d + ' div[kwidgettype="FlexContainer"]');
      $KW.FlexContainer.forceLayout(b, c)
    } else {
      this.initializeFlexContainersInBox(b)
    }
  },
  initializeAllFlexContainers: function(a) {
    if ($KU.isFlexContainer(a)) {
      a.forceLayout();
      return
    }
    this.initializeFlexContainersInBox(a)
  },
  initializeFlexContainersInBox: function(c) {
    var e = c.ownchildrenref;
    var g = c.wType;
    for (var b = 0; b < e.length; b++) {
      var d = e[b];
      var a = d.wType;
      if (g == "TabPane" && !$KW.TabPane.isActiveTab(c, d)) {
        if (c.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          continue
        }
      }
      switch (a) {
        case "FlexContainer":
        case "FlexScrollContainer":
          d.forceLayout();
          break;
        case "Segment":
          var f = $KU.getNodeByModel(d);
          if (f) {
            if (d.layoutConfig.self) {
              $KU.needOptimization = false
            }
            d.isvisible && $KW.FlexContainer.adjustFlexContainers(d, f);
            if (d.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
              $KW.touch.computeWidths(f, d)
            }
            $KU.needOptimization = true
          }
          break
      }
      if ((d.wType == "HBox" || d.wType == "VBox" || d.wType == "TabPane" || d.wType == "ScrollBox") && d.ownchildrenref) {
        this.initializeFlexContainersInBox(d)
      }
    }
  },
  destroyTouchWidgets: function(a, b) {
    if (!b) {
      $KW.Scroller.destroyFormScroller(a)
    }
    $KW.Scroller.destroyScrollBoxes(a);
    $KW.Scroller.destroyImageStripStripViews(a);
    $KW.Scroller.destroyPageViews(a)
  },
  formRendered: function(a) {
    kony.events.browserback.updateURLWithLocation(a);
    $KW.Form.enlistSystemTimerActions();
    if ($KU.isWindowsPhone && $KU.isIE9) {
      window.scrollTo(0, 0)
    } else {
      if ($KG.nativeScroll) {
        window.scrollTo(0, 1)
      }
    }
  },
  resizeForm: function(i, c) {
    var h = $KG.allforms[i];
    if ($KG.nativeScroll) {
      var d = ($KU.isWindowsPhone && $KU.getPlatform().version == "7.5") ? ($KW.Utils.getViewPortHeight() + 10) : $KW.Utils.getViewPortHeight();
      document.body.style.minHeight = d + "px"
    }
    if (kony.appinit.isTablet && kony.appinit.isAndroid && (kony.constants.APPLICATION_MODE_HYBRID || kony.constants.APPLICATION_MODE_WRAPPER)) {
      document.body.style.minHeight = (screen.height / window.devicePixelRatio - window.screenTop) + "px"
    }
    if (h.resizeForm && $KG.nativeScroll) {
      var a = window.innerHeight || document.body.clientHeight;
      var b = document.getElementById(i);
      var g, f;
      var g = __MainContainer.clientHeight;
      var f = b.clientHeight;
      if (!c) {
        g = __MainContainer.__clientHeight = __MainContainer.clientHeight;
        f = b.__clientHeight = b.clientHeight
      } else {
        g = __MainContainer.__clientHeight;
        f = b.__clientHeight
      }
      if (g < a) {
        var e = a - g;
        f = f + e;
        b.style.minHeight = f + "px";
        if ($KU.isWindowsPhone && $KU.isIE9) {
          setTimeout(function() {
            window.scrollTo(0, 0)
          }, 10)
        } else {
          setTimeout(function() {
            window.scrollTo(0, 1)
          }, 10)
        }
      }
    }
  },
  enlistSystemTimerActions: function() {
    if ($KU.hashChange) {
      kony.events.addEventListener(window, "hashchange", kony.events.browserback.handleBrowserBackEvent)
    } else {
      var a = new kony.system.timers.TimerAction(kony.events.browserback.handleBrowserBackEvent, 300);
      kony.system.timers.registerTimerAction(a)
    }
  },
  delistSystemTimerActions: function() {
    kony.system.timers.clearTimerAction()
  },
  addChild: function(a, e, b) {
    if (($KG.__currentForm && a.id == $KG.__currentForm.id) || a.wType == "Popup") {
      var c = $KU.getElementById(a.id);
      if (a.wType == "Popup") {
        c = $KU.getElementById(a.id + "_body").children[0]
      }
      if (!c) {
        return
      }
      var d = "";
      if (e.length > 0) {
        d = this.renderChildren(a, e)
      }
      var f = document.createElement("div");
      f.innerHTML = d;
      while (f.children.length > 0) {
        -c.appendChild(f.children[0])
      }
      $KU.layoutNewWidgets(a, e);
      $KW.Utils.initializeNewWidgets(e)
    }
  },
  addChildAt: function(a, f, b) {
    if (($KG.__currentForm && a.id == $KG.__currentForm.id) || a.wType == "Popup") {
      var e = $KU.getElementById(a.id);
      if (a.wType == "Popup" && $KU.getElementById(a.id + "_body")) {
        e = $KU.getElementById(a.id + "_body").children[0]
      }
      if (!e) {
        return
      }
      var g = "";
      var d = $KU.isFlexContainer(a);
      if (d) {
        g = $KW.FlexContainer.renderChildren(a, [a[f.id]], {})
      } else {
        g = $KW.Form.generateWidget(a, a[f.id])
      }
      var c = document.createElement("div");
      c.innerHTML = g;
      var h = [f];
      e.insertBefore(c.childNodes[0], e.children[b] || null);
      $KU.layoutNewWidgets(a, h);
      $KW.Utils.initializeNewWidgets(h)
    }
  },
  DOMremove: function(a, b) {
    if ($KG.__currentForm && (a.id == $KG.__currentForm.id || a.wType == "Popup") && b) {
      var d = $KU.isFlexContainer(a);
      if (d) {
        var c = $KW.Utils.getWidgetNode(b);
        if (c) {
          c = c.parentNode;
          c.parentNode.removeChild(c)
        }
      } else {
        var c = document.getElementById(a.id + "_" + b.id);
        if (c) {
          c = $KU.returnParentChildBloatAdjustedNode(b, c);
          c.parentNode.removeChild(c)
        }
      }
    }
  },
  DOMremoveAt: function(a, b) {
    $KW.Form.DOMremove(a, a.ownchildrenref[b])
  },
  DOMremoveAll: function(a) {
    var b = document.getElementById(a.id);
    if (b) {
      b.innerHTML = ""
    }
  },
  add: function() {
    var a = arguments[0];
    if ("add" in a) {
      var b = [].slice.call(arguments, 1);
      a.add(b)
    }
  },
  addAt: function(a, c, b) {
    if (c == null) {
      return
    }
    a.addAt && a.addAt(c, b)
  },
  remove: function(a, b) {
    a.remove && a.remove(b)
  },
  removeAt: function(a, b) {
    if (a.removeAt) {
      return a.removeAt(b)
    }
  },
  widgets: function(a) {
    return a.widgets && a.widgets()
  },
  scrollToBeginning: function(a) {
    var b = $KU.getElementById(a.id + "_container");
    b && $KW.Utils.animateY((kony.appinit.isIE7 || kony.appinit.isIE8) ? document.documentElement.scrollTop : window.pageYOffset, 0)
  },
  scrollToEnd: function(a) {
    var b = $KU.getElementById(a.id + "_container");
    b && $KW.Utils.animateY((kony.appinit.isIE7 || kony.appinit.isIE8) ? document.documentElement.scrollTop : window.pageYOffset, b.scrollHeight)
  },
  scrollToWidget: function(a, b) {
    $KW.Widget.setfocus(b)
  },
  destroy: function(a) {
    if (a && "destroy" in a) {
      a.destroy()
    }
  },
  getCurrentForm: function() {
    return $KG.__currentForm
  },
  getPreviousForm: function() {
    return $KG.__previousForm
  },
  handleshow: function(a) {
    if ("show" in a) {
      a.show()
    }
  },
  generateWidget: function(a, f) {
    var c = new $KW.WidgetGenerationContext(a.id);
    var b = f.wType;
    var d = "";
    if (b == "Line" || b == "HBox" || b == "ScrollBox" || b == "TabPane") {
      c.setTopLevelBox(true);
      d += $KW[b] && $KW[b].render(f, c);
      c.setTopLevelBox(false)
    } else {
      if (kony.appinit.isIE7) {
        d += "<table class = 'ktable kwt100' style='table-layout:fixed;'>";
        d += "<tr class = 'kwt100' >";
        var e = $KW.skins.getWidgetAlignmentSkin(f);
        d += "<td class = 'kwt100 " + e + "' >";
        d += $KW[b].render(f, c);
        d += "</td></tr></table>"
      } else {
        if (b == "Image") {
          f.containerweight = 100
        }
        var e = $KW.skins.getWidgetAlignmentSkin(f);
        d += "<div class = ' kwt100 " + e + "' >";
        d += $KW[b] && $KW[b].render(f, c);
        d += "</div>"
      }
    }
    return d
  },
  render: function(e) {
    var h = "";
    var b = document.getElementsByTagName("body")[0];
    var c = $KU.getElementById("__MainContainer");
    if (!c) {
      b.innerHTML = "<div id='__MainContainer'>";
      c = $KU.getElementById("__MainContainer")
    }
    if ($KG.__previousForm) {
      var g = $KG.__previousForm.id + "_hint";
      var i = document.getElementById(g);
      if (i) {
        document.body.removeChild(i)
      }
    }
    h += "<div id='" + e.id + "_container' style='padding:" + $KU.joinArray(e.padding, "% ") + "%'>";
    h += e.header ? this.generateHeader(e.header, "header") : "";
    h += this.generateForm(e);
    h += e.footer ? this.generateHeader(e.footer, "footer") : "";
    h += "</div>";
    c.innerHTML = h;
    var a = document.createElement("div");
    var d = "<div id='appmenu_container' style='position:fixed;bottom:0px;width:100%'>" + this.generateAppmenu(e) + "</div>";
    a.innerHTML = d;
    c.appendChild(a.firstChild);
    if ($KW.Map && $KW.Map.isMainContaineraVailable == false) {
      $KW.Map.loadMapScripts()
    }
    var f = $KU.getElementById("appmenu_container");
    if (f) {
      f.parentNode.style.paddingBottom = f.offsetHeight + "px"
    }
    e.header && this.initializeTemplates(e.header);
    e.footer && this.initializeTemplates(e.footer);
    b.className = e.skin || "";
    document.title = e.title || $KG.apptitle || $KG.appid
  },
  generateForm: function(b) {
    var e = "";
    var a = "class=kwt100";
    e += "<form id='" + b.id + "' action= 'javascript:;' style='position:relative;' " + a + ">";
    if (b.children) {
      if (b.layouttype == constants.CONTAINER_LAYOUT_GRID) {
        var d = new $KW.WidgetGenerationContext(b.id);
        e += $KW.Grid.render(b, d)
      } else {
        var c = b.widgets();
        e += this.renderChildren(b, c)
      }
    }
    e += "</form>";
    return e
  },
  renderChildren: function(a, b) {
    var e = "";
    if (a.layouttype == kony.flex.VBOX_LAYOUT) {
      for (var d = 0; d < b.length; d++) {
        var f = b[d];
        e += $KW.Form.generateWidget(a, f)
      }
    } else {
      var c = new $KW.WidgetGenerationContext(a.id);
      e += $KW.FlexContainer.renderChildren(a, b, c)
    }
    return e
  },
  generateHeader: function(a, b) {
    var c = "";
    c += "<div id='" + b + "_container' class='kwt100'>";
    c += this.generateTemplate(a, b);
    c += "</div>";
    return c
  },
  generateTemplate: function(c, f, e) {
    var a = kony.model.getWidgetModel(c);
    var g = "";
    if (a.children) {
      if (e && e.rowtemplate) {
        return $KW[e.rowtemplate.wType].render(a, e)
      }
      g = "<div id='" + a.id + "' kformname=" + a.pf + "'";
      if (f == "menu" || f == "menuitem") {
        if (a.skin) {
          g += " class='" + a.skin + "'"
        }
        g += " mtype='" + f + "' "
      }
      if (e && e.menuType === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && f == "menu") {
        g += " class='toggle' "
      }
      g += ">";
      for (var d = IndexJL; d < a.children.length; d++) {
        var h = a[a.children[d]];
        var b = new $KW.WidgetGenerationContext(a.id);
        if (e) {
          b.tabpaneID = e.tabpaneID;
          b.container = e.container
        }
        b.setTopLevelBox(true);
        g += $KW[h.wType].render(h, b);
        b.setTopLevelBox(false)
      }
      g += "</div>"
    }
    return g
  },
  show: function(a) {
    if ($KG.appbehaviors.recording == true) {
      this.removeDomChangeEvents()
    }
    if ($KG.localization && !$KG.i18nInitialized) {
      $KI.i18n.setdefaultlocale($KG.defaultlocale, $KW.Form.extendShow(a))
    } else {
      $KW.Form.extendShow(a)()
    }
  },
  extendShow: function(a) {
    return function() {
      if (a) {
        if (a.enabledforidletimeout && $KG.__idletimeout && $KG.__idletimeout.expired && $KG.__idletimeout.enabled) {
          $KG.__idletimeout.cb && $KG.__idletimeout.cb(a);
          $KG.__idletimeout.expired = false;
          $KG.__idletimeout.cb = null;
          return
        }
        $KW.Popup.dismiss(null, true);
        if (!$KG.transitAll) {
          $KG.transitAll = true
        }
        if (!a.initialized) {}
        var e = $KG.__currentForm;
        if (e && e.onhide && e.id != a.id) {
          var d = $KU.returnEventReference(e.onhide);
          d && d.call(e, e)
        }
        if (a.preshow) {
          var c = $KU.returnEventReference(a.preshow);
          c && c.call(a, a)
        }
        if ($KG.__currentForm) {
          $KG.__previousForm = $KG.__currentForm
        }
        var h = false;
        $KG.__currentForm = a;
        var b = $KG.__previousForm;
        if (b && b.id == a.id) {
          h = true
        }
        if (!h) {
          if ($KG.localization) {
            $KI.i18n.translateFormModel(a);
            var g = a.header;
            if (g) {
              $KI.i18n.translateFormModel(window[g])
            }
            var f = a.footer;
            if (f) {
              $KI.i18n.translateFormModel(window[f])
            }
          }
          if (b) {
            if (b.retainscrollposition) {
              b.y = window.pageYOffset || document.documentElement.scrollTop
            }
            $KW.Form.destroyTouchWidgets(b.id)
          }
          $KW.Form.render(a);
          $KW.Form.formRendered(a.id);
          $KW.Form.adjustBodyWidth(a.id);
          $KW.Form.setFormHeight(a);
          $KW.Form.initializeFlexContainers(a);
          $KW.Utils.initializeGestures(a);
          if ($KU.isFlexContainer(a)) {
            $KW.Utils.initializeScrollEvents(document.querySelectorAll("#" + a.id), a)
          }
          $KW.Utils.initializeGestures({
            formmodel: a
          });
          $KW.Form.applyTransition($KG.__previousForm, a);
          $KW.Utils.initializeTemplateGestures();
          if (!kony.system.activity.hasActivity()) {
            $KW.Utils.removeBlockUISkin();
            $KW.unLoadWidget()
          }
          if (kony.constants.APPSTATE === 0) {
            kony.constants.APPSTATE = 1;
            if (!kony.events.isFrameworkEventsRegistered) {
              kony.events.registerDocumentEvents()
            }
            $KIO.fs.init()
          }
        }
        $KW.TPW.renderWidget(a.id);
        a.initialized = true
      }
    }
  },
  applyTransition: function(f, i) {
    var b, h;
    b = f && $KU.getElementById(f.id + "_container");
    h = $KU.getElementById(i.id + "_container");
    f && $KU.isFlexContainer(f) && clearInterval(f.scrollerTimer);
    var a, d;
    a = (f && f.outtransitionconfig) ? f.outtransitionconfig.formTransition || f.outtransitionconfig.formtransition : "";
    d = (i.intransitionconfig) ? i.intransitionconfig.formTransition || i.intransitionconfig.formtransition : "";
    if (!$KG.disableTransition && ((d && d.toLowerCase() != "none") || (a && a.toLowerCase() != "none"))) {
      var e, c;
      if (!d || d.toLowerCase() == "none") {
        c = $KW.formTransitionsMatrix[a]
      } else {
        c = $KW.formTransitionsMatrix[d]
      }
      if (!a || a.toLowerCase() == "none") {
        e = $KW.formEndTransitionsMatrix[d]
      } else {
        e = $KW.formEndTransitionsMatrix[a]
      }
      if (b) {
        b.style.zIndex = 1
      }
      if (h) {
        h.style.zIndex = 2;
        var g = (kony.appinit.isFirefox || kony.appinit.isIE10 || kony.appinit.isIE11) ? "animationend" : (vendor + "AnimationEnd");
        i.__ev = function(m, n, j, k, l) {
          return function(o) {
            if (!o) {
              o = window.event
            }
            j.__ev = "";
            if (o.type == l) {
              kony.events.removeEventListener(n, o.type, arguments.callee);
              this.style[vendor + "AnimationName"] = ""
            }
            $KW.Form.endTransition(m, n, j, k)
          }
        }(b, h, i, f, g);
        kony.events.addEventListener(h, g, i.__ev);
        if (b) {
          b.style[vendor + "AnimationDuration"] = "0.5s";
          b.style[vendor + "AnimationName"] = e
        }
        h.style[vendor + "AnimationDuration"] = "0.5s";
        h.style[vendor + "AnimationName"] = c;
        $KU.removeClassName(h, "hidden");
        h.style.display = ""
      }
    } else {
      $KU.removeClassName(h, "hidden");
      h.style.display = "";
      this.endTransition(b, h, i, f)
    }
  },
  endTransition: function(h, d, f, b) {
    if (h) {
      if (b.__ev) {
        b.__ev()
      }
      h.style.display = "none";
      var a = $KU.getElementById("__MainContainer");
      a.removeChild(h)
    }
    $KW.Form.initializeTouchWidgets(f.id);
    var e = document.querySelectorAll("[name=map_canvas]")[0];
    var c = $KG.mapScriptLoaded;
    if (e && c) {
      $KW.Map.setUpInteractiveCanvasMap()
    }
    $KG.__previousForm && window.scrollTo(0, 0);
    if (f.retainscrollposition) {
      if (typeof f.y == "undefined") {
        f.y = 0
      }
      window.scrollTo(0, f.y)
    }
    if (f.postshow) {
      var g = $KU.returnEventReference(f.postshow);
      g && g.call(f, f)
    }
  },
  adjustBodyWidth: function(g) {
    var f = document.getElementsByTagName("body")[0];
    var d = f.style.width;
    var b = f.getAttribute("formWidth");
    if (!b) {
      return
    }
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      f.style.overflow = "auto";
      b = b - 5
    } else {
      f.style["overflow-x"] = "auto";
      f.style.overflowX = "auto"
    }
    var a = document.getElementById(g + "_wrapper");
    var c;
    if (a) {
      c = a.offsetWidth - a.clientWidth
    } else {
      c = 17
    }
    var e = document.body.scrollHeight - (window.innerHeight || document.documentElement.clientHeight);
    if (e > 0) {
      f.style.width = (b - c) + "px"
    } else {
      f.style.width = b + "px"
    }
  },
  setFormHeight: function(b) {
    if ($KU.isFlexContainer(b)) {
      var d = $KU.getElementById(b.id);
      var c = parseInt($KU.getStyle(document.body, "border-top-width"), 10);
      var a = parseInt($KU.getStyle(document.body, "border-bottom-width"), 10);
      d.style.height = ($KU.getWindowHeight() - (c + a)) + "px";
      d.style.overflowY = "auto";
      d.style.overflowX = "hidden";
      b.scrollerTimer = setInterval(function(e) {
        return function() {
          var g = e.frame;
          var f = $KU.getElementById(e.id);
          if (f && g.width != f.offsetWidth) {
            $KW.Form.initializeFlexContainers(e)
          }
        }
      }(b), 1000)
    }
  }
};
var domChangeObserver = null;
$KW.Appmenu = {
  focusIndex: "",
  initialize: function() {
    kony.events.addEvent("click", "Appmenu", this.eventHandler)
  },
  updateView: function(e, d, c, b, a) {},
  render: function(p, s) {
    var b = $KG.__appmenu;
    var t = b.data;
    var a = b.data.length;
    var o = false;
    var e = 0;
    for (var w = IndexJL; w < t.length; w++) {
      if (t[w][IndexJL + 4]) {
        e++
      }
    }
    var y = "";
    var j = 25;
    if ((e + IndexJL) > 4) {
      o = true;
      y = "kwt" + (100 / 5);
      j = Math.floor(100 / 5)
    } else {
      y = "kwt" + (100 / e);
      j = Math.floor(100 / e)
    }
    j = j + "%";
    var d = "";
    if (!s) {
      var c = "";
      if ($KU.isTablet || $KU.isMob) {
        c = "appmenu_scroller";
        var z = $KG.__currentForm;
        if (z.dockableappmenu === false || $KG.nativeScroll) {
          c += " relativePos"
        } else {
          c += " absolutePos"
        }
      }
      d += "<div id='konyappmenudiv'  class='" + c + "'>"
    }
    d += "<div class='kbasemargin kwt100 ktable' style='table-layout:fixed;' ><div class='kwt100 krow'>";
    if (o) {
      a = IndexJL + 4
    }
    var n = 0;
    var u = $KW.Appmenu.focusIndex;
    var l;
    for (var w = IndexJL, v = IndexJL - 1; w < t.length; w++) {
      if (u !== "" && u === w && b.focusskin) {
        l = b.focusskin || ""
      } else {
        l = b.skin || ""
      }
      if (u !== "" && u === w && b.focusskin) {
        l = b.focusskin || ""
      } else {
        l = b.skin || ""
      }
      if (t[w][IndexJL + 4]) {
        v++;
        var f = "";
        var h = t[w][1 + IndexJL] || "";
        var r = $KU.getImageURL(t[w][2 + IndexJL]) || "";
        if ($KG.localization && h.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
          h = $KU.getI18NValue(h)
        }
        d += "<div style='width:" + j + ";' class='" + l + " middlecenteralign kcell' index='" + w + "'><a id='" + t[w][IndexJL] + "' " + f + " href='#' kwidgettype='Appmenu' event='yes' index='" + w + "' style='text-decoration:none;'><div>";
        if (r) {
          d += "<img  style='border:none;' src='" + r + "' width='30px' height='30px' align='middle'/>"
        }
        d += "</div><div><label class='" + l + "' style='background:inherit; border: none; white-space:pre-wrap; 	word-wrap:break-word; '>" + h + "</label></div></a></div>";
        if (o && v == 3) {
          n = w + 1;
          break
        }
      }
    }
    if (o) {
      l = b.skin || "";
      d += "<div id='konyappmenudiv_more' class='" + l + " middlecenteralign  kcell' style='width:" + j + ";'><a id='appmenumore' href='#' kwidgettype='Appmenu' event='yes' index='5' style='text-decoration:none;'><div>";
      d += "<img  style='border:none;' src='" + $KU.getImageURL("appmore.png") + "' width='30px' height='30px' align='middle' kwidgettype='Appmenu'/></div><div><label class='" + l + "' style='background:inherit; border: none;' kwidgettype='Appmenu'>more</label></div></a></div>";
      var m = $KG.nativeScroll ? "position:fixed" : "height:auto;top:0px;";
      var q = "<div id='appmenumore_container' class='popupcontainer absoluteContainer' dummy='' style='display: none;z-index: 11; " + m + "'><div id='__popuplayer' style='opacity:0;filter:alpha(opacity=0);' class='popuplayer absoluteContainer' dummy=''></div><div id='more' class='frm' style='z-index: 9; position: absolute; padding: 0%; right:0%;bottom:0px; -webkit-animation: 1s;' dummy=''><div id='containerLayer' style='display:table;' class='container'>";
      for (var w = n; w < t.length; w++) {
        if (t[w][IndexJL + 4]) {
          var f = t[w][IndexJL + 3];
          if (f) {
            f = "closure='" + f + "'"
          } else {
            f = ""
          }
          var h = t[w][1 + IndexJL] || "";
          var r = $KU.getImageURL(t[w][2 + IndexJL]) || "";
          if ($KG.localization && h.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
            h = $KU.getI18NValue(h)
          }
          q += "<div class='kwt100 krow " + l + "'><div class='" + l + " middlecenteralign kcell' index ='" + w + "'><a id='" + t[w][IndexJL] + "' " + f + " href='#' kwidgettype='Appmenu' event='yes' index='" + w + "' style='text-decoration: none;'><div style='padding:2px;'>";
          if (r) {
            q += "<img  style='border:none;' src='" + $KU.getImageURL(t[w][2 + IndexJL]) + "'  width='30px' height='30px' align='middle' kwidgettype='Appmenu'/>"
          }
          q += "<label class='" + l + "' style='background:inherit; border: none; white-space:pre-wrap; 	word-wrap:break-word;margin-left:5px;' kwidgettype='Appmenu' index='" + w + "'>" + h + "</label></div></a></div></div>"
        }
      }
      q += "</div></div>";
      var g = document.getElementById("__MainContainer");
      var x = document.getElementById("appmenumore_container");
      if (x) {
        x.parentElement.removeChild(x)
      }
      var k = document.createElement("div");
      k.innerHTML = q;
      g.appendChild(k.firstChild)
    }
    d += "</div></div></div>";
    return d
  },
  eventHandler: function(n, s, c) {
    var a = $KG.__appmenu;
    var m = a.data;
    var d = $KU.getParentByTagName(s, "a");
    var f;
    var g = d.id;
    if (g == "appmenumore") {
      f = $KW.Appmenu.showmoreappmenuitems
    } else {
      $KW.Appmenu.hidemoreappmenuitems();
      var e = d.parentNode.getAttribute("index");
      f = m[e][3 + IndexJL]
    }
    if (a.focusskin) {
      if ($KW.Appmenu.focusIndex != "") {
        var r = document.querySelectorAll("div." + a.focusskin + ", a label." + a.focusskin);
        var p = r.length;
        if (!(d.id == "appmenumore")) {
          for (var o = p - 1; o >= 0; o--) {
            if (r[o].tagName.toLowerCase() == "label") {
              r[o].className = a.skin
            } else {
              r[o].className = a.skin + " middlecenteralign kcell"
            }
          }
        }
      }
      $KW.Appmenu.focusIndex = e;
      if (!(d.id == "appmenumore")) {
        d.parentNode.className = a.focusskin + " middlecenteralign kcell";
        var q = document.querySelectorAll("#" + d.id + "  label");
        if (q) {
          q[0].className = a.focusskin
        }
      }
    }
    if ($KU.getPlatformVersion("windowsphone") == "7.5") {
      var b = document.getElementById("appmenumore_container");
      if (b) {
        var h = document.getElementById("__MainContainer");
        var t = document.getElementById("konyappmenudiv").offsetHeight;
        var j = ((h.offsetHeight) - (t)) + "px";
        b.style.height = j
      }
    }
    var l = $KU.returnEventReference(f);
    l && l.call(a, a)
  },
  setappmenu: function(f, e, a) {
    var d = $KG.__appmenu;
    for (var c = IndexJL; c < f.length; c++) {
      f[c][4 + IndexJL] = true
    }
    if (!d) {
      var b = new Object();
      b.data = f;
      b.skin = e;
      b.focusskin = a;
      $KG.__appmenu = b
    } else {
      d.data = f;
      d.skin = e;
      d.focusskin = a
    }
  },
  setappmenufocusindex: function(c) {
    var f = $KG.__appmenu;
    var e = $KU.getElementById("konyappmenudiv");
    if (!e) {
      return
    }
    var g = f.data;
    if (f.focusskin) {
      var j = document.querySelectorAll("div." + f.focusskin + ", a label." + f.focusskin);
      var h = j.length;
      for (var a = h - 1; a >= 0; a--) {
        if (j[a].tagName.toLowerCase() == "label") {
          j[a].className = f.skin
        } else {
          j[a].className = f.skin + " middlecenteralign kcell"
        }
      }
      var d = document.querySelectorAll("div a[index='" + (c - IndexJL) + "']")[0];
      if (d) {
        d.parentNode.className = f.focusskin + " middlecenteralign kcell"
      }
      var b = document.querySelectorAll("#" + d.id + "  label");
      if (b) {
        b[0].className = f.focusskin
      }
      $KW.Appmenu.focusIndex = c - IndexJL
    }
  },
  hideappmenuitems: function(g) {
    var e = $KG.__appmenu;
    var d = e.data;
    for (var c = IndexJL; c < (g.length); c++) {
      for (var b = IndexJL; b < e.data.length; b++) {
        if (d[b][IndexJL] == g[c]) {
          d[b][4 + IndexJL] = false
        }
      }
    }
    var a = $KU.getElementById("konyappmenudiv");
    var f = new $KW.WidgetGenerationContext();
    f.setdynamically = true;
    a && (a.innerHTML = $KW.Appmenu.render("__appmenu", f))
  },
  showappmenuitems: function(c) {
    var h = $KG.__appmenu;
    var m = h.data;
    for (var e = IndexJL; e < h.data.length; e++) {
      var a = false;
      for (var d = IndexJL; d < c.length; d++) {
        if (m[e][IndexJL] == c[d]) {
          a = true;
          break
        }
      }
      m[e][4 + IndexJL] = a
    }
    var f = $KU.getElementById("konyappmenudiv");
    var b = new $KW.WidgetGenerationContext();
    b.setdynamically = true;
    if (f) {
      f.innerHTML = $KW.Appmenu.render("__appmenu", b)
    } else {
      var k = $KU.getElementById("appmenu_container");
      if (!k) {
        return
      }
      var l = document.createElement("DIV");
      var g = "appmenu_scroller";
      if ($KG.nativeScroll) {
        g += " relativePos"
      } else {
        g += " absolutePos"
      }
      l.className = g;
      l.setAttribute("id", "konyappmenudiv");
      l.innerHTML = $KW.Appmenu.render("__appmenu", b);
      k.appendChild(l)
    }
  },
  removeappmenuitem: function(f) {
    var d = $KG.__appmenu;
    var c = d.data;
    for (var b = IndexJL; b < d.data.length; b++) {
      if (c[b][IndexJL] == f) {
        c.splice(b, 1);
        if ($KW.Appmenu.focusIndex == b) {
          $KW.Appmenu.focusIndex = ""
        }
        break
      }
    }
    var a = $KU.getElementById("konyappmenudiv");
    var e = new $KW.WidgetGenerationContext();
    e.setdynamically = true;
    a.innerHTML = $KW.Appmenu.render("__appmenu", e)
  },
  addappmenuitem: function(g, b) {
    var e = $KG.__appmenu;
    var c = e.data;
    var d = false;
    for (i = IndexJL; i < (c.length); i++) {
      if (c[i][IndexJL] == g[IndexJL]) {
        d = true;
        break
      }
    }
    if (d) {
      return
    }
    g[4 + IndexJL] = true;
    c.splice(b, 0, g);
    var a = $KU.getElementById("konyappmenudiv");
    var f = new $KW.WidgetGenerationContext();
    f.setdynamically = true;
    a.innerHTML = $KW.Appmenu.render("__appmenu", f)
  },
  showmoreappmenuitems: function() {
    var b = document.getElementById("appmenumore_container");
    if (b) {
      var c = document.getElementById("konyappmenudiv");
      var d = parseInt($KU.getStyle(c, "padding-top")) || 0;
      var e = parseInt($KU.getStyle(c, "margin-top")) || 0;
      var a = document.getElementById("konyappmenudiv").offsetHeight;
      a = a - (e + d);
      b.style.bottom = a + "px";
      if (b.style.display == "none") {
        b.style.display = "block"
      } else {
        if (b.style.display == "block") {
          b.style.display = "none"
        }
      }
    }
  },
  hidemoreappmenuitems: function() {
    var a = document.getElementById("appmenumore_container");
    if (a) {
      a.style.display = "none"
    }
  },
  createappmenu: function(d, f, c, e) {
    for (var b = IndexJL; b < f.length; b++) {
      f[b][4 + IndexJL] = true
    }
    var a = new Object();
    a.data = f;
    a.skin = c;
    a.focusskin = a.focusSkin = e;
    if ($KG.__appmenu) {
      $KG.__appmenu[d] = a
    } else {
      $KG.__appmenu = a
    }
  },
  setcurrentappmenu: function(b) {
    if ($KG.__appmenu[b]) {
      $KG.__appmenu = $KG.__appmenu[b]
    } else {
      $KG.__appmenu = $KG.__appmenu
    }
    var f = $KG.__appmenu;
    var g = f.data;
    var d = $KU.getElementById("konyappmenudiv");
    var c = new $KW.WidgetGenerationContext();
    c.setdynamically = true;
    if (d) {
      d.innerHTML = $KW.Appmenu.render("__appmenu", c)
    } else {
      var h = $KU.getElementById("appmenu_container");
      if (!h) {
        return
      }
      var j = document.createElement("DIV");
      var e = "appmenu_scroller";
      if ($KG.nativeScroll) {
        e += " relativePos"
      } else {
        e += " absolutePos"
      }
      j.className = e;
      j.setAttribute("id", "konyappmenudiv");
      j.innerHTML = $KW.Appmenu.render("__appmenu", c);
      if ($KG.__currentForm.needappmenu) {
        h.appendChild(j)
      }
      var a = $KU.returnEventReference(g[IndexJL][3 + IndexJL]);
      a && a.call(f, f)
    }
    $KG.currappmenu = b
  },
  getcurrentappmenu: function() {
    return $KG.currappmenu
  },
  setappmenufocusbyid: function(d) {
    var b = $KG.__appmenu.data;
    var a;
    var c = false;
    for (a = IndexJL; a < (b.length); a++) {
      if (b[a][IndexJL] == d) {
        c = true;
        break
      }
    }
    if (c) {
      $KW.Appmenu.setappmenufocusindex(a)
    }
  },
  addappmenuitemat: function(c, a, b) {
    $KW.Appmenu.addappmenuitem(b, a);
    $KW.Appmenu.focusIndex = ""
  },
  removeappmenuitemat: function(c, a) {
    var b = $KG.__appmenu.data;
    $KW.Appmenu.removeappmenuitem(b[a][IndexJL]);
    if ($KW.Appmenu.focusIndex == a) {
      $KW.Appmenu.focusIndex = ""
    }
  }
};
$KW.Label = {
  initialize: function() {
    kony.events.addEvent("click", "Label", this.eventHandler)
  },
  initializeView: function(a) {
    $KW.Label.updateLineSpacing(a)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "linespacing":
        this.updateLineHeight(e, d);
        break;
      case "text":
        if (!$KW.Utils.belongsToSegment(d)) {
          d.innerHTML = b
        }
        break;
      case "textCopyable":
        b = b && !e.disabled ? "text" : "none";
        if ("MozUserSelect" in d.style) {
          d.style.MozUserSelect = b
        } else {
          if ("webkitUserSelect" in d.style) {
            d.style.webkitUserSelect = b
          } else {
            if ("msUserSelect" in d.style) {
              d.style.msUserSelect = b
            }
          }
        }
        break
    }
  },
  updateLineHeight: function(a, b) {
    var d = a.linespacing;
    if (d > 0) {
      var c = parseInt($KU.getStyle(b, "font-size"), 10);
      if (c > 0) {
        b.style.lineHeight = (c + parseInt(d, 10)) + "px"
      }
    } else {
      b.style.lineHeight = ""
    }
  },
  updateLineSpacing: function(e) {
    var d = document.querySelectorAll("#" + e + " div[kwidgettype='Label']");
    for (var c = 0; c < d.length; c++) {
      var b = d[c];
      var a = $KU.getModelByNode(b);
      this.updateLineHeight(a, b)
    }
  },
  render: function(g, b) {
    var e = $KW.skins.getWidgetSkinList(g, b);
    var d = $KW.skins.getContentAlignment(g);
    var f = "";
    var a = g.textCopyable;
    a = a ? "text" : "none";
    var c = " -webkit-user-select: " + a + ";-moz-user-select: " + a + ";-ms-user-select: " + a + ";-o-user-select: " + a + ";user-select: " + a + "; ";
    f = "<div" + $KW.Utils.getBaseHtml(g, b) + "class = '" + e + "' style='text-align:" + d + ";" + c + $KW.skins.getBaseStyle(g, b);
    if (b.ispercent === false) {
      f += "display:inline-block;" + (b.layoutDir ? ("float:" + b.layoutDir) : "")
    }
    f += "'";
    f += ">" + $KU.escapeHTMLSpecialEntities(g.text) + "</div>";
    return f
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  }
};
$KW.Button = {
  initialize: function() {
    kony.events.addEvent("click", "Button", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "text":
        if ($KU.isWindowsTablet) {
          d.innerHTML = b
        } else {
          d.value = b
        }
        break
    }
  },
  render: function(f, a) {
    if (!f.buiskin) {
      f.buiskin = f.blockeduiskin
    }
    var c = $KW.skins.getWidgetSkinList(f, a);
    var e = "";
    var d = f.skin || "";
    var b = $KW.skins.getContentAlignment(f);
    if ($KU.isWindowsTablet) {
      e = "<button" + $KW.Utils.getBaseHtml(f, a) + "type='button' class = '" + c + "' style='text-align:" + $KW.skins.getContentAlignment(f) + ";white-space:normal;word-wrap:break-word;" + $KW.skins.getBaseStyle(f, a) + (a.layoutDir && a.ispercent === false ? ";float:" + a.layoutDir : "") + "' kprogressskin='" + d + "'>" + (f.displaytext.toString() == "true" ? $KU.escapeHTMLSpecialEntities(f.text) : "") + "</button>"
    } else {
      e = "<input" + $KW.Utils.getBaseHtml(f, a) + "type='button' class = '" + c + "' style='text-align:" + $KW.skins.getContentAlignment(f) + ";white-space:normal;word-wrap:break-word;" + $KW.skins.getBaseStyle(f, a) + (a.layoutDir && a.ispercent === false ? ";float:" + a.layoutDir : "") + "'" + (f.displaytext.toString() == "true" ? " value='" + $KU.escapeHTMLSpecialEntities(f.text) + "'" : "") + " kprogressskin='" + d + "'/>"
    }
    return e
  },
  eventHandler: function(b, f) {
    var e = $KU.getModelByNode(f),
      a = f.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(e, f, true)
    } else {
      if (e.onclick) {
        var c = $KU.returnEventReference(e.onclick);
        if (c && e.blockeduiskin) {
          $KW.Utils.applyBlockUISkin(e)
        }
        f.setAttribute("selected", "progress");
        var d = new kony.events.KUnloadEvent(e.pf, e.id, "Button", $KW.Button.unloadEventHandler);
        $KG[kony.constants.SELECTED_ITEM] = d;
        c.call(e, e);
        $KU.onEventHandler(e)
      }
    }
  }
};
$KW.Phone = {
  initialize: function() {
    kony.events.addEvent("click", "Phone", this.eventHandler)
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    if (!e) {
      return
    }
    switch (c) {
      case "text":
        if (e.childNodes[0]) {
          var d = e.childNodes[0];
          if (!f.image) {
            d.innerHTML = b
          }
          d.href = "tel:" + b
        }
        break
    }
  },
  render: function(a, b) {
    var c = $KW.skins.getWidgetSkinList(a, b);
    var e = a.skin || "";
    var d = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "'";
    if (b.ispercent === false) {
      d += " style='display:inline-block;' "
    }
    d += "><a class='" + e + "' style='border:none;min-height:28px;' href='tel:" + a.text + "' >";
    if (!a.image) {
      d += a.text
    } else {
      var f = $KU.getImageURL(a.image);
      d += "<img alt='Call' src='" + f + "' />"
    }
    d += "</a></div>";
    return d
  },
  eventHandler: function(b, d) {
    var a = $KU.getModelByNode(d);
    d.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(a, d, false);
    var c;
    if (a.segmentID) {
      c = d.childNodes[0].innerText || ""
    } else {
      c = a.text
    }
    c = c.replace(/[-\s]+/g, "");
    if (isNaN(c)) {
      c = $KW.Utils.convertPhoneAlphabetToNumber(c)
    }
    $KI.phone.dial(c)
  }
};
$KW.TextField = {
  goeventTriggerd: null,
  focusedTextfieldId: null,
  initialize: function() {
    kony.events.addEvent("keydown", "TextField", this.textfieldGoButtonEventHandler);
    kony.events.addEvent("keyup", "TextField", this.textfieldKeyUpEventHandler);
    kony.events.addEvent("onorientationchange", "TextField", this.adjustHeight);
    kony.events.addEvent("change", "TextField", this.eventHandler);
    kony.events.addEvent("click", "TextField", this.clickHandler)
  },
  initializeView: function(a) {
    this.adjustHeight(a);
    setTimeout(function() {
      $KW.TextField.initPasswordField(a)
    }, 1)
  },
  initPasswordField: function(d) {
    var c = document.querySelectorAll("#" + d + " input[name='konypassword']");
    for (var b = 0; b < c.length; b++) {
      var a = c[b]
    }
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    if (!e) {
      return
    }
    switch (c) {
      case "text":
        if (b) {
          e.value = b;
          b && $KU.removeClassName(e, "konyplaceholder")
        } else {
          e.value = ""
        }
        this.setPlaceholder(f, e);
        break;
      case "placeholder":
        e.setAttribute("placeholder", b);
        this.setPlaceholder(f, e);
        break;
      case "maxtextlength":
        e.maxLength = b;
        break;
      case "pattern":
        e.setAttribute("pattern", b);
        break;
      case "autocapitalize":
        var g = b;
        if ($KU.isiPhone && parseInt($KU.getPlatformVersion("iphone")) <= 4 && b != constants.TEXTBOX_AUTO_CAPITALIZE_NONE) {
          g = "on"
        }
        e.setAttribute("autocapitalize", g);
        var d = $KU.getTextTrasform(f);
        d && (e.style.textTransform = d);
        break;
      case "mode":
      case "textinputmode":
        if (b == constants.TEXTBOX_INPUT_MODE_ANY) {
          e.setAttribute("type", "text")
        } else {
          if (b == constants.TEXTBOX_INPUT_MODE_NUMERIC) {
            e.setAttribute("type", "number")
          }
        }
        break;
      case "securetextentry":
        if (b) {
          e.setAttribute("type", "password")
        } else {
          this.updateView(f, "textinputmode", f.textinputmode)
        }
        break;
      case "keyboardtype":
      case "keyboardstyle":
        (f.mode != "P") && e.setAttribute("type", b);
        break;
      case "containerheightmode":
      case "containerheight":
      case "containerheightreference":
        if (f.containerheightmode == constants.TEXTBOX_DEFAULT_PLATFORM_HEIGHT) {
          $KU.addClassName(e, "kheight");
          e.style.height = ""
        } else {
          if (f.containerheightmode == constants.TEXTBOX_FONT_METRICS_DRIVEN_HEIGHT) {
            $KU.removeClassName(e, "kheight");
            e.style.height = ""
          } else {
            if (f.containerheightmode == constants.TEXTBOX_CUSTOM_HEIGHT && f.containerheight && f.containerheightreference) {
              $KU.removeClassName(e, "kheight");
              this.adjustBoxDimensions(e.id, true)
            }
          }
        }
        break;
      case "name":
        e.name = b;
        break
    }
  },
  render: function(p, b) {
    if (typeof p.keyboardtype == "undefined") {
      p.keyboardtype = p.keyboardstyle
    }
    if (typeof p.mode == "undefined") {
      p.mode = p.textinputmode
    }
    if (!p.buiskin) {
      p.buiskin = p.blockeduiskin
    }
    var e = $KW.skins.getWidgetSkinList(p, b);
    if (p.containerheightmode == constants.TEXTBOX_DEFAULT_PLATFORM_HEIGHT) {
      e += " kheight "
    }
    var l = b.tabpaneID || "";
    var h = "text";
    var f = false;
    switch (p.mode) {
      case constants.TEXTBOX_INPUT_MODE_PASSWORD:
        h = "password";
        break;
      case constants.TEXTBOX_INPUT_MODE_NUMERIC:
        h = "number";
        break;
      default:
        h = "text"
    }
    if (p.securetextentry) {
      h = "password"
    }
    if (p.placeholder && !p.text && !kony.utils.placeholderSupported && h == "password") {
      h = "text"
    }
    if (p.keyboardtype && p.mode != "P") {
      switch (p.keyboardtype) {
        case constants.TEXTBOX_KEY_BOARD_STYLE_EMAIL:
          h = "email";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_URL:
          h = "url";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_PHONE_PAD:
          h = "tel";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_NUMBER_PAD:
          h = "number";
          break;
        case constants.TEXTBOX_KEY_BOARD_STYLE_DECIMAL:
          h = "number";
          break;
        case constants.TEXTBOX_VIEW_TYPE_SEARCH_VIEW:
          h = "search";
          break;
        default:
          if ($KU.isiPhone && p.mode == "N") {
            h = "number";
            f = false
          }
          break
      }
    }
    var i = "";
    var a = $KW.skins.getBaseStyle(p, b);
    a += ";text-align:" + $KW.skins.getContentAlignment(p) + ";";
    var c = $KU.getTextTrasform(p);
    a += c ? "text-transform:" + c + ";" : "";
    var k = p.text;
    var d = "";
    if (k && k != "" && (typeof k == "string" || k instanceof String)) {
      d = k.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&rsquo;").replace(/"/g, "&rdquo;")
    } else {
      d = k
    }
    if (!kony.utils.placeholderSupported) {
      d = d || p.placeholder || "";
      e += (p.placeholder && !p.text) ? " konyplaceholder " : ""
    }
    var n = $KU.isFlexWidget(p);
    var m = (b.ispercent === false) ? "display:inline-block;" : "";
    var j = ($KU.isiPhone && !n) ? "<div style='" + m + "overflow:hidden;'>" : "";
    var o = ($KU.isiPhone && !n) ? "</div>" : "";
    i += j + "<input" + $KW.Utils.getBaseHtml(p, b) + "value='" + d + "' class = '" + e + "'";
    i += p.name ? " name='" + p.name + "'" : "";
    i += " autocapitalize='" + p.autocapitalize + "'";
    i += p.autocorrect ? " autocorrect='on'" : " autocorrect='off'";
    i += p.autocomplete ? " autocomplete='on'" : " autocomplete='off'";
    i += " type = '" + h + "'";
    i += (p.pattern) ? " pattern=" + p.pattern : "";
    if ((p.keyboardtype == "digitpad" && p.mode == "P") || f) {
      var g = "[0-9]*";
      i += " pattern = '" + g + "'"
    }
    i += (p.disabled) ? " disabled='true'" : "";
    i += " onfocus='$KW.TextField.onfocusEventHandler(arguments[0],this)' onblur='$KW.TextField.onblurEventHandler(arguments[0],this)' ";
    i += (p.placeholder) ? " placeholder='" + $KU.escapeHTMLSpecialEntities(p.placeholder) + "'" : "";
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      i += " onchange='$KW.TextField.eventHandler(arguments[0], this)'"
    }
    a += (h == "text" && kony.appinit.isIE7) ? "word-break:break-all" + (b.layoutDir && b.ispercent === false ? ";float:" + b.layoutDir : "") : "";
    a += kony.appinit.isIE9 ? " line-height: normal;" : "";
    a += (kony.appinit.isIE8 && p.containerheightmode == constants.TEXTBOX_CUSTOM_HEIGHT) ? " line-height: 28px;" : "";
    i += (p.maxtextlength) ? " maxlength='" + p.maxtextlength + "'" : "";
    i += " style='" + a + (p.securetextentry ? "-" + vendor + "-text-security:disc" : "") + "'";
    i += "/>" + o;
    return i
  },
  clickHandler: function(a, c) {
    var b = $KU.getModelByNode(c);
    if (c.getAttribute("kcontainerID")) {
      $KW.Utils.updateContainerData(b, c, true)
    }
  },
  textfieldGoButtonEventHandler: function(a, g) {
    var c = $KU.getModelByNode(g);
    a = a || window.event;
    if (c.ondone && (a.keyCode == 10 || a.keyCode == 13)) {
      c.canUpdateUI = false;
      c.text = g.value;
      c.canUpdateUI = true;
      kony.events.preventDefault(a);
      kony.events.stopPropagation(a);
      try {
        if (a.srcElement) {
          a.srcElement.blur()
        } else {
          a.target.blur()
        }
      } catch (f) {}(c.blockeduiskin) && $KW.Utils.applyBlockUISkin(c);
      g.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(c, g, false, true);
      var d = $KU.returnEventReference(c.ondone);
      if (d) {
        d.call(c, c);
        $KU.onEventHandler(c)
      }
    }
    var b = $KU.returnEventReference(c.onkeydown);
    b && b.call(c, c)
  },
  HandleTextFieldFilterData: function(b, a, e) {
    var c = e.getAttribute("id");
    b.shift();
    var d = e.value;
    d = d.ltrim();
    if (d.length < 1) {
      return
    }
    if (b.length > 0) {
      this.AutoComplete.AutoComplete_Create(c, b, 8);
      this.AutoComplete.AutoComplete_ShowDropdown(c)
    }
  },
  eventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    if (c) {
      c.canUpdateUI = false;
      c.text = d.value;
      c.canUpdateUI = true;
      d.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(c, d, false);
      var b = $KU.returnEventReference(c.ontextchange);
      b && b.call(c, c)
    }
  },
  textfieldKeyUpEventHandler: function(b, e) {
    var d = $KU.getModelByNode(e);
    if (d.text != e.value) {
      d.canUpdateUI = false;
      d.text = e.value;
      d.canUpdateUI = true;
      if ((kony.appinit.isIE8 || kony.appinit.isIE9) && d.placeholder && d.secureTextEntry) {
        var c = $KW.TextField.getInputSelection(e);
        setTimeout(function() {
          document.getElementById(e.id).focus();
          setTimeout(function() {
            $KW.TextField.setCaretPosition(e.id, c.start)
          }, 1)
        }, 1)
      }
    }
    var a = $KU.returnEventReference(d.onkeyup);
    a && a.call(d, d)
  },
  onfocusEventHandler: function(a, c) {
    var b = $KU.getModelByNode(c);
    a = a || window.event;
    if (c.className.indexOf("konyplaceholder") > -1 && (b.format || b.dateformat)) {
      if (c.className.indexOf("konyplaceholder") > -1) {
        c.value = "";
        $KU.removeClassName(c, "konyplaceholder");
        return
      } else {
        if (b.wType == "Calendar") {
          return
        }
      }
    }
    if (!kony.utils.placeholderSupported && !b.text && b.placeholder && b.wType != "Calendar") {
      c.value = "";
      if ((b.securetextentry || b.mode == "TEXTBOX_INPUT_MODE_PASSWORD") && c.type == "text") {
        var f = c.id;
        var e = document.createElement("div");
        e.innerHTML = c.outerHTML.replace('type="text"', 'type="password"').replace("type=text", "type=password");
        c.blur();
        c.parentNode.replaceChild(e.firstChild, c);
        c = document.getElementById(f)
      }
      setTimeout(function() {
        c.focus()
      }, 1);
      $KU.removeClassName(c, "konyplaceholder")
    }
    var d = $KU.returnEventReference(b.onbeginediting);
    d && d.call(b, b)
  },
  onblurEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    if (c && c.text != d.value) {
      c.canUpdateUI = false;
      c.text = d.value;
      c.canUpdateUI = true
    }
    if (kony.utils.placeholderSupported == false) {
      if ((!c.datecomponents || !c.formatteddate) && (c.date == null || c.date == undefined || c.date == "") && (c.wType == "Calendar")) {
        d.value = c.placeholder;
        $KU.addClassName(d, "konyplaceholder");
        return
      } else {
        if (c.wType == "Calendar") {
          return
        }
      }
    }
    $KW.TextField.setPlaceholder(c, d);
    var b = $KU.returnEventReference(c.onendediting);
    b && b.call(c, c)
  },
  setPlaceholder: function(a, b) {
    if (!kony.utils.placeholderSupported && a.placeholder) {
      var d = b.id;
      if (a.text) {
        if ((a.securetextentry || a.mode == "TEXTBOX_INPUT_MODE_PASSWORD") && b.type == "text") {
          $KU.removeClassName(b, "konyplaceholder");
          var c = document.createElement("div");
          c.innerHTML = b.outerHTML.replace('type="text"', 'type="password"').replace("type=text", "type=password");
          b.parentNode.replaceChild(c.firstChild, b);
          b = document.getElementById(d);
          b.value = a.text
        }
      } else {
        if ((a.securetextentry || a.mode == "TEXTBOX_INPUT_MODE_PASSWORD") && b.type == "password") {
          var c = document.createElement("div");
          c.innerHTML = b.outerHTML.replace('type="password"', 'type="text"').replace("type=password", "type=text");
          b.parentNode.replaceChild(c.firstChild, b);
          b = document.getElementById(d)
        }
        b.value = a.placeholder;
        $KU.addClassName(b, "konyplaceholder")
      }
    }
  },
  setCaretPosition: function(d, b) {
    var c = document.getElementById(d);
    if (c != null) {
      if (c.createTextRange) {
        var a = c.createTextRange();
        a.move("character", b);
        a.select()
      } else {
        if (c.selectionStart) {
          c.focus();
          c.setSelectionRange(b, b)
        } else {
          c.focus()
        }
      }
    }
  },
  getInputSelection: function(e) {
    var h = 0,
      c = 0,
      g, d, b, a, f;
    if (typeof e.selectionStart == "number" && typeof e.selectionEnd == "number") {
      h = e.selectionStart;
      c = e.selectionEnd
    } else {
      d = document.selection.createRange();
      if (d && d.parentElement() == e) {
        a = e.value.length;
        g = e.value.replace(/\r\n/g, "\n");
        b = e.createTextRange();
        b.moveToBookmark(d.getBookmark());
        f = e.createTextRange();
        f.collapse(false);
        if (b.compareEndPoints("StartToEnd", f) > -1) {
          h = c = a
        } else {
          h = -b.moveStart("character", -a);
          h += g.slice(0, h).split("\n").length - 1;
          if (b.compareEndPoints("EndToEnd", f) > -1) {
            c = a
          } else {
            c = -b.moveEnd("character", -a);
            c += g.slice(0, c).split("\n").length - 1
          }
        }
      }
    }
    return {
      start: h,
      end: c
    }
  },
  adjustHeight: function(b) {
    var a = $KG.allforms[$KG.__currentForm.id];
    if (b == a.header || b == a.footer) {
      return
    }
    $KW.TextField.adjustBoxDimensions("__MainContainer")
  },
  adjustBoxDimensions: function(f, l) {
    var m = l ? document.querySelectorAll("#" + f) : document.querySelectorAll("#" + f + " input[kwidgettype='TextField']");
    for (var b = 0; b < m.length; b++) {
      var j = $KU.getModelByNode(m[b]);
      if (j.containerheightmode == constants.TEXTBOX_CUSTOM_HEIGHT) {
        var e = j.containerheight || 10;
        var a = 28;
        if (e > 0) {
          if (j.containerheightreference == constants.CONTAINER_HEIGHT_BY_PARENT_WIDTH) {
            var h = $KU.getElementById(j.pf + "_" + j.parent.id);
            if (!h) {
              if (m[b].getAttribute("ktabpaneid")) {
                h = $KU.getElementById(j.pf + "_" + m[b].getAttribute("ktabpaneid"))
              } else {
                if (window[j.pf].wType == "Popup") {
                  h = document.getElementById(j.pf + "_container")
                } else {
                  h = document.getElementById(j.pf + "_scroller")
                }
              }
            }
            var k = (h && h.offsetWidth) || window.innerWidth || document.body.clientWidth;
            a = Math.round((e * k) / 100)
          } else {
            if (j.containerheightreference == constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE) {
              var c = document.getElementById(j.pf + "_scroller");
              var d = (c && c.offsetHeight) || $KU.getWindowHeight() || window.innerHeight || document.body.clientHeight;
              a = Math.round((e * d) / 100)
            }
          }
        }
        m[b].style.height = a + "px";
        if (kony.appinit.isIE8) {
          var g = $KU.getElementById(m[b].id);
          g.style.lineHeight = a + "px"
        }
      }
    }
  }
};

function MaskedPassword(e, d) {
  if (typeof document.getElementById == "undefined" || typeof document.styleSheets == "undefined") {
    return false
  }
  if (e == null) {
    return false
  }
  this.symbol = d;
  this.maskingTimerId = null;
  this.isIE = typeof document.uniqueID != "undefined";
  e.value = "";
  e.defaultValue = "";
  e._contextwrapper = this.createContextWrapper(e);
  this.fullmask = true;
  var f = e._contextwrapper;
  var b = '<input type="hidden" id="' + e.id + '_value" name="' + e.name + '">';
  var c = this.convertPasswordFieldHTML(e);
  f.innerHTML = b + c;
  e = f.lastChild;
  e.className += " masked";
  e.setAttribute("autocomplete", "off");
  e._realfield = f.firstChild;
  e._contextwrapper = f;
  this.limitCaretPosition(e);
  var a = this;
  this.addListener(e, "change", function(g) {
    a.fullmask = false;
    a.doPasswordMasking(a.getTarget(g))
  });
  this.addListener(e, "input", function(g) {
    a.fullmask = false;
    if (a.maskingTimerId) {
      window.clearTimeout(a.maskingTimerId);
      a.maskingTimerId = null
    }
    a.doPasswordMasking(a.getTarget(g));
    if (!a.maskingTimerId) {
      a.maskingTimerId = window.setTimeout(function() {
        a.forceMasking(e)
      }, 500)
    }
  });
  this.addListener(e, "propertychange", function(g) {
    a.doPasswordMasking(a.getTarget(g))
  });
  this.addListener(e, "keyup", function(h) {
    if (!/^(9|1[678]|224|3[789]|40)$/.test(h.keyCode.toString())) {
      a.fullmask = false;
      if (a.maskingTimerId) {
        window.clearTimeout(a.maskingTimerId);
        a.maskingTimerId = null
      }
      var g = $KU.getModelByNode(e);
      g.text = e.previousSibling.value;
      a.doPasswordMasking(a.getTarget(h));
      if (!a.maskingTimerId) {
        a.maskingTimerId = window.setTimeout(function() {
          a.forceMasking(e)
        }, 500)
      }
    }
  });
  this.addListener(e, "blur", function(g) {
    a.fullmask = true;
    a.forceMasking(e)
  });
  this.forceFormReset(e);
  return true
}
MaskedPassword.prototype = {
  doPasswordMasking: function(a, e) {
    if (typeof e == "undefined") {
      e = this.fullmask
    }
    var d = "";
    if (a._realfield.value != "") {
      for (var b = 0; b < a.value.length; b++) {
        if (a.value.charAt(b) == this.symbol) {
          d += a._realfield.value.charAt(b)
        } else {
          d += a.value.charAt(b)
        }
      }
    } else {
      d = a.value
    }
    var c = this.encodeMaskedPassword(d, e, a);
    if (a._realfield.value != d || a.value != c) {
      a._realfield.value = d;
      a.value = c
    }
  },
  encodeMaskedPassword: function(d, f, b) {
    var a = f === true ? 0 : 1;
    for (var e = "", c = 0; c < d.length; c++) {
      if (c < d.length - a) {
        e += this.symbol
      } else {
        e += d.charAt(c)
      }
    }
    return e
  },
  forceMasking: function(b) {
    var a = $KU.getModelByNode(b);
    a.text = b.previousSibling.value;
    this.doPasswordMasking(b, true)
  },
  createContextWrapper: function(a) {
    var b = document.createElement("span");
    b.style.position = "relative";
    a.parentNode.insertBefore(b, a);
    b.appendChild(a);
    return b
  },
  forceFormReset: function(a) {
    while (a) {
      if (/form/i.test(a.nodeName)) {
        break
      }
      a = a.parentNode
    }
    if (!/form/i.test(a.nodeName)) {
      return null
    }
    this.addSpecialLoadListener(function() {
      a.reset()
    });
    return a
  },
  convertPasswordFieldHTML: function(c, e) {
    var b = "<input";
    for (var d = c.attributes, a = 0; a < d.length; a++) {
      if (d[a].specified && !/^(_|type|name)/.test(d[a].name)) {
        b += " " + d[a].name + '="' + d[a].value + '"'
      }
    }
    b += ' type="text" autocomplete="off">';
    return b
  },
  limitCaretPosition: function(a) {
    var d = null,
      c = function() {
        if (d == null) {
          if (this.isIE) {
            d = window.setInterval(function() {
              var e = a.createTextRange(),
                g = a.value.length,
                f = "character";
              e.moveEnd(f, g);
              e.moveStart(f, g);
              e.select()
            }, 100)
          } else {
            d = window.setInterval(function() {
              var e = a.value.length;
              if (!(a.selectionEnd == e && a.selectionStart <= e)) {
                a.selectionStart = e;
                a.selectionEnd = e
              }
            }, 100)
          }
        }
      },
      b = function() {
        window.clearInterval(d);
        d = null
      };
    this.addListener(a, "focus", function() {
      c()
    });
    this.addListener(a, "blur", function() {
      b()
    })
  },
  addListener: function(c, a, b) {
    if (typeof document.addEventListener != "undefined") {
      return c.addEventListener(a, b, false)
    } else {
      if (typeof document.attachEvent != "undefined") {
        return c.attachEvent("on" + a, b)
      }
    }
  },
  addSpecialLoadListener: function(a) {
    if (this.isIE) {
      return window.attachEvent("onload", a)
    } else {
      return document.addEventListener("DOMContentLoaded", a, false)
    }
  },
  getTarget: function(a) {
    if (!a) {
      return null
    }
    return a.target ? a.target : a.srcElement
  }
};
$KW.TextField.AutoComplete = {
  __AutoCompleteClass: "autocomplete_base",
  __AutoComplete: new Array(),
  __AutoCompleteElementId: null,
  isIE: document.all ? true : false,
  isGecko: navigator.userAgent.toLowerCase().indexOf("gecko") != -1,
  isOpera: navigator.userAgent.toLowerCase().indexOf("opera") != -1,
  AutoSuggestOrientation: function() {
    if (this.__AutoCompleteElementId != null) {
      this.AutoComplete_HideAll();
      this.AutoComplete_CreateDropdownZeroSize(this.__AutoCompleteElementId);
      this.AutoComplete_ShowDropdown(this.__AutoCompleteElementId);
      this.AutoComplete_HideAll();
      this.AutoComplete_CreateDropdown(this.__AutoCompleteElementId);
      this.AutoComplete_ShowDropdown(this.__AutoCompleteElementId)
    }
  },
  AutoComplete_Create: function(c, b) {
    this.__AutoComplete[c] = {
      data: b,
      isVisible: false,
      element: document.getElementById(c),
      dropdown: null,
      highlighted: null,
      styleclass: this.__AutoCompleteClass
    };
    this.__AutoComplete[c]["element"].setAttribute(this.__AutoCompleteClass, "off");
    this.__AutoComplete[c]["element"].onkeydown = function(d) {
      return $KW.TextField.AutoComplete.AutoComplete_KeyDown(this.getAttribute("id"), d)
    };
    this.__AutoComplete[c]["element"].onkeyup = function(d) {
      return $KW.TextField.AutoComplete.AutoComplete_KeyUp(this.getAttribute("id"), d)
    };
    this.__AutoComplete[c]["element"].onkeypress = function(d) {
      if (!d) {
        d = window.event
      }
      if (d.keyCode == 13 || this.isOpera) {
        return false
      }
    };
    this.__AutoComplete[c]["element"].ondblclick = function() {
      $KW.TextField.AutoComplete.AutoComplete_ShowDropdown(this.getAttribute("id"))
    };
    this.__AutoComplete[c]["element"].onclick = function(d) {
      if (!d) {
        d = window.event
      }
      d.cancelBubble = true;
      d.returnValue = false
    };
    var a = function() {
      for (c in this.__AutoComplete) {
        $KW.TextField.AutoComplete.AutoComplete_HideDropdown(c)
      }
    };
    if (document.addEventListener) {
      document.addEventListener("click", a, false)
    } else {
      if (document.attachEvent) {
        document.attachEvent("onclick", a, false)
      }
    }
    if (arguments[2] != null) {
      this.__AutoComplete[c]["maxitems"] = arguments[2];
      this.__AutoComplete[c]["firstItemShowing"] = 0;
      this.__AutoComplete[c]["lastItemShowing"] = arguments[2] - 1
    }
    this.AutoComplete_CreateDropdown(c);
    if (this.isIE) {
      this.__AutoComplete[c]["iframe"] = document.createElement("iframe");
      this.__AutoComplete[c]["iframe"].id = c + "_iframe";
      this.__AutoComplete[c]["iframe"].style.position = "absolute";
      this.__AutoComplete[c]["iframe"].style.top = "0";
      this.__AutoComplete[c]["iframe"].style.left = "0";
      this.__AutoComplete[c]["iframe"].style.width = "0px";
      this.__AutoComplete[c]["iframe"].style.height = "0px";
      this.__AutoComplete[c]["iframe"].style.zIndex = "98";
      this.__AutoComplete[c]["iframe"].style.visibility = "hidden";
      this.__AutoComplete[c]["element"].parentNode.insertBefore(this.__AutoComplete[c]["iframe"], this.__AutoComplete[c]["element"])
    }
  },
  AutoComplete_CreateDropdown: function(e) {
    var d = this.AutoComplete_GetLeft(this.__AutoComplete[e]["element"]);
    var c = this.AutoComplete_GetTop(this.__AutoComplete[e]["element"]) + this.__AutoComplete[e]["element"].offsetHeight;
    var b = this.__AutoComplete[e]["element"].offsetWidth;
    this.__AutoComplete[e]["dropdown"] = document.createElement("div");
    this.__AutoComplete[e]["dropdown"].className = this.__AutoCompleteClass;
    this.AutoComplete_RemoveDivs(e);
    this.__AutoComplete[e]["element"].parentNode.insertBefore(this.__AutoComplete[e]["dropdown"], this.__AutoComplete[e]["element"]);
    this.__AutoComplete[e]["dropdown"].style.left = d + "px";
    this.__AutoComplete[e]["dropdown"].style.top = c + "px";
    this.__AutoComplete[e]["dropdown"].style.width = b + "px";
    this.__AutoComplete[e]["dropdown"].style.zIndex = "99";
    this.__AutoComplete[e]["dropdown"].style.visibility = "hidden";
    var a = document.getElementById(e);
    if (a.getAttribute("autosuggestskin") != null) {
      this.__AutoComplete[e]["styleclass"] = a.getAttribute("autosuggestskin");
      this.__AutoComplete[e]["dropdown"].className = this.__AutoComplete[e]["styleclass"];
      this.__AutoComplete[e]["dropdown"].style.position = "absolute";
      this.__AutoComplete[e]["dropdown"].style.borderStyle = "solid";
      this.__AutoComplete[e]["dropdown"].style.borderWidth = "1px";
      this.__AutoComplete[e]["dropdown"].style.borderColor = "black";
      this.__AutoComplete[e]["dropdown"].style.backgroundColor = "white";
      this.__AutoComplete[e]["dropdown"].style.overflow = "auto";
      this.__AutoComplete[e]["dropdown"].style.overflowX = "hidden"
    } else {
      this.__AutoComplete[e]["dropdown"].style.fontFamily = this.getElementStyle(a, "font-family");
      this.__AutoComplete[e]["dropdown"].style.fontSize = this.getElementStyle(a, "font-size");
      this.__AutoComplete[e]["dropdown"].style.fontStyle = this.getElementStyle(a, "font-style");
      this.__AutoComplete[e]["dropdown"].style.fontWeight = this.getElementStyle(a, "font-weight");
      this.__AutoComplete[e]["dropdown"].style.color = this.getElementStyle(a, "color")
    }
    this.AutoComplete_RemoveDivs(e);
    this.__AutoComplete[e]["element"].parentNode.insertBefore(this.__AutoComplete[e]["dropdown"], this.__AutoComplete[e]["element"])
  },
  getElementStyle: function(c, a) {
    var b = null;
    if (c.currentStyle) {
      b = c.currentStyle[a]
    } else {
      if (window.getComputedStyle) {
        b = document.defaultView.getComputedStyle(c, null).getPropertyValue(a)
      }
    }
    return b
  },
  AutoComplete_RemoveDivs: function(d) {
    var c = document.getElementById(d).parentNode;
    if (this.__AutoComplete[d]) {
      var b = document.getElementsByClassName(this.__AutoComplete[d]["styleclass"]);
      if (b.length > 0) {
        for (var a = 0; a < b.length; a++) {
          if (b[a].nextSibling.id === d) {
            c.removeChild(b[a])
          }
        }
      }
    }
  },
  AutoComplete_CreateDropdownZeroSize: function(a) {
    this.__AutoComplete[a]["dropdown"].style.left = "1px";
    this.__AutoComplete[a]["dropdown"].style.top = "1px";
    this.__AutoComplete[a]["dropdown"].style.width = "10px";
    this.__AutoComplete[a]["dropdown"].style.zIndex = "99";
    this.__AutoComplete[a]["dropdown"].style.visibility = "hidden"
  },
  AutoComplete_GetLeft: function(a) {
    var b = a;
    var c = 0;
    do {
      c += b.offsetLeft;
      b = b.offsetParent
    } while (b.tagName.toLowerCase() != "body");
    return c
  },
  AutoComplete_GetTop: function(a) {
    var b = a;
    var c = 0;
    do {
      c += b.offsetTop;
      b = b.offsetParent
    } while (b.tagName.toLowerCase() != "body");
    return c
  },
  AutoComplete_ShowDropdown: function(h) {
    this.AutoComplete_HideAll();
    this.__AutoCompleteElementId = h;
    var e = this.__AutoComplete[h]["element"].value;
    var d = new Array();
    var b = null;
    var g = null;
    var a = this.__AutoComplete[h]["dropdown"].childNodes.length;
    while (this.__AutoComplete[h]["dropdown"].childNodes.length > 0) {
      this.__AutoComplete[h]["dropdown"].removeChild(this.__AutoComplete[h]["dropdown"].childNodes[0])
    }
    e = e.ltrim().toUpperCase();
    for (i = 0; i < this.__AutoComplete[h]["data"].length; ++i) {
      if (this.__AutoComplete[h]["data"][i].toUpperCase().indexOf(e) != -1) {
        d[d.length] = this.__AutoComplete[h]["data"][i]
      }
    }
    if (d.length == 0) {
      this.AutoComplete_HideDropdown(h);
      return
    }
    var f = document.getElementById(h);
    var c = f.getAttribute("suggestionspace");
    if (c) {
      c = parseInt(c) / 2
    }
    for (i = 0; i < d.length; ++i) {
      b = document.createElement("div");
      b.className = "autocomplete_item";
      b.setAttribute("id", "autocomplete_item_" + i);
      b.setAttribute("index", i);
      b.style.zIndex = "99";
      if (d.length > this.__AutoComplete[h]["maxitems"] && navigator.userAgent.indexOf("MSIE") == -1) {
        b.style.width = this.__AutoComplete[h]["element"].offsetWidth - 22 + "px"
      }
      b.onmouseover = function() {
        $KW.TextField.AutoComplete.AutoComplete_HighlightItem($KW.TextField.AutoComplete.__AutoComplete[h]["element"].getAttribute("id"), this.getAttribute("index"))
      };
      b.onclick = function() {
        $KW.TextField.AutoComplete.AutoComplete_SetValue($KW.TextField.AutoComplete.__AutoComplete[h]["element"].getAttribute("id"));
        $KW.TextField.AutoComplete.AutoComplete_RemoveDivs(h)
      };
      g = document.createTextNode(d[i]);
      b.appendChild(g);
      this.AutoComplete_HideAllDropdowns();
      if (c) {
        b.style.paddingBottom = c + "px";
        b.style.paddingTop = c + "px"
      }
      this.__AutoComplete[h]["dropdown"].appendChild(b)
    }
    if (d.length > this.__AutoComplete[h]["maxitems"]) {
      this.__AutoComplete[h]["dropdown"].style.height = (this.__AutoComplete[h]["maxitems"] * 15) + 2 + "px"
    } else {
      this.__AutoComplete[h]["dropdown"].style.height = ""
    }
    this.__AutoComplete[h]["dropdown"].style.left = this.AutoComplete_GetLeft(this.__AutoComplete[h]["element"]) + "px";
    this.__AutoComplete[h]["dropdown"].style.top = this.AutoComplete_GetTop(this.__AutoComplete[h]["element"]) + this.__AutoComplete[h]["element"].offsetHeight + "px";
    if (this.isIE) {
      this.__AutoComplete[h]["iframe"].style.top = this.__AutoComplete[h]["dropdown"].style.top;
      this.__AutoComplete[h]["iframe"].style.left = this.__AutoComplete[h]["dropdown"].style.left;
      this.__AutoComplete[h]["iframe"].style.width = this.__AutoComplete[h]["dropdown"].offsetWidth;
      this.__AutoComplete[h]["iframe"].style.height = this.__AutoComplete[h]["dropdown"].offsetHeight;
      this.__AutoComplete[h]["iframe"].style.visibility = "visible"
    }
    if (!this.__AutoComplete[h]["isVisible"]) {
      this.__AutoComplete[h]["dropdown"].style.visibility = "visible";
      this.__AutoComplete[h]["isVisible"] = true
    }
    if (this.__AutoComplete[h]["dropdown"].childNodes.length != a) {
      this.__AutoComplete[h]["highlighted"] = null
    }
  },
  AutoComplete_HideDropdown: function(a) {
    if (this.__AutoComplete[a]["iframe"]) {
      this.__AutoComplete[a]["iframe"].style.visibility = "hidden"
    }
    if (this.__AutoComplete[a]["dropdown"]) {
      this.__AutoComplete[a]["dropdown"].style.visibility = "hidden"
    }
    this.__AutoComplete[a]["highlighted"] = null;
    this.__AutoComplete[a]["isVisible"] = false
  },
  AutoComplete_HideAll: function() {
    for (id in this.__AutoComplete) {
      this.AutoComplete_HideDropdown(id)
    }
  },
  AutoComplete_HideAllDropdowns: function() {
    var b = document.getElementsByClassName(this.__AutoComplete[id]["styleclass"]);
    if (b != null) {
      for (var a = 0; a < b.length; a++) {
        b[a].style.visibility = "hidden"
      }
    }
  },
  AutoComplete_HighlightItem: function(c, a) {
    if (this.__AutoComplete[c]["dropdown"].childNodes[a]) {
      for (var b = 0; b < this.__AutoComplete[c]["dropdown"].childNodes.length; ++b) {
        if (this.__AutoComplete[c]["dropdown"].childNodes[b].className == "autocomplete_item_highlighted") {
          this.__AutoComplete[c]["dropdown"].childNodes[b].className = "autocomplete_item"
        }
      }
      this.__AutoComplete[c]["dropdown"].childNodes[a].className = "autocomplete_item_highlighted";
      this.__AutoComplete[c]["highlighted"] = a
    }
  },
  AutoComplete_Highlight: function(c, a) {
    if (a == 1 && this.__AutoComplete[c]["highlighted"] == this.__AutoComplete[c]["dropdown"].childNodes.length - 1) {
      this.__AutoComplete[c]["dropdown"].childNodes[this.__AutoComplete[c]["highlighted"]].className = "autocomplete_item";
      this.__AutoComplete[c]["highlighted"] = null
    } else {
      if (a == -1 && this.__AutoComplete[c]["highlighted"] == 0) {
        this.__AutoComplete[c]["dropdown"].childNodes[0].className = "autocomplete_item";
        this.__AutoComplete[c]["highlighted"] = this.__AutoComplete[c]["dropdown"].childNodes.length
      }
    }
    if (this.__AutoComplete[c]["highlighted"] == null) {
      this.__AutoComplete[c]["dropdown"].childNodes[0].className = "autocomplete_item_highlighted";
      this.__AutoComplete[c]["highlighted"] = 0
    } else {
      if (this.__AutoComplete[c]["dropdown"].childNodes[this.__AutoComplete[c]["highlighted"]]) {
        this.__AutoComplete[c]["dropdown"].childNodes[this.__AutoComplete[c]["highlighted"]].className = "autocomplete_item"
      }
      var b = this.__AutoComplete[c]["highlighted"] + a;
      if (this.__AutoComplete[c]["dropdown"].childNodes[b]) {
        this.__AutoComplete[c]["dropdown"].childNodes[b].className = "autocomplete_item_highlighted";
        this.__AutoComplete[c]["highlighted"] = b
      }
    }
  },
  AutoComplete_SetValue: function(a) {
    this.__AutoComplete[a]["element"].value = this.__AutoComplete[a]["dropdown"].childNodes[this.__AutoComplete[a]["highlighted"]].innerHTML
  },
  AutoComplete_ScrollCheck: function(a) {
    if (this.__AutoComplete[a]["highlighted"] > this.__AutoComplete[a]["lastItemShowing"]) {
      this.__AutoComplete[a]["firstItemShowing"] = this.__AutoComplete[a]["highlighted"] - (this.__AutoComplete[a]["maxitems"] - 1);
      this.__AutoComplete[a]["lastItemShowing"] = this.__AutoComplete[a]["highlighted"]
    }
    if (this.__AutoComplete[a]["highlighted"] < this.__AutoComplete[a]["firstItemShowing"]) {
      this.__AutoComplete[a]["firstItemShowing"] = this.__AutoComplete[a]["highlighted"];
      this.__AutoComplete[a]["lastItemShowing"] = this.__AutoComplete[a]["highlighted"] + (this.__AutoComplete[a]["maxitems"] - 1)
    }
    this.__AutoComplete[a]["dropdown"].scrollTop = this.__AutoComplete[a]["firstItemShowing"] * 15
  },
  AutoComplete_KeyDown: function(b) {
    if (arguments[1] != null) {
      event = arguments[1]
    }
    var a = event.keyCode;
    switch (a) {
      case 13:
        if (this.__AutoComplete[b]["highlighted"] != null) {
          this.AutoComplete_SetValue(b);
          this.AutoComplete_HideAllDropdowns()
        }
        break;
      case 27:
        this.AutoComplete_HideAllDropdowns();
        event.returnValue = false;
        event.cancelBubble = true;
        break;
      case 38:
        if (!this.__AutoComplete[b]["isVisible"]) {
          this.AutoComplete_ShowDropdown(b)
        }
        this.AutoComplete_Highlight(b, -1);
        this.AutoComplete_ScrollCheck(b, -1);
        return false;
        break;
      case 9:
        if (this.__AutoComplete[b]["isVisible"]) {
          this.AutoComplete_HideAllDropdowns()
        }
        return;
      case 40:
        if (!this.__AutoComplete[b]["isVisible"]) {
          this.AutoComplete_ShowDropdown(b)
        }
        this.AutoComplete_Highlight(b, 1);
        this.AutoComplete_ScrollCheck(b, 1);
        return false;
        break
    }
  },
  AutoComplete_KeyUp: function(b) {
    if (arguments[1] != null) {
      event = arguments[1]
    }
    var a = event.keyCode;
    switch (a) {
      case 13:
        event.returnValue = false;
        event.cancelBubble = true;
        break;
      case 27:
        this.AutoComplete_HideAllDropdowns();
        event.returnValue = false;
        event.cancelBubble = true;
        break;
      case 38:
      case 40:
        return false;
        break;
      default:
        this.AutoComplete_ShowDropdown(b);
        break
    }
  },
  AutoComplete_isVisible: function(a) {
    return this__AutoComplete[a]["dropdown"].style.visibility == "visible"
  }
};
$KW.ComboBox = {
  initialize: function() {
    kony.events.addEvent("change", "ComboBox", this.eventHandler);
    kony.events.addEvent("click", "ComboBox", this.eventHandler)
  },
  initializeView: function(e) {
    var b = document.querySelectorAll("div[name='SelectOptions']");
    if (b) {
      for (var a = 0; a < b.length; a++) {
        var d = b[a].parentNode;
        var c = $KU.getModelByNode(d);
        $KG[d.id + "_autoComplete"] = new $KW.ComboBox.autocomplete(d.childNodes[0], {
          model: c
        })
      }
    }
  },
  updateView: function(c, h, b, d) {
    var g = $KU.getNodeByModel(c);
    switch (h) {
      case "masterdatamap":
      case "masterdata":
        var f = $KW.Utils.getMasterData(c);
        c.selectedkey = f.length > 1 ? f[IndexJL][IndexJL] : null;
        $KW.Utils.setSelectedValueProperty(c, f, "selectedkey");
        if (g) {
          var l = document.createElement("div");
          l.innerHTML = this.generateList(c, f, {
            tabpaneID: g.getAttribute("ktabpaneid")
          });
          g.parentNode.replaceChild(l.firstChild, g);
          if (c.viewtype == "editableview" && c.autosuggest) {
            var a = $KU.getNodeByModel(c);
            $KG[a.id + "_autoComplete"] = new $KW.ComboBox.autocomplete(a.childNodes[0], {
              model: c
            })
          }
          $KU.toggleVisibilty($KU.getNodeByModel(c), f, c)
        }
        break;
      case "selectedkey":
        if (g) {
          var k = c.selectedkey;
          if (c.viewtype == "editableview") {
            var f = $KW.Utils.getMasterData(c);
            var j = false;
            if (f.length > IndexJL) {
              for (var e = IndexJL; e < f.length; e++) {
                if (f[e][IndexJL] == k) {
                  g.children[0].value = f[e][IndexJL + 1];
                  j = true;
                  c.selectedkeyvalue = [k, f[e][IndexJL + 1]];
                  IndexJL && c.selectedkeyvalue.splice(0, 0, null);
                  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
                    c.selectedKeyValue = c.selectedkeyvalue
                  }
                }
              }
            }
            if (!j || f.length < 0) {
              g.children[0].value = k;
              c.selectedkeyvalue = [k, k];
              IndexJL && c.selectedkeyvalue.splice(0, 0, null);
              if (kony.appinit.isIE7 || kony.appinit.isIE8) {
                c.selectedKeyValue = c.selectedkeyvalue
              }
            }
          } else {
            g.value = c.selectedkey;
            $KW.Utils.setSelectedValueProperty(c, $KW.Utils.getMasterData(c), "selectedkey")
          }
        }
        break;
      case "viewtype":
      case "autosuggest":
        if (g) {
          var f = $KW.Utils.getMasterData(c);
          var l = document.createElement("div");
          l.innerHTML = this.generateList(c, f, {
            tabpaneID: g.getAttribute("ktabpaneid")
          });
          g.parentNode.replaceChild(l.firstChild, g);
          if (h == "autosuggest" && b && f && f.length > IndexJL) {
            g = $KU.getNodeByModel(c);
            $KG[g.id + "_autoComplete"] = new $KW.ComboBox.autocomplete(g.childNodes[0], {
              data: f,
              model: c
            })
          }
        }
        break;
      case "editableareaskin":
        if (g && c.viewtype == "editableview") {
          g.childNodes[0].className = b
        }
        break
    }
  },
  render: function(c, a) {
    if (typeof $KW.konyPicker !== "function" || c.view === "popup") {
      c.view = "native"
    }
    if (!c.buiskin) {
      c.buiskin = c.blockeduiskin
    }
    var b = $KW.Utils.getMasterData(c);
    b.ispercent = a.ispercent;
    return this.generateList(c, b, a)
  },
  generateList: function(j, g, c) {
    var m = "";
    var h = $KW.skins.getWidgetSkinList(j, c, g);
    if (!j.view || j.view == "native") {
      if (g.length > IndexJL) {
        var o = j.selectedkey;
        j.selectedkey = o ? o : g[IndexJL][IndexJL];
        $KW.Utils.setSelectedValueProperty(j, g, "selectedkey")
      }
    }
    if (j.viewtype == "editableview") {
      var n = "";
      var q = "";
      var b = $KW.skins.getMarPadAdjustedContainerWeightSkin(j, 100);
      for (var f = IndexJL; f < g.length; f++) {
        (j.selectedkey == g[f][IndexJL]) && (n = g[f][1 + IndexJL]);
        if (!j.autosuggest) {
          q += "<div value='" + g[f][IndexJL] + "' name='SelectOption' style='padding: 1px; padding-left:3px;" + (j.selectedkey == g[f][1] ? "background-color:#3169C6;color:#FFFFFF" : "") + "'>" + g[f][1 + IndexJL] + "</div>"
        }
      }
      n = n || j.selectedkey || "";
      var a = "line-height:16px !important;width:50%;padding-left:2px;font: inherit;border:0px;float:left;" + (!j.editableareaskin ? "background:transparent;" : "");
      m = "<div " + $KW.Utils.getBaseHtml(j, c) + "style='position: relative;' class='" + h + "'><input class='" + j.editableareaskin + "'" + (kony.appinit.isIE7 || kony.appinit.isIE8 ? " onchange='$KW.ComboBox.textChangeEventHandler(arguments[0],this)'" : " ") + " style='" + a + (kony.appinit.isIE7 ? "height:13px !important" : "height:16px !important") + "' type='text' value='" + n + "'" + ((j.length) ? " maxlength='" + j.length + "'" : "") + "/><img name='SelectImage' src='" + $KU.getImageURL("select_arrow.gif") + "' onmouseover='$KW.ComboBox.toggleSelection(arguments[0])' onmouseout='$KW.ComboBox.toggleSelection(arguments[0])' style='position: absolute; right:0px; height: 100%;' onload='$KW.ComboBox.adjustWidth(arguments[0])'/>";
      a = "position: absolute;z-index: 10;display:none;text-align:left;left:-1px;";
      m += "<div id='" + j.pf + "_" + j.id + "_options' name='SelectOptions' class='" + b + " " + (j.skin || "") + "' style='overflow:auto;max-height:150px;" + a + (kony.appinit.isIE7 ? "top:16px" : "") + "' onmouseover='this.parentNode.firstChild.blur();$KW.ComboBox.toggleSelection(arguments[0])'>" + q + "</div>";
      m += "</div>";
      return m
    }
    if (!j.view || j.view == "native") {
      m = "<select " + (kony.appinit.isIE7 || kony.appinit.isIE8 ? " onchange='$KW.ComboBox.eventHandler(arguments[0],this)'" : " ") + $KW.Utils.getBaseHtml(j, c) + "class='" + h + "'" + (j.disabled ? " disabled='true'" : "") + " style='" + $KW.skins.getBaseStyle(j, c) + "'>";
      for (var f = IndexJL; f < (g.length); f++) {
        if (g[f][IndexJL] != null && g[f][1 + IndexJL] != null) {
          var e = (j.selectedkey == g[f][IndexJL]) ? "selected" : "";
          var k = $KU.getAccessibilityValues(j, g[f][2 + IndexJL], g[f][IndexJL]);
          m += "<option  " + k + " value='" + g[f][IndexJL] + "' " + e + ">" + $KU.escapeHTMLSpecialEntities(g[f][1 + IndexJL]) + "</option>"
        }
      }
      m += "</select>"
    } else {
      var p = "kselect ";
      p += (j.skin) ? j.skin : "klistbox";
      m += '<div id="' + j.pf + "_" + j.id + '"' + (c.tabpaneID ? ' ktabpaneid="' + c.tabpaneID + '"' : "") + ' kformname="' + j.pf + '" kwidgettype="' + j.wType + '"  class="' + p + " " + h + ' idevice kddicon" ' + (j.disabled ? 'disabled="true" ' : "") + ' style="text-align:left;">';
      if (j.masterdata) {
        if (!j.selectedkey) {
          j.selectedkey = j.masterdata[0 + IndexJL][0 + IndexJL];
          $KW.Utils.setSelectedValueProperty(j, g, "selectedkey");
          m += j.masterdata[0 + IndexJL][1 + IndexJL]
        } else {
          for (var l = IndexJL; l < j.masterdata.length; l++) {
            if (j.masterdata[l][0 + IndexJL] === j.selectedkey) {
              m += j.masterdata[l][1 + IndexJL];
              break
            }
          }
        }
      }
      m += "</div>"
    }
    return m
  },
  textChangeEventHandler: function(a, c) {
    var b = $KU.getModelByNode(c.parentNode);
    if (b) {
      b.selectedkey = c.value;
      b.selectedkeyvalue = [c.value, c.value];
      IndexJL && b.selectedkeyvalue.splice(0, 0, null);
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        b.selectedKey = b.selectedkey;
        b.selectedKeyValue = b.selectedkeyvalue
      }
    }
  },
  eventHandler: function(a, d, e) {
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a = a || window.event
    }
    var c = $KU.getModelByNode(d);
    var b = $KW.Utils.getMasterData(c);
    if (c) {
      var g;
      if (c.viewtype == "editableview") {
        var f = d.children[2];
        if (e.tagName == "IMG") {
          if (f.style.display == "block") {
            f.style.display = "none"
          } else {
            if (c.autosuggest) {
              var h = $KG[d.id + "_autoComplete"];
              h.renderDropdown(b)
            }
            f.style.display = "block";
            $KW.ComboBox.setSelectedSkin(c, f.children)
          }
        } else {
          if (e.getAttribute("name") == "SelectOption") {
            g = e.getAttribute("value");
            d.children[0].value = e.innerText || e.textContent;
            e.style.backgroundColor = "#3169C6";
            e.style.color = "#FFFFFF";
            f.style.display = "none";
            c.selectedkeyvalue = IndexJL ? [null, g, e.innerText || e.textContent] : [g, e.innerText || e.textContent]
          } else {
            if (a.type == "click") {
              f.style.display = "none"
            }
            g = e.value;
            c.selectedkeyvalue = IndexJL ? [null, g, g] : [g, g]
          }
        }
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          c.selectedKeyValue = c.selectedkeyvalue
        }
      } else {
        g = d.value
      }
      if (c.viewtype != "editableview" && a.type == "click") {
        return
      }
      c.selectedkey = g;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedKey = c.selectedkey
      }
      if (d.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(c, d, false)
      } else {
        if (c.viewtype != "editableview") {
          $KW.ComboBox.resetOption(c, d, b);
          $KW.Utils.setSelectedValueProperty(c, $KW.Utils.getMasterData(c), "selectedkey")
        }
        if ((c.ondone || c.onselection) && c.blockeduiskin) {
          $KW.Utils.applyBlockUISkin(c)
        }
        var i = $KU.returnEventReference(c.ondone || c.onselection);
        i && i.call(c, c)
      }
    }
  },
  resetOption: function(a, f, e) {
    var d = f.childNodes;
    for (var c = 0; c < d.length; c++) {
      d[c].removeAttribute("selected")
    }
    for (var c = 0; c <= d.length; c++) {
      var b = (a.selectedkey == e[c][0]) ? "selected" : "";
      if (b == "selected") {
        f.childNodes[c].setAttribute("selected", "");
        break
      }
    }
  },
  toggleSelection: function(d) {
    var d = d || window.event;
    var f = d.currentTarget || d.srcElement;
    if (f.tagName == "IMG") {
      if (d.type == "mouseover") {
        f.src = $KU.getImageURL("select_arrow_hover.gif")
      } else {
        f.src = $KU.getImageURL("select_arrow.gif")
      }
    } else {
      var c = f;
      var e = $KU.getModelByNode(c.parentNode);
      var a = c.children;
      for (var b = 0; b < a.length; b++) {
        if (e.selectedkeyvalue && a[b].innerHTML == e.selectedkeyvalue[1 + IndexJL]) {
          a[b].style.backgroundColor = "";
          a[b].style.color = ""
        }
      }
    }
  },
  adjustWidth: function(c) {
    var c = c || window.event;
    var f = c.currentTarget || c.srcElement;
    var e = f.parentNode;
    var d = $KU.getModelByNode(e);
    if (d && d.viewtype == "editableview") {
      var a = e.clientWidth;
      var b = e.children[1].clientWidth;
      if (a && b) {
        e.firstChild.style.width = ((a - b) / a) * 100 + "%"
      }
    }
  },
  setSelectedSkin: function(b, a) {
    for (var c = 0; c < a.length; c++) {
      if (b.selectedkeyvalue && a[c].innerHTML == b.selectedkeyvalue[2]) {
        a[c].style.backgroundColor = "#3169C6";
        a[c].style.color = "#FFFFFF"
      } else {
        a[c].style.backgroundColor = "";
        a[c].style.color = ""
      }
    }
  }
};
$KW.ComboBox.autocomplete = function(c, a) {
  this.textBox = c;
  this.dropDown = c.parentNode.childNodes[2];
  c.parentNode.style.height = c.offsetHeight + "px";
  this.dropDown.style.top = (c.parentNode.offsetHeight - 1) + "px";
  this.dropDown.style.width = c.parentNode.offsetWidth + "px";
  if (a && a.model.autosuggest) {
    for (var b in a) {
      this[b] = a[b]
    }
    kony.events.addEventListener(c, "keyup", this.handleEvent.bind(this));
    kony.events.addEventListener(c, "keydown", this.handleEvent.bind(this))
  }
};
$KW.ComboBox.autocomplete.prototype = {
  handleEvent: function(b) {
    b = b || window.event;
    var a = this;
    switch (b.type) {
      case "keydown":
        a.onKeyDown(b);
        break;
      case "keyup":
        a.onKeyUp(b);
        break
    }
  },
  onKeyDown: function(a) {
    if (!a) {
      a = window.event
    }
    var b = a.keyCode;
    switch (b) {
      case 38:
        this.moveUp();
        break;
      case 40:
        this.moveDown();
        break
    }
  },
  onKeyUp: function(a) {
    if (!a) {
      a = window.event
    }
    var b = a.keyCode;
    if ((b >= 33 && b < 46) || (b >= 112 && b <= 123)) {} else {
      if (b == 13 || b == 27) {
        this.dropDown.style.display = "none"
      } else {
        this.showOptions()
      }
    }
  },
  showOptions: function() {
    var a = this.textBox.value;
    this.cur = -1;
    if (a.length > 0) {
      var b = this.getMatches(a);
      if (b.length > IndexJL) {
        this.renderDropdown(b);
        this.dropDown.style.display = "block"
      } else {
        this.dropDown.innerHTML = "";
        this.dropDown.style.display = "none"
      }
    } else {
      var b = $KW.Utils.getMasterData(this.model);
      if (b.length > IndexJL) {
        this.renderDropdown(b);
        this.dropDown.style.display = "block"
      }
    }
  },
  renderDropdown: function(b) {
    while (this.dropDown.hasChildNodes()) {
      this.dropDown.removeChild(this.dropDown.firstChild)
    }
    for (var a = IndexJL; a < b.length; a++) {
      var c = document.createElement("div");
      c.innerHTML = "<div value='" + b[a][IndexJL] + "' name='SelectOption' style='padding: 1px; padding-left:3px;" + (this.model.selectedkey == b[a][IndexJL] ? "background-color:#3169C6;color:#FFFFFF" : "") + "'>" + b[a][1 + IndexJL] + "</div>";
      this.dropDown.appendChild(c.firstChild)
    }
  },
  getMatches: function(d) {
    var c = IndexJL ? [null] : [];
    this.model.selectedkey = null;
    var b = $KW.Utils.getMasterData(this.model);
    if (b && b.length > IndexJL) {
      for (var a = IndexJL; a < b.length; a++) {
        if (b[a][1 + IndexJL].toLowerCase().indexOf(d.toLowerCase()) == 0) {
          c.push(IndexJL ? [null, b[a][IndexJL], b[a][1 + IndexJL]] : [b[a][IndexJL], b[a][1 + IndexJL]]);
          if (d == b[a][1 + IndexJL]) {
            this.model.selectedkey = b[a][IndexJL]
          }
        }
      }
    }
    return c
  },
  moveUp: function() {
    this.dropDown.style.display = "block";
    var a = this.dropDown.childNodes;
    if (a.length > 0 && this.cur > 0) {
      --this.cur;
      this.setSelectedValue(a)
    }
  },
  moveDown: function() {
    this.dropDown.style.display = "block";
    var a = this.dropDown.childNodes;
    if (a.length > 0 && this.cur < (a.length - 1)) {
      ++this.cur;
      this.setSelectedValue(a)
    }
  },
  setSelectedValue: function(a) {
    for (var b = 0; b < a.length; b++) {
      if (b == this.cur) {
        a[b].style.backgroundColor = "#3169C6";
        a[b].style.color = "#FFFFFF";
        this.textBox.value = a[b].innerHTML;
        this.model.selectedkey = a[b].getAttribute("value");
        this.model.selectedkeyvalue = IndexJL ? [null, this.model.selectedkey, this.textBox.value] : [this.model.selectedkey, this.textBox.value];
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          this.model.selectedKey = this.model.selectedkey;
          this.model.selectedKeyValue = this.model.selectedkeyvalue
        }
      } else {
        a[b].style.backgroundColor = "";
        a[b].style.color = ""
      }
    }
  }
};

$KW.RadioButtonGroup = {
  initialize: function() {
    kony.events.addEvent("change", "RadioButtonGroup", this.eventHandler);
    if (kony.appinit.isIE8 || kony.appinit.isIE7) {
      kony.events.addEvent("click", "RadioButtonGroup", this.eventHandler)
    }
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    switch (c) {
      case "masterdatamap":
      case "masterdata":
        var g = $KW.Utils.getMasterData(f);
        f.selectedkey = g.length > 1 ? g[IndexJL][IndexJL] : null;
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          f.selectedKey = f.selectedkey
        }
        $KW.Utils.setSelectedValueProperty(f, g, "selectedkey");
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "selectedkey":
        var h = document.querySelectorAll("#" + f.pf + " input[name='" + f.id + "']");
        for (var d = 0; d < h.length; d++) {
          if (f.selectedkey == h[d].value) {
            h[d].checked = true
          } else {
            h[d].checked = false
          }
        }
        f.selectedkey && $KW.Utils.setSelectedValueProperty(f, $KW.Utils.getMasterData(f), "selectedkey");
        if (!f.selectedkey) {
          f.selectedKeyValue = f.selectedkeyvalue = null
        }
        break;
      case "viewtype":
        f.propertyName = b;
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "checkedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "uncheckedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "size":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break
    }
  },
  render: function(a, b) {
    var d = $KW.Utils.getMasterData(a);
    var c = $KW.skins.getWidgetSkinList(a, b, d);
    var e = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='" + $KW.skins.getBaseStyle(a, b) + (b.ispercent === false ? "display:inline-block" : "") + "'>";
    a.context = b;
    e += this.generateList(a, d, b);
    e += "</div>";
    return e
  },
  generateList: function(c, e, b) {
    var h = "";
    if (e.length > IndexJL) {
      var j = c.selectedkey;
      c.selectedkey = j ? j : null;
      $KW.Utils.setSelectedValueProperty(c, e, "selectedkey");
      for (var f = IndexJL; f < e.length; f++) {
        if (e[f][IndexJL] != null && e[f][1 + IndexJL] != null) {
          var d = (c.selectedkey == e[f][IndexJL]) ? "checked" : "";
          if (c.viewtype == "customview" && !kony.appinit.isIE8) {
            if (c.itemorientation == "vertical") {
              h += "<div style = 'height: auto;'  class='kwt100'>"
            } else {
              h += "<div style = ' display: inline-block; height: auto;' >"
            }
            var k;
            if (d == "checked") {
              k = "url(" + $KU.getImageURL(c.checkedimage) + ")"
            } else {
              k = "url(" + $KU.getImageURL(c.uncheckedimage) + ")"
            }
            var a = (b && b.container ? (c.id + "_" + b.container.counter) : c.id);
            h += "<input style='display : none;' id ='" + c.id + "radio" + f + "' class='middlecenteralign' kformname='" + c.pf + "' kwidgettype='" + c.wType + "' type='radio' " + d + ($KW.Utils.isWidgetDisabled(c, b) ? " disabled='true'" : "") + " value='" + e[f][IndexJL] + "' name='" + a + "' style='  margin-right:3px;' />";
            h += "<label id ='" + c.id + "_label" + f + "' selected ='" + d + "'  for ='" + c.id + "radio" + f + "'  name = '" + c.id + "_label" + f + "' style=' background-image: " + k + "; width: " + c.size + "px; height: " + c.size + "px; -webkit-background-size: 100%; background-size:100%; margin-right: 3px; vertical-align: middle; display: inline-block;' ></label>";
            h += "<label style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            h += $KU.escapeHTMLSpecialEntities(e[f][1 + IndexJL]);
            h += (c.itemorientation == constants.RADIOGROUP_ITEM_ORIENTATION_VERTICAL) ? "</label><br/></div>" : "</div></label>&nbsp;"
          } else {
            if (c.itemorientation == "vertical") {
              h += "<div style = 'height: auto;'  class='kwt100'>"
            } else {
              h += "<div style = ' display: inline-block; height: auto; text-decoration: inherit;' >"
            }
            var a = (b && b.container ? (c.id + "_" + b.container.counter) : c.id);
            var g = $KU.getAccessibilityValues(c, e[f][2 + IndexJL], e[f][IndexJL]);
            if (g.indexOf("aria-label") < 0) {
              g += " aria-label='" + $KU.escapeHTMLSpecialEntities(e[f][1 + IndexJL]) + "' "
            }
            h += "<input  " + g + "type='radio' kwidgettype='" + c.wType + "' name='" + a + "' " + d + ($KW.Utils.isWidgetDisabled(c, b) ? " disabled='true'" : "") + " class='middlecenteralign' value='" + e[f][IndexJL] + "' style='margin-right:3px;' kformname='" + c.pf + "'/>";
            h += "<span aria-hidden='true' class='middlecenteralign'>" + $KU.escapeHTMLSpecialEntities(e[f][1 + IndexJL]) + "</span>";
            h += (c.itemorientation == "vertical") ? "<br/></div>" : "</div>&nbsp;"
          }
        }
      }
    }
    return h
  },
  changeImage: function(f, b, a) {
    if (b.selectedkey != a) {
      var e = $KW.Utils.getMasterData(b);
      var h = "url(" + $KU.getImageURL(b.checkedimage) + ")";
      var g = "url(" + $KU.getImageURL(b.uncheckedimage) + ")";
      for (var c = IndexJL; c < e.length; c++) {
        if (e[c][IndexJL] != null && e[c][1 + IndexJL] != null) {
          var d = $KU.getElementById(b.id + "_label" + c);
          if (d.getAttribute("selected") == "checked") {
            d.style.backgroundImage = "url(" + $KU.getImageURL(b.uncheckedimage) + ")";
            d.setAttribute("selected", "")
          }
        }
      }
      f.style.backgroundImage = "url(" + $KU.getImageURL(b.checkedimage) + ")";
      f.setAttribute("selected", "checked")
    }
  },
  eventHandler: function(b, g) {
    if (kony.appinit.isIE8 && g.tagName == "DIV") {
      return
    }
    var f = g.parentNode.parentNode;
    var a = $KU.getModelByNode(f);
    var e = f.getElementsByTagName("input");
    for (var c = 0; c < e.length; c++) {
      e[c].removeAttribute("checked")
    }
    g.setAttribute("checked", "");
    if (a) {
      if (a.viewtype == "customview" && !kony.appinit.isIE8) {
        $KW.RadioButtonGroup.changeImage($KU.getNextSibling(g), a, g.value)
      }
      a.selectedkey = g.value;
      if (f.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(a, g, false)
      } else {
        $KW.Utils.setSelectedValueProperty(a, $KW.Utils.getMasterData(a), "selectedkey");
        var d = $KU.returnEventReference(a.onselection);
        if (d) {
          d.call(a, a);
          $KU.onEventHandler(a)
        }
      }
    }
  }
};
$KW.ListBox = {
  initialize: function() {
    kony.events.addEvent("change", "ListBox", this.eventHandler)
  },
  updateView: function(b, g, a, c) {
    var f = $KU.getNodeByModel(b);
    switch (g) {
      case "multiselectrows":
        if (f && b.multiple) {
          f.setAttribute("size", a)
        }
        break;
      case "masterdatamap":
      case "masterdata":
        var e = $KW.Utils.getMasterData(b);
        b.selectedkey = b.selectedkeys = b.selectedkeyvalue = b.selectedkeyvalues = null;
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          b.selectedKey = b.selectedKeys = b.selectedKeyValue = b.selectedKeyValues = null
        }
        if (f) {
          b.context.ispercent = "";
          var j = document.createElement("div");
          j.innerHTML = this.generateList(b, e, b.context);
          f.parentNode.replaceChild(j.firstChild, f);
          $KU.toggleVisibilty($KU.getNodeByModel(b), e, b)
        }
        break;
      case "selectedkeys":
        $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkeys");
        if (f) {
          if (f.tagName == "SELECT") {
            var k = f.options;
            if (k.length > 0) {
              for (var d = 0; d < k.length; d++) {
                if (b.selectedkeys && $KU.inArray(b.selectedkeys, k[d].value)[0]) {
                  k[d].selected = true
                } else {
                  k[d].selected = false
                }
              }
              if (!b.selectedkeys) {
                if (!b.multiple) {
                  k[0].selected = true
                }
                b.selectedkeyvalues = null;
                if (kony.appinit.isIE7 || kony.appinit.isIE8) {
                  b.selectedKeyValues = null
                }
              }
            }
          } else {
            if (f.tagName == "DIV") {
              if (b.selectedkeys) {
                f.innerText = b.selectedkeyvalues[1][2]
              } else {
                f.innerText = b.masterdata[1][2]
              }
            }
          }
        }
        break;
      case "selectedkey":
        if (f) {
          var h = b.selectedkey;
          f.value = b.selectedkey
        }
        $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkey");
        break
    }
  },
  render: function(c, a) {
    if (!c.buiskin) {
      c.buiskin = c.blockeduiskin
    }
    if (typeof $KW.konyPicker !== "function" || c.view === "popup") {
      c.view = "native"
    }
    var b = $KW.Utils.getMasterData(c);
    b.ispercent = a.ispercent;
    c.context = a;
    return this.generateList(c, b, a)
  },
  generateList: function(b, c, a) {
    var e = $KW.skins.getWidgetSkinList(b, a, c);
    var k = b.multiple ? " multiple" : "";
    var j = b.multiselectrows ? " size=" + parseInt(b.multiselectrows) : "";
    var h = "";
    if (!b.view || b.view == "native") {
      var f = b.contentalignment == constants.CONTENT_ALIGN_MIDDLE_RIGHT ? " dir='rtl'" : "";
      h = "<select" + f + $KW.Utils.getBaseHtml(b, a) + "class='" + e + "' " + (b.disabled ? "disabled='true' " : "") + k + j + " style='" + $KW.skins.getBaseStyle(b, a) + "'" + ((kony.appinit.isIE8 || kony.appinit.isIE7) ? "onchange=$KW.ListBox.eventHandler(arguments[0],this)" : "") + ">";
      if (c.length > IndexJL) {
        b.selectedkey && $KW.Utils.setSelectedValueProperty(b, c, "selectedkey");
        b.selectedkeys && $KW.Utils.setSelectedValueProperty(b, c, "selectedkeys");
        if (b.needsectionheaders) {
          h += this.generateGroupOptions(b, c)
        } else {
          h += this.generateOptions(b, c)
        }
      }
      h += "</select>"
    } else {
      var i = "kselect";
      i += (b.skin) ? " " + b.skin : " klistbox";
      h += "<div " + $KW.Utils.getBaseHtml(b, a) + "  class='" + i + " " + e + ' idevice kddicon" ' + (b.disabled ? 'disabled="true" ' : "") + k + ' style="text-align:left;">';
      if (!b.selectedkeys || b.selectedkeys.length < 1) {
        b.selectedkeys = [null, b.masterdata[IndexJL][IndexJL]];
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          b.selectedKeys = b.selectedkeys
        }
        b.selectedkeys && $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkeys");
        h += b.masterdata[IndexJL][IndexJL + 1]
      } else {
        for (var g = IndexJL; g < b.masterdata.length; g++) {
          if (b.masterdata[g][IndexJL] === b.selectedkeys[IndexJL]) {
            h += b.masterdata[g][IndexJL + 1];
            break
          }
        }
      }
      h += "</div>"
    }
    return h
  },
  generateGroupOptions: function(d, b) {
    var c = "";
    for (var a = 1; a < b.length; a++) {
      if (b[a][1] != null && $KU.isArray(b[a][2])) {
        c += "<optgroup label='" + b[a][1] + "' class='" + (d.sectionskin || "") + "'>";
        c += this.generateOptions(d, b[a][2]);
        c += "</optgroup>"
      }
    }
    return c
  },
  generateOptions: function(f, d) {
    var e = "";
    var b = false;
    for (var a = IndexJL; a < d.length; a++) {
      if (d[a][IndexJL] != null) {
        if (f.multiple) {
          b = (f.selectedkeys && $KU.inArray(f.selectedkeys, d[a][IndexJL])[0]) ? "selected" : ""
        } else {
          b = (f.selectedkey && f.selectedkey == d[a][IndexJL]) ? "selected" : ""
        }
        var c = $KU.getAccessibilityValues(f, d[a][2 + IndexJL], d[a][IndexJL]);
        e += '<option value="' + d[a][IndexJL] + '" ' + b + c + ">" + $KU.escapeHTMLSpecialEntities(d[a][1 + IndexJL]) + "</option>"
      }
    }
    if (b != "selected") {
      f.selectedkey = d[IndexJL][IndexJL];
      f.selectedkeyvalue = [d[IndexJL][IndexJL], d[IndexJL][IndexJL + 1]]
    }
    return e
  },
  eventHandler: function(c, k) {
    var b = $KU.getModelByNode(k);
    if (b) {
      var e = $KW.Utils.getMasterData(b);
      if ((kony.appinit.isIE7 || kony.appinit.isIE8) && !b.multiple) {
        if (k.value == b.selectedkey) {
          return
        }
      }
      var n = (IndexJL == 1 ? [null] : []);
      if (k.tagName == "SELECT") {
        for (var f = 0; f < k.options.length; f++) {
          if (k.options[f].selected) {
            b.selectedkey = k.options[f].value;
            if (kony.appinit.isIE7 || kony.appinit.isIE8) {
              b.selectedKey = b.selectedkey
            }
            n.push(k.options[f].value)
          }
        }
      } else {
        if (k.tagName == "DIV") {
          var a = b.selectedkeys;
          var h = $KG[k.id];
          if (h) {
            n.push(h.val)
          }
        }
      }
      b.selectedkeys = n;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        b.selectedKeys = b.selectedkeys
      }
      var l = k.childNodes;
      for (var f = 0; f < l.length; f++) {
        l[f].removeAttribute("selected")
      }
      if (b.multiple) {
        for (var d = 0; d < b.selectedkeys.length; d++) {
          for (var f = 0; f < l.length; f++) {
            var g = (b.selectedkeys[d] == e[f][0]) ? "selected" : "";
            if (g == "selected") {
              k.childNodes[f].setAttribute("selected", "");
              break
            }
          }
        }
      } else {
        for (var f = 0; f < l.length; f++) {
          var g = (b.selectedkey == e[f][0]) ? "selected" : "";
          if (g == "selected") {
            k.childNodes[f].setAttribute("selected", "");
            break
          }
        }
      }
      $KW.Utils.setSelectedValueProperty(b, e, "selectedkey");
      $KW.Utils.setSelectedValueProperty(b, e, "selectedkeys");
      if ((b.ondone || b.onselection) && b.blockeduiskin) {
        $KW.Utils.applyBlockUISkin(b)
      }
      if (k.tagName == "SELECT" || (k.tagName == "DIV" && h && a && a[IndexJL] !== h.val)) {
        var m = $KU.returnEventReference(b.ondone || b.onselection);
        if (m) {
          m.call(b, b);
          $KU.onEventHandler(b)
        }
      }
    }
  }
};

$KW.TextArea = {
  initialize: function() {
    kony.events.addEvent("change", "TextArea", this.eventHandler);
    kony.events.addEvent("keyup", "TextArea", this.keyUpEventHandler);
    kony.events.addEvent("keydown", "TextArea", this.keyDownEventHandler)
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    if (!e) {
      return
    }
    switch (c) {
      case "text":
        if (b) {
          e.value = b;
          b && $KU.removeClassName(e, "konyplaceholder")
        } else {
          e.value = ""
        }
        $KW.TextField.setPlaceholder(f, e);
        break;
      case "maxtextlength":
      case "length":
        e.maxLength = b;
        break;
      case "placeholder":
        e.setAttribute("placeholder", b);
        $KW.TextField.setPlaceholder(f, e);
        break;
      case "numberofvisiblelines":
        e.setAttribute("rows", b);
        break;
      case "numberofrows":
        e.setAttribute("rows", b);
        break;
      case "mode":
      case "textinputmode":
        if (b == constants.TEXTAREA_INPUT_MODE_ANY) {
          e.setAttribute("type", "text")
        } else {
          if (b == constants.TEXTAREA_INPUT_MODE_NUMERIC) {
            e.setAttribute("type", "number")
          }
        }
        break;
      case "autocapitalize":
        var g = b;
        if ($KU.isiPhone && parseInt($KU.getPlatformVersion("iphone")) <= 4 && b != constants.TEXTAREA_AUTO_CAPITALIZE_NONE) {
          g = "on"
        }
        e.setAttribute("autocapitalize", g);
        var d = $KU.getTextTrasform(f);
        d && (e.style.textTransform = d);
        break;
      case "keyboardtype":
      case "keyboardstyle":
        (textModel.mode != "P") && e.setAttribute("type", b);
        break
    }
  },
  render: function(g, b) {
    if (typeof g.mode == "undefined") {
      g.mode = g.textinputmode
    }
    var d = $KW.skins.getWidgetSkinList(g, b);
    switch (g.mode) {
      case constants.TEXTAREA_INPUT_MODE_NUMERIC:
        type = "number";
        break;
      default:
        type = "text"
    }
    if (g.keyboardtype) {
      switch (g.keyboardtype) {
        case constants.TEXTAREA_KEY_BOARD_STYLE_EMAIL:
          type = "email";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_URL:
          type = "url";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_CHAT:
          type = "chat";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_DECIMAL:
        case constants.TEXTAREA_KEY_BOARD_STYLE_NUMBER_PAD:
          type = "number";
          break;
        case constants.TEXTAREA_KEY_BOARD_STYLE_PHONE_PAD:
          type = "tel";
          break
      }
    }
    var f = g.text;
    if (!("placeholder" in document.createElement("input"))) {
      d += ((g.placeholder && !g.text) ? " konyplaceholder " : "");
      f = f || g.placeholder || ""
    }
    var c = $KW.skins.getBaseStyle(g, b) + " -" + vendor + "-text-security:" + (g.securetextentry ? "circle;" : "none;") + "resize:none; " + (b.layoutDir && b.ispercent === false ? ";float:" + b.layoutDir : "");
    c += ";text-align:" + $KW.skins.getContentAlignment(g) + ";";
    var a = $KU.getTextTrasform(g);
    c += a ? "text-transform:" + a + ";" : "";
    var e = "<textarea" + $KW.Utils.getBaseHtml(g, b) + "class = '" + d + "' cols='15' rows='" + g.numberofvisiblelines + "' maxlength='" + g.maxtextlength + "' style='" + c + "' type = '" + type + "'  autocapitalize='" + g.autocapitalize + "'";
    if (g.maxtextlength && $KU.isIE) {
      e += " onpaste='return $KW.TextArea.handlepaste(event, this);' onkeypress='return $KW.TextArea.imposeMaxLength(event, this);'"
    }
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      e += " onchange='$KW.TextArea.eventHandler(arguments[0], this)'"
    }
    e += " onfocus='$KW.TextField.onfocusEventHandler(arguments[0],this)' onblur='$KW.TextField.onblurEventHandler(arguments[0],this)' ";
    e += (g.placeholder) ? " placeholder='" + $KU.escapeHTMLSpecialEntities(g.placeholder) + "'" : "";
    e += ">" + f + "</textarea>";
    return e
  },
  onblurEventHandler: function(a, c) {
    var b = $KU.getModelByNode(c);
    b && $KU.onHideKeypad(b)
  },
  eventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    if (c) {
      c.canUpdateUI = false;
      c.text = d.value;
      c.canUpdateUI = true;
      d.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(c, d, false);
      var b = $KU.returnEventReference(c.ontextchange);
      if (b) {
        b.call(c, c);
        $KU.onEventHandler(c)
      }
    }
  },
  keyUpEventHandler: function(b, e) {
    var d = $KU.getModelByNode(e);
    if (d) {
      d.canUpdateUI = false;
      d.text = e.value;
      d.canUpdateUI = true
    }
    if (d.ondone && (b.keyCode == 10 || b.keyCode == 13)) {
      if (d) {
        e.getAttribute("kcontainerID") && $KW.Utils.updateContainerData(d, e, false, true);
        var c = $KU.returnEventReference(d.done || d.ondone);
        (d.blockeduiskin) && $KW.Utils.applyBlockUISkin(d);
        if (c) {
          c.call(d, d);
          $KU.onEventHandler(d)
        }
      }
    }
    var a = $KU.returnEventReference(d.onkeyup);
    a && a.call(d, d)
  },
  handlepaste: function(c, e) {
    if (!c) {
      c = window.event
    }
    var b = $KU.getModelByNode(e);
    var a = b.maxtextlength;
    if (a) {
      var d = window.clipboardData.getData("Text");
      d = e.innerHTML + d;
      if (d.length > a) {
        e.innerHTML = d.substring(0, a);
        return false
      }
      return true
    }
  },
  imposeMaxLength: function(d, c) {
    if (!d) {
      d = window.event
    }
    var b = $KU.getModelByNode(c);
    var a = b.maxtextlength;
    return (c.value.length < a) || (d.keyCode == 8 || d.keyCode == 46 || (d.keyCode >= 35 && d.keyCode <= 40))
  },
  keyDownEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    var b = $KU.returnEventReference(c.onkeydown);
    b && b.call(c, c)
  }
};
$KW.CheckBoxGroup = {
  initialize: function() {
    kony.events.addEvent("change", "CheckBoxGroup", this.eventHandler);
    if (kony.appinit.isIE8 || kony.appinit.isIE7) {
      kony.events.addEvent("click", "CheckBoxGroup", this.eventHandler)
    }
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    switch (c) {
      case "masterdatamap":
      case "masterdata":
        var g = $KW.Utils.getMasterData(f);
        f.selectedkeys && $KW.Utils.setSelectedValueProperty(f, g, "selectedkeys");
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "selectedkeys":
        var h = document.querySelectorAll("#" + f.pf + " input[name='" + f.id + "']");
        if (h.length > 0) {
          for (var d = 0; d < h.length; d++) {
            if ($KU.inArray(f.selectedkeys, h[d].value)[0]) {
              h[d].checked = true
            } else {
              h[d].checked = false
            }
          }
          $KW.Utils.setSelectedValueProperty(f, $KW.Utils.getMasterData(f), "selectedkeys")
        }
        break;
      case "viewtype":
        f.propertyName = b;
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "checkedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "uncheckedimage":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break;
      case "size":
        var g = $KW.Utils.getMasterData(f);
        if (e) {
          e.innerHTML = this.generateList(f, g, f.context);
          $KU.toggleVisibilty(e, g, f)
        }
        break
    }
  },
  render: function(a, b) {
    if (a.itemorientation) {
      a.orientation = a.itemorientation
    }
    var d = $KW.Utils.getMasterData(a);
    var c = $KW.skins.getWidgetSkinList(a, b, d);
    var e = "<div" + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='" + $KW.skins.getBaseStyle(a, b) + (b.ispercent === false ? "display:inline-block" : "") + "'>";
    a.context = b;
    if ((a.viewtype == "tableview" || a.viewtype == "toggleview") && !kony.appinit.isIE8) {
      e += this.renderViews(a, d, b)
    } else {
      e += this.generateList(a, d, b)
    }
    e += "</div>";
    return e
  },
  renderViews: function(a, e, c) {
    var f = "";
    if (e.length > IndexJL) {
      a.selectedkeys && $KW.Utils.setSelectedValueProperty(a, e, "selectedkeys");
      if (a.viewtype == "toggleview") {
        f += "<div class='ktable kwt100' style='border: 1px solid gray; border-radius: 10px; overflow: hidden; '>"
      }
      for (var b = IndexJL; b < (e.length); b++) {
        if (e[b][IndexJL] != null && e[b][1 + IndexJL] != null) {
          var d = (a.selectedkeys && $KU.inArray(a.selectedkeys, e[b][IndexJL])[0]) ? "checked" : "";
          var h = "middleleftalign";
          if (a.viewtype == "tableview") {
            f += "<div style = 'background: red; border: none; height: auto;' class =' kwt100 middleleftalign " + a.skin + "' >";
            var g;
            if (d == "checked") {
              g = "url(" + $KU.getImageURL(a.checkedimage) + ")"
            } else {
              g = "url(" + $KU.getImageURL(a.uncheckedimage) + ")"
            }
            f += "<input style='display : none;' id ='" + a.id + "_label" + b + "' class='" + h + "' kformname='" + a.pf + "' kwidgettype='" + a.wType + "' type='checkbox' " + d + ($KW.Utils.isWidgetDisabled(a, c) ? " disabled='true'" : "") + " value='" + e[b][IndexJL] + "' name='" + a.id + "' style='  margin-right:3px;' />";
            f += "<label class='kwt90'  name = '" + a.id + "_label' style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            f += e[b][1 + IndexJL];
            f += "</label>";
            f += "<label class='kwt10 middlecenteralign' selected ='" + d + "'  for ='" + a.id + "_label" + b + "'  name = '" + a.id + "_label' style=' background-image: " + g + "; width: " + a.size + "px; height: " + a.size + "px; -webkit-background-size: 100%; background-size:100%; margin-right: 3px; margin-botom: 2px; vertical-align: middle; display: inline-block; '></label>";
            f += "</div>";
            f += "<div style='border-top: 1px solid gray'></div>"
          } else {
            if (a.viewtype == "toggleview") {
              f += "<div style = '  margin-right: 2px; border-right: 1px solid gray; height: auto;' class =' kcell  middlecenteralign " + a.skin + "' >";
              f += "<input style='display : none;' id ='" + a.id + "_label" + b + "' class='" + h + "' kformname='" + a.pf + "' kwidgettype='" + a.wType + "' type='checkbox' " + d + ($KW.Utils.isWidgetDisabled(a, c) ? " disabled='true'" : "") + " value='" + e[b][IndexJL] + "' name='" + a.id + "' style='  margin-right:3px;' />";
              f += "<label class='' for ='" + a.id + "_label" + b + "'   name = '" + a.id + "_label' style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
              f += e[b][1 + IndexJL];
              f += "</label>";
              f += "</div>"
            }
          }
        }
      }
      if (a.viewtype == "toggleview") {
        f += "</div>"
      }
    }
    return f
  },
  generateList: function(k, c, a) {
    var g = "";
    if (c.length > IndexJL) {
      k.selectedkeys && $KW.Utils.setSelectedValueProperty(k, c, "selectedkeys");
      for (var d = IndexJL; d < (c.length); d++) {
        if (c[d][IndexJL] != null && c[d][1 + IndexJL] != null) {
          var b = (k.selectedkeys && $KU.inArray(k.selectedkeys, c[d][IndexJL])[0]) ? "checked" : "";
          var f = "middlecenteralign";
          if ($KU.isAndroid && !$KU.isTablet) {
            f = ""
          }
          if (k.viewtype == "customview" && !kony.appinit.isIE8) {
            if (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) {
              g += "<div style = 'height: auto;" + (a.ispercent === false ? "display:inline'" : "' class='kwt100'") + ">"
            } else {
              g += "<div style = ' display: inline-block; height: auto;' >"
            }
            var j;
            if (b == "checked") {
              j = "url(" + $KU.getImageURL(k.checkedimage) + ")"
            } else {
              j = "url(" + $KU.getImageURL(k.uncheckedimage) + ")"
            }
            g += "<input style='display : none;' id ='" + k.id + "_label" + d + "' class='" + f + "' kformname='" + k.pf + "' kwidgettype='" + k.wType + "' type='checkbox' " + b + ($KW.Utils.isWidgetDisabled(k, a) ? " disabled='true'" : "") + " value='" + c[d][IndexJL] + "' name='" + k.id + "' style='  margin-right:3px;' />";
            g += "<label  selected ='" + b + "'  for ='" + k.id + "_label" + d + "'  name = '" + k.id + "_label' style=' background-image: " + j + "; width: " + k.size + "px; height: " + k.size + "px; -webkit-background-size: 100%; background-size:100%; margin-right: 3px; margin-botom: 2px; vertical-align: middle; display: inline-block; '></label>";
            g += "<label   name = '" + k.id + "_label' style=' position: relative; padding-left: 5px; vertical-align: middle; display: inline-block;'>";
            g += $KU.escapeHTMLSpecialEntities(c[d][1 + IndexJL]);
            g += (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) ? "</label><br/></div>" : "</div></label>&nbsp;"
          } else {
            var e = $KU.getAccessibilityValues(k, c[d][2 + IndexJL], c[d][IndexJL]);
            var h = "";
            if (e.indexOf("aria-hidden") > 0) {
              h = " aria-Hidden='true' "
            }
            if (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) {
              g += "<div " + h + " style = 'height: auto;" + (a.ispercent === false ? "display:inline'" : "' class='kwt100'") + ">"
            } else {
              g += "<div " + h + "style = ' display: inline-block; height: auto; text-decoration: inherit;' >"
            }
            g += "<input class='" + f + "' kformname='" + k.pf + "' kwidgettype='" + k.wType + "' type='checkbox' " + b + ($KW.Utils.isWidgetDisabled(k, a) ? " disabled='true'" : "") + e + " value='" + c[d][IndexJL] + "' name='" + k.id + "' style='margin-right:3px;' />";
            g += $KU.escapeHTMLSpecialEntities(c[d][1 + IndexJL]);
            g += (k.itemorientation == constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL) ? "<br/></div>" : "</div>&nbsp;"
          }
        }
      }
    }
    return g
  },
  changeImage: function(b, a) {
    var c = "url(" + $KU.getImageURL(a.checkedimage) + ")";
    if (b.getAttribute("selected") == "checked") {
      b.style.backgroundImage = "url(" + $KU.getImageURL(a.uncheckedimage) + ")";
      b.setAttribute("selected", "")
    } else {
      b.style.backgroundImage = "url(" + $KU.getImageURL(a.checkedimage) + ")";
      b.setAttribute("selected", "checked")
    }
  },
  eventHandler: function(a, f) {
    var e = f.parentNode.parentNode;
    var b = $KU.getModelByNode(e);
    if (f.getAttribute("checked") === "") {
      f.removeAttribute("checked")
    } else {
      f.setAttribute("checked", "")
    }
    if (b) {
      if (!kony.appinit.isIE8 && a.type == "click" && b.viewtype == "defaultview") {
        return
      }
      if (b.viewtype == "customview" && !kony.appinit.isIE8) {
        $KW.CheckBoxGroup.changeImage($KU.getNextSibling(f), b)
      }
      if (b.viewtype == "tableview" && !kony.appinit.isIE8) {
        $KW.CheckBoxGroup.changeImage($KU.getNextSibling($KU.getNextSibling(f)), b)
      }
      if (e.getAttribute("kcontainerID")) {
        $KW.Utils.updateContainerData(b, f, false)
      } else {
        var d = b.selectedkeys || (IndexJL == 1 ? [null] : []);
        $KW.Utils.setSelectedKeys(b, f.checked, d, f.value);
        $KW.Utils.setSelectedValueProperty(b, $KW.Utils.getMasterData(b), "selectedkeys");
        var c = $KU.returnEventReference(b.onselection);
        if (c) {
          c.call(b, b);
          $KU.onEventHandler(b)
        }
      }
    }
  }
};
$KW.Link = {
  initialize: function() {
    kony.events.addEvent("click", "Link", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "text":
        d.innerHTML = b;
        break
    }
  },
  render: function(a, b) {
    if (!a.buiskin) {
      a.buiskin = a.blockeduiskin
    }
    var c = $KW.skins.getWidgetSkinList(a, b);
    var d = "<div" + (a.disabled ? " kdisabled='true'" : "") + $KW.Utils.getBaseHtml(a, b) + "class = '" + c + "' style='display:inline-block;text-align:" + $KW.skins.getContentAlignment(a) + ";" + $KW.skins.getBaseStyle(a, b) + (b.layoutDir && b.ispercent === false ? ";float:" + b.layoutDir : "") + "'>";
    d += $KU.escapeHTMLSpecialEntities(a.text) + "</div>";
    return d
  },
  eventHandler: function(b, e) {
    var c = $KU.getModelByNode(e),
      a = e.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(c, e, true)
    } else {
      if (c.onclick) {
        var d = $KU.returnEventReference(c.onclick);
        e.setAttribute("selected", "progressindtr");
        e.setAttribute("progressskin", c.skin);
        c.blockeduiskin && $KW.Utils.applyBlockUISkin(c);
        d.call(c, c);
        $KU.onEventHandler(c)
      }
    }
  }
};
$KW.HBox = {
  initialize: function() {
    kony.events.addEvent("click", "HBox", this.eventHandler);
    kony.events.addEvent("onorientationchange", "HBox", this.orientationHandler)
  },
  orientationHandler: function(h, c) {
    var g = document.querySelectorAll("div[aspect-ratio]");
    for (var d = 0; d < g.length; d++) {
      var f = g[d];
      var a = f.getAttribute("aspect-ratio");
      var e = f.clientWidth;
      var b = Math.round(1 / a * e);
      f.style.height = b + "px"
    }
  },
  updateView: function(d, c, b, a) {},
  getExtraNodeWidth: function(b) {
    var c = 0;
    for (var a = 0; a < b.children.length; a++) {
      c += b[b.children[a]].containerweight
    }
    return (c > 100) ? 0 : (100 - c)
  },
  render: function(m, a) {
    if (!m.buiskin) {
      m.buiskin = m.blockeduiskin
    }
    if (m.layouttype == constants.CONTAINER_LAYOUT_GRID) {
      return $KW.Grid.render(m, a)
    }
    if (kony.appinit.isIE7) {
      return this.renderIEHtml(m, a)
    }
    if (m.isTemplate === true) {
      var b = m
    } else {
      if (!a.renderingTabHeader) {
        var b = kony.model.getWidgetModel(m.pf, a.tabpaneID)
      } else {
        var b = kony.model.getWidgetModel(a.pf, a.tabpaneID);
        b = b[a.tabID]["header"]
      }
    }
    var e = $KW.skins.getWidgetAlignmentSkin(m);
    var h = a.topLevelBox;
    var g = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(m, a);
    var f = g[2];
    f += " " + $KW.skins.getWidgetAlignmentSkin(m);
    var l = "";
    if (!h) {
      l += "<div class = 'krow kwt100' >";
      l += "<div class = 'kcell kwt100' >"
    }
    f += $KW.skins.getVisibilitySkin(m);
    var j = " " + $KW.skins.getBaseStyle(m, a);
    l += "<div  class = 'ktable " + f + "'" + $KW.Utils.getBaseHtml(m, a) + " style='" + j + "'>";
    if (m.children) {
      for (var d = 0; d < m.children.length; d++) {
        var c = m[m.children[d]];
        a.vLine = (c.wType == "Line") ? true : false;
        if (c.wType === "HBox" || c.wType === "VBox") {
          a.topLevelBox = false;
          a.ispercent = m.percent;
          if (c.wType == "HBox") {
            l += $KW.HBox.render(c, a)
          } else {
            l += $KW.VBox.render(c, a)
          }
        } else {
          if (m.percent === true) {
            a.ispercent = true;
            var n;
            if (c.containerweight) {
              n = "kwt" + c.containerweight
            } else {
              n = "auto"
            }
            var k = $KW.skins.getWidgetAlignmentSkin(c);
            l += "<div class = 'kcell " + n + " " + k + (c.wType == "TPW" ? " konycustomcss" : "") + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(c) + "' >"
          } else {
            a.ispercent = false
          }
          l += $KW[c.wType].render(c, a);
          if (m.percent === true) {
            l += "</div>"
          }
        }
      }
      if ($KG.appbehaviors.adherePercentageStrictly == true && m.percent === true) {
        m.dummyNodeWidth = this.getExtraNodeWidth(m);
        l += "<div class = 'kcell kwt" + m.dummyNodeWidth + "'  ></div>"
      }
    }
    l += "</div>";
    if (!h) {
      l += "</div></div>"
    }
    return l
  },
  renderIEHtml: function(n, a) {
    var b = kony.model.getWidgetModel(n.pf, a.tabpaneID);
    var e = $KW.skins.getWidgetAlignmentSkin(n);
    var m = "";
    var j = a.topLevelBox;
    var h = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(n, a);
    var f = h[2];
    f += " " + $KW.skins.getWidgetAlignmentSkin(n);
    if (!j) {
      m += "<tr class = 'kwt100' >";
      m += "<td class = 'kwt100' >"
    }
    f += !$KW.Utils.isWidgetVisible(n, a) ? " hide" : "";
    var k = $KW.Utils.getNormalImageStyle(n) + $KW.skins.getMarginSkin(n, a) + $KW.skins.getPaddingSkin(n);
    m += "<div class = '" + f + "'" + $KW.Utils.getBaseHtml(n, a) + " style='" + k + "'>";
    m += "<table class = 'kwt100' " + (n.fixedLayout == "true" ? " style='table-layout:fixed;'" : "") + ">";
    if (n.percent === false) {
      a.layoutDir = (n.wdir == "1" ? "left" : ((n.wdir == "3") ? "right" : ""))
    }
    m += "<tr class = '" + e + " kwt100' >" + (n.percent === false ? "<td class='kwt100'>" : "");
    if (n.children) {
      var o = 0;
      var g = n.children.length;
      if (kony.appinit.isIE7 && n.percent === false && a.layoutDir && a.layoutDir == "right") {
        o = n.children.length - 1;
        g = 0
      }
      for (var d = o;
           (o == 0 ? (d < g) : (d >= g));
           (o == 0 ? d++ : d--)) {
        var c = n[n.children[d]];
        if (c.wType === "HBox" || c.wType === "VBox") {
          a.topLevelBox = false;
          a.ispercent = n.percent;
          if (c.wType == "HBox") {
            m += $KW.HBox.render(c, a)
          } else {
            m += $KW.VBox.render(c, a)
          }
        } else {
          if (n.percent === true) {
            a.ispercent = true;
            var p = "kwt" + c.containerweight;
            var l = $KW.skins.getWidgetAlignmentSkin(c);
            m += "<td class = '" + p + " " + l + "' >"
          } else {
            a.ispercent = false
          }
          m += $KW[c.wType].render(c, a);
          if (n.percent === true) {
            m += "</td>"
          }
        }
      }
    }
    m += (n.percent === false ? "</td>" : "") + "</tr></table></div>";
    if (!j) {
      m += "</td></tr>"
    }
    a.layoutDir = "";
    return m
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    c.blockeduiskin && $KW.Utils.applyBlockUISkin(c);
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  },
  setProgressIndicator: function(b) {
    var a = $KW.Utils.setProgressIndicator(b);
    b.parentNode.insertBefore(a, b)
  },
  addChild: function(b, e) {
    var c = $KU.getNodeByModel(b);
    if (c && e.length > 0) {
      var f = document.createElement("div");
      f.innerHTML = $KW.HBox.appendChildren(b, e);
      if (b.wType == "ScrollBox" && b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        var d = c;
        $KW.ScrollBox.adjustScrollBoxWidth(b, d);
        c = c.firstChild.firstChild
      } else {
        if (b.wType == "ScrollBox" && b.orientation == constants.BOX_LAYOUT_VERTICAL) {
          c = c.firstChild.firstChild
        }
      }
      while (f.children.length > 0) {
        if ((b.wType == "HBox" || b.wType == "ScrollBox") && $KG.appbehaviors.adherePercentageStrictly == true && b.percent === true) {
          c.insertBefore(f.children[0], c.lastChild || null)
        } else {
          c.appendChild(f.children[0])
        }
      }
      if ($KG.appbehaviors.adherePercentageStrictly == true && b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        for (var a = 0; a < e.length; a++) {
          b.dummyNodeWidth -= e[a].containerweight
        }
        c.lastChild.className = "kcell kwt" + b.dummyNodeWidth
      }
      if (b.wType == "ScrollBox" && b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        $KW.ScrollBox.adjustScrollChildrenWidth(b, d)
      }
      $KU.layoutNewWidgets(b, e);
      $KW.Utils.initializeNewWidgets(e)
    }
  },
  addChildat: function(c, f, a) {
    var d = $KU.getNodeByModel(c);
    if (d) {
      var g = document.createElement("div");
      g.innerHTML = $KW.HBox.appendChildren(c, f);
      if (c.wType == "HBox" || c.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        if (c.wType == "ScrollBox") {
          var e = d;
          $KW.ScrollBox.adjustScrollBoxWidth(c, e);
          d = d.firstChild.firstChild
        } else {
          if (c.wType == "ScrollBox" && c.orientation == constants.BOX_LAYOUT_VERTICAL) {
            d = d.firstChild.firstChild
          }
        }
      }
      a = a < 0 ? 0 : a;
      if (kony.appinit.isIE && !d.childNodes[a]) {
        d.appendChild(g.childNodes[0])
      } else {
        d.insertBefore(g.childNodes[0], d.childNodes[a])
      }
      if (c.wType == "ScrollBox" && c.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        $KW.ScrollBox.adjustScrollChildrenWidth(c, e)
      }
      $KU.layoutNewWidgets(c, f);
      $KW.Utils.initializeNewWidgets(f);
      if ($KG.appbehaviors.adherePercentageStrictly == true && c.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
        for (var b = 0; b < f.length; b++) {
          c.dummyNodeWidth -= f[b].containerweight
        }
        d.lastChild.className = "kcell kwt" + c.dummyNodeWidth
      }
    }
  },
  appendChildren: function(g, h) {
    var a = new $KW.WidgetGenerationContext(g.pf);
    if (g.wType == "FlexContainer" || g.wType == "FlexScrollContainer") {
      return $KW.FlexContainer.renderChildren(g, h, a)
    }
    var f = "";
    for (var d = 0; d < h.length; d++) {
      var c = h[d];
      if (c.wType == "HBox" || c.wType == "VBox") {
        a.toplevel = false;
        if (c.wType == "HBox") {
          f += $KW.HBox.render(c, a)
        } else {
          f += $KW.VBox.render(c, a)
        }
      } else {
        if (g.wType == "HBox" || g.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
          if (g.percent == true) {
            a.ispercent = true;
            var j = "kwt" + c.containerweight;
            var e = $KW.skins.getWidgetAlignmentSkin(c);
            f += "<div class = 'kcell " + j + " " + e + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(c) + "' >"
          } else {
            a.ispercent = false
          }
          f += $KW[c.wType].render(c, a);
          if (g.percent == true) {
            f += "</div>"
          }
        } else {
          var b = " krow kwt100 ";
          f += "<div class = '" + b + "' >";
          layoutDirection = $KW.skins.getWidgetAlignmentSkin(c);
          b = "kwt100";
          b += " kcell " + layoutDirection;
          f += "<div class = '" + b + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(c) + "' >";
          f += $KW[c.wType].render(c, a);
          f += "</div></div>"
        }
      }
    }
    return f
  },
  add: function() {
    var a = arguments[0];
    if (a && "add" in a) {
      var b = [].slice.call(arguments, 1);
      a.add(b)
    }
  },
  addAt: function(b, c, a) {
    if (c == null) {
      return
    }
    b && b.addAt(c, a)
  },
  remove: function(a, b) {
    a && a.remove(b)
  },
  removeAt: function(b, a) {
    return b && b.removeAt(a)
  },
  widgets: function(a) {
    return a && a.widgets()
  },
  DOMremove: function(b, c) {
    var d = $KU.getNodeByModel(b);
    if (d && c) {
      if (b.wType == "ScrollBox" && (b.orientation == constants.BOX_LAYOUT_HORIZONTAL || b.orientation == constants.BOX_LAYOUT_VERTICAL)) {
        d = d.firstChild.firstChild
      } else {
        if (b.wType == "HBox" || b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
          d = b.wType == "ScrollBox" ? d.firstChild.firstChild : d
        }
      }
      for (var a = 0; a < b.children.length; a++) {
        if (c.id == b.children[a]) {
          d.removeChild(d.children[a]);
          break
        }
      }
    }
  },
  DOMremoveAll: function(a) {
    var b = $KU.getNodeByModel(a);
    if (b) {
      if (a.wType == "HBox" || (a.wType == "ScrollBox" && a.orientation == constants.BOX_LAYOUT_HORIZONTAL)) {
        b = b.children[0]
      }
      b.innerHTML = ""
    }
  },
  resetWidthScrollBox: function(f, d) {
    var e = document.getElementById(f.pf + "_" + f.id + "_parent"),
      b = 0,
      a = document.getElementById(f.pf + "_" + f.id + "_scrollee");
    for (var c = IndexJL; c < f.children.length; c++) {
      if (d.id == f.children[c]) {
        continue
      }
      if (window[f.pf][f.children[c]]) {
        b += window[f.pf][f.children[c]].containerWeight
      }
    }
    a.style.width = (e.offsetWidth * (b / 100) < e.offsetWidth) ? (e.offsetWidth + "px") : (e.offsetWidth * (b / 100) + "px")
  }
};
$KW.VBox = {
  initialize: function() {
    kony.events.addEvent("click", "VBox", this.eventHandler)
  },
  updateView: function(d, c, b, a) {},
  render: function(h, b) {
    if (h.layouttype == constants.CONTAINER_LAYOUT_GRID) {
      return $KW.Grid.render(h, b)
    }
    if (kony.appinit.isIE7) {
      return this.renderIEHtml(h, b)
    }
    if (!b.renderingTabHeader) {
      var d = h.parent
    } else {
      var d = kony.model.getWidgetModel(b.pf, b.tabpaneID);
      d = d[b.tabID]["header"]
    }
    var l = b.topLevelBox;
    var g = $KW.skins.getWidgetAlignmentSkin(h);
    var n = "";
    var m = " " + $KW.skins.getBaseStyle(h, b);
    var k = $KW.skins.getVisibilitySkin(h);
    if (l) {
      var c = $KW.skins.getWidgetSkinList(h, b);
      n += "<div class = 'ktable " + c + " " + k + "'" + $KW.Utils.getBaseHtml(h, b) + " style='" + m + "'>"
    } else {
      var a = h.containerweight;
      if (d && d.wType == "ScrollBox" && d.totalWt && kony.appinit.isIE) {
        a = Math.floor((100 * a) / d.totalWt)
      }
      $KW.skins.addWidthRule(a);
      var c = "kwt" + a + " " + g;
      n += "<div class = ' kcell " + c + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(h) + "' >";
      c = $KW.skins.getWidgetSkinList(h, b);
      n += "<div class = 'ktable " + c + " " + k + "'" + $KW.Utils.getBaseHtml(h, b) + " style='" + m + "'>"
    }
    var j = h.children ? h.children.length : 0;
    for (var f = 0; f < j; f++) {
      var e = h[h.children[f]];
      if (e.wType === "HBox" || e.wType === "VBox" || e.wType === "ScrollBox") {
        b.topLevelBox = false;
        if (e.wType == "HBox") {
          b.ispercent = h.percent
        }
        n += $KW[e.wType].render(e, b)
      } else {
        b.ispercent = true;
        n += "<div class = ' krow kwt100' >";
        g = $KW.skins.getWidgetAlignmentSkin(e);
        c = "kcell kwt100 " + g + (e.wType == "TPW" ? " konycustomcss" : "");
        n += "<div class = '" + c + "' >";
        n += $KW[e.wType].render(e, b);
        n += "</div></div>"
      }
    }
    n += "</div>";
    if (!l) {
      n += "</div>"
    }
    return n
  },
  renderIEHtml: function(h, a) {
    var c = kony.model.getWidgetModel(h.pf, a.tabpaneID);
    var l = a.topLevelBox;
    var f = $KW.skins.getWidgetAlignmentSkin(h);
    var n = "";
    var m = $KW.Utils.getNormalImageStyle(h) + $KW.skins.getMarginSkin(h, a) + $KW.skins.getPaddingSkin(h);
    if (l) {
      var g = $KW.skins.getWidgetSkinList(h, a);
      g += g + (!$KW.Utils.isWidgetVisible(h, a) ? " hide" : "");
      n += "<table class = 'ktable " + g + "'" + $KW.Utils.getBaseHtml(h, a) + (h.fixedLayout == "true" ? " style='table-layout:fixed;" : "") + m + "'>"
    } else {
      var b = "kwt" + h.containerweight + " " + f + (!$KW.Utils.isWidgetVisible(h, a) ? " hide" : "");
      n += "<td class = ' kcell " + b + "' >";
      var j = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(h, a);
      b = j[2];
      n += "<div class = 'ktable " + b + "'" + $KW.Utils.getBaseHtml(h, a) + " style='" + m + "'>"
    }
    var k = h.children ? h.children.length : 0;
    for (var e = 0; e < k; e++) {
      var d = h[h.children[e]];
      if (d.wType === "HBox" || d.wType === "VBox") {
        a.topLevelBox = false;
        if (d.wType == "HBox") {
          a.ispercent = h.percent;
          a.topLevelBox = true;
          n += $KW.HBox.render(d, a);
          a.topLevelBox = false
        } else {
          n += $KW.VBox.render(d, a)
        }
      } else {
        a.ispercent = true;
        f = $KW.skins.getWidgetAlignmentSkin(d);
        b = "kwt100 " + f;
        n += "<div class = '" + b + "' >";
        n += $KW[d.wType].render(d, a);
        n += "</div>"
      }
    }
    n += "</div>";
    if (!l) {
      n += "</td>"
    }
    return n
  },
  eventHandler: function(a, b) {
    $KW.HBox.eventHandler(a, b)
  }
};
$KW.Line = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Line", this.resizeVLines)
  },
  initializeView: function(a) {
    $KW.Line.resizeVLines(a)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "thickness":
        if (e.parent.wType != "FlexContainer") {
          if (d.getAttribute("direction") == "V") {
            d.style.width = b + "px"
          } else {
            d.style.borderTopWidth = b + "px"
          }
        }
        break
    }
  },
  render: function(h, b) {
    var g = $KW.skins.getWidgetSkinList(h, b);
    var d = (h.skin && this.getColor(h.skin)) || "black";
    var f;
    if (b.vLine || $KU.isFlexWidget(h)) {
      var c = b.vLine ? "width:" + h.thickness + "px;" : "";
      var a = b.vLine ? "height:1px;" : "";
      var e = b.vLine ? "V" : "flex";
      f = "<div" + $KW.Utils.getBaseHtml(h, b) + "class='" + g + "' direction='" + e + "' style='background-color:" + d + ";" + c + a + "margin:auto;" + $KW.skins.getBaseStyle(h, b) + (b.ispercent === false ? "display:inline-block" : "") + "'></div>"
    } else {
      f = "<div" + $KW.Utils.getBaseHtml(h, b) + "class='" + g + "' style='border-top:" + h.thickness + "px solid " + d + ";" + $KW.skins.getBaseStyle(h, b) + "'></div>"
    }
    return f
  },
  resizeVLines: function(e, a) {
    var c = document.querySelectorAll("#" + e + " div[kwidgettype='Line'][direction='V']");
    if (a) {
      for (var b = 0; b < c.length; b++) {
        var d = c[b];
        d.style.height = "1px"
      }
    }
    for (var b = 0; b < c.length; b++) {
      $KW.Line.resizeVLine(c[b])
    }
  },
  resizeVLine: function(a) {
    a.style.height = "auto";
    a.style.height = a.parentNode.clientHeight + "px";
    a.parentNode.style.width = a.style.width
  },
  applySkin: function(a, c) {
    var b = (c && this.getColor(c)) || "black";
    if (a.getAttribute("direction") == "V" || a.getAttribute("direction") == "flex") {
      a.style.backgroundColor = b
    } else {
      a.style.borderTopColor = b
    }
  },
  getColor: function(b) {
    if (!$KG["line" + b]) {
      var a = document.createElement("div");
      a.className = b;
      document.body.appendChild(a);
      $KG["line" + b] = $KU.getStyle(a, "color");
      document.body.removeChild(a)
    }
    return $KG["line" + b]
  }
};
$KW.Segment = {
  segmentCounter: 0,
  initialize: function() {
    kony.events.addEvent("click", "Segment", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Segment", this.orientationHandler)
  },
  initializeView: function(a) {
    $KU.setScrollBoxesHeight(a, "Segment")
  },
  orientationHandler: function(b, a) {
    $KU.setScrollBoxesHeight(b, "Segment")
  },
  adjustFooter: function(d) {
    var a = document.querySelectorAll("#" + d + " div[kwidgettype='Segment']");
    for (var b = 0; b < a.length; b++) {
      var c = $KU.getModelByNode(a[b]);
      var e = document.getElementById(c.pf + "_" + c.id + "_footer");
      e && (e.style.width = window.innerWidth)
    }
  },
  updateView: function(n, p, G, f) {
    var d = $KU.getNodeByModel(n);
    switch (p) {
      case "skin":
      case "askin":
      case "rowskin":
      case "alternaterowskin":
        if (d) {
          if (p == "skin") {
            var A = G + "grp";
            var z = f + "grp";
            $KU.removeClassName(d, z);
            $KU.addClassName(d, A);
            break
          }
          if (n.viewtype != constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            if (n.hasSections) {
              this.applySectionRowSkin(n, d)
            } else {
              d = d.childNodes[0];
              this.applyRowSkin(n, d)
            }
          }
        }
        break;
      case "widgetskin":
        var d = $KW.Utils.getWidgetNode(n);
        if (d) {
          $KU.removeClassName(d, f || (n.skin ? n.skin + "grp" : ""));
          $KU.addClassName(d, G)
        }
        break;
      case "sectionskin":
      case "sectionheaderskin":
        if (n.hasSections) {
          $KW.Segment.applySectionHeaderSkin(n, G)
        }
        break;
      case "focusedindex":
      case "selectedindex":
        if (G && this.isSelectionOutOfBound(n, G)) {
          return
        }
        if (p == "focusedindex") {
          G = IndexJL ? [null, 0, G] : [0, G]
        }
        if (n.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR && n.viewtype != constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          var t = null;
          n.selectedRows = (n.selectedRows) ? n.selectedRows : (IndexJL) ? [null] : [];
          if (G) {
            if (n.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
              t = (IndexJL) ? [null, G] : [G];
              var v = $KU.arrayIndex(n.selectedRows, G);
              if (v != -1) {
                t.splice(v, 1)
              } else {
                t = t
              }
            } else {
              if (n.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
                var v = $KU.arrayIndex(n.selectedRows, G);
                if (v != -1) {
                  n.selectedRows.splice(v, 1)
                } else {
                  n.selectedRows.push(G)
                }
                t = n.selectedRows
              }
            }
          }
          t = (!t) ? null : (t.length > IndexJL) ? t : null;
          this.setImages(n, t)
        } else {
          if (n.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
            n.selectedRows = (!G) ? null : (IndexJL) ? [null, G] : [G];
            this.setSelectedItemsAndIndices(n)
          }
        }
        if (n.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          var m = n.swipeContext;
          if (d) {
            var I = d.children[0];
            var D = G[IndexJL + 1];
            if ((D - IndexJL) <= I.children.length) {
              m.currentPage = parseInt(D) - IndexJL;
              $KW.touch.scrollImages(I, m.imageWidth * m.currentPage, $KU.swipeDuration, false);
              $KW.touch.updatePageIndicator(d, m, n)
            }
          }
        } else {
          (G && d) && this.setFocus(n, d, G)
        }
        break;
      case "selectedsectionindex":
        if (n.hasSections) {
          var h = IndexJL ? G : (G + 1);
          if (d) {
            d = document.querySelector("#" + d.id + " ul:nth-child(" + h + ")");
            d && $KW.Widget.setfocus(n, null, d)
          }
        }
        break;
      case "selectedindices":
        if (G) {
          var t = (IndexJL) ? [null] : [];
          for (var C = IndexJL; C < G.length; C++) {
            var s = parseInt(G[C][0 + IndexJL], 10);
            var E = G[C][1 + IndexJL];
            for (var B = IndexJL; B < E.length; B++) {
              var J = (IndexJL) ? [null, s, E[B]] : [s, E[B]];
              if (!this.isSelectionOutOfBound(n, J)) {
                t.push(J)
              }
            }
          }
          if (n.selectionbehavior != constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
            t = (IndexJL) ? [null, t[t.length - 1]] : [t[t.length - 1]]
          }
          t = (t.length > IndexJL) ? t : null
        } else {
          var t = null
        }
        if (n.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
          n.selectedRows = t;
          this.setSelectedItemsAndIndices(n)
        } else {
          this.setImages(n, t)
        }
        break;
      case "paginationconfig":
        $KW.Segment.updatePageFooter(n);
        break;
      case "septhickness":
      case "separatorthickness":
      case "sepcolor":
      case "separatorcolor":
      case "separatorrequired":
        if (d) {
          var a = n.separatorthickness || n.septhickness;
          var y = n.separatorcolor || n.sepcolor;
          var e = "[id='" + d.id + "'] li[index" + (n.hasSections ? "$='-1']" : "]");
          var w = document.querySelectorAll(e);
          for (var C = 0; C < w.length; ++C) {
            var x = w[C];
            x.style.border = "none";
            if (!n.separatorrequired) {
              continue
            }
            var q = parseInt(y.substring(0, 2), 16),
              F = parseInt(y.substring(2, 4), 16),
              H = parseInt(y.substring(4, 6), 16);
            var u = 1 - (parseInt(y.substring(6, 8), 16) / 100);
            var c = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + q + ", " + F + "," + H + ")" : "rgba(" + q + ", " + F + "," + H + "," + u + ")";
            x.style.borderBottom = a + "px solid " + c
          }
        }
        break;
      case "needpageindicator":
        if (n.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          var d = document.getElementById([n.pf, n.id, "footer"].join("_"));
          if (d) {
            if (G) {
              $KU.removeClassName(d, "hide")
            } else {
              $KU.addClassName(d, "hide")
            }
          }
        }
        break;
      case "pageondotimage":
      case "pageoffdotimage":
        var d = document.getElementById([n.pf, n.id, "footer"].join("_"));
        if (d) {
          d.innerHTML = $KW.Segment.generatePageFooter(n, (n.data || []))
        }
        break;
      case "data":
        if ($KU.isArray(G)) {
          this.setData(n, G)
        } else {
          if (G === null) {
            n.selectedRows = n.data = null;
            this.setSelectedItemsAndIndices(n)
          }
        }
        break;
      case "viewtype":
        var d = $KU.getNodeByModel(n);
        if (G != f && d) {
          var l = d.parentNode;
          if (f == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            l = l.parentNode
          }
          l.innerHTML = this.generateSegment(n, n.context);
          d = $KU.getNodeByModel(n);
          if (G == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
            n.selectionbehavior = constants.SEGUI_DEFAULT_BEHAVIOR;
            $KW.touch.computeWidths(d, n);
            var k = new $KW.touch.pageviewScroller(d, {
              widgetModel: n
            });
            $KG[d.id] = k
          }
          this.adjustFlexContainers(n, "setdata");
          $KU.setScrollHeight(n, d)
        }
        break;
      case "selectionbehavior":
        if (G != f) {
          this.setData(n, n.data)
        }
        break;
      case "selectionbehaviorconfig":
        if (G instanceof Object) {
          n.selectionindicator = G.imageIdentifier || G.imageidentifier;
          n.selectimage = G.selectedStateImage || G.selectedstateimage;
          n.unselectimage = G.unselectedStateImage || G.unselectedstateimage
        }
        if (n.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR) {
          this.setData(n, n.data)
        }
        break
    }
  },
  setFocus: function(c, a, b) {
    var d = (c.hasSections) ? "secindex='" + b[0 + IndexJL] + "," + b[1 + IndexJL] + "'" : "index='" + b[1 + IndexJL] + "'";
    a = document.querySelector("#" + a.id + " li[" + d + "]");
    a && $KW.Widget.setfocus(c, null, a)
  },
  render: function(d, b) {
    if (!d.buiskin) {
      d.buiskin = d.blockeduiskin
    }
    if (!d.retainselection) {
      d.selectedRows = d.selectedindices = d.focusedindex = d.focuseditem = d.selectedindex = d.selecteditems = d.selectedsectionindex = d.selectedrowindex = d.selectedrowindices = null
    } else {
      d.focusedindex = (d.focusedindex || d.focusedindex == 0) ? d.focusedindex : null;
      d.selectedindex = d.selectedindex || null;
      d.focuseditem = d.focuseditem || null;
      d.selecteditems = d.selecteditems || null;
      d.selectedsectionindex = (d.selectedsectionindex || d.selectedsectionindex == 0) ? d.selectedsectionindex : null;
      d.selectedindices = d.selectedindices || null;
      d.selectedRows = d.selectedRows || null
    }
    $KU.updateScrollFlag(d);
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      d.selectedItems = d.selecteditems;
      d.selectedIndex = d.selectedindex;
      d.selectedIndices = d.selectedindices
    }
    var c = d.selectionbehaviorconfig;
    if (c && c instanceof Object) {
      d.selectionindicator = c.imageIdentifier || c.imageidentifier;
      d.selectimage = c.selectedStateImage || c.selectedstateimage;
      d.unselectimage = c.unselectedStateImage || c.unselectedstateimage
    }
    d.context = b;
    d.selectedState = false;
    var a = d.parent;
    if ($KU.isFlexContainer(a)) {
      d.layoutConfig.self = true
    }
    return this.generateSegment(d, b)
  },
  generateSegment: function(e, d) {
    var j = "",
      b = e.data || [];
    var i = (e.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) ? true : false;
    e.selectedsectionindex = IndexJL;
    var o = $KU.isFlexWidget(e);
    var a = (!o && (!e.isvisible || b.length <= IndexJL)) ? "hide" : "";
    var n = e.skin;
    var g = (e.name == "kony.ui.SegmentedUI2") ? (e.widgetskin ? e.widgetskin : "") : (n ? n + "grp" : "");
    var h = a + " " + g;
    var f = $KW.skins.getBaseStyle(e, d);
    var k = $KW.skins.getPaddingSkin(e);
    d.topLevelBox = true;
    if (i) {
      var m = e.rowSkin || "";
      var c = e.pf + "_" + e.id;
      j += "<div id='" + c + "_wrapper' style='" + f + ";position:relative' class='" + h + "'>";
      j += "<div" + $KW.Utils.getBaseHtml(e, d);
      j += "name='touchcontainer_Segment' class='kstripcontainer " + m + "'";
      j += ">";
      j += "<div id='imgs' class='kstrip' style='";
      if (!kony.appinit.useTransition) {
        j += "position:relative"
      }
      j += "'>"
    } else {
      j += "<div" + $KW.Utils.getBaseHtml(e, d);
      j += "class='" + h + "' style='" + f + k + "'>"
    }
    if (b.length > IndexJL) {
      if (!i) {
        e.hasSections = $KU.isArray(b[IndexJL])
      }
      if (!i && e.hasSections === false) {
        j += "<ul style='list-style:none'>"
      }
      j += this.generateRows(e, d, b, false, IndexJL, IndexJL)
    }
    if (i) {
      var l = $KW.Segment.renderPageFooter(e);
      if (e.paginationconfig && e.paginationconfig.position == "top") {
        j = l + j;
        j += "</div></div>"
      } else {
        j += "</div></div>";
        j += l
      }
      j += "</div>"
    } else {
      if (e.hasSections === false) {
        j += "</ul></div>"
      } else {
        j += "</div>"
      }
    }
    return j
  },
  renderPageFooter: function(d) {
    var b = d.data || [];
    var c = (!d.isvisible || b.length <= 1 || !d.needpageindicator) ? "hide" : "";
    var a = $KU.isFlexWidget(d) ? "position:absolute;bottom:0px;" : "";
    var e = "<div class='ktable kwt100 " + c + "' style='" + a + $KW.Segment.getPageFooterStyle(d) + "' id='" + d.pf + "_" + d.id + "_footer'>" + this.generatePageFooter(d, b) + "</div>";
    return e
  },
  getPageFooterStyle: function(d) {
    var a = d.paginationconfig;
    var c = (a && a.vdistance) || 30,
      b = (a && a.hdistance) || 0;
    c = (a && a.position == "top") ? c : -c;
    return a ? ("position: relative;z-index: 999;top: " + c + "px; left: " + b + "px;") : ""
  },
  updatePageFooter: function(c) {
    var d = document.getElementById(c.pf + "_" + c.id + "_footer");
    if (d) {
      d.setAttribute("style", $KW.Segment.getPageFooterStyle(c));
      var b = d.cloneNode(true);
      var a = d.parentNode;
      if (c.paginationconfig && c.paginationconfig.position == "top") {
        a.removeChild(d);
        a.insertBefore(b, document.getElementById(c.pf + "_" + c.id))
      }
    }
  },
  generateRows: function(h, d, K, m, q, v) {
    var l = "",
      z = "",
      C = 0,
      A = h.separatorcolor;
    var I = 0,
      n = null,
      D = "",
      G = "";
    var s = h.sectionheaderskin || h.sectionskin || "",
      e = "";
    var c = h.rowskin || h.skin || "",
      u = h.alternaterowskin || h.askin || "";
    var f, J;
    var F = (h.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) ? true : false;
    K = this.invertMapAndData(h, K);
    h.counter = q;
    if (A && h.separatorrequired) {
      var t = parseInt(A.substring(0, 2), 16),
        E = parseInt(A.substring(2, 4), 16),
        H = parseInt(A.substring(4, 6), 16),
        x = 1 - (parseInt(A.substring(6, 8), 16) / 100);
      var a = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + t + ", " + E + "," + H + ")" : "rgba(" + t + ", " + E + "," + H + "," + x + ")";
      var y = h.separatorthickness + "px solid " + a;
      z = " style='background-clip:padding-box;border-bottom:" + y + ";" + (q > IndexJL ? "border-top:" + y : "") + "'"
    }
    for (var B = IndexJL; B < K.length; B++) {
      this.segmentCounter = B;
      I = (!h.hasSections) ? (B - IndexJL) : (K[B].sectionLabel) ? 0 : (I + 1);
      e = (I % 2 == 1 && u) ? u : c;
      if (K[B].metainfo && K[B].metainfo.skin) {
        e = K[B].metainfo.skin
      }
      if (K[B].template || h.rowtemplate) {
        var w = d.tabpaneID;
        d.tabpaneID = ""
      }
      var k = "";
      n = K[B].sectionLabel;
      if (n || n === "") {
        if (n instanceof Object) {
          f = n.template || h.sectionheadertemplate;
          k = $KU.getAccessibilityValues(h, n.accessibilityConfig, null, q);
          if (f && $KU.getkeys(n).length > 0) {
            d.topLevelBox = true;
            d.container = h;
            h.widgetsData = n;
            if (!f.pf) {
              window[f.id] = f;
              _konyConstNS.Form2.addHeaderorFooter.call(f, f)
            }
            f.isTemplate = true;
            var j = owl.deepCopy(f);
            D = (j.wType == "FlexContainer") ? this.renderFlexContainer(j, d, n, h, q) : this.renderHBox(j, d, n, h, q);
            if (D === "") {
              D = " "
            }
            d.topLevelBox = false;
            delete d.container;
            delete h.widgetsData
          }
        } else {
          if (n === "") {
            D = " "
          } else {
            D = "<div " + $KW.Utils.getBaseHtml(h, d) + ">" + n + "</div>"
          }
        }
        if (D) {
          if (B == IndexJL) {
            l += "<ul style='list-style:none'>"
          } else {
            if (C == B - IndexJL) {
              v++;
              q = IndexJL;
              l += "</ul><ul style='list-style:none'>"
            }
          }
          C += h.data[v][1 + IndexJL].length > IndexJL ? h.data[v][1 + IndexJL].length - IndexJL : 1;
          l += "<li " + z + " class='" + s + " middleleftalign'  index='" + v + ",-1' secindex='" + v + ",-1'>" + D + "</li>"
        }
      }
      h.seccounter = v;
      h.rowcounter = q;
      d.topLevelBox = true;
      d.container = h;
      h.widgetsData = K[B];
      J = K[B].template || h.rowtemplate || h;
      if (J) {
        window[J.id] = J;
        !J.pf && _konyConstNS.Form2.addHeaderorFooter.call(J, J)
      }
      J.isTemplate = true;
      var p = owl.deepCopy(J);
      k = $KU.getAccessibilityValues(h, K[B].accessibilityConfig, null, q);
      G = (p.wType == "FlexContainer") ? this.renderFlexContainer(p, d, K[B], h, q) : (p.wType == "HBox" || p.orientation == "horizontal") ? this.renderHBox(p, d, K[B], h, q) : this.renderVBox(p, d, K[B], h, q);
      if (K[B].template || h.rowtemplate) {
        d.tabpaneID = w
      }
      d.topLevelBox = false;
      delete d.container;
      delete h.widgetsData;
      if (!m && G) {
        if (F) {
          l += "<div index=" + q + " kwidgettype='KTouchsegment' style='display:none;float: left;width:100%'>"
        } else {
          l += "<li kwidgettype='Segment' index=" + q + " class='" + e + "'" + (h.hasSections ? " secindex='" + v + "," + q + "'" : "");
          if (B < K.length - 1) {
            if (h.hasSections && q != h.data[v][1 + IndexJL].length - 1) {
              l += z
            } else {
              if (!h.hasSections) {
                l += z
              }
            }
          }
          l += ">"
        }
      }
      l += G;
      if (!m && G) {
        l += F ? "</div>" : "</li>"
      }
      if (K.length - IndexJL == B && h.hasSections) {
        l += "</ul>"
      }
      q++;
      h.counter++
    }
    $KU.updateGestureTempList(h, K);
    return l
  },
  generatePageFooter: function(d, g) {
    var k = "";
    var a = "";
    var l = d.paginationconfig;
    var b = (l && l.hdistance) || 0;
    if (g.length > IndexJL) {
      var j = !b || (b == 0);
      var e = j ? "align='center'" : "style='text-align: left;'";
      k += "<div class='krow kwt100' " + e + "><div class='kcell'>";
      d.pageondotimage = d.pageondotimage || "whitedot.gif";
      d.pageoffdotimage = d.pageoffdotimage || "blackdot.gif";
      for (var f = IndexJL; f < g.length; f++) {
        var c = g[f].accessibilityConfig && g[f].accessibilityConfig.a11yHidden;
        var h = c ? " aria-hidden='true'" : " ";
        a = (typeof d.focusedindex != "number" && f == IndexJL) ? d.pageondotimage : (d.focusedindex == f) ? d.pageondotimage : d.pageoffdotimage;
        k += "<span  " + h + " onclick='$KW.touch.navigationDotsHandler(this)' index='" + f + "'><img style='padding-left:4px' src='" + $KU.getImageURL(a) + "' /></span>"
      }
      k += "</div></div>"
    }
    return k
  },
  setData: function(a, b) {
    if ($KU.isArray(b)) {
      if (b.length > IndexJL) {
        a.hasSections = $KU.isArray(b[IndexJL]);
        this.modifyContent(a, b, "setdata")
      } else {
        this.removeAll(a)
      }
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addAll: function(a, b) {
    if ($KU.isArray(b)) {
      if (!$KU.isArray(a.data)) {
        a.data = (IndexJL) ? [null] : []
      }
      if (typeof a.hasSections !== "boolean") {
        a.hasSections = $KU.isArray(b[IndexJL])
      }
      this.modifyContent(a, b, "addall")
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  removeAll: function(a) {
    this.modifyContent(a, IndexJL ? [null] : [], "removeall")
  },
  removeAt: function(b, c, a) {
    if (!isNaN(c) || (a && !isNaN(a))) {
      if ($KU.isArray(b.data) && b.data.length > IndexJL) {
        this.modifyContent(b, [], "removeat", c, a)
      }
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  setDataAt: function(b, c, d, a) {
    if (c instanceof Object && (!isNaN(d) || (a && !isNaN(a)))) {
      if ($KU.isArray(b.data) && b.data.length > IndexJL) {
        this.modifyContent(b, c, "setdataat", d, a)
      }
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addAt: function(b, c, d, a) {
    if (b.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW && $KU.isArray(c)) {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
    if (c instanceof Object && (!isNaN(d) || (a && !isNaN(a)))) {
      if (!$KU.isArray(b.data)) {
        b.data = (IndexJL) ? [null] : []
      }
      if (typeof b.hasSections !== "boolean") {
        b.hasSections = $KU.isArray(c)
      }
      this.modifyContent(b, c, "addat", d, a)
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addDataAt: function(b, c, d, a) {
    if (b.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW && $KU.isArray(c)) {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
    if (c instanceof Object && (!isNaN(d) || (a && !isNaN(a)))) {
      if (!$KU.isArray(b.data)) {
        b.data = (IndexJL) ? [null] : []
      }
      if (typeof b.hasSections !== "boolean") {
        b.hasSections = $KU.isArray(c)
      }
      this.modifyContent(b, c, "adddataat", d, a)
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  setDataWithSections: function(a, b) {
    if ($KU.isArray(b) && $KU.isArray(b[IndexJL])) {
      this.setData(a, b)
    } else {
      throw new KonyError(102, "Error", "Invalid input.")
    }
  },
  addSectionAt: function(b, c, a) {
    if (typeof b.hasSections !== "boolean" && $KU.isArray(c[IndexJL])) {
      b.hasSections = true
    }
    if (b.hasSections === false || b.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      throw new KonyError(103, "Error", "Invalid operation.")
    } else {
      if (!$KU.isArray(c[IndexJL])) {
        throw new KonyError(102, "Error", "Invalid input.")
      }
    }
    if (b.hasSections === true) {
      if (!$KU.isArray(b.data)) {
        b.data = (IndexJL) ? [null] : []
      }
      this.modifyContent(b, c, "addsectionat", IndexJL, a)
    }
  },
  setSectionAt: function(b, c, a) {
    if (b.hasSections) {
      if ($KU.isArray(c) && !isNaN(a)) {
        if ($KU.isArray(b.data)) {
          this.modifyContent(b, c, "setsectionat", IndexJL, a)
        }
      } else {
        throw new KonyError(102, "Error", "Invalid input.")
      }
    } else {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
  },
  removeSectionAt: function(b, a) {
    if (b.hasSections) {
      if (!isNaN(a)) {
        if ($KU.isArray(b.data)) {
          this.modifyContent(b, null, "removesectionat", IndexJL, a)
        }
      } else {
        throw new KonyError(102, "Error", "Invalid input.")
      }
    } else {
      throw new KonyError(103, "Error", "Invalid operation.")
    }
  },
  modifyContent: function(c, t, q, h, n) {
    var p = [IndexJL, IndexJL],
      l = false;
    if (q == "addat" || q == "adddataat" || q == "addsectionat") {
      l = true
    } else {
      if (q == "setdata" || q == "removeall") {
        l = p
      } else {
        if (q == "addall") {
          l = (!c.hasSections) ? [IndexJL, c.data.length] : [c.data.length, IndexJL]
        }
      }
    }
    p = this.calculateSectionRowIndex(c, h, n, l);
    if (!c || p === false) {
      return
    }
    n = p[0], h = p[1];
    c.canUpdateUI = false;
    $KW.Utils.updateContent(c, "data", t, q, h, n);
    this.adjustAlreadySelectedProperties(c, q, n, h);
    c.canUpdateUI = true;
    var e = $KU.getNodeByModel(c);
    if (c.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW && c.data && c.data.length > IndexJL && q == "setdata") {
      c.focusedindex = IndexJL;
      c.selectedindex = (IndexJL) ? [null, IndexJL, IndexJL] : [IndexJL, IndexJL];
      c.focuseditem = c.data[c.focusedindex];
      c.selecteditems = c.data[c.selectedindex[1 + IndexJL]];
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItems = c.selecteditems;
        c.selectedIndex = c.selectedindex
      }
    }
    if (!e) {
      return
    }
    c.context = c.context ? c.context : {};
    c.context.tabpaneID = e.getAttribute("ktabpaneid") || "";
    $KU.toggleVisibilty(e, c.data, c);
    if (c.hasSections === false && !e.firstChild) {
      e.innerHTML = "<ul style='list-style:none'></ul>"
    }
    if (c.hasSections === false || c.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      e = e.childNodes[0]
    }
    var b = null,
      s = null,
      j = null,
      k = null;
    var d = 0;
    if (c.hasSections) {
      s = e.childNodes;
      j = s[n - IndexJL];
      k = j ? j.childNodes : null
    }
    switch (q) {
      case "setdata":
        if (c.viewtype === constants.SEGUI_VIEW_TYPE_PAGEVIEW || c.hasSections) {
          e.innerHTML = this.generateRows(c, c.context, c.data, false, h, n)
        } else {
          e.parentNode.innerHTML = "<ul style='list-style:none'>" + this.generateRows(c, c.context, c.data, false, h, n) + "</ul>"
        }
        break;
      case "removeall":
        e.innerHTML = "";
        break;
      case "setsectionat":
        j.outerHTML = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), false, h, n);
        break;
      case "removesectionat":
        e.removeChild(j);
        break;
      case "addsectionat":
        var f = document.createElement("div");
        f.innerHTML = this.generateRows(c, c.context, t, false, h, n);
        d = f.children.length;
        while (f.children.length > 0) {
          e.insertBefore(f.childNodes[0], j)
        }
        break;
      case "addall":
        var f = document.createElement("div");
        if (!c.hasSections) {
          f.innerHTML = this.generateRows(c, c.context, t, false, h, n);
          while (f.children.length > 0) {
            e.appendChild(f.childNodes[0])
          }
        } else {
          for (var r = IndexJL; r < t.length; r++) {
            f.innerHTML = this.generateRows(c, c.context, (IndexJL) ? [null, t[r]] : [t[r]], false, h, n);
            while (f.children.length > 0) {
              e.appendChild(f.childNodes[0])
            }
          }
        }
        break;
      case "setdataat":
        if (!c.hasSections) {
          var b = e.childNodes[h - IndexJL];
          b.innerHTML = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), true, h, n)
        } else {
          b = k[h - IndexJL + 1];
          b.innerHTML = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), true, h, n)
        }
        $KU.addAriatoElement(b.firstChild, t.accessibilityConfig, c);
        break;
      case "removeat":
        if (!c.hasSections) {
          e.removeChild(e.childNodes[h - IndexJL])
        } else {
          j.removeChild(k[h - IndexJL + 1])
        }
        break;
      case "addat":
      case "adddataat":
        var u, a = this.generateRows(c, c.context, (IndexJL ? [null, t] : [t]), false, h, n),
          m = document.createElement("div");
        if (a) {
          m.innerHTML = a;
          if (!c.hasSections) {
            if (e.style.display === "none") {
              e.style.display = ""
            }
            if (e.parentNode.style.display === "none") {
              e.parentNode.style.display = ""
            }
            u = e.childNodes[h - IndexJL] || null;
            e.insertBefore(m.childNodes[0], u)
          } else {
            if (j) {
              if (j.style.display === "none") {
                j.style.display = ""
              }
              if (j.parentNode.style.display === "none") {
                j.parentNode.style.display = ""
              }
              j.insertBefore(m.childNodes[0], k[h - IndexJL + 1])
            }
          }
        }
        break
    }
    if (q == "addat" || q == "adddataat" || q == "removeat" || q == "addall" || q == "addsectionat") {
      if (!c.hasSections) {
        $KU.adjustNodeIndex(e, h, "index");
        this.applyRowSkin(c, e)
      } else {
        this.adjustSectionIndex(e);
        this.applySectionRowSkin(c, e)
      }
    }
    if (c.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
      c.isvisible && (c.data.length > IndexJL) && $KW.touch.computeWidths(e.parentNode, c);
      if (c.needpageindicator) {
        var o = $KU.getElementById(c.pf + "_" + c.id + "_footer");
        o.innerHTML = this.generatePageFooter(c, c.data);
        $KU.toggleVisibilty(o, c.data, c, false)
      }
    }
    c.context.tabpaneID = "";
    if ($KW.Line && c.data && c.data.length > IndexJL) {
      $KW.Line.initializeView(c.pf + "_" + c.id)
    }
    var t = c.data;
    if (c.hasSections) {
      for (var r = IndexJL; r < t.length; r++) {
        var g = t[r];
        $KU.updateGestureTempList(c, g[1 + IndexJL])
      }
    } else {
      $KU.updateGestureTempList(c, t)
    }
    if ($KG.gestureTemplates) {
      for (var r = IndexJL; r < $KG.gestureTemplates.length; r++) {
        window[$KG.gestureTemplates[r]] && $KW.Utils.initializeGestures(window[$KG.gestureTemplates[r]])
      }
    }
    c.isvisible && this.adjustFlexContainers(c, q, n, h, d)
  },
  adjustFlexContainers: function(e, b, m, h, p) {
    $KU.needOptimization = false;
    var o = $KU.getNodeByModel(e);
    var g = "FlexContainer";
    switch (b) {
      case "setdata":
        this.adjustFlexContainersInSegment(e, o);
        break;
      case "setdataat":
      case "addat":
      case "adddataat":
        var k = o.childNodes[m];
        var r = k.childNodes[e.hasSections ? h + 1 : h];
        var a = r.querySelector("div[kwidgettype='" + g + "']");
        if (a) {
          var f = $KU.getModelByNode(a);
          $KW.FlexContainer.forceLayout(f, a.parentNode)
        }
        break;
      case "addall":
        var k = o.childNodes[m];
        var q = k.childNodes;
        if (e.hasSections) {
          h = h + 1
        }
        for (var d = h; d < q.length; d++) {
          var r = q[d];
          var a = r.querySelector("div[kwidgettype='" + g + "']");
          if (a) {
            var f = $KU.getModelByNode(a);
            $KW.FlexContainer.forceLayout(f, a.parentNode)
          }
        }
        break;
      case "addsectionat":
      case "setsectionat":
        var n = o.childNodes;
        var l = m;
        if (b == "setsectionat") {
          p = 1
        }
        var c = e.data;
        for (var d = 0; d < p; d++) {
          var k = n[l];
          var a = k.querySelector('[secIndex="' + d + ',-1"] div[kwidgettype="FlexContainer"]');
          if (a) {
            var f = $KU.getModelByNode(a);
            $KW.FlexContainer.forceLayout(f, a.parentNode)
          }
          this.adjustFlexContainersInRows(e, k, c[l][1], l);
          l++
        }
        break
    }
    $KU.needOptimization = true;
    if ($KU.isFlexWidget(e) && !e.needScroller && e.autogrowMode == kony.flex.AUTOGROW_HEIGHT && e.viewtype == constants.SEGUI_VIEW_TYPE_TABLEVIEW) {
      var j = e.parent;
      j.layoutConfig.children = true
    }
  },
  adjustFlexContainersInSegment: function(e, g) {
    var d = e.data;
    if (d && d.length > 0) {
      if (e.hasSections) {
        var c = d.length;
        for (var b = 0; b < c; b++) {
          var f = g.querySelector('[secIndex="' + b + ',-1"] div[kwidgettype="FlexContainer"]');
          if (f) {
            var a = $KU.getModelByNode(f);
            $KW.FlexContainer.forceLayout(a, f.parentNode)
          }
          this.adjustFlexContainersInRows(e, g, d[b][1], b)
        }
      } else {
        this.adjustFlexContainersInRows(e, g, d)
      }
    }
  },
  adjustFlexContainersInRows: function(b, j, k, h, a) {
    if (k && k.length > 0) {
      var f = k.length;
      for (var e = 0; e < f; e++) {
        var c = (typeof h != "undefined") ? '[secIndex="' + h + "," + e + '"]' : '[index="' + e + '"]';
        var d = j.querySelector(c + ' div[kwidgettype="FlexContainer"]');
        if (d) {
          var g = $KU.getModelByNode(d);
          d = d.parentNode;
          if (a) {
            this.setFlexRowTemplateHeight(g, d)
          } else {
            $KW.FlexContainer.forceLayout(g, d)
          }
        }
      }
    }
  },
  getAutoGrowSegmentHeight: function(d, c) {
    var a = 0;
    var g = d.data;
    if (g && g.length > 0) {
      if (d.hasSections) {
        var f = g.length;
        for (var e = 0; e < f; e++) {
          var h = c.querySelector('[secIndex="' + e + ',-1"] div[kwidgettype="FlexContainer"]');
          if (h) {
            var b = $KU.getModelByNode(h);
            h = h.parentNode;
            this.setFlexRowTemplateHeight(b, h)
          }
          this.adjustFlexContainersInRows(d, c, g[e][1], e, true)
        }
      } else {
        this.adjustFlexContainersInRows(d, c, g, undefined, true)
      }
      return c.offsetHeight
    }
  },
  setFlexRowTemplateHeight: function(b, c) {
    var a = c.childNodes[0].getAttribute("kcontainerID");
    a && $KW.Utils.updateContainerDataInDOM(c, a);
    $KW.Utils.setFlexContainerStyle(b, c)
  },
  adjustSectionIndex: function(e) {
    var g = e.childNodes;
    var d, b;
    for (var c = 0; c < g.length; c++) {
      var f = g[c].childNodes;
      for (var a = 1; a < f.length; a++) {
        d = (c + IndexJL) + "," + (a + IndexJL - 1);
        b = (a + IndexJL - 1);
        f[a].setAttribute("index", b);
        f[a].setAttribute("secindex", d)
      }
      if (f[0]) {
        f[0].setAttribute("index", (c + IndexJL) + ",-1");
        f[0].setAttribute("secindex", (c + IndexJL) + ",-1")
      }
    }
  },
  applySectionRowSkin: function(f, p) {
    var s = p.childNodes;
    var l = f.alternaterowskin || f.askin || "";
    var q = f.rowskin || f.skin || "";
    var d, t = "";
    for (var h = 0; h < s.length; h++) {
      var u = s[h].childNodes;
      for (var e = 1; e < u.length; e++) {
        d = f.data[h + IndexJL][e];
        if (d) {
          d.metainfo = d.metaInfo || d.metainfo
        }
        t = (d && d.metainfo && d.metainfo.skin) || ((e % 2 == 0 && l) ? l : q);
        u[e].className = t;
        if (f.separatorthickness && f.separatorcolor) {
          if (!f.separatorrequired) {
            u[e].style.borderBottom = "none";
            continue
          }
          var a = parseInt(f.separatorcolor.substring(0, 2), 16),
            k = parseInt(f.separatorcolor.substring(2, 4), 16),
            n = parseInt(f.separatorcolor.substring(4, 6), 16);
          var c = 1 - (parseInt(f.separatorcolor.substring(6, 8), 16) / 100);
          var m = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + a + ", " + k + "," + n + ")" : "rgba(" + a + ", " + k + "," + n + "," + c + ")";
          u[e].style.borderBottom = f.separatorthickness + "px solid " + m
        }
      }
    }
  },
  invertMapAndData: function(h, f) {
    var a = h.widgetdatamap;
    if (a) {
      a = $KU.isArray(a) ? a[IndexJL] : a;
      var s = $KU.getkeys(a);
      var t = {};
      var m = IndexJL ? [null] : [];
      for (var g = 0; g < s.length; g++) {
        t[a[s[g]]] = s[g]
      }
      var c = $KU.getkeys(t);
      if (f[IndexJL] instanceof Array) {
        var l = IndexJL;
        var n;
        for (var g = IndexJL; g < f.length; g++) {
          var b = f[g][1 + IndexJL];
          m[l] = {};
          n = f[g][IndexJL];
          if (n && typeof n == "string" && n.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
            m[l]["sectionLabel"] = $KU.getI18NValue(n)
          } else {
            if (n instanceof Object) {
              m[l]["sectionLabel"] = {};
              for (var r in n) {
                if (t[r]) {
                  var q = n[r];
                  if (q && typeof q == "string" && q.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
                    m[l]["sectionLabel"][t[r]] = $KU.getI18NValue(q)
                  } else {
                    m[l]["sectionLabel"][t[r]] = q
                  }
                }
              }
              n.template && (m[l]["sectionLabel"]["template"] = n.template);
              n.accessibilityConfig && (m[l]["sectionLabel"]["accessibilityConfig"] = n.accessibilityConfig)
            } else {
              m[l]["sectionLabel"] = n
            }
          }
          for (var e = IndexJL; e < b.length; e++, l++) {
            m[l] = m[l] || {};
            for (var d = 0; d < c.length; d++) {
              var o = b[e][c[d]];
              if (o && typeof o == "string" && o.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
                m[l][t[c[d]]] = $KU.getI18NValue(o)
              } else {
                m[l][t[c[d]]] = o
              }
            }
            var p = b[e]["metainfo"] || b[e]["metaInfo"];
            p && (m[l]["metainfo"] = p);
            b[e]["template"] && (m[l]["template"] = b[e]["template"]);
            b[e]["accessibilityConfig"] && (m[l]["accessibilityConfig"] = b[e]["accessibilityConfig"])
          }
          if (b.length == IndexJL) {
            l++
          }
        }
      } else {
        for (var g = IndexJL; g < f.length; g++) {
          m[g] = {};
          for (var e = 0; e < c.length; e++) {
            var o = f[g][c[e]];
            if (o && typeof o == "string" && o.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
              m[g][t[c[e]]] = $KU.getI18NValue(o)
            } else {
              m[g][t[c[e]]] = o
            }
          }
          var p = f[g]["metainfo"] || f[g]["metaInfo"];
          if (p) {
            m[g]["metainfo"] = $KU.cloneObj(p);
            for (var e = 0; e < c.length; e++) {
              if (m[g]["metainfo"][c[e]]) {
                m[g]["metainfo"][t[c[e]]] = p[c[e]];
                if (t[c[e]] != c[e]) {
                  delete m[g]["metainfo"][c[e]]
                }
              }
            }
          }
          if (f[g]["template"]) {
            m[g]["template"] = f[g]["template"]
          }
          if (f[g]["accessibilityConfig"]) {
            m[g]["accessibilityConfig"] = f[g]["accessibilityConfig"]
          }
        }
      }
      return m
    } else {
      return f
    }
  },
  renderFlexContainer: function(o, c, g, f, p) {
    var q = "";
    var h = "";
    var d;
    var m = 0;
    var b = "";
    var r = g[o.id];
    $KW.Utils.updateChildModel(o, r);
    if (!o.isvisible) {
      return ""
    }
    var k = $KW.skins.getWidgetSkinList(o, c);
    var n = " position:relative;" + (o.clipbounds == true ? "overflow:hidden;" : "") + (o.zindex ? "z-index:" + o.zindex : "");
    q += "<div id='flexcontainer_wrapper' class='" + k + "' style='" + $KW.skins.getMarginSkin(o, c) + "'>";
    q += "<div class = 'kwt100'" + $KW.Utils.getBaseHtml(o, c) + " style='" + n + "'>";
    var a = o.widgets();
    d = a.length;
    for (var j = 0; j < d; j++) {
      var e = a[j];
      var r = g[e.id];
      $KW.Utils.updateChildModel(e, r);
      if (!e.isvisible) {
        continue
      }
      this.applyWidgetFocusSkin(r, e, f);
      var l = "kcell " + $KW.skins.getWidgetAlignmentSkin(e) + (e.wType == "TPW" ? "  konycustomcss " : "");
      var b = $KW.Utils.getFlexLayoutStyle(e);
      q += "<div class = '" + l + "' style='" + b + ";overflow:hidden'>";
      if (e.wType == "FlexContainer" || e.wType == "HBox" || e.wType == "VBox") {
        c.topLevelBox = true;
        if (e.wType == "FlexContainer") {
          h = this.renderFlexContainer(e, c, g, f)
        } else {
          if (e.wType == "HBox") {
            h = this.renderHBox(e, c, g, f)
          } else {
            h = this.renderVBox(e, c, g, f)
          }
        }
        if (h) {
          q += h
        } else {
          m++
        }
      } else {
        if (r || e.wType == "Line") {
          q += $KW[e.wType].render(e, c)
        } else {
          m++
        }
      }
      q += "</div>"
    }
    if (d == m) {
      return ""
    }
    q += "</div></div>";
    return q
  },
  renderHBox: function(m, b, l, h, n) {
    var q = b.topLevelBox;
    var w = $KW.skins.getWidgetAlignmentSkin(m);
    var g = "";
    var r = "";
    var d;
    var j = 0;
    var v = "";
    var p = "";
    var a = l[m.id];
    $KW.Utils.updateChildModel(m, a);
    if (!m.isvisible) {
      return ""
    }
    if (kony.appinit.isIE7) {
      if (q) {
        var e = "kwt100 kbasemargin"
      } else {
        var t = m.skin || "";
        g += "<tr class = 'kwt100' ><td class = 'kwt100 " + t + "'>";
        e = $KW.skins.getWidgetSkinList(m, b);
        e = e.replace(t, "");
        e += " " + $KW.skins.getWidgetAlignmentSkin(m);
        v = $KW.skins.getBaseStyle(m, b)
      }
      if (m.percent === false) {
        b.layoutDir = (m.wdir == "1" ? "left" : ((m.wdir == "3") ? "right" : ""))
      }
      g += "<div class = '" + e + "'" + $KW.Utils.getBaseHtml(m, b) + "style='" + v + "'>";
      g += "<table class = 'kwt100' " + (m.fixedLayout == "true" ? " style='table-layout:fixed;'" : "") + "><tr class = '" + w + " kwt100' >" + (m.percent === false ? "<td class='kwt100'>" : "")
    } else {
      if (q) {
        var e = $KW.skins.getWidgetSkinList(m, b);
        if (h.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          p = $KW.skins.getPaddingSkin(h)
        }
        e += " " + $KW.skins.getWidgetAlignmentSkin(m);
        v = $KW.skins.getMarginSkin(m, b) + ((p == "") ? $KW.skins.getPaddingSkin(m) : p)
      } else {
        g += "<div class = 'krow kwt100' ><div class = 'kcell kwt100'>";
        e = $KW.skins.getWidgetSkinList(m, b);
        e += " " + $KW.skins.getWidgetAlignmentSkin(m);
        v = $KW.skins.getMarginSkin(m, b) + $KW.skins.getPaddingSkin(m)
      }
      g += "<div class = 'ktable " + e + "'" + $KW.Utils.getBaseHtml(m, b) + "style='" + v + "'><div class = 'krow " + w + " kwt100' >"
    }
    if (m.children) {
      d = m.children.length;
      var f = 0;
      var c = m.children.length;
      if (kony.appinit.isIE7 && m.percent == false && b.layoutDir && b.layoutDir == "right") {
        f = m.children.length - 1;
        c = 0
      }
      for (var u = f;
           (f == 0 ? (u < c) : (u >= c));
           (f == 0 ? u++ : u--)) {
        var s = m[m.children[u]];
        b.vLine = (s.wType == "Line") ? true : false;
        var x = s.id;
        b.ispercent = m.percent;
        if ((s.wType == "HBox" || s.wType == "VBox") && s.isvisible) {
          b.topLevelBox = false;
          if (s.wType == "HBox") {
            r = this.renderHBox(s, b, l, h)
          } else {
            r = this.renderVBox(s, b, l, h)
          }
          if (r) {
            g += r
          } else {
            j++
          }
        } else {
          var a = l[x];
          this.applyWidgetFocusSkin(a, s, h);
          $KW.Utils.updateChildModel(s, a);
          if (!s.isvisible) {
            continue
          }
          b.ispercent = m.percent;
          var k = $KW.skins.getWidgetAlignmentSkin(s);
          var o;
          if (s.containerweight) {
            o = "kwt" + s.containerweight
          } else {
            o = "auto"
          }
          if (s.wType == "Line") {
            o = "auto"
          }
          var e = k + " " + o;
          if ((m.wType == "Segment") || (!(m.wType == "Segment") && m.percent == true)) {
            g += kony.appinit.isIE7 ? "<td class = '" + e + "'>" : "<div class = 'kcell " + e + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(s) + "'>"
          }
          if (a || s.wType == "Line" || s.wType == "FlexContainer") {
            g += (s.wType == "FlexContainer") ? this.renderFlexContainer(s, b, l, h) : $KW[s.wType].render(s, b)
          } else {
            j++
          }
          if ((m.wType == "Segment") || (!(m.wType == "Segment") && m.percent == true)) {
            g += kony.appinit.isIE7 ? "</td>" : "</div>"
          }
        }
      }
    }
    if ($KG.appbehaviors.adherePercentageStrictly == true && m.percent === true) {
      m.dummyNodeWidth = $KW.HBox.getExtraNodeWidth(m);
      g += "<div class = 'kcell kwt" + m.dummyNodeWidth + "'  ></div>"
    }
    if (d == j) {
      return ""
    }
    if (kony.appinit.isIE7) {
      g += (m.percent == false ? "</td>" : "") + "</tr></table></div>";
      if (!q) {
        g += "</td></tr>"
      }
      b.layoutDir = ""
    } else {
      g += "</div></div>";
      if (!q) {
        g += "</div></div>"
      }
    }
    return g
  },
  renderVBox: function(j, b, h, f, k) {
    var m = b.topLevelBox;
    var s = $KW.skins.getWidgetAlignmentSkin(j);
    var e = "";
    var r = "";
    var n = "";
    var c;
    var g = 0;
    var l = "";
    var a = h[j.id];
    $KW.Utils.updateChildModel(j, a);
    if (!j.isvisible) {
      return ""
    }
    if (kony.appinit.isIE7) {
      if (m) {
        e += "<div class = 'kwt100'" + $KW.Utils.getBaseHtml(j, b) + "><table class = 'kwt100'>"
      } else {
        var p = j.skin || "";
        var d = "kwt" + j.containerweight + " " + s + " " + p;
        if (b.ispercent === true) {
          e += "<td class = '" + d + "'>"
        }
        d = $KW.skins.getWidgetSkinList(j, b);
        d = d.replace(p, "");
        r = $KW.skins.getMarginSkin(j, b) + $KW.skins.getPaddingSkin(j);
        e += "<div class = '" + d + "'" + $KW.Utils.getBaseHtml(j, b) + "style='" + r + "'>";
        e += "<table class = 'kwt100'>"
      }
    } else {
      if (m) {
        if (f.viewtype == constants.SEGUI_VIEW_TYPE_PAGEVIEW) {
          l = $KW.skins.getPaddingSkin(f)
        }
        e += "<div  class = 'kwt100 kbasemargin ktable'" + $KW.Utils.getBaseHtml(j, b) + " style='" + l + "'>"
      } else {
        var d = "kwt" + j.containerweight + " " + s;
        e += "<div class = ' kcell " + d + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(j) + "' >";
        d = $KW.skins.getWidgetSkinList(j, b);
        r = $KW.skins.getMarginSkin(j, b) + $KW.skins.getPaddingSkin(j, b);
        e += "<div class = ' ktable " + d + "'" + $KW.Utils.getBaseHtml(j, b) + "style='" + r + "'>"
      }
    }
    if (j.children) {
      c = j.children.length;
      for (var q = 0; q < j.children.length; q++) {
        var o = j[j.children[q]];
        var t = o.id;
        if ((o.wType == "VBox" || o.wType == "HBox") && o.isvisible) {
          b.topLevelBox = false;
          if (o.wType == "HBox") {
            n = this.renderHBox(o, b, h, f)
          } else {
            n = this.renderVBox(o, b, h, f)
          }
          if (n) {
            e += n
          } else {
            g++
          }
        } else {
          var a = h[t];
          this.applyWidgetFocusSkin(a, o, f);
          $KW.Utils.updateChildModel(o, a);
          if (!o.isvisible) {
            continue
          }
          e += kony.appinit.isIE7 ? "<tr class = 'kwt100' >" : "<div class = 'krow kwt100' >";
          s = $KW.skins.getWidgetAlignmentSkin(o);
          d = "kwt100";
          d += " " + s;
          e += kony.appinit.isIE7 ? "<td class = '" + d + "'>" : "<div class = 'kcell " + d + "'>";
          if (a || o.wType == "Line" || o.wType == "FlexContainer") {
            e += (o.wType == "FlexContainer") ? this.renderFlexContainer(o, b, h, f) : $KW[o.wType].render(o, b)
          } else {
            g++
          }
          e += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
        }
      }
    }
    if (c == g) {
      return ""
    }
    if (kony.appinit.isIE7) {
      e += "</table></div>";
      if (!m && b.ispercent === true) {
        e += "</td>"
      }
    } else {
      e += "</div>";
      if (!m) {
        e += "</div>"
      }
    }
    return e
  },
  applyWidgetFocusSkin: function(d, c, a) {
    if (d && d.focusSkin) {
      var b = "";
      if (a.hasSections) {
        b = "#" + a.pf + "_" + a.id + " li[secindex='" + a.seccounter + "," + a.rowcounter + "'] #" + c.pf + "_" + c.id + ":active"
      } else {
        b = "#" + a.pf + "_" + a.id + " li[index='" + a.rowcounter + "'] #" + c.pf + "_" + c.id + ":active"
      }
      $KW.Utils.applyStyle(d.focusSkin, b, a.wType)
    }
  },
  applyRowSkin: function(d, m) {
    var q = m.childNodes;
    var j = d.alternaterowskin || d.askin || "";
    var n = d.rowskin || d.skin || "";
    var e, p = "";
    for (var f = 0; f < q.length; f++) {
      e = d.data[f + IndexJL];
      if (e) {
        e.metainfo = e.metaInfo || e.metainfo
      }
      p = (e && e.metainfo && e.metainfo.skin) || ((f % 2 != 0 && j) ? j : n);
      q[f].className = p;
      if (f < q.length - 1 && d.separatorthickness && d.separatorcolor) {
        if (!d.separatorrequired) {
          q[f].style.borderBottom = "none";
          continue
        }
        var a = parseInt(d.separatorcolor.substring(0, 2), 16),
          h = parseInt(d.separatorcolor.substring(2, 4), 16),
          l = parseInt(d.separatorcolor.substring(4, 6), 16);
        var c = 1 - (parseInt(d.separatorcolor.substring(6, 8), 16) / 100);
        var k = (kony.appinit.isIE7 || kony.appinit.isIE8) ? "rgb(" + a + ", " + h + "," + l + ")" : "rgba(" + a + ", " + h + "," + l + "," + c + ")";
        q[f].style.borderBottom = d.separatorthickness + "px solid " + k
      }
    }
  },
  applySectionHeaderSkin: function(e, c) {
    var b = $KU.getNodeByModel(e);
    if (b) {
      var g = b.id;
      var d = document.querySelectorAll("#" + g + ">ul>li:first-child");
      for (var a = 0; a < d.length; a++) {
        var f = d[a];
        f.style.border = "none";
        f.className = c + " middleleftalign"
      }
    }
  },
  updateData: function(o, c, d, g, k) {
    if (d && g) {
      var h = parseInt(g.getAttribute("index"));
      var l = 0 + IndexJL;
      var r = d.data;
      var q = null;
      var j;
      if (d.hasSections) {
        j = g.getAttribute("secindex").split(",");
        l = parseInt(j[0])
      }
      if (d.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR && (d.hasSections ? (d.selectedsectionindex == l) && (d.focusedindex == h) : (d.focusedindex == h))) {
        return
      }
      if (d.hasSections) {
        d.selectedsectionindex = l;
        h = parseInt(j[1]);
        if (h != -1) {
          var f = r[l][1 + IndexJL];
          q = f[h]
        } else {
          q = r[l][0 + IndexJL]
        }
      } else {
        d.selectedsectionindex = l;
        q = d.data[h]
      }
      if (h != -1) {
        d.focusedindex = h;
        d.selectedindex = (IndexJL) ? [null, l, h] : [l, h];
        d.focuseditem = q;
        if (!d.selectionindicator || d.selectionindicator != o.id || d.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
          d.selecteditems = (IndexJL) ? [null, q] : [q]
        }
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          d.selectedItems = d.selecteditems;
          d.selectedIndex = d.selectedindex
        }
      }
      $KW.Utils.updateContainerMasterData(d, q, o, c);
      if (q) {
        q.metainfo = q.metaInfo || q.metainfo
      }
      var n = (q && q.metainfo) ? q.metainfo.clickable : true;
      if (d.selectionindicator && d.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR && h != -1) {
        this.toggleRowSelection(d, g.parentNode)
      }
      if (d.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
        var m = IndexJL ? [null] : [];
        var b = IndexJL ? [null, d.selectedsectionindex, h] : [d.selectedsectionindex, h];
        m.push(b);
        d.selectedRows = (m && m.length > IndexJL) ? m : null;
        this.setSelectedItemsAndIndices(d)
      }
      if (!$KU.inArray(["HBox", "VBox", "Button", "Link", "RichText"], o.wType, true)) {
        d.selectedrowindex = (IndexJL) ? [null, l, h] : [l, h];
        d.selectedrowindices = d.selectedindices
      }
      d.currentIndex = [l, h];
      if (n && k) {
        this.setProgressIndicator(g, d);
        if ((d.onclick || d.onrowclick) && !c.getAttribute("kcontainerID")) {
          d.blockeduiskin && $KW.Utils.applyBlockUISkin(d);
          var p = $KW.Segment.getRowDataByIndex(d, (IndexJL) ? [null, l, h] : [l, h]);
          var e = $KU.returnEventReference(p.onclick || p.onrowclick || d.onclick || d.onrowclick);
          e && e.call(d, d, l, h, d.selectedState)
        } else {
          var a = (IndexJL) ? [null, l, h] : [l, h];
          if (h == -1) {
            var i = kony.events.executeBoxEvent(o, $KW.Segment.getRowDataByIndex(d, a), d, true)
          } else {
            var i = kony.events.executeBoxEvent(o, $KW.Segment.getRowDataByIndex(d, a), d)
          }
          if (h != -1) {
            var p = $KW.Segment.getRowDataByIndex(d, (IndexJL) ? [null, l, h] : [l, h]);
            var e = $KU.returnEventReference(p.onClick || p.onclick || p.onRowClick || p.onrowclick || d.onclick || d.onrowclick);
            if (!i && e) {
              d.blockeduiskin && $KW.Utils.applyBlockUISkin(d);
              if (d.selectionbehavior == constants.SEGUI_DEFAULT_BEHAVIOR) {
                e && e.call(d, d, l, h)
              } else {
                e && e.call(d, d, l, h, d.selectedState)
              }
              $KU.onEventHandler(d)
            }
          }
        }
        if (!kony.system.activity.hasActivity()) {
          $KW.unLoadWidget()
        }
      }
      var s = q[o.id];
      if (s && typeof s == "object") {
        if (s.enable === false) {
          return false
        }
      }
    }
    return true
  },
  toggleRowSelection: function(d, l) {
    if (typeof d.selectedindex == "undefined") {
      var o = 0 + IndexJL;
      var k = d.focusedindex
    } else {
      if (d.selectedindex) {
        var o = d.selectedindex[0 + IndexJL];
        var k = d.selectedindex[1 + IndexJL]
      } else {
        var o = d.selectedindices[0 + IndexJL][0 + IndexJL];
        var k = d.selectedindices[0 + IndexJL][1 + IndexJL][0 + IndexJL]
      }
    }
    if (d.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
      d.selectedRows = (d.selectedRows) ? d.selectedRows : (IndexJL) ? [null] : []
    } else {
      if (d.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
        d.selectedRows = d.selectedRows ? d.selectedRows : (IndexJL) ? [null] : []
      }
    }
    var g = (IndexJL) ? [null, o, k] : [o, k];
    var m = $KU.arrayIndex(d.selectedRows, g);
    if (m != -1) {
      var e = false;
      d.selectedRows.splice(m, 1)
    } else {
      var e = true;
      if (d.selectionbehavior == constants.SEGUI_MULTI_SELECT_BEHAVIOR) {
        d.selectedRows.push(g)
      } else {
        d.selectedRows = (IndexJL) ? [null, g] : [g]
      }
    }
    d.selectedRows = (d.selectedRows && d.selectedRows.length > IndexJL) ? d.selectedRows : null;
    this.setSelectedItemsAndIndices(d);
    var h = $KU.getNodeByModel(d);
    var i = (d.rowtemplate ? d.rowtemplate.id : d.pf) + "_" + d.selectionindicator;
    var j = " [index='{index}'] [id='" + i + "']";
    j = d.hasSections ? (" ul:nth-child(" + (IndexJL ? o : o + 1) + ") " + j) : j;
    j = "#" + h.id + j;
    if (d.selectionindicator) {
      var b = document.querySelector(j.replace(/\{index\}/g, k));
      var a = (b && b.src) || "";
      a = a.substring(a.lastIndexOf("/") + 1, a.length);
      var f;
      var n = e ? d.selectimage : d.unselectimage;
      a && (b.src = $KU.getImageURL(n));
      var c = $KU.getParentByAttribute(b, "index");
      if (c) {
        c.firstChild.setAttribute("aria-selected", e);
        e ? c.firstChild.setAttribute("role", "option") : c.firstChild.removeAttribute("role", "option")
      }
    }
    if (d.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
      if (d.selectionindicator) {
        this.setImages(d, d.selectedRows)
      }
    }
    d.onselect && d.onselect(d, d.focusedindex, e);
    d.selectedState = e
  },
  eventHandler: function(a, d, c) {
    var b = $KU.getModelByNode(d);
    if (d.getAttribute("kwidgettype") != "Segment") {
      $KW.Utils.updateContainerData(b, d, true)
    }
  },
  setProgressIndicator: function(c, a) {
    var b = $KW.Utils.setProgressIndicator($KU.getParentByAttribute(c, kony.constants.KONY_WIDGET_TYPE), a);
    c.insertBefore(b, c.childNodes[0])
  },
  setSelectedItemsAndIndices: function(b, d) {
    if (b.selectedRows) {
      b.selecteditems = (IndexJL) ? [null] : [];
      var j = {};
      for (var e = IndexJL; e < b.selectedRows.length; e++) {
        var a = b.selectedRows[e][0 + IndexJL];
        var g = b.selectedRows[e][1 + IndexJL];
        if (!d) {
          if (!j[a]) {
            j[a] = (IndexJL) ? [null] : []
          }
          j[a].push(g)
        }
        if (b.hasSections) {
          var f = b.data[a][1 + IndexJL];
          var l = f[g]
        } else {
          var l = b.data[g]
        }
        b.selecteditems.push(l)
      }
      if (!d) {
        b.selectedindices = (IndexJL) ? [null] : [];
        for (var c in j) {
          var h = (IndexJL) ? [null] : [];
          h.push(parseInt(c, 10));
          h.push(j[c]);
          b.selectedindices.push(h)
        }
      }
      b.selectedindex = b.selectedRows[b.selectedRows.length - 1];
      b.selectedsectionindex = b.selectedindex[0 + IndexJL];
      b.focusedindex = b.selectedindex[1 + IndexJL];
      b.focuseditem = b.selecteditems[b.selecteditems.length - 1]
    } else {
      b.focusedindex = b.focuseditem = b.selectedsectionindex = b.selectedindex = b.selecteditems = null;
      if (!d) {
        b.selectedindices = null
      }
    }
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      b.selectedItems = b.selecteditems;
      b.selectedIndex = b.selectedindex;
      b.selectedIndices = b.selectedindices;
      b.selectedRowIndex = b.selectedrowindex;
      b.selectedRowIndices = b.selectedrowindices
    }
  },
  setImages: function(f, g) {
    if (f.selectionbehavior != constants.SEGUI_DEFAULT_BEHAVIOR) {
      var e = $KU.getNodeByModel(f);
      if (e) {
        var h = $KU.getImageURL(f.selectimage);
        var a = document.querySelectorAll("#" + e.id + ' li img[src="' + h + '"]');
        for (var d = 0; d < a.length; d++) {
          h = $KU.getImageURL(f.unselectimage);
          a[d].setAttribute("src", h);
          var b = $KU.getParentByAttribute(a[d], "index");
          if (b) {
            b.firstChild.removeAttribute("aria-selected");
            b.firstChild.removeAttribute("role", "option")
          }
        }
        if (g) {
          if (f.selectionbehavior == constants.SEGUI_SINGLE_SELECT_BEHAVIOR) {
            g = (IndexJL) ? [null, g[g.length - 1]] : [g[g.length - 1]]
          }
          for (var d = IndexJL; d < g.length; d++) {
            if (f.hasSections) {
              a = document.querySelectorAll("#" + e.id + ' li[secindex="' + g[d][0 + IndexJL] + "," + g[d][1 + IndexJL] + '"] img#' + f.rowtemplate.id + "_" + f.selectionindicator)
            } else {
              a = document.querySelectorAll("#" + e.id + ' li[index="' + g[d][1 + IndexJL] + '"] img#' + f.rowtemplate.id + "_" + f.selectionindicator)
            }
            var h = $KU.getImageURL(f.selectimage);
            for (var c = 0; c < a.length; c++) {
              a[c].setAttribute("src", h);
              var b = $KU.getParentByAttribute(a[d], "index");
              if (b) {
                b.firstChild.setAttribute("aria-selected", true);
                b.firstChild.setAttribute("role", "option")
              }
            }
          }
        }
      }
      f.selectedRows = g;
      this.setSelectedItemsAndIndices(f)
    }
  },
  adjustAlreadySelectedProperties: function(b, c, a, d) {
    if (c != "addall") {
      if (c == "setdata" || c == "removeall") {
        b.selectedRows = null
      }
      if (b.selectedRows) {
        b.selectedRows = this.adjustSelectedRows(b.selectedRows, c, a, d);
        b.selectedRows && (b.selectedrowindex = b.selectedRows[b.selectedRows.length - 1])
      }
      if (b.selectedrowindices) {
        b.selectedrowindices = this.adjustSelectedRowIndices(b.selectedrowindices, c, a, d)
      }
      this.setSelectedItemsAndIndices(b)
    }
  },
  adjustSelectedRowIndices: function(b, d, k, g) {
    var c;
    switch (d) {
      case "addat":
      case "adddataat":
        for (var f = IndexJL; f < b.length; f++) {
          c = b[f][1 + IndexJL];
          if (b[f][0 + IndexJL] == k) {
            for (var e = IndexJL; e < c.length; e++) {
              if (c[e] >= g) {
                c[e] = c[e] + 1
              }
            }
            b[f][1 + IndexJL] = c
          }
        }
        break;
      case "setdataat":
      case "removeat":
        for (var f = IndexJL; f < b.length; f++) {
          c = b[f][1 + IndexJL];
          if (b[f][0 + IndexJL] == k) {
            var h = $KU.arrayIndex(c, IndexJL + g);
            if (h != -1) {
              c.splice(h, 1)
            }
            if (d === "removeat") {
              for (var e = IndexJL; e < c.length; e++) {
                if (c[e] > g) {
                  c[e] = c[e] - 1
                }
              }
            }
            b[f][1 + IndexJL] = c
          }
        }
        break;
      case "addsectionat":
        for (var f = IndexJL; f < b.length; f++) {
          if (b[f][0 + IndexJL] >= k) {
            b[f][0 + IndexJL] = b[f][0 + IndexJL] + 1
          }
        }
        break;
      case "removesectionat":
      case "setsectionat":
        var a = [];
        for (var f = IndexJL; f < b.length; f++) {
          if (b[f][0 + IndexJL] == k) {
            a.push(f)
          }
        }
        for (var f = 0; f < a.length; f++) {
          b.splice(a[f], 1)
        }
        if (d == "removesectionat") {
          for (var f = IndexJL; f < b.length; f++) {
            if (b[f][0 + IndexJL] > k) {
              b[f][0 + IndexJL] = b[f][0 + IndexJL] - 1
            }
          }
        }
        break
    }
    return (b.length > IndexJL) ? b : null
  },
  adjustSelectedRows: function(c, f, a, g) {
    switch (f) {
      case "addat":
      case "adddataat":
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] == a && c[d][1 + IndexJL] >= g) {
            c[d][1 + IndexJL] = c[d][1 + IndexJL] + 1
          }
        }
        break;
      case "setdataat":
        var e = $KU.arrayIndex(c, (IndexJL) ? [null, a, g] : [a, g]);
        if (e != -1) {
          c.splice(e, 1)
        }
        break;
      case "removeat":
        var e = $KU.arrayIndex(c, (IndexJL) ? [null, a, g] : [a, g]);
        if (e != -1) {
          c.splice(e, 1)
        }
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] == a && c[d][1 + IndexJL] > g) {
            c[d][1 + IndexJL] = c[d][1 + IndexJL] - 1
          }
        }
        break;
      case "addsectionat":
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] >= a) {
            c[d][0 + IndexJL] = c[d][0 + IndexJL] + 1
          }
        }
        break;
      case "removesectionat":
      case "setsectionat":
        var b = [];
        for (var d = IndexJL; d < c.length; d++) {
          if (c[d][0 + IndexJL] == a) {
            b.push(d)
          }
        }
        for (var d = 0; d < b.length; d++) {
          c.splice(b[d], 1)
        }
        if (f == "removesectionat") {
          for (var d = IndexJL; d < c.length; d++) {
            if (c[d][0 + IndexJL] > a) {
              c[d][0 + IndexJL] = c[d][0 + IndexJL] - 1
            }
          }
        }
        break
    }
    return (c.length > IndexJL) ? c : null
  },
  calculateSectionRowIndex: function(b, e, g, d) {
    if (typeof d != "boolean") {
      return d
    }
    var j = false;
    e = (d && e < IndexJL) ? IndexJL : e;
    if (!b.hasSections) {
      if (e < IndexJL || e >= b.data.length) {
        if (d) {
          g = IndexJL;
          e = (e < IndexJL) ? IndexJL : (e >= b.data.length) ? b.data.length : e;
          j = [g, e]
        }
      } else {
        g = IndexJL;
        j = [g, e]
      }
    } else {
      if (typeof g != "number") {
        var a = null,
          f = 0,
          g = IndexJL,
          h = e;
        for (var c = IndexJL; c < b.data.length; c++) {
          a = b.data[c][1 + IndexJL];
          f += a.length - IndexJL;
          if (h >= f + IndexJL) {
            g++;
            e = h - f
          } else {
            break
          }
        }
        if (g >= b.data.length) {
          if (d) {
            g = b.data.length - 1;
            j = (b.data[g]) ? b.data[g][1 + IndexJL].length : IndexJL;
            j = [g, e]
          }
        } else {
          a = b.data[g][1 + IndexJL];
          if (e < IndexJL) {
            if (d) {
              j = [g, IndexJL]
            }
          } else {
            if (e >= a.length) {
              if (d) {
                j = [g, a.length]
              }
            } else {
              j = [g, e]
            }
          }
        }
      } else {
        if (g < IndexJL || g >= b.data.length) {
          if (d) {
            if (g < IndexJL) {
              g = IndexJL;
              if (!b.data[g]) {
                e = IndexJL
              } else {
                var a = b.data[g][1 + IndexJL];
                if (e < IndexJL || e >= a.length) {
                  if (d) {
                    e = (e < IndexJL) ? IndexJL : (e >= b.data.length) ? b.data.length : e
                  }
                }
              }
            } else {
              if (g >= b.data.length) {
                g = b.data.length - IndexJL;
                e = (b.data[g]) ? b.data[g][1 + IndexJL].length : IndexJL
              }
            }
            j = [g, e]
          }
        } else {
          var a = b.data[g][1 + IndexJL];
          if (e < IndexJL || e >= a.length) {
            if (d) {
              e = (e < IndexJL) ? IndexJL : (e >= a.length) ? a.length : e;
              j = [g, e]
            }
          } else {
            j = [g, e]
          }
        }
      }
    }
    return j
  },
  updateSectionContent: function(h, b, e, g, a) {
    switch (e) {
      case "setsectionat":
        h.splice(a, 1, b);
        return;
        break;
      case "addsectionat":
        for (var c = IndexJL; c < b.length; c++) {
          h.splice(a++, 0, b[c])
        }
        return;
        break;
      case "removesectionat":
        h.splice(a, 1);
        return;
        break
    }
    if (e == "addall") {
      if (b[IndexJL] instanceof Array) {
        $KU.addArray(h, b)
      }
    } else {
      var f = h[a];
      var d = f && f[1 + IndexJL];
      if (d) {
        switch (e) {
          case "setdataat":
            d.splice(g, 1, b);
            break;
          case "addat":
          case "adddataat":
            if ($KU.isArray(b)) {
              for (var c = IndexJL; c < b.length; c++) {
                d.splice(g++, 0, b[c])
              }
            } else {
              d.splice(g, 0, b)
            }
            break;
          case "removeat":
            d.splice(g, 1);
            break
        }
      }
    }
  },
  isSelectionOutOfBound: function(d, c) {
    var b = false,
      a = c[0 + IndexJL],
      f = c[1 + IndexJL];
    if (d.hasSections) {
      if (a >= d.data.length) {
        b = true
      } else {
        var e = d.data[a][1 + IndexJL];
        if (f > e.length) {
          b = true
        }
      }
    } else {
      if (f >= d.data.length) {
        b = true
      }
    }
    return b
  },
  getRowDataByIndex: function(b, a) {
    if (b.data.length > IndexJL) {
      if ($KU.isArray(b.data[0])) {
        if (a[IndexJL + 1] == -1) {
          return b.data[a[0]][IndexJL]
        } else {
          return b.data[a[0]][IndexJL + 1][a[1]]
        }
      } else {
        return b.data[a[1]]
      }
    }
  }
};
$KW.Image = {
  initialize: function() {
    kony.events.addEvent("click", "Image", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Image", this.imgOrientationHandler)
  },
  imgOrientationHandler: function() {
    var b = document.querySelectorAll("img[kwidgettype='Image']");
    if (b) {
      for (var c = 0; c < b.length; c++) {
        var a = b[c];
        $KW.Image.imgResizeHandler(a, "orientationchange")
      }
    }
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    switch (c) {
      case "src":
        e.srcType = 1;
        d && (d.parentNode.parentNode.innerHTML = this.render(e, new $KW.WidgetGenerationContext(e.pf)));
        break;
      case "base64":
        e.srcType = 2;
        if (d && b) {
          d.src = this.getBase64String(b)
        }
        break;
      case "referenceheight":
      case "referencewidth":
      case "imagescalemode":
        d && (d.parentNode.parentNode.innerHTML = this.render(e, new $KW.WidgetGenerationContext(e.pf)));
        $KW.FlexContainer.attachDragEvent(e);
        break
    }
  },
  render: function(b, e) {
    var g = $KW.skins.getSplitSkinsBetweenWidgetAndParentDiv(b, e);
    var l = "";
    var d = "";
    b.loaded = false;
    var n = $KU.isFlexWidget(b);
    if (e.scrollBoxID) {
      b.scrollBoxID = e.scrollBoxID
    }
    var i = true;
    if ($KU.inArray($KU.imgCache, b.src, true)) {
      i = false
    }
    if (i && b.imagewhiledownloading) {
      new Image().src = $KU.getImageURL(b.imagewhiledownloading)
    }
    b.imagewhiledownloading = b.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
    var h = $KW.skins.getVisibilitySkin(b) + (n ? " middlecenteralign" : "");
    var j = "";
    if (e.ispercent === false) {
      j = e.layoutDir ? "float:" + e.layoutDir : ""
    } else {
      j = "width:100%"
    }
    if (b.srcType == 2) {
      imgsrc = this.getBase64String(b.base64)
    } else {
      imgsrc = $KU.getImageURL(b.src)
    }
    var f = "$KU.imgLoadHandler(arguments[0],this)";
    if (e.container) {
      var c = e.container;
      if (c.wType == "Segment" && c.selectionindicator == b.id && c.behavior != "default" && c.selectimage && c.unselectimage) {
        var m = $KU.inArray(c.selectedRows, (IndexJL) ? [null, c.seccounter, c.rowcounter] : [c.seccounter, c.rowcounter])[0] ? c.selectimage : c.unselectimage;
        imgsrc = $KU.getImageURL(m)
      }
    }
    var a = this.getImageDimensions(b, e.ispercent);
    d += (a.width != undefined ? ("width:" + a.width + "px;") : "") + (a.height != undefined ? ("height:" + a.height + "px;") : "") + (n ? "font-size:0px;display:block;" : "");
    f = a.onimgonload || f;
    if (a.maxwidth) {
      d = a.maxwidth
    }
    if (kony.appinit.isiPhone || $KU.isBlackBerry) {
      l += "<span id='" + (b.pf + "_" + b.id) + "_span' class='" + h + " " + g[0] + "' style='" + (i && b.src ? "background:url(" + $KU.getImageURL(b.imagewhiledownloading) + ") center center no-repeat;" : ";") + $KW.skins.getMarginSkin(b, e) + $KW.skins.getPaddingSkin(b, e) + j + ";" + d + "'>"
    } else {
      l += "<span id='" + (b.pf + "_" + b.id) + "_span' class='" + h + " " + g[0] + "' style='display:inline-block;" + (i && b.src ? "background:url(" + $KU.getImageURL(b.imagewhiledownloading) + ") center center no-repeat;" : ";") + $KW.skins.getMarginSkin(b, e) + $KW.skins.getPaddingSkin(b, e) + j + ";" + d + "'>"
    }
    l += "<img class='' src='" + imgsrc + "'" + $KW.Utils.getBaseHtml(b, e) + "onload= " + f + " onerror='$KU.imgLoadHandler(arguments[0],this)' ";
    if (!(b.name == "kony.ui.Image2" || b.name == "konyLua.Image2") && b.scalemode == "maintainaspectratio") {
      d = "width:100%;"
    } else {
      if (b.scalemode == "retaininitialimagedimensions") {
        d = ""
      }
    }
    if (i && b.src) {
      if (kony.appinit.isIE8 || kony.appinit.isIE7) {
        d += "opacity:0;"
      } else {
        d += "visibility:hidden;opacity:0;"
      }
    }
    var k = b.ondownloadcomplete || "";
    if (k) {
      k = (typeof(k) == "function") ? $KU.getFunctionName(b.ondownloadcomplete) : b.ondownloadcomplete;
      k = " ondownloadcomplete= '" + k + "'"
    }
    l += "style= '" + d + "'" + k + "/></span>";
    return l
  },
  getImageDimensions: function(a, b) {
    var d = {};
    if (a.imagescalemode == constants.IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS) {
      var c = $KU.isFlexWidget(a);
      if (!c) {
        if (a.referencewidth) {
          if (b == false) {
            d.width = a.referencewidth
          } else {
            d.width = (((screen.width * (a.containerweight / 100)) > a.referencewidth) ? a.referencewidth : (screen.width * (a.containerweight / 100)))
          }
          d.height = a.referenceheight
        } else {
          d.maxwidth = "max-width:100%;"
        }
      }
    } else {
      if ((a.name == "kony.ui.Image2" || a.name == "konyLua.Image2") && a.imagescalemode == constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
        a.ispercent = b;
        d.onimgonload = "$KW.Image.imgLoadHandler2(arguments[0])"
      } else {
        if (!a.referencewidth && a.heightwidth && a.imagescalemode != constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO) {
          var e = (a.heightwidth).split(",");
          d.width = e[1];
          d.height = e[0]
        } else {
          d.maxwidth = "max-width:100%;"
        }
      }
    }
    return d
  },
  getBase64String: function(a) {
    return "data:image/png;base64," + a
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  },
  imgLoadHandler2: function(a) {
    a = a || window.event;
    img = a.target || a.srcElement;
    if (!img.parentNode || (img.parentNode && !img.parentNode.parentNode)) {
      return
    }
    this.imgResizeHandler(img, a.type)
  },
  imgResizeHandler: function(u, l) {
    var b = u.getAttribute("ktabpaneid");
    var f = u.getAttribute("kwidgettype");
    var t = (f == "Image") ? $KU.getElementID(u.getAttribute("id")) : u.getAttribute("id");
    var j = u.src;
    var m = u.getAttribute("ktabid");
    var r;
    if (m) {
      r = kony.model.getWidgetModel(u.getAttribute("kformname"), $KU.getElementID(t), b, m)
    } else {
      r = kony.model.getWidgetModel(u.getAttribute("kformname"), t, b)
    }
    var g = $KW.Image.getNaturalDimensions(u);
    if (l == "load") {
      var c = true;
      if ($KU.inArray($KU.imgCache, j, true)) {
        c = false
      } else {
        $KU.imgCache.push(j)
      }
      if (c || u.parentNode.style.background.indexOf("url") != -1) {
        var o = u.parentNode;
        if (o) {
          if (o.style.removeProperty) {
            o.style.removeProperty("background")
          } else {
            o.style.background = "none"
          }
        }
        u.style[vendor + "Transition"] = "opacity 500ms ease-in-out";
        u.style.opacity = 1
      }
    }
    r.loaded = true;
    if (r.animInfo) {
      var p = r.animInfo;
      p.instance.animate(r, p.animConfig, p.animCallback)
    }
    if (!u.parentNode || (!g.width || !g.height)) {
      return
    }
    var d = $KU.returnEventReference(u.getAttribute("ondownloadcomplete"));
    d && d.call(r, r, j, false);
    var e = u.parentNode.parentNode.offsetWidth;
    if (r.containerWeight > 0 && e == 0) {
      e = g.width
    }
    var s = $KU.isFlexWidget(r);
    if (!s) {
      var h = [];
      h = $KW.Image.imgDimCalculation(r, g, e);
      u.style.width = u.parentNode.style.width = h[1] + "px";
      u.style.height = u.parentNode.style.height = h[0] + "px"
    }
    u.style.display = "";
    u.style.visibility = "visible";
    u.parentNode.parentNode.style["font-size"] = "0px";
    $KU.onImageLoadComplete(r, u);
    var a = r.parent;
    if (a.wType == "HBox") {
      var k = $KU.getParentByAttribute(u.parentNode, "kwidgettype");
      if (k) {
        var q = k.querySelectorAll("div[kwidgettype='Line'][direction='V']");
        for (var n = 0; n < q.length; n++) {
          $KW.Line.resizeVLine(q[n])
        }
      }
    }
  },
  getNaturalDimensions: function(b) {
    var a = {};
    if (typeof b.naturalWidth == "undefined") {
      var c = new Image();
      c.src = b.src;
      a.width = c.width;
      a.height = c.height
    } else {
      a.width = b.naturalWidth;
      a.height = b.naturalHeight
    }
    return a
  },
  imgDimCalculation: function(a, c, g) {
    var f = [];
    var e = (c.width / c.height);
    if (!a.referencewidth) {
      if (a.ispercent === false) {
        f[1] = c.width;
        f[0] = c.height
      } else {
        if (c.width <= g) {
          if (a.referenceheight && c.height > a.referenceheight) {
            f[0] = a.referenceheight;
            f[1] = f[0] * e
          } else {
            f[1] = c.width;
            f[0] = c.height
          }
        } else {
          f[1] = g;
          if (!a.referenceheight) {
            f[0] = f[1] / e
          } else {
            f[0] = f[1] / e;
            if (f[0] > a.referenceheight) {
              f[0] = a.referenceheight;
              f[1] = f[0] * e
            }
          }
        }
      }
    } else {
      if (a.ispercent === false) {
        if (c.width < a.referencewidth) {
          f[1] = c.width;
          f[0] = c.height
        } else {
          f[1] = a.referencewidth;
          f[0] = f[1] / e
        }
      } else {
        var b = (a.referencewidth <= g) ? a.referencewidth : g;
        if (!a.referenceheight) {
          if (c.width < b) {
            f[0] = c.height;
            f[1] = c.width
          } else {
            f[1] = b;
            f[0] = f[1] / e
          }
        } else {
          var d = (c.width < b) ? (c.height < a.referenceheight ? true : false) : false;
          if (!d) {
            f[1] = (((g) > a.referencewidth) ? a.referencewidth : (g));
            f[0] = a.referenceheight;
            var h = (f[1] / e) < f[0] ? (f[1] / e) : false;
            if (h === false) {
              f[1] = (f[0] * e <= a.referencewidth) ? f[0] * e : false
            } else {
              f[0] = h
            }
          } else {
            f[0] = c.height;
            f[1] = c.width
          }
        }
      }
    }
    if (f[1] > 0 && f[1] < 1) {
      f[1] = 1
    }
    if (f[0] > 0 && f[0] < 1) {
      f[0] = 1
    }
    if (document.getElementsByTagName("body")[0].getAttribute("formWidth") != null) {
      $KW.Form.adjustBodyWidth()
    }
    return f
  },
  setBase64Img: function(a) {
    if (a.src && !a.src.startsWith("http")) {
      var b = new XMLHttpRequest();
      b.onreadystatechange = function() {
        if (b.readyState == 4 && b.status == 200) {
          a.base64 = $KU.getBase64(b.responseText) || null
        }
      };
      b.open("GET", $KU.getImageURL(a.src), true);
      if (b.overrideMimeType) {
        b.overrideMimeType("text/plain; charset=x-user-defined")
      }
      b.send(null)
    } else {
      a.base64 = null
    }
  }
};
$KW.HStrip = {
  initialize: function() {
    kony.events.addEvent("click", "HStrip", this.eventHandler);
    kony.events.addEvent("onorientationchange", "HStrip", this.orientationHandler)
  },
  initializeView: function(a) {
    this.initializePageViews(a);
    $KW.touch.computeSnapWidths(a, "HStrip");
    this.initializeSlotViews(a);
    this.initializeStripViews(a)
  },
  updateView: function(g, d, b, a) {
    var f = $KU.getNodeByModel(g);
    switch (d) {
      case "viewtype":
        if (!f) {
          return
        }
        f.parentNode.innerHTML = this.render(g, new $KW.WidgetGenerationContext(g.pf));
        if (b == "pageview") {
          this.initializePageView(g, false, f);
          $KW.touch.computeWidths(f, g);
          var e = new $KW.touch.pageviewScroller(f, {
            widgetModel: g
          });
          $KG[f.id] = e
        }
        if (b == "slotview") {
          this.initializeSlotView(g)
        }
        if (b == "stripview") {
          this.initializeStripView(f)
        }
        break;
      case "data":
        if (b && $KU.isArray(b)) {
          g.masterdata = b[0 + IndexJL];
          g.key = b[1 + IndexJL]
        }
        $KW.HStrip.setData(g, g.masterdata, g.key);
        break;
      case "showscrollbars":
        g.scrollInstance = null;
        $KW.HStrip.initializeStripViews(g.pf);
        break;
      case "selectedindex":
      case "focusedindex":
        if (g.viewtype == "pageview") {
          $KW.touch.computeSnapWidths(g.pf, "HStrip")
        }
        g.focuseditem = g.selectedItem = g.selecteditem = g.masterdata[b];
        break;
      case "referenceheight":
      case "referencewidth":
      case "imagescalemode":
        $KW.HStrip.setData(g, g.masterdata, g.key);
        break;
      case "viewconfig":
        var h = g.viewconfig;
        g.scrollbounce = h && h.stripviewConfig && h.stripviewConfig.enableScrollBounce;
        if (g.scrollbounce == undefined) {
          g.scrollbounce = h && h.stripviewconfig && h.stripviewconfig.enablescrollbounce
        }
        var c = g.scrollInstance;
        if (c) {
          c.options.bounce = (g.scrollbounce != undefined ? g.scrollbounce : true)
        }
        break
    }
  },
  render: function(f, a) {
    var g = f.masterdata = (f.data && f.data[0 + IndexJL]) || f.masterdata || [];
    if (f.data) {
      f.key = f.data[1 + IndexJL]
    }
    f.focusedindex = f.selectedindex = f.focusedindex || f.selectedindex || null;
    f.focuseditem = f.selecteditem = f.focuseditem || f.selecteditem || null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      f.selectedItem = f.selecteditem;
      f.selectedIndex = f.selectedindex
    }
    f.context = a;
    var c = $KW.skins.getWidgetSkinList(f, a);
    var h = $KW.skins.getMarginSkin(f, a) + " " + $KW.skins.getPaddingSkin(f);
    var j = f.viewtype;
    var i = "";
    var d = $KW.Utils.getBaseHtml(f, a);
    var e = f.pf + "_" + f.id;
    if (f.imagewhiledownloading) {
      new Image().src = $KU.getImageURL(f.imagewhiledownloading)
    }
    f.imagewhiledownloading = f.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
    if (f.showArrows) {
      f.leftarrowimage = f.leftarrowimage || "prvarw.png";
      f.rightarrowimage = f.rightarrowimage || "nxtarw.png"
    }
    if (j == "slotview") {
      i = "<div " + d + "name='ImageStrip_SlotView' class='" + c + "' style='" + h + "'><div></div>";
      if (f.showarrows) {
        i += $KW.HStrip.generateSlotFooter(f, c)
      }
      i += "</div>"
    } else {
      if (j == "pageview") {
        i = "<div" + d + "name='touchcontainer_HStrip' class='" + c + " kstripcontainer' style='" + h + "'>";
        i += "<div id='imgs' class='kstrip' style='" + (!kony.appinit.useTransition ? "position:relative" : "") + "'>";
        i += "</div>";
        if (f.showarrows && f.leftarrowimage && f.rightarrowimage) {
          i += $KW.HStrip.fadeArrowImages(f)
        }
        i += "</div>";
        if (!f.ispageindicatorneeded == false) {
          i += "<div class='ktable kwt100' id='" + f.pf + "_" + f.id + "_footer'></div>"
        }
        if (f.viewtype == "pageview") {
          f.count = 0
        }
      } else {
        if (a.ispercent === false) {
          i += "<div class = '' style='table-layout:fixed; display: inline-block;'>"
        } else {
          i += "<div class = 'ktable kwt100' style='table-layout:fixed;'>"
        }
        i += "<div class = 'krow kwt100' >";
        var b = $KW.skins.getWidgetAlignmentSkin(f);
        i += "<div class = 'kcell kwt100 " + b + "' >";
        i += "<div" + d + "class='scrollerX " + c + "' name='ImageStrip_StripView' style='" + h + "'>";
        if (f.showarrows && f.leftarrowimage && f.rightarrowimage) {
          i += $KW.touch.fadeHImages(f)
        }
        i += "<div id='" + e + "_scroller' class='kwt100 scrollerX'><div id='" + e + "_scrollee' class='scrolleeX' " + (kony.appinit.isFirefox ? "style='overflow:hidden'" : "") + ">";
        i += this.generateImages("setdata", f, g, IndexJL);
        i += "</div></div></div>";
        i += "</div></div></div>";
        if (f.viewtype == "stripview") {
          f.count = 0
        }
      }
    }
    return i
  },
  initializePageViews: function(j, d) {
    var e = document.querySelectorAll("#" + j + " div[name='touchcontainer_HStrip']");
    for (var f = 0; f < e.length; f++) {
      var b = e[f];
      var c = b.children[0];
      var a = $KU.getElementID(b.id);
      var h = b.getAttribute("kformname");
      var g = $KU.getModelByNode(b);
      this.initializePageView(g, d, b)
    }
  },
  initializePageView: function(i, g, e) {
    var f = e.children[0];
    var d = $KU.getElementID(e.id);
    f.innerHTML = "";
    var k = i.masterdata || [];
    var j = (window.orientation == 90 || window.orientation == -90);
    var o = (window.orientation == 0 || window.orientation == 180);
    var n = i.swipeContext;
    if (typeof window.orientation == "undefined") {
      o = true
    }
    var h = e.parentNode.clientWidth;
    h = h - 20;
    var a = parseInt($KU.getStyle(e, "border-left-width").replace("px", ""), 10) + parseInt($KU.getStyle(e, "border-right-width").replace("px", ""), 10);
    h = h - a;
    var p = i.heightwidth ? parseInt(i.heightwidth.split(",")[1]) : i.referencewidth || 0;
    var c = i.recperpage = (p != 0) ? Math.floor(h / p) : 3;
    if (!c || isNaN(c)) {
      c = 3
    }
    if (!i.ptImgs && o) {
      i.ptImgs = c
    }
    if (!i.lsImgs && j) {
      i.lsImgs = c
    }
    var b = h % parseInt(p, 10);
    var m = Math.floor(b / c);
    if (m && !isNaN(m)) {
      i.spacebetweenimages = Math.floor(b / c)
    }
    f.innerHTML = this.generateImages("setdata", i, k, IndexJL);
    if (g) {
      this.updateCurrentPage(n, i, o)
    }
    var l = $KU.getElementById(i.pf + "_" + d + "_footer");
    l && (l.innerHTML = this.generateStripFooter(i, f, n))
  },
  updateCurrentPage: function(f, d, h) {
    if (f && d.masterdata && f.currentPage != 0) {
      var g = f.currentPage;
      if (h) {
        var a = (d.lsImgs * g) + 1;
        var c = d.ptImgs
      } else {
        var a = (d.ptImgs * g) + 1;
        var c = d.lsImgs
      }
      var b = 0;
      for (var e = IndexJL; e < (d.masterdata.length); e++) {
        if (e % c == 0) {
          b++
        }
        if (e == a) {
          f.currentPage = b;
          break
        }
      }
    }
  },
  getPadding: function(a) {
    return parseInt($KU.getStyle(a, "padding-left").replace(/px/, ""), 10) + parseInt($KU.getStyle(a, "padding-right").replace(/px/, ""), 10)
  },
  generateImages: function(n, d, q, g, t, k) {
    var c = "";
    var m = "";
    if (n == "setdata") {
      if (t) {
        m = t
      } else {
        if (d.key) {
          m = d.key
        } else {
          m = ""
        }
      }
    }
    var l = q.length;
    var j = d.viewtype;
    var f = d.recperpage;
    f = f && ((l > 0 && l < f) ? l : f) || 3;
    if (d.wType == "IGallery") {
      f = f * d.noofrowsperpage
    }
    var r = (IndexJL == 0) ? 1 : 0;
    for (var o = IndexJL; o < (q.length); o++) {
      for (var t in q[o]) {
        !m && (m = t);
        break
      }
      if (o - 1 == k) {
        m = t
      }
      var h = q[o][m];
      var s = q[o].accessibilityConfig;
      var b = $KU.getAccessibilityValues(d, s, o + 1);
      var p = "";
      if (h) {
        var a = true;
        if ($KU.inArray($KU.imgCache, h, true)) {
          a = false
        }
        if ((o - IndexJL) % f == 0 && j == "pageview") {
          c += "<div style='float: left;width:100%' kwidgettype='KTouchhstrip'>"
        }
        if (d.wType == "IGallery" && (o - IndexJL) % (f / d.noofrowsperpage) == 0 && j == "pageview") {
          c += "<div style='float: left;width:100%'>"
        }
        h = $KU.getImageURL(h);
        if (d.spacebetweenimages && f > 1 && o != q.length - 1) {
          p += "margin-right:" + d.spacebetweenimages + "px;"
        }
        c += "<span " + (a ? ("style='background:url(" + $KU.getImageURL(d.imagewhiledownloading) + ") center center no-repeat;display:inline-block;" + p + "'") : "style='" + p + "'") + ">";
        if (d.heightwidth || (d.referencewidth || d.referenceheight)) {
          var e = d.heightwidth ? d.heightwidth.split(",") : [d.referenceheight, d.referencewidth];
          p = (parseInt(e[1]) != 0 ? ("width:" + e[1] + "px;") : "") + (parseInt(e[0]) != 0 ? ("height:" + e[0] + "px;") : "")
        }
        c += "<img " + b + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + h + "' id='" + d.pf + "_" + d.id + "_img' kformname = '" + d.pf + "' index= " + g + " kwidgettype='" + d.wType + "'" + (d.context.tabpaneID ? " ktabpaneid='" + d.context.tabpaneID + "'" : "") + " onload='$KU.imgLoadHandler(arguments[0],this)' onerror='$KU.imgLoadHandler(arguments[0],this)'";
        c += (kony.appinit.isFirefox || kony.appinit.isIE) ? " ondragstart='return false;'" : "";
        if (a) {
          p += "opacity:0;"
        }
        c += (p ? ("style= '" + p + "'") : "") + " /></span>";
        if (d.wType == "IGallery" && ((o + r) % (f / d.noofrowsperpage) == 0 || o == l - 1) && j == "pageview") {
          c += "</div>"
        }
        if (((o + r) % f == 0 || o == l - 1) && j == "pageview") {
          c += "</div>"
        }
      }
      g++
    }
    return c
  },
  generateStripFooter: function(c, f, e) {
    var g = "";
    var a = f.childNodes.length;
    var b = e ? e.currentPage : 0;
    if (a > 1) {
      var h = "";
      g += "<div class='krow kwt100' align='center' ><div class='kcell' >";
      for (var d = 0; d < a; d++) {
        h = (d == b) ? (c.pageOnDotImage || "whitedot.gif") : (c.pageOffDotImage || "blackdot.gif");
        g += "<span onclick='$KW.touch.navigationDotsHandler(this)' index='" + (d + 1) + "'><img style='padding-left:4px' src='" + $KU.getImageURL(h) + "' /></span>"
      }
      g += "</div></div>"
    }
    return g
  },
  generateSlotFooter: function(b, a) {
    var f = "";
    var d = "";
    b.paginationconfig = {
      vdistance: "100",
      hdistance: "25",
      leftimageurl: "rotate-left-slotfooter.png",
      rightimageurl: "rotate-right-slotfooter.png"
    };
    b.paginationconfig.leftimageurl = b.leftarrowimage;
    b.paginationconfig.rightimageurl = b.rightarrowimage;
    var c = b.paginationconfig;
    if (b.heightwidth) {
      var e = b.heightwidth.split(",");
      d += (e[1] != "0" ? ("width:" + e[1] + "px;") : "") + (e[0] != "0" ? ("xheight:" + e[0] + "px;") : "")
    }
    f += "<div id='" + b.pf + "_" + b.id + "_slotfooter' class='ktable " + a + "' style='position:relative;top:" + (c.vdistance ? (-c.vdistance) + "px" : "-30px") + ";" + d + "'>							<div class='krow middlecenteralign kwt100'>								<div class='kcell kwt50 middleleftalign'>									<span class='kbasemargin kbasepadding' style='display: inline-block; width: 100%;position:relative;left: " + (c.hdistance ? c.hdistance + "px" : "0px") + ";'>										<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + $KU.getImageURL(c.leftimageurl ? c.leftimageurl : "rotate-left-slotfooter.png") + "'>									</span>								</div>								<div class='kcell kwt50 middlerightalign'>									<span class='kbasemargin kbasepadding' style='display: inline-block; width: 100%;position:relative;right: " + (c.hdistance ? c.hdistance + "px" : "0px") + ";'>										<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + $KU.getImageURL(c.rightimageurl ? c.rightimageurl : "rotate-right-slotfooter.png") + "'>									</span>								</div>							</div>						</div>";
    return f
  },
  setData: function(b, a, c) {
    if (a && $KU.isArray(a)) {
      this.modifyContent(b, a, "setdata", null, c)
    } else {
      var d = $KU.getNodeByModel(b);
      if (d) {
        $KU.toggleVisibilty(d, a, b)
      }
    }
  },
  addAll: function(b, a, c) {
    (a && $KU.isArray(a)) && this.modifyContent(b, a, "addall", null, c)
  },
  removeAll: function(a) {
    this.modifyContent(a, [], "removeall")
  },
  removeAt: function(b, a) {
    (!isNaN(a) && a >= IndexJL) && this.modifyContent(b, [], "removeat", a)
  },
  setDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "setdataat", b)
  },
  addDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "addat", b)
  },
  modifyContent: function(a, h, b, e, i) {
    if (a) {
      $KW.Utils.updateContent(a, "masterdata", h, b, e);
      a.canUpdateUI = false;
      a.data = IndexJL ? [null, a.masterdata, i] : [a.masterdata, i];
      a.canUpdateUI = true;
      i && (a.key = i);
      if (a.viewtype == "slotview") {
        this.initializeSlotView(a);
        return
      }
      var g = $KU.getNodeByModel(a);
      if (g) {
        var d = (a.viewtype == "stripview") ? g.childNodes[g.childNodes.length - 1].childNodes[0] : g.childNodes[g.childNodes.length - 1];
        switch (b) {
          case "setdata":
          case "setdataat":
          case "addall":
          case "removeat":
          case "addat":
            if (b == "addall" && i) {
              var c = this.getImgsLen(d)
            }
            d.innerHTML = this.generateImages(b, a, a.masterdata || [], IndexJL, i, c);
            break;
          case "removeall":
            d.innerHTML = "";
            break
        }
        a.masterdata && $KU.toggleVisibilty(g, a.masterdata, a);
        if (a.viewtype == "pageview") {
          $KW.touch.computeWidths(g, a);
          var f = $KU.getElementById(a.pf + "_" + a.id + "_footer");
          f && (f.innerHTML = this.generateStripFooter(a, d))
        } else {
          if (a.viewtype == "stripview") {
            this.refreshScroller(a, g)
          }
        }
      }
    }
  },
  getImgsLen: function(e) {
    var d = 0;
    var c = e.childNodes;
    for (var b = 0; b < c.length; b++) {
      var f = c[b].childNodes;
      for (var a = 0; a < f.length; a++) {
        d++
      }
    }
    return d
  },
  orientationHandler: function(b, a) {
    $KW.HStrip.initializePageViews(b, true);
    $KW.touch.orientationHandler(b, a, "HStrip")
  },
  eventHandler: function(a, f) {
    var d = f.id;
    d = (f.tagName == "IMG") ? d.split("_")[1] : $KU.getElementID(d);
    var c = $KU.getModelByNode($KU.getElementById(f.getAttribute("kformname") + "_" + d));
    var b = f.getAttribute("index");
    if (b && c) {
      c.canUpdateUI = false;
      c.focusedindex = c.selectedindex = b;
      c.canUpdateUI = true;
      c.focuseditem = c.selecteditem = c.masterdata[b];
      var e = $KU.returnEventReference(c.onclick || c.onselection);
      e && e.call(c, c);
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItem = c.selecteditem;
        c.selectedIndex = c.selectedindex
      }
    }
  },
  initializeStripViews: function(c) {
    var b = document.querySelectorAll("#" + c + " div[name='ImageStrip_StripView']");
    for (var a = 0; a < b.length; a++) {
      this.initializeStripView(b[a])
    }
  },
  initializeStripView: function(d) {
    var c = $KU.getModelByNode(d);
    var e = d.getAttribute("kformname");
    var a = $KU.getElementID(d.id);
    var b = {
      hScrollbar: c.showscrollbars != undefined ? c.showscrollbars : false,
      vScroll: false,
      formid: e,
      hScroll: true,
      scrollbox: true,
      HStrip: true,
      bounce: c.scrollbounce != undefined ? c.scrollbounce : true,
      showImages: c.showarrows && c.leftarrowimage && c.rightarrowimage,
      widgetID: a,
      widgetModel: c
    };
    c.scrollInstance = new $KW.touch.konyScroller(d.id + "_scroller", b);
    this.refreshScroller(c, d)
  },
  refreshScroller: function(b, c) {
    if (!c) {
      c = $KU.getNodeByModel(b)
    }
    if (c) {
      var a = b.showarrows && b.leftarrowimage && b.rightarrowimage ? c.children[1] : c.children[0];
      if (typeof a != "undefined" && a.children[0].scrollWidth) {
        a.children[0].style.width = a.children[0].scrollWidth + "px"
      }
      b.scrollInstance && b.scrollInstance.refresh()
    }
  },
  initializeSlotViews: function(d) {
    var c = document.querySelectorAll("#" + d + " div[name='ImageStrip_SlotView']");
    for (var a = 0; a < c.length; a++) {
      d = c[a].getAttribute("kformname");
      var b = $KU.getModelByNode(c[a]);
      this.initializeSlotView(b)
    }
  },
  initializeSlotView: function(d) {
    var j = d.masterdata;
    if (!j) {
      return
    }
    var h = "iurl";
    for (var k in j[1]) {
      h = k;
      break
    }
    var a = [];
    for (var e = IndexJL; e < j.length; e++) {
      a.push(j[e][h])
    }
    var g = d.pf + "_" + d.id;
    var f = $KU.getElementById(g);
    if (!f) {
      return
    }
    var b = $KG[g + "_slotviewInstance"];
    if (b) {
      b.destroy();
      if (f && f.children[0] && f.children[0].children[0]) {
        f.children[0].removeChild(f.children[0].children[0])
      }
    }
    if (f.children[0]) {
      var c = d.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
      f.children[0].innerHTML = "<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + $KU.getImageURL(c) + "' style='margin:auto;' />"
    }
    var b = new $KW.SlotView(g, a, {
      model: d
    });
    $KG[g + "_slotviewInstance"] = b
  },
  onBeforeScrollStartHandler: function() {
    return function(b) {
      var a = b.target || b.srcElement;
      while (a.nodeType != 1) {
        a = a.parentNode
      }
      if (a.tagName != "SELECT" && a.tagName != "INPUT" && a.tagName != "TEXTAREA") {
        kony.events.preventDefault(b)
      }
      kony.events.stopPropagation(b)
    }
  },
  fadeArrowImages: function(b) {
    var d = "display:none;";
    var a = $KU.getImageURL(b.leftarrowimage);
    var c = $KU.getImageURL(b.rightarrowimage);
    var e = b.pf + "_" + b.id;
    var f = "<div id='" + e + "_scrollFades' class='scroll_view'><div id='" + e + "_leftimg' class='scroll_fades leftfade' style='" + d + "'><img type='HImg' src='" + a + "' onclick='$KW.HStrip.previousImage(this)' onload='$KW.touch.setHeight(this)' ></div><div id='" + e + "_rightimg' class='scroll_fades rightfade' style='" + d + "'><img type='HImg' src='" + c + "' onclick='$KW.HStrip.nextImage(this)' onload='$KW.touch.setHeight(this)' ></div></div>";
    return f
  },
  previousImage: function(d) {
    var c = d.parentNode.parentNode.parentNode;
    if (c) {
      var a = $KU.getModelByNode(c);
      var b = a.swipeContext;
      $KW.touch.previousImage(c, b, false);
      $KW.touch.updatePageIndicator(c, b, a)
    }
  },
  nextImage: function(d) {
    var c = d.parentNode.parentNode.parentNode;
    if (c) {
      var a = $KU.getModelByNode(c);
      var b = a.swipeContext;
      $KW.touch.nextImage(c, b, false);
      $KW.touch.updatePageIndicator(c, b, a)
    }
  }
};
$KW.SlotView = function(a, c, b) {
  this.arguments = {};
  this.arguments.container = a;
  this.arguments.totalFrames = c.length;
  this.imagesArray = c;
  this.options = {
    imageIndexOffset: 1,
    loaders: 3,
    initialLoad: 4,
    noCache: false,
    initialPos: [0, 0],
    invert: [true, false],
    infiniteAxis: [true, false],
    autoPlay: false,
    fps: 25,
    grabbable: true,
    grabRotateDistance: 1000,
    throwable: true,
    minThrowDuration: 0.5,
    maxThrowDuration: 1.5,
    spinnable: true,
    minSpinDuration: 3,
    intro: $KW.SlotView.SpinIntro,
    introSpins: 0.5,
    introDuration: 1,
    mobileTotalFrames: null
  };
  for (i in b) {
    this.options[i] = b[i]
  }
  this.initialize()
};
$KW.SlotView.SpinIntro = function(k) {
  var e = k.options.fps * k.options.introDuration,
    d = (typeof k.options.introInitialRow != "undefined") ? k.options.introInitialRow : k.options.initialPos[1],
    j = d - k.options.initialPos[1],
    g = [];
  for (var f = 0; f < e; f++) {
    var h = f / e,
      c = Math.pow(h - 1, 4),
      b = Math.floor(c * k.totalFrames[0] * k.options.introSpins) + k.options.initialPos[0],
      a = Math.floor(c * j) + k.options.initialPos[1];
    if (!g.length || g[g.length - 1][0] != b || g[g.length - 1][1] != a) {
      g.push(k.validatePos([b, a], true))
    }
  }
  return g
};
$KW.SlotView.options = {};
$KW.SlotView.prototype.initialize = function() {
  function a(e, d) {
    return (typeof e[0] == "undefined") ? [e, d] : e
  }
  if (this.options.noCache) {
    this.random = Math.floor(Math.random() * 10000000)
  }
  this.mobile = $KU.isTouchSupported;
  if (this.mobile) {
    this.options.autoPlay = true;
    this.options.spinnable = false;
    this.options.throwable = true;
    this.mobileStrings = {
      mousedown: "touchstart",
      mousemove: "touchmove",
      mouseup: "touchend"
    }
  }
  this.container = document.getElementById(this.arguments.container);
  this.vr = document.getElementById(this.arguments.container).children[0];
  this.totalFrames = a(this.arguments.totalFrames, 1);
  if (this.mobile && this.options.mobileTotalFrames) {
    var c = this.totalFrames;
    this.totalFrames = a(this.options.mobileTotalFrames, 1);
    this.frameMultipliers = [c[0] / this.totalFrames[0], c[1] / this.totalFrames[1]]
  } else {
    this.frameMultipliers = [1, 1]
  }
  this.options.initialPos = a(this.options.initialPos, 0);
  this.options.invert = a(this.options.invert, false);
  this.frames = [];
  for (var b = 0; b < this.totalFrames[0]; b++) {
    this.frames[b] = []
  }
  this.playIntervalDuration = 1000 / this.options.fps;
  this.minSpinIntervalDuration = (this.options.minSpinDuration * 1000) / this.totalFrames[0];
  this.minThrowFrames = Math.floor(this.options.minThrowDuration * this.options.fps);
  this.maxThrowFrames = Math.floor(this.options.maxThrowDuration * this.options.fps);
  this.currentPos;
  this.playing = false;
  this.grabbing = false;
  this.spinning = false;
  if (this.options.intro) {
    this.introSequence = this.options.intro(this);
    this.loader = new $KW.SlotView.LoaderController(this, this.introSequence.slice(0), this.playIntro.bind(this))
  } else {
    this.loadAllFrames();
    this.gotoPos(this.options.initialPos);
    this.makeInteractive();
    if (this.options.autoPlay) {
      this.play()
    }
  }
};
$KW.SlotView.prototype.getStr = function(a) {
  return this.mobile ? this.mobileStrings[a] : a
};
$KW.SlotView.prototype.getEvent = function(a) {
  if (!a) {
    a = window.event
  }
  if (a.touches) {
    if (a.touches.length > 1) {
      return false
    }
    if (a.touches.length) {
      a.clientX = a.touches[0].clientX;
      a.clientY = a.touches[0].clientY
    }
  }
  return a
};
$KW.SlotView.prototype.playIntro = function() {
  this.introInterval = setInterval(this.gotoNextIntroFrame.bind(this), this.playIntervalDuration);
  this.loadAllFrames()
}, $KW.SlotView.prototype.gotoNextIntroFrame = function() {
  this.gotoPos(this.introSequence.shift());
  if (!this.introSequence.length) {
    clearInterval(this.introInterval);
    this.makeInteractive()
  }
};
$KW.SlotView.prototype.isPosLoaded = function(a) {
  return (typeof this.frames[a[0]] != "undefined" && typeof this.frames[a[0]][a[1]] != "undefined")
};
$KW.SlotView.prototype.createLoadPlan = function(c, b) {
  if (!b) {
    return [0]
  }
  var e = [];
  do {
    for (var a = 0; a < c; a += b) {
      var d = Math.floor(a);
      if (e.indexOf(d) == -1) {
        e.push(d)
      }
    }
    if (b == 1) {
      return e
    }
    if ((b /= 2) < 1) {
      b = 1
    }
  } while (true)
};
$KW.SlotView.prototype.loadAllFrames = function() {
  var b = [],
    f = Math.floor(this.totalFrames[0] / this.options.initialLoad),
    d = this.createLoadPlan(this.totalFrames[0], f),
    e = Math.floor(this.totalFrames[1] / this.options.initialLoad),
    c = this.createLoadPlan(this.totalFrames[1], e);
  for (var g = 0; g < c.length; g++) {
    for (var a = 0; a < d.length; a++) {
      b.push(this.validatePos([d[a] + this.options.initialPos[0], c[g] + this.options.initialPos[1]], true))
    }
  }
  this.loader = new $KW.SlotView.LoaderController(this, b);
  b = null;
  f = null;
  d = null;
  e = null;
  c = null
};
$KW.SlotView.prototype.getImageSource = function(d) {
  var a = this.options.invert[0] ? (this.totalFrames[0] - 1) - d[0] : d[0],
    c = this.options.invert[1] ? (this.totalFrames[1] - 1) - d[1] : d[1],
    b = (Math.floor(c * this.totalFrames[0] * this.frameMultipliers[0] * this.frameMultipliers[1]) + Math.floor(a * this.frameMultipliers[0]) + this.options.imageIndexOffset) + "";
  return $KU.getImageURL(this.imagesArray[b - 1]) + (this.options.noCache ? "?" + this.random : "")
};
$KW.SlotView.prototype.makeInteractive = function() {
  if (this.options.grabbable) {
    this.bindGrabStart = this.onGrabStart.bind(this);
    this.bindGrabChange = this.onGrabChange.bind(this);
    this.bindGrabEnd = this.onGrabEnd.bind(this);
    kony.events.addEventListener(this.vr.parentNode, this.getStr("mousedown"), this.bindGrabStart)
  }
};
$KW.SlotView.prototype.destroy = function() {
  this.unmakeInteractive();
  delete this.frames;
  delete this.introSequence;
  delete this.loader
};
$KW.SlotView.prototype.unmakeInteractive = function() {
  if (this.mobile) {
    if (this.vr && this.vr.children[0]) {
      kony.events.removeEventListener(this.vr.children[0], "touchmove", this.bindGrabChange);
      kony.events.removeEventListener(this.vr.children[0], "touchend", this.bindGrabEnd)
    }
  }
  if (this.options.grabbable) {
    if (this.vr && this.vr.parentNode) {
      kony.events.removeEventListener(this.vr.parentNode, this.getStr("mousedown"), this.bindGrabStart)
    }
  }
};
$KW.SlotView.prototype.atPosition = function(a) {
  return (this.currentPos && a[0] == this.currentPos[0] && a[1] == this.currentPos[1])
};
$KW.SlotView.prototype.play = function() {
  if (this.playing) {
    return
  }
  this.playing = true;
  this.playInterval = setInterval(this.gotoNextFrame.bind(this), this.playIntervalDuration)
};
$KW.SlotView.prototype.pause = function() {
  if (!this.playing) {
    return
  }
  this.playing = false;
  clearInterval(this.playInterval)
};
$KW.SlotView.prototype.gotoNextFrame = function() {
  this.gotoPos([this.currentPos[0] + 1, this.currentPos[1]])
};
$KW.SlotView.prototype.validatePos = function(c, b) {
  for (var a = 0; a < 2; a++) {
    if (b || this.options.infiniteAxis[a]) {
      while (c[a] > this.totalFrames[a] - 1) {
        c[a] -= this.totalFrames[a]
      }
      while (c[a] < 0) {
        c[a] += this.totalFrames[a]
      }
    } else {
      if (c[a] > this.totalFrames[a] - 1) {
        c[a] = this.totalFrames[a] - 1
      }
      if (c[a] < 0) {
        c[a] = 0
      }
    }
  }
  return c
};
$KW.SlotView.prototype.gotoPos = function(b, a) {
  b = this.validatePos(b);
  if (!a && this.atPosition(b)) {
    return
  }
  this.currentPos = b;
  this.frame = this.frames[b[0]][b[1]];
  if (typeof this.frame != "undefined" && this.frame.nodeType) {
    if (this.currentFrame) {
      this.vr.removeChild(this.currentFrame)
    } else {
      if (this.vr.children[0]) {
        this.vr.removeChild(this.vr.children[0])
      }
    }
    this.currentFrame = this.frame;
    this.vr.appendChild(this.currentFrame)
  } else {
    this.loader.loadNow(b)
  }
  delete this.frame
};
$KW.SlotView.prototype.onGrabStart = function(a) {
  if (!(a = this.getEvent(a))) {
    return
  }
  this.grabbing = true;
  kony.events.addEventListener(document, this.getStr("mousemove"), this.bindGrabChange);
  kony.events.addEventListener(document, this.getStr("mouseup"), this.bindGrabEnd);
  if (this.mobile) {
    kony.events.addEventListener(this.vr.children[0], "touchmove", this.bindGrabChange);
    kony.events.addEventListener(this.vr.children[0], "touchend", this.bindGrabEnd)
  }
  this.grabHistory = [a];
  this.onGrabChange.clientX = this.onGrabChange.clientY = null;
  this.grabHistoryInterval = setInterval(this.updateGrabHistory.bind(this), 10);
  this.onGrabStart.clientX = a.clientX;
  this.onGrabStart.clientY = a.clientY;
  this.onGrabStart.playing = this.playing;
  this.onGrabStart.pos = this.currentPos;
  this.pause();
  this.stopThrowing();
  kony.events.preventDefault(a)
};
$KW.SlotView.prototype.onGrabChange = function(a) {
  if (!(a = this.getEvent(a))) {
    return
  }
  if (!(a.clientX == this.onGrabStart.clientX && a.clientY == this.onGrabStart.clientY)) {
    this.onGrabChange.clientX = a.clientX;
    this.onGrabChange.clientY = a.clientY;
    var b = this.getGrabPos(a);
    if (b) {
      this.gotoPos(b)
    }
  }
  kony.events.preventDefault(a)
};
$KW.SlotView.prototype.getGrabPos = function(d) {
  if (!d) {
    d = window.event
  }
  var j = d.clientX - this.onGrabStart.clientX,
    h = d.clientY - this.onGrabStart.clientY,
    e = j / this.options.grabRotateDistance,
    b = h / this.options.grabRotateDistance,
    g = Math.round(this.totalFrames[0] * e),
    f = Math.round(this.totalFrames[1] * b),
    c = this.onGrabStart.pos[0] + g,
    a = this.onGrabStart.pos[1] + f;
  return [c, a]
};
$KW.SlotView.prototype.updateGrabHistory = function() {
  var a = this.onGrabChange.clientX ? this.onGrabChange : this.onGrabStart;
  this.grabHistory.unshift({
    clientX: a.clientX,
    clientY: a.clientY
  });
  if (this.grabHistory.length > 3) {
    this.grabHistory.splice(3)
  }
};
$KW.SlotView.prototype.onGrabEnd = function(a) {
  if (!(a = this.getEvent(a))) {
    return
  }
  this.grabbing = false;
  kony.events.removeEventListener(document, this.getStr("mousemove"), this.bindGrabChange);
  kony.events.removeEventListener(document, this.getStr("mouseup"), this.bindGrabEnd);
  clearInterval(this.grabHistoryInterval);
  if (this.onGrabStart.playing) {
    this.play()
  } else {
    if (this.options.throwable) {
      var m = a.clientX - this.grabHistory[this.grabHistory.length - 1].clientX,
        l = a.clientY - this.grabHistory[this.grabHistory.length - 1].clientY,
        f = true;
      if (m || l) {
        var j = Math.sqrt(Math.pow(m, 2) + Math.pow(l, 2)),
          h = Math.floor(j / 5),
          c = this.grabHistory[this.grabHistory.length - 1].clientX,
          b = this.grabHistory[this.grabHistory.length - 1].clientY,
          o = true,
          n = true;
        if (h < this.minThrowFrames) {
          h = this.minThrowFrames
        } else {
          if (h > this.maxThrowFrames) {
            h = this.maxThrowFrames
          }
        }
        this.throwSequence = [];
        for (var e = 0; e < h; e++) {
          var g = e / h,
            d = Math.pow(g - 1, 2),
            c = Math.floor(d * m) + c,
            b = Math.floor(d * l) + b,
            k = this.validatePos(this.getGrabPos({
              clientX: c,
              clientY: b
            }));
          if (!o) {
            k[0] = this.throwSequence[this.throwSequence.length - 1][0]
          } else {
            if (this.throwSequence.length && k[0] == this.throwSequence[this.throwSequence.length - 1][0]) {
              o = false
            }
          }
          if (!n) {
            k[1] = this.throwSequence[this.throwSequence.length - 1][1]
          } else {
            if (this.throwSequence.length && k[1] == this.throwSequence[this.throwSequence.length - 1][1]) {
              n = false
            }
          }
          if (!this.isPosLoaded(k)) {
            f = false;
            break
          }
          this.throwSequence.push(k)
        }
        if (f) {
          this.throwing = true;
          this.throwInterval = setInterval(this.throwStep.bind(this), this.playIntervalDuration)
        }
      }
    }
  }
};
$KW.SlotView.prototype.throwStep = function() {
  this.gotoPos(this.throwSequence.shift());
  if (!this.throwSequence.length) {
    this.stopThrowing()
  }
};
$KW.SlotView.prototype.stopThrowing = function() {
  if (!this.throwing) {
    return
  }
  this.throwing = false;
  clearInterval(this.throwInterval)
};
$KW.SlotView.prototype.onclick = function(a) {
  if (this.focussed) {
    return
  }
  this.vr.focus()
};
$KW.SlotView.LoaderController = function(b, a, d) {
  this.vr = b;
  this.queue = a;
  this.onLoad = d;
  this.retiredLoaders = new Array();
  for (var c = 0; c < this.vr.options.loaders; c++) {
    this.loadNext(new $KW.SlotView.Loader(this))
  }
};
$KW.SlotView.LoaderController.prototype.loadNext = function(a) {
  if (this.queue.length) {
    a.load(this.queue.shift())
  } else {
    this.retiredLoaders.push(a);
    if (this.retiredLoaders.length == this.vr.options.loaders && typeof this.onLoad == "function") {
      this.onLoad();
      this.onLoad = null
    }
  }
};
$KW.SlotView.LoaderController.prototype.loadNow = function(a) {
  if (this.retiredLoaders.length) {
    this.retiredLoaders.shift().load(a)
  } else {
    this.queue.unshift(a)
  }
};
$KW.SlotView.Loader = function(a) {
  this.controller = a;
  this.loadNext = this.controller.loadNext.bind(this.controller)
};
$KW.SlotView.Loader.prototype.load = function(d) {
  this.pos = d;
  if (this.controller.vr.isPosLoaded(d)) {
    this.controller.loadNext(this);
    return
  }
  this.img = new Image();
  this.img.onload = this.onLoad.bind(this);
  var a = this.controller.vr.options.model;
  var c = a.heightwidth;
  if ((c && c != "0,0") || (a.referencewidth || a.referenceheight)) {
    var b = c ? c.split(",") : [a.referenceheight, a.referencewidth];
    this.img.style.width = b[1] + "px";
    this.img.style.height = b[0] + "px"
  } else {
    this.img.style.width = "100%"
  }
  this.controller.vr.frames[this.pos[0]][this.pos[1]] = true;
  this.img.src = this.controller.vr.getImageSource(this.pos);
  delete this.img
};
$KW.SlotView.Loader.prototype.onLoad = function(a) {
  if (!a) {
    a = window.event
  }
  var b = a.target || a.srcElement || this.img;
  this.controller.vr.frames[this.pos[0]][this.pos[1]] = b;
  if (b && b.onload) {
    delete b.onload
  }
  $KU.setImgAspectRatio(this.controller.vr.options.model, b);
  if (this.controller.vr.atPosition(this.pos)) {
    this.controller.vr.gotoPos(this.pos, true)
  }
  this.loadNext(this)
};
$KW.IGallery = {
  initialize: function() {
    kony.events.addEvent("click", "IGallery", this.eventHandler)
  },
  updateView: function(f, c, b, a) {
    var e = $KU.getNodeByModel(f);
    switch (c) {
      case "data":
        if (b && $KU.isArray(b)) {
          f.masterdata = b[0 + IndexJL];
          f.key = b[1 + IndexJL]
        }
        this.setData(f, f.masterdata, f.key);
        break;
      case "focusedindex":
      case "selectedindex":
        if (e) {
          e = document.querySelector("#" + e.id + " [index='" + b + "']");
          e && $KW.Widget.setfocus(f, null, e);
          f.focuseditem = f.selectedItem = f.selecteditem = f.masterdata[b]
        }
        break;
      case "referencewidth":
      case "referenceheight":
      case "imagescalemode":
        this.setData(f, f.masterdata, f.key);
        break;
      case "viewtype":
      case "noofrowsperpage":
        if (e) {
          e.parentNode.innerHTML = this.render(f, {
            tabpaneID: e.getAttribute("ktabpaneid")
          });
          if (f.viewtype == "pageview") {
            e = $KU.getNodeByModel(f);
            $KW.HStrip.initializePageView(f, false, e);
            $KW.touch.computeWidths(e, f);
            var d = new $KW.touch.pageviewScroller(e, {
              widgetModel: f
            });
            $KG[e.id] = d
          }
        }
        break
    }
  },
  render: function(a, e) {
    if (a.data) {
      a.masterdata = a.data[0 + IndexJL];
      a.key = a.data[1 + IndexJL]
    }
    a.focusedindex = a.selectedindex = a.focusedindex || a.selectedindex || null;
    a.focuseditem = a.selecteditem = a.focuseditem || a.selecteditem || null;
    a.context = e;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a.selectedItem = a.selecteditem;
      a.selectedIndex = a.selectedindex
    }
    var c = $KW.skins.getMarginSkin(a, e) + $KW.skins.getPaddingSkin(a);
    var f = (!$KW.Utils.isWidgetVisible(a, e) ? " hide" : "") + (a.skin ? (" " + a.skin) : "");
    if (e.ispercent === false) {
      c += " display: inline-block;"
    } else {
      f += " " + $KW.skins.getMarAdjustedContainerWeightSkin(a, 100)
    }
    if (a.imagewhiledownloading) {
      new Image().src = $KU.getImageURL(a.imagewhiledownloading)
    }
    a.imagewhiledownloading = a.imagewhiledownloading || $KG.imagewhiledownloading || "imgload.gif";
    var d = $KW.Utils.getBaseHtml(a, e);
    var b = a.viewtype;
    var g = "";
    if (b == "pageview") {
      g = "<div" + d + "name='touchcontainer_HStrip' class='" + f + " kstripcontainer' style='" + c + "'>";
      g += "<div id='imgs' class='kstrip' style='" + (!kony.appinit.useTransition ? "position:relative" : "") + "'>";
      g += "</div></div>";
      if (!kony.appinit.useTransition) {
        g += "<div class='ktable kwt100' id='" + a.pf + "_" + a.id + "_footer'></div>"
      }
    } else {
      g = "<div" + d + "class='" + f + "' style='" + c + "'>";
      g += this.generateImages(a, a.masterdata || [], IndexJL);
      g += "</div>"
    }
    return g
  },
  generateImages: function(m, j, g, l) {
    var k = "";
    var h = l || m.key || "iurl";
    for (var e = IndexJL; e < (j.length); e++) {
      var c = j[e][h];
      if (c) {
        var f = true;
        if ($KU.inArray($KU.imgCache, c, true)) {
          f = false
        }
        var d = "";
        c = $KU.getImageURL(c);
        k += "<span " + (f ? ("style='background:url(" + $KU.getImageURL(m.imagewhiledownloading) + ") center center no-repeat;display:inline-block;min-height:30px;min-width:30px'") : "") + ">";
        k += "<img " + (kony.appinit.isOpera ? "draggable='false'" : "") + " src='" + c + "' id='" + m.pf + "_" + m.id + "_img' kformname = '" + m.pf + "' index= " + g + " kwidgettype='" + m.wType + "'" + (m.context.tabpaneID ? "ktabpaneid='" + m.context.tabpaneID + "'" : "") + " onload='$KU.imgLoadHandler(arguments[0],this)' onerror='$KU.imgLoadHandler(arguments[0],this)' ";
        if (m.spacebetweenimages) {
          var b = Math.ceil(parseInt(m.spacebetweenimages) / 4);
          d += "margin:" + b + "px;"
        }
        if (m.heightwidth || ((m.referencewidth || m.referenceheight) && m.imagescalemode == constants.IMAGE_SCALE_MODE_FIT_TO_DIMENSIONS)) {
          var a = m.heightwidth ? m.heightwidth.split(",") : [m.referenceheight, m.referencewidth];
          d += (parseInt(a[1]) != 0 ? ("width:" + a[1] + "px;") : "") + (parseInt(a[0]) != 0 ? ("height:" + a[0] + "px;") : "")
        }
        d += "opacity:0;" + ((kony.appinit.isIE7 || kony.appinit.isIE8) ? "" : "display:none;");
        k += (d ? ("style= '" + d + "'") : "") + " /></span>"
      }
      g++
    }
    return k
  },
  setData: function(b, a, d) {
    if (a && $KU.isArray(a)) {
      this.modifyContent(b, a, "setdata", null, d)
    } else {
      var c = $KU.getNodeByModel(b);
      if (c) {
        $KU.toggleVisibilty(c, a, b)
      }
    }
  },
  addAll: function(b, a, c) {
    (a && $KU.isArray(a)) && this.modifyContent(b, a, "addall", null, c)
  },
  removeAll: function(a) {
    this.modifyContent(a, [], "removeall")
  },
  addDataAt: function(a, b, c) {
    (!isNaN(c) && c >= IndexJL && b instanceof Object) && this.modifyContent(a, b, "addat", c, a.key)
  },
  removeAt: function(a, b) {
    (!isNaN(b) && b >= IndexJL) && this.modifyContent(a, [], "removeat", b)
  },
  setDataAt: function(a, b, c) {
    (!isNaN(c) && c >= IndexJL && b instanceof Object) && this.modifyContent(a, b, "setdataat", c, a.key)
  },
  modifyContent: function(b, a, g, e, f) {
    if (b) {
      $KW.Utils.updateContent(b, "masterdata", a, g, e);
      b.canUpdateUI = false;
      b.data = IndexJL ? [null, b.masterdata, f] : [b.masterdata, f];
      b.canUpdateUI = true;
      f && (b.key = f);
      var d = $KU.getNodeByModel(b);
      if (d) {
        switch (g) {
          case "addat":
          case "setdata":
            d.innerHTML = this.generateImages(b, b.masterdata, IndexJL, f);
            break;
          case "setdataat":
            var c = d.childNodes[IndexJL ? (e - 1) : e] && d.childNodes[IndexJL ? (e - 1) : e].childNodes[0];
            if (c) {
              c.src = $KU.getImageURL(a[b.key])
            }
            break;
          case "addall":
            var e = d.childNodes.length;
            d.innerHTML += this.generateImages(b, a, e + IndexJL, f);
            break;
          case "removeall":
            d.innerHTML = "";
            break;
          case "removeat":
            if (d.childNodes[e - IndexJL]) {
              d.removeChild(d.childNodes[e - IndexJL]);
              $KU.adjustNodeIndex(d, e, "index")
            }
            break;
          default:
        }
        b.masterdata && $KU.toggleVisibilty(d, b.masterdata, b)
      }
    }
  },
  eventHandler: function(a, f) {
    var d = f.id;
    d = (f.tagName == "IMG") ? d.split("_")[1] : $KU.getElementID(d);
    var c = $KU.getModelByNode($KU.getElementById(f.getAttribute("kformname") + "_" + d));
    var b = f.getAttribute("index");
    if (b && c) {
      c.canUpdateUI = false;
      c.focusedindex = c.selectedindex = b;
      c.canUpdateUI = true;
      c.focuseditem = c.selecteditem = c.masterdata[b];
      var e = $KU.returnEventReference(c.onclick || c.onselection);
      e && e.call(c, c)
    }
  }
};
$KW.Browser = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Browser", this.orientationHandler)
  },
  initializeView: function(a) {
    $KU.setScrollBoxesHeight(a, "Browser")
  },
  orientationHandler: function(b, a) {
    $KU.setScrollBoxesHeight(b, "Browser")
  },
  updateView: function(e, c, b, a) {
    switch (c) {
      case "requesturlconfig":
        if (IndexJL) {
          e.url = b.url;
          e.method = b.requestmethod;
          e.data = b.requestdata
        }
        var d = $KU.getNodeByModel(e);
        if (d) {
          this.openUrllink(e.url, e.method, e.data, [e.pf, e.id].join("_"))
        }
        break;
      case "htmlstring":
        var d = $KU.getNodeByModel(e);
        if (d) {
          d.innerHTML = b
        }
        break
    }
  },
  openUrllink: function(d, g, f, c) {
    if (d) {
      if (f && !f[0].length == 0) {
        var b = [];
        if (f instanceof Array && f[0] instanceof Array) {
          for (var e = 0; e < f.length; e++) {
            b.push([f[e][0], f[e][1]].join("="))
          }
        } else {
          for (var a in f) {
            b.push(a + "=" + f[a])
          }
        }
        b = b.join("&");
        if (b) {
          d = d + "?" + b
        }
      }
      return window.open(d, c)
    }
  },
  render: function(d, b) {
    var c = $KW.skins.getWidgetSkinList(d, b);
    $KU.updateScrollFlag(d);
    if (d.htmlstring) {
      var e = "";
      e += "<div " + $KW.Utils.getBaseHtml(d, b) + " style='" + $KW.skins.getPaddingSkin(d) + " " + $KW.skins.getBaseStyle(d, b) + "' class='" + c + "'>";
      e += d.htmlstring;
      e += "</div>";
      return e
    } else {
      var a = "webView" + d.id;
      $KG[a] = this.openUrllink(d.url, d.method, d.data, [d.pf, d.id].join("_"));
      return ""
    }
  },
  eventHandler: function(a, b) {},
  unloadEventHandler: function(a) {},
  cangoback: function(a) {},
  cangoforward: function(a) {},
  clearhistory: function(a) {},
  goback: function(a) {},
  goforward: function(a) {},
  reload: function(a) {}
};
$KW.DataGrid = {
  initialize: function() {
    kony.events.addEvent("click", "DataGrid", this.eventHandler)
  },
  initializeView: function(a) {
    this.updateTableHeight(a);
    this.resizeColumns(a);
    if (!kony.appinit.isIE7) {
      this.updateColumnWidth(a)
    }
  },
  updateView: function(d, k, c, e) {
    var g = $KU.getNodeByModel(d);
    if (g && d.enablescrollbar == 1 && d.dockingheader) {
      g = $KU.getElementById(d.pf + "_" + d.id + "_body").childNodes[0]
    }
    switch (k) {
      case "skin":
      case "alternateskin":
      case "rownormalskin":
      case "rowalternateskin":
        g && this.applyRowSkin(d, g);
        break;
      case "focusskin":
      case "rowfocusskin":
        break;
      case "headerskin":
        if (g) {
          var j = g.tHead && g.tHead.rows[0];
          if (j) {
            j.className = c
          }
        }
        break;
      case "gridlinecolor":
      case "gridlinestyle":
        this.applyCellBorder(d);
        break;
      case "showcolumnheaders":
        if (g) {
          var j = g.tHead && g.tHead.rows[0];
          if (j) {
            if (c) {
              j.style.display = ""
            } else {
              j.style.display = "none"
            }
          }
        }
        break;
      case "ismultiselect":
        if (!c && d.selectedindices) {
          d.selectedindices = d.selecteditems = null;
          if (kony.appinit.isIE7 || kony.appinit.isIE8) {
            d.selectedItems = d.selectedIndices = null
          }
          this.setSelectedItems(d, true)
        }
        break;
      case "data":
        $KU.isArray(c) && this.modifyContent(d, c, "setdata");
        break;
      case "columnheadersconfig":
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          if (c) {
            var b = c;
            var l = [];
            for (var f = 0; f < b.length; f++) {
              var a = {};
              a.columnid = b[f].columnid || b[f].columnID;
              a.columntype = b[f].columntype || b[f].columnType;
              a.columnheadertext = b[f].columnheadertext || b[f].columnHeaderText;
              a.columnheadertemplate = b[f].columnheadertemplate || b[f].columnHeaderTemplate;
              a.columndatatemplate = b[f].columndatatemplate || b[f].columnDataTemplate;
              a.columnwidthinpercentage = b[f].columnwidthinpercentage || b[f].columnWidthInPercentage;
              a.columncontentalignment = b[f].columncontentalignment || b[f].columnContentAlignment;
              a.columnonclick = b[f].columnonclick || b[f].columnOnClick;
              l.push(a)
            }
            d.columnheadersconfig = l
          }
        }
        if (g) {
          var h = $KW.DataGrid.render(d, d.context);
          g.parentNode.innerHTML = h
        }
        break
    }
  },
  render: function(c, b) {
    c.context = b;
    this.initializeGrid(c);
    var a = c.parent;
    if ($KU.isFlexContainer(a)) {
      c.layoutConfig.self = true
    }
    return this.create(c, b)
  },
  initializeGrid: function(a) {
    if (!a.columnheadersconfig) {
      return
    }
    a.rowcount = (a.data && a.data.length - IndexJL) || 0;
    a.gridlinestyle = a.gridlinestyle || "solid";
    a.gridlinecolor = a.gridlinecolor || "666666";
    a.focusedindex = a.selectedindex = a.focusedindex || a.selectedindex || null;
    a.focuseditem = a.selecteditem = a.focuseditem || a.selecteditem || null;
    a.selectedindices = a.selectedindices || null;
    a.selecteditems = a.selecteditems || null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a.selectedItems = a.selecteditems;
      a.selectedIndices = a.selectedindices;
      a.selectedItem = a.selecteditem;
      a.selectedIndex = a.selectedindex
    }
    if (a.ismultiselect && a.selectedindices && !a.selecteditems) {
      this.setSelectedItems(a)
    }
    a.cellBorder = "thin " + a.gridlinestyle + " #" + a.gridlinecolor.substr(0, 6)
  },
  create: function(k, a) {
    var j = k.data || (IndexJL ? [null] : []);
    var d = $KW.skins.getWidgetSkinList(k, k.context, j);
    var c = $KW.skins.getMarginSkin(k, a);
    var i = "";
    var b = d.split(" ");
    if (a.isPercent == true) {
      b[1] = ""
    }
    d = b.join(" ");
    if ((k.enablescrollbar == 1 && !k.dockingheader) || $KU.isFlexWidget(k)) {
      i += "<div class='" + d + "' style='overflow-y: auto; overflow-x: hidden;border-collapse:collapse;" + c + "'>";
      i += "<table style='width:100%;border-collapse:collapse;table-layout:fixed;'  " + $KW.Utils.getBaseHtml(k, k.context) + ">"
    } else {
      var h = "border-collapse:collapse;table-layout:fixed;";
      if (a.ispercent == false) {
        h += " display: inline-block;"
      }
      i += "<table style='" + h + c + "' class='" + d + "' " + $KW.Utils.getBaseHtml(k, k.context) + ">"
    }
    var g = k.columnheadersconfig;
    if (g) {
      var e = this.headerBuilder(g, k);
      i += this.appendRowTag(k, e, true);
      var f = this.createBody(k, j);
      i += this.appendRowTag(k, f || [], false, 1, true, true)
    }
    i += "</table>";
    if ((k.enablescrollbar == 1 && !k.dockingheader) || $KU.isFlexWidget(k)) {
      i += "</div>"
    }
    return i
  },
  headerBuilder: function(g, p) {
    p.columnids = [];
    p.columntype = [];
    for (var e = IndexJL; e < g.length; e++) {
      p.columnids.push(g[e].columnid);
      p.columntype.push(g[e].columntype)
    }
    var l = $KW.skins.getBaseStyle(p);
    var d = "word-wrap:break-word;border:" + p.cellBorder + " ; font-weight:inherit;";
    var k = "<th id='{id}' style='overflow:hidden;" + l + d + "' width='{width}%' class='{class}' type='{type}' colno='{colno}' colindex='{colindex}'>";
    var n = null;
    var b = "";
    var j = [];
    var o = "";
    for (var e = IndexJL; e < g.length; e++) {
      o = g[e];
      var a = (o.columnwidthinpercentage || 0);
      var h = o.columncontentalignment || "";
      h = $KW.skins.getContentAlignment(p, h);
      n = k.replace(/\{id\}/g, o.columnid);
      n = n.replace(/\{width\}/g, a);
      n = n.replace(/\{class\}/g, h);
      n = n.replace(/\{type\}/g, o.columntype);
      n = n.replace(/\{colno\}/g, e);
      n = n.replace(/\{colindex}/g, "0," + e);
      var f = o.columnheadertemplate;
      if (f) {
        n = n.replace(/\{colindex}/g, e);
        var m = f.template;
        var c = f.data;
        p.widgetsData = c;
        if (m) {
          p.counter = 0;
          n += $KW.Utils.handleLayout(p, m, c)
        }
        p.widgetsData = "";
        b = n + "</th>"
      } else {
        b = n + ($KU.escapeHTMLSpecialEntities(o.columnheadertext) || "") + "</th>"
      }
      j.push(b)
    }
    return j
  },
  createBody: function(f, b) {
    var d;
    var l = $KW.skins.getBaseStyle(f);
    if (b.length > IndexJL) {
      var q = "word-wrap:break-word;border:" + f.cellBorder;
      var g = "<td id='{id}' width='{width}%' style='overflow:hidden;" + l + q + "' class='{class}' colindex='{colindex}' >{text}</td>";
      var e = "<td id='{id}' width='{width}%' style='overflow:hidden;" + l + q + "' class='{class}' colindex='{colindex}'><img src={src} class='{class}' onload='$KW.DataGrid.imgLoadHandler(arguments[0],this)'></td>";
      var w = null;
      var z = [];
      var x = 0;
      var n, h = "";
      var a = 1;
      f.counter = 1;
      x = f.columnids.length;
      for (var v = IndexJL; v < b.length; v++) {
        z[v - IndexJL] = [];
        for (var t = 0; t < x; t++) {
          n = f.columnids[t];
          h = f.columnheadersconfig[t + IndexJL];
          var c = f.columntype[t];
          var p = (h.columnwidthinpercentage || 0);
          var r = "";
          a = 1;
          var o = v + "," + t;
          if (b[v]["metainfo"]) {
            r = b[v]["metainfo"][n + "_skin"];
            r = r || ""
          }
          var s = h.columncontentalignment || "";
          s = $KW.skins.getContentAlignment(f, s);
          c = c || "text";
          if (c == "text") {
            var k = (b[v][n] && b[v][n] != null) ? b[v][n] : "";
            k = k.replace(/\$0/g, "$$$$0");
            k = k.replace(/\$_/g, "$$$$_");
            w = g.replace(/\{text\}/g, $KU.escapeHTMLSpecialEntities(k));
            w = w.replace(/\{class\}/g, (r + " " + s + " " + l))
          } else {
            if (c == "image") {
              var u = b[v][n] && $KU.getImageURL(b[v][n]);
              w = e.replace(/\{src\}/g, u || "''");
              w = w.replace(/\{class\}/g, s + " " + l)
            } else {
              if (c == "template") {
                var m = b[v][n];
                if (m.metainfo) {
                  if (m.metainfo["colspan"]) {
                    a = m.metainfo["colspan"]
                  }
                }
                w = "<td id='{id}' width='{width}%' style='overflow:hidden;" + l + q + "' class='{class}' colindex='{colindex}' colspan='" + a + "'>";
                w = w.replace(/\{class\}/g, (r + " " + s + " " + l));
                var y = m.template || h.columndatatemplate;
                if (y && m) {
                  f.widgetsData = m;
                  w += $KW.Utils.handleLayout(f, y, m)
                }
                w += "</td>"
              }
            }
          }
          w = w.replace(/\{colindex\}/g, o);
          w = w.replace(/\{width\}/g, p);
          w = w.replace(/\{id}/g, n);
          z[v - IndexJL][t] = w;
          t = t + (a - 1)
        }
        f.counter++
      }
    }
    return z
  },
  appendRowTag: function(n, l, k, g, b, o) {
    var e = "";
    if (k == true) {
      e += "<thead><tr index=0 " + $KW.Utils.getBaseHtml(n, n.context) + (n.headerskin ? " class='" + n.headerskin + "'" : "") + (n.showcolumnheaders != "undefined" && n.showcolumnheaders == false ? " style='display:none'" : "") + ">";
      if (n.enablescrollbar == 1 && n.dockingheader) {
        e += "<td colspan='" + n.columnheadersconfig.length + "'><div><table id='" + n.pf + "_" + n.id + "_head' width='100%' style='border-collapse:collapse;table-layout: fixed;'  ><tr >"
      }
      for (var d = 0; d < l.length; d++) {
        e += l[d]
      }
      if (n.enablescrollbar == 1 && n.dockingheader) {
        e += "</tr></table></div></td>"
      }
      e += "</tr></thead>"
    } else {
      var f = n.rowalternateskin || n.alternateskin || "";
      var a = n.rownormalskin || n.skin || "";
      if (n.enablescrollbar == 1 && n.dockingheader && b) {
        e += "<tr><td colspan='" + n.columnheadersconfig.length + "'><div style='width:100%;overflow-y: auto; overflow-x: hidden;border-collapse:collapse;' id='" + n.pf + "_" + n.id + "_body' name='scrollablewidget_" + n.wType + "'><table style='border-collapse:collapse;width:100%' " + $KW.Utils.getBaseHtml(n, n.context) + " >"
      }
      if (o) {
        e += "<tbody>"
      }
      if (l) {
        for (var d = 0; d < l.length; d++) {
          var h = n.data[d + IndexJL].metainfo;
          var m = (h && h.skin) || ((d % 2 != 0 && f) ? f : a);
          if (n.ismultiselect && n.selectedindices) {
            if ($KU.inArray(n.selectedindices, (IndexJL ? g : g - 1))[0] && n.rowfocusskin) {
              m = n.rowfocusskin
            }
          }
          e += "<tr index=" + g + $KW.Utils.getBaseHtml(n, n.context) + (m ? " class='" + m + "'" : "") + ">";
          for (var c = 0; c < n.columnids.length; c++) {
            e += l[d][c]
          }
          e += "</tr>";
          g++
        }
      }
      if (o) {
        e += "</tbody>"
      }
      if (n.enablescrollbar == 1 && n.dockingheader && b) {
        e += "</table></div></td></tr>"
      }
    }
    return e
  },
  imgLoadHandler: function(g, e) {
    g = g || window.event;
    if (!kony.appinit.isIE7 && !kony.appinit.isIE8) {
      e = g.target || g.srcElement
    }
    var d = e.naturalWidth || e.width;
    var c = e.naturalHeight || e.height;
    var b = e.parentNode;
    var h = parseInt($KU.getStyle(b, "padding-left").replace("px", ""), 10) + parseInt($KU.getStyle(b, "padding-right").replace("px", ""), 10);
    var f = b.clientWidth - h;
    if (d > f) {
      e.style.width = f + "px";
      var a = d / c;
      e.style.height = Math.round(1 / a * f) + "px"
    }
  },
  eventHandler: function(d, e) {
    if (!d) {
      d = window.event
    }
    var a = $KU.getParentByAttribute(d.target || d.srcElement, "colindex");
    var b = parseInt(e.getAttribute("index"), 10);
    var c = $KU.getModelByNode(e);
    (b > 0) && $KW.DataGrid.setFocusedIndex(c, e, a, b);
    $KW.DataGrid.rowClickHandler(c, b, a)
  },
  rowClickHandler: function(d, b, a) {
    var c;
    if (b == 0) {
      var e = d.columnheadersconfig[parseInt(a.getAttribute("colno"), 10)];
      c = $KU.returnEventReference(e.columnonclick || e.columnOnClick || "")
    } else {
      c = $KU.returnEventReference(d.onrowselected)
    }
    c && c(d)
  },
  updateData: function(d, a, k, m, b) {
    if (k && m) {
      var g = parseInt(m.getAttribute("index"));
      var h, l;
      if (g == "0") {
        h = $KU.getParentByAttribute(a, "colindex");
        var j = k.columnheadersconfig[h.cellIndex + IndexJL];
        var e = j.columnheadertemplate;
        if (e) {
          l = e.data
        } else {
          l = j.columnheadertext
        }
        var i = parseInt(h.getAttribute("colindex").split(",")[1]);
        k.selectedcellindex = [i, h.id];
        k.selectedcellitem = l
      } else {
        var c = $KU.getParentByAttribute(a, "colindex");
        this.setFocusedIndex(k, m, c, g);
        l = k.focuseditem[c.id]
      }
      l && $KW.Utils.updateContainerMasterData(k, l, d, a);
      if (b) {
        var f = kony.events.executeBoxEvent(d, l, k, "", g);
        if (!f) {
          this.rowClickHandler(k, g, h)
        }
      }
    }
  },
  setFocusedIndex: function(c, e, b, a) {
    if (a > 0) {
      a = IndexJL ? a : a - 1;
      c.selectedindex = c.focusedindex = a;
      c.selecteditem = c.focuseditem = c.data[a];
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItem = c.selecteditem;
        c.selectedIndex = c.selectedindex
      }
      if (!c.ismultiselect) {
        c.selectedindices = IndexJL ? [null, a] : [a];
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          c.selectedIndices = c.selectedindices
        }
        this.setSelectedItems(c, true)
      }
      var d = parseInt(b.getAttribute("colindex").split(",")[1]);
      c.selectedcellindex = [d, b.id];
      c.selectedcellitem = c.focuseditem[b.id]
    }
    c.ismultiselect && this.setSelectedIndices(c, e)
  },
  setSelectedIndices: function(d, g) {
    if (d.ismultiselect) {
      var f = d.selectedindices || (IndexJL ? [null] : []);
      var b = d.selecteditems || (IndexJL ? [null] : []);
      var c = d.focusedindex;
      var a = $KU.inArray(f, c);
      if (a[0]) {
        f.splice(a[1], 1);
        b.splice(a[1], 1);
        if (d.rowfocusskin) {
          var e = this.getRowSkin(d, c);
          g.className = e || ""
        }
      } else {
        f.push(c);
        b.push(d.data[c]);
        d.rowfocusskin && (g.className = d.rowfocusskin)
      }
      d.selectedindices = (f.length > IndexJL) ? f : null;
      d.selecteditems = (b.length > IndexJL) ? b : null;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        d.selectedItems = d.selecteditems;
        d.selectedIndices = d.selectedindices
      }
    }
  },
  setSelectedItems: function(c, f) {
    if (c.selectedindices) {
      c.selecteditems = IndexJL ? [null] : [];
      for (var b = IndexJL; b < c.selectedindices.length; b++) {
        c.data && c.data[c.selectedindices[b]] && c.selecteditems.push(c.data[c.selectedindices[b]])
      }
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        c.selectedItems = c.selecteditems
      }
    }
    if (f) {
      var a = $KU.getNodeByModel(c);
      if (a) {
        var d = a.tBodies[0].rows;
        for (var b = 0; b < d.length; b++) {
          if ((c.selectedindices && $KU.inArray(c.selectedindices, b + IndexJL)[0]) || (!c.ismultiselect && c.selectedindex == b + IndexJL)) {
            d[b].className = c.rowfocusskin
          } else {
            var e = this.getRowSkin(c, b + IndexJL);
            d[b].className = e || ""
          }
        }
      }
    }
  },
  getRowSkin: function(c, b) {
    var e = c.rownormalskin || c.skin || "";
    var d = c.rowalternateskin || c.alternateskin || "";
    var a = c.data[b]["metainfo"];
    return (a && a.skin) ? a.skin : (((parseInt(b, 10) - IndexJL) % 2 != 0 && d) ? d : e)
  },
  updateIndices: function(d, e, b) {
    if (d.data && d.data.length > IndexJL) {
      var f = d.selectedindices;
      if (e == "addat") {
        for (var c = IndexJL; c < f.length; c++) {
          if (f[c] >= b) {
            f[c] = f[c] + 1
          }
        }
      } else {
        var a = $KU.inArray(f, b);
        a[0] && f.splice(a[1], 1);
        for (var c = IndexJL; c < f.length; c++) {
          if (f[c] >= b) {
            f[c] = f[c] - 1
          }
        }
      }
      d.selectedindices = f.length > IndexJL ? f : null;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        d.selectedIndices = d.selectedindices
      }
      this.setSelectedItems(d)
    } else {
      d.selectedindices = d.selecteditems = null;
      if (kony.appinit.isIE7 || kony.appinit.isIE8) {
        d.selectedItems = d.selectedIndices = null
      }
    }
  },
  updateColumnWidth: function(f) {
    var e = document.querySelectorAll("#" + f + " div[name='scrollablewidget_DataGrid']");
    for (var a = 0; a < e.length; a++) {
      var b = e[a];
      var h = b.getAttribute("id");
      h = h.split("_")[1];
      var d = $KU.getModelByNode(b.childNodes[0]);
      if (d.enablescrollbar == 1 && d.dockingheader && b.clientWidth) {
        var g = document.getElementById(d.pf + "_" + d.id + "_head");
        var c = b.offsetWidth - b.clientWidth;
        g.style.width = g.parentNode.offsetWidth - c + "px"
      }
    }
  },
  updateTableHeight: function(f) {
    var e = document.querySelectorAll("#" + f + " table[kwidgettype='DataGrid']");
    var a;
    for (var c = 0; c < e.length; c++) {
      var b = e[c];
      var d = $KU.getModelByNode(b);
      if (d.enablescrollbar == 1 && (d.containerheightinpixel || d.containerheight)) {
        if (d.containerheightinpixel) {
          a = d.containerheightinpixel
        } else {
          if (d.containerheight) {
            a = Math.round((b.offsetWidth * d.containerheight) / 100)
          }
        }
        if (d.dockingheader) {
          $KU.getElementById(b.id + "_body").style.maxHeight = a + "px"
        } else {
          b.parentNode.style.maxHeight = a + "px"
        }
      }
    }
  },
  setData: function(b, a) {
    b.focusedindex = b.focuseditem = b.selectedindex = b.selecteditem = b.selectedindices = b.selecteditems = null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      b.selectedItems = b.selectedIndices = b.selectedItem = b.selectedIndex = null
    }
    $KU.isArray(a) && this.modifyContent(b, a, "setdata")
  },
  addAll: function(c, a, b) {
    $KU.isArray(a) && this.modifyContent(c, a, "addall")
  },
  removeAll: function(a) {
    a.focusedindex = a.focuseditem = a.selectedindex = a.selecteditem = a.selectedindices = a.selecteditems = null;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      a.selectedItems = a.selectedIndices = a.selectedItem = a.selectedIndex = null
    }
    this.modifyContent(a, IndexJL ? [null] : [], "removeall")
  },
  removeAt: function(b, a) {
    (!isNaN(a) && a >= IndexJL) && this.modifyContent(b, [], "removeat", a)
  },
  setDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "setdataat", b)
  },
  addDataAt: function(c, a, b) {
    (!isNaN(b) && b >= IndexJL && a instanceof Object) && this.modifyContent(c, a, "addat", b)
  },
  setCellData: function(a, d, b, c) {
    (!isNaN(d) && c) && this.modifyContent(a, c, "setcelldata", d, b)
  },
  setHeaderCellDataAt: function(a, b, c) {
    (b && c) && this.modifyContent(a, c, "setheadercelldata", "", b)
  },
  applyCellSkin: function(b, d, c, a) {
    !isNaN(d) && this.modifyContent(b, a, "applycellskin", d, c)
  },
  selectAll: function(b, a) {
    this.modifyContent(b, a, "selectall")
  },
  setTBodyInnerHTML: function(a, c, d) {
    if (!$KU.isIE) {
      a.innerHTML = c
    } else {
      var b = this.createTemp();
      if (d == "setdata") {
        b.innerHTML = "<table>" + c + "</table>";
        while (a.children.length > 0) {
          a.removeChild(a.children[0])
        }
        while (b.firstChild.children.length > 0) {
          a.appendChild(b.firstChild.children[0])
        }
      } else {
        b.innerHTML = "<table><tbody>" + c + "</tbody></table>";
        if (a.tagName == "TABLE") {
          a.appendChild(b.firstChild.firstChild)
        } else {
          a.parentNode.replaceChild(b.firstChild.firstChild, a)
        }
      }
    }
  },
  setTRInnerHTML: function(d, c, b) {
    if (!$KU.isIE) {
      d.innerHTML = c
    } else {
      var a = this.createTemp();
      a.innerHTML = "<table><tbody><tr class='" + d.className + "' index='" + b + "'>" + c + "</tr></tbody></table>";
      d.parentNode.replaceChild(a.firstChild.firstChild.firstChild, d)
    }
  },
  createTemp: function() {
    var a = document.getElementById("__temp");
    if (!a) {
      a = document.createElement("div");
      a.id = "__temp"
    }
    return a
  },
  modifyContent: function(h, B, w, f, t) {
    if (h) {
      if (w != "setcelldata" && w != "applycellskin" && w != "selectall") {
        h.canUpdateUI = false;
        $KW.Utils.updateContent(h, "data", B, w, f);
        h.canUpdateUI = true
      }
      if (h.data) {
        h.rowcount = h.data.length - IndexJL
      }
      var g = $KU.getNodeByModel(h);
      if (h.enablescrollbar == 1 && h.dockingheader) {
        g = $KU.getElementById(h.pf + "_" + h.id + "_body").childNodes[0]
      }
      var q = g && (g.tBodies[0] || g);
      if (q) {
        var k;
        switch (w) {
          case "setdata":
            var y = this.headerBuilder(h.columnheadersconfig, h);
            var e = this.appendRowTag(h, y, true);
            var o = this.createBody(h, B);
            e += this.appendRowTag(h, o, false, 1, false, true);
            this.setTBodyInnerHTML(g, e, "setdata");
            break;
          case "setdataat":
            var B = IndexJL ? [null, B] : [B];
            var u = q.rows[f - IndexJL];
            if (u) {
              var e = this.createBody(h, B)[0].join("")
            }
            this.setTRInnerHTML(u, e, f);
            break;
          case "addall":
            var f = q.rows.length;
            var o = this.createBody(h, B);
            var e = q.innerHTML + this.appendRowTag(h, o, false, f + 1, false, false);
            this.setTBodyInnerHTML(q, e);
            if (h.enablescrollbar == 1 && h.dockingheader) {
              $KU.isIE && (q = $KU.getElementById(h.pf + "_" + h.id + "_body").childNodes[0]);
              var p = q.rows[f];
              p && p.scrollIntoView(true)
            }
            break;
          case "addat":
            var r = (f <= IndexJL) ? 0 : (f > h.rowcount ? h.rowcount : f);
            var c = document.createElement("div");
            var B = IndexJL ? [null, B] : [B];
            c.innerHTML = "<table><tr index=" + r + $KW.Utils.getBaseHtml(h, {
                tabpaneID: g.getAttribute("ktabpaneid")
              }) + "></tr></table>";
            var e = this.createBody(h, B)[0].join("");
            var a = c.firstChild.rows[0];
            if (f >= q.rows.length) {
              q.appendChild(a)
            } else {
              q.insertBefore(a, q.rows[f - IndexJL])
            }
            this.setTRInnerHTML(a, e, f);
            break;
          case "setcelldata":
          case "applycellskin":
          case "setheadercelldata":
            var n = $KU.inArray(h.columnids, t);
            if (n[0]) {
              var A;
              var j;
              k = n[1];
              var z = "";
              var v;
              var m = h.columnheadersconfig[k];
              if (w == "setheadercelldata") {
                if (h.showColumnHeaders) {
                  f = 0;
                  var l = m.columnheadertemplate;
                  if (l && l.template) {
                    z = l.template;
                    l.data = B
                  }
                  A = q.parentNode.tHead.rows[0]
                }
              } else {
                j = h.data[f];
                if (j) {
                  if (w == "setcelldata") {
                    var d = m.columndatatemplate;
                    d && (z = d);
                    j[t] = B;
                    A = q.rows[f - IndexJL]
                  } else {
                    var s = j.metainfo || {};
                    v = s[t + "_skin"];
                    s[t + "_skin"] = B;
                    j.metainfo = s;
                    A = q.rows[f - IndexJL]
                  }
                }
              }
              if (A) {
                if (w == "applycellskin") {
                  if (v) {
                    $KU.removeClassName(A.cells[k], v)
                  }
                  $KU.addClassName(A.cells[k], B)
                } else {
                  if (z) {
                    h.widgetsData = B;
                    A.cells[k].innerHTML = $KW.Utils.handleLayout(h, z, B)
                  } else {
                    A.cells[k].innerHTML = B
                  }
                }
              }
            }
            break;
          case "removeall":
            this.setTBodyInnerHTML(q, "");
            break;
          case "removeat":
            q.rows[f - IndexJL] && q.removeChild(q.rows[f - IndexJL]);
            break;
          case "selectall":
            if (h.ismultiselect && h.data && B) {
              var b = IndexJL ? [null] : [];
              for (var x = IndexJL; x < h.data.length; x++) {
                b.push(x)
              }
              h.selectedindices = b
            }
            if (!B) {
              h.selectedindices = h.selecteditems = null
            }
            if (kony.appinit.isIE7 || kony.appinit.isIE8) {
              h.selectedItems = h.selecteditems;
              h.selectedIndices = h.selectedindices
            }
            this.setSelectedItems(h, true);
            break;
          default:
        }
        this.adjustNodeIndex(q);
        if (w == "addat" || w == "removeat") {
          h.ismultiselect && h.selectedindices && this.updateIndices(h, w, f)
        }
        this.toggleVisibilty(h, h.data);
        if (w == "addat" || w == "removeat" || w == "addall") {
          this.applyRowSkin(h)
        }
        this.adjustFlexContainers(h, w, f, k)
      }
      if (!kony.appinit.isIE7) {
        this.updateColumnWidth(h.pf)
      }
    }
  },
  adjustNodeIndex: function(c) {
    var d = c.childNodes;
    if (d) {
      for (var b = 0; b < d.length; b++) {
        d[b].setAttribute("index", b + 1);
        cells = d[b].cells;
        for (var a = 0; cells && a < cells.length; a++) {
          cells[a].setAttribute("colindex", b + "," + a)
        }
      }
    }
  },
  addArray: function(c, b) {
    for (var a = 0; a < b.length; a++) {
      c.push(b[a])
    }
    return c
  },
  toggleVisibilty: function(a, d) {
    var c = $KU.getNodeByModel(a);
    var b = $KU.isFlexWidget(a);
    if (b) {
      c = c.parentNode
    }
    if (d && d.length > 0 && a.isvisible) {
      c.style.display = "";
      $KU.removeClassName(c, "hide")
    } else {
      c.style.display = "none"
    }
  },
  applyRowSkin: function(d) {
    var c = $KU.getNodeByModel(d);
    var f = c.tBodies[0].rows;
    var h = d.rownormalskin || d.skin || "";
    var e = d.rowalternateskin || d.alternateskin || "";
    if (h || e) {
      for (var b = 0; b < f.length; b++) {
        var a = d.data[b + IndexJL]["metainfo"];
        var g = (a && a.skin) ? a.skin : ((b % 2 != 0 && e) ? e : h);
        if (d.ismultiselect && d.rowfocusskin && d.selectedindices && $KU.inArray(d.selectedindices, b + IndexJL)[0]) {
          f[b].className = d.rowfocusskin
        } else {
          f[b].className = g
        }
      }
    }
  },
  applyCellBorder: function(c) {
    var a = $KU.getNodeByModel(c);
    c.cellBorder = "thin " + c.gridlinestyle + " #" + c.gridlinecolor.substr(0, 6);
    if (a) {
      var b = function(f) {
        for (var e = 0; e < f.length; e++) {
          var g = f[e];
          for (var d = 0; d < g.cells.length; d++) {
            g.cells[d].style.border = c.cellBorder
          }
        }
      };
      b(a.tHead && a.tHead.rows);
      if (c.enablescrollbar == 1 && c.dockingheader) {
        a = $KU.getElementById(c.pf + "_" + c.id + "_body").childNodes[0]
      }
      b(a.tBodies[0].rows)
    }
  },
  resizeColumns: function(e) {
    var d = document.querySelectorAll("#" + e + " table[kwidgettype='DataGrid']");
    for (var b = 0; b < d.length; b++) {
      var a = d[b];
      var c = $KU.getModelByNode(a);
      if (c.allowcolumnresize) {
        c.crInstance = new $KW.DataGrid.ColumnResize(a, c);
        c.crInstance.init()
      }
    }
  },
  adjustColumnResizeGrips: function(f) {
    var e = document.querySelectorAll("#" + f + " table[kwidgettype='DataGrid']");
    for (var b = 0; b < e.length; b++) {
      var a = e[b];
      var d = $KU.getModelByNode(a);
      if (d.allowcolumnresize && d.crInstance) {
        var c = d.crInstance;
        c.syncGrips();
        c.syncColWidth()
      }
    }
  },
  adjustFlexContainers: function(e, c, g, h) {
    $KU.needOptimization = false;
    var a = $KU.getNodeByModel(e);
    var f = "FlexContainer";
    switch (c) {
      case "setdata":
        this.adjustFlexContainersInDataGrid(e, a);
        break;
      case "setdataat":
      case "addat":
        var j = a.tBodies[0].rows[g];
        j && this.adjustFlexContainersInRows(j);
        break;
      case "addall":
        var k = a.tBodies[0].rows;
        for (var d = g; d < k.length; d++) {
          this.adjustFlexContainersInRows(k[d])
        }
        break;
      case "setcelldata":
      case "setheadercelldata":
        var b = a.querySelector('[colindex="' + g + "," + h + '"]');
        b && this.adjustFlexContainer(b);
        break
    }
    $KU.needOptimization = true
  },
  adjustFlexContainersInDataGrid: function(b, a) {
    var e = b.data;
    if (e.length > 0) {
      var d = a.tHead.rows[0];
      d && this.adjustFlexContainersInRows(d);
      var f = a.tBodies[0].rows;
      for (var c = 0; c < f.length; c++) {
        this.adjustFlexContainersInRows(f[c])
      }
    }
  },
  adjustFlexContainersInRows: function(c) {
    var a = c.cells;
    for (var b = 0; b < a.length; b++) {
      this.adjustFlexContainer(a[b])
    }
  },
  adjustFlexContainer: function(a) {
    var c = a.querySelector('div[kwidgettype="FlexContainer"]');
    if (c) {
      var b = $KU.getModelByNode(c);
      $KW.FlexContainer.forceLayout(b, c.parentNode)
    }
  }
};
$KW.DataGrid.ColumnResize = function(a, b) {
  this.dragColumns = a.rows[0].cells;
  this.minWidth = 17;
  if (!this.dragColumns) {
    return
  }
  this.t = $(a);
  this.t.g = [];
  this.t.c = [];
  this.t.w = this.t.width();
  this.t.cs = parseInt(kony.appinit.isIE ? a.cellSpacing || a.currentStyle.borderSpacing : $KU.getStyle(a, "border-spacing")) || 2;
  this.t.b = parseInt(kony.appinit.isIE ? a.border || a.currentStyle.borderLeftWidth : $KU.getStyle(a, "border-left-width")) || 1;
  this.t.ln = this.dragColumns.length;
  this.saveBodyCursor;
  this.cGrips = document.createElement("div");
  this.cGrips.id = a.id + "_cGrips";
  this.cGrips.className = "colgrips";
  this.cGrips.style.margin = $KU.joinArray(b.margin, "% ") + "%";
  a.parentNode.insertBefore(this.cGrips, a);
  this.t.gc = this.t.prev()
};
$KW.DataGrid.ColumnResize.prototype = {
  init: function() {
    for (var a = 0; a < this.dragColumns.length; a++) {
      if (a != this.t.ln - 1) {
        this.cGrips.innerHTML += "<div class='colgrip' index='" + a + "'><div class='colresizer'></div></div>"
      } else {
        this.cGrips.innerHTML += "<div class='lastcolgrip' index='" + a + "'></div>"
      }
      var b = {
        col: this.dragColumns[a]
      };
      b.w = this.width(this.dragColumns[a]);
      this.t.c.push(b)
    }
    this.handleEventListener = this.handleEvent.bind(this);
    for (var a = 0; a < this.cGrips.children.length; a++) {
      this.t.g.push({
        grip: this.cGrips.children[a]
      });
      if (a < this.t.ln - 1) {
        kony.events.addEventListener(this.cGrips.childNodes[a], "mousedown", this.handleEventListener)
      }
    }
    this.syncGrips()
  },
  syncGrips: function() {
    this.t.gc.style.width = this.width(this.t) + "px";
    for (var a = 0; a < this.t.ln; a++) {
      var b = this.t.c[a].col;
      this.t.g[a].grip.style.left = this.offset(b).left - this.offset(this.t).left + b.offsetWidth + this.t.cs / 2 + "px";
      this.t.g[a].grip.style.height = this.t.c[0].col.offsetHeight + "px"
    }
  },
  handleEvent: function(a) {
    switch (a.type) {
      case "mousedown":
        return this.startColumnDrag(a);
        break;
      case "mousemove":
        return this.columnDrag(a);
        break;
      case "mouseup":
        return this.stopColumnDrag(a);
        break
    }
  },
  startColumnDrag: function(f) {
    var d = f.currentTarget || f.srcElement.parentNode;
    this.curGripNo = parseInt(d.getAttribute("index"));
    var b = this.t.g[this.curGripNo];
    b.ox = f.pageX || f.clientX;
    b.l = this.position(b.grip).left;
    kony.events.addEventListener(document, "mousemove", this.handleEventListener);
    kony.events.addEventListener(document, "mouseup", this.handleEventListener);
    this.saveBodyCursor = document.body.style.cursor;
    document.body.style.cursor = "w-resize";
    if (this.t.c[this.curGripNo].l) {
      for (var a = 0, h; a < this.t.ln; a++) {
        h = this.t.c[a];
        h.l = false;
        h.w = this.width(h.col)
      }
    }
    kony.events.preventDefault(f)
  },
  width: function(a) {
    return a.offsetWidth - this.xPadding(a) - this.xBorder(a)
  },
  xPadding: function(a) {
    return parseFloat($KU.getStyle(a, "padding-left").replace("px", "")) + parseFloat($KU.getStyle(a, "padding-right").replace("px", ""))
  },
  xBorder: function(a) {
    if (kony.appinit.isIE8 && a.tagName == "TH") {
      return parseFloat($KU.getStyle(a, "borderSpacing").split(" ")[1])
    } else {
      return parseFloat($KU.getStyle(a, "border-left-width").replace("px", "")) + parseFloat($KU.getStyle(a, "border-right-width").replace("px", ""))
    }
  },
  offset: function(c) {
    var b, g, e, h, a, d, f = {
        top: 0,
        left: 0
      },
      i = c.ownerDocument;
    b = i.documentElement;
    g = i.body;
    if (!i) {
      return
    }
    if (typeof c.getBoundingClientRect !== "undefined") {
      f = c.getBoundingClientRect()
    }
    e = b.clientTop || g.clientTop || 0;
    h = b.clientLeft || g.clientLeft || 0;
    a = window.pageYOffset || b.scrollTop;
    d = window.pageXOffset || b.scrollLeft;
    return {
      top: f.top + a - e,
      left: f.left + d - h
    }
  },
  position: function(c) {
    var b = this.offsetParent(c),
      d = this.offset(c),
      a = this.root.test(b.nodeName) ? {
        top: 0,
        left: 0
      } : this.offset(b);
    d.top -= parseFloat($KU.getStyle(c, "margin-top")) || 0;
    d.left -= parseFloat($KU.getStyle(c, "margin-left")) || 0;
    a.top += parseFloat($KU.getStyle(b, "border-top-width")) || 0;
    a.left += parseFloat($KU.getStyle(b, "border-left-width")) || 0;
    return {
      top: d.top - a.top,
      left: d.left - a.left
    }
  },
  offsetParent: function(b) {
    var a = b.offsetParent || document.body;
    while (a && (!this.root.test(a.nodeName) && $KU.getStyle(b, "position") === "static")) {
      a = a.offsetParent
    }
    return a || document.body
  },
  columnDrag: function(h) {
    var g = this.t.g[this.curGripNo];
    var b = (h.pageX || h.clientX) - g.ox + g.l;
    var j = this.minWidth,
      f = this.curGripNo;
    var c = this.t.cs * 1.5 + j + this.t.b;
    var a = f == this.t.ln - 1 ? this.width(this.t) - c : this.position(this.t.g[f + 1].grip).left - this.t.cs - j;
    var d = f ? this.position(this.t.g[f - 1].grip).left + this.t.cs + j : c;
    b = Math.max(d, Math.min(a, b));
    g.x = b;
    g.grip.style.left = b + "px";
    this.syncCols();
    this.syncGrips();
    kony.events.preventDefault(h)
  },
  stopColumnDrag: function(b) {
    kony.events.removeEventListener(document, "mousemove", this.handleEventListener);
    kony.events.removeEventListener(document, "mouseup", this.handleEventListener);
    document.body.style.cursor = this.saveBodyCursor;
    var a = this.t.g[this.curGripNo];
    if (a.x) {
      this.syncCols(true);
      this.syncGrips()
    }
    kony.events.preventDefault(b)
  },
  syncCols: function(h) {
    var f = this.t.g[this.curGripNo];
    var e = this.curGripNo;
    var g = f.x - f.l,
      j = this.t.c[e],
      d = this.t.c[e + 1];
    var b = j.w + g;
    var a = d.w - g;
    j.col.style.width = b + "px";
    d.col.style.width = a + "px";
    if (h) {
      j.w = b;
      d.w = a
    }
  },
  syncColWidth: function() {
    for (var a = 0; a < this.t.c.length; a++) {
      var b = this.t.c[a];
      b.w = this.width(b.col)
    }
  }
};
$KW.Map = {
  formID: null,
  mapID: null,
  map: null,
  navigateToArgs: null,
  navigateToLocationArgs: null,
  mapScriptRequested: false,
  mapScriptLoaded: false,
  currentLatitude: null,
  currentLongitude: null,
  currentZoom: 15,
  routeToLocationArgs: null,
  initialize: function() {
    kony.events.addEvent("click", "Kinfowindow", this.mapInfoWindowEventHandler);
    kony.events.addEvent("click", "Kstaticmap", this.mapEventHandler);
    kony.events.addEvent("onorientationchange", "Map", this.setMapsHeight)
  },
  initializeView: function(a) {
    if (document.querySelectorAll("div[name=map_canvas]").length > 0) {
      $KW.Map.loadMapScripts()
    }
    $KW.Map.setMapsHeight(a)
  },
  updateView: function(g, j, e, h) {
    switch (j) {
      case "address":
      case "locationdata":
        if ((g.mapsrc === "static") || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
          var l = document.getElementById(g.pf + "_static_map");
          if (!l) {
            return
          }
          var m = l.getAttribute("src");
          if (j == "locationdata") {
            var f = this.getMarkerDataforStaticMaps(g);
            if (m.indexOf("&markers") != -1) {
              l.src = m;
              l.src = l.src.replace(/center=(.*)$/, "");
              var b = "center=" + (!!e.length && e[0].lat || 0) + "," + (!!e.length && e[0].lon || 0) + "&";
              l.src += b;
              l.src += m.match(/markers=(.*)$/)[0] + f
            } else {
              l.src = m + "&markers=" + f
            }
          } else {
            if (m.indexOf("&markers") != -1) {
              m = m.replace(/markers=(.*)$/, "").replace("&markers=", "")
            }
            l.src = m.replace(/center=(.*)&/, "center=" + e.location + "&markers=color:red%7C" + e.location)
          }
        } else {
          var k = $KU.getNodeByModel(g);
          if (!k) {
            return
          }
          if ($KW.Map.mapScriptLoaded) {
            var d = $KU.getElementById("__MainContainer");
            if (!d) {
              $KW.Map.isMainContaineraVailable = false
            } else {
              this.setUpInteractiveCanvasMap()
            }
          } else {
            $KW.Map.loadMapScripts()
          }
        }
        break;
      case "zoom":
      case "zoomlevel":
      case "mode":
        if ($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
          var l = document.getElementById(g.pf + "_static_map");
          if (!l) {
            return
          }
          var m = l.getAttribute("src");
          var a = "";
          switch (parseInt(g.mode, 10)) {
            case 2:
              a = "satellite";
              break;
            case 3:
              a = "hybrid";
              break;
            case 5:
              a = "polygon";
              break;
            case 7:
              a = "terrain";
              break;
            default:
              a = "normal"
          }
          if (j == "mode") {
            l.src = m.replace(/maptype=(.*)&mobile/, ("maptype=" + a + "&mobile"))
          } else {
            if (j == "zoom" || j == "zoomlevel") {
              l.src = m.replace(/zoom(.*)&size/, "zoom=" + parseInt(e) + "&size")
            }
          }
        } else {
          var i = document.querySelectorAll("[name=map_canvas]")[0];
          i && this.setUpInteractiveCanvasMap()
        }
        break;
      case "defaultpinimage":
        var i = document.querySelectorAll("[name=map_canvas]")[0];
        if ((g && g.mapsrc === "static") || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
          var c = $KU.getImageURL(e);
          c = g.newPinimage = location.origin + "/" + c;
          this.setUpInteractiveCanvasMap()
        } else {
          g.defaultpinimage = e;
          i && this.setUpInteractiveCanvasMap()
        }
        break
    }
  },
  loadMapScripts: function() {
    if ("undefined" === typeof google && !$KW.Map.mapScriptRequested) {
      $KW.Map.mapScriptRequested = true;
      var e = document.querySelectorAll("[name=map_canvas]")[0];
      $KW.Map.mapID = e && e.id.split("_")[1] || "";
      var c = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
      var b = c && c.mapClientId;
      var d = document.createElement("script");
      d.type = "text/javascript";
      d.src = "//maps-api-ssl.google.com/maps/api/js?sensor=false" + (!!b && ("&client=" + b) || "") + "&callback=$KW.Map.setUpInteractiveCanvasMap";
      document.body.appendChild(d)
    } else {
      return
    }
    var a = $KU.getElementById("__MainContainer");
    if (!a) {
      $KW.Map.isMainContaineraVailable = false
    } else {
      $KW.Map.isMainContaineraVailable = true
    }
  },
  mapEventHandler: function(b, f) {
    var h = f.id;
    var e = document.getElementById(f.getAttribute("kformname") + "_static_map");
    var g = e.getAttribute("src");
    var a = g.match(/center=(.*)&/);
    var d = a[1].split(",");
    if (h.indexOf("_left") != -1) {
      d[1] = parseFloat(d[1]) - 0.002;
      e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
    } else {
      if (h.indexOf("_right") != -1) {
        d[1] = parseFloat(d[1]) + 0.002;
        e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
      } else {
        if (h.indexOf("_up") != -1) {
          d[0] = parseFloat(d[0]) - 0.002;
          e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
        } else {
          if (h.indexOf("_down") != -1) {
            d[0] = parseFloat(d[0]) + 0.002;
            e.src = g.replace(/center=(.*)&/, "center=" + d[0] + "," + d[1] + "&")
          } else {
            if (h.indexOf("_zoomin") != -1) {
              var c = g.match(/zoom=(.*)&size/);
              c = parseInt(c[1]) + 1;
              e.src = g.replace(/zoom(.*)&size/, "zoom=" + c + "&size")
            } else {
              if (h.indexOf("_zoomout") != -1) {
                var c = g.match(/zoom=(.*)&size/);
                c = parseInt(c[1]) - 1;
                e.src = g.replace(/zoom(.*)&size/, "zoom=" + c + "&size")
              }
            }
          }
        }
      }
    }
  },
  mapInfoWindowEventHandler: function(c, f) {
    while (!f.getAttribute("kwidgettype")) {
      f = f.parentNode
    }
    var e = f.getAttribute("kinfoid");
    var a = $KU.getElementID(e);
    var g = f.getAttribute("mappointno");
    var b = kony.model.getWidgetModel($KW.Map.formID, a);
    var d = $KU.returnEventReference(b.onselection);
    if (isNaN(parseInt(g, 10))) {
      d && d.call(b, b, b[b.id + "navigatetoloc"])
    } else {
      d && d.call(b, b, b.locationdata[parseInt(g, 10)])
    }
  },
  render: function(g, a) {
    g.needScroller = true;
    this.formID = g.pf;
    this.mapID = g.id;
    var d = $KW.skins.getWidgetSkinList(g, a);
    var f = "",
      i = "";
    var c = g.mapsrc || g.mapsource;
    if ((c === "static") || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9)) {
      var o = $KW.skins.getVisibilitySkin(g);
      var b = "";
      switch (parseInt(g.mode, 10)) {
        case 2:
          b = "satellite";
          break;
        case 3:
          b = "hybrid";
          break;
        case 5:
          b = "polygon";
          break;
        case 7:
          b = "terrain";
          break;
        default:
          b = "normal"
      }
      var h = g.locationdata || g.address;
      var n = 0;
      var k = 0;
      var p = "";
      if (h && h[IndexJL]) {
        n = (h[IndexJL].lat == undefined) ? h[IndexJL][IndexJL] : h[IndexJL].lat;
        k = (h[IndexJL].lat == undefined) ? h[IndexJL][1 + IndexJL] : h[IndexJL].lon;
        p = this.getMarkerDataforStaticMaps(g)
      }
      var q = $KU.getImageURL(g.upimg ? g.upimg : "tupF.png");
      var s = $KU.getImageURL(g.downimg ? g.downimg : "tdownF.png");
      var m = $KU.getImageURL(g.rightimg ? g.rightimg : "trightF.png");
      var l = $KU.getImageURL(g.leftimg ? g.leftimg : "tleftF.png");
      var r = $KU.getImageURL(g.zoomin ? g.zoomin : "zoomin.png");
      var e = $KU.getImageURL(g.zoomout ? g.zoomout : "zoomout.png");
      i = "<table><tr><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_up_event' src = '" + q + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_down_event' src = '" + s + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_right_event' src = '" + m + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_left_event' src = '" + l + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomin_event' src = '" + r + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomout_event' src = '" + e + "'/></td></tr></table>";
      if (g.disabled) {
        i = "<table style='position:relative;'><tr><td><div style='background:#fff;bottom:0;left:0;opacity:0.5;filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=50);filter:alpha(opacity=50);position:absolute;right:0;top:0;z-index:2147483647' class='google_map_mask'></div><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_up_event' src = '" + q + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_down_event' src = '" + s + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_right_event' src = '" + m + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_left_event' src = '" + l + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomin_event' src = '" + r + "'/></td><td><img kwidgettype ='Kstaticmap' kformname='" + g.pf + "' id='" + g.id + "_zoomout_event' src = '" + e + "'/></td></tr></table>"
      }
      f = "<div id='" + g.pf + "_" + g.id + "'class='" + o + "' style='" + $KW.skins.getMarginSkin(g, a) + $KW.skins.getPaddingSkin(g) + "' kwidgettype='Map' >" + i;
      f += "<img id='" + g.pf + "_static_map' alt='Map Widget' style='width:100%;' src='http://maps.google.com/maps/api/staticmap?sensor=false&zoom=15&size=400x400&format=png32&maptype=" + b + "&mobile=true&center=" + n + "," + k + "&markers=" + p + "'/></div>"
    } else {
      if (c == "native") {
        g.widgetdata = "http://maps.google.com/maps?q=17.447326,78.371358";
        f = "<a style='text-decoration:none;' href='" + g.widgetdata + "'>Google Map Name</a>"
      } else {
        var j = "";
        if (g.mapview === "5" || g.mode == "5") {
          j = " mapview='polygon' "
        }
        f = "<div kwidgettype='googlemap' kformname= '" + g.pf + "' id='" + g.pf + "_" + g.id + "' name='map_canvas'" + j + " style='height:500px;" + $KW.skins.getMarginSkin(g, a) + $KW.skins.getPaddingSkin(g) + "' class='" + d + "' konywidgetdata='" + g.widgetdata + "'></div>"
      }
    }
    return f
  },
  getMarkerDataforStaticMaps: function(b) {
    var a = b.locationdata || b.address;
    var f = "";
    for (var c = IndexJL; c < a.length; c++) {
      var d = (a[IndexJL].lat == undefined) ? a[c][IndexJL] : a[c].lat;
      var e = (a[IndexJL].lat == undefined) ? a[c][1 + IndexJL] : a[c].lon;
      (typeof b.newPinimage != undefined) && (f += "icon:" + b.newPinimage + "%7C");
      f += d + "," + e;
      if (c != a.length) {
        f += "&markers="
      }
    }
    return f
  },
  cachePinSizes: function(c) {
    if (typeof $KW.Map.pinImageSize === "undefined") {
      $KW.Map.pinImageSize = {}
    }
    var a = new Image();
    a.src = c;
    var b = c.slice(c.lastIndexOf("/") + 1);
    if (!$KW.Map.pinImageSize[b]) {
      a.onload = function() {
        $KW.Map.pinImageSize[b] = this.naturalHeight
      }
    }
  },
  setUpInteractiveCanvasMap: function() {
    if ("undefined" === typeof google) {
      $KG.mapScriptLoaded = false;
      $KW.Map.mapScriptLoaded = false;
      return
    }
    var k = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
    if (!k) {
      return
    }
    $KG.mapScriptLoaded = true;
    $KW.Map.mapScriptLoaded = true;
    k.markers = [];
    if (k && k.mapsrc === "static" && ($KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9))) {
      var q = document.getElementById(k.pf + "_static_map");
      var y = q.getAttribute("src");
      var D = this.getMarkerDataforStaticMaps(k);
      y = y.replace(/markers=(.*)$/, "");
      q.src = y + "&markers=" + D
    } else {
      var I = document.querySelectorAll("[name=map_canvas]")[0];
      $KG.mapScriptLoaded = "false";
      if (I) {
        try {
          var k = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
          switch (parseInt(k.mode, 10)) {
            case 2:
              var d = google.maps.MapTypeId.SATELLITE;
              break;
            case 3:
              var d = google.maps.MapTypeId.HYBRID;
              break;
            case 7:
              var d = google.maps.MapTypeId.TERRAIN;
              break;
            default:
              var d = google.maps.MapTypeId.ROADMAP
          }
        } catch (E) {
          window.console && console.log("google : map script has not loaded yet");
          return
        }
        var F = I.getAttribute("mapview");
        var l = k.locationdata || k.address;
        var o = l;
        var G = k.zoomlevel || 15;
        var u = {
          zoom: G,
          disableDefaultUI: true,
          zoomControl: true,
          navigationControl: true,
          mapTypeControl: k.displaymaptypecontrols,
          scaleControl: true,
          mapTypeId: d
        };
        var H;
        if (l) {
          var n = new google.maps.Geocoder();
          if (l.location) {
            H = new google.maps.Map(I, u);
            n.geocode({
              address: l.location
            }, function(K, i) {
              if (i == google.maps.GeocoderStatus.OK) {
                H.setCenter(K[0].geometry.location);
                var e = new google.maps.Marker({
                  map: H,
                  position: K[0].geometry.location
                })
              }
            })
          } else {
            if (l.length >= 1 + IndexJL) {
              var A = l[IndexJL].lat,
                w = l[IndexJL].lon;
              var z = [],
                m, u;
              if (l[IndexJL].lat == undefined) {
                A = l[IndexJL][IndexJL];
                w = l[IndexJL][1 + IndexJL]
              }
              m = new google.maps.LatLng(A, w);
              u.center = m, u.zoomControl = undefined;
              H = new google.maps.Map(I, u);
              $KW.Map.map = H;
              this.initializeInfoBox();
              if (F == null && k.mode != "5") {
                var p = null;
                p = new google.maps.InfoWindow({
                  content: "holding..."
                });
                var h = I.getAttribute("id");
                var a = "</div>";
                for (var x = IndexJL; x < (l.length); x++) {
                  var c = '<div kwidgettype="Kinfowindow" kinfoid="' + h + '"';
                  var C = "";
                  var v = "";
                  if (l[IndexJL].lat == undefined) {
                    v = (l[x][4 + IndexJL] || k.defaultpinimage)
                  } else {
                    v = (l[x].image || k.defaultpinimage)
                  }
                  C = $KU.getImageURL(v);
                  this.cachePinSizes(C);
                  var j = new google.maps.LatLng(l[x].lat, l[x].lon);
                  if (l[IndexJL].lat == undefined) {
                    C = $KU.getImageURL(l[x][4 + IndexJL]);
                    j = new google.maps.LatLng(l[x][IndexJL], l[x][1 + IndexJL])
                  }
                  var B = l[x].calloutData || l[x].calloutdata;
                  var t = (B && B.template) || k.callouttemplate;
                  if (t) {
                    this.setParentForTemplateChildren(t, t.children, t);
                    var J = "";
                    B && (J = this.ConvertDataMaptoData(k, B));
                    J && $KW.Utils.updateLayoutData(k, t, J);
                    if (t.wType == "FlexContainer") {
                      $KG.isUILayedOut = false;
                      c = $KW.FlexContainer.render(t, {});
                      if (k.calloutwidth < 1 || k.calloutwidth > 100) {
                        k.calloutwidth = 80
                      }
                      var s = k.calloutwidth && (((I.offsetWidth) * k.calloutwidth * 0.01) + "px") || "280px";
                      var g = document.createElement("DIV");
                      g.innerHTML = c;
                      g.style.width = s;
                      I.appendChild(g);
                      $KW.FlexContainer.forceLayout(t, g.children[0]);
                      c = g.innerHTML;
                      I.removeChild(g);
                      $KG.isUILayedOut = true
                    } else {
                      c = $KW.HBox.render(t, {
                        topLevelBox: true
                      })
                    }
                  }
                  var f = new google.maps.Marker({
                    position: j,
                    map: H,
                    icon: C,
                    html: (l[IndexJL].lat == undefined) ? l[x][3 + IndexJL] : l[x].desc,
                    hdrdescp: (l[IndexJL].lat == undefined) ? l[x][2 + IndexJL] : l[x].name,
                    indexpoint: x,
                    template: t,
                    contentString: c,
                    data: J,
                    calloutPostion: (k.calloutPostion || "top"),
                    showcallout: (l[IndexJL].lat == undefined) ? l[x][5 + IndexJL] : l[x].showcallout
                  });
                  k.markers.push(f);
                  new google.maps.event.addListener(f, "click", function() {
                    if (!this.eventFromNavigateTo) {
                      var N = $KU.returnEventReference(k.onpinclick);
                      N && N.call(k, k, k.locationdata[parseInt(this.indexpoint)])
                    }
                    if (this.showcallout || this.showcallout == undefined || this.forceShowcallout) {
                      if (this.template) {
                        var K = $KU.getNodeByModel(k);
                        if (k.calloutwidth < 1 || k.calloutwidth > 100) {
                          k.calloutwidth = 80
                        }
                        var L = k.calloutwidth && (((K.offsetWidth) * k.calloutwidth * 0.01) + "px") || "280px";
                        var e = parseInt(L, 10) / -2;
                        var i = 0;
                        if (this.calloutPostion != "bottom") {
                          infobox.alignBottom_ = true;
                          var M = (this.icon).slice(this.icon.lastIndexOf("/") + 1);
                          i = -($KW.Map.pinImageSize[M] ? $KW.Map.pinImageSize[M] : 30)
                        }
                        infobox.content_ = this.contentString, infobox.disableAutoPan_ = false, infobox.position_ = this.position, infobox.maxWidth_ = 450, infobox.pixelOffset_ = new google.maps.Size(e, i), infobox.zIndex_ = 10, infobox.boxStyle_ = {
                          opacity: 1,
                          width: L,
                          background: "none"
                        }, infobox.enableEventPropagation_ = true, infobox.closeBoxURL_ = "", this.data && $KW.Utils.updateLayoutData(k, this.template, this.data);
                        infobox.infoBoxClearance_ = new google.maps.Size(0, 0);
                        infobox.open(this.map, this)
                      } else {
                        p.setContent(this.contentString + ' mappointno="' + this.indexpoint + '"><b kwidgettype="Kinfowindow" kinfoid="' + h + '" mappointno="' + this.indexpoint + '">' + this.hdrdescp + "</b> <br />" + this.html + a);
                        p.open(this.map, this)
                      }
                    }
                    this.forceShowcallout = false;
                    this.eventFromNavigateTo = false
                  });
                  f.setMap(H)
                }
              } else {
                var b = "";
                for (var x = IndexJL; x < (l.length); x++) {
                  if (l[IndexJL].lat == undefined) {
                    b = new google.maps.LatLng(l[x][IndexJL], l[x][IndexJL])
                  } else {
                    b = new google.maps.LatLng(l[x].lat, l[x].lon)
                  }
                  z.push(b)
                }
                var r = new google.maps.Polygon({
                  paths: z,
                  strokeColor: "#FF0000",
                  strokeOpacity: 0.8,
                  strokeWeight: 3,
                  fillColor: "#FF0000",
                  fillOpacity: 0.35
                });
                r.setMap(H)
              }
            } else {
              if (l.length == 0) {
                u.center = new google.maps.LatLng(0, 0);
                H = new google.maps.Map(I, u);
                $KW.Map.map = H
              }
            }
          }
        } else {
          u.center = new google.maps.LatLng(0, 0);
          H = new google.maps.Map(I, u);
          $KW.Map.map = H
        }
        $KW.Map.setEnabledMap(k, I);
        if ($KW.Map.navigateToArgs) {
          $KW.Map.navigateTo($KW.Map.navigateToArgs.mapModel, $KW.Map.navigateToArgs.index, $KW.Map.navigateToArgs.showCallOut)
        }
        if ($KW.Map.navigateToLocationArgs) {
          $KW.Map.navigateToLocation($KW.Map.navigateToLocationArgs.mapModel, $KW.Map.navigateToLocationArgs.locationData, $KW.Map.navigateToLocationArgs.showCallOut, $KW.Map.navigateToLocationArgs.dropPin)
        }
        if ($KW.Map.routeToLocationArgs) {
          $KW.Map.navigateToLocation($KW.Map.routeToLocationArgs.mapModel, $KW.Map.routeToLocationArgs.startlocationData, $KW.Map.routeToLocationArgs.endlocationData, $KW.Map.routeToLocationArgs.waypointslocation, $KW.Map.routeToLocationArgs.routeConfig)
        }
        new google.maps.event.addListener(this.map, "click", this.mapClickEventHandler)
      }
    }
  },
  mapClickEventHandler: function(c) {
    var a = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
    if (a.onclick) {
      var d = $KU.returnEventReference(a.onclick);
      var e = c.latLng && c.latLng.lat();
      var b = c.latLng && c.latLng.lng();
      d && d.call(a, a, {
        lat: e,
        lon: b
      })
    }
    c.preventDefault && c.preventDefault();
    c.stopPropagation && c.stopPropagation()
  },
  navigateTo: function(f, g, a) {
    if (!this.navigateToArgs) {
      this.navigateToArgs = {
        mapModel: f,
        index: g,
        showCallOut: a
      }
    }
    if (!this.map) {
      return
    }
    var g = parseInt(g);
    var h = this.map;
    var d = "";
    var e = "";
    var c = f.locationdata;
    if (g < 1 && g >= c.length) {
      return
    }
    if (c[g]) {
      d = c[g].lat;
      e = c[g].lon;
      if (c[g].lat == undefined) {
        d = c[g][IndexJL];
        e = c[g][1 + IndexJL]
      }
    }
    h.setCenter(new google.maps.LatLng(d, e));
    if (a) {
      var b = this.getMarkerByIndex(g, c, f);
      b.forceShowcallout = true;
      b.eventFromNavigateTo = true;
      google.maps.event.trigger(b, "click")
    }
    this.navigateToArgs = null
  },
  navigateToLocation: function(g, k, s, t) {
    if (!this.navigateToLocationArgs) {
      this.navigateToLocationArgs = {
        mapModel: g,
        locationData: k,
        showCallOut: s,
        dropPin: t
      }
    }
    if (!this.map) {
      return
    }
    var l = g.locationdata;
    var i = "navigatetoloc";
    var u = this.map;
    var h = (k.lat) ? k.lat : k[IndexJL];
    var f = (k.lon) ? k.lon : k[1 + IndexJL];
    var r = (k.lat == undefined) ? k[3 + IndexJL] : k.desc;
    var w = (k.lat == undefined) ? k[2 + IndexJL] : k.name;
    var o = (k.lat == undefined) ? k[4 + IndexJL] : (k.image || g.defaultpinimage);
    var p = (t) ? $KU.getImageURL(o) : null;
    var p = "";
    if (t) {
      t = true;
      p = $KU.getImageURL(o)
    } else {
      if (typeof(marker) != "undefined") {
        marker.setMap(null)
      }
    }
    if (typeof(infowindow) != "undefined") {
      infowindow.close()
    }
    this.cachePinSizes(p);
    marker = new google.maps.Marker({
      position: new google.maps.LatLng(h, f),
      map: u,
      icon: p,
      html: r,
      hdrdescp: w,
      visible: t
    });
    if (!t) {
      marker.setMap(null)
    }
    u.setCenter(new google.maps.LatLng(h, f));
    g[g.id + "navigatetoloc"] = k;
    var d = '<div kwidgettype="Kinfowindow" kinfoid="' + g.id + '"';
    var b = "</div>";
    if (s) {
      var q = k.calloutData || k.calloutdata;
      if (q) {
        this.initializeInfoBox();
        var j = kony.model.getWidgetModel($KW.Map.formID, $KW.Map.mapID);
        var n = (q && q.template) || j.callouttemplate;
        if (n) {
          this.setParentForTemplateChildren(n, n.children, n);
          var v = "";
          q && (v = this.ConvertDataMaptoData(j, q));
          v && $KW.Utils.updateLayoutData(j, n, v);
          d = $KW.HBox.render(n, {
            topLevelBox: true
          })
        }
        var a = (window && window.innerWidth) || document.width;
        if (n.containerWeight < 1 || n.containerWeight > 100) {
          n.containerWeight = 80
        }
        var m = n.containerWeight && ((a * n.containerWeight * 0.01) + "px") || "280px";
        var c = parseInt(m, 10) / -2;
        infobox.alignBottom_ = true;
        var e = (this.icon).slice(this.icon.lastIndexOf("/") + 1);
        infobox_top = -($KW.Map.pinImageSize[e] ? $KW.Map.pinImageSize[e] : 30);
        infobox.content_ = d, infobox.disableAutoPan_ = false, infobox.position_ = new google.maps.LatLng(h, f), infobox.maxWidth_ = 450, infobox.pixelOffset_ = new google.maps.Size(c, infobox_top), infobox.zIndex_ = 10, infobox.boxStyle_ = {
          opacity: 1,
          width: m,
          background: "none"
        }, infobox.enableEventPropagation_ = true, infobox.closeBoxURL_ = "", infobox.infoBoxClearance_ = new google.maps.Size(0, 0);
        new google.maps.event.addListener(marker, "click", function() {
          infobox.open(this.map, infobox)
        });
        infobox.open(this.map, infobox)
      } else {
        infowindow = new google.maps.InfoWindow({
          content: d + ' mappointno="' + i + '"><b>' + w + "</b> <br />" + r + b
        });
        if (k && k.showcallout) {
          new google.maps.event.addListener(marker, "click", function() {
            infowindow.open(this.map, this)
          })
        }
        infowindow.open(u, marker)
      }
    }
    this.navigateToLocationArgs = null
  },
  initializeInfoBox: function() {
    if (typeof InfoBox === "undefined") {
      var a = document.createElement("script");
      a.type = "text/javascript";
      a.src = "//google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/src/infobox.js";
      document.body.appendChild(a);
      var b = function() {
        infobox = new InfoBox()
      };
      if (!a.addEventListener) {
        a.onreadystatechange = function() {
          (this.readyState == "complete" || this.readyState == "loaded") && b()
        }
      } else {
        a.onload = b
      }
    }
  },
  dismissCallout: function(b, a) {
    if (typeof infobox != "undefined") {
      infobox.close()
    }
  },
  getMarkerByIndex: function(i, d, e) {
    if (!this.map) {
      return
    }
    if (e.markers.length) {
      g = e.markers[i];
      return g
    }
    if (!d) {
      var d = e.locationdata
    }
    var c = this.map;
    var j = null;
    var f = (d[i].lat == undefined) ? d[i][4 + IndexJL] : (d[i].image || e.defaultpinimage);
    j = $KU.getImageURL(f);
    var k = (d[i].lat == undefined) ? d[i][IndexJL] : d[i].lat;
    var b = (d[i].lat == undefined) ? d[i][1 + IndexJL] : d[i].lon;
    var h = (d[i].lat == undefined) ? d[i][3 + IndexJL] : d[i].desc;
    var a = (d[i].lat == undefined) ? d[i][2 + IndexJL] : d[i].name;
    var g = new google.maps.Marker({
      position: new google.maps.LatLng(k, b),
      map: c,
      icon: j,
      html: h,
      hdrdescp: a,
      indexpoint: i
    });
    return g
  },
  routeLocations: function(c, i, h, g, f) {
    if (!this.map) {
      return
    }
    markers = {};
    var j = {
      draggable: true,
      suppressMarkers: true,
      polylineOptions: {
        strokeColor: f.lineColor,
        strokeOpacity: 1,
        strokeWeight: f.lineWidth
      }
    };
    directionsService = new google.maps.DirectionsService();
    directionsDisplay = new google.maps.DirectionsRenderer(j);
    geocoder = new google.maps.Geocoder();
    var b = new google.maps.LatLng(i.lat, i.lon);
    var a = new google.maps.LatLng(h.lat, h.lon);
    var d = document.querySelectorAll("[name=map_canvas]")[0];
    var k = {
      zoom: 13,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      center: b
    };
    map = new google.maps.Map(d, k);
    directionsDisplay.setMap(map);
    this.map = map;
    this.RenderTheDirection(b, a, g);
    var e = [i, h, g];
    this.CreateMarker(e)
  },
  ConvertDataMaptoData: function(c, e) {
    var a = c.widgetdatamapforcallout || {};
    var g = {};
    var k = $KU.getkeys(a);
    var l = {};
    for (var f = 0; f < k.length; f++) {
      l[a[k[f]]] = k[f]
    }
    var b = $KU.getkeys(l);
    for (var d = 0; d < b.length; d++) {
      var h = e[b[d]];
      if (h && typeof h != "object" && typeof h !== "number" && h.toLowerCase().indexOf("i18n.getlocalizedstring") != -1) {
        g[b[d]] = $KU.getI18NValue(h)
      } else {
        g[k[d]] = h
      }
    }
    return g
  },
  CreateMarker: function(d) {
    $KG.__markers = {};
    var l = kony.model.getWidgetModel(this.formID, this.mapID);
    var j = 0;
    var g = document.querySelectorAll("[name=map_canvas]")[0];
    var k = g.getAttribute("id");
    var f = '<div kwidgettype="Kinfowindow" kinfoid="' + k + '"';
    var e = "</div>";
    for (var h = IndexJL; h < (d.length - 1); h++) {
      var a = h;
      imageURL = d[h].image;
      urlt = $KU.getImageURL(imageURL);
      var c = new google.maps.LatLng(d[h].lat, d[h].lon);
      var b = new google.maps.Marker({
        id: a,
        position: c,
        map: map,
        icon: urlt,
        html: d[h].desc,
        hdrdescp: d[h].name,
        indexpoint: h,
        draggable: true
      });
      $KG.__markers[a] = b;
      google.maps.event.addListener(b, "dragend", function(i) {
        return function() {
          geocoder.geocode({
            latLng: b.getPosition()
          }, function(n, m) {
            if (m == google.maps.GeocoderStatus.OK) {
              $KW.Map.RenderTheDirection($KG.__markers[0].getPosition(), $KG.__markers[1].getPosition(), d[2])
            }
          })
        }
      }(b));
      new google.maps.event.addListener(b, "click", function() {
        l.onpinselect && l.onpinselect(l.locationdata[parseInt(this.indexpoint)]);
        if (this.showcallout || this.showcallout == undefined) {
          var i = new google.maps.InfoWindow({
            content: f + ' mappointno="' + j + '"><b>' + name + "</b> <br />" + desc + e
          });
          i.setContent(f + ' mappointno="' + this.indexpoint + '"><b>' + this.hdrdescp + "</b> <br />" + this.html + e);
          i.open(map, this)
        }
      });
      b.setMap(map)
    }
  },
  RenderTheDirection: function(e, f, b) {
    var a = [];
    if (b && b != undefined) {
      for (var c = 0; c < b.length; c++) {
        a[c] = new google.maps.LatLng(b[c].lat, b[c].lon);
        a[c] = {
          location: a[c] + ""
        }
      }
    }
    var d = {
      origin: e,
      destination: f,
      waypoints: a,
      travelMode: google.maps.TravelMode.DRIVING
    };
    directionsService.route(d, function(g, h) {
      if (h == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(g)
      }
    })
  },
  getInfoWindowByIndex: function(h, b) {
    if (!this.map) {
      return
    }
    if (!b) {
      var c = kony.model.getWidgetModel(this.formID, this.mapID);
      var b = c.locationdata
    }
    var f = document.querySelectorAll("[name=map_canvas]")[0];
    var i = f.getAttribute("id");
    var e = '<div kwidgettype="Kinfowindow" kinfoid="' + i + '"';
    var d = "</div>";
    var g = (b[h].lat == undefined) ? b[h][3 + IndexJL] : b[h].desc;
    var a = (b[h].lat == undefined) ? b[h][2 + IndexJL] : b[h].name;
    return new google.maps.InfoWindow({
      content: e + ' mappointno="' + h + '"><b>' + a + "</b> <br />" + g + d
    })
  },
  setParentForTemplateChildren: function(d, c, a) {
    d.pf = a.id;
    if (c && c.length > 0) {
      for (var b = 0; b < c.length; b++) {
        d[c[b]].pf = a.id;
        this.setParentForTemplateChildren(d[c[b]], d[c[b]].children, a)
      }
    }
    kony.ui.Form2.prototype.createFormLevelHierarchy.call(a, a.ownchildrenref)
  },
  setMapsHeight: function(g) {
    var h = document.querySelectorAll("#" + g + " div[kwidgettype='googlemap']");
    if (h) {
      for (var e = 0; e < h.length; e++) {
        var d = h[e];
        var a = d.getAttribute("id").split("_")[1];
        var c = d.getAttribute("id").split("_")[0];
        var f = d.getAttribute("ktabpaneid");
        var b = kony.model.getWidgetModel(c, a, f);
        $KU.setScrollHeight(b)
      }
    }
  },
  setEnabledMap: function(b, c) {
    var d = c;
    if (b && (b.mapsrc === "static" || $KU.isBlackBerryNTH || ($KU.isWindowsPhone && $KU.isIE9))) {
      d = c.getElementsByTagName("table")[0]
    }
    if (!d) {
      return
    }
    if (b.disabled === true || c.getAttribute("kdisabled") === "true") {
      var a = document.createElement("div");
      a.style.background = "#fff";
      a.style.bottom = "0";
      a.style.left = "0";
      a.style.opacity = "0.5";
      a.style.filter = "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
      a.style.filter = "alpha(opacity=50)";
      a.style.position = "absolute";
      a.style.right = "0";
      a.style.top = "0";
      a.style.zIndex = "2147483647";
      a.className = "google_map_mask";
      if (!!d && !d.querySelectorAll(".google_map_mask")[0]) {
        b.oldPosition = d.style.position;
        d.style.position = "relative";
        d.appendChild(a)
      }
    }
    if (b.disabled === false || c.getAttribute("kdisabled") === "false" && d) {
      var a = d.querySelectorAll(".google_map_mask")[0];
      d.style.position = !!b.oldPosition && b.oldPosition;
      !!a && a.parentNode.removeChild(a)
    }
  }
};
$KW.TabPane = {
  ANIMATION_DELAY: 500,
  initialize: function() {
    kony.events.addEvent("click", "Tab", this.eventHandler);
    kony.events.addEvent("click", "TabArrow", this.eventHandlerArrow);
    kony.events.addEvent("onorientationchange", "TabPane", this.orientationHandler)
  },
  initializeView: function(a) {
    this.toggleDisable(a);
    setTimeout(function() {
      $KW.TabPane.setTabsHeight(a)
    }, 1);
    $KW.touch.computeSnapWidths(a, "Tabpane");
    $KU.setScrollBoxesHeight(a, "TabPane")
  },
  orientationHandler: function(b, a) {
    $KU.setScrollBoxesHeight(b, "TabPane")
  },
  updateView: function(g, j, q, c) {
    var k = g.viewtype;
    switch (j) {
      case "activeskin":
        if (k === "tabview") {
          for (var o = 0; o < g.children.length; o++) {
            var m = $KU.getElementById(g.pf + "_" + g.children[o] + "_Body");
            var e = $KU.getElementById(g.pf + "_" + g.children[o] + "_Li");
            var d = $KU.getElementById(g.pf + "_" + g.children[o] + "_A");
            if (m && m.getAttribute("activebody") === "1") {
              $KU.removeClassName(e, c + "li");
              $KU.removeClassName(d, c + "lia");
              $KU.addClassName(e, q + "li");
              $KU.addClassName(d, q + "lia")
            }
          }
        } else {
          for (var o = 0; o < g.children.length; o++) {
            var p = g.children[o];
            var h = $KU.getElementById(g.pf + "_" + p + "_Header");
            if (h) {
              if (h.getAttribute("active") === "1") {
                $KU.removeClassName(h, c);
                $KU.addClassName(h, q)
              }
            }
          }
        }
        break;
      case "inactiveskin":
        if (k === "tabview") {
          for (var o = 0; o < g.children.length; o++) {
            var m = $KU.getElementById(g.pf + "_" + g.children[o] + "_Body");
            var e = $KU.getElementById(g.pf + "_" + g.children[o] + "_Li");
            var d = $KU.getElementById(g.pf + "_" + g.children[o] + "_A");
            if (m && m.getAttribute("activebody") === "0") {
              $KU.removeClassName(e, c + "li");
              $KU.removeClassName(d, c + "lia");
              $KU.addClassName(e, q + "li");
              $KU.addClassName(d, q + "lia")
            }
          }
        } else {
          for (var o = 0; o < g.children.length; o++) {
            var p = g.children[o];
            var h = $KU.getElementById(g.pf + "_" + p + "_Header");
            if (h) {
              if (h.getAttribute("active") === "0") {
                $KU.removeClassName(h, c);
                $KU.addClassName(h, q)
              }
            }
          }
        }
        break;
      case "activetab":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        if (q >= 0 && q < g.children.length) {
          g.activetab = q;
          if (g.activetabs) {
            g.activetabs[IndexJL] = q
          }
          if (g.viewtype === constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            var l = g.children[g.activetab];
            $KW.TabPane.changeActiveTabSkin(g, l);
            var m = $KU.getElementById(g.pf + "_" + g.id + "_Body");
            if (m) {
              var s = m.children[0];
              var f = g.swipeContext;
              f.currentPage = g.activetab;
              $KW.touch.scrollImages(s, f.imageWidth * f.currentPage, $KU.swipeDuration, false, {
                tabPaneModel: g,
                tabID: l
              });
              $KW.touch.updatePageIndicator(b, f, g)
            }
          } else {
            this.repaint(b, g)
          }
        }
        break;
      case "activetabs":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        if (g.viewtype === constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          var l = g.children[g.activetab];
          $KW.TabPane.changeActiveTabSkin(g, l);
          var s = $KU.getElementById(g.pf + "_" + g.id + "_Body").children[0];
          var f = g.swipeContext;
          f.currentPage = g.activetab;
          $KW.touch.scrollImages(s, f.imageWidth * f.currentPage, $KU.swipeDuration, false, {
            tabPaneModel: g,
            tabID: l
          });
          $KW.touch.updatePageIndicator(b, f, g)
        } else {
          this.repaint(b, g)
        }
        break;
      case "viewconfig":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        if (q && !IndexJL) {
          g.viewconfig.collapsibleviewconfig = q.collapsibleViewConfig;
          if (g.viewconfig.collapsibleviewconfig) {
            g.viewconfig.collapsibleviewconfig.onclick = q.collapsibleviewconfig.onClick;
            g.expandedimage = g.viewconfig.collapsibleviewconfig.expandedimage = q.collapsibleviewconfig.expandedImage;
            g.collapsedimage = g.viewconfig.collapsibleviewconfig.collapsedimage = q.collapsibleviewconfig.collapsedImage;
            g.imageposition = g.viewconfig.collapsibleviewconfig.imageposition = q.collapsibleviewconfig.imagePosition;
            g.tabnamealignment = g.viewconfig.collapsibleviewconfig.tabnamealignment = q.collapsibleviewconfig.tabNameAlignment;
            g.toggletabs = g.viewconfig.collapsibleviewconfig.toggletabs = q.collapsibleviewconfig.toggleTabs
          }
          if (g.viewConfig.pageViewConfig) {
            var n = q.pageViewConfig;
            g.viewConfig.pageViewConfig = q.pageViewConfig;
            g.pageondotimage = n.pageOnDotImage;
            g.pageoffdotimage = n.pageOffDotImage;
            g.needpageindicator = n.needPageIndicator
          }
        }
        this.repaint(b, g);
        break;
      case "viewtype":
        var b = $KU.getElementById(g.pf + "_" + g.id);
        g.viewtype = q;
        if (g.viewconfig) {
          g.toggletabs = g.viewconfig.collapsibleviewconfig.toggletabs
        }
        this.repaint(b, g);
        break;
      case "headertemplatedata":
        var a = $KU.getElementById(g.pf + "_" + g.id + "_Div");
        if (a && g.headertemplate && q instanceof Object) {
          var r = g.headertemplate;
          var t = g.headertemplatedata;
          g.context = {};
          g.widgetsData = t;
          a.innerHTML = $KW.Utils.handleLayout(g, r, t)
        }
        break
    }
  },
  render: function(d, a) {
    var b = d.viewtype;
    var c = "";
    $KU.updateScrollFlag(d);
    if (b == "tabview" || b == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
      this.adjustActiveTabs(d);
      c = this.generateTabView(d, a)
    } else {
      if (d.toggletabs === true) {
        this.adjustActiveTabs(d);
        c = this.generateAccordionView(d, a)
      } else {
        c = this.generateCollapsibleView(d, a)
      }
    }
    return c
  },
  repaint: function(d, c) {
    if (d) {
      if (c.viewtype === "tabview" || c.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        d.innerHTML = $KW.TabPane.generateTabView(c, c.context, true);
        setTimeout(function() {
          $KW.TabPane.checkArrows(c.pf, c.id)
        }, 1);
        if (c.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          setTimeout(function() {
            $KW.touch.computeSnapWidths(c.pf, "Tabpane")
          }, 2);
          var b = document.getElementById(d.id + "_Body");
          var a = new $KW.touch.pageviewScroller(b, {
            widgetModel: c
          });
          $KG[b.id] = a;
          this.updatePageFooter(c)
        }
        $KW.TabPane.adjustFlexContainers(c)
      } else {
        if (c.viewtype === "collapsibleview" && c.toggletabs === "true") {
          d.innerHTML = $KW.TabPane.generateAccordionView(c, c.context, true);
          setTimeout(function() {
            $KW.TabPane.setTabsHeight(c.pf)
          }, 1)
        } else {
          d.innerHTML = $KW.TabPane.generateCollapsibleView(c, c.context, true);
          setTimeout(function() {
            $KW.TabPane.setTabsHeight(c.pf)
          }, 1)
        }
      }
    }
  },
  adjustFlexContainers: function(a) {
    $KU.needOptimization = false;
    $KW.Form.initializeFlexContainersInBox(a);
    $KU.needOptimization = true
  },
  generateTabView: function(p, b, k) {
    var o = "";
    var m = kony.model.getWidgetModel(p.pf, p.id);
    var d = $KW.skins.getBaseStyle(p, b);
    var q = $KW.skins.getPaddingSkin(p);
    var l = $KW.skins.getVisibilitySkin(p);
    var h = " ktabpaneid='" + p.id + "' kformname='" + p.pf + "' ";
    var g = p.pf + "_" + p.id;
    var c;
    var n = $KW.skins.getMarginSkin(p, b) + $KW.skins.getPaddingSkin(p);
    if (!k) {
      o += "<div id = '" + g + "' class='" + l + "' style='" + n + "' kformname='" + p.pf + "' kwidgettype='TabPane'>"
    }
    if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_BOTTOM) {
      if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        o += "<div id = '" + g + "_Body' style='position:relative' name='touchcontainer_Tabpane' class='kstripcontainer'>"
      } else {
        o += "<div id = '" + g + "_Body' style='position:relative'>"
      }
      if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        o += "<div id='imgs' class= 'kstrip' style='";
        if (kony.appinit.isIE) {
          o += "position:relative"
        }
        o += "'>"
      }
      for (var e = 0; e < p.children.length; e++) {
        var a = m[p.children[e]];
        p.context = b;
        o += this.generateTabViewBody(p, a, e, b)
      }
      o += "</div>";
      if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        o += "</div>"
      }
      o += "<div class='ktable kwt100' id = '" + g + "_Header' style='position:relative;table-layout:fixed;'>";
      o += "<div class='krow  kwt100'>";
      if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
        o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_L' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
      } else {
        o += "<div id = '" + g + "_L' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Left</div>"
      }
      o += "<div id = '" + g + "_C' class=' kwt96' style='overflow:hidden;margin:auto;' >";
      o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;white-space:nowrap;position:relative'>";
      for (var f = 0; f < p.children.length; f++) {
        var a = m[p.children[f]];
        o += this.generateTabViewLi(p, a, f)
      }
      o += "</ul>";
      o += "</div>";
      if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
        o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_R' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
      } else {
        o += "<div id = '" + g + "_R' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Right</div>"
      }
      o += "</div>";
      o += "</div>"
    } else {
      if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_LEFT) {
        o += "<div class='ktable kwt100' style='table-layout:fixed;'>";
        o += "<div class='krow kwt100'>";
        if (p.viewconfig.tabViewConfig.headerContainerWeight) {
          o += "<div class='kcell topcenteralign kwt" + p.viewconfig.tabViewConfig.headerContainerWeight + "'>"
        } else {
          o += "<div class='kcell topcenteralign kwt50'>"
        }
        if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
          o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_T' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
        } else {
          o += "<div id = '" + g + "_T' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Top</div>"
        }
        o += "<div id = '" + g + "_Header' class='kwt100' style='overflow:hidden;'>";
        o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;position:relative;'>";
        for (var f = 0; f < p.children.length; f++) {
          var a = m[p.children[f]];
          o += this.generateTabViewSide(p, a, f)
        }
        o += "</ul>";
        o += "</div>";
        if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
          o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_B' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
        } else {
          o += "<div id = '" + g + "_B' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Bottom</div>"
        }
        o += "</div>";
        if (p.viewconfig.tabViewConfig.headerContainerWeight) {
          o += "<div class='kcell kwt" + (100 - p.viewconfig.tabViewConfig.headerContainerWeight) + "'>"
        } else {
          o += "<div class='kcell kwt50'>"
        }
        o += "<div id = '" + g + "_Body'>";
        for (var e = 0; e < p.children.length; e++) {
          var a = m[p.children[e]];
          p.context = b;
          o += this.generateTabViewBody(p, a, e, b)
        }
        o += "</div>";
        o += "</div>";
        o += "</div>";
        o += "</div>"
      } else {
        if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_RIGHT) {
          o += "<div class='ktable kwt100' style='table-layout:fixed;'>";
          o += "<div class='krow kwt100'>";
          if (p.viewconfig.tabViewConfig.headerContainerWeight) {
            o += "<div class='kcell kwt" + (100 - p.viewconfig.tabViewConfig.headerContainerWeight) + "'>"
          } else {
            o += "<div class='kcell kwt50'>"
          }
          o += "<div id = '" + g + "_Body'>";
          for (var e = 0; e < p.children.length; e++) {
            var a = m[p.children[e]];
            p.context = b;
            o += this.generateTabViewBody(p, a, e, b)
          }
          o += "</div>";
          o += "</div>";
          if (p.viewconfig.tabViewConfig.headerContainerWeight) {
            o += "<div class='kcell topcenteralign kwt" + p.viewconfig.tabViewConfig.headerContainerWeight + "'>"
          } else {
            o += "<div class='kcell topcenteralign kwt50'>"
          }
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_T' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_T' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Top</div>"
          }
          o += "<div id = '" + g + "_Header' class='kwt100' style='overflow:hidden;'>";
          o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;position:relative;'>";
          for (var f = 0; f < p.children.length; f++) {
            var a = m[p.children[f]];
            o += this.generateTabViewSide(p, a, f)
          }
          o += "</ul>";
          o += "</div>";
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_B' class='kwt100 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_B' class='kwt100 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Bottom</div>"
          }
          o += "</div>";
          o += "</div>";
          o += "</div>"
        } else {
          if (p.viewtype !== constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "<div class='ktable kwt100' id = '" + g + "_Header' style='position:relative;table-layout:fixed;'>"
          } else {
            o += "<div class='ktable kwt100' id = '" + g + "_Header' style='position:relative;table-layout:fixed;display:none'>"
          }
          o += "<div class='krow  kwt100'>";
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image1) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_L' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image1) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_L' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Left</div>"
          }
          o += "<div id = '" + g + "_C' class='kwt96' style='overflow:hidden;margin:auto' >";
          o += "<ul id = '" + g + "_Ul' class='middleleftalign' style='padding-bottom: 3px;white-space:nowrap;position:relative'>";
          for (var f = 0; f < p.children.length; f++) {
            var a = m[p.children[f]];
            o += this.generateTabViewLi(p, a, f)
          }
          o += "</ul>";
          o += "</div>";
          if (p.viewconfig.tabViewConfig && p.viewconfig.tabViewConfig.image2) {
            o += "<div style='text-align: center;vertical-align: middle;' id = '" + g + "_R' class='kcell kwt2 hide' kwidgettype='TabArrow'><img src='" + $KU.getImageURL(p.viewconfig.tabViewConfig.image2) + "' /></div>"
          } else {
            o += "<div id = '" + g + "_R' class='kcell kwt2 hide' style='background-color:red;'" + h + " kwidgettype='TabArrow'>Right</div>"
          }
          o += "</div>";
          o += "</div>";
          if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "<div id = '" + g + "_Body' style='position:relative' name='touchcontainer_Tabpane' " + h + " class='kstripcontainer'>"
          } else {
            o += "<div id = '" + g + "_Body' style='position:relative'>"
          }
          if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "<div id='imgs' class= 'kstrip' style='";
            if (kony.appinit.isIE) {
              o += "position:relative"
            }
            o += "'>"
          }
          for (var e = 0; e < p.children.length; e++) {
            var a = m[p.children[e]];
            p.context = b;
            o += this.generateTabViewBody(p, a, e, b)
          }
          o += "</div>";
          if (p.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            o += "</div>";
            o += this.generatePageFooter(p)
          }
        }
      }
    }
    if (!k) {
      o += "</div>"
    }
    return o
  },
  generateTabViewLi: function(i, a, f) {
    var e = i.activeskin || "";
    var g = i.inactiveskin || "";
    var d = " ktabpaneid='" + i.id + "' kformname='" + i.pf + "' ";
    var h = "";
    var c = a.pf + "_" + a.id;
    var j = i.viewconfig.tabViewConfig && i.viewconfig.tabViewConfig.headerContainerWeight;
    h += "<li id = '" + c + "_Li' index=" + f + " style='display:inline-block;vertical-align:bottom;" + (j ? ("width:" + j + "%") : a.header ? "width:25%" : "") + "' class='" + (f != (i.activetab - IndexJL) ? g : e) + "li' kwidgettype='Tab'" + d + ">";
    h += "<div id = '" + c + "_A' style='' index=" + f + " kwidgettype='Tab' tabHeader='true'" + d + "href='#' class='" + (f != (i.activetab - IndexJL) ? g : e) + ((g || e) ? "lia'" : "'") + ">";
    var b = {};
    if (a.header) {
      b.tabpaneID = i.id;
      b.tabID = a.id;
      a.header.pf = a.pf;
      b.renderingTabHeader = true;
      b.pf = a.pf;
      b.topLevelBox = true;
      this.setPfForTabHeader(a.header, b)
    }
    if (a.header) {
      h += $KW[a.header.wType].render(a.header, b)
    } else {
      if (a.image) {
        h += "<img src='" + $KU.getImageURL(a.image) + "' />"
      }
      if (a.tabname) {
        h += kony.appinit.isIE ? "<div kwidgettype " : "<div ";
        if (a.image) {
          h += " style='display:inline-block' "
        }
        h += ">" + a.tabname + "</div>"
      }
    }
    h += "</div>";
    h += "</li>";
    return h
  },
  generateTabViewSide: function(i, a, f) {
    var e = i.activeskin || "";
    var g = i.inactiveskin || "";
    var d = " ktabpaneid='" + i.id + "' kformname='" + i.pf + "' ";
    var h = "";
    var c = a.pf + "_" + a.id;
    var b = {};
    if (a.header) {
      b.tabpaneID = i.id;
      b.tabID = a.id;
      a.header.pf = a.pf;
      b.renderingTabHeader = true;
      b.pf = a.pf;
      b.topLevelBox = true;
      this.setPfForTabHeader(a.header, b)
    }
    h += "<li id = '" + c + "_Li' index=" + f + " style='display:inline' class='" + (f != (i.activetab - IndexJL) ? g : e) + "li' kwidgettype='Tab'" + d + ">";
    h += "<div id = '" + c + "_A' index=" + f + " style='display:block' kwidgettype='Tab' tabHeader='true'" + d + "href='#' class='" + (f != (i.activetab - IndexJL) ? g : e) + ((g || e) ? "lia'" : "'") + ">";
    if (a.header) {
      h += $KW[a.header.wType].render(a.header, b)
    } else {
      if (a.image) {
        h += "<div style='float:left' ><img src='" + $KU.getImageURL(a.image) + "' /></div>"
      }
      if (a.tabname) {
        h += "<div>" + a.tabname + "</div>"
      }
    }
    h += "</div>";
    h += "</li>";
    return h
  },
  generateTabViewBody: function(g, a, b, d) {
    var f = "";
    var e = " ktabpaneid='" + g.id + "' kformname='" + g.pf + "' ";
    var c = $KW.skins.getMarginSkin(a, d) + $KW.skins.getPaddingSkin(a);
    tabId = a.pf + "_" + a.id;
    f += "<div id = '" + tabId + "_Body' kwidgettype='tabviewTabBody'" + e;
    if (b != (g.activetab - IndexJL)) {
      if (g.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        f += "class='show " + ((a.skin) ? a.skin : "") + "' activebody='0' "
      } else {
        f += "class='hide " + ((a.skin) ? a.skin : "") + "' activebody='0' "
      }
    } else {
      f += "class='show " + ((a.skin) ? a.skin : "") + "' activebody='1' "
    }
    f += " style='" + c + "'>";
    f += this.renderTab(g, a, d);
    f += "</div>";
    return f
  },
  generateCollapsibleView: function(k, b, e) {
    var g = kony.model.getWidgetModel(k.pf, k.id);
    var j = "";
    var c = $KW.skins.getMarginSkin(k, b);
    var l = $KW.skins.getPaddingSkin(k);
    var f = $KW.skins.getVisibilitySkin(k);
    if (!e) {
      var h = $KW.skins.getMarginSkin(k, b) + $KW.skins.getPaddingSkin(k);
      j += "<div class='" + f + "' style='" + h + "' id = '" + k.pf + "_" + k.id + "' kformname='" + k.pf + "' kwidgettype='TabPane'>"
    }
    k.context = b;
    for (var d = 0; d < k.children.length; d++) {
      var a = g[k.children[d]];
      k.context = b;
      j += this.generateCollapsibleViewTab(k, a, d, b)
    }
    if (!e) {
      j += "</div>"
    }
    return j
  },
  generateCollapsibleViewTab: function(l, a, h, b) {
    var k = "";
    var f = l.activeskin || "";
    var i = l.inactiveskin || "";
    var e = " ktabpaneid='" + l.id + "' kformname='" + l.pf + "' ";
    var n = l.collapsedimage ? $KU.getImageURL(l.collapsedimage) : "";
    var d = l.expandedimage ? $KU.getImageURL(l.expandedimage) : "";
    var j = $KW.skins.getMarginSkin(a, b) + $KW.skins.getPaddingSkin(a);
    var m = this.isActiveTab(l, a);
    var c = a.pf + "_" + a.id;
    k += "<div id = '" + c + "_Tab'>";
    k += "<div id = '" + c + "_Header' index=" + h + e + "kwidgettype='Tab' tabHeader='true' class='" + (m ? f : i) + "'" + (m ? " active='1'" : " active='0'") + ">";
    if (a.header) {
      var g = {};
      g.tabpaneID = l.id;
      g.tabID = a.id;
      a.header.pf = a.pf;
      g.renderingTabHeader = true;
      g.pf = a.pf;
      g.topLevelBox = true;
      this.setPfForTabHeader(a.header, g);
      k += $KW[a.header.wType].render(a.header, g)
    } else {
      if (kony.appinit.isIE7) {
        k += "<table class = 'ktable kwt100'>";
        k += "<tr class = 'krow kwt100' >"
      } else {
        k += "<div class = 'ktable kwt100' style='text-decoration: inherit;table-layout: auto;'>";
        k += "<div class = 'krow kwt100' >"
      }
      if (l.imageposition == "left") {
        k += kony.appinit.isIE7 ? "<td class = 'kwt2 middlecenteralign' >" : "<div class = 'kcell kwt2 middlecenteralign' >";
        k += "<img style='vertical-align: middle' ";
        if (!m) {
          if (l.collapsedimage) {
            k += "src='" + n + "'"
          }
        } else {
          if (l.expandedimage) {
            k += "src='" + d + "'"
          }
        }
        k += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        k += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      k += kony.appinit.isIE7 ? "<td class = 'kwt98 middleleftalign' >" : "<div class = 'kcell kwt98 middleleftalign' >";
      if (a.image) {
        k += "<div style='float:left'><img src='" + $KU.getImageURL(a.image) + "' /></div>"
      }
      k += "<div id = '" + c + "_Div' kwidgettype='Tab' " + e;
      if (l.tabnamealignment) {
        k += "style='text-align:" + l.tabnamealignment + "' "
      }
      k += " >";
      if (a.tabname) {
        k += a.tabname
      }
      k += "</div>";
      k += kony.appinit.isIE7 ? "</td>" : "</div>";
      if (l.imageposition === "right") {
        k += kony.appinit.isIE7 ? "<td class = 'kwt2 middlecenteralign' >" : "<div class = 'kcell kwt2 middlecenteralign' >";
        k += "<img style='vertical-align: middle' ";
        if (m) {
          if (l.collapsedimage) {
            k += "src='" + n + "'"
          }
        } else {
          if (l.expandedimage) {
            k += "src='" + d + "'"
          }
        }
        k += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        k += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      k += kony.appinit.isIE7 ? "</tr></table>" : "</div></div>"
    }
    k += "</div>";
    k += "<div id = '" + c + "_Body' class='" + (m ? "tabactivebody " : "tabinactivebody ") + (a.skin || "") + "' kwidgettype='collapsibleTabBody' style='display:none;" + j + "' >";
    l.context = b;
    k += this.renderTab(l, a, b);
    k += "</div>";
    k += "</div>";
    return k
  },
  isActiveTab: function(d, a) {
    if (!d.activetabs) {
      return false
    }
    for (var c = 0; c < d.children.length; c++) {
      if (d.children[c] == a.id) {
        break
      }
    }
    for (var b = IndexJL; b < d.activetabs.length; b++) {
      if (d.activetabs[b] == (c + IndexJL)) {
        return true
      }
    }
    return false
  },
  generateAccordionView: function(p, b, j) {
    var m = kony.model.getWidgetModel(p.pf, p.id);
    var o = "";
    var d = $KW.skins.getMarginSkin(p, b);
    var q = $KW.skins.getPaddingSkin(p);
    var k = $KW.skins.getVisibilitySkin(p);
    var n = $KW.skins.getMarginSkin(p, b) + $KW.skins.getPaddingSkin(p);
    if (!j) {
      o += "<div class='" + k + "' style='" + n + "' id = '" + p.pf + "_" + p.id + "' kformname='" + p.pf + "' kwidgettype='TabPane'>"
    }
    var h = p.activeskin || "";
    var l = p.inactiveskin || "";
    var c;
    var g = " ktabpaneid='" + p.id + "' kformname='" + p.pf + "' ";
    var r = p.collapsedimage ? $KU.getImageURL(p.collapsedimage) : "";
    var e = p.expandedimage ? $KU.getImageURL(p.expandedimage) : "";
    p.context = b;
    for (var f = 0; f < p.children.length; f++) {
      var a = m[p.children[f]];
      o += this.generateAccordionViewTab(p, a, f, b)
    }
    if (!j) {
      o += "</div>"
    }
    return o
  },
  generateAccordionViewTab: function(l, a, h, b) {
    var c = a.pf + "_" + a.id;
    var e = " ktabpaneid='" + l.id + "' kformname='" + l.pf + "' ";
    var f = l.activeskin || "";
    var i = l.inactiveskin || "";
    var m = l.collapsedimage ? $KU.getImageURL(l.collapsedimage) : "";
    var d = l.expandedimage ? $KU.getImageURL(l.expandedimage) : "";
    var k = $KW.skins.getMarginSkin(a, b) + $KW.skins.getPaddingSkin(a);
    var j = "";
    j += "<div id = '" + c + "_Tab'>";
    j += "<div id = '" + c + "_Header' index=" + h + e + "kwidgettype='Tab' tabHeader='true' class='" + ((h == (l.activetab - IndexJL)) ? f + "' active='1'>" : i + "' active='0'>");
    if (a.header) {
      var g = {};
      g.tabpaneID = l.id;
      g.tabID = a.id;
      a.header.pf = a.pf;
      g.renderingTabHeader = true;
      g.pf = a.pf;
      g.topLevelBox = true;
      this.setPfForTabHeader(a.header, g);
      j += $KW[a.header.wType].render(a.header, g)
    } else {
      if (kony.appinit.isIE7) {
        j += "<table class = 'ktable kwt100'>";
        j += "<tr class = 'kwt100' >"
      } else {
        j += "<div class = 'ktable kwt100' style='text-decoration: inherit;table-layout: auto;'>";
        j += "<div class = 'krow kwt100' >"
      }
      if (l.imageposition === "left") {
        j += kony.appinit.isIE7 ? "<td class = 'kwt2 middleleftalign' >" : "<div class = 'kcell kwt2 middleleftalign' >";
        j += "<img ";
        if (h == (l.activetab - IndexJL)) {
          if (l.collapsedimage) {
            j += "src='" + m + "'"
          }
        } else {
          if (l.expandedimage) {
            j += "src='" + d + "'"
          }
        }
        j += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        j += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      j += kony.appinit.isIE7 ? "<td class = 'kwt98 middleleftalign' >" : "<div class = 'kcell kwt98 middleleftalign' >";
      if (a.image) {
        j += "<div style='float:left'><img src='" + $KU.getImageURL(a.image) + "' /></div>"
      }
      j += "<div id = '" + c + "_Div' kwidgettype='Tab'" + e;
      if (l.tabnamealignment) {
        j += "style='text-align:" + l.tabnamealignment + "' "
      }
      j += " >";
      if (a.tabname) {
        j += a.tabname
      }
      j += "</div>";
      j += kony.appinit.isIE7 ? "</td>" : "</div>";
      if (l.imageposition === "right") {
        j += kony.appinit.isIE7 ? "<td class = 'kwt2 middleleftalign' >" : "<div class = 'kcell kwt2 middleleftalign' >";
        j += "<img ";
        if (h == (l.activetab - IndexJL)) {
          if (l.collapsedimage) {
            j += "src='" + m + "'"
          }
        } else {
          if (l.expandedimage) {
            j += "src='" + d + "'"
          }
        }
        j += " id='" + c + "_Img' kwidgettype='Tab'" + e + "/>";
        j += kony.appinit.isIE7 ? "</td>" : "</div>"
      }
      j += kony.appinit.isIE7 ? "</tr></table>" : "</div></div>"
    }
    j += "</div>";
    j += "<div id = '" + c + "_Body' class='" + (h == (l.activetab - IndexJL) ? "tabactivebody " : "tabinactivebody ") + (a.skin || "") + "' kwidgettype='collapsibleTabBody' style='display:none;" + k + "' >";
    j += this.renderTab(l, a, b);
    j += "</div>";
    j += "</div>";
    return j
  },
  renderTab: function(f, a, c) {
    var d = "";
    c = c || {};
    c.tabpaneID = f.id;
    if (a.wType == "FlexContainer") {
      d = $KW.FlexContainer.render(a, c)
    } else {
      if (a.children) {
        if (a.layouttype == constants.CONTAINER_LAYOUT_GRID) {
          d = $KW.Grid.render(a, c)
        } else {
          for (var b = 0; b < a.children.length; b++) {
            var e = f[a.children[b]];
            c.topLevelBox = true;
            d += $KW[e.wType].render(e, c);
            c.topLevelBox = false
          }
        }
      }
    }
    c.tabpaneID = "";
    return d
  },
  setTabsHeight: function(j) {
    var e = document.querySelectorAll("#" + j + " div[kwidgettype='tabviewTabBody']");
    var b;
    if (e) {
      for (var f = 0; f < e.length; f++) {
        var l = e[f];
        var h = l.getAttribute("id").split("_")[1];
        var k = l.getAttribute("ktabpaneid");
        var g = l.getAttribute("kformname");
        var a = kony.model.getWidgetModel(g, h, k);
        this.checkArrows(g, k);
        if (l.getAttribute("activebody") === "1") {
          b = $KU.returnEventReference(a.oninit);
          a.oninit && b.call(a, a);
          if (a.oninit) {
            delete a.oninit
          }
        }
      }
    }
    var d = document.querySelectorAll("#" + j + " div[kwidgettype='collapsibleTabBody']");
    if (d) {
      for (var f = 0; f < d.length; f++) {
        var c = d[f];
        var h = c.parentNode.getAttribute("id").split("_")[1];
        var k = c.previousSibling.getAttribute("ktabpaneid");
        var g = c.previousSibling.getAttribute("kformname");
        var a = kony.model.getWidgetModel(g, h, k);
        if (c.previousSibling.getAttribute("active") === "1") {
          b = $KU.returnEventReference(a.oninit);
          a.oninit && b.call(a, a);
          $KW.TabPane.expandTab(a, c)
        } else {
          $KW.TabPane.collapseTab(a, c)
        }
        if (c.previousSibling.getAttribute("active") === "1") {
          if (a.oninit) {
            delete a.oninit
          }
        }
      }
    }
  },
  toggleDisable: function(f) {
    var b = document.querySelectorAll("#" + f + " div[kwidgettype='TabPane']");
    for (var e = 0; e < b.length; e++) {
      var g = $KU.getModelByNode(b[e]);
      g.disabled != undefined && $KW.Widget.setenabled(g, (g.disabled == true ? false : true));
      var d = g.children;
      if (d) {
        for (var c = 0; c < d.length; c++) {
          var a = window[g.pf][g.id][d[c]];
          (a && a.disabled != undefined) && $KW.Widget.setenabled(a, (a.disabled == true ? false : true))
        }
      }
    }
  },
  collapseTab: function(a, b) {
    b.style.height = b.scrollHeight + "px";
    var c = a.transDuration ? parseInt(a.transDuration) : $KW.TabPane.ANIMATION_DELAY;
    setTimeout(function() {
      b.style.overflow = "hidden";
      if (kony.appinit.useTransition) {
        b.style[vendor + "Transition"] = "height " + c + "ms ease";
        b.style.height = "0px"
      } else {
        $("#" + b.id).animate({
          height: "0px"
        }, c)
      }
    }, 1);
    setTimeout(function() {
      $KU.addClassName(b, "hide")
    }, c)
  },
  expandTab: function(a, b) {
    b.style.display = "block";
    b.style.overflow = "hidden";
    $KU.removeClassName(b, "hide");
    $KW.TabPane.adjustFlexContainers(a.parent);
    var c = a.transDuration ? parseInt(a.transDuration) : $KW.TabPane.ANIMATION_DELAY;
    if (kony.appinit.useTransition) {
      b.style[vendor + "Transition"] = "height " + c + "ms ease";
      b.style.height = b.scrollHeight + "px"
    } else {
      $("#" + b.id).animate({
        height: b.scrollHeight + "px"
      }, c)
    }
    setTimeout(function() {
      $KW.TabPane.setTabsHeightAuto(b)
    }, c + 100)
  },
  setTabsHeightAuto: function(a) {
    a.style[vendor + "Transition"] = "";
    a.style.height = "auto"
  },
  addTab: function(f, a, d, b, c, e) {
    f.addTab(a, d, b, c, e)
  },
  addChildTab: function(f, a) {
    var b = $KU.getNodeByModel(f);
    var d = a.pf + "_" + a.id + "_Li";
    var e = $KU.getElementById(d);
    if (b && !e) {
      var c = f.children.length;
      this.addChildTabAt(f, a, c)
    }
  },
  removeTabAt: function(k, h, d) {
    h = parseInt(h);
    if (h >= IndexJL && !d) {
      h = h - IndexJL
    }
    if (h >= 0 && h <= k.children.length) {
      var b = k[k.children[h]];
      if (b) {
        _konyConstNS.ContainerWidget.prototype.remove.call(k, b)
      }
      if (k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW || k.viewtype == "tabview" || (k.toggletabs && (k.toggletabs === true))) {
        if (k.activetab == (h + IndexJL)) {
          k.activetab = IndexJL;
          k.activetabs[IndexJL] = k.activetab;
          this.updateView(k, "activetab", k.activetab, k.activetab);
          if (k.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            return
          }
        }
        if (k.activetab > (h + IndexJL)) {
          k.activetab -= 1;
          k.activetabs[IndexJL] = k.activetab
        }
      } else {
        var e = $KU.inArray(k.activetabs, parseInt(h) + IndexJL);
        if (e[0]) {
          k.activetabs.splice(e[1], 1)
        }
        if (k.activetabs.length == IndexJL) {
          if (IndexJL) {
            k.activetabs = [null, 1]
          } else {
            k.activetabs = [0]
          }
          this.updateView(k, "activetabs", k.activetabs, k.activetabs);
          return
        } else {
          for (var f = IndexJL; f < k.activetabs.length; f++) {
            var l = k.activetabs[f];
            if (l > h) {
              k.activetabs[f] = l - 1
            }
          }
        }
      }
      if (k.viewtype == "tabview" || k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        var g = $KU.getNodeByModel(k);
        if (g) {
          var j = $KU.getElementById(k.pf + "_" + k.id + "_Ul");
          if (j.children[h]) {
            j.removeChild(j.children[h])
          }
          var c = $KU.getElementById(k.pf + "_" + k.id + "_Body");
          if (k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
            c = c.children[0]
          }
          if (c.children[h]) {
            c.removeChild(c.children[h])
          }
        }
        this.checkArrows(k.pf, k.id);
        if (k.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          this.updatePageFooter(k)
        }
      } else {
        var a = $KU.getElementById(b.pf + "_" + b.id + "_Tab");
        if (a) {
          a.parentNode.removeChild(a)
        }
      }
      this.adjustTabIndex(k);
      $KW.TabPane.initializeView(k.pf)
    }
  },
  removeTabById: function(e, a) {
    if (a && a.id) {
      a = a.id
    }
    if (e.viewtype == "tabview" || e.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
      var d = $KU.getElementById(e.pf + "_" + a + "_Li");
      if (d) {
        var b = d.getAttribute("index");
        $KW.TabPane.removeTabAt(e, b, true)
      }
    } else {
      var c = $KU.getElementById(e.pf + "_" + a + "_Header");
      if (c) {
        var b = c.getAttribute("index");
        $KW.TabPane.removeTabAt(e, b, true)
      }
    }
  },
  setTabName: function(f, c, d) {
    var a = f[c];
    if (a) {
      a.tabname = d;
      var c = f.pf + "_" + c;
      if (f.viewtype == "tabview" || f.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        var b = $KU.getElementById(c + "_A");
        if (b) {
          b.childNodes[0].innerText = d
        }
      } else {
        if (f.viewtype === "collapsibleview") {
          var e = $KU.getElementById(c + "_Div");
          if (e) {
            e.innerText = d
          }
        }
      }
    }
  },
  addTabAt: function(f, b, e, c, d, a) {
    f.addTabAt(b, e, c, d, a)
  },
  addChildTabAt: function(o, a, e) {
    e = parseInt(e);
    var k = $KU.getNodeByModel(o);
    if (e < IndexJL) {
      e = IndexJL
    }
    if (e >= o.children.length) {
      e = o.children.length - 1 + IndexJL
    }
    if (o.viewtype == "tabview" || o.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
      var t = a.pf + "_" + a.id + "_Li";
      var q = $KU.getElementById(t);
      if (k && !q) {
        var u = a.pf + "_" + a.id;
        var b = "";
        var c = o.activeskin || "";
        var n = o.inactiveskin || "";
        var p = " ktabpaneid='" + o.id + "' kformname='" + o.pf + "'";
        var s = $KU.getElementById(o.pf + "_" + o.id + "_Ul");
        var g = $KU.getElementById(o.pf + "_" + o.id + "_Body");
        if (o.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          g = g.children[0]
        }
        if (e < o.activetab) {
          o.activetab += 1;
          o.activetabs[IndexJL] = o.activetab
        } else {
          if (e == o.activetab) {
            if (s.childNodes.length > 0) {
              var j = s.childNodes[e];
              var f = s.childNodes[e].childNodes[0];
              var v = g.childNodes[e];
              $KU.removeClassName(j, o.activeskin + "li");
              $KU.addClassName(j, o.inactiveskin + "li");
              $KU.removeClassName(f, o.activeskin + "lia");
              $KU.addClassName(f, o.inactiveskin + "lia");
              $KU.removeClassName(v, "show");
              $KU.addClassName(v, "hide");
              v.setAttribute("activebody", "0")
            }
          }
        }
        if (o.viewconfig.tabViewConfig && (o.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_LEFT || o.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_RIGHT)) {
          b = this.generateTabViewSide(o, a, e)
        } else {
          b = this.generateTabViewLi(o, a, e)
        }
        var d = document.createElement("div");
        d.innerHTML = b;
        if (s.children[e - IndexJL]) {
          s.insertBefore(d.children[0], s.children[e - IndexJL])
        } else {
          s.appendChild(d.children[0])
        }
        b = this.generateTabViewBody(o, a, e, o.context);
        d = document.createElement("div");
        d.innerHTML = b;
        if (g.children[e - IndexJL]) {
          g.insertBefore(d.children[0], g.children[e - IndexJL])
        } else {
          g.appendChild(d.children[0])
        }
        this.checkArrows(o.pf, o.id);
        if (o.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          this.updatePageFooter(o)
        }
      }
    } else {
      if (o.viewtype === "collapsibleview") {
        var l = $KU.getElementById(a.pf + "_" + a.id + "_Tab");
        if (k && !l) {
          if (o.toggletabs === false) {
            b = this.generateCollapsibleViewTab(o, a, e, o.context)
          } else {
            b = this.generateAccordionViewTab(o, a, e, o.context)
          }
          d = document.createElement("div");
          d.innerHTML = b;
          var h = $KU.getNodeByModel(o);
          if (h.children[e - IndexJL]) {
            h.insertBefore(d.children[0], h.children[e - IndexJL])
          } else {
            h.appendChild(d.children[0])
          }
          if (o.toggletabs) {
            l = $KU.getElementById(a.pf + "_" + a.id + "_Tab");
            this.collapseTab(a, l.children[1])
          }
          for (var m = IndexJL; m < o.activetabs.length; m++) {
            var r = o.activetabs[m];
            if (r >= e) {
              o.activetabs[m] = r + 1
            }
          }
          o.activetab = o.activetabs[IndexJL]
        }
      }
    }
    this.adjustTabIndex(o);
    k && $KW.Utils.initializeNewWidgets(a.ownchildrenref);
    $KW.TabPane.initializeView(o.pf)
  },
  adjustTabIndex: function(g) {
    var a = $KU.getNodeByModel(g);
    if (a) {
      if (g.viewtype == "tabview" || g.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        var b = $KU.getElementById(g.pf + "_" + g.id + "_Ul");
        for (var e = 0; e < b.children.length; e++) {
          var d = b.children[e];
          d.setAttribute("index", e);
          d.children[0].setAttribute("index", e)
        }
      } else {
        for (var c = 0; c < a.children.length; c++) {
          var f = a.children[c];
          f.children[0].setAttribute("index", c)
        }
      }
    }
  },
  eventHandler: function(w, C, a, r) {
    var B = C.getAttribute("id");
    var h = C.getAttribute("ktabpaneid");
    var l = C.getAttribute("kformname");
    var n = B.split("_");
    var u = n[1];
    var f = kony.model.getWidgetModel(l, u, h);
    var c = f.transDuration ? parseInt(f.transDuration) : $KW.TabPane.ANIMATION_DELAY;
    var z = kony.model.getWidgetModel(l, h);
    var v = $KU.returnEventReference(f.oninit);
    var d = false;
    if (f.oninit) {
      v.call(f, f)
    }
    var e = $KU.getElementById(n[0] + "_" + u + "_Body");
    var m = $KU.getElementById(n[0] + "_" + u + "_Header");
    var b = $KU.getElementById(n[0] + "_" + u + "_Img");
    var g = $KU.getElementById(n[0] + "_" + u + "_Li");
    if (z.viewtype === "collapsibleview" && z.toggletabs === false) {
      if (e.style.height === "auto") {
        $KW.TabPane.collapseTab(f, e);
        if (z.inactiveskin) {
          setTimeout(function() {
            if (z.inactiveskin) {
              m.className = z.inactiveskin
            }
          }, c)
        }
        m.setAttribute("active", "0");
        var o = m.getAttribute("index");
        z.activetabs = z.activetabs || [];
        var k = $KU.inArray(z.activetabs, parseInt(o) + IndexJL);
        if (k[0]) {
          z.activetabs.splice(k[1], 1)
        }
        if (z.expandedimage && b) {
          setTimeout(function() {
            b.src = $KU.getImageURL(z.expandedimage)
          }, c)
        }
      } else {
        d = true;
        z.activetabs = z.activetabs || [];
        var o = m.getAttribute("index");
        var k = $KU.inArray(z.activeTabs, parseInt(o) + IndexJL);
        if (!k[0]) {
          z.activetabs.push(parseInt(o) + IndexJL);
          if (IndexJL) {
            $KI.table.sort(z.activetabs)
          } else {
            z.activetabs.sort()
          }
        }
        e.style.display = "block";
        $KW.TabPane.expandTab(f, e);
        if (z.activeskin) {
          m.className = z.activeskin
        }
        m.setAttribute("active", "1");
        if (z.collapsedimage && b) {
          b.src = $KU.getImageURL(z.collapsedimage)
        }
      }
    } else {
      if (z.viewtype === "tabview" || z.viewtype === constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
        $KW.TabPane.changeActiveTabSkin(z, u);
        if (z.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          var A = $KU.getElementById(z.pf + "_" + z.id + "_Body").children[0];
          var p = z.swipeContext;
          p.currentPage = g.getAttribute("index") * 1;
          $KW.touch.scrollImages(A, p.imageWidth * p.currentPage, $KU.swipeDuration, false, {
            tabPaneModel: z,
            tabID: u,
            tabArray: n
          })
        }
      } else {
        if (z.viewtype === "collapsibleview" && z.toggletabs === true) {
          var y = m.getAttribute("active");
          for (var x = 0; x < z.children.length; x++) {
            var q = $KU.getElementById(n[0] + "_" + z.children[x] + "_Body");
            var t = $KU.getElementById(n[0] + "_" + z.children[x] + "_Header");
            var s = $KU.getElementById(n[0] + "_" + z.children[x] + "_Img");
            if (z.children[x] === u) {
              if (e.style.height === "0px") {
                if (z.activetab == 0) {
                  z.activetab = x + IndexJL;
                  z.activetabs[IndexJL] = z.activetab
                }
                d = true;
                $KW.TabPane.expandTab(f, e);
                if (z.activeskin) {
                  m.className = z.activeskin
                }
                m.setAttribute("active", "1");
                if (z.collapsedimage && b) {
                  b.src = $KU.getImageURL(z.collapsedimage)
                }
                z.activetab = x + IndexJL;
                z.activetabs = IndexJL ? [null, z.activetab] : [z.activetab]
              } else {
                $KW.TabPane.collapseTab(f, e);
                if (z.inactiveskin) {
                  setTimeout(function() {
                    m.className = z.inactiveskin;
                    m.setAttribute("active", "0")
                  }, c)
                }
                if (z.expandedimage && b) {
                  setTimeout(function() {
                    b.src = $KU.getImageURL(z.expandedimage)
                  }, c)
                }
                z.activetab = null;
                z.activetabs = null
              }
            } else {
              if (q.style.height !== "0px") {
                q.style.display = "block";
                $KW.TabPane.collapseTab(f, q);
                if (z.inactiveskin) {
                  t.className = z.inactiveskin
                }
                if (z.expandedimage && b) {
                  s.src = $KU.getImageURL(z.expandedimage)
                }
                t.setAttribute("active", "0")
              }
            }
          }
        }
      }
    }
    if (f.oninit) {
      delete f.oninit
    }
    $KW.Utils.reinitializeWidgets(z);
    var j = $KU.returnEventReference(z.onclick || z.ontabclick);
    if ((r == true || typeof r == "undefined") && j) {
      j.call(f, f, z.activetab, d);
      $KU.onEventHandler(f)
    }
    if ($KW.Map && $KW.Map.map && google) {
      $KW.Map.setMapsHeight(z.pf);
      google.maps.event.trigger($KW.Map.map, "resize")
    }
  },
  adjustActiveTabs: function(b) {
    if (!b.activetabs) {
      return
    }
    var a = IndexJL ? [null] : [];
    a.push(b.activetabs[IndexJL]);
    b.activetabs = a
  },
  changeActiveTabSkin: function(f, b) {
    for (var c = 0; c < f.children.length; c++) {
      var e = $KU.getElementById(f.pf + "_" + f.children[c] + "_Body");
      var d = $KU.getElementById(f.pf + "_" + f.children[c] + "_Li");
      var a = $KU.getElementById(f.pf + "_" + f.children[c] + "_A");
      if (f.children[c] === b) {
        if (f.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          e.className = "show " + ((f[f.children[c]].skin) ? f[f.children[c]].skin : "")
        }
        if (f.activeskin) {
          $KU.removeClassName(d, f.inactiveskin + "li");
          $KU.removeClassName(a, f.inactiveskin + "lia");
          $KU.addClassName(d, f.activeskin + "li");
          $KU.addClassName(a, f.activeskin + "lia");
          e.setAttribute("activebody", "1")
        }
        f.activetab = c + IndexJL;
        f.activetabs[IndexJL] = f.activetab
      } else {
        if (f.viewtype != constants.TABPANE_VIEW_TYPE_PAGEVIEW) {
          e.className = "hide " + ((f[f.children[c]].skin) ? f[f.children[c]].skin : "")
        }
        e.setAttribute("activebody", "0");
        $KU.removeClassName(d, f.activeskin + "li");
        $KU.removeClassName(a, f.activeskin + "lia");
        $KU.addClassName(d, f.inactiveskin + "li");
        $KU.addClassName(a, f.inactiveskin + "lia")
      }
      $KW.TabPane.adjustFlexContainers(f)
    }
  },
  updateData: function(e, b, g, j, d, a) {
    if (g && j) {
      var h = b.getAttribute("kcontainerID");
      var c = g[h];
      var i = c.headertemplatedata;
      (a && i) && $KW.Utils.updateContainerMasterData(c, i, e, b);
      var f = false;
      if (d) {
        f = kony.events.executeBoxEvent(e)
      }
      this.eventHandler("", j, "", !f)
    }
  },
  eventHandlerArrow: function(k, s, a, j) {
    var c = s.getAttribute("ktabpaneid");
    var f = s.getAttribute("kformname");
    var m = kony.model.getWidgetModel(f, c);
    var o = s.getAttribute("id");
    var g = o.split("_");
    var q = g[2];
    var p = $KU.getElementById(g[0] + "_" + g[1] + "_Ul");
    if (p) {
      if (!p.style.left) {
        p.style.left = "0px"
      }
      if (!p.style.top) {
        p.style.top = "0px"
      }
      var b = p.style.left;
      var i = p.style.top;
      var d = parseInt(b.replace(/px/, ""), 10);
      var l = parseInt(i.replace(/px/, ""), 10);
      var e = Math.abs(p.scrollWidth - p.offsetWidth);
      var n = p.parentNode.offsetHeight;
      var h = p.parentNode.scrollHeight;
      if (kony.appinit.isIE) {
        h = p.scrollHeight
      }
      var r = Math.abs(h - n);
      if (q === "R" && d != -e) {
        if ((d - 50) <= -e) {
          p.style.left = -e + "px"
        } else {
          p.style.left = (d - 50) + "px"
        }
      }
      if (q === "L" && d != 0) {
        if ((d + 50) <= -50 && (d + 50) <= 0) {
          p.style.left = (d + 50) + "px"
        } else {
          p.style.left = "0px"
        }
      }
      if (q === "T" && l != 0) {
        if ((l + 50) <= -50 && (l + 50) <= 0) {
          p.style.top = (l + 50) + "px"
        } else {
          p.style.top = "0px"
        }
      }
      if (q === "B" && l != -r) {
        if ((l - 50) <= -r) {
          p.style.top = -r + "px"
        } else {
          p.style.top = (l - 50) + "px"
        }
      }
    }
  },
  checkArrows: function(f, l) {
    var k = kony.model.getWidgetModel(f, l);
    var c = $KU.getElementById(f + "_" + l + "_Ul");
    var j = $KU.getElementById(f + "_" + l + "_L");
    var g = $KU.getElementById(f + "_" + l + "_R");
    var a = $KU.getElementById(f + "_" + l + "_T");
    var i = $KU.getElementById(f + "_" + l + "_B");
    var e = c.parentNode;
    if (Math.abs(e.scrollWidth - e.offsetWidth) > 1) {
      if (j) {
        $KU.removeClassName(j, "hide")
      }
      if (g) {
        $KU.removeClassName(g, "hide")
      }
      $KU.addClassName(c.parentNode, "kwt96")
    } else {
      if (j) {
        $KU.addClassName(j, "hide")
      }
      if (g) {
        $KU.addClassName(g, "hide")
      }
      $KU.removeClassName(c.parentNode, "kwt96");
      c.style.left = "0px"
    }
    if (k.viewconfig.tabViewConfig && ((k.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_LEFT) || (k.viewconfig.tabViewConfig.headerPosition == constants.TAB_HEADER_POSITION_RIGHT))) {
      var d = $KU.getElementById(f + "_" + l + "_Body");
      c.parentNode.style.height = Math.ceil(d.offsetWidth * 0.15) + "px"
    }
    var h = c.parentNode.offsetHeight;
    var b = c.parentNode.scrollHeight;
    if (kony.appinit.isIE) {
      b = c.scrollHeight
    }
    if (b > h) {
      if (a) {
        $KU.removeClassName(a, "hide")
      }
      if (i) {
        $KU.removeClassName(i, "hide")
      }
    } else {
      if (a) {
        $KU.addClassName(a, "hide")
      }
      if (i) {
        $KU.addClassName(i, "hide")
      }
      c.style.top = "0px"
    }
  },
  setPfForTabHeader: function(c, b) {
    if (c && c.children) {
      for (var a = 0; a < c.children.length; a++) {
        c[c.children[a]].pf = b.pf;
        c[c.children[a]].tabId = b.tabID;
        if (c[c.children[a]].children) {
          this.setPfForTabHeader(c[c.children[a]], b)
        }
      }
    }
  },
  generatePageFooter: function(h) {
    var e = "";
    var f = "";
    var a = h.paginationconfig;
    var d = (a && a.hdistance) || 0;
    if (h.children.length > IndexJL) {
      var g = !d || (d == 0);
      var b = g ? "align='center'" : "style='text-align: left;'";
      if (h.needpageindicator) {
        e += "<div class='ktable kwt100 '  id='" + h.pf + "_" + h.id + "_footer' >"
      } else {
        e += "<div class='ktable kwt100 ' style='display:none' id='" + h.pf + "_" + h.id + "_footer' >"
      }
      e += "<div class='krow kwt100' " + b + "><div class='kcell'>";
      h.pageondotimage = h.pageondotimage || "whitedot.gif";
      h.pageoffdotimage = h.pageoffdotimage || "blackdot.gif";
      for (var c = IndexJL; c < h.children.length; c++) {
        f = (typeof h.activetab != "number" && c == IndexJL) ? h.pageondotimage : (h.activetab == c) ? h.pageondotimage : h.pageoffdotimage;
        e += "<span onclick='$KW.touch.navigationDotsHandler(this)' index='" + c + "'><img style='padding-left:4px' src='" + $KU.getImageURL(f) + "' /></span>"
      }
      e += "</div></div></div>"
    }
    return e
  },
  updatePageFooter: function(d) {
    var a = this.generatePageFooter(d);
    var c = document.createElement("div");
    var b = document.getElementById(d.pf + "_" + d.id + "_Body");
    c.innerHTML = a;
    b.parentNode.removeChild(b.nextSibling);
    b.parentNode.appendChild(c.children[0])
  },
  adjustFlexContainersInTab: function(b, a) {
    var d = a.querySelectorAll("div[tabHeader='true']");
    for (var c = 0; c < d.length; c++) {
      this.adjustFlexContainersInTabRows(d[c])
    }
  },
  adjustFlexContainersInTabRows: function(b) {
    var c = b.querySelector('div[kwidgettype="FlexContainer"]');
    if (c) {
      var a = $KU.getModelByNode(c);
      $KW.FlexContainer.forceLayout(a, c.parentNode)
    }
  }
};
$KW.Switch = {
  initialize: function() {
    kony.events.addEvent("click", "Switch", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Switch", this.adjustSwitchWidth)
  },
  initializeView: function(a) {
    this.adjustSwitchWidth(a, true);
    this.adjustSwitchHeight(a)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "selectedindex":
        this.adjustSwitch(e, d, "all 0.125s ease-in-out");
        break
    }
  },
  addA11YAttribute: function(a, b, c) {
    if (!a.accessibilityConfig || c) {
      if (a.leftsidetext && a.selectedIndex === 0) {
        b.setAttribute("aria-label", a.leftsidetext)
      } else {
        if (a.rightsidetext) {
          b.setAttribute("aria-label", a.rightsidetext)
        }
      }
    }
  },
  render: function(a, b) {
    var e = $KW.skins.getWidgetSkinList(a, b);
    var d = $KW.skins.getMarginSkin(a, b);
    var c = a.leftsidetext || "ON";
    var g = a.rightsidetext || "OFF";
    var h = "";
    if (a.accessibilityConfig == undefined) {
      if (a.leftsidetext && a.selectedIndex === 0) {
        h = " aria-label='" + a.leftsidetext + "' "
      } else {
        if (a.rightsidetext) {
          h = " aria-label='" + a.rightsidetext + "' "
        }
      }
    }
    a.selectedindex = (a.selectedindex == IndexJL) ? IndexJL : IndexJL + 1;
    if (kony.appinit.isIE9 || kony.appinit.isIE8) {
      var f = "<div" + $KW.Utils.getBaseHtml(a, b) + "class='ktable kwt100 switch " + e + "' style='" + d + ";position:relative'><div class='krow kwt100 switchRow'><div class='kcell kwt50 " + (a.skin ? (a.skin + "on") : "on konycustomcss") + "' id='" + a.id + "_on'>" + c + "</div><div class='switchThumb thumb kwt50' id='" + a.id + "_thumb' style='left:" + (["40%", "0%"][a.selectedindex]) + "''></div><div class='kcell kwt50 " + (a.skin ? (a.skin + "off") : "off konycustomcss") + "' id='" + a.id + "_off'>" + g + "</div></div></div>"
    } else {
      var f = "<div role='option' aria-selected='" + ["true", "false"][a.selectedIndex] + "' " + h + $KW.Utils.getBaseHtml(a, b) + "class='kwt100 switch " + e + "' style='" + d + "'><div aria-hidden='true' class='" + (a.skin ? (a.skin + "on") : "on konycustomcss") + "' id='" + a.id + "_on'>" + c + "</div><div aria-hidden='true' class='thumb' id='" + a.id + "_thumb'> <span></span></div><div aria-hidden='true' class=' " + (a.skin ? (a.skin + "off") : "off konycustomcss") + "' id='" + a.id + "_off'>" + g + "</div></div>"
    }
    return f
  },
  adjustSwitchWidth: function(e, d) {
    var c = document.querySelectorAll("#" + e + " div[kwidgettype='Switch'], div[class~='popupmain'] div[kwidgettype='Switch']");
    for (var b = 0; b < c.length; b++) {
      var a = $KU.getModelByNode(c[b]);
      $KW.Switch.adjustWidth(a, c[b], d)
    }
  },
  adjustWidth: function(a, c, d) {
    if (!(kony.appinit.isIE9 || kony.appinit.isIE8)) {
      c.children[0].style.marginRight = "-6px";
      c.children[2].style.marginLeft = "-6px";
      a.cWidth = (Math.floor(c.clientWidth / 2));
      a.sWidth = a.cWidth + (c.clientWidth % 2) + 6;
      c.children[0].style.width = (a.sWidth - 2) + "px";
      c.children[2].style.width = a.sWidth + "px";
      c.children[1].childNodes[1].style.width = a.cWidth + "px";
      $KW.Switch.adjustSwitch(a, c, "none");
      if ($KU.isIE11) {
        for (var b = 0; b < c.children.length; b++) {
          c.children[b].style.flex = "none"
        }
      }
    } else {
      c = c.firstChild;
      c.children[1].style.width = c.children[0].offsetWidth
    }
  },
  toggleSwitch: function(b) {
    var d = $KU.getNodeByModel(b);
    var e = d.getAttribute("kdisabled");
    if (d && e != "true") {
      this.applyTrans(d, "all 0.125s ease-in-out");
      if (b.selectedindex == IndexJL) {
        b.selectedindex = IndexJL + 1;
        if (kony.appinit.isIE9 || kony.appinit.isIE8) {
          this.animateSwitch(b, d)
        } else {
          if ($KU.isIOSgt6) {
            d.children[1].style[vendor + "Transform"] = translateOpen + 1.5 + "px,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = "scale(1)"
          } else {
            d.children[0].style[vendor + "Transform"] = translateOpen + (-(b.cWidth + 8)) + "px,0" + translateClose;
            d.children[1].style[vendor + "Transform"] = translateOpen + (-b.cWidth + 2) + "px,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = translateOpen + (-b.cWidth) + "px,0" + translateClose
          }
        }
      } else {
        b.selectedindex = IndexJL;
        if (kony.appinit.isIE9 || kony.appinit.isIE8) {
          if (parseInt(d.style.paddingRight) > 0) {
            var c = d.firstChild;
            b.orgwidthVal = c ? c.offsetLeft + c.firstChild.offsetWidth : [0, 50][b.selectedindex];
            b.orgwidthVal = (b.orgwidthVal) - (b.orgwidthVal % 10)
          }
          b.widthVal = [0, 50][b.selectedindex];
          $KI.timer.schedule(b.id, this.toogleSwitchIE(b, b.selectedindex), 0.05, true)
        } else {
          d.children[0].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
          if ($KU.isIOSgt6) {
            d.children[1].style[vendor + "Transform"] = translateOpen + 21.5 + "px,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = "scale(0.01)"
          } else {
            d.children[1].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
            d.children[2].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose
          }
        }
      }
      var a = $KU.returnEventReference(b.onslide || b.onslidercallback);
      d.setAttribute("aria-selected", [true, false][b.selectedIndex]);
      $KW.Switch.addA11YAttribute(b, d);
      if (a) {
        a.call(b, b);
        $KU.onEventHandler(b)
      }
    }
  },
  toogleSwitchIE: function(a, b) {
    return function() {
      var c = false;
      var d = $KU.getNodeByModel(a);
      d = d.firstChild;
      if (b) {
        if (a.orgwidthVal) {
          a.orgwidthVal1 -= Math.floor(a.orgwidthVal / 5);
          d.children[1].style.left = a.orgwidthVal1 + a.widthVal + "px";
          if (a.orgwidthVal1 >= 0 || a.orgwidthVal1 <= 5) {
            c = true;
            d.children[1].style.left = a.widthVal + "px";
            a.orgwidthVal = null;
            a.orgwidthVal1 = null
          }
        } else {
          a.widthVal -= 10;
          d.children[1].style.left = a.widthVal + "%";
          if (a.widthVal == 0) {
            c = true
          }
        }
      } else {
        if (a.orgwidthVal) {
          a.widthVal += a.orgwidthVal / 5;
          d.children[1].style.left = a.widthVal + "px";
          if (a.widthVal == a.orgwidthVal) {
            c = true;
            a.orgwidthVal = null;
            a.orgwidthVal1 = null
          }
        } else {
          a.widthVal += 10;
          d.children[1].style.left = a.widthVal + "%";
          if (a.widthVal == 50) {
            c = true
          }
        }
      }
      if (c) {
        $KI.timer.cancel(a.id)
      }
    }
  },
  adjustSwitch: function(a, c, b) {
    if (kony.appinit.isIE9 || kony.appinit.isIE8) {
      this.animateSwitch(a, c);
      return
    }
    this.applyTrans(c, b);
    if (a.selectedindex == IndexJL) {
      c.children[0].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
      if ($KU.isIOSgt6) {
        c.children[1].style[vendor + "Transform"] = translateOpen + "21.5px,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = "scale(0.01)"
      } else {
        c.children[1].style[vendor + "Transform"] = translateOpen + "0,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = translateOpen + "7px,0" + translateClose
      }
    } else {
      c.children[0].style[vendor + "Transform"] = translateOpen + (-(a.cWidth + 6)) + "px,0" + translateClose;
      if ($KU.isIOSgt6) {
        c.children[1].style[vendor + "Transform"] = translateOpen + 1.5 + "px,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = "scale(1)"
      } else {
        c.children[1].style[vendor + "Transform"] = translateOpen + (-a.cWidth + 2) + "px,0" + translateClose;
        c.children[2].style[vendor + "Transform"] = translateOpen + (-a.cWidth) + "px,0" + translateClose
      }
    }
  },
  animateSwitch: function(a, c) {
    a.widthVal = [0, 50][a.selectedindex];
    if (parseInt(c.style.paddingLeft) > 0) {
      var b = c.firstChild;
      a.widthVal = b.offsetLeft;
      a.orgwidthVal = parseInt(b.children[1].style.left);
      a.orgwidthVal = (a.orgwidthVal) - (a.orgwidthVal % 10);
      a.orgwidthVal = a.orgwidthVal - a.widthVal;
      a.orgwidthVal1 = a.orgwidthVal
    }
    $KI.timer.schedule(a.id, this.toogleSwitchIE(a, a.selectedindex), 0.05, true)
  },
  applyTrans: function(b, a) {
    if (!(kony.appinit.isIE9 || kony.appinit.isIE8)) {
      b.children[1].style[vendor + "Transition"] = a;
      b.children[0].style[vendor + "Transition"] = a;
      b.children[2].style[vendor + "Transition"] = a
    }
  },
  eventHandler: function(b, c) {
    var a = $KU.getModelByNode(c);
    $KW.Switch.toggleSwitch(a)
  },
  adjustThumbHeight: function(b, a) {
    if (kony.appinit.isIE9 || kony.appinit.isIE8) {
      b = b.firstChild
    }
    a.target.naturalHeight = a.target.naturalHeight || a.target.height;
    b.children[0].style.height = b.children[2].style.height = (a.target.naturalHeight + "px");
    b.children[1].childNodes[1].style.height = ((a.target.naturalHeight - 2) + "px")
  },
  adjustSwitchHeight: function(d) {
    var c = document.querySelectorAll("#" + d + " div[kwidgettype='Switch']");
    for (var b = 0; b < c.length; b++) {
      var a = $KU.getModelByNode(c[b]);
      $KW.Switch.adjustHeight(a, c[b])
    }
  },
  adjustHeight: function(b, c) {
    if (!(kony.appinit.isIE9 || kony.appinit.isIE8)) {
      c.children[0].style.minHeight = "27px";
      c.children[2].style.minHeight = "27px"
    }
    if (c.style.padding && (kony.appinit.isIE9 || kony.appinit.isIE8)) {
      var d = c.firstChild;
      var e = d.offsetTop;
      d.children[1].style.top = (e) + "px"
    }
    if (b.skin) {
      var a = $KU.getCSSPropertyFromRule((b.skin + "on"), "background-image")
    }
    if (a) {
      var f = a.replace(/url\(([^\)]*)\)/, "$1");
      $KU.imagePreloader(f, function(g) {
        return function(h) {
          kony.events.preventDefault(h);
          $KW.Switch.adjustThumbHeight(g, h)
        }
      }(c))
    }
  }
};
$KW.Popup = {
  updateView: function(g, d, c, a) {
    switch (d) {
      case "ismodal":
      case "transparencybehindthepopup":
        var f = 1 - (g.transparencybehindthepopup / 100);
        var b = document.getElementById("__popuplayer");
        var h = document.getElementById(g.id + "_container");
        if (b) {
          if (kony.appinit.isIE7 || kony.appinit.isIE8) {
            b.style.filter = "alpha(opacity=" + (f * 100) + ")"
          } else {
            b.style.opacity = f
          }
        }
        break;
      case "title":
        var e = document.getElementById(g.id + "_titlebar");
        if (e) {
          e.childNodes[0].innerHTML = c
        }
        break
    }
  },
  render: function(e) {
    if ($KG.localization) {
      $KI.i18n.translateFormModel(e)
    }
    var l = "";
    var c = "";
    var d = e.id;
    var h = $KW.skins.getMarPadAdjustedContainerWeightSkin(e, e.ismodal ? "" : 100) + " " + ((e.ismodal && e.skin) ? e.skin : "");
    var k = 1 - (e.transparencybehindthepopup / 100);
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      c = "filter:alpha(opacity= " + (k * 100) + ")"
    } else {
      c = "opacity:" + k
    }
    if (e.ismodal) {
      l = "<div id='__popuplayer' style='" + c + "' class='popuplayer'></div>"
    }
    l += "<form action='javascript:;' id='" + d + "' class='" + h + "' style='z-index:9;" + (!e.skin ? "background-color:white;" : "") + (e.ismodal ? "xoverflow:auto;position:absolute;max-height:" + (e.containerheight || 80) + "%;" : "") + "'>";
    l += this.generatePopupHeader(e);
    l += "<div id='" + d + "_body' style='position:relative;width:100%;'>";
    l += "<div style='" + $KW.skins.getPaddingSkin(e) + "'>";
    l += e.header ? $KW.Form.generateHeader(e.header, "header") : "";
    if (e.children) {
      var f = new $KW.WidgetGenerationContext(e.id);
      if (e.layouttype == constants.CONTAINER_LAYOUT_GRID) {
        l += $KW.Grid.render(e, f)
      } else {
        for (var j = 0; j < e.children.length; j++) {
          l += $KW.Form.generateWidget(e, e[e.children[j]])
        }
      }
    }
    l += e.footer ? $KW.Form.generateHeader(e.footer, "footer") : "";
    l += "</div></div>";
    if (e.resizable) {
      l += "<div><div id='" + d + "_resizearea' class='resizearea'></div></div>"
    }
    l += "</form>";
    var b = document.createElement("div");
    b.id = d + "_container";
    if (!e.ismodal) {
      b.className = e.skin || "";
      b.style.position = "fixed";
      b.style.overflow = "hidden";
      b.style.maxHeight = (e.containerheight || 80) + "%";
      b.style.width = (e.containerweight * document.getElementsByTagName("body")[0].offsetWidth / 100) + "px";
      b.setAttribute("name", "nonmodalpopup")
    } else {
      b.className = "popupcontainer"
    }
    b.style.visibility = "hidden";
    b.innerHTML = l;
    $KW.Popup.zindex = $KW.Popup.zindex || 10;
    b.style.zIndex = ++$KW.Popup.zindex;
    var g = $KU.getElementById("__MainContainer");
    if (!g) {
      l = "<div id='__MainContainer'></div>";
      document.body.innerHTML = l;
      g = $KU.getElementById("__MainContainer")
    }
    g.appendChild(b);
    var a = kony.appinit.isFirefox ? "DOMMouseScroll" : "mousewheel";
    kony.events.addEventListener(b, a, function(n) {
      var q = n.wheelDelta ? (n.wheelDelta / 120) : (n.detail ? (-n.detail / 3) : 0);
      n = n || window.event;
      var m = n.target || n.srcElement;
      var o = $KW.Popup.getParentScroller(m);
      while (o) {
        if (!((o.scrollTop == (o.scrollHeight - o.clientHeight) && q < 0) || (o.scrollTop == 0 && q > 0))) {
          return
        }
        o = $KW.Popup.getParentScroller(o.parentNode)
      }
      var p = b.childNodes[1] || b.childNodes[0];
      var i = document.getElementById(p.id + "_body");
      if ((i.scrollTop == (i.scrollHeight - i.clientHeight) && q < 0) || (i.scrollTop == 0 && q > 0)) {
        kony.events.preventDefault(n)
      }
    })
  },
  getParentScroller: function(b) {
    var c = b;
    while (c) {
      var a = c.getAttribute && c.getAttribute(kony.constants.KONY_WIDGET_TYPE);
      if (a) {
        if (a == "Popup") {
          return
        }
        if (a == "ScrollBox") {
          return c
        }
      }
      c = c.parentNode
    }
  },
  show: function(a) {
    $KW.Calendar && $KW.Calendar.__dp.destroyCalendar();
    !kony.system.activity.hasActivity() && $KW.Utils.removeBlockUISkin();
    var i = $KU.getElementById(a.id + "_container");
    if (i) {
      this.dismiss(a)
    }
    $KU.updateScrollFlag(a);
    this.render(a);
    var j = $KU.getElementById(a.id + "_container");
    var b = a.context;
    var h = b && b.widget;
    var d = $KU.getNodeByModel(h);
    if (b && b.widget && b.isenabled && !a.enableScroll) {
      if (d && $KU.getPosition(d).top == 0) {
        j.style.top = d.offsetHeight + "px"
      }
    }
    $KW.TPW.renderWidget(a.id);
    i = j;
    if (a.ismodal) {
      i = j.getElementsByTagName("form")[0]
    }
    if ((!$KG.disableTransition || $KU.isBlackBerryNTH) && kony.appinit.useTransition) {
      $KW.Form.initializeTouchWidgets(a.id)
    } else {
      if (a.ismodal) {
        i.parentNode.style.visibility = "visible"
      } else {
        i.style.visibility = "visible"
      }
      $KW.Scroller.initializePageViews(a.id);
      $KW.Form.initializeView(a.id)
    }
    if (a.draggable) {
      var g = $KU.getElementById(a.id + "_titlebar");
      if (g) {
        a.drag = new $KW.touch.Drag(a, i, g, i.parentNode, this.dragEvent, i);
        $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
        $KW.Popup.undockedpopups[a.id] = a
      }
    }
    if (a.resizable) {
      var k = $KU.getElementById(a.id + "_resizearea");
      new $KW.touch.Drag(a, i, k, i.parentNode, this.dragEvent, i)
    }
    var c = document.getElementById("__popuplayer");
    if (c) {
      c.style.width = document.body.style.width
    }
    if (kony.appinit.isIE7 || kony.appinit.isFirefox) {
      i.parentNode.style.zIndex = $KW.Popup.zindex
    }
    var f = j.querySelectorAll("[name=map_canvas]")[0];
    var e = $KG.mapScriptLoaded;
    if (f && e) {
      $KW.Map.setUpInteractiveCanvasMap()
    }
    $KU.changea11yDynamicElement(a.id);
    this.updateContainerHeight(a, j);
    if (!$KG.disableTransition || $KU.isBlackBerryNTH) {
      this.applyTransition(a, i)
    }
  },
  updateContainerHeight: function(c, a) {
    var b = c.ismodal ? a.childNodes[1] : a;
    if (c.containerheight || c.containerheight == 0) {
      b.style.maxHeight = "";
      b.style.height = "100%"
    } else {
      b.style.height = "auto"
    }
    $KU.setScrollHeight(c, b);
    this.setPopupBodyHeight(c, b);
    this.setPopupPosition(c, b)
  },
  setPopupBodyHeight: function(d, a) {
    var g = $KU.getElementById(d.id + "_titlebar");
    if (g) {
      var b = $KU.getElementById("minmax_" + d.id);
      if (b) {
        g.style.height = (kony.appinit.isFirefox ? b.offsetHeight + 20 : b.parentNode.clientHeight) + "px";
        if (kony.appinit.isIE8) {
          b.onclick = function(h) {
            if (!h) {
              h = window.event
            }
            $KW.Popup.minimize(this, h)
          };
          var c = $KU.getElementById("close_" + d.id);
          c.onclick = function(h) {
            if (!h) {
              h = window.event
            }
            $KW.Popup.close(this, h)
          }
        }
      }
      var f = g.parentNode.childNodes[1];
      var e = parseInt($KU.getStyle(f, "padding-top").replace("px", ""), 10) + parseInt($KU.getStyle(f, "padding-bottom").replace("px", ""), 10);
      f.style.height = ((d.ismodal ? g.parentNode.clientHeight : a.clientHeight) - e - g.clientHeight - (d.resizable ? 13 : 0)) + "px";
      f.style.overflow = "auto"
    } else {
      a.style.overflow = "auto"
    }
  },
  setPopupPosition: function(b, a) {
    if (!b.context) {
      var d = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
      var c = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
      a.style.top = Math.floor((100 - Math.floor((a.offsetHeight * 100) / d)) / 2) + "%";
      if (Math.floor((100 - Math.floor((a.offsetHeight * 100) / d)) / 2) < 10) {
        a.style.top = "0%"
      }
      a.style.left = Math.floor((100 - Math.floor((a.offsetWidth * 100) / c)) / 2) + "%"
    }
  },
  dismiss: function(b) {
    var c = b ? $KU.getElementById(b.id + "_container") : document.querySelector("div[class~='popupmain']");
    if (c) {
      var a = c.getElementsByTagName("form")[0];
      if (!b) {
        var e = a.id.split("_")[0];
        b = window[e]
      }
      if (b.ptranOut && (b.ptranOut.toLowerCase() != "none") && (!$KG.disableTransition || $KU.isBlackBerryNTH)) {
        this.applyTransition(b, (b.ismodal ? a : c), true)
      } else {
        $KW.Popup.domremove(a)
      }
      $KW.Popup.dockedpopups = $KW.Popup.dockedpopups || {};
      if ($KW.Popup.dockedpopups[b.id]) {
        delete $KW.Popup.dockedpopups[b.id]
      }
      $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
      if ($KW.Popup.undockedpopups[b.id]) {
        delete $KW.Popup.undockedpopups[b.id]
      }
      this.updateMinimizePositions(b);
      if (b.drag) {
        b.drag.removeDrag()
      }
      var d = $KU.returnEventReference(b.onhide || b.onHide);
      d && d.call(b, b);
      b.isMinimized = false
    }
  },
  domremove: function(b) {
    if (b) {
      var a = b.parentNode;
      a.parentNode.removeChild(a)
    }
  },
  minimize: function(b, d) {
    if (b) {
      var f = b.parentNode.parentNode;
      var a = f.parentNode;
      var c = $KG.allforms[a.id];
      if (c.isMinimized) {
        return
      }
      $KW.Popup.dockedpopups = $KW.Popup.dockedpopups || {};
      $KW.Popup.dockedpopups[a.id] = c;
      $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
      if (c && $KW.Popup.undockedpopups[c.id]) {
        delete $KW.Popup.undockedpopups[c.id]
      }
      b.src = $KU.getImageURL(c.titlebarconfig.maxicon);
      b.title = "Maximize";
      b.onclick = function(g) {
        if (!g) {
          g = window.event
        }
        $KW.Popup.maximize(this, g)
      };
      var e = c.ismodal ? a : a.parentNode;
      c.width = e.style.width;
      e.style.width = "20%";
      e.style.overflow = "";
      a.children[1].style.display = "none";
      c.position = [e.style.top, e.style.left];
      this.updateMinimizePositions(c);
      if (c.drag) {
        c.drag.removeDrag()
      }
      if (c.resizable) {
        $KU.getElementById(c.id + "_resizearea").style.display = "none"
      }
      c.isMinimized = true
    }
  },
  maximize: function(c, e) {
    if (!e) {
      e = window.event
    }
    if (c) {
      var g = c.parentNode.parentNode;
      var a = g.parentNode;
      var b = a.id;
      var d = $KG.allforms[a.id];
      c.src = $KU.getImageURL(d.titlebarconfig.minicon);
      c.title = "Minimize";
      c.onclick = function(h) {
        if (!h) {
          h = window.event
        }
        $KW.Popup.minimize(this, h)
      };
      var f = d.ismodal ? a : a.parentNode;
      a.children[1].style.display = "block";
      f.style.bottom = "";
      f.style.right = "";
      $KW.Popup.dockedpopups = $KW.Popup.dockedpopups || {};
      if ($KW.Popup.dockedpopups[b]) {
        var d = $KW.Popup.dockedpopups[b];
        delete $KW.Popup.dockedpopups[b];
        if (d.drag) {
          d.drag.addDrag()
        }
        f.style.width = d.width;
        f.style.top = d.position[0];
        f.style.left = d.position[1]
      }
      f.style.overflow = "auto";
      $KW.Popup.undockedpopups = $KW.Popup.undockedpopups || {};
      $KW.Popup.undockedpopups[b] = d;
      f.style["z-index"] = ++$KW.Popup.zindex;
      this.updateMinimizePositions(d);
      if (d.resizable) {
        $KU.getElementById(d.id + "_resizearea").style.display = ""
      }
      d.isMinimized = false
    }
  },
  close: function(b, d) {
    if (b) {
      var a = b.getAttribute("id");
      a = a.substr(a.indexOf("_") + 1);
      var c = $KG.allforms[a];
      this.dismiss(c)
    }
  },
  dragEvent: function(c, b) {
    var a = c.widget;
    switch (b) {
      case $KW.touch.events.touchstart:
        if (a.style["z-index"] < $KW.Popup.zindex) {
          a.style["z-index"] = ++$KW.Popup.zindex
        }
        break;
      case $KW.touch.events.touchmove:
        break;
      case $KW.touch.events.touchend:
        break;
      case $KW.touch.events.touchcancel:
        break
    }
  },
  updateMinimizePositions: function(c) {
    if ($KW.Popup.dockedpopups) {
      var d = 1;
      var b = 20;
      for (var a in $KW.Popup.dockedpopups) {
        var e = $KU.getElementById(a + "_container");
        e = c.ismodal ? e.childNodes[1] : e;
        if (e) {
          e.style.top = "";
          e.style.left = "";
          e.style.right = "20px";
          if (d > 1) {
            b += e.offsetHeight + 5
          }
          e.style.bottom = b + "px";
          d++
        }
      }
    }
  },
  generatePopupHeader: function(b) {
    var c = "";
    var a = b.titlebarconfig;
    if (b.title || (a && (a.minicon || a.maxicon || a.closeicon))) {
      c = "<div id='" + b.id + "_titlebar' class='popupheader " + ((a && a.skin) || "") + "' style='position:relative;padding: 5px;text-align:left;'>";
      if (b.title) {
        c += "<label style='width:100%'>" + b.title + "</label>"
      }
      if (a && (a.minicon || a.maxicon || a.closeicon)) {
        c += "<div class='popupcontrols' style='padding: 5px;'><img src='" + $KU.getImageURL(a.minicon) + "' onclick='$KW.Popup.minimize(this,event)' id='minmax_" + b.id + "' title='Minimize'><img src='" + $KU.getImageURL(a.closeicon) + "' onclick='$KW.Popup.close(this,event)' id='close_" + b.id + "' title='Close'></div>"
      }
      c += "</div>"
    }
    return c
  },
  adjustPopupDim: function(b) {
    var f = $KU.getElementById(b.id + "_titlebar");
    if (f) {
      var a = $KU.getElementById(b.id + "_body");
      var e = $KU.getElementById(b.id + "_container");
      a.style.height = "auto";
      var d = parseInt($KU.getStyle(a, "padding-top").replace("px", ""), 10) + parseInt($KU.getStyle(a, "padding-bottom").replace("px", ""), 10);
      var c = e.offsetHeight - d - f.offsetHeight - (b.resizable ? 13 : 0);
      a.style.height = c + "px"
    }
  },
  applyTransition: function(j, m, p) {
    var h = (j.transitionduration && j.transitionduration >= 0) ? j.transitionduration : 1;
    var l = m.offsetHeight;
    var n = m.offsetWidth;
    var o = p ? j.ptranOut : j.ptran;
    j.height = Math.floor(l + ((window.innerHeight - l) / 2));
    j.width = Math.floor(n + ((window.innerWidth - n) / 2));
    if (o == "rightCenter") {
      j.width = screen.width + n
    }
    if (o == "bottomCenter") {
      j.height = screen.height + l
    }
    m.style[vendor + "AnimationDuration"] = h + "s";
    m.parentNode.style.width = document.getElementsByTagName("body")[0].style.width;
    this.setAnchorPosition(j, m, p);
    var q = $KW.Utils.getKonyStyleSheetIndex(document.styleSheets);
    var k = document.styleSheets[q];
    if (kony.appinit.useTransition) {
      if (o) {
        var d = "AnimationEnd";
        if (kony.appinit.isFirefox || $KU.isIE10 || $KU.isIE11) {
          d = d.toLowerCase()
        } else {
          d = vendor + d
        }
        kony.events.addEventListener(m, d, $KW.Popup.animationEnd(j.id, !!p))
      }
      switch (o) {
        case "topCenter":
        case "bottomCenter":
          var b = (o == "topCenter") ? ("-" + j.height) : j.height;
          if (p) {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "endanimation { from { -" + vendor + "-transform: translateY(0px); } to {-" + vendor + "-transform: translateY( " + b + "px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "endanimation"
          } else {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "animation { from { -" + vendor + "-transform: translateY( " + b + "px); } to {-" + vendor + "-transform: translateY(0px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "animation"
          }
          break;
        case "leftCenter":
        case "rightCenter":
          var g = (o == "leftCenter") ? ("-" + j.width) : j.width;
          if (p) {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "endanimation { from { -" + vendor + "-transform: translateX( 0px); } to {-" + vendor + "-transform: translateX(" + g + "px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "endanimation"
          } else {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "animation { from { -" + vendor + "-transform: translateX( " + g + "px); } to {-" + vendor + "-transform: translateX(0px);} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "animation"
          }
          break;
        case "fadeAnimation":
          if (p) {
            m.style[vendor + "AnimationName"] = $KW.formEndTransitionsMatrix[o]
          } else {
            m.style[vendor + "AnimationName"] = $KW.formTransitionsMatrix[o]
          }
          break;
        case "slidedown":
          if (p) {
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "endanimation { from {height:" + l + "px;} to {height:0px;} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "endanimation"
          } else {
            m.style.overflow = "hidden";
            k.insertRule("@-" + vendor + "-keyframes " + j.id + "animation { from {height:0px;} to {height:" + l + "px;} }", k.cssRules.length);
            m.style[vendor + "AnimationName"] = j.id + "animation"
          }
          break
      }
    } else {
      var e = j.context;
      var i = e && e.widget;
      var f = $KU.getNodeByModel(i);
      switch (o) {
        case "topCenter":
          if (p) {
            $("#" + m.id).animate({
              top: +(-l) + "px"
            }, h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            var a = m.style.top;
            if (!f) {
              a = $(window).height() / 2 - l / 2
            }
            m.style.top = -l + "px";
            $("#" + m.id).animate({
              top: a
            }, h * 1000)
          }
          break;
        case "bottomCenter":
          if (p) {
            $("#" + m.id).animate({
              top: +($(window).height() + l) + "px"
            }, h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            var a = m.style.top;
            if (!f) {
              a = $(window).height() / 2 - l / 2
            }
            m.style.top = $(window).height() + l + "px";
            $("#" + m.id).animate({
              top: a
            }, h * 1000)
          }
          break;
        case "leftCenter":
          if (j.context) {
            var c = $KU.getAnchorPosition(j, m);
            if (p) {
              $("#" + m.id).animate({
                left: +(-n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = -n + "px";
              $("#" + m.id).animate({
                left: +(c.leftPos) + "px"
              }, h * 1000)
            }
          } else {
            if (p) {
              $("#" + m.id).animate({
                left: +(-n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = -n + "px";
              var a = $(window).width() / 2 - n / 2;
              $("#" + m.id).animate({
                left: +(a) + "px"
              }, h * 1000)
            }
          }
          break;
        case "rightCenter":
          if (j.context) {
            var c = $KU.getAnchorPosition(j, m);
            if (p) {
              $("#" + m.id).animate({
                left: +($(window).width() + n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = $(window).width() + n + "px";
              $("#" + m.id).animate({
                left: +(c.leftPos) + "px"
              }, h * 1000)
            }
          } else {
            if (p) {
              $("#" + m.id).animate({
                left: +($(window).width() + n) + "px"
              }, h * 1000, function() {
                $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
              })
            } else {
              m.style.left = $(window).width() + n + "px";
              var a = $(window).width() / 2 - n / 2;
              $("#" + m.id).animate({
                left: +(a) + "px"
              }, h * 1000)
            }
          }
          break;
        case "fadeAnimation":
          if (p) {
            $("#" + m.id).fadeOut(h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            $("#" + m.id).hide().fadeIn(h * 1000)
          }
          break;
        case "slidedown":
          if (p) {
            $("#" + m.id).animate({
              height: "toggle"
            }, h * 1000, function() {
              $KW.Popup.domremove(j.ismodal ? m : m.childNodes[0])
            })
          } else {
            m.style.overflow = "hidden";
            m.style.height = "0px";
            $("#" + m.id).animate({
              height: l + "px"
            }, h * 1000)
          }
          break
      }
    }
    if (j.ismodal) {
      m.parentNode.style.visibility = "visible"
    } else {
      m.style.visibility = "visible"
    }
    if (!o) {
      m.tabIndex = -1;
      m.focus()
    }
  },
  setAnchorPosition: function(d, s, b) {
    var c = d.context;
    if (c && c.widget) {
      if (d.enableScroll && !d.ismodal) {
        s = s.parentNode
      }
      var e = c.widget;
      var r;
      if (e.wType == "Form") {
        r = document.getElementById(e.id)
      } else {
        r = $KU.getNodeByModel(e)
      }
      if (r && e.wType != "Form") {
        var q = $KU.getElementById(d.id + "_scroller");
        var i = d.enableScroll && d.ismodal ? q.offsetHeight : s.offsetHeight;
        var p = s.offsetWidth;
        var n = !b ? (d.ptran) : (d.ptranOut);
        var h = $KU.getPosition(r, d);
        if (!$KG.nativeScroll) {
          var l = $KG.__currentForm;
          var f = $KG[l.id + "_scroller"];
          if (f) {
            var m = f.scrollToElement(r, "", true);
            if (m) {
              var a = d.context.widget.parent;
              var g = $KU.getNodeByModel(a);
              if (g.id == a.id + "_" + a.id) {
                m = Math.abs(f._offset(r).top)
              } else {
                m = Math.abs(f._offset(r).top) - Math.abs(m)
              }
              h.top = m
            }
          }
        }
        var o = h.top;
        var j;
        var k = $KU.getAnchorPosition(d, s);
        if (c.anchor == "bottom") {
          s.style.left = k.leftPos + "px";
          j = o + r.clientHeight;
          if (c.isenabled == true && o == 0) {
            s.style.top = 0;
            d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - j) : (i + j)
          } else {
            if ((window.innerHeight || document.body.clientHeight) == j) {
              s.style.bottom = "0px";
              d.height = (n == "bottomCenter") ? i : (i + j)
            } else {
              if ((window.innerHeight || document.body.clientHeight) - j > i) {
                s.style.top = j + "px";
                d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - j) : (i + j)
              } else {
                if (o > i) {
                  s.style.top = (o - i) + "px";
                  d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - o) : (i + o)
                } else {
                  s.style.top = Math.floor((100 - Math.floor((i * 100) / s.parentNode.offsetHeight)) / 2) + "%"
                }
              }
            }
          }
        }
        if (c.anchor == "top") {
          s.style.left = k.leftPos + "px";
          if (!o) {
            s.style.top = 0
          } else {
            if (o > i) {
              s.style.top = (o - i) + "px";
              d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - o) : (i + o)
            } else {
              s.style.top = Math.floor((100 - Math.floor((i * 100) / s.parentNode.offsetHeight)) / 2) + "%"
            }
          }
        }
        if (c.anchor == "left" || c.anchor == "right") {
          s.style.top = k.topPos + "px";
          s.style.left = k.leftPos + "px"
        }
      } else {
        if (r && e.wType == "Form") {
          if (!$KG.nativeScroll && document.getElementById(r.id + "_scroller")) {
            var h = $KU.getPosition(document.getElementById(r.id + "_scroller"))
          } else {
            var h = $KU.getPosition(r)
          }
          var o = h.top;
          var j = o + h.height;
          var q = $KU.getElementById(d.id);
          var i = q.offsetHeight;
          var p = q.offsetWidth;
          var n = !b ? (d.ptran) : (d.ptranOut);
          if (c.anchor == "bottom") {
            if ($KG.nativeScroll) {
              s.style.top = (document.body.querySelector("form").offsetHeight - i) + "px"
            } else {
              s.style.top = (window.innerHeight - i) + "px"
            }
            s.style.left = "0px";
            d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - j) : (i + j)
          }
          if (c.anchor == "top") {
            s.style.top = "0px";
            s.style.left = "0px";
            d.height = (n == "bottomCenter") ? (i + (window.innerHeight || document.body.clientHeight) - o) : (i + o)
          }
          if (c.anchor == "left") {
            s.style.top = "0px";
            s.style.left = "0px"
          }
          if (c.anchor == "right") {
            s.style.top = "0px";
            s.style.right = "0px"
          }
        }
      }
      s.style.position = "absolute"
    }
  },
  adjustPopupDimensions: function(d, c) {
    if (!document.getElementById(c.id)) {
      return
    }
    var f = $KU.getElementById(d.id + "_container");
    $KU.setScrollHeight(d, d.ismodal ? f.childNodes[1] : f);
    if (!d.context) {
      $KW.Popup.adjustPosition(d, c)
    }
    $KW.Popup.setAnchorPosition(d, c);
    if ($KG.nativeScroll && d.ismodal) {
      var e = c.previousSibling;
      var b = document.getElementById("__MainContainer").clientHeight;
      if (b < (window.innerHeight || document.body.clientHeight)) {
        e.style.height = (window.innerHeight || document.body.clientHeight) + "px"
      } else {
        e.style.height = b + "px"
      }
    }
    var a = $KG[d.id + "_scroller"];
    a && a.refresh()
  },
  adjustPosition: function(d, b) {
    var c = d.ismodal ? b : b.parentNode;
    if ($KG.nativeScroll) {
      b.parentNode.style.position = "fixed"
    }
    var a = d.ismodal ? b : b.parentNode;
    var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
    var e = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
    var g = Math.floor((100 - Math.floor((a.offsetHeight * 100) / h)) / 2) + "%";
    var f = Math.floor((100 - Math.floor((a.offsetWidth * 100) / e)) / 2) + "%";
    if (parseInt(g, 10) < 0) {
      c.style.top = 0
    } else {
      c.style.top = g
    }
    c.style.left = f
  },
  animationEnd: function(b, a) {
    return function() {
      var i = "AnimationEnd";
      if (kony.appinit.isFirefox || $KU.isIE10 || $KU.isIE11) {
        i = i.toLowerCase()
      } else {
        i = vendor + i
      }
      var e = $KU.getElementById(b);
      var g = $KG.allforms[b];
      if (!e) {
        return
      }
      e = g.ismodal ? e : e.parentNode;
      kony.events.removeEventListener(e, i, arguments.callee);
      if (e && a) {
        $KW.Popup.domremove(g.ismodal ? e : e.childNodes[0]);
        e.style[vendor + "AnimationName"] = ""
      }
      var h = a ? b + "endanimation" : b + "animation";
      var d = $KW.Utils.getKonyStyleSheetIndex(document.styleSheets);
      var c = document.styleSheets[d];
      var f = c.cssRules.length - 1;
      if (c.cssRules[f] && c.cssRules[f].name == h) {
        if (c.deleteRule) {
          c.deleteRule(f)
        } else {
          c.removeRule(f)
        }
      }
      e.tabIndex = -1;
      e.focus()
    }
  },
  setcontext: function(b, a) {
    if (b instanceof Object && a instanceof Object) {
      b.context = a
    }
  },
  add: function() {
    var a = arguments[0];
    if ("add" in a) {
      var b = [].slice.call(arguments, 1);
      a.add(b)
    }
  },
  addAt: function(c, b, a) {
    if (b == null) {
      return
    }
    c.addAt && c.addAt(b, a)
  },
  widgets: function(a) {
    if (a.widgets) {
      return a.widgets()
    }
  },
  remove: function(b, a) {
    b.remove && b.remove(a)
  },
  removeAt: function(b, a) {
    b.removeAt && b.removeAt(a)
  },
  scrollToBeginning: function(b) {
    var a;
    var c = $KU.getElementById(b.id + "_titlebar");
    if (c) {
      a = $KU.getElementById(b.id + "_body")
    } else {
      a = b.ismodal ? $KU.getElementById(b.id) : $KU.getElementById(b.id + "_container")
    }
    a && $KW.Utils.animateY(a.scrollTop, 0, a.id)
  },
  scrollToEnd: function(b) {
    var a;
    var c = $KU.getElementById(b.id + "_titlebar");
    if (c) {
      a = $KU.getElementById(b.id + "_body")
    } else {
      a = b.ismodal ? $KU.getElementById(b.id) : $KU.getElementById(b.id + "_container")
    }
    a && $KW.Utils.animateY(a.scrollTop, a.scrollHeight, a.id)
  },
  scrollToWidget: function(b, a) {
    $KW.Widget.setfocus(a, b)
  },
  handleshow: function(a) {
    if ("show" in a) {
      a.show()
    }
  },
  destroy: function(a) {
    if ("destroy" in a) {
      a.destroy(a)
    }
  },
  dismissPopup: function(a) {
    var f = a;
    if (a && typeof a == "object") {
      var d = a.target || a.srcElement;
      d = $KU.getParentByAttribute(d, kony.constants.KONY_WIDGET_TYPE);
      a = d ? ($KU.getContainerForm(d) || (d.getAttribute && d.getAttribute("kformname"))) : null
    }
    if (!a || (window[a] && window[a].wType != "Popup")) {
      var b = document.querySelector("div.popupcontainer");
      if (b) {
        var c = b.id.split("_")[0];
        if (window[c] && window[c].wType == "Popup") {
          if (!window[c].ismodal) {
            $KW.Popup.dismiss();
            if ($KG.nativeScroll && !($KU.isWindowsPhone && $KU.isIE9)) {
              kony.events.removeEventListener(document.body, $KU.isIDevice ? $KW.touch.events.touchstart : "click", $KW.Popup.dismissPopup, false);
              if (!$KU.isIDevice) {
                kony.events.removeEventListener(window, "scroll", $KW.Popup.dismissPopup, false)
              }
              kony.events.preventDefault(f)
            }
            return true
          }
        }
      }
    }
    return false
  }
};
$KW.RichText = {
  initialize: function() {
    kony.events.addEvent("click", "RichText", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "text":
        d.innerHTML = b;
        break;
      case "linkskin":
        this.setLinkSkin(e);
        break;
      case "linkfocusskin":
        this.setLinkFocusSkin(e);
        break
    }
  },
  render: function(a, b) {
    if ($KU.isAndroid) {
      this.setLinkSkin(a);
      this.setLinkFocusSkin(a)
    }
    var c = $KW.skins.getWidgetSkinList(a, b);
    var d = "<div" + $KW.Utils.getBaseHtml(a, b) + "class='" + c + "' style='" + $KW.skins.getBaseStyle(a, b);
    if (b.ispercent === false) {
      d += "display:inline-block;" + (b.layoutDir ? ("float:" + b.layoutDir) : "")
    }
    d += ";text-align:" + $KW.skins.getContentAlignment(a) + "'>" + a.text + "</div>";
    if ($KW.Utils.isWidgetDisabled(a, b)) {
      d = d.replace(/href=["'].*?["']/g, "href='javascript:void(0)'")
    }
    return d
  },
  eventHandler: function(c, g, d) {
    var a = $KU.getModelByNode(g),
      f = g.getAttribute("kcontainerID");
    if (f) {
      $KW.Utils.updateContainerData(a, g, true)
    } else {
      if (a.onclick) {
        var i = $KU.returnEventReference(a.onclick);
        if (i) {
          if (d) {
            i.call(a, a, d[0], {
              href: d[1]
            })
          } else {
            i.call(a, a)
          }
          $KU.onEventHandler(a)
        }
      } else {
        if (d && d[1]) {
          if (d[1].charAt(0) == "#") {
            kony.events.stopPropagation(c);
            kony.events.preventDefault(c)
          }
          var h = d[1].substring(1, d[1].length);
          var e = document.querySelector('a[name="' + h + '"]');
          var b = $KG[$KG.__currentForm.id + "_scroller"];
          if (b && e) {
            b.scrollToElement(e, 200)
          }
        }
      }
    }
  },
  setLinkSkin: function(c) {
    var b = c.linkskin;
    if (!b) {
      return
    }
    var d = c.pf + "_" + c.id;
    var a = "#" + d + " > a";
    $KW.Utils.applyStyle(b, a)
  },
  setLinkFocusSkin: function(b) {
    var c = b.linkfocusskin;
    if (!c) {
      return
    }
    var d = b.pf + "_" + b.id;
    var a = "#" + d + " > a:active";
    $KW.Utils.applyStyle(c, a)
  }
};
$KW.ScrollBox = {
  initialize: function() {
    kony.events.addEvent("click", "ScrollBox", this.eventHandler);
    kony.events.addEvent("onorientationchange", "ScrollBox", this.adjustBoxDimensions)
  },
  initializeView: function(a) {
    this.adjustBoxDimensions(a)
  },
  updateView: function(d, c, b, a) {
    switch (c) {
      case "totalWt":
        if (d.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
          var e = $KU.getNodeByModel(d);
          e && this.adjustScrollBoxWidth(d, e)
        }
        break;
      case "showscrollbars":
        var e = $KU.getNodeByModel(d);
        $KW.ScrollBox.addRemoveMouseWheelScroll(d, e);
        break
    }
  },
  render: function(b, a) {
    var c = "";
    if (b.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
      c = kony.widgets.ScrollBox.renderHBox(b, a)
    } else {
      c = kony.widgets.ScrollBox.renderVBox(b, a)
    }
    return c
  },
  renderHBox: function(o, b) {
    var d = kony.model.getWidgetModel(o.pf, b.tabpaneID);
    var n = "";
    var h = kony.widgets.skins.getWidgetAlignmentSkin(o);
    var k = o.pf + "_" + o.id;
    var j = "";
    var l = b.topLevelBox;
    var g = kony.widgets.skins.getMarginSkin(o, b) + kony.widgets.skins.getPaddingSkin(o);
    var c = "";
    if (!l) {
      if (kony.appinit.isIE7) {
        n += "<tr class = 'kwt100' >";
        n += "<td class = 'kwt100' >"
      } else {
        n += "<div class = 'krow kwt100' >";
        n += "<div class = 'kcell kwt100' >"
      }
    }
    j = kony.widgets.skins.getWidgetSkinList(o, b);
    var q = kony.widgets.stringifyScrolldirection[o.scrolldirection];
    var a = (q == "both") ? "overflow:auto;" : (q == "horizontal" ? "overflow-x:auto;overflow-y:hidden;" : q == "vertical" ? "overflow-y:auto;overflow-x:hidden;" : q == "none" ? "overflow:hidden;" : "");
    n += "<div style='" + a + g + "' class ='" + j + "'" + kony.widgets.Utils.getBaseHtml(o, b) + " swipeDirection='" + q + "'>";
    if (kony.appinit.isIE7) {
      n += "<table style='table-layout:fixed;" + (o.totalWt ? "width:" + o.totalWt + "%" : "") + "'>";
      n += "<tr class = '" + h + " kwt100' >"
    } else {
      if (o.percent == true) {
        n += "<div style='table-layout:fixed;" + (o.totalWt ? "width:" + o.totalWt + "%" : "") + "' class = 'ktable'>"
      } else {
        n += "<div style='table-layout:fixed; width:100%; ' class = 'ktable'>"
      }
      n += "<div class = 'krow " + h + " kwt100' >"
    }
    if (!o.children || o.children.length == 0) {
      n += kony.appinit.isIE7 ? "</tr></table></div>" : "</div></div></div>";
      if (!l) {
        n += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
      }
      return n
    }
    for (var f = 0; f < o.children.length; f++) {
      var e = d[o.children[f]];
      if (e.wType == "HBox" || e.wType == "VBox" || e.wType == "ScrollBox") {
        b.topLevelBox = false;
        if (e.wType == "HBox") {
          n += kony.widgets.HBox.render(e, b)
        } else {
          n += kony.widgets.VBox.render(e, b)
        }
      } else {
        if (o.percent == true) {
          b.ispercent = true;
          if (o.totalWt && kony.appinit.isIE) {
            c = Math.floor((100 * e.containerweight) / o.totalWt)
          } else {
            c = e.containerweight
          }
          $KW.skins.addWidthRule(c);
          var p = "";
          if (e.containerweight) {
            p = "kwt" + c
          } else {
            p = "auto"
          }
          var m = kony.widgets.skins.getWidgetAlignmentSkin(e);
          n += kony.appinit.isIE7 ? "<td class = '" + p + " " + m + "' >" : "<div class = 'kcell " + p + " " + m + "' style='" + $KW.skins.getChildMarginAsPaddingSkin(e) + "' >"
        } else {
          b.ispercent = false
        }
        n += kony.widgets[e.wType].render(e, b);
        if (o.percent == true) {
          n += kony.appinit.isIE7 ? "</td>" : "</div>"
        }
      }
    }
    if ($KG.appbehaviors.adherePercentageStrictly == true && o.percent === true) {
      o.dummyNodeWidth = $KW.HBox.getExtraNodeWidth(o);
      n += "<div class = 'kcell kwt" + o.dummyNodeWidth + "'  ></div>"
    }
    n += kony.appinit.isIE7 ? "</tr></table>" : "</div></div>";
    n += "</div>";
    if (!l) {
      n += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
    }
    return n
  },
  renderVBox: function(n, b) {
    var c = kony.model.getWidgetModel(n.pf, b.tabpaneID);
    var l = b.topLevelBox;
    var g = kony.widgets.skins.getWidgetAlignmentSkin(n);
    var m = "";
    var j = n.pf + "_" + n.id;
    var h = kony.widgets.skins.getWidgetSkinList(n, b);
    var f = kony.widgets.skins.getMarginSkin(n, b) + kony.widgets.skins.getPaddingSkin(n);
    var o = kony.widgets.stringifyScrolldirection[n.scrolldirection];
    var a = (o == "both") ? "overflow:auto;" : (o == "horizontal" ? "overflow-x:auto;overflow-y:hidden;" : o == "vertical" ? "overflow-y:auto;overflow-x:hidden;" : o == "none" ? "overflow:hidden;" : "");
    m += "<div style='" + a + f + "' swipeDirection='" + o + "'" + kony.widgets.Utils.getBaseHtml(n, b) + " class ='" + h + "' >";
    m += "<div id='" + j + "_scrollee'>";
    m += kony.appinit.isIE7 ? "<table class = 'kwt100'>" : "<div class = 'ktable kwt100'>";
    var k = n.children ? n.children.length : 0;
    for (var e = 0; e < k; e++) {
      var d = c[n.children[e]];
      if (d.wType == "HBox" || d.wType == "VBox" || d.wType == "ScrollBox") {
        b.topLevelBox = false;
        if (d.wType == "HBox") {
          b.ispercent = n.percent;
          m += kony.widgets.HBox.render(d, b)
        } else {
          m += kony.widgets.VBox.render(d, b)
        }
      } else {
        m += kony.appinit.isIE7 ? "<tr class = 'kwt100'>" : "<div class = 'krow kwt100'>";
        g = kony.widgets.skins.getWidgetAlignmentSkin(d);
        vboxComputedSkin = kony.widgets.skins.getMarAdjustedContainerWeightSkin(d, "100");
        vboxComputedSkin += " " + g;
        m += kony.appinit.isIE7 ? "<td class = '" + vboxComputedSkin + "' >" : "<div class = 'kcell " + vboxComputedSkin + "' >";
        m += kony.widgets[d.wType].render(d, b);
        m += kony.appinit.isIE7 ? "</td></tr>" : "</div></div>"
      }
    }
    m += kony.appinit.isIE7 ? "</table>" : "</div>";
    m += "</div></div>";
    return m
  },
  eventHandler: function(a, d, b) {
    var c = kony.utils.getModelByNode(d);
    d.getAttribute("kcontainerID") && kony.widgets.Utils.updateContainerData(c, d, !c.onclick);
    c.onclick && kony.app[c.onclick](c)
  },
  adjustBoxDimensions: function(e) {
    var a = document.querySelectorAll("#" + e + " div[kwidgettype='ScrollBox']");
    for (var d = 0; d < a.length; d++) {
      var b = a[d].getAttribute("swipeDirection");
      var c = kony.utils.getModelByNode(a[d]);
      if (b != "horizontal") {
        $KU.setScrollHeight(c, a[d])
      }
      if (b != "none" && !c.showscrollbars) {
        kony.widgets.ScrollBox.addRemoveMouseWheelScroll(c, a[d])
      }
    }
  },
  addRemoveMouseWheelScroll: function(b, c) {
    var a = kony.widgets.stringifyScrolldirection[b.scrolldirection];
    if (a != "none") {
      if (!b.showscrollbars) {
        c.style.overflow = "hidden";
        c.style.overflowX = "hidden";
        c.style.overflowY = "hidden";
        if (c.addEventListener) {
          c.addEventListener("mousewheel", $KW.ScrollBox.scrollContent, false);
          c.addEventListener("DOMMouseScroll", $KW.ScrollBox.scrollContent, false)
        } else {
          c.attachEvent("onmousewheel", $KW.ScrollBox.scrollContent)
        }
      } else {
        if (a == "both") {
          c.style.overflow = "auto";
          c.style.overflowX = "auto";
          c.style.overflowY = "auto"
        }
        if (a == "vertical") {
          c.style.overflow = "auto";
          c.style.overflowX = "hidden";
          c.style.overflowY = "auto"
        }
        if (a === "horizontal") {
          c.style.overflow = "auto";
          c.style.overflowX = "auto";
          c.style.overflowY = "hidden"
        }
        if (c.removeEventListener) {
          c.removeEventListener("mousewheel", $KW.ScrollBox.scrollContent, false);
          c.removeEventListener("DOMMouseScroll", $KW.ScrollBox.scrollContent, false)
        } else {
          c.detachEvent("onmousewheel", $KW.ScrollBox.scrollContent)
        }
      }
    }
  },
  scrollContent: function(c) {
    var c = window.event || c;
    var a = c.target || c.srcElement;
    var b = $KU.closestElement(a, "kwidgettype", "ScrollBox");
    if (b) {
      b.scrollTop = (b.scrollTop) - (Math.max(-1, Math.min(1, (c.wheelDelta || -c.detail)))) * 75;
      kony.events.preventDefault(c)
    }
  },
  adjustDimensionsByNode: function(g, i) {
    var d = g.containerheight;
    var a = "";
    if (d > 0) {
      if (g.containerheightreference == 1) {
        var c = screen.availHeight;
        a = Math.round((d * c) / 100)
      } else {
        if (g.containerheightreference == 2) {
          var b = $KU.getParentModel(g);
          var f = $KU.getNodeByModel(b);
          var j = (f && f.offsetWidth) || screen.availWidth;
          a = Math.round((d * j) / 100)
        } else {
          if (g.containerheightreference == 3) {
            var j = screen.height;
            a = Math.round((d * j) / 100)
          }
        }
      }
    } else {
      if (g.wType == "Map" || g.wType == "Browser") {
        a = "500px"
      }
      if (g.wType == "TabPane" || g.wType == "Segment" || g.wType == "Popup" || g.wType == "ScrollBox") {
        a = "auto"
      }
      if (g.containerheight == 0) {
        a = 0
      }
    }
    i.style.height = (a != "auto") ? (a + "px") : "auto";
    if (g.containerheight && g.wType != "ScrollBox") {
      i.style.overflow = "auto"
    }
    if (g.wType == "Popup" && d) {
      i.style.maxHeight = "";
      var h = Number(window.getComputedStyle(i).top.replace("px", ""));
      var e = Number(window.getComputedStyle(i).height.replace("px", ""));
      if ((h + e) > screen.height) {
        i.style.top = "0px"
      }
    }
  },
  adjustScrollBoxWidth: function(b, a) {
    if (b.percent) {
      a.firstChild.style.width = b.totalWt + "%"
    }
  },
  adjustScrollChildrenWidth: function(g, d) {
    if (g.percent && g.totalWt) {
      if (kony.appinit.isIE) {
        var j = d.firstChild.firstChild;
        var h = j.childNodes;
        var c = g.totalWt || 0;
        for (var b = 0; b < h.length; b++) {
          var a = g[h[b].firstChild.id.split("_")[1]];
          var e = Math.floor((100 * a.containerweight) / g.totalWt);
          var f = kony.widgets.skins.getMarAdjustedContainerWeightSkin(a, e || "");
          h[b].className = h[b].className.replace(new RegExp("(^|\\s+)kwt([0-9]+)(\\s+|$)"), " ");
          $KU.addClassName(h[b], f)
        }
      } else {
        d.innerHTML = d.innerHTML
      }
    }
  },
  fadeHImages: function(b) {
    var d = "display:none;";
    var a = kony.widgets.Image.getImageURL(b.leftarrowimage);
    var c = kony.widgets.Image.getImageURL(b.rightarrowimage);
    var e = b.pf + "_" + b.id;
    var f = "<div id='" + e + "_scrollFades' class='scroll_view'><div id='" + e + "_leftimg' class='scroll_fades leftfade' style='" + d + "'><img type='HImg' src='" + a + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div><div id='" + e + "_rightimg' class='scroll_fades rightfade' style='" + d + "'><img type='HImg' src='" + c + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div></div>";
    return f
  },
  fadeVImages: function(b) {
    var c = "display:none;";
    var a = kony.widgets.Image.getImageURL(b.toparrowimage);
    var f = kony.widgets.Image.getImageURL(b.bottomarrowimage);
    var d = b.pf + "_" + b.id;
    var e = "<div id='" + d + "_scrollFades' class='scroll_view' style='height:inherit;'><div id='" + d + "_topimg' class='scroll_fades topfade' style='" + c + "'><img type='VImg' src='" + a + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div><div id='" + d + "_bottomimg' class='scroll_fades bottomfade' style='" + c + "'><img type='VImg' src='" + f + "' onload='kony.widgets.ScrollBox.setHeight(this)' ></div></div>";
    return e
  },
  setHeight: function(c) {
    var b = c.parentNode;
    setTimeout(function() {
      b.style.height = c.height || c.naturalHeight;
      b.style.width = c.width || c.naturalWidth
    }, 0);
    var a = c.getAttribute("type");
    if (a == "HImg") {
      b.style.top = Math.floor((b.parentNode.offsetHeight - c.naturalHeight) / 2) + "px"
    } else {
      b.style.left = Math.floor((b.parentNode.offsetWidth - c.naturalWidth) / 2) + "px"
    }
  },
  adjustArrowPosition: function(b) {
    var a = b.firstChild.childNodes[0].getAttribute("type");
    if (a == "HImg") {
      b.firstChild.style.top = b.lastChild.style.top = Math.floor((b.offsetHeight - b.firstChild.childNodes[0].naturalHeight) / 2) + "px"
    } else {
      b.firstChild.style.left = b.lastChild.style.left = Math.floor((b.offsetWidth - b.firstChild.childNodes[0].naturalWidth) / 2) + "px"
    }
  },
  recalculateScrollBoxWidth: function(d) {
    if (d.orientation != constants.BOX_LAYOUT_HORIZONTAL) {
      return
    }
    var c = d.ownchildrenref;
    var e = 0;
    for (var b = 0; b < c.length; b++) {
      e += c[b].containerweight
    }
    d.totalWt = e;
    var a = $KU.getNodeByModel(d);
    if (a == null) {
      return
    }
    a.firstChild.style.width = e + "%"
  }
};
$KW.FlexContainer = {
  initialize: function() {
    kony.events.addEvent("click", "FlexContainer", this.eventHandler);
    kony.events.addEvent("onorientationchange", "FlexContainer", this.orientationHandler)
  },
  initializeView: function(a) {
    this.attachResizeEvent(a, "FlexContainer")
  },
  orientationHandler: function(b, a) {},
  updateView: function(f, c, b, a) {
    var d = $KU.getNodeByModel(f);
    if (!d) {
      return
    }
    switch (c) {
      case "clipbounds":
        var e = $KU.isFlexWidget(f);
        d = e ? d.parentNode.parentNode : d;
        if (b == false) {
          d.style.overflow = "visible"
        } else {
          d.style.overflow = "hidden"
        }
        break
    }
  },
  render: function(a, b) {
    return this.renderTableLayout(a, b)
  },
  renderTableLayout: function(g, c) {
    var e = $KW.skins.getWidgetSkinList(g, c);
    var i = $KU.isFlexWidget(g);
    var d = i ? "" : (g.clipbounds == true ? "overflow:hidden;" : "");
    var f = " position:relative;" + d + (g.zindex ? "z-index:" + g.zindex : "");
    var b = (g.parent && g.parent.wType == "TabPane") ? "" : $KW.skins.getBaseStyle(g, c);
    var h = "";
    h += "<div id='flexcontainer_wrapper' class='" + e + "' style='width:100%; " + b + "'>";
    h += "<div class = 'kwt100'" + $KW.Utils.getBaseHtml(g, c) + " style='" + f + "'>";
    var a = g.widgets();
    if (a.length > 0) {
      h += this.renderChildren(g, a, c)
    }
    h += "</div></div>";
    return h
  },
  renderChildren: function(h, b, c) {
    var j = "";
    for (var f = 0; f < b.length; f++) {
      var e = b[f];
      var g = "kcell " + (e.wType == "TPW" ? "konycustomcss " : "") + (e.isvisible ? "" : "hide ");
      var a = $KW.Utils.getFlexLayoutStyle(e);
      var d = "";
      if (e.wType == "FlexContainer" && !e.clipbounds) {
        d = ";overflow:visible"
      } else {
        d = ";overflow:hidden";
        g += e.skin
      }
      j += "<div class = '" + g + "' style='" + a + d + ((e.wType == "TextArea" || e.wType == "Switch" || e.wType == "Image") ? "font-size:0px" : "") + "'>";
      if (e.wType == "HBox" || e.wType == "VBox") {
        c.topLevelBox = true
      }
      j += $KW[e.wType].render(e, c);
      j += "</div>"
    }
    return j
  },
  adjustFlexContainers: function(b, a) {
    if (b.wType == "Segment") {
      $KW.Segment.adjustFlexContainersInSegment(b, a)
    } else {
      if (b.wType == "DataGrid") {
        $KW.DataGrid.adjustFlexContainersInDataGrid(b, a)
      } else {
        if (b.wType == "TabPane") {
          $KW.TabPane.adjustFlexContainersInTab(b, a)
        }
      }
    }
  },
  adjustFlexContainer: function(a, c) {
    if (!c) {
      if (a.wType == "Form" || a.wType == "Popup") {
        c = document.getElementById(a.id + "_scroller") || document.getElementById(a.id)
      } else {
        c = c || $KW.Utils.getWidgetNode(a)
      }
    }
    if (!c) {
      return
    }
    var b = a.widgets();
    if (b.length > 0) {
      if (a.wType == "FlexContainer" && a.autogrowHeight && (!a.parent || (a.parent && !a.parent.autogrowHeight))) {
        $KW.FlexLayoutEngine.performAutogrowFlexLayout(a, c, b)
      } else {
        $KW.FlexLayoutEngine.performFlexLayout(a.layouttype, a, c, b)
      }
    }
  },
  forceLayout: function(b, c) {
    if (b.wType == "Form" || b.wType == "Popup") {
      c = document.getElementById(b.id + "_scroller") || document.getElementById(b.id)
    } else {
      c = c || $KW.Utils.getWidgetNode(b)
    }
    if (c && b.isvisible) {
      var a = (b.wType == "FlexContainer") ? c.childNodes[0].getAttribute("kcontainerID") : c.getAttribute("kcontainerID");
      a && $KW.Utils.updateContainerDataInDOM(c, a);
      if ((b.parent && !$KU.isFlexWidget(b) && b.wType != "Form") || (b.wType == "FlexContainer" && !b.parent)) {
        $KW.Utils.setFlexContainerStyle(b, c);
        b.frame = $KW.Utils.getWidgetFrame(b, c);
        b.dolayout && b.dolayout.call(b, b)
      }
      if (b.wType == "Form") {
        b.frame = $KW.Utils.getWidgetFrame(b, c)
      }
      this.adjustFlexContainer(b, c)
    }
  },
  eventHandler: function(b, d) {
    var c = $KU.getModelByNode(d),
      a = d.getAttribute("kcontainerID");
    c.blockeduiskin && $KW.Utils.applyBlockUISkin(c);
    if (a) {
      $KW.Utils.updateContainerData(c, d, true)
    } else {
      kony.events.executeBoxEvent(c)
    }
  },
  attachResizeEvent: function(k, f) {
    var b = document.querySelectorAll("#" + k + " div[kwidgettype='" + f + "']");
    for (var e = 0; e < b.length; e++) {
      var g = $KU.getModelByNode(b[e]);
      var c = b[e];
      g.onDrag && new $KW.touch.Drag(g, c, c, "", this.dragEvent, c);
      var a = g.children;
      for (var d = 0; a && d < a.length; d++) {
        var h = g[a[d]];
        this.attachDragEvent(h)
      }
    }
  },
  attachDragEvent: function(a) {
    if (a.onDrag) {
      var b = $KU.getNodeByModel(a);
      b = b.parentNode;
      new $KW.touch.Drag(a, b, b, "", this.dragEvent, b)
    }
  },
  dragEvent: function(d, a, e, c) {
    d = d.getAttribute("kwidgettype") ? d : d.childNodes[0];
    var b = $KU.getModelByNode(d);
    b.onDrag && b.onDrag(b, a, e, c)
  }
};
$KW.FlexScrollContainer = {
  initialize: function() {
    kony.events.addEvent("click", "FlexScrollContainer", this.eventHandler);
    kony.events.addEvent("onorientationchange", "FlexScrollContainer", this.orientationHandler)
  },
  initializeView: function(b) {
    $KW.FlexContainer.attachResizeEvent(b, "FlexScrollContainer");
    var a = document.querySelectorAll("#" + b + " div[kwidgettype='FlexScrollContainer']");
    $KW.Utils.initializeScrollEvents(a)
  },
  updateView: function(c, f, b, d) {
    var e = $KU.getNodeByModel(c);
    if (!e) {
      return
    }
    var i = $KW.stringifyScrolldirection[c.scrolldirection];
    switch (f) {
      case "enableScrolling":
      case "scrollDirection":
        if (c.enablescrolling) {
          if (i == "horizontal") {
            e.style.overflowX = "auto";
            e.style.overflowY = "hidden"
          } else {
            if (i == "vertical") {
              e.style.overflowX = "hidden";
              e.style.overflowY = "auto"
            } else {
              if (i == "both") {
                e.style.overflow = "auto"
              } else {
                if (i == "none") {
                  e.style.overflow = "hidden"
                }
              }
            }
          }
        } else {
          e.style.overflow = "hidden"
        }
        break;
      case "scrollDirection":
        if (c.wType == "Form") {
          i = "vertical"
        }
        if (i == "horizontal") {
          e.style.overflowX = "auto";
          e.style.overflowY = "hidden"
        } else {
          if (i == "vertical") {
            e.style.overflowX = "hidden";
            e.style.overflowY = "auto"
          } else {
            if (i == "both") {
              e.style.overflow = "auto"
            } else {
              if (i == "none") {
                e.style.overflow = "hidden"
              }
            }
          }
        }
        break;
      case "onScrollStart":
        var a = c.onscrollstart;
        a.call(c, c);
        break;
      case "onScrollTouchReleased":
        break;
      case "onScrolling":
        var g = c.onscrolling;
        g.call(c, c);
        break;
      case "onDecelerationStarted":
        break;
      case "onScrollEnd":
        var h = c.onscrollend;
        h.call(c, c);
        break;
      case "contentOffset":
        $KW.FlexScrollContainer.setContentOffSet(c, c.contentOffset, true);
        break
    }
  },
  render: function(b, a) {
    var d = kony.widgets.skins.getMarginSkin(b, a) + kony.widgets.skins.getPaddingSkin(b);
    var e = kony.widgets.skins.getWidgetSkinList(b, a);
    var h = kony.widgets.stringifyScrolldirection[b.scrolldirection];
    var c = b.enableScrolling ? ((h == "both") ? "overflow:auto;" : (h == "horizontal" ? "overflow-x:auto;overflow-y:hidden;" : h == "vertical" ? "overflow-y:auto;overflow-x:hidden;" : h == "none" ? "overflow:hidden;" : "")) : "";
    var f = "<div style='position:relative;" + c + d + "' class ='" + e + "'" + kony.widgets.Utils.getBaseHtml(b, a) + " swipeDirection='" + h + "'>";
    var g = b.widgets();
    if (g.length > 0) {
      f += $KW.FlexContainer.renderChildren(b, g, a)
    }
    f += "</div>";
    return f
  },
  forceLayout: function(a, b) {
    $KW.FlexContainer.forceLayout(a, b)
  },
  getContentOffsetMeasured: function(b) {
    var a = {
      x: 0,
      y: 0
    };
    var c = $KU.getNodeByModel(b);
    if (c) {
      a.x = -c.scrollLeft;
      a.y = -c.scrollTop
    }
    return a
  },
  getContentSizeMeasured: function(a) {
    var c = $KU.getNodeByModel(a);
    var b = {
      width: 0,
      height: 0
    };
    if (c) {
      b.width = c.scrollWidth;
      b.height = c.scrollHeight
    }
    return b
  },
  setContentOffSet: function(c, b, d) {
    var f = $KU.getNodeByModel(c);
    if (f) {
      $KW.Widget.setfocus(c);
      var a = $KU.getValueByParentFrame(c, $KU.getValueAndUnit(c, b.x), "x", c.frame);
      var e = $KU.getValueByParentFrame(c, $KU.getValueAndUnit(c, b.y), "y", c.frame);
      f.scrollLeft = a;
      f.scrollTop = e
    }
  },
  scrollToWidget: function(a, c, b) {
    var e = $KU.getNodeByModel(a);
    if (e) {
      $KW.Widget.setfocus(a);
      var d = c.frame;
      e.scrollLeft = d.x;
      e.scrollTop = d.y
    }
  },
  scrollToEnd: function(a, b) {
    var c = $KU.getNodeByModel(a);
    if (c) {
      $KW.Widget.setfocus(a);
      switch (a.scrolldirection) {
        case kony.flex.SCROLL_HORIZONTAL:
          c.scrollLeft = c.scrollWidth;
          break;
        case kony.flex.SCROLL_VERTICAL:
          c.scrollTop = c.scrollHeight;
          break;
        case kony.flex.SCROLL_BOTH:
          c.scrollLeft = c.scrollWidth;
          c.scrollTop = c.scrollHeight;
          break
      }
    }
  }
};
$KW.Video = $KW.Audio = $KW.Media = {
  initializeView: function(d) {
    if (!$KU.isAndroid) {
      return
    }
    var b = document.querySelectorAll("#" + d + " video");
    for (var a = 0; a < b.length; a++) {
      var c = b[a];
      kony.events.addEventListener(c, "click", function(e) {
        e = e || window.event;
        if (e.srcElement.getAttribute("kdisabled") == "true") {
          kony.events.stopPropagation(e);
          kony.events.preventDefault(e);
          return
        } else {
          e.srcElement.play()
        }
      }, false);
      kony.events.addEventListener(c, "playing", function(e) {
        e = e || window.event;
        e.srcElement.playing = true
      }, false)
    }
  },
  updateView: function(e, c, b, a) {
    var d = $KU.getNodeByModel(e);
    if (!d) {
      return
    }
    switch (c) {
      case "source":
        d.parentNode.innerHTML = this.render(e, {
          formID: e.pf
        });
        break
    }
  },
  render: function(f, c) {
    var g = $KW.skins.getWidgetSkinList(f, c);
    var j = $KW.Utils.getBaseHtml(f, c);
    var h = c.tabpaneID ? (" ktabpaneid=" + c.tabpaneID) : "";
    var d = f.autoplay ? " autoplay='autoplay'" : "";
    var l = f.poster ? (" poster=" + $KU.getImageURL(f.poster)) : "";
    var b = " style='" + $KW.skins.getMarginSkin(f, c) + ";" + $KW.skins.getPaddingSkin(f) + "'";
    var i = f.loop ? " loop='loop'" : "";
    var m = (f.controls || f.controls == undefined) ? " controls='controls'" : "";
    var e = f.heightwidth;
    if (e) {
      e = e.split(",");
      e = (e[1] != "0" ? (" width=" + e[1] + "px ") : "") + (e[0] != "0" ? ("height=" + e[0] + "px ") : "")
    }
    var k = "";
    if (f.wType == "Video") {
      k = "<video" + j + m + e + d + l + i + h
    } else {
      k = "<audio" + j + " controls='controls'" + d + i + h
    }
    k += b;
    var a = this.getSrc(f);
    k += " class = '" + g + a[1] + "'>";
    if (f.wType == "Video") {
      k += a[0] + (f.text || "") + "</video>"
    } else {
      k += a[0] + (f.text || "") + "</audio>"
    }
    return k
  },
  getSrc: function(c) {
    var j = false;
    var b = $KU.getPlatform();
    if (b.name == "android" && b.version <= 2.2) {
      j = true
    }
    var g = c.wType.toLowerCase();
    var e = skin = "";
    var h = count = 0;
    var a = c.source;
    if ($KU.isArray(a)) {
      for (var d = 1; d < a.length; d++) {
        h++;
        if (a[d][2]) {
          var f = g + "/" + a[d][1];
          e += "<source src='" + a[d][2] + "'" + (a[d][1] == "mp4" && j ? "" : " type='" + f + "'") + "/>"
        } else {
          count++
        }
      }
    } else {
      for (var k in a) {
        h++;
        if (a[k]) {
          var f = g + "/" + k;
          e += "<source src='" + a[k] + "'" + (k == "mp4" && j ? "" : " type='" + f + "'") + "/>"
        } else {
          count++
        }
      }
    }
    if (h == count && c.isvisible) {
      skin = " hide"
    }
    return [e, skin]
  },
  eventHandler: function(a, b) {}
};
$KW.Calendar = {
  initialize: function() {
    kony.events.addEvent("click", "Calendar", this.eventHandler);
    kony.events.addEvent("onorientationchange", "Calendar", $KW.Calendar.__dp.reposition)
  },
  initializeView: function(a) {
    $KW.Calendar.__dp.days = (function() {
      if ($KG.i18nArray && $KG.i18nArray["weekdayI18Nkey"]) {
        var f = $KG.i18nArray && $KG.i18nArray["weekdayI18Nkey"] ? kony.i18n.getLocalizedString("weekdayI18Nkey") : null;
        if (f) {
          return f.split(",")
        } else {
          return ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]
        }
      } else {
        var f = [];
        if ($KG.i18nArray) {
          var h, b, i, c, d, g, e;
          h = $KG.i18nArray["platform.calendar.sunday"] ? kony.i18n.getLocalizedString("platform.calendar.sunday") : "SUN";
          h && f.push(h);
          b = $KG.i18nArray["platform.calendar.monday"] ? kony.i18n.getLocalizedString("platform.calendar.monday") : "MON";
          b && f.push(b);
          i = $KG.i18nArray["platform.calendar.tuesday"] ? kony.i18n.getLocalizedString("platform.calendar.tuesday") : "TUE";
          i && f.push(i);
          c = $KG.i18nArray["platform.calendar.wednesday"] ? kony.i18n.getLocalizedString("platform.calendar.wednesday") : "WED";
          c && f.push(c);
          d = $KG.i18nArray["platform.calendar.thursday"] ? kony.i18n.getLocalizedString("platform.calendar.thursday") : "THU";
          d && f.push(d);
          g = $KG.i18nArray["platform.calendar.friday"] ? kony.i18n.getLocalizedString("platform.calendar.friday") : "FRI";
          g && f.push(g);
          e = $KG.i18nArray["platform.calendar.saturday"] ? kony.i18n.getLocalizedString("platform.calendar.saturday") : "SAT";
          e && f.push(e)
        }
        if (f.length > 0) {
          return f
        } else {
          return ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]
        }
      }
    }());
    $KW.Calendar.__dp.months = (function() {
      if ($KG.i18nArray && $KG.i18nArray["monthI18Nkey"]) {
        var j = $KG.i18nArray && $KG.i18nArray["monthI18Nkey"] ? kony.i18n.getLocalizedString("monthI18Nkey") : null;
        if (j) {
          return j.split(",")
        } else {
          return ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
        }
      } else {
        var j = [];
        if ($KG.i18nArray) {
          var d, n, l, h, b, k, g, c, f, i, e, m;
          d = $KG.i18nArray["platform.calendar.january"] ? kony.i18n.getLocalizedString("platform.calendar.january") : "January";
          d && j.push(d);
          n = $KG.i18nArray["platform.calendar.february"] ? kony.i18n.getLocalizedString("platform.calendar.february") : "February";
          n && j.push(n);
          l = $KG.i18nArray["platform.calendar.march"] ? kony.i18n.getLocalizedString("platform.calendar.march") : "March";
          l && j.push(l);
          h = $KG.i18nArray["platform.calendar.april"] ? kony.i18n.getLocalizedString("platform.calendar.april") : "April";
          h && j.push(h);
          b = $KG.i18nArray["platform.calendar.may"] ? kony.i18n.getLocalizedString("platform.calendar.may") : "May";
          b && j.push(b);
          k = $KG.i18nArray["platform.calendar.june"] ? kony.i18n.getLocalizedString("platform.calendar.june") : "June";
          k && j.push(k);
          g = $KG.i18nArray["platform.calendar.july"] ? kony.i18n.getLocalizedString("platform.calendar.july") : "July";
          g && j.push(g);
          c = $KG.i18nArray["platform.calendar.august"] ? kony.i18n.getLocalizedString("platform.calendar.august") : "August";
          c && j.push(c);
          f = $KG.i18nArray["platform.calendar.september"] ? kony.i18n.getLocalizedString("platform.calendar.september") : "September";
          f && j.push(f);
          i = $KG.i18nArray["platform.calendar.october"] ? kony.i18n.getLocalizedString("platform.calendar.october") : "October";
          i && j.push(i);
          e = $KG.i18nArray["platform.calendar.november"] ? kony.i18n.getLocalizedString("platform.calendar.november") : "November";
          e && j.push(e);
          i18December = $KG.i18nArray["platform.calendar.december"] ? kony.i18n.getLocalizedString("platform.calendar.december") : "December";
          i18December && j.push(i18December)
        }
        if (j.length > 0) {
          return j
        } else {
          return ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
        }
      }
    }())
  },
  setcontext: function(b, a) {
    if (b instanceof Object && a instanceof Object) {
      b.context = a
    }
  },
  updateView: function(e, j, d, f) {
    var h = $KU.getNodeByModel(e);
    switch (j) {
      case "date":
        e.luadate = d;
        var c = $KW.Calendar.DateFormater;
        var b = $KW.Calendar.ideDateToString(e.date);
        e.entereddate = b;
        var k = $KU.isValidDate(b, "dd/mm/yyyy");
        if (k) {
          if (!kony.appinit.isMobile && !kony.appinit.isTablet && kony.appinit.isIE8) {
            var g = document.getElementById(e.id);
            g.value = "";
            $KU.removeClassName(g, "konyplaceholder");
            g.value = b
          } else {
            e.day = d[IndexJL + 0];
            e.month = d[IndexJL + 1];
            e.year = d[IndexJL + 2];
            this.updateCalDOMNode(e, true)
          }
        }
        break;
      case "datecomponents":
        e.day = d[IndexJL + 0];
        e.month = d[IndexJL + 1];
        e.year = d[IndexJL + 2];
        e.hour = 0;
        e.minutes = 0;
        e.seconds = 0;
        this.updateCalDOMNode(e, true);
        break;
      case "placeholder":
        var a = document.getElementById(e.id);
        if (a && (a.value.indexOf("/") > -1 || a.value.indexOf("-") > -1)) {
          return false
        }
        d = d || e.dateformat || e.format;
        if (e.placeholder != d) {
          e.placeholder = d
        }
        a && a.setAttribute("placeholder", e.placeholder);
        a && this.setPlaceholder(e, a);
        break;
      case "calendaricon":
        if (h) {
          h.childNodes[1].src = $KU.getImageURL(d)
        }
        e.Image = d;
        break;
      case "dateformat":
        this.updateCalDOMNode(e, true);
        break;
      case "validstartdate":
      case "startdate":
        e.startdate = d;
        break;
      case "validenddate":
      case "enddate":
        e.enddate = d;
        break;
      case "titleonpopup":
        e.title = d;
        break;
      case "dateeditable":
        var i = e.dateEditable;
        if (h) {
          if (!i) {
            h.firstChild.setAttribute("readonly", "readonly")
          } else {
            h.firstChild.removeAttribute("readonly")
          }
        }
        break
    }
  },
  render: function(l, e) {
    l.placeholder = l.placeholder || l.dateformat || l.format;
    var g = $KW.skins.getWidgetSkinList(l, e);
    var h = "";
    var f = "text";
    var c = $KW.Calendar.DateFormater;
    var q = l.Image ? $KU.getImageURL(l.Image) : $KU.getImageURL("calbtn.gif");
    var a = $KW.skins.getBaseStyle(l, e);
    var p = e.tabpaneID || "";
    if (l.viewtype === constants.CALENDAR_VIEW_TYPE_GRID_POPUP || l.viewtype == "default") {
      var j = {};
      if (l.date instanceof Array) {
        l.luadate = l.date;
        l.entereddate = l.date;
        if (l.date && l.date.length > IndexJL) {
          var d = [l.date[0 + IndexJL], l.date[1 + IndexJL], l.date[2 + IndexJL]];
          var m = $KW.Calendar.__dp.dateFormatter(l.dateformat, d);
          if (m != false) {
            l.dateComponents = m.date;
            l.formatteddate = m.string
          }
          l.day = m.date[0];
          l.month = m.date[1];
          l.year = m.date[2];
          l.selectdate = j.selectdate;
          l.pagedate = j.pagedate
        } else {
          l.day = null;
          l.month = null;
          l.year = null
        }
        l.hour = l.minutes = l.seconds = 0
      } else {
        l.formatteddate = l.date
      }
      if (!j.day) {
        l.format = l.dateformat;
        if (!l.datecomponents) {
          this.setCurrentDate(l)
        }
        var r = $KW.Calendar.ideDateToString(l.datecomponents);
        j = c.convertToModelDate(r, l.dateformat);
        l.day = parseInt(j.day, 10);
        l.month = parseInt(j.month, 10);
        l.year = parseInt(j.year, 10);
        l.selectdate = j.selectdate;
        l.pagedate = j.pagedate
      }
      $KW.Calendar.updateCalDOMNode(l, false);
      var b = $KW.skins.getContentAlignment(l);
      if (e.ispercent === false) {
        a += " display: inline-block;"
      }
      var s = "";
      if (typeof document.createElement("input").placeholder == "undefined") {
        s = l.placeholder || ""
      }
      var o = l.pf + "_" + l.id;
      h = "<div " + $KW.Utils.getBaseHtml(l, e) + " kwidgetid=" + o + "  class = '" + g + "'";
      h += " style='text-align: " + b + "; vertical-align: middle;" + a + "'>";
      var k = (e.container ? (l.id + "_" + e.container.counter) : l.id);
      h += "<input onchange='$KW.Calendar.calendarTextfieldChangeEventHandler(arguments[0],this)' kwidgettype='CalendarText'  ' kformname='" + l.pf + "' " + (p && " ktabpaneid='" + p + "' ") + " id='" + k + "' style='-" + vendor + "-appearance: none; text-align: inherit; vertical-align: middle;background:transparent;width:50%;text-decoration:inherit;' name='calBody' ";
      if ((typeof document.createElement("input").placeholder == "undefined") && l.placeholder && !l.formatteddate) {
        if (l.date == null || l.date == undefined || l.date == "") {
          h += " class='konyplaceholder '"
        } else {
          h += ""
        }
      }
      h += (l.placeholder) ? " placeholder='" + l.placeholder + "'" : "";
      h += (l.title) ? " title='" + l.title + "'" : "";
      h += (l.disabled) ? " disabled='true'" : "";
      h += " onfocus='$KW.TextField.onfocusEventHandler(arguments[0],this)' onblur='$KW.TextField.onblurEventHandler(arguments[0],this)' ";
      if ((typeof document.createElement("input").placeholder == "undefined") && l.placeholder && !l.datecomponents[IndexJL + 0]) {
        if (l.date == null || l.date == undefined || l.date == "") {
          h += " value='" + s + "' "
        } else {
          h += " value='" + (l.date || "") + "' "
        }
      } else {
        if (l.date) {
          h += " value='" + (l.formatteddate || "") + "' "
        } else {
          h += (l.formatteddate) ? " value='" + (l.formatteddate || "") + "'" : ""
        }
      }
      h += (!(l.dateEditable || l.dateeditable) ? " readonly='readonly' " : " ");
      var n = $KW.Utils.isWidgetDisabled(l, e) || false;
      h += n ? ' kdisabled="true" disabled="true" ' : "";
      h += " type='text' />";
      var i = (l.accessibilityconfig && l.accessibilityconfig.hint) ? l.accessibilityconfig.hint : "Calendar";
      if (kony.appinit.isIE7) {
        h += "<img id='" + k + "_img' type='image'  alt='" + i + "' style='vertical-align:middle' xalign='right' src='" + q + "' onload='$KW.Calendar.setCalElementStyle(this,false)' "
      } else {
        h += "<img id='" + k + "_img'  type='image'  alt='" + i + "' style='float:right;vertical-align:middle' xalign='right' src='" + q + "' onload='$KW.Calendar.setCalElementStyle(this,false)' "
      }
      h += (l.title) ? " title='" + l.title + "'" : "";
      h += " />";
      h += "</div>"
    }
    return h
  },
  setCurrentDate: function(b) {
    var a = new Date();
    b.datecomponents = [];
    b.datecomponents[IndexJL + 0] = 0;
    b.datecomponents[IndexJL + 1] = a.getMonth() + 1;
    b.datecomponents[IndexJL + 2] = a.getFullYear();
    b.datecomponents[IndexJL + 3] = 0;
    b.datecomponents[IndexJL + 4] = 0;
    b.datecomponents[IndexJL + 5] = 0
  },
  eventHandler: function(R, c) {
    var f = 2099;
    var B = 1900;
    var H = document.getElementById("calendar_close_link");
    var V = document.getElementById("-k-w-c-cal-title");
    if (H != null || H != undefined) {
      H.style.visibility = "visible"
    }
    if (V) {
      V.style.visibility = "visible"
    }
    if (c.getAttribute("k-w-c-id")) {
      var J = c.getAttribute("k-w-c-id")
    } else {
      var J = c.getAttribute("id")
    }
    J = J.split("-")[0];
    var Q = $KU.getElementID(J);
    J = J.split("_").length > 2 ? J.substring(0, J.lastIndexOf("_")) : J;
    var u = kony.model.getWidgetModel(c.getAttribute("kformname"), $KU.getElementID(J), c.getAttribute("ktabpaneid"));
    var G = u.title;
    var d = u;
    if (!d.viewconfig) {
      d.viewconfig = {
        gridconfig: ""
      }
    }
    var k = u.startdate;
    var z = u.enddate;
    if (c.getAttribute("kcontainerid")) {
      $KW.Calendar.updateModelByContainerData(u, c, Q);
      if (!u.datecomponents) {
        $KW.Calendar.setCurrentDate(u)
      }
    }
    if (!d) {
      return
    }
    var L = d.viewconfig.gridconfig || d.viewconfig.gridConfig || {};
    var T = $KW.Calendar.__dp.months;
    if (c.className.indexOf("-kony-w-c-yemo") > -1) {
      u.currentSelectedyearMonth = c.innerHTML.split(",");
      for (var ah = 0; ah < T.length; ah++) {
        if (u.currentSelectedyearMonth[0] == T[ah]) {
          u.currentSelectedMonth = ah
        }
      }
    }
    if (c.className.indexOf("-kony-w-c-next-nav") > -1) {
      var K = document.getElementById(c.getAttribute("k-w-c-id") + "-k-w-c-datepicker");
      var ad = document.querySelectorAll("#" + K.id + " .-kony-w-c-popup-container")[0];
      var r = ad.getAttribute("month"),
        n = ad.getAttribute("year");
      if (Number(n) < f) {
        var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1) * 1 + 1);
        C.splice(0, 1);
        var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
      } else {
        if (Number(n) == f) {
          if (Number(r) < 12) {
            var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1) * 1 + 1);
            C.splice(0, 1);
            var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
          }
        }
      }
      $KW.Calendar.__dp.show(u, C, D, M);
      c.blur();
      var X = document.querySelector(".-kony-w-c-yemo");
      if (X) {
        X.focus()
      }
      return
    } else {
      if (c.className.indexOf("-kony-w-c-prev-nav") > -1) {
        var K = document.getElementById(c.getAttribute("k-w-c-id") + "-k-w-c-datepicker");
        var ad = document.querySelectorAll("#" + K.id + " .-kony-w-c-popup-container")[0];
        var r = ad.getAttribute("month"),
          n = ad.getAttribute("year");
        if (r == 1) {
          r = 12;
          n = n - 1
        } else {
          r = r - 1
        }
        if (Number(n) > B) {
          var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1));
          var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
        } else {
          if (Number(n) == B) {
            if (Number(r) > 0) {
              var C = $KW.Calendar.__dp.series(n, r, (d.noofmonths || 1));
              var D, M = document.getElementById(c.getAttribute("k-w-c-id"))
            }
          }
        }
        $KW.Calendar.__dp.show(u, C, D, M);
        var X = document.querySelector(".-kony-w-c-yemo");
        if (X) {
          X.focus()
        }
        return
      } else {
        if (c.getAttribute("k-w-c-hold-day")) {
          var I = document.getElementById(c.getAttribute("k-w-c-id"));
          I.className = I.className.replace("konyplaceholder", "");
          var w = $KW.Calendar.__dp.dateFormatter(d.dateformat, c.getAttribute("k-w-c-hold-day").split(","));
          if (w != false) {
            d.dateComponents = w.date;
            if (kony.appinit.isIE7 || kony.appinit.isIE8 || IndexJL == 1) {
              w.date[3] = (u.hour != 0) ? u.hour : new Date().getHours();
              w.date[4] = (u.minutes != 0) ? u.minutes : new Date().getMinutes();
              w.date[5] = (u.seconds != 0) ? u.seconds : new Date().getSeconds();
              d.date = w.date;
              d.datecomponents = w.date;
              d.day = w.date[0];
              d.month = w.date[1];
              d.year = w.date[2];
              u.formatteddate = w.string
            }
            if (I) {
              var l = document.getElementById($KW.Calendar.__dp.invoked[I.id].i);
              l.value = w.string;
              $KU.removeClassName(l, "konyplaceholder")
            }
          }
          var F = new Date();
          if (IndexJL == 1 && d.datecomponents[0] != null) {
            d.datecomponents = [null].concat(d.datecomponents)
          }
          d._startG = [0, d.datecomponents[1 + IndexJL], d.datecomponents[2 + IndexJL]];
          d.month = d.datecomponents[1 + IndexJL];
          d.day = d.datecomponents[0 + IndexJL];
          d.year = d.datecomponents[2 + IndexJL];
          var F = new Date();
          d.minutes = F.getMinutes();
          d.hour = F.getHours();
          d.seconds = F.getSeconds();
          var o = I;
          if (o && o.getAttribute("kcontainerID")) {
            $KW.Utils.updateContainerData(d, o, false, true)
          }
          var U = u.accessibilityconfig ? ((u.accessibilityconfig.a11yLabel ? u.accessibilityconfig.a11yLabel : "") + " " + u.date) : ("Calendar " + u.date);
          I.setAttribute("aria-label", U);
          var ac = document.getElementById(u.pf);
          if (ac) {
            ac.setAttribute("aria-hidden", false)
          }
          $KW.Calendar.__dp.destroyCalendar(undefined, o.id);
          I.focus();
          if (!d.containerId) {
            var S = $KU.returnEventReference(d.ondone || d.onselection);
            if (S) {
              S.call(d, d);
              $KU.onEventHandler(d)
            }
          }
          return
        } else {
          if (c.className.indexOf("-kony-w-c-yemo") > -1) {
            H.style.visibility = "hidden";
            if (V) {
              V.style.visibility = "hidden"
            }
            var M = c.getAttribute("k-w-c-id");
            var s = document.getElementById(M + "-k-w-c-datepicker");
            var A;
            if (c.innerText == undefined) {
              A = c.textContent.split(",")
            } else {
              A = c.innerText.split(",")
            }
            var P = A[1].trim();
            var g = $KW.Calendar.__dp.navigatorTemplate(d, M, P, "fromYearMonth");
            var ad = document.createElement("div");
            ad.innerHTML = g;
            ad.style.position = "absolute";
            ad.style.height = ad.style.width = "100%";
            ad.className = "-k-w-c-navigator-scrim";
            ad.style["background-color"] = "White";
            ad.id = M + "-k-w-c-navigator-scrim";
            ad.setAttribute("w-type", "Calendar");
            ad.firstChild.position = "absolute";
            ad.firstChild.style["background-color"] = "white";
            var j = s;
            j.appendChild(ad);
            var Y = ad.clientHeight,
              ae = ad.firstChild.clientHeight,
              ag = ad.clientWidth,
              h = ad.firstChild.clientWidth;
            ad.firstChild.position = "absolute";
            ad.firstChild.style.top = ((Y - ae) / 2) + "px";
            ad.firstChild.style.left = ((ag - h) / 2) + "px";
            ad.style.top = ad.style.left = "0px";
            var m = document.querySelectorAll("[tabindex]");
            for (var ab = 0; ab < m.length; ab++) {
              m[ab].removeAttribute("tabindex")
            }
            document.activeElement.blur();
            document.querySelectorAll(".-kony-w-c-popup-container")[0].setAttribute("aria-hidden", true);
            ad.querySelectorAll("[w-type-inactive]")[0].setAttribute("tabindex", 1);
            ad.querySelectorAll("[w-type-inactive]")[0].focus();
            return false
          }
        }
      }
    }
    if (c.className.indexOf("-kony-w-c-navigator-month") > -1) {
      H.style.visibility = "hidden";
      if (V) {
        V.style.visibility = "hidden"
      }
      var M = c.getAttribute("k-w-c-id"),
        e = document.querySelectorAll("#" + M + "-k-w-c-datepicker  .-kony-w-c-navigator-month-selected");
      for (ab = 0; ab < e.length; ab++) {
        if (e[ab] != c) {
          $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-month-selected");
          $KW.Calendar.__dp.addClass(e[ab], "-kony-w-c-navigator-month")
        }
      }
      $KW.Calendar.__dp.addClass(c, "-kony-w-c-navigator-month-selected");
      var aa = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-k-w-c-nav-selected-ym")[0];
      var t = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected")[0];
      if (t) {
        var O = t.getAttribute("k-w-c-hold") * 1
      }
      var p = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected")[0];
      if (p) {
        var N = $KW.Calendar.__dp.months[(p.getAttribute("k-w-c-hold") * 1) - 1]
      }
      aa.innerHTML = (N || "") + " " + (O || "");
      return false
    } else {
      if (c.className.indexOf("-kony-w-c-navigator-year") > -1) {
        H.style.visibility = "hidden";
        if (V) {
          V.style.visibility = "hidden"
        }
        var M = c.getAttribute("k-w-c-id"),
          e = document.querySelectorAll("#" + M + "-k-w-c-datepicker  .-kony-w-c-navigator-year-selected");
        for (ab = 0; ab < e.length; ab++) {
          if (e[ab] != c) {
            $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected");
            $KW.Calendar.__dp.addClass(e[ab], "-kony-w-c-navigator-year")
          }
        }
        $KW.Calendar.__dp.addClass(c, "-kony-w-c-navigator-year-selected");
        var aa = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-k-w-c-nav-selected-ym")[0];
        var t = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected")[0];
        if (t) {
          var O = t.getAttribute("k-w-c-hold") * 1
        }
        var p = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected")[0];
        if (p) {
          var N = $KW.Calendar.__dp.months[(p.getAttribute("k-w-c-hold") * 1) - 1]
        }
        aa.innerHTML = (N || "") + " " + (O || "");
        return false
      } else {
        if (c.className.indexOf("-kony-w-c-cancel-nav") > -1) {
          var M = c.getAttribute("k-w-c-id");
          var W = document.querySelector("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected");
          var q = document.querySelector("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected");
          W && $KW.Calendar.__dp.removeClass(W, "-kony-w-c-navigator-month-selected");
          q && $KW.Calendar.__dp.removeClass(q, "-kony-w-c-navigator-year-selected");
          if (W || q) {
            H.style.visibility = "hidden";
            if (V) {
              V.style.visibility = "hidden"
            }
            var aa = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-k-w-c-nav-selected-ym")[0];
            aa.innerHTML = ""
          } else {
            var ai = document.getElementById(M + "-k-w-c-navigator-scrim");
            ai.parentNode.removeChild(ai);
            var m = document.querySelectorAll("[tabindex]");
            for (var ab = 0; ab < m.length; ab++) {
              m[ab].removeAttribute("tabindex")
            }
            document.activeElement.blur();
            document.querySelectorAll(".-kony-w-c-popup-container")[0].setAttribute("aria-hidden", false);
            var X = document.querySelector(".-kony-w-c-yemo");
            if (X) {
              X.setAttribute("tabindex", 1);
              X.focus()
            }
          }
          return false
        } else {
          if (c.className.indexOf("-kony-w-c-go-nav") > -1) {
            var M = c.getAttribute("k-w-c-id"),
              t = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-year-selected")[0];
            if (t) {
              var O = t.getAttribute("k-w-c-hold") * 1
            }
            var p = document.querySelectorAll("#" + M + "-k-w-c-datepicker .-kony-w-c-navigator-month-selected")[0];
            if (p) {
              var N = p.getAttribute("k-w-c-hold") * 1
            }
            var af = O ? O : u.currentSelectedyearMonth[1].trim();
            var r = N ? N : u.currentSelectedMonth + 1;
            if ((r > 0 && !(r >= 1 && r <= 12))) {
              H.style.visibility = "hidden";
              if (V) {
                V.style.visibility = "hidden"
              }
              alert(d.navigatorAlert);
              return false
            }
            number = parseInt(af, 10);
            if (af || r) {
              var ai = document.getElementById(M + "-k-w-c-navigator-scrim");
              ai.parentNode.removeChild(ai);
              var Z = [];
              var C = $KW.Calendar.__dp.series((af || d.year || new Date().getFullYear()), (r || d.month || new Date().getMonth() + 1), (d.noofmonths || 1) * 1 + 1);
              var v;
              $KW.Calendar.__dp.show(d, C, D, document.getElementById(M))
            } else {
              H.style.visibility = "hidden";
              if (V) {
                V.style.visibility = "hidden"
              }
              alert(d.navigatorAlert);
              return false
            }
            var m = document.querySelectorAll("[tabindex]");
            for (var ab = 0; ab < m.length; ab++) {
              m[ab].removeAttribute("tabindex")
            }
            document.activeElement.blur();
            document.querySelectorAll(".-kony-w-c-popup-container")[0].setAttribute("aria-hidden", false);
            var X = document.querySelector(".-kony-w-c-yemo");
            if (X) {
              X.setAttribute("tabindex", 1);
              X.focus()
            }
            return false
          } else {
            if (c.className.indexOf("-kony-w-c-left-ym-p") > -1) {
              H.style.visibility = "hidden";
              if (V) {
                V.style.visibility = "hidden"
              }
              var M = c.getAttribute("k-w-c-id"),
                e = document.querySelectorAll("#" + M + "-k-w-c-navigator-scrim .-kony-w-c-navigator-year");
              for (var ab = 0; ab < e.length; ab++) {
                if (e[e.length - 1].innerHTML == "") {
                  e[ab].style.visibility = "visible";
                  this.cellVisibility = true;
                  if ((e[ab - 1] != undefined) && e[ab - 1].innerHTML != "") {
                    e[ab].innerHTML = (Number(e[ab - 1].innerHTML) + 1);
                    e[ab].setAttribute("k-w-c-hold", (Number(e[ab].innerHTML)))
                  } else {
                    e[ab].innerHTML = (Number(e[ab].innerHTML) - 16);
                    e[ab].setAttribute("k-w-c-hold", (Number(e[ab].innerHTML)))
                  }
                  $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                } else {
                  var n = e[ab].getAttribute("k-w-c-hold") * 1;
                  if (n - 16 >= B) {
                    e[ab].innerHTML = n - 16;
                    e[ab].setAttribute("k-w-c-hold", (n - 16));
                    if (n - B <= 16) {
                      for (var b = ab - 1; b >= 0; b--) {
                        e[b].innerHTML = "";
                        e[b].style.visibility = "hidden";
                        this.cellVisibility = false
                      }
                    } else {
                      e[ab].style.visibility = "visible";
                      e[ab].setAttribute("k-w-c-hold", (n - 16));
                      $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                    }
                  }
                }
              }
              return false
            } else {
              if (c.className.indexOf("-kony-w-c-right-ym-p") > -1) {
                H.style.visibility = "hidden";
                if (V) {
                  V.style.visibility = "hidden"
                }
                var M = c.getAttribute("k-w-c-id");
                var e = document.querySelectorAll("#" + M + "-k-w-c-navigator-scrim .-kony-w-c-navigator-year");
                for (var ab = 0; ab < e.length; ab++) {
                  if (e[ab].innerHTML == "" && this.cellVisibility == false) {
                    e[ab].style.visibility = "visible";
                    if ((e[ab - 1] != undefined) && e[ab - 1].innerHTML != "") {
                      e[ab].innerHTML = (Number(e[ab - 1].innerHTML) + 1);
                      e[ab].setAttribute("k-w-c-hold", (Number(e[ab].innerHTML)))
                    } else {
                      e[ab].innerHTML = (Number(e[e.length - 1].innerHTML) + 1);
                      e[ab].setAttribute("k-w-c-hold", (Number(e[e.length - 1].innerHTML) + 1))
                    }
                    $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                  } else {
                    var n = e[ab].getAttribute("k-w-c-hold") * 1;
                    if (n + 16 <= f) {
                      e[ab].innerHTML = n + 16;
                      e[ab].setAttribute("k-w-c-hold", (n + 16));
                      if (Number(e[ab].innerHTML) == f) {
                        for (var b = ab + 1; b < 16; b++) {
                          e[b].innerHTML = "";
                          e[b].style.visibility = "hidden"
                        }
                      } else {
                        e[ab].style.visibility = "visible";
                        this.cellVisibility = true;
                        e[ab].setAttribute("k-w-c-hold", (n + 16));
                        $KW.Calendar.__dp.removeClass(e[ab], "-kony-w-c-navigator-year-selected")
                      }
                    }
                  }
                }
                return false
              } else {
                if (c.className.indexOf("-k-w-c-close-picker") > -1) {
                  var M = c.getAttribute("k-w-c-id");
                  ai = document.getElementById(M + "-k-w-c-datepicker");
                  var I = $KU.getNodeByModel(u);
                  if (I) {
                    I = I.childNodes[0];
                    if (I.value == "") {
                      $KW.Calendar.clear(u)
                    }
                  }
                  ai.parentNode.removeChild(ai);
                  var ac = document.getElementById(u.pf);
                  if (ac != null) {
                    ac.setAttribute("aria-hidden", false)
                  }
                  $KW.Calendar.__dp.destroyCalendar(undefined, I.id);
                  return
                } else {
                  if (J == d.id) {
                    return false
                  }
                }
              }
            }
          }
        }
      }
    }
    $KW.Calendar.__dp.reAssignData(u);
    if (c.nodeName == "INPUT" || c.nodeName == "IMG") {
      u.__id = c.parentNode.id
    } else {
      u.__id = c.id;
      if (c.firstChild) {
        u.__input = c.firstChild.id
      } else {
        return false
      }
    }
    $KW.Calendar && $KW.Calendar.__dp.destroyCalendar(1);
    var D;
    c.blur();
    $KW.Calendar && $KW.Calendar.__dp.show(u, D, D, c);
    var X = document.querySelector(".-kony-w-c-yemo");
    if (X) {
      X.focus()
    }
  },
  updateModelByContainerData: function(e, g, c) {
    var l = $KU.getParentByAttribute(g, "index");
    var a = c.split("_")[1];
    var f;
    if (l) {
      var b = l.parentNode.parentNode;
      var d = $KU.getModelByNode(b);
      if (d.wType == "DataGrid") {
        var i = $KU.getParentByAttribute(g, "colindex");
        if (l.getAttribute("index") == "0") {
          var k = d.columnheadersconfig[i.cellIndex + IndexJL];
          f = k.columnheadertemplate.data
        } else {
          a = IndexJL ? a : a - 1;
          f = d.data[a][i.id]
        }
      } else {
        f = d.data[a]
      }
      var j = f[c.split("_")[0]].dateComponents;
      var h = f[c.split("_")[0]].dateFormat;
      e.datecomponents = j;
      e.dateformat = e.format = h
    }
  },
  displayedMonth: function(b, e, c) {
    var a = $KW.Calendar.__dp.series(c, e, (b.noofmonths || 1) * 1 + 1);
    var d = $KU.getNodeByModel(b);
    if (!d) {
      return false
    }
    $KW.Calendar.__dp.destroyCalendar(1);
    b.displayedMonths = [e, c];
    $KW.Calendar.__dp.reAssignData(b);
    $KW.Calendar.__dp.show(b, a, 1, d)
  },
  calendarTextfieldChangeEventHandler: function(d, g) {
    var a = g.parentNode.getAttribute("id");
    var k = $KU.getElementID(a);
    a = a.split("_").length > 2 ? a.substring(0, a.lastIndexOf("_")) : a;
    var c = kony.model.getWidgetModel(g.getAttribute("kformname"), $KU.getElementID(a), g.getAttribute("ktabpaneid"));
    var c = kony.model.getWidgetModel(g.getAttribute("kformname"), $KU.getElementID(a), g.getAttribute("ktabpaneid"));
    var b = g.value;
    if (b.length == 0) {
      c.clear();
      return false
    }
    var m = $KW.Calendar.__dp.dateFormatter(c.dateformat, null, b, c.dateComponents[2 + IndexJL]);
    if (c.validstartdate) {
      var l = new Date(c.validstartdate[2], c.validstartdate[1] - 1, c.validstartdate[0]);
      var i = new Date(c.validenddate[2], c.validenddate[1] - 1, c.validenddate[0])
    } else {
      var l = undefined;
      var i = undefined
    }
    if (m) {
      var h = new Date(m.date[2], m.date[1] - 1, m.date[0]);
      if (l < h && h > i) {
        alert("Date is not set in the valid range.Please try again");
        g.value = "";
        return false
      }
    }
    if (b.length > 0 && c.dateComponents) {
      if (m != false) {
        c.dateComponents = m.date;
        if (kony.appinit.isIE7 || kony.appinit.isIE8) {
          m.date[3] = (c.hour != 0) ? c.hour : new Date().getHours();
          m.date[4] = (c.minutes != 0) ? c.minutes : new Date().getMinutes();
          m.date[5] = (c.seconds != 0) ? c.seconds : new Date().getSeconds();
          c.date = m.date;
          c.datecomponents = m.date;
          c.day = m.date[0];
          c.month = m.date[1];
          c.year = m.date[2];
          c.formatteddate = m.string
        }
        g.className = g.className.replace("konyplaceholder", "");
        g.value = m.string;
        c._startG = c.datecomponents;
        var j = document.getElementById(g.parentNode.id);
        if (IndexJL == 1 && model.datecomponents[0] != null) {
          c.datecomponents = [null].concat(c.datecomponents)
        }
        c.month = c.datecomponents[1 + IndexJL];
        c.day = c.datecomponents[0 + IndexJL];
        c.year = c.datecomponents[2 + IndexJL];
        if (j.getAttribute("kcontainerID")) {
          $KW.Utils.updateContainerData(c, j, false)
        }
        var e = new Date();
        c.minutes = e.getMinutes();
        c.hour = e.getHours();
        c.seconds = e.getSeconds();
        var f = $KU.returnEventReference(c.ondone);
        f && f.call(c, c)
      } else {
        g.value = c.formatteddate || ""
      }
    }
  },
  onfocusEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    var b = document.getElementById(d.id);
    if (kony.utils.placeholderSupported == false) {
      if (b != null && b.value == c.placeholder) {
        b.value = "";
        $KU.removeClassName(b, "konyplaceholder")
      }
    }
  },
  onblurEventHandler: function(a, d) {
    var c = $KU.getModelByNode(d);
    var b = document.getElementById(d.id);
    if (kony.utils.placeholderSupported == false) {
      if (b != null && b.value == "") {
        $KU.addClassName(b, "konyplaceholder");
        b.value = c.placeholder
      }
    }
  },
  setPlaceholder: function(b, a) {
    if (IndexJL == 0) {
      if (kony.utils.placeholderSupported == false) {
        a.value = b.placeholder;
        $KU.addClassName(a, "konyplaceholder")
      }
    } else {
      if (b.formatteddate == null || b.formatteddate == undefined) {
        b.formatteddate = ""
      }
      if (kony.utils.placeholderSupported == false && b.formatteddate.length < 1) {
        a.value = b.placeholder;
        $KU.addClassName(a, "konyplaceholder")
      }
    }
  },
  updateCalDOMNode: function(d, b) {
    var c = "";
    var f = "",
      g = "";
    if (!d.datecomponents) {
      if (!d.datecomponents) {
        return false
      }
    }
    if (IndexJL == 1 && d.datecomponents[0] != null) {
      d.datecomponents = [null].concat(d.datecomponents)
    }
    d.day = d.datecomponents[0 + IndexJL];
    d.month = d.datecomponents[1 + IndexJL];
    d.year = d.datecomponents[2 + IndexJL];
    if (d.day && d.month && d.year) {
      var a = $KW.Calendar.__dp.dateFormatter(d.dateformat, [d.day, d.month, d.year]);
      if (a != false) {
        c = a.string
      }
      var e = document.getElementById(d.id);
      if (e && b) {
        e.value = c;
        if (typeof document.createElement("input").placeholder == "undefined") {
          $KU.removeClassName(e, "konyplaceholder")
        }
      }
      d.formatteddate = c;
      d.selectdate = g + "/" + f + "/" + d.year;
      d.pagedate = g + "/" + d.year
    } else {
      d.formatteddate = c
    }
  },
  clear: function(b) {
    var a = $KU.getNodeByModel(b);
    if (a) {
      a = a.childNodes[0];
      a.value = ""
    }
    b.datecomponents = null;
    b.entereddate = null;
    b.date = null;
    b.formatteddate = null;
    b.day = null;
    b.month = null;
    b.year = null;
    b.seconds = null;
    b.minutes = null;
    b.hour = null;
    if (!kony.utils.placeholderSupported && a) {
      b.placeholder = b.placeholder || b.dateformat || b.format;
      a.value = b.placeholder;
      $KU.addClassName(a, "konyplaceholder")
    }
  },
  setEnableAll: function(a) {
    a.datesGroup = "";
    a.datesGroupSimplified = ""
  },
  navigateToPreviousMonth: function(b) {
    $KW.Calendar.__dp.reAssignData(b);
    var c = b.displayedMonths[0],
      d = b.displayedMonths[1];
    if (c == 1) {
      c = 12;
      d = d - 1
    } else {
      c = c - 1
    }
    var a = $KW.Calendar.__dp.series(d, c, (b.noofmonths || 1));
    $KW.Calendar.displayedMonth(b, a[0][0], a[0][1])
  },
  navigateToNextMonth: function(b) {
    $KW.Calendar.__dp.reAssignData(b);
    var a = $KW.Calendar.__dp.series(b.displayedMonths[1], b.displayedMonths[0], (b.noofmonths || 1) * 1 + 1);
    a.splice(0, 1);
    $KW.Calendar.displayedMonth(b, a[0][0], a[0][1])
  },
  enableRangeOfDates: function(d, b, e, i, a) {
    d.datesState = (a == true ? 1 : 0);
    var g = new Date(b[2 + IndexJL], b[1 + IndexJL] - 1, b[0 + IndexJL]);
    var h = new Date(e[2 + IndexJL], e[1 + IndexJL] - 1, e[0 + IndexJL]);
    d.datesGroupSkin = i;
    var f = d.datesGroup;
    var c = [];
    c.push.apply(c, $KW.Calendar.__dp.between(g, h));
    d.datesGroupSimplified = c
  },
  setEnabled: function(d, k, b, l, a) {
    if (IndexJL == 1 && arguments.length == 4) {
      a = l;
      l = b;
      b = 0
    }
    d.datesState = (a == true ? 1 : 0);
    d.datesGroupSkin = l;
    var c = [];
    if (k && k.length > IndexJL && k[IndexJL] instanceof Array) {
      d.datesGroup = k;
      var f = d.datesGroup;
      for (var e = 0 + IndexJL; e < f.length; e++) {
        var i = f[e];
        if (+i.length == i.length) {
          c.push(new Date(i[2 + IndexJL], i[1 + IndexJL] - 1, i[0 + IndexJL]).setHours(0, 0, 0, 0))
        }
      }
    } else {
      var h = new Date(k[2 + IndexJL], k[1 + IndexJL] - 1, k[0 + IndexJL]);
      var g = new Date(b[2 + IndexJL], b[1 + IndexJL] - 1, b[0 + IndexJL]);
      c.push.apply(c, $KW.Calendar.__dp.between(h, g))
    }
    d.datesGroupSimplified = c
  },
  setDateSkin: function(b, e, d) {
    for (var c = 0 + IndexJL, a = e.length; c < a; c++) {
      b.specialDates = b.specialDates ? b.specialDates : {};
      if (!b.specialDates[d]) {
        b.specialDates[d] = e
      } else {
        b.specialDates[d].push.apply(b.specialDates[d], e)
      }
    }
  },
  formatDate: function(date) {
    if (date) {
      try {
        if (date instanceof Array) {
          date = eval(date);
          date = date[1 + IndexJL] + "/" + date[IndexJL] + "/" + date[2 + IndexJL]
        }
      } catch (e) {
        date = ""
      }
    }
    return date
  },
  ideDateToString: function(date) {
    if (date) {
      try {
        if (date instanceof Array) {
          date = eval(date);
          date = date[IndexJL] + "/" + date[1 + IndexJL] + "/" + date[2 + IndexJL]
        }
      } catch (e) {
        date = ""
      }
    }
    return date
  },
  setCalStyle: function(f, a) {
    var g = document.getElementById("container_c");
    var c = $KU.isAndroid ? ($KU.isAndroid_HTC ? 250 : 100) : 0;
    if (g && $KG.nativeScroll) {
      setTimeout(function() {
        g.style.top = E.getDocumentScrollTop() + 5 + "px"
      }, c)
    }
    var b = document.getElementsByName("calBody");
    if (b) {
      for (var d = 0; d < b.length; d++) {
        var e = b[d];
        $KW.Calendar.setCalElementStyle(e, true)
      }
    }
  },
  adjustCalendars: function(a) {
    var b = document.querySelectorAll("#" + a.pf + "_" + a.id + " input[name='calBody']");
    for (var c = 0; c < b.length; c++) {
      var d = b[c];
      $KW.Calendar.setCalElementStyle(d, true)
    }
  },
  setCalElementStyle: function(f, q) {
    if (!q) {
      f = f.previousSibling
    }
    if (!f) {
      return
    }
    var j = f.parentNode;
    var g = $KU.getModelByNode(j);
    if (j.style.display != "inline-block") {
      var n = f.nextSibling;
      var p = f.parentNode.parentNode;
      f.style.fontFamily = $KU.getStyle(j, "font-family");
      f.style.fontSize = $KU.getStyle(j, "font-size");
      f.style.color = $KU.getStyle(j, "color");
      f.style.fontWeight = $KU.getStyle(j, "font-weight");
      f.style.fontStyle = $KU.getStyle(j, "font-style");
      if (g && g.calimgheight) {
        n.style.height = g.calimgheight
      } else {
        n.style.height = f.clientHeight + "px"
      }
      n.style.width = "auto";
      if (kony.appinit.isIE7) {
        f.style["float"] = "left";
        f.style.borderStyle = "none"
      }
      var b = $KU.getStyle(j, "border-top-left-radius");
      var c = $KU.getStyle(j, "border-bottom-left-radius");
      var d = $KU.getStyle(j, "border-top-right-radius");
      var e = $KU.getStyle(j, "border-bottom-right-radius");
      var o = blr = trr = brr = 0;
      if (b) {
        o = parseInt(b.substring(0, b.indexOf("p")))
      }
      if (c) {
        blr = parseInt(c.substring(0, c.indexOf("p")))
      }
      if (d) {
        trr = parseInt(d.substring(0, d.indexOf("p")))
      }
      if (e) {
        brr = parseInt(e.substring(0, e.indexOf("p")))
      }
      var h = 0;
      var l = 0;
      if (o <= blr) {
        h = parseInt(blr / 2);
        f.style.marginLeft = h + "px"
      } else {
        h = parseInt(o / 2);
        f.style.marginLeft = h + "px"
      }
      if (trr <= brr) {
        l = parseInt(brr / 2);
        n.style.marginRight = l + "px"
      } else {
        l = parseInt(trr / 2);
        n.style.marginRight = l + "px"
      }
      var s = $KU.getStyle(j, "width");
      if (!p) {
        return
      }
      var r = $KU.getStyle(p, "width");
      if (r == "100%") {
        r = p.clientWidth + "px"
      }
      var m = parseInt(r.substring(0, r.indexOf("p")));
      var a = $KU.getStyle(n, "width");
      if (a == "auto") {
        a = n.clientWidth + "px"
      }
      if (a != "auto") {
        var i = parseInt(a.substring(0, a.indexOf("p")));
        if (!m) {
          m = p.offsetWidth
        }
        var k;
        if (kony.appinit.isIE7) {
          k = ((m - (1.4 * i) - h - l) / m) * 100
        } else {
          k = ((m - (2 * i) - h - l) / m) * 100
        }
        if (isFinite(k)) {
          f.style.width = k + "%"
        }
      }
    }
  }
};
if (!Array.prototype.indexOf) {
  Array.prototype.indexOf = function(b) {
    for (var a = 0; a < this.length; a++) {
      if (this[a] === b) {
        return a
      }
    }
    return -1
  }
}
if (!document.querySelectorAll) {
  (function(b, a) {
    b = document, a = b.createStyleSheet();
    b.querySelectorAll = function(g, h, f, e, d) {
      d = b.all, h = [], g = g.replace(/\[for\b/gi, "[htmlFor").split(",");
      for (f = g.length; f--;) {
        a.addRule(g[f], "k:v");
        for (e = d.length; e--;) {
          d[e].currentStyle.k && h.push(d[e])
        }
        a.removeRule(0)
      }
      return h
    }
  })()
}
$KW.Calendar.__dp = {
  navigatorTemplate: function(d, n) {
    var l;
    if (arguments.length > 2 && arguments[3] === "fromYearMonth") {
      l = Number(arguments[2])
    } else {
      l = null
    }
    var o = d.tabpaneId;
    var b = (" kformname='" + d.pf + "' ") + (o && " ktabpaneid='" + o + "' ");
    var c = $KU.getImageURL("sprite.png");
    var q = $KU.getImageURL("left-arrow.png");
    var v = $KU.getImageURL("right-arrow.png");
    var p;
    if (kony.appinit.isWindowsPhone) {
      p = "<div w-type='Calendar' id='" + (d.id + "-k-w-c-navigator-") + "' class='-k-w-c-datepicker-navigator' kwidgettype='Calendar' " + b + " style='height:" + d.popupHeight + ";width:" + d.popupWidth + ";position:absolute;background-color:White'><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%;'><div w-type='Calendar'  style='display:table-row;width:100%;height:100%'><a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-cancel-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  class='-kony-w-c-cancel-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-cancel.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></a><div w-type='Calendar' w-type-inactive='true' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-selected-ym'></div><a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-go-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  class='-kony-w-c-go-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-go.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></a></div></div>";
      var g = this.months.slice(0);
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:30%;width:100%;border-bottom:1px solid #FAFAFA'>";
      g = this.chunks(g, 6);
      for (var s = 0; s < g.length; s++) {
        var t = g[s];
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:50%'>";
        for (var r = 0; r < t.length; r++) {
          p += "<a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:center;vertical-align:middle;font-size:smaller;text-decoration:none;' class='-kony-w-c-navigator-month' k-w-c-hold='" + ((s * 6) + (r + 1)) + "' k-w-c-id='" + n + "' kwidgettype='Calendar'" + b + " >" + t[r].substring(0, 3) + "</a>"
        }
        p += "</div>"
      }
      p += "</div><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%'><div w-type='Calendar'   style='display:table-row;width:100%;height:100%'><a href='javascript:void(0)' w-type='Calendar' style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-left-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><span class='-kony-w-c-left-ym-p' style='height:15px;width:25px;display:inline-block;background:url(" + c + ") no-repeat 0 -450px' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></span></a><div w-type-inactive='true'  w-type='Calendar' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-yr-range'></div><a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-right-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><span w-type='Calendar'  class='-kony-w-c-right-ym-p' style='height:15px;width:25px;display:inline-block;background:url(" + c + ") no-repeat 0 -500px' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></span></a></div></div>";
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:40%;width:100%'>";
      var k = 2001;
      var m;
      if (l != null) {
        if (l > k) {
          m = Math.floor((l - 2001) / 16);
          for (var u = 0; u < m; u++) {
            k = k + 16
          }
        } else {
          m = Math.ceil((2001 - l) / 16);
          for (var u = 0; u < m; u++) {
            k = k - 16
          }
        }
      }
      for (s = 1; s <= 4; s++) {
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:25%'>";
        for (r = 1; r <= 4; r++) {
          if ((k > 1900 && k < 2099) || k == 2099 || k == 1900) {
            p += "<a herf='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:visible;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</a>"
          } else {
            p += "<a href='javascript:void(0)' w-type='Calendar'  style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:hidden;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</a>"
          }
          k++
        }
        p += "</div>"
      }
      p += "</div></div>"
    } else {
      var a = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.previousYearLink"] : "Previous set of Years" : "Previous set of Years";
      var e = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.nextYearLink"] : "Next set of Years" : "Next set of Years";
      var f = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.cancelImage"] : "Cancel Selection" : "Cancel Selection";
      var h = $KG.i18nArray ? $KG.i18nArray ? $KG.i18nArray["platform.calendar.selectedImage"] : "Done Selecting" : "Done Selecting";
      p = "<div w-type='Calendar' id='" + (d.id + "-k-w-c-navigator-") + "' class='-k-w-c-datepicker-navigator' kwidgettype='Calendar' " + b + " style='height:" + d.popupHeight + ";width:" + d.popupWidth + ";position:absolute;background-color:White'><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%;'><div w-type='Calendar'  style='display:table-row;width:100%;height:100%'><div w-type='Calendar'  style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-cancel-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar' alt='" + f + "' class='-kony-w-c-cancel-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-cancel.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></div><div w-type='Calendar' w-type-inactive='true' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-selected-ym'></div><div w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-go-nav' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  alt='" + h + "'class='-kony-w-c-go-nav' style='height:50%;width:50%;' src='" + $KU.getImageURL("k-go.png") + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ></div></div></div>";
      var g = this.months.slice(0);
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:30%;width:100%;border-bottom:1px solid #FAFAFA'>";
      g = this.chunks(g, 6);
      for (var s = 0; s < g.length; s++) {
        var t = g[s];
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:50%'>";
        for (var r = 0; r < t.length; r++) {
          p += "<div w-type='Calendar' role='option' aria-label='" + t[r] + "' style='display:table-cell;width:15%;text-align:center;vertical-align:middle;font-size:smaller' class='-kony-w-c-navigator-month' k-w-c-hold='" + ((s * 6) + (r + 1)) + "' k-w-c-id='" + n + "' kwidgettype='Calendar'" + b + " >" + t[r].substring(0, 3) + "</div>"
        }
        p += "</div>"
      }
      p += "</div><div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:15%;width:100%'><div w-type='Calendar'   style='display:table-row;width:100%;height:100%'><div w-type='Calendar' style='display:table-cell;width:15%;text-align:left;vertical-align:middle' class='-kony-w-c-left-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img class='-kony-w-c-left-ym-p' src = '" + q + "' alt='" + a + "' style='height:15px;width:25px;display:inline-block' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " /></div><div w-type-inactive='true'  w-type='Calendar' style='display:table-cell;width:70%;text-align:center;vertical-align:middle' class='-k-w-c-nav-yr-range'></div><div w-type='Calendar'  style='display:table-cell;width:15%;text-align:right;vertical-align:middle' class='-kony-w-c-right-ym-p' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " ><img w-type='Calendar'  class='-kony-w-c-right-ym-p' src = '" + v + "' alt='" + e + "'style='height:15px;width:25px;display:inline-block' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " /></div></div></div>";
      p += "<div w-type='Calendar'  class='-kony-w-c-navigator-table' style='display:table;table-layout:fixed;height:40%;width:100%'>";
      var k = 2001;
      var m;
      if (l != null) {
        if (l > k) {
          m = Math.floor((l - 2001) / 16);
          for (var u = 0; u < m; u++) {
            k = k + 16
          }
        } else {
          m = Math.ceil((2001 - l) / 16);
          for (var u = 0; u < m; u++) {
            k = k - 16
          }
        }
      }
      for (s = 1; s <= 4; s++) {
        p += "<div w-type='Calendar'   style='display:table-row;width:100%;height:25%'>";
        for (r = 1; r <= 4; r++) {
          if ((k > 1900 && k < 2099) || k == 2099 || k == 1900) {
            p += "<div w-type='Calendar' role='option' aria-label = '" + k + "' style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:visible;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</div>"
          } else {
            p += "<div w-type='Calendar' role='option' aria-label = '" + k + "' style='display:table-cell;width:25%;text-align:center;vertical-align:middle;font-size:smaller;visibility:hidden;' class='-kony-w-c-navigator-year' k-w-c-hold='" + k + "' k-w-c-id='" + n + "' kwidgettype='Calendar' " + b + " >" + k + "</div>"
          }
          k++
        }
        p += "</div>"
      }
      p += "</div></div>"
    }
    return p
  },
  template: function(h, o, c, d) {
    var m = d.tabpaneId;
    var e = (" kformname='" + d.pf + "' ") + (m && " ktabpaneid='" + m + "' ");
    var l, n;
    if (kony.appinit.isWindowsPhone) {
      n = '<div w-type="Calendar"  style="display:inline-block;" class="-kony-w-c-popup-container" id="{{id}}" style="height:' + o + ";width:" + c + ';"><div w-type="Calendar"  class="-kony-w-c-topSection"><div w-type="Calendar"  class="-kony-w-c-table" style=";width:100%;height:70%;"><div w-type="Calendar"  class="-kony-w-c-row"><a href="javascript:void(0)" w-type="Calendar"  ' + e + ' class="-kony-w-c-cell -kony-w-c-prev-nav" style="width:20%;text-align:left;display:table-cell"><img w-type="Calendar" class="-kony-w-c-next-nav-right-link" alt="Next Month" style="height:15px;width:25px;display:inline-block" /></a><a href="javascript:void(0)" w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="-kony-w-c-cell -kony-w-c-yemo" style="width:60%;display:table-cell;text-align:center;text-decoration:none;color:#000000;"></a><a href="javascript:void(0)" w-type="Calendar" ' + e + ' class="-kony-w-c-cell -kony-w-c-next-nav" style="width:20%;text-align:right;display:table-cell;"><img w-type="Calendar" class="-kony-w-c-next-nav-right-link" alt="Next Month" style="height:15px;width:25px;display:inline-block" /></a></div></div><div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-daysHeader" style="width:100%;height:30%;"><div w-type="Calendar"  class="-kony-w-c-row">';
      for (l = 1; l <= 7; l++) {
        n += '<a href="javascript:void(0)" ' + e + ' w-type = "Calendar" class="" id="-kony-w-c-cell-' + l + '" style="width:' + h[l - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller;text-decoration:none;color:#000000;"></a>'
      }
      n += '</div></div></div><div w-type="Calendar" class="kony-w-c-actualDates">';
      for (; l <= 49; l = l + 7) {
        var g = '<div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-day-table" style=""><div w-type="Calendar"  class="-kony-w-c-row -kony-w-c-day-row">';
        var a = 1;
        for (var k = l; k <= l + 6; k++) {
          g += '<a href="javascript:void(0)" w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="" id="-kony-w-c-cell-' + k + '"  style="width:' + h[a - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller;text-decoration:none;color:inherit;"></a>';
          a++
        }
        g += "</div></div>";
        for (var k = l; k <= l + 7; k++) {
          g = g.replace("{{}}", k)
        }
        n += g
      }
      n += "</div></div>"
    } else {
      var f = $KG.i18nArray ? $KG.i18nArray["platform.calendar.previousMonthLink"] ? $KG.i18nArray["platform.calendar.previousMonthLink"] : "Previous Month" : "Previous Month";
      var b = $KG.i18nArray ? $KG.i18nArray["platform.calendar.nextMonthLink"] ? $KG.i18nArray["platform.calendar.nextMonthLink"] : "Next Month" : "Next Month";
      n = '<div w-type="Calendar"  style="display:inline-block;" class="-kony-w-c-popup-container" id="{{id}}" style="height:' + o + ";width:" + c + ';"><div w-type="Calendar"  class="-kony-w-c-topSection"><div w-type="Calendar"  class="-kony-w-c-table" style=";width:100%;height:70%;"><div w-type="Calendar"  class="-kony-w-c-row"><div w-type="Calendar"  ' + e + ' class="-kony-w-c-cell -kony-w-c-prev-nav" style="width:20%;text-align:left;display:table-cell"><img w-type="Calendar" class="-kony-w-c-prev-nav-left-link" alt="' + f + '" style="height:15px;width:25px;display:inline-block" /></div><div w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="-kony-w-c-cell -kony-w-c-yemo" style="width:60%;display:table-cell;text-align:center;outline-color:#FFFFFF;" tabindex="1"></div><div w-type="Calendar" ' + e + ' class="-kony-w-c-cell -kony-w-c-next-nav" style="width:20%;text-align:right;display:table-cell;"><img w-type="Calendar" class="-kony-w-c-next-nav-right-link" alt="' + b + '" style="height:15px;width:25px;display:inline-block" /></div></div></div><div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-daysHeader" style="width:100%;height:30%;"><div w-type="Calendar"  class="-kony-w-c-row">';
      for (l = 1; l <= 7; l++) {
        n += "<div " + e + ' w-type = "Calendar" class="" id="-kony-w-c-cell-' + l + '" style="width:' + h[l - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller"></div>'
      }
      n += '</div></div></div><div w-type="Calendar" class="kony-w-c-actualDates">';
      for (; l <= 49; l = l + 7) {
        var g = '<div w-type="Calendar"  class="-kony-w-c-table -kony-w-c-day-table" style=""><div w-type="Calendar"  class="-kony-w-c-row -kony-w-c-day-row">';
        var a = 1;
        for (var k = l; k <= l + 6; k++) {
          g += '<div w-type="Calendar" ' + e + ' kwidgettype="Calendar" class="" id="-kony-w-c-cell-' + k + '"  style="width:' + h[a - 1] + ';display:table-cell; vertical-align:middle; text-align:center; height:100%;font-size:smaller;"></div>';
          a++
        }
        g += "</div></div>";
        for (var k = l; k <= l + 7; k++) {
          g = g.replace("{{}}", k)
        }
        n += g
      }
      n += "</div></div>"
    }
    return n
  },
  reAssignData: function(c, d) {
    if (!c.datecomponents) {
      $KW.Calendar.setCurrentDate(c);
      c.minutes = 0;
      c.hour = 0;
      c.seconds = 0
    }
    c.entereddate = c.datecomponents;
    c.monthsinrow = c.monthsinrow || 3;
    if (c.noofmonths < 1 || isNaN(c.noofmonths * 1)) {
      c.noofmonths = 1
    }
    c.datesGroup = [];
    c.datesState = c.datesState || 0;
    c.enddate = c.enddate || c.validenddate;
    c.startdate = c.startdate || c.validstartdate;
    c.dateformat = c.dateformat || c.format || "dd/mm/yyyy";
    c.popupHeight = c.popupHeight || Math.min.apply(Math, [300, window.innerHeight || document.documentElement.clientHeight]) + "px";
    c.popupWidth = c.popupWidth || Math.min.apply(Math, [300, window.innerWidth || document.documentElement.clientWidth]) + "px";
    c.startDay = c.startDay || 0;
    if (!c.viewconfig) {
      c.viewconfig = {};
      c.viewconfig.gridConfig = c.viewconfig.gridconfig = {}
    }
    var b = c.viewconfig.gridconfig || c.viewconfig.gridConfig || {};
    b.gridCellWeekendSkin = b.gridCellWeekendSkin || b.gridcellweekendskin || "-kony-w-c-weekend-";
    b.gridCellInactiveDaysSkin = b.gridCellInactiveDaysSkin || b.gridcellinactivedaysskin || "-k-w-c-inactive";
    b.gridCellSkin = b.gridCellSkin || b.gridcellskin || "-kony-w-c-day-skin";
    b.gridCellSelectedSkin = b.gridCellSelectedSkin || b.gridcellselectedskin || "-kony-w-c-selected-";
    b.gridCellTodaySkin = b.gridCellTodaySkin || b.gridcelltodayskin || "-kony-w-c-today-";
    b.doneButtonSkin = b.doneButtonSkin || "-k-w-c-cancel-cal-";
    b.monthHeaderSkin = b.monthHeaderSkin || " -kony-w-c-yemo-skin";
    b.dayHeaderSkin = b.dayHeaderSkin || " -kony-w-c-day-label-cell";
    if (b.allowWeekendSelectable == d) {
      b.allowWeekendSelectable = b.allowweekendselectable
    }
    var a, g;
    if (c.startdate) {
      a = c.startdate[2 + IndexJL];
      g = c.startdate[1 + IndexJL]
    }
    var g = c.year || g || new Date().getFullYear(),
      e = c.month || a || new Date().getMonth() + 1;
    c.displayedMonths = c.displayedMonths || [e, g];
    c.dayTextAlignmentInCell = c.dayTextAlignmentInCell || "CONTENT _ALIGN_CENTER";
    if (c.year) {
      var f = c.year.toString();
      if (f.length > 4) {
        c.year = f.substr(f.length - 4) * 1
      }
    }
    c.navigatorAlert = $KG.i18nArray && $KG.i18nArray["gridCalAlertI18Nkey"] ? kony.i18n.getLocalizedString("gridCalAlertI18Nkey") : (c.navigatorAlert || "Invalid Selection")
  },
  dayTextAlignmentInCell: function(b) {
    b = b.toLowerCase().split("_");
    var a = {};
    a["vertical-align"] = (b[2] && b[2] == "center" ? "middle" : b[2]) || "middle";
    a["text-align"] = b[3] || "center";
    return a
  },
  addClass: function(a, b) {
    if (!this.hasClass(a, b)) {
      a.className = (a.className === "") ? b : a.className + " " + b
    }
  },
  getByClass: function(b, a) {
    return document.querySelectorAll("#" + b.id + " ." + a)
  },
  getBySele: function(b, a) {
    return document.querySelectorAll("#" + b.id + " " + a)
  },
  removeClass: function(a, b) {
    a.className = this.trim((" " + a.className + " ").replace(" " + b + " ", " "))
  },
  hasClass: function(a, b) {
    return (" " + a.className + " ").indexOf(" " + b + " ") !== -1
  },
  trim: function(a) {
    return a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "")
  },
  div: function() {
    var a = document.createElement("div");
    return a
  },
  updateMonthData: function(l, k, B, x, h, n, o) {
    if (n == 0) {
      n = this.div();
      n.innerHTML = B;
      n = n.firstChild;
      document.body.appendChild(n);
      var s = 0
    }
    var z = k.viewconfig.gridconfig || k.viewconfig.gridConfig || {},
      t = z.allowWeekendSelectable,
      w = 0;
    this.addClass(n, z.gridSkin);
    var c = this.getBySele(n, ".-kony-w-c-yemo")[0];
    if (k.hideMonthsHeader == true) {
      c.style.display = "none"
    }
    var g = this.getBySele(n, ".-kony-w-c-daysHeader")[0];
    if (k.hideDaysHeader == true) {
      g.style.display = "none"
    }
    n.setAttribute("month", x[0]);
    n.setAttribute("year", x[1]);
    c.innerHTML = this.months[x[0] - 1] + ", " + x[1];
    this.addClass(c, z.monthHeaderSkin);
    c.setAttribute("k-w-c-id", o);
    for (var v = 0; v < l.length; v++) {
      var m = l[v],
        b = this.getBySele(n, "#-kony-w-c-cell-" + (v + 1))[0];
      b.className = "";
      var u = k.dayTextAlignmentInCell;
      var f = this.dayTextAlignmentInCell(u);
      b.style.textAlign = f["text-align"];
      b.style.verticalAlign = f["vertical-align"];
      if (typeof m == "number") {
        if (w == 0) {
          b.className = " -k-w-c-lastMonth " + z.gridCellInactiveDaysSkin;
          b.setAttribute("title", "Previous month");
          b.setAttribute("aria-label", m)
        } else {
          if (w == 1) {
            b.className = " -k-w-c-nextMonth " + z.gridCellInactiveDaysSkin;
            b.setAttribute("title", "Next month");
            b.setAttribute("aria-label", m)
          }
        }
        b.removeAttribute("kwidgettype");
        b.removeAttribute("k-w-c-hold-day");
        b.innerHTML = m
      } else {
        if (typeof m == "string") {
          b.innerHTML = m;
          b.setAttribute("role", "option");
          if (m == "MON" || m == "SUN") {
            b.setAttribute("aria-label", m.toLowerCase() + "day")
          } else {
            if (m == "TUE") {
              b.setAttribute("aria-label", "Tuesday")
            } else {
              if (m == "WED") {
                b.setAttribute("aria-label", "Wednesday")
              } else {
                if (m == "THU") {
                  b.setAttribute("aria-label", "Thursday")
                } else {
                  if (m == "FRI") {
                    b.setAttribute("aria-label", "Friday")
                  } else {
                    if (m == "SAT") {
                      b.setAttribute("aria-label", "Saturday")
                    }
                  }
                }
              }
            }
          }
          b.className += " " + z.dayHeaderSkin
        } else {
          w = 1;
          var p = new Date(m[1].y, m[1].m - 1, m[1].d);
          if ((m[2] == 0 || m[2] == 6) && (t == false)) {
            b.className = " " + z.gridCellInactiveDaysSkin;
            b.innerHTML = ($KG.i18nArray && $KG.i18nArray["platform.calendar." + m[0]]) ? $KG.i18nArray["platform.calendar." + m[0]] : m[0];
            b.removeAttribute("kwidgettype")
          } else {
            b.setAttribute("k-w-c-id", o);
            b.setAttribute("kwidgettype", "Calendar");
            b.setAttribute("weekday", m[2]);
            b.className += " -k-w-c-weekday-" + m[2] + " -kony-w-c-day-";
            b.setAttribute("k-w-c-hold-day", (m[1].d + "," + m[1].m + "," + m[1].y));
            b.innerHTML = ($KG.i18nArray && $KG.i18nArray["platform.calendar." + m[0]]) ? $KG.i18nArray["platform.calendar." + m[0]] : m[0];
            var a = this.dateFormatter("dddd, do mmmm yyyy", [m[1].d, m[1].m, m[1].y]);
            b.setAttribute("role", "option");
            var e = a.string.split(",")[1];
            b.setAttribute("aria-label", e)
          }
        }
      }
    }
    var d = $KU.getImageURL("sprite.png");
    var y = $KU.getImageURL("left-arrow.png");
    var A = $KU.getImageURL("right-arrow.png");
    if (h[0] == 1) {
      var i = this.getByClass(n, "-kony-w-c-prev-nav")[0];
      if (z.leftNavigationImage || z.leftnavigationimage) {
        var C = "<img class='-kony-w-c-prev-nav-left-img' style='width:50%;height:50%' kwidgettype='Calendar' />";
        i.innerHTML = C;
        var r = z.leftNavigationImage ? z.leftNavigationImage : z.leftnavigationimage;
        i.firstChild.src = $KU.getImageURL(r);
        i.firstChild.setAttribute("kformname", k.pf)
      } else {
        i.firstChild.setAttribute("src", y)
      }
      i.setAttribute("k-w-c-id", o);
      i.firstChild.setAttribute("k-w-c-id", o);
      i.setAttribute("kwidgettype", "Calendar")
    }
    if (h[1] == 1) {
      var i = this.getByClass(n, "-kony-w-c-next-nav")[0];
      if (z.rightNavigationImage || z.rightnavigationimage) {
        var C = "<img class='-kony-w-c-next-nav-right-img' style='width:50%;height:50%' kwidgettype='Calendar' />";
        i.innerHTML = C;
        var q = z.rightNavigationImage ? z.rightNavigationImage : z.rightnavigationimage;
        i.firstChild.src = $KU.getImageURL(q);
        i.firstChild.setAttribute("kformname", k.pf)
      } else {
        i.firstChild.setAttribute("src", A)
      }
      i.setAttribute("k-w-c-id", o);
      i.firstChild.setAttribute("k-w-c-id", o);
      i.setAttribute("kwidgettype", "Calendar")
    }
    if (s == 0) {
      return n
    } else {
      return 0
    }
  },
  show: function(n, f, A, l) {
    $KW.Calendar.initializeView();
    var p = n.tabpaneId;
    var G, F, D;
    this.invoked = this.invoked || {};
    if (l != undefined || l != null) {
      this.invoked[l.id] = this.invoked[l.id] || {
          d: l,
          i: l.firstChild.id,
          s: ""
        }
    } else {
      alert(n.navigatorAlert);
      return false
    }
    if (n.startdate) {
      G = n.startdate[0 + IndexJL];
      F = n.startdate[1 + IndexJL];
      D = n.startdate[2 + IndexJL]
    }
    var q = n.year || D || new Date().getFullYear(),
      j = n.month || F || new Date().getMonth() + 1,
      g = n.monthsinrow,
      L = n.noofmonths,
      K = [],
      c = n.popupHeight || "300px",
      b = n.popupWidth || "300px";
    if (f && f[0] && !A) {
      var a = true
    }
    f = f || this.series(q, j, L);
    n.widths = n.widths || ["14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;", "14.2857%;"];
    var H = "";
    var d = this.template(n.widths, c, b, n);
    var m = document.getElementById(l.id + "-k-w-c-datepicker") || this.div();
    if (m.id == "") {
      if (n.title) {
        var u = document.createElement("div");
        u.className = "-k-w-c-cal-title";
        u.id = "-k-w-c-cal-title";
        u.setAttribute("w-type", "Calendar");
        u.innerHTML = n.title;
        m.appendChild(u)
      }
      m.id = l.id + "-k-w-c-datepicker"
    }
    m.setAttribute("w-type", "Calendar");
    this.invoked[l.id].s = "active";
    var M = l.id + "-k-w-c-datepicker";
    var o = this.getByClass(m, "-kony-w-c-popup-container");
    n.displayedMonths = [f[0][0], f[0][1]];
    for (var N = 0; N < Number(n.noofmonths); N++) {
      var w = [1, 1];
      var v = this.month(f[N][0], f[N][1], n.startDay);
      var C = ("-k-w-c-month-cmp-" + f[N][0] + "-" + f[N][1]);
      if (o[N]) {
        o[N].id = C
      }
      d = d.replace("{{id}}", C);
      var e = this.updateMonthData(v, n, d, f[N], w, o[N] || 0, l.id);
      if (e != 0) {
        m.appendChild(e)
      }
    }
    if (a == true) {
      this.applySkins(n);
      return
    }
    m.className = "-k-w-c-datepicker-holder-main";
    var t = this.getOffset(l.id);
    m.style.position = "absolute";
    m.style.border = "1px solid #CCC";
    var J = document.createElement("div");
    var h = $KG.i18nArray && $KG.i18nArray["gridCalCloseI18Nkey"] ? kony.i18n.getLocalizedString("gridCalCloseI18Nkey") : "Close";
    J.innerHTML = "<a href='#' class='-k-w-c-close-picker' id='calendar_close_link' kformname='" + n.pf + "' kwidgettype='Calendar' " + (p ? "ktabpaneid='" + p + "' " : "") + " style='float:right;color:red'>" + h + "</a>";
    J.setAttribute("w-type", "Calendar");
    J.firstChild.setAttribute("k-w-c-id", l.id);
    m.appendChild(J);
    m.style.zIndex = "1234";
    if ($KU.isMobile() || $KU.isTablet) {
      m.setAttribute("dummy", "a");
      m.style.display = "none";
      var Q = m.id;
      document.getElementById("__MainContainer").appendChild(m);
      var B = document.getElementById(Q);
      B.style.display = "inline-block";
      this.reposition(1);
      var r = document.createElement("div");
      r.className = "k-w-c-scrim-for-popup";
      var O = document.body;
      var k;
      if (document.height != undefined) {
        k = document.height
      } else {
        if (O.scrollHeight != undefined && O.offsetHeight != undefined) {
          if (!kony.appinit.isWindowsPhone) {
            k = Math.max(O.scrollHeight, O.offsetHeight)
          } else {
            k = 100
          }
        } else {
          k = O.scrollHeight || O.offsetHeight
        }
      }
      if (!kony.appinit.isWindowsPhone) {
        r.innerHTML = "<div style='height:" + k + "px;width:100%;opacity:0;line-height:100%'>&nbsp;</div>"
      } else {
        r.innerHTML = "<div style='height:" + k + "%;width:100%;opacity:0;line-height:100%'>&nbsp;</div>";
        r.style.height = "100%"
      }
      r.style.position = "absolute";
      r.style.top = r.style.left = "0px";
      r.style.width = "100%";
      r.style.zIndex = "1230";
      if ($KU.isIE11) {
        r.style.transform = "translateZ(0px)"
      }
      document.getElementById("__MainContainer").appendChild(r);
      var P = document.getElementById(n.pf);
      if (P != null) {
        P.setAttribute("aria-hidden", true)
      }
      if (n.context) {
        var s = $KU.getAnchorPosition(n, m);
        m.style.top = s.topPos + "px";
        m.style.left = s.leftPos + "px"
      }
    } else {
      var I = document.getElementById("__MainContainer");
      I.appendChild(m);
      m.style.display = "inline-block";
      var R = window.innerHeight || document.documentElement.clientHeight;
      if (n.context) {
        var s = $KU.getAnchorPosition(n, m);
        m.style.top = s.topPos + "px";
        m.style.left = s.leftPos + "px"
      } else {
        m.style.top = t[1] + l.offsetHeight + "px";
        m.style.left = (((window.innerWidth || document.documentElement.clientWidth) - m.clientWidth) / 2) + "px"
      }
      var C = m.id;
      m = document.getElementById(C)
    }
    this.active = M;
    this.applySkins(n)
  },
  applySkins: function(d) {
    var k = document.querySelectorAll("#" + this.active + " [k-w-c-hold-day]");
    var t = d.viewconfig.gridconfig || d.viewconfig.gridConfig || {};
    if (d.day != 0) {
      var o = new Date(d.year, d.month - 1, d.day)
    }
    for (var q = 0; q < k.length; q++) {
      today = new Date();
      var j = k[q].getAttribute("k-w-c-hold-day").split(","),
        b = k[q];
      var p = new Date(j[2], j[1] - 1, j[0]);
      var l = b.getAttribute("weekday") * 1;
      if (o && o.setHours(0, 0, 0, 0) == p.setHours(0, 0, 0, 0)) {
        this.addClass(b, t.gridCellSelectedSkin)
      } else {
        if (p.setHours(0, 0, 0, 0) == today.setHours(0, 0, 0, 0)) {
          this.addClass(b, t.gridCellTodaySkin);
          this.removeClass(b, t.gridCellSkin)
        } else {
          if (l == 0 || l == 6) {
            this.addClass(b, t.gridCellWeekendSkin)
          } else {
            this.addClass(b, t.gridCellSkin)
          }
        }
      }
      var s = b.getAttribute("k-w-c-hold-day").split(",");
      if (d.startdate) {
        var f = new Date(d.startdate[2 + IndexJL], d.startdate[1 + IndexJL] - 1, d.startdate[0 + IndexJL]).setHours(0, 0, 0, 0)
      }
      if (d.enddate) {
        var e = new Date(d.enddate[2 + IndexJL], d.enddate[1 + IndexJL] - 1, d.enddate[0 + IndexJL]).setHours(0, 0, 0, 0)
      }
      var m = p.setHours(0, 0, 0, 0),
        n = 0;
      if ((f && f !== 0) && (e && e !== 0)) {
        if (m < f || m > e) {
          n = 1
        }
      } else {
        if (!f && e) {
          if (m > e) {
            n = 1
          }
        } else {
          if (!e && f) {
            if (m < f) {
              n = 1
            }
          }
        }
      }
      if (n == 1) {
        b.setAttribute("kwidgettype", "DisabledCal");
        b.className = t.gridCellInactiveDaysSkin;
        b.removeAttribute("kwidgettype");
        b.removeAttribute("k-w-c-hold-day")
      }
      if (d.datesGroupSimplified) {
        var h = d.datesGroupSimplified;
        if (d.datesState == 0 && h.length > 0) {
          if (h.indexOf(m) > -1) {
            b.setAttribute("kwidgettype", "DisabledCal");
            b.className = t.gridCellInactiveDaysSkin;
            b.removeAttribute("kwidgettype");
            b.removeAttribute("k-w-c-hold-day")
          }
        }
        if (d.datesState == 1 && h.length > 0) {
          if (h.indexOf(m) <= -1) {
            n = 1;
            b.setAttribute("kwidgettype", "DisabledCal");
            b.className = t.gridCellInactiveDaysSkin;
            b.removeAttribute("kwidgettype");
            b.removeAttribute("k-w-c-hold-day")
          } else {
            this.removeClass(b, t.gridCellWeekendSkin);
            this.removeClass(b, t.gridCellSkin);
            if (!this.hasClass(b, t.gridCellSelectedSkin) && !this.hasClass(b, t.gridCellTodaySkin)) {
              this.addClass(b, d.datesGroupSkin)
            }
          }
        }
      }
      if (d.specialDates) {
        for (var c in d.specialDates) {
          var g = d.specialDates[c];
          if (g) {
            for (var r = 0 + IndexJL; r < g.length; r++) {
              if (g[r]) {
                var a = new Date(g[r][2 + IndexJL], g[r][1 + IndexJL] - 1, g[r][0 + IndexJL]).setHours(0, 0, 0, 0);
                if (new Date(s[2], s[1] - 1, s[0]).setHours(0, 0, 0, 0) == a) {
                  this.removeClass(b, t.gridCellWeekendSkin);
                  this.removeClass(b, t.gridCellSkin);
                  this.removeClass(b, d.datesGroupSkin);
                  if (!this.hasClass(b, t.gridCellSelectedSkin) && !this.hasClass(b, t.gridCellTodaySkin)) {
                    this.addClass(b, c)
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  between: function(e, d) {
    function b(f, h) {
      var g = new Date(f.valueOf());
      g.setDate(g.getDate() + h);
      return g
    }
    var c = new Array();
    var a = e;
    while (a <= d) {
      c.push(new Date(a).setHours(0, 0, 0, 0));
      a = b(a, 1)
    }
    return c
  },
  reposition: function(b) {
    var c = document.querySelectorAll(".-k-w-c-datepicker-holder-main")[0];
    if (c) {
      var e = c.clientHeight;
      var d = window.innerWidth || document.documentElement.clientWidth;
      var g = (window.pageYOffset + ((window.innerHeight - e) / 2));
      c.style.left = "0px";
      var f = ((d - c.clientWidth) / 2);
      if ((f * 2 + c.clientWidth) > d) {
        f = 0
      }
      c.style.top = (g > 0 ? g : 0) + "px";
      c.style.left = f + "px";
      if (b != 1) {
        c.innerHTML = c.innerHTML
      }
    }
  },
  getDat: function(c, b) {
    if (!c) {
      return
    }
    var e = (b.dateformat || b.format).toLowerCase().replace(/^\s+|\s+$/g, "").split("/"),
      a = {};
    c = c.split("/");
    for (var d = 0; d < e.length; d++) {
      a[e[d]] = c[d]
    }
    return a
  },
  series: function(e, d, c) {
    e = parseInt(e, 10);
    d = parseInt(d, 10);
    var b = [
      [d, e]
    ];
    for (var a = 0; a < c - 1; a++) {
      if (d + 1 > 12) {
        d = 1;
        e += 1;
        b.push([d, e])
      } else {
        d += 1;
        b.push([d, e])
      }
    }
    return b
  },
  destroyCalendar: function(g, c) {
    var a = document.querySelectorAll("[tabindex]");
    for (var e = 0; e < a.length; e++) {
      a[e].removeAttribute("tabindex")
    }
    if (!g) {
      var f = document.querySelectorAll(".-k-w-c-datepicker-holder-main,.k-w-c-scrim-for-popup");
      for (var e = 0, b = f.length; e < b; e++) {
        f[e].parentNode.removeChild(f[e])
      }
    } else {
      var f = document.querySelectorAll(".k-w-c-scrim-for-popup")[0];
      var d = document.getElementById(this.active);
      d && d.parentNode.removeChild(d);
      f && f.parentNode.removeChild(f)
    }
    if (c) {
      c = document.getElementById(c);
      if (c) {
        if (c.tagName == "INPUT") {
          c = c.parentElement
        }
        c.setAttribute("tabindex", 1);
        c.focus()
      }
    }
  },
  month: function(s, h, r, q) {
    var c = new Date(h, s - 1, 1).getDay(),
      d = [],
      n = 1,
      b = new Date(h, s, 0).getDate();
    var o, k = {},
      l = {},
      e = 0,
      f = 0,
      g;
    g = s == 1 ? this.series(h - 1, 12, 3) : this.series(h, s - 1, 3);
    k.month = g[0][0];
    k.year = g[0][1];
    l.month = g[2][0];
    l.year = g[2][1];
    var t = new Date(k.year, k.month, 0).getDate(),
      a = new Date(l.year, l.month, 0).getDate();
    r = r || 0;
    if (r > c) {
      r -= 7
    }
    for (var p = 0; p <= 6; p++) {
      d.push(this.days[(p + r + 7) % 7])
    }
    for (var p = 0; p < 6; p++) {
      for (var m = 0; m <= 6; m++) {
        if (n <= b && (p > 0 || m + r >= c)) {
          d.push([n, {
            d: n,
            y: h,
            m: s
          }, new Date(h, s - 1, n).getDay()]);
          n++;
          o = 1
        } else {
          if (o) {
            d.push(0);
            f += 1
          } else {
            d.push(-1);
            e += 1
          }
        }
      }
    }
    for (p = 0; p < d.length; p++) {
      if (d[p] == 0) {
        d[p] = o;
        o++
      } else {
        if (d[p] == -1) {
          d[p] = t - e + 1;
          e--
        }
      }
    }
    return d
  },
  chunks: function(c, b) {
    var a = [];
    while (c.length) {
      a.push(c.splice(0, b))
    }
    return a
  },
  getOffset: function(a) {
    var c = document.getElementById(a),
      b = $KU.getPosition(c);
    return [b.left, b.top]
  },
  setDisable: function(c, b, a) {
    c.datesGroup = [b + "-" + a];
    c.dateState = 0
  },
  setEnable: function(c, b, a) {
    c.datesGroup = [b + "-" + a];
    c.dateState = 0
  },
  dateFormatter: function(A, F, D, J) {
    var y = function(e) {
        return e.replace(/ +(?= )/g, "").replace(/^\s+|\s+$/g, "").replace(/[^a-zA-Z0-9]/g, "_").replace(/_+(?=_)/g, "").split("_")
      },
      l = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      f = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      h = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      H = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      w, I, o, p = {};
    if (D && A) {
      D = y(D);
      var a = y(A.toLowerCase());
      if (a.length != D.length) {
        return false
      }
      for (var t = 0, s = a.length; t < s; t++) {
        p[a[t]] = D[t]
      }
      for (var x in p) {
        if (p.hasOwnProperty(x)) {
          switch (x) {
            case "mmm":
              I = f.indexOf(p[x]) + 1;
              if (I == 0) {
                return false
              }
              break;
            case "mmmm":
              I = l.indexOf(p[x]) + 1;
              if (I == 0) {
                return false
              }
              break;
            case "mm":
              I = p[x] * 1;
              if (I < 1 || I > 12) {
                return false
              }
              break;
            case "dd":
              w = p[x] * 1;
              if (w <= 0) {
                return false
              }
              break;
            case "do":
              w = parseInt(p[x], 10);
              if (w <= 0) {
                return false
              }
              break;
            case "yy":
            case "yyyy":
              if (p[x] != "") {
                o = ("" + p[x]).length > 2 ? (p[x] * 1) : (p[x] * 1 + ((Math.floor(J / 100) * 100) || 2000))
              } else {
                o = ("" + p[x]).length > 2 ? (p[x] * 1) : (p[x] * 1 + (new Date().getFullYear()))
              }
              if (o > 2099 || o < 1900) {
                return false
              }
              break
          }
        }
      }
      var d = 1;
      var C = new Date(o, I - 1, w || d);
      if (Object.prototype.toString.call(C) === "[object Date]") {
        if ((C.getFullYear() == o) && (C.getMonth() + 1 == I) && (C.getDate() == (w || d))) {
          F = [w || d, I, o]
        } else {
          return false
        }
      }
    } else {
      if (F) {
        try {
          for (var u = 0; u < 3; u++) {
            F[u] = +F[u]
          }
        } catch (B) {
          console.log(B)
        }
      }
    }
    if (!A || !F) {
      return false
    }
    A = "" + A.toLowerCase().replace(/ +(?= )/g, "").replace(/^\s+|\s+$/g, "");
    var k = new Date(F[2], F[1] - 1, F[0]),
      z = F[1] <= 9 ? "0" + F[1].toString() : F[1],
      b = f[F[1] - 1],
      j = l[F[1] - 1],
      r = (F[2] + "").substring(2, 4),
      q = F[2],
      G = (F[0] >= 1 && F[0] < 10 ? "0" + F[0].toString() : F[0]),
      g = h[k.getDay()],
      c = H[k.getDay()],
      v = F[0] + ((F[0] <= 20) && F[0] >= 10 ? "th" : ["st", "nd", "rd"][(F[0] % 10) - 1] || "th");
    return {
      date: F,
      string: A.replace("dddd", c).replace("mmmm", j).replace("mmm", b).replace("mm", z).replace("ddd", g).replace("dd", G).replace("yyyy", q).replace("yy", r).replace("do", v)
    }
  }
};
$KW.Calendar.DateFormater = {
  DD: "dd",
  MM: "MM",
  mm: "mm",
  yyyy: "yyyy",
  yy: "yy",
  separator_: "-",
  seperator: "/",
  cseperator: "/",
  dateformat: "MM/dd/yyyy",
  setformat: function(a) {
    this.dateformat = a
  },
  format: function(c, b) {
    if (b) {
      this.dateformat = b
    }
    var h = this.formatArray();
    var f = null,
      g = null;
    var a = "";
    for (var e = 0, d = h.length; e < d; e++) {
      f = h[e];
      g = "00";
      switch (f) {
        case this.DD:
          g = c.getDate();
          break;
        case this.mm:
        case this.MM:
          g = c.getMonth() + 1;
          break;
        case this.yyyy:
          g = c.getFullYear();
          break;
        case this.yy:
          g = c.getYear() - 100;
          break
      }
      if (g < 10) {
        g = "0" + g
      }
      a = a + g + this.cseperator
    }
    return a.substr(0, a.length - 1)
  },
  formatArray: function() {
    var a = null;
    if (this.dateformat != null) {
      a = this.dateformat.split(this.seperator);
      if (!a || a.length == 1) {
        a = this.dateformat.split(this.seperator_);
        this.cseperator = this.seperator_
      }
    }
    return a
  },
  convertToModelDate: function(e, b) {
    var f = null;
    var a = null;
    var d = new Array();
    var c = {};
    if (IndexJL) {
      d[0] = null
    }
    if (b != null && e) {
      f = b.split(this.seperator);
      if (e instanceof Array) {
        if (IndexJL) {
          e.shift()
        }
        a = e
      } else {
        a = e.split(this.seperator)
      }
      if (f[0] === "dd") {
        d[IndexJL] = a[0];
        c.day = a[0];
        d[1 + IndexJL] = a[1];
        c.month = a[1];
        d[2 + IndexJL] = a[2];
        c.year = a[2]
      } else {
        d[IndexJL] = a[1];
        c.month = a[1];
        d[1 + IndexJL] = a[0];
        c.day = a[0];
        if (f[2] === "yyyy") {
          d[2 + IndexJL] = a[2];
          c.year = a[2]
        } else {
          if (a[2].length > 3) {
            d[2 + IndexJL] = a[2].substring(2, 4);
            c.year = a[2]
          } else {
            d[2 + IndexJL] = a[2];
            c.year = a[2]
          }
        }
      }
    }
    c.date = d;
    c.dateText = d[IndexJL] + this.seperator + d[1 + IndexJL] + this.seperator + d[2 + IndexJL];
    c.selectdate = c.month + this.seperator + c.day + this.seperator + c.year;
    c.pagedate = c.month + this.seperator + c.year;
    return c
  }
};
$KW.Calendar.Util = {
  isValidDate: function(a, g, c) {
    var f = false;
    var b = new Date();
    try {
      b.setFullYear(c, g, a);
      if (b.getDate() == a && b.getMonth() == g && b.getFullYear() == c) {
        f = true
      }
    } catch (d) {
      f = false
    }
    return f
  },
  daysInMonth: function(c, b) {
    var a = new Date(b, c, 0);
    return a.getDate()
  }
};

kony.widgets.Grid = {
  render: function(f, c) {
    var l = "";
    if (f.children) {
      var b = $KW.skins.getMarginSkin(f, c) + $KW.skins.getPaddingSkin(f);
      l = "<table cellspacing='0' cellpadding='0' style='xborder:0;xtable-layout:fixed;" + b + "'" + (f.wType == "Form" ? "" : $KW.Utils.getBaseHtml(f, c)) + " class='" + $KW.skins.getWidgetSkinList(f, c) + "' >";
      var m = f.layoutmeta;
      var a = this.getRowColumnMap(f, c);
      var d, h;
      for (var g = 0; g < m.rows; g++) {
        l += "<tr>";
        for (var e = 0; e < m.cols; e++) {
          d = a[g][e];
          if (d) {
            var k = d.wType;
            if (k) {
              h = " class='" + kony.widgets.skins.getWidgetAlignmentSkin(d) + "' rowspan=" + d.gridCell.rowSpan + " colspan=" + d.gridCell.colSpan
            }
            l += "<td style=' font-size:0px; width:" + m.colmeta[e].width + "%'" + (k ? h : "") + ">";
            if (k) {
              if (k == "HBox" || k == "VBox" || k == "ScrollBox") {
                c.setTopLevelBox(true)
              }
              l += kony.widgets[k].render(d, c);
              if (k == "HBox" || k == "VBox" || k == "ScrollBox") {
                c.setTopLevelBox(false)
              }
            }
            l += "</td>"
          }
        }
        l += "</tr>"
      }
      l += "</table>"
    }
    return l
  },
  getRowColumnMap: function(f, a) {
    var b = f.children;
    var p = [];
    var d;
    var o = f.layoutmeta;
    for (var h = 0; h < o.rows; h++) {
      p.push([]);
      for (var g = 0; g < o.cols; g++) {
        p[h][g] = "td"
      }
    }
    for (var h = 0; h < b.length; h++) {
      d = kony.model.getWidgetModel(f.pf || f.id, b[h], a.tabpaneID);
      p[d.gridCell.rowNo][d.gridCell.colNo] = d
    }
    for (var h = 0; h < o.rows; h++) {
      for (var g = 0; g < o.cols; g++) {
        var n = p[h][g];
        if (n.wType) {
          var m = n.gridCell.colSpan;
          while (m > 1) {
            p[h][++g] = "";
            m--
          }
        }
      }
      for (var e = h - 1; e >= 0; e--) {
        for (var c = 0; c < o.cols; c++) {
          var n = p[e][c];
          if (n.wType && n.gridCell.rowSpan > h - e) {
            p[h][c] = "";
            var m = n.gridCell.colSpan;
            while (m > 1) {
              p[h][++c] = "";
              m--
            }
          }
        }
      }
    }
    return p
  }
};
kony.widgets.Menubar = {
  initialize: function() {
    kony.events.addEvent("click", "Menubar", this.eventHandler)
  },
  updateView: function(e, c, b, a) {
    switch (c) {
      case "skin":
        kony.widgets.Utils.updateDOMSkin(e, b, a);
        break;
      case "focusskin":
        kony.widgets.Utils.updateFocusSkin(e);
        break;
      case "hoverskin":
        kony.widgets.Utils.updateFocusSkin(e, "hoverskin");
        break;
      case "text":
        var d = kony.utils.getNodeByModel(e);
        if (d) {
          d.innerHTML = b
        }
        break;
      case "activemenu":
        this.updateActiveMenuDOM(e);
        break
    }
  },
  initializeView: function(a) {
    this.addHoverToMenu(a)
  },
  addHoverToMenu: function(f) {
    var k = document.querySelectorAll("div[kwidgettype='Menubar']");
    var h = document.querySelectorAll("div[kwidgettype='Menubar'] ul li[level='one']");
    for (var c = 0; c < k.length; c++) {
      var d = k[c];
      var e = kony.utils.getModelByNode(d);
      if (e.view == "1") {
        var g = document.querySelectorAll("#" + d.id + " ul li[level='one']");
        for (var b = 0; b < g.length; b++) {
          var a = g[b];
          if (a.nodeName == "LI") {
            a.onmouseover = function(i) {
              var s = this;
              var p = document.querySelectorAll("#" + s.parentNode.parentNode.id + " ul li[itemindex='" + s.getAttribute("itemindex") + "'] > div[mtype] div[kwidgettype='Label']");
              if (p.length > 0) {
                for (var n = 0; n < 1; n++) {
                  var r = p[n];
                  var t = kony.utils.getModelByNode(r);
                  if (t.hoverskin) {
                    if (t.skin) {
                      kony.utils.removeClassName(r, t.skin)
                    }
                    kony.utils.addClassName(r, t.hoverskin)
                  }
                }
              }
              var o = document.querySelectorAll("#" + s.parentNode.parentNode.id + " ul li[itemindex='" + s.getAttribute("itemindex") + "'] > div[mtype] div[kwidgettype='HBox']");
              if (o.length > 0) {
                for (var j = 0; j < 1; j++) {
                  var l = o[j];
                  var q = kony.utils.getModelByNode(l);
                  if (q.hoverskin) {
                    if (q.skin) {
                      kony.utils.removeClassName(l, q.skin)
                    }
                    kony.utils.addClassName(l, q.hoverskin)
                  }
                }
              }
            };
            a.onmouseout = function(i) {
              var t = this;
              var q = document.querySelectorAll("#" + t.parentNode.parentNode.id + " ul li[itemindex='" + t.getAttribute("itemindex") + "']  > div[mtype] div[kwidgettype='Label']");
              if (q.length > 0) {
                for (var m = 0; m < 1; m++) {
                  var s = q[m];
                  var u = kony.utils.getModelByNode(s);
                  if (u.hoverskin) {
                    if (u.skin) {
                      kony.utils.addClassName(s, u.skin)
                    }
                    kony.utils.removeClassName(s, u.hoverskin)
                  }
                }
              }
              var p = document.querySelectorAll("#" + t.parentNode.parentNode.id + " ul li[itemindex='" + t.getAttribute("itemindex") + "']  > div[mtype] div[kwidgettype='HBox']");
              if (p.length > 0) {
                for (var j = 0; j < 1; j++) {
                  var o = p[j];
                  var r = kony.utils.getModelByNode(o);
                  if (r.hoverskin) {
                    if (r.skin) {
                      kony.utils.addClassName(o, r.skin)
                    }
                    kony.utils.removeClassName(o, r.hoverskin)
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  render: function(d, c) {
    var a = kony.model.getWidgetModel(d.pf, c.tabpaneID);
    c.menuType = d.view;
    if (!d.activemenu) {
      d.activemenu = 1
    }
    var f = kony.widgets.skins.getMarginSkin(d) + " " + kony.widgets.skins.getPaddingSkin(d) + " " + kony.widgets.skins.getMarAdjustedContainerWeightSkin(d, 100);
    var b;
    switch (d.view) {
      case "1":
        b = "kDropDownMenu";
        break;
      case "2":
        b = "kDropLineMenu";
        break;
      case "3":
        b = "kTreeMenu";
        break;
      case "4":
        b = "kContextMenu";
        break
    }
    var g = "<div " + kony.widgets.Utils.getBaseHtml(d, c) + " class = ' " + f + " ";
    if (d.skin) {
      g += d.skin + " "
    }
    g += " '>";
    g += "<ul class='" + b + " ";
    if (d.skin) {
      g += d.submenuskin + " "
    }
    g += "' id='" + d.id + "_Ul'>";
    var e;
    c.formID = d.pf;
    d.context = c;
    g += kony.widgets.Menubar.renderMenubar(d, c);
    g += "</ul>";
    g += "</div>";
    return g
  },
  renderMenubar: function(e, c) {
    var g = "";
    var f;
    if (e.menudata) {
      c.container = e;
      for (var b = 1; b < e.menudata.length; b++) {
        f = e.menudata[b];
        var d = f.template;
        var a = f.data;
        if (f.type === "menu") {
          g += kony.widgets.Menubar.renderMenu(e, f, c, b)
        } else {
          g += kony.widgets.Menubar.renderMenuitem(e, f, c, b)
        }
      }
      c.container = ""
    }
    return g
  },
  renderMenuitem: function(e, f, c, b) {
    var d = f.template;
    var a = f.data;
    var g = "<li ";
    if (b.toString().length === 1) {
      g += " level='one' "
    }
    g += " itemindex='" + b + "' ";
    if (e.activemenu && e.activemenu == b) {
      g += " activemenu=yes "
    }
    g += ">";
    if (d && a) {
      e.widgetsData = a;
      kony.widgets.Utils.updateLayoutData(window[d], a);
      g += kony.widgets.Form.generateTemplate(d, "menuitem", c)
    }
    g += "</li>";
    return g
  },
  renderMenu: function(a, k, b, e) {
    var j = k.template;
    var c = k.data;
    var h;
    var g = "";
    if (k.width) {
      g += "<li style='width:" + k.width + "%;' itemindex='" + e + "' "
    } else {
      g += "<li itemindex='" + e + "' "
    }
    if (e.toString().length === 1) {
      g += " level='one' "
    }
    if (a.activemenu && a.activemenu == e) {
      g += " activemenu=yes "
    }
    g += " >";
    var f = k.items;
    if (a.view === "3" && k.selectionindicator && k.expandedimage && k.collapsibleimage) {
      if (k.isexpand) {
        c[k.selectionindicator] = k.collapsibleimage
      } else {
        c[k.selectionindicator] = k.expandedimage
      }
    }
    a.widgetsData = c;
    kony.widgets.Utils.updateLayoutData(window[j], c);
    g += kony.widgets.Form.generateTemplate(j, "menu", b);
    if (f && f.length > 1) {
      g += "<ul";
      if (a.view === "3") {
        if (k.isexpand) {
          g += " class='show' "
        } else {
          g += " class='hide' "
        }
      } else {
        g += " class='kwt100 ";
        if (a.submenuskin) {
          g += a.submenuskin
        }
        g += " ' "
      }
      g += " style='z-index:1' >";
      for (var d = 1; d < f.length; d++) {
        h = f[d];
        if (h.type === "menu") {
          g += kony.widgets.Menubar.renderMenu(a, h, b, e + "," + d)
        } else {
          g += kony.widgets.Menubar.renderMenuitem(a, h, b, e + "," + d)
        }
      }
      g += "</ul>"
    }
    g += "</li>";
    return g
  },
  setData: function(b, a) {
    if (kony.utils.isArray(a)) {
      b.menudata = a;
      var c = kony.utils.getNodeByModel(b);
      if (c) {
        c.childNodes[0].innerHTML = this.renderMenubar(b, b.context)
      }
    }
  },
  eventHandler: function(b, f) {
    var h = kony.utils.getParentByAttribute(f, "itemindex");
    var g = kony.utils.getParentByAttribute(h, "kwidgettype");
    var a = kony.utils.getModelByNode(g);
    if (a) {
      var e = h.getAttribute("itemindex");
      var l = e.split(",");
      if (l.length > 0) {
        l.splice(0, 0, null)
      }
      a.focusedindex = l;
      var d = a.menudata;
      var k = d;
      for (var c = 1; c < l.length; c++) {
        if (c == 1) {
          k = k[l[c]]
        } else {
          k = k.items[l[c]]
        }
      }
      switch (a.view) {
        case "1":
          kony.widgets.Menubar.kDropDownMenuHoverEvent(b, f, a);
          break;
        case "2":
          break;
        case "3":
          kony.widgets.Menubar.kTreeMenuEvent(b, f, a, k, e);
          break;
        case "4":
          break
      }
      var j = kony.utils.returnEventReference(a.onclick);
      if (a.onclick) {
        j(a, l, k.data)
      }
      if (a.activemenu) {
        if (a.activemenu != a.focusedindex[1]) {
          a.activemenu = a.focusedindex[1];
          this.updateActiveMenuDOM(a)
        }
      }
    }
  },
  kTreeMenuEvent: function(b, h, f, a, e) {
    var g = kony.utils.getParentByAttribute(h, "mtype");
    if (g.getAttribute("mtype") == "menu") {
      var d = kony.utils.getNextSibling(g);
      var c = document.querySelector("[itemindex='" + e + "'] [id='" + g.id + "_" + a.selectionindicator + "']");
      if (kony.utils.hasClassName(d, "hide")) {
        if (a.collapsibleimage && c) {
          c.src = kony.widgets.Image.getImageURL(a.collapsibleimage)
        }
        kony.utils.removeClassName(d, "hide");
        kony.utils.addClassName(d, "show")
      } else {
        kony.utils.removeClassName(d, "show");
        kony.utils.addClassName(d, "hide");
        if (a.expandedimage && c) {
          c.src = kony.widgets.Image.getImageURL(a.expandedimage)
        }
      }
    }
  },
  kDropDownMenuHoverEvent: function(a, c, b) {
    var d = c;
    while (d) {
      if (d.tagName === "UL") {
        if (kony.utils.hasClassName(d, "kDropDownMenu")) {
          break
        }
        kony.utils.addClassName(d, "hide")
      }
      d = d.parentNode
    }
    setTimeout(function() {
      d = c;
      while (d) {
        if (d.tagName === "UL") {
          if (kony.utils.hasClassName(d, "kDropDownMenu")) {
            return
          }
          kony.utils.removeClassName(d, "hide")
        }
        d = d.parentNode
      }
    }, 1)
  },
  updateActiveMenuDOM: function(c) {
    var b = document.querySelectorAll("#" + c.pf + "_" + c.id + " > ul")[0];
    for (var a = 0; a < b.children.length; a++) {
      var d = b.children[a];
      if (d.getAttribute("itemindex") == c.activemenu) {
        d.setAttribute("activemenu", "yes")
      } else {
        if (d.getAttribute("activemenu")) {
          d.removeAttribute("activemenu")
        }
      }
    }
  },
  expandAll: function(a, h) {
    if (a.view === "3") {
      var k = document.querySelectorAll("#" + a.pf + "_" + a.id + " div[mtype=menu]");
      if (k && k.length > 0) {
        for (var f = 0; f < k.length; f++) {
          var d = k[f];
          var n = k[f].parentNode;
          var b = kony.utils.getNextSibling(k[f]);
          var g = n.getAttribute("itemindex");
          var m = g.split(",");
          var l = a.menudata;
          for (var c = 0; c < m.length; c++) {
            if (c == 0) {
              l = l[m[c]]
            } else {
              l = l.items[m[c]]
            }
          }
          var e = document.querySelector("[itemindex='" + g + "'] [id='" + d.id + "_" + l.selectionindicator + "']");
          if (h) {
            if (l.collapsibleimage && e) {
              e.src = kony.widgets.Image.getImageURL(l.collapsibleimage)
            }
            if (kony.utils.hasClassName(b, "hide")) {
              kony.utils.removeClassName(b, "hide");
              kony.utils.addClassName(b, "show")
            } else {
              kony.utils.addClassName(b, "show")
            }
          } else {
            if (kony.utils.hasClassName(b, "show")) {
              kony.utils.removeClassName(b, "show");
              kony.utils.addClassName(b, "hide")
            } else {
              kony.utils.addClassName(b, "hide")
            }
            if (l.expandedimage && e) {
              e.src = kony.widgets.Image.getImageURL(l.expandedimage)
            }
          }
        }
      }
    }
  },
  expand: function(a, m, j) {
    if (a.view === "3") {
      var f = a.menudata;
      var k = f;
      var l = m;
      for (var e = 1; e < l.length; e++) {
        if (e == 1) {
          k = k[l[e]]
        } else {
          k = k.items[l[e]]
        }
      }
      if (m) {
        m.splice(0, 1)
      }
      var g = m.toString();
      var h = document.querySelectorAll("#" + a.pf + "_" + a.id + " li[itemindex='" + g + "']");
      if (h && h.length > 0) {
        var n = h[0];
        var c = n.childNodes[0];
        var b;
        if (c.getAttribute("mtype") === "menu") {
          b = kony.utils.getNextSibling(c)
        }
        if (b) {
          var d = document.querySelector("[itemindex='" + g + "'] [id='" + c.id + "_" + k.selectionindicator + "']");
          if (j) {
            if (k.collapsibleimage && d) {
              d.src = kony.widgets.Image.getImageURL(k.collapsibleimage)
            }
            if (kony.utils.hasClassName(b, "hide")) {
              kony.utils.removeClassName(b, "hide");
              kony.utils.addClassName(b, "show")
            } else {
              kony.utils.addClassName(b, "show")
            }
          } else {
            if (kony.utils.hasClassName(b, "show")) {
              kony.utils.removeClassName(b, "show");
              kony.utils.addClassName(b, "hide")
            } else {
              kony.utils.addClassName(b, "hide")
            }
            if (k.expandedimage && d) {
              d.src = kony.widgets.Image.getImageURL(k.expandedimage)
            }
          }
        }
      }
    }
  }
};
$KW.MenuContainer = {
  initialize: function() {
    kony.events.addEvent("click", "MenuContainer", this.eventHandler)
  },
  updateView: function(g, j, d, e) {
    var c = $KU.getNodeByModel(g),
      h = null,
      b = "";
    switch (j) {
      case "skin":
        $KW.Utils.updateDOMSkin(g, d, e);
        break;
      case "activeskin":
        if (g.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW && $KU.isArray(g.selectedindex)) {
          b = (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) ? g.selectedindex.join(",") : g.selectedindex[0].toString();
          h = (c.querySelector) ? c.querySelector('li[menuindex="' + b + '"]') : document.querySelector("#" + c.id + ' li[menuindex="' + b + '"]');
          $KU.removeClassName(h.firstChild, e);
          $KU.addClassName(h.firstChild, d)
        }
        break;
      case "hoverskin":
        $KW.Utils.updateFocusSkin(g, "hoverskin");
        break;
      case "selectedindex":
      case "selectedmenuindex":
        if (kony.appinit.isIE8 || kony.appinit.isIE7) {
          g.selectedindex = d;
          g.selectedMenuIndex = g.selectedindex;
          g.selectedmenuindex = g.selectedindex
        }
        var l = $KW.MenuContainer.getDetails(g, g.selectedindex, "item");
        if (l) {
          $KW.MenuContainer.updateActiveMenu(g, g.selectedindex, e);
          g.selecteditem = l;
          if (kony.appinit.isIE8 || kony.appinit.isIE7) {
            g.selectedMenuItem = g.selecteditem;
            g.selectedmenuitem = g.selecteditem
          }
          $KW.MenuContainer.expand(g, g.selectedindex)
        } else {
          g.selectedindex = e;
          if (kony.appinit.isIE8 || kony.appinit.isIE7) {
            g.selectedMenuIndex = g.selectedindex;
            g.selectedmenuindex = g.selectedindex
          }
        }
        break;
      case "orientation":
        if (c && d !== e && (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW || g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
          for (var f = 0; f < (c.firstChild.childNodes.length - 1); f++) {
            (function(i) {
              i.style.cssFloat = (d === "horizontal") ? "left" : "none"
            })(c.firstChild.childNodes[f])
          }
        }
        break;
      case "expandedimage":
      case "collapsedimage":
        if (c && d !== e) {
          var k = (c.querySelectorAll) ? c.querySelectorAll('image[src="' + $KU.getImageURL(e) + '"]') : document.querySelectorAll("#" + c.id + ' image[src="' + $KU.getImageURL(e) + '"]');
          var a = $KU.getImageURL(d);
          for (var f = 0; f < k.length; f++) {
            (function(i) {
              i.src = "newpath"
            })(k[f])
          }
        }
        break;
      case "data":
        if (c) {
          c.firstChild.innerHTML = $KW.MenuContainer.renderAll(g, g.context)
        }
        break
    }
  },
  render: function(a, c) {
    c.menuType = a.viewtype;
    c.formID = a.pf;
    a.context = c;
    if (a.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      if (!a.selectedindex || a.selectedindex.length === 0) {
        a.activemenu = "" + 0;
        a.selectedindex = [0];
        a.selecteditem = a.data[0];
        if (kony.appinit.isIE8 || kony.appinit.isIE7) {
          a.selectedMenuIndex = a.selectedindex;
          a.selectedMenuItem = a.selecteditem;
          a.selectedmenuindex = a.selectedindex;
          a.selectedmenuitem = a.selecteditem
        }
      } else {
        a.activemenu = (a.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) ? a.selectedindex.join(",") : a.selectedindex[0].toString();
        a.selecteditem = $KW.MenuContainer.getDetails(a, a.selectedindex, "item")
      }
    }
    var b = "",
      e = $KW.skins.getWidgetSkinList(a, c),
      d = "";
    b += "<div " + $KW.Utils.getBaseHtml(a, c) + ' class = "' + e + '"';
    d += $KW.skins.getMarginSkin(a, c) + " " + $KW.skins.getPaddingSkin(a);
    if (a.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      if (!a.containerweight) {
        a.containerweight = 15
      }
      d += " visibility:hidden; width:" + a.containerweight + "%;"
    }
    b += ' style="' + d + '">';
    b += '<ul class="KMenu">';
    b += $KW.MenuContainer.renderAll(a, c);
    b += "</ul></div>";
    return b
  },
  renderAll: function(a, d) {
    var c = "",
      e = null;
    d.container = a;
    for (var b = 0; b < a.data.length; b++) {
      (function(g, f) {
        e = (g.template) ? g.template : a.menutemplate;
        if ($KU.isArray(g.children) && g.children.length > 0) {
          c += $KW.MenuContainer.renderMenu(a, g, d, f)
        } else {
          c += $KW.MenuContainer.renderItem(a, g, d, f)
        }
      })(a.data[b], b)
    }
    c += '<li class="KClear">';
    d.container = "";
    return c
  },
  renderMenu: function(c, t, a, e) {
    if (typeof e === "string" || typeof e === "number") {
      e = e.toString().split(",")
    }
    if (!$KU.isArray(e)) {
      return
    }
    var h = "",
      k = "",
      b = "",
      l = null,
      d = t.children,
      q = e.join(","),
      n = document.createElement("div"),
      p = (t.metaInfo && t.metaInfo.width) ? t.metaInfo.width : (c.width) ? c.width : 20,
      f = (t.metaInfo && t.metaInfo.subMenuWidth) ? t.metaInfo.subMenuWidth : (c.subMenuWidth) ? c.subMenuWidth : 200,
      u = (t.template) ? t.template : c.menutemplate,
      s = (t.expandedimage) ? t.expandedimage : (c.expandedimage) ? c.expandedimage : "",
      j = (t.collapsedimage) ? t.collapsedimage : (c.collapsedimage) ? c.collapsedimage : "",
      m = (t.indicatorimage) ? t.indicatorimage : (c.indicatorimage) ? c.indicatorimage : "";
    if (c.selectedindex && c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      var o = c.selectedindex.join(",")
    }
    var g = e.join(",");
    h += '<li menuindex="' + g + '"';
    if (c.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      h += " onmouseover=\"$KW.MenuContainer.hover(this, '" + c.pf + "_" + c.id + "', '" + c.viewtype + "', '" + c.orientation + "');\"";
      h += " onmouseout=\"$KW.MenuContainer.hout(this, '" + c.pf + "_" + c.id + "', '" + c.viewtype + "', '" + c.orientation + "');\"";
      b += "position:relative; top:0%; left:0%;"
    }
    if (e.length === 1) {
      if (c.orientation === "horizontal" && (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW || c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
        b += " float:left; width:" + p + "%;"
      }
    } else {
      if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        b += " float:left;"
      }
    }
    h += ' style="' + b + '">';
    c.widgetsData = t;
    n.setAttribute("kformname", c.pf);
    n.setAttribute("id", c.pf + "_" + c.id);
    a.tabPaneID && n.setAttribute("ktabpaneid", a.tabPaneID);
    n.setAttribute("menuindex", g);
    n.innerHTML = $KW.Utils.handleLayout(c, u, t);
    if (!s && !j && !m) {
      if (c.activemenu && c.activemenu === q) {
        if (u.skin) {
          $KU.removeClassName(n.firstChild, u.skin)
        }
        $KU.addClassName(n.firstChild, c.activeclass)
      }
      h += n.innerHTML
    } else {
      h += '<table cellpadding="0" cellspacing="0" border="0" width="100%"><tbody><tr>';
      if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && c.orientation !== "horizontal" && s && j) {
        h += '<td align="left" valign="middle"><img border="0" src="';
        if (q.length < o.length && o.indexOf(q) === 0) {
          h += $KU.getImageURL(s)
        } else {
          h += $KU.getImageURL(j)
        }
        h += '"/></td>'
      }
      if (c.activemenu && c.activemenu === q) {
        if (u.skin) {
          $KU.removeClassName(n.firstChild, u.skin)
        }
        $KU.addClassName(n.firstChild, c.activeclass)
      }
      h += '<td align="left" valign="middle" width="100%">' + n.innerHTML + "</td>";
      if (c.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && m) {
        h += '<td align="right" valign="middle"><img border="0"';
        h += ' src="' + $KU.getImageURL(m) + '"/></td>'
      }
      h += "</tr></tbody></table>"
    }
    h += "<ul";
    if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      if (q.length < o.length && o.indexOf(q) === 0) {
        h += ' class="show"'
      } else {
        h += ' class="hide"'
      }
      k += "padding-left:20px;"
    } else {
      h += ' class="hidden"';
      k += "position:absolute; top:0%; left:0%; z-index:1; ";
      if (c.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        k += "width:99999px;"
      } else {
        if (f) {
          k += "width:" + f + "px;"
        }
      }
    }
    h += ' style="' + k + '">';
    for (var r = 0; r < d.length; r++) {
      (function(v, i) {
        if ($KU.isArray(v.children) && v.children.length > 0) {
          h += $KW.MenuContainer.renderMenu(c, v, a, e.join(",") + "," + i)
        } else {
          h += $KW.MenuContainer.renderItem(c, v, a, e.join(",") + "," + i)
        }
      })(d[r], r)
    }
    h += '<li class="KClear"></ul></li>';
    return h
  },
  renderItem: function(g, m, b, h) {
    if (typeof h === "string" || typeof h === "number") {
      h = h.toString().split(",")
    }
    if (!$KU.isArray(h)) {
      return
    }
    var f = "",
      i = "",
      n = "",
      e = document.createElement("div"),
      l = (m.template) ? m.template : g.menutemplate,
      a = (m.metaInfo && m.metaInfo.width) ? m.metaInfo.width : (g.width) ? g.width : 20,
      d = (m.metaInfo && m.metaInfo.subMenuWidth) ? m.metaInfo.subMenuWidth : (g.subMenuWidth) ? g.subMenuWidth : 200,
      k = (m.expandedimage) ? m.expandedimage : (g.expandedimage) ? g.expandedimage : "",
      c = (m.collapsedimage) ? m.collapsedimage : (g.collapsedimage) ? g.collapsedimage : "",
      j = (m.indicatorimage) ? m.indicatorimage : (g.indicatorimage) ? g.indicatorimage : "";
    f += '<li menuindex="' + h.join(",") + '"';
    if (g.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      f += " onmouseover=\"$KW.MenuContainer.hover(this, '" + g.pf + "_" + g.id + "', '" + g.viewtype + "', '" + g.orientation + "');\"";
      f += " onmouseout=\"$KW.MenuContainer.hout(this, '" + g.pf + "_" + g.id + "', '" + g.viewtype + "', '" + g.orientation + "');\"";
      n += "position:relative; top:0%; left:0%;"
    }
    if (h.length === 1) {
      if (g.orientation === "horizontal" && (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW || g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
        n += " float:left; width:" + a + "%;"
      }
    } else {
      if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        n += " float:left;"
      }
    }
    f += ' style="' + n + '">';
    g.widgetsData = m;
    e.innerHTML = $KW.Utils.handleLayout(g, l, m);
    if (!k && !c && !j) {
      if (g.activemenu && g.activemenu === h.toString()) {
        if (l.skin) {
          $KU.removeClassName(e.firstChild, l.skin)
        }
        $KU.addClassName(e.firstChild, g.activeclass)
      }
      f += e.innerHTML
    } else {
      f += '<table cellpadding="0" cellspacing="0" border="0" width="100%"><tbody><tr>';
      if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && g.orientation !== "horizontal" && k && c) {
        f += '<td align="left" valign="middle" width="0%"><img border="0" src="';
        f += $KU.getImageURL(c);
        f += '"/></td>'
      }
      if (g.activemenu && g.activemenu === h.toString()) {
        if (l.skin) {
          $KU.removeClassName(e.firstChild, l.skin)
        }
        $KU.addClassName(e.firstChild, g.activeclass)
      }
      f += '<td align="left" valign="middle" width="100%">' + e.innerHTML + "</td>";
      if (g.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW && j) {
        f += '<td align="right" valign="middle" width="0%"><img border="0"';
        f += ' src="' + $KU.getImageURL(j) + '"/></td>'
      }
      f += "</tr></tbody></table>"
    }
    f += "<ul";
    if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      f += ' class="hide"';
      i += "padding-left:20px;"
    } else {
      f += ' class="hidden"';
      i += "position:absolute; top:0%; left:0%; z-index:1; ";
      if (g.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
        i += "width:99999px;"
      } else {
        if (d) {
          i += "width:" + d + "px;"
        }
      }
    }
    f += ' style="' + i + '"><li class="KClear"></ul></li>';
    return f
  },
  eventHandler: function(e, k) {
    var o = null,
      d = null,
      h = null;
    if (k.getAttribute(kony.constants.KONY_WIDGET_TYPE) === "MenuContainer") {
      o = $KU.getParentByAttribute(e.target || e.srcElement, "menuindex")
    } else {
      o = $KU.getParentByAttribute(k, "menuindex")
    }
    if (o) {
      d = $KU.getParentByAttribute(o, kony.constants.KONY_WIDGET_TYPE)
    }
    if (d) {
      h = $KU.getModelByNode(d);
      if (!h) {
        h = d.id.split("_");
        h.splice(0, 1);
        h = window[h.join("_")]
      }
      if (document.getElementById(h.pf + "_" + h.id).getAttribute("kdisabled") == "true") {
        return
      }
    }
    if (!h) {
      return
    }
    var j = o.getAttribute("menuindex");
    if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW && !h.selectedindex) {
      h.selectedindex = j.split(",")
    }
    var f = h.selectedindex.slice();
    j = j.split(",");
    h.selectedindex = [];
    for (var g = 0; g < j.length; g++) {
      h.selectedindex.push(parseInt(j[g], 10))
    }
    h.selecteditem = $KW.MenuContainer.getDetails(h, h.selectedindex, "item");
    if (kony.appinit.isIE8 || kony.appinit.isIE7) {
      h.selectedMenuIndex = h.selectedindex;
      h.selectedMenuItem = h.selecteditem;
      h.selectedmenuindex = h.selectedindex;
      h.selectedmenuitem = h.selecteditem
    }
    $KW.MenuContainer.updateActiveMenu(h, h.selectedindex, f);
    if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      var p = $KW.MenuContainer.getDetails(h, h.selectedindex),
        n = (p.expandedimage) ? p.expandedimage : (h.expandedimage) ? h.expandedimage : "",
        b = (p.collapsedimage) ? p.collapsedimage : (h.collapsedimage) ? h.collapsedimage : "";
      if (p.item.children && p.item.children.length > 0) {
        if ($KU.hasClassName(o.lastChild, "hide")) {
          $KU.removeClassName(o.lastChild, "hide");
          $KU.addClassName(o.lastChild, "show");
          if (o.firstChild.tagName === "TABLE" && n) {
            var l = o.firstChild.firstChild.firstChild;
            if (l.childNodes.length === 2) {
              l.firstChild.firstChild.src = $KU.getImageURL(n)
            }
          }
        } else {
          $KU.removeClassName(o.lastChild, "show");
          $KU.addClassName(o.lastChild, "hide");
          if (o.firstChild.tagName === "TABLE" && b) {
            var l = o.firstChild.firstChild.firstChild;
            if (l.childNodes.length === 2) {
              l.firstChild.firstChild.src = $KU.getImageURL(b)
            }
          }
        }
      }
    } else {
      if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
        d.style.visibility = "hidden"
      } else {
        h.activemenu = h.selectedindex[0].toString()
      }
      var m = (d.firstChild.querySelectorAll) ? d.firstChild.querySelectorAll("ul") : document.querySelectorAll("#" + d.id + " ul");
      for (var g = 0; g < m.length; g++) {
        (function(i) {
          if (!$KU.hasClassName(i, "hidden")) {
            $KU.addClassName(i, "hidden")
          }
        })(m[g])
      }
    }
    var a = kony.events.executeBoxEvent(e, h.selecteditem, h);
    var c = (!a) ? $KU.returnEventReference(h.onclick) : null;
    if (h.onclick && c) {
      c(h, h.selectedindex, h.selecteditem)
    }
    if (h.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      h.activemenu = "";
      h.selectedindex = null
    }
  },
  setData: function(a, b) {
    if ($KU.isArray(b)) {
      a.canUpdateUI = false;
      a.data = b;
      $KW.MenuContainer.updateView(a, "data", b);
      a.canUpdateUI = true
    }
  },
  setDataAt: function(c, f, b) {
    var d = $KW.MenuContainer.getDetails(c, b);
    for (var a in d.item) {
      if (d.item.hasOwnProperty(a)) {
        d.item[a] = f[a]
      }
    }
    if (!d.node) {
      return
    }
    var e = document.createElement("div");
    e.innerHTML = ($KU.isArray(f.children) && f.children.length > 0) ? $KW.MenuContainer.renderMenu(c, f, c.context, b) : $KW.MenuContainer.renderItem(c, f, c.context, b);
    d.node.parentNode.replaceChild(e.firstChild, d.node)
  },
  addAll: function(b, e) {
    if ($KU.isArray(e)) {
      var d = $KU.getNodeByModel(b),
        a = document.createElement("div");
      d = d.firstChild;
      for (var c = 0; c < e.length; c++) {
        (function(g, f) {
          b.data.push(g);
          a.innerHTML = ($KU.isArray(g.children) && g.children.length > 0) ? $KW.MenuContainer.renderMenu(b, g, b.context, (b.data.length - 1)) : $KW.MenuContainer.renderItem(b, g, b.context, (b.data.length - 1));
          d.insertBefore(a.firstChild, d.lastChild)
        })(e[c], c)
      }
    }
  },
  addDataAt: function(b, e, a) {
    var c = $KW.MenuContainer.getDetails(b, a, "add");
    if (typeof e === "object" && $KU.isArray(c.parent)) {
      if (c.position === "append") {
        c.parent.push(e)
      } else {
        if (c.position === "after") {
          c.parent[c.index].push(e)
        } else {
          if (c.position === "before") {
            c.parent.splice(c.index, 0, e)
          }
        }
      }
      if (c.node) {
        var d = document.createElement("div");
        d.innerHTML = ($KU.isArray(e.children)) ? $KW.MenuContainer.renderMenu(b, e, b.context, a) : $KW.MenuContainer.renderItem(b, e, b.context, a);
        if (c.position === "append") {
          c.node.insertBefore(d.firstChild, c.node.lastChild)
        } else {
          if (c.position === "after") {
            c.node.parentNode.insertBefore(d.firstChild, c.node.nextSibling)
          } else {
            if (c.position === "before") {
              c.node.parentNode.insertBefore(d.firstChild, c.node)
            }
          }
        }
        $KW.MenuContainer.adjustIndexes(b)
      }
    }
  },
  removeAll: function(a) {
    $KW.MenuContainer.setData(a, [])
  },
  removeAt: function(b, a) {
    var c = $KW.MenuContainer.getDetails(b, a);
    if ($KU.isArray(c.parent)) {
      c.parent.splice(c.index, 1);
      c.node.parentNode.removeChild(c.node);
      $KW.MenuContainer.adjustIndexes(b)
    }
  },
  hover: function(q, l, a, b) {
    var o = document.getElementById(l);
    var p = o.getAttribute("kdisabled");
    if (p != null && p == "true") {
      return
    } else {
      a = parseInt(a, 10);
      if (a === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
        return
      }
      if (q.lastChild.childNodes.length > 1) {
        var m = q.getAttribute("menuindex");
        if ((a === constants.MENU_CONTAINER_VIEW_TYPE_DROPDOWNVIEW && b === "horizontal" && m.length === 1) || (a === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW)) {
          q.lastChild.style.top = "100%";
          q.lastChild.style.left = "0%"
        } else {
          q.lastChild.style.top = "0%";
          q.lastChild.style.left = "100%"
        }
        if (a === constants.MENU_CONTAINER_VIEW_TYPE_DROPLINEVIEW) {
          var c = document.getElementById(l),
            k = $KU.getModelByNode(c);
          for (var n = 0; n < (q.lastChild.childNodes.length - 1); n++) {
            (function(j, s) {
              var t = $KW.MenuContainer.getDetails(k, m + "," + j, "item"),
                r = (t.metaInfo && t.metaInfo.width) ? t.metaInfo.width : (k.width) ? k.width : 20,
                e = (t.metaInfo && t.metaInfo.subMenuWidth) ? t.metaInfo.subMenuWidth : (k.subMenuWidth) ? k.subMenuWidth : 200;
              s.style.width = Math.ceil((c.offsetWidth * r) / 100) + "px"
            })(n, q.lastChild.childNodes[n])
          }
        }
        $KU.removeClassName(q.lastChild, "hidden");
        var f = q.lastChild.children;
        if (f) {
          for (var g = 0; g < f.length - 1; g++) {
            if (f[g]) {
              var h = f[g].children[0].getElementsByTagName("img");
              if (h) {
                for (var d = 0; d < h.length; d++) {
                  h[d].style.visibility = "visible"
                }
              }
            }
          }
        }
      }
    }
  },
  hout: function(a, g, e, c) {
    if (e === constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW.toString()) {
      return
    }
    if (a.lastChild.childNodes.length > 1) {
      $KU.addClassName(a.lastChild, "hidden");
      var b = a.lastChild.children;
      if (b) {
        for (var f = 0; f < b.length - 1; f++) {
          if (b[f]) {
            var h = b[f].children[0].getElementsByTagName("img");
            if (h) {
              for (var d = 0; d < h.length; d++) {
                h[d].style.visibility = "hidden"
              }
            }
          }
        }
      }
    }
  },
  expand: function(d, e, b) {
    if (d.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    if (typeof e === "string" || typeof e === "number") {
      e = e.toString().split(",")
    }
    if (!$KU.isArray(e)) {
      return
    }
    var f = $KU.getNodeByModel(d).firstChild,
      k = null,
      g = null,
      l = $KW.MenuContainer.getDetails(d, e),
      j = (l.expandedimage) ? l.expandedimage : (d.expandedimage) ? d.expandedimage : "",
      a = (l.collapsedimage) ? l.collapsedimage : (d.collapsedimage) ? d.collapsedimage : "";
    for (var c = 0; c < e.length; c++) {
      (function(i) {
        f = f.childNodes[i].lastChild;
        if (f.childNodes.length > 1) {
          $KU.removeClassName(f, "hide");
          $KU.addClassName(f, "show");
          k = f.parentNode;
          if (k.firstChild.tagName === "TABLE" && j) {
            g = k.firstChild.firstChild.firstChild;
            if (g.childNodes.length === 2) {
              g.firstChild.firstChild.src = $KU.getImageURL(j)
            }
          }
        }
      })(e[c])
    }
    if (b === true) {
      var h = f.querySelectorAll("ul.hide");
      for (var c = 0; c < h.length; c++) {
        (function(i) {
          if (i.childNodes.length > 1) {
            $KU.removeClassName(i, "hide");
            $KU.addClassName(i, "show");
            k = i.parentNode;
            if (k.firstChild.tagName === "TABLE" && j) {
              g = k.firstChild.firstChild.firstChild;
              if (g.childNodes.length === 2) {
                g.firstChild.firstChild.src = $KU.getImageURL(j)
              }
            }
          }
        })(h[c])
      }
    }
  },
  collapse: function(d, e, b) {
    if (d.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    if (typeof e === "string" || typeof e === "number") {
      e = e.toString().split(",")
    }
    if (!$KU.isArray(e)) {
      return
    }
    var f = $KU.getNodeByModel(d).firstChild,
      k = null,
      g = null,
      l = $KW.MenuContainer.getDetails(d, e),
      j = (l.expandedimage) ? l.expandedimage : (d.expandedimage) ? d.expandedimage : "",
      a = (l.collapsedimage) ? l.collapsedimage : (d.collapsedimage) ? d.collapsedimage : "";
    for (var c = 0; c < e.length; c++) {
      (function(i) {
        f = f.childNodes[i].lastChild;
        if (f.childNodes.length > 1) {
          $KU.removeClassName(f, "show");
          $KU.addClassName(f, "hide");
          k = f.parentNode;
          if (k.firstChild.tagName === "TABLE" && a) {
            g = k.firstChild.firstChild.firstChild;
            if (g.childNodes.length === 2) {
              g.firstChild.firstChild.src = $KU.getImageURL(a)
            }
          }
        }
      })(e[c])
    }
    if (b === true) {
      var h = f.querySelectorAll("ul.show");
      for (var c = 0; c < h.length; c++) {
        (function(i) {
          if (i.childNodes.length > 1) {
            $KU.removeClassName(i, "show");
            $KU.addClassName(i, "hide")
          }
          k = i.parentNode;
          if (k.firstChild.tagName === "TABLE" && a) {
            g = k.firstChild.firstChild.firstChild;
            if (g.childNodes.length === 2) {
              g.firstChild.firstChild.src = $KU.getImageURL(a)
            }
          }
        })(h[c])
      }
    }
  },
  expandAll: function(a) {
    if (a.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    var d = $KU.getNodeByModel(a);
    var c = (d.firstChild.querySelectorAll) ? d.firstChild.querySelectorAll("ul.hide") : document.firstChild.querySelectorAll("#" + d.id + " ul.hide");
    for (var b = 0; b < c.length; b++) {
      (function(e) {
        if (e.childNodes.length > 1) {
          $KU.removeClassName(e, "hide");
          $KU.addClassName(e, "show")
        }
      })(c[b])
    }
  },
  collapseAll: function(b, a) {
    if (b.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      return
    }
    var e = $KU.getNodeByModel(b);
    var d = (e.firstChild.querySelectorAll) ? e.firstChild.querySelectorAll("ul.show") : document.firstChild.querySelectorAll("#" + e.id + " ul.show");
    for (var c = 0; c < d.length; c++) {
      (function(f) {
        if (f.childNodes.length > 1) {
          $KU.removeClassName(f, "show");
          $KU.addClassName(f, "hide")
        }
      })(d[c])
    }
  },
  getDetails: function(d, g, h) {
    if (typeof g === "string" || typeof g === "number") {
      g = g.toString().split(",")
    }
    if (!$KU.isArray(g)) {
      return
    }
    var j = d.data,
      l = null,
      b = "",
      f = "before",
      e = [],
      a = $KU.getNodeByModel(d),
      k = null;
    for (var c = 0; c < g.length; c++) {
      g[c] = parseInt(g[c], 10);
      if (h === "add" && g[c] < 0) {
        g[c] = 0
      }
      l = j[g[c]];
      if (l) {
        e.push(g[c]);
        k = (l.template) ? l.template : d.menutemplate;
        if (c < (g.length - 1)) {
          j = l.children
        }
      } else {
        break
      }
    }
    if (!l) {
      if (h === "add") {
        f = (e.length === g.length) ? "after" : "append"
      } else {
        return null
      }
    }
    if (!h || h === "add") {
      if (a) {
        a = (a.querySelectorAll) ? a.querySelectorAll('li[menuindex="' + e.join(",") + '"]')[0] : document.querySelectorAll("#" + a.id + ' li[menuindex="' + e.join(",") + '"]')[0]
      }
      if (f === "append") {
        if (!a && !e.length && g.length === 1 && g[0] >= d.data.length) {
          a = $KU.getNodeByModel(d).firstChild
        } else {
          a = a.lastChild
        }
      }
    }
    if (h === "add") {
      return {
        parent: j,
        item: l,
        template: k,
        index: e[e.length - 1],
        loop: e,
        position: f,
        node: a
      }
    } else {
      if (h === "item") {
        return l
      } else {
        if (h === "template") {
          return k
        } else {
          return {
            parent: j,
            item: l,
            node: a,
            index: e[e.length - 1]
          }
        }
      }
    }
  },
  updateActiveMenu: function(b, d, h) {
    if (b.viewtype === constants.MENU_CONTAINER_VIEW_TYPE_CONTEXTVIEW) {
      return
    }
    if (b.viewtype !== constants.MENU_CONTAINER_VIEW_TYPE_TREEVIEW) {
      h = [h[0]];
      d = [d[0]]
    }
    var c = $KU.getNodeByModel(b),
      a = (c.querySelectorAll) ? c.querySelectorAll('li[menuindex="' + h.join(",") + '"]')[0] : document.querySelectorAll("#" + c.id + ' li[menuindex="' + h.join(",") + '"]')[0],
      e = (c.querySelectorAll) ? c.querySelectorAll('li[menuindex="' + d.join(",") + '"]')[0] : document.querySelectorAll("#" + c.id + ' li[menuindex="' + d.join(",") + '"]')[0],
      g = $KW.MenuContainer.getDetails(b, h, "template"),
      f = $KW.MenuContainer.getDetails(b, d, "template");
    if (a) {
      $KU.removeClassName(a.firstChild, b.activeskin)
    }
    if (g && g.skin) {
      $KU.addClassName(a.firstChild, g.skin)
    }
    if (f && f.skin) {
      $KU.removeClassName(e.firstChild, f.skin)
    }
    if (e) {
      $KU.addClassName(e.firstChild, b.activeskin)
    }
  },
  adjustIndexes: function(b, d, a) {
    d = (!d) ? $KU.getNodeByModel(b).firstChild : d;
    if (typeof a === "undefined") {
      a = ""
    } else {
      if ($KU.isArray(a)) {
        a = a.join(",")
      }
    }
    if (typeof a === "string" || typeof a === "number") {
      a = a.toString()
    }
    for (var c = 0; c < (d.childNodes.length - 1); c++) {
      var e = (a) ? a + "," + c : "" + c;
      d.childNodes[c].setAttribute("menuindex", e);
      $KW.MenuContainer.adjustIndexes(b, d.childNodes[c].lastChild, e)
    }
  }
};

$KW.Slider = {
  initialize: function() {
    kony.events.addEvent("onorientationchange", "Slider", $KW.Slider.changeOrientation)
  },
  initializeView: function(d) {
    var a = document.querySelectorAll("#" + d + " img[kwttype ='kSlider']");
    for (var b = 0; b < a.length; b++) {
      this.attachSliderEvents(a[b])
    }
    var c = document.querySelectorAll("#" + d + " div[kwttype ='kSlider']");
    for (var b = 0; b < c.length; b++) {
      kony.events.addEventListener(c[b], "click", $KW.Slider.slideClick)
    }
  },
  attachSliderEvents: function(a) {
    kony.events.addEventListener(a, "touchstart", $KW.Slider.sliderStart);
    kony.events.addEventListener(a, "mousedown", $KW.Slider.sliderStart)
  },
  updateView: function(g, d, c, a) {
    var e = $KU.getNodeByModel(g);
    if (!e) {
      return
    }
    switch (d) {
      case "text":
        e.value = c;
        break;
      case "isvisible":
        e.value = c;
        break;
      case "leftskin":
        g.leftskin = c;
        $KU.removeClassName(e, a);
        $KU.addClassName(e, c);
        break;
      case "rightskin":
        g.rightskin = c;
        $KU.removeClassName(e.parentNode, a);
        $KU.addClassName(e.parentNode, c);
        break;
      case "thumbimage":
        e.childNodes[0].src = $KU.getImageURL(c);
        e.childNodes[0].setAttribute("thumbimage", $KU.getImageURL(c));
        break;
      case "focusthumbimage":
        e.childNodes[0].setAttribute("focusimage", $KU.getImageURL(c));
        break;
      case "selectedvalue":
        $KW.Slider.sliderUpdate(e, c);
        break;
      case "containerweight":
        this.imgLoad(e.firstChild);
        break;
      case "minlabel":
        var b = document.getElementById(e.id + "_minLabel");
        b && (b.innerHTML = c);
        break;
      case "maxlabel":
        var f = document.getElementById(e.id + "_maxLabel");
        f && (f.innerHTML = c);
        break;
      case "minlabelskin":
        var b = document.getElementById(e.id + "_minLabel");
        $KU.removeClassName(b, a);
        $KU.addClassName(b, c);
        break;
      case "maxlabelskin":
        var f = document.getElementById(e.id + "_maxLabel");
        $KU.removeClassName(f, a);
        $KU.addClassName(f, c);
        break
    }
  },
  render: function(g, b) {
    if (!g.buiskin) {
      g.buiskin = g.blockeduiskin
    }
    var h = "";
    var a = g.pf + "_" + g.id;
    g.thickness = g.thickness || $KU.isIDevice && 2 || 5;
    var l = g.leftskin || g.leftSkin || "konysliderleft";
    var i = g.rightskin || g.rightSkin || "konysliderright";
    var f = $KW.skins.getVisibilitySkin(g);
    var k = g.max - g.min;
    var d = $KU.getImageURL(g.thumbimage) || $KU.getImageURL("slider.png");
    var j = $KU.getImageURL(g.focusthumbimage) || $KU.getImageURL("sliderfocus.png");
    var c = g.minlabel || "";
    var e = g.maxlabel || "";
    g.view = g.view || "default";
    g.orientation = g.orientation || "horizontal";
    if (g.orientation == "horizontal") {
      h += "<div tabindex='0'style=\" " + $KW.skins.getMarginSkin(g, b) + '" class = "' + $KW.skins.getMarAdjustedContainerWeightSkin(g, 100) + f + '">';
      h += '<div min= "' + g.min + '" max="' + g.max + '" diff ="' + k + '" step ="' + g.step + '" kwttype ="kSlider" ';
      h += 'id="' + a + '_outer" class="' + i + '"  style=" height: ' + g.thickness + 'px;"';
      h += ' kformname="' + g.pf + '">';
      h += '<div role="slider" aria-valuenow="' + g.selectedvalue + '"  align="left"' + $KW.Utils.getBaseHtml(g, b) + ' class="' + l + '"';
      h += 'style= "vertical-align:middle;  position: relative; ">';
      h += '<img onload = "$KW.Slider.imgLoad(this, false)" kwttype ="kSlider" kformname="' + g.pf + '" id ="' + g.pf + "_" + g.id + '_image" src ="' + d + '" thumbimage="' + d + '" focusimage ="' + j + '"style="  position: relative;  vertical-align:top;" ></img>';
      h += "</div></div>";
      h += '<div style="overflow:auto;position:relative;">';
      h += '<label id="' + a + '_minLabel" style="float: left; "class="' + g.minlabelskin + '" >' + c + "</label>";
      h += '<label id="' + a + '_maxLabel" style="float: right; "class="' + g.maxlabelskin + '" >' + e + "</label>";
      h += "</div>";
      h += "</div>"
    } else {
      h += '<div style="margin: 5%; width:90%;" class="' + f + '">';
      h += '<div style="margin-bottom: 2px;" >';
      h += '<label id="' + a + '_maxLabel" class="' + g.maxlabelskin + '" >' + e + "</label>";
      h += "</div>";
      h += '<div min= "' + g.min + '" max="' + g.max + '" diff ="' + k + '" step ="' + g.step + '" kwttype ="kSlider" ';
      h += 'id="' + a + '_outer" class="' + i + '"  style="height: 150px; width: ' + g.thickness + 'px;"';
      h += ' kformname="' + g.pf + '">';
      h += '<div  align="left"' + $KW.Utils.getBaseHtml(g, b) + ' class="' + l + '"';
      h += 'style= "vertical-align:middle;  position: relative; ">';
      h += '<img onload = "$KW.Slider.imgLoad(this, false)" kwttype ="kSlider" kformname="' + g.pf + '" id ="' + a + '_image" src ="' + d + '" thumbimage="' + d + '" focusimage ="' + j + '"style="  position: relative;  vertical-align:top;"></img>';
      h += "</div></div>";
      h += '<div style="margin-top: 2px;" >';
      h += '<label id="' + a + '_minLabel" class="' + g.minlabelskin + '" >' + c + "</label>";
      h += "</div>";
      h += "</div>"
    }
    g.context = b;
    return h
  },
  completeMove: function(c) {
    if (!c) {
      c = window.event
    }
    kony.events.preventDefault(c);
    var b = kony.globals.__activeSlider;
    var n = b.split("_");
    b = n[0] + "_" + n[1];
    var i = document.getElementById(b);
    var o = $KU.getModelByNode(i);
    var k = c.touches && c.touches[0] || c;
    var q = i.firstChild;
    var m = i.parentNode;
    q.src = q.getAttribute("focusimage");
    if (o.orientation == "horizontal") {
      var g = q.offsetWidth / 2;
      var h = (k.pageX || k.clientX) - g;
      var l = m.offsetWidth;
      var j = $KW.Utils.getPosition(m).left - g;
      if (h < (j)) {
        h = j
      }
      if (h >= (l + j)) {
        h = l + j
      }
      var e = Math.round((h - j) / o.stepwidth);
      if (e * o.step <= (o.max - o.min)) {
        o.selectedvalue = o.min + (e * o.step);
        var a = Math.round(e * o.stepwidth);
        i.style.width = (g + a) + "px";
        var p = i.parentNode.offsetWidth;
        var d = g + a;
        i.style.width = (d > p ? p : d) + "px";
        q.style.left = (a - g) + "px"
      } else {
        o.selectedvalue = o.max;
        i.style.width = (l + g) + "px";
        q.style.left = (l + g) + "px"
      }
    } else {
      var g = q.offsetHeight / 2;
      var h = (k.pageY || k.clientY) - g;
      var l = m.offsetHeight;
      var j = $KW.Utils.getOffset(m).top - g;
      if (h < (j)) {
        h = j
      }
      if (h >= (l + j)) {
        h = l + j
      }
      var e = Math.round((h - j) / o.stepwidth);
      if (e * o.step <= (o.max - o.min)) {
        o.selectedvalue = o.min + (e * o.step);
        var a = Math.round(e * o.stepwidth);
        i.style.height = (g + a) + "px";
        q.style.top = (a - g) + "px"
      }
    }
    if (o.view != "progress") {
      var f = $KU.returnEventReference(o.onslide);
      if (f) {
        f.call(o, o, o.selectedvalue)
      }
    }
  },
  sliderStart: function(b) {
    if (!b) {
      b = window.event
    }
    var c = b.target || b.srcElement;
    kony.globals.__activeSlider = c.parentNode.id;
    var a = $KU.getModelByNode(c.parentNode);
    if (a.disabled != true) {
      kony.events.addEventListener(document, "mousemove", $KW.Slider.completeMove);
      kony.events.addEventListener(document, "mouseup", $KW.Slider.completeEnd);
      kony.events.addEventListener(document, "touchmove", $KW.Slider.completeMove);
      kony.events.addEventListener(document, "touchend", $KW.Slider.completeEnd);
      kony.events.preventDefault(b)
    }
  },
  completeEnd: function(a) {
    if (!a) {
      a = window.event
    }
    var b = a.target || a.srcElement;
    kony.events.removeEventListener(document, "mousemove", $KW.Slider.completeMove);
    kony.events.removeEventListener(document, "touchmove", $KW.Slider.completeMove);
    $KW.Slider.sliderEnd(a)
  },
  slideClick: function(b) {
    if (!b) {
      b = window.event
    }
    var c = b.target || b.srcElement;
    kony.globals.__activeSlider = c.id;
    if (!c.firstChild) {
      return
    }
    var a = $KU.getModelByNode(c.firstChild) || $KU.getModelByNode(c);
    if (a.disabled != true && a && a.view != "progress") {
      console.log(c.id);
      kony.events.addEventListener(c, "click", $KW.Slider.completeMove)
    }
  },
  sliderEnd: function(e) {
    if (!e) {
      e = window.event
    }
    var g = kony.globals.__activeSlider;
    if (g == undefined) {
      return
    }
    var d = g.split("_");
    g = d[0] + "_" + d[1];
    var c = document.getElementById(g);
    if (c == undefined) {
      return
    }
    kony.events.removeEventListener(document, "mouseup", $KW.Slider.completeEnd);
    kony.events.removeEventListener(document, "touchend", $KW.Slider.completeEnd);
    var b = $KU.getModelByNode(c);
    if (b.view != "progress") {
      var a = $KU.returnEventReference(b.onselection);
      if (a) {
        a.call(b, b);
        $KU.onEventHandler(b)
      }
    }
    var f = c.firstChild;
    f.src = f.getAttribute("thumbimage");
    return
  },
  changeOrientation: function(c) {
    var a = document.querySelectorAll("img[kwttype ='kSlider']");
    for (var b = 0; b < a.length; b++) {
      $KW.Slider.imgLoad(a[b])
    }
  },
  imgLoad: function(f) {
    if (!f.complete) {
      return
    }
    var a = f.parentNode.parentNode;
    var h = $KU.getModelByNode(f.parentNode);
    if (!h) {
      return
    }
    if (h.view == "progress") {
      f.style.display = "none"
    }
    var k = (h.max - h.min) / h.step;
    if (h.orientation == "horizontal") {
      var g = f.offsetHeight - h.thickness;
      var c = f.width;
      f.style.top = (-(g) / 2) + "px";
      if (h.view == "progress") {
        f.parentNode.style.width = 0 + "px"
      } else {
        f.parentNode.style.width = (c / 2) + "px"
      }
      f.parentNode.style.height = h.thickness + "px";
      var e = a.offsetWidth;
      var d = a.parentNode;
      var l = d.offsetHeight;
      if ($KU.isFlexWidget(h) && l > g) {
        a.style.position = "relative";
        var j = 0;
        if (h.minlabel || h.maxlabel) {
          j = a.nextSibling.offsetHeight
        }
        var i = (l - j - (a.offsetHeight / 2)) / 2;
        a.style.top = i + "px";
        a.style.marginTop = a.style.marginBottom = "";
        if (h.minlabel || h.maxlabel) {
          a.nextSibling.style.top = i + 3 + "px"
        }
      } else {
        if (g > 0) {
          a.style.marginTop = (g / 2) + "px";
          a.style.marginBottom = (g / 2) + "px"
        }
      }
      d.style.paddingLeft = (c / 2) + "px";
      d.style.paddingRight = (c / 2) + "px";
      e = d.childNodes[0].offsetWidth
    } else {
      var g = f.height;
      var c = f.offsetWidth - h.thickness;
      f.style.left = -((c) / 2) + "px";
      if (h.view == "progress") {
        f.parentNode.style.height = "0px"
      } else {
        f.parentNode.style.height = (g / 2) + "px"
      }
      f.parentNode.style.width = h.thickness + "px";
      var e = a.offsetHeight
    }
    var b = e / k;
    h.noofsteps = k;
    h.stepwidth = b;
    h.imgwt = c;
    if (h.selectedvalue > 0) {
      $KW.Slider.sliderLoad(f.parentNode)
    }
  },
  sliderLoad: function(a) {
    var e = 500;
    var i = $KU.getModelByNode(a);
    var j = a.firstChild;
    if (i.orientation == "horizontal") {
      var c = j.offsetWidth / 2;
      var h = a.parentNode;
      var g = h.offsetWidth;
      var f = $KW.Utils.getOffset(h).left - c;
      var b = i.selectedvalue - i.min;
      var d = (b * i.stepwidth) / i.step;
      if (i.view == "progress") {
        if (kony.appinit.useTransition) {
          a.style[vendor + "Transition"] = "width " + e + "ms ease";
          a.style.width = (d + c) + "px"
        } else {
          $(a).animate({
            width: (d + c) + "px"
          }, e)
        }
      } else {
        a.style.width = (d + c) + "px"
      }
      j.style.left = (d - c) + "px"
    } else {
      var c = j.offsetHeight / 2;
      var h = a.parentNode;
      var g = h.offsetHeight;
      var f = $KW.Utils.getOffset(h).top - c;
      var b = i.selectedvalue - i.min;
      var d = (b * i.stepwidth) / i.step;
      if (i.view == "progress") {
        if (kony.appinit.useTransition) {
          a.style[vendor + "Transition"] = "height " + e + "ms ease";
          a.style.height = (d + c) + "px"
        } else {
          $(a).animate({
            height: (d + c) + "px"
          }, e)
        }
      } else {
        a.style.height = (d + c) + "px"
      }
      j.style.top = (d - c) + "px"
    }
  },
  sliderUpdate: function(b, d) {
    var a = $KU.getModelByNode(b);
    if (d >= a.max) {
      d = a.max
    }
    if (d <= a.min) {
      d = a.min
    }
    var c = d % a.step;
    if (c != 0) {
      d = a.step * Math.round(d / a.step)
    }
    a.selectedvalue = d;
    $KW.Slider.sliderLoad(b)
  },
  adjustSliders: function(a) {
    var b = document.querySelectorAll("#" + formId + " img[kwttype ='kSlider']");
    for (var c = 0; c < sliderElements.length; c++) {
      var d = sliderElements[c];
      $KW.Slider.imgLoad(d)
    }
  },
  animSlider: function(b, g, i) {
    if (!b) {
      return 0
    }
    var a = $KU.getNodeByModel(g);
    var h = a.childNodes[0].naturalWidth;
    var e = {
      value: parseFloat(b),
      unit: $KU.getUnit(b)
    };
    var b = $KU.getValueByParentFrame(g, e, "x");
    var b = parseInt(b, 10);
    var f = g.selectedvalue;
    b = (b - h) / 100;
    var c = f - g.min;
    var d = (c * b) / g.step;
    if (i == "width") {
      return (d + (h / 2)) + "px"
    } else {
      return (d - (h / 2)) + "px"
    }
  }
};
kony.inherits = function(c, b) {
  function a() {}
  a.prototype = b.prototype;
  c.prototype = new a();
  c.prototype.constructor = c;
  c.baseConstructor = b;
  c.superClass = b.prototype
};
kony.ui = {
  Widget: function(f, n, i) {
    if (arguments.length < 3) {
      throw new KonyError(101, "Error", "Invalid number of arguments")
    }
    if (f.id === undefined || f.id === null || f.id === "") {
      throw new KonyError(1102, "WidgetError", "Widget cannot be created due to invalid input data.")
    }
    this.id = f.id;
    this.focusskin = f.focusSkin;
    this.isvisible = f.isVisible === undefined ? true : (f.isVisible && true);
    f.i18n_text && (this.i18n_text = f.i18n_text);
    this.containerweight = n.containerWeight || 0;
    this.contentalignment = n.contentAlignment;
    this.widgetalignment = n.widgetAlignment;
    this.marginInPixel = n.marginInPixel;
    this.paddingInPixel = n.paddingInPixel;
    this.blockeduiskin = i.blockedUISkin;
    this.hexpand = (typeof n.hExpand == "undefined") ? false : n.hExpand;
    this.enabled = false;
    this.canUpdateUI = true;
    this.onclick = f.onClick;
    this.accessibilityconfig = f.accessibilityConfig;
    defineGetter(this, "accessibilityConfig", function() {
      return this.accessibilityconfig
    });
    defineSetter(this, "accessibilityConfig", function(q) {
      var p = this.accessibilityconfig;
      this.accessibilityconfig = q;
      kony.model.updateView(this, "accessibilityConfig", q, p)
    });
    var g = (!n.margin) ? [0, 0, 0, 0] : n.margin;
    defineGetter(this, "margin", function() {
      return g
    });
    defineSetter(this, "margin", function(p) {
      g = p;
      $KU.isArray(p) && kony.model.updateView(this, "margin", p)
    });
    var k = (!n.padding) ? [0, 0, 0, 0] : n.padding;
    defineGetter(this, "padding", function() {
      return k
    });
    defineSetter(this, "padding", function(r) {
      var q = k;
      k = r;
      $KU.isArray(r) && kony.model.updateView(this, "padding", r);
      var p = $KU.inArray($KU.contentDrivenWidgets, this.wType)[0];
      p && $KU.setLayoutConfig(this, r, q)
    });
    var o = f.skin;
    defineGetter(this, "skin", function() {
      return o
    });
    defineSetter(this, "skin", function(r) {
      var q = o;
      o = r;
      kony.model.updateView(this, "skin", r, q);
      var p = $KU.inArray($KU.contentDrivenWidgets, this.wType)[0];
      p && $KU.setLayoutConfig(this, r, q)
    });
    this.onDrag = f.onDrag;
    this.frame = {};
    this.layoutConfig = {
      self: true,
      children: false
    };
    var e = f.left;
    defineGetter(this, "left", function() {
      return e
    });
    defineSetter(this, "left", function(q) {
      var p = e;
      e = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var l = f.right;
    defineGetter(this, "right", function() {
      return l
    });
    defineSetter(this, "right", function(q) {
      var p = l;
      l = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var j = f.top;
    defineGetter(this, "top", function() {
      return j
    });
    defineSetter(this, "top", function(q) {
      var p = j;
      j = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var b = f.bottom;
    defineGetter(this, "bottom", function() {
      return b
    });
    defineSetter(this, "bottom", function(q) {
      var p = b;
      b = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var c = f.width;
    defineGetter(this, "width", function() {
      return c
    });
    defineSetter(this, "width", function(q) {
      var p = c;
      c = q;
      $KU.setLayoutConfig(this, q, p)
    });
    var m = f.height;
    defineGetter(this, "height", function() {
      return m
    });
    defineSetter(this, "height", function(q) {
      var p = m;
      m = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.minwidth = f.minWidth;
    defineGetter(this, "minWidth", function() {
      return this.minwidth
    });
    defineSetter(this, "minWidth", function(q) {
      var p = this.minwidth;
      this.minwidth = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.maxwidth = f.maxWidth;
    defineGetter(this, "maxWidth", function() {
      return this.maxwidth
    });
    defineSetter(this, "maxWidth", function(q) {
      var p = this.maxwidth;
      this.maxwidth = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.minheight = f.minHeight;
    defineGetter(this, "minHeight", function() {
      return this.minheight
    });
    defineSetter(this, "minHeight", function(q) {
      var p = this.minheight;
      this.minheight = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.maxheight = f.maxHeight;
    defineGetter(this, "maxHeight", function() {
      return this.maxheight
    });
    defineSetter(this, "maxHeight", function(q) {
      var p = this.maxheight;
      this.maxheight = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.centerx = f.centerX;
    defineGetter(this, "centerX", function() {
      return this.centerx
    });
    defineSetter(this, "centerX", function(q) {
      var p = this.centerx;
      this.centerx = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.centery = f.centerY;
    defineGetter(this, "centerY", function() {
      return this.centery
    });
    defineSetter(this, "centerY", function(q) {
      var p = this.centery;
      this.centery = q;
      $KU.setLayoutConfig(this, q, p)
    });
    this.zindex = f.zIndex || 1;
    defineGetter(this, "zIndex", function() {
      return this.zindex
    });
    defineSetter(this, "zIndex", function(p) {
      this.zindex = p;
      kony.model.updateView(this, "zindex", p)
    });
    this.dolayout = f.doLayout;
    defineGetter(this, "doLayout", function() {
      return this.dolayout
    });
    defineSetter(this, "doLayout", function(p) {
      this.dolayout = p
    });
    var h = f.opacity;
    defineGetter(this, "opacity", function() {
      return h
    });
    defineSetter(this, "opacity", function(p) {
      h = p;
      kony.model.updateView(this, "opacity", p)
    });
    var d = f.transform;
    defineGetter(this, "transform", function() {
      return d
    });
    defineSetter(this, "transform", function(p) {
      d = p;
      kony.model.updateView(this, "transform", p)
    });
    var a = f.anchorPoint;
    defineGetter(this, "anchorPoint", function() {
      return this.anchorpoint
    });
    defineSetter(this, "anchorPoint", function(p) {
      a = p;
      kony.model.updateView(this, "anchorpoint", p)
    });
    this.backgroundcolor = f.backgroundColor;
    defineGetter(this, "backgroundColor", function() {
      return this.backgroundcolor
    });
    defineSetter(this, "backgroundColor", function(p) {
      this.backgroundcolor = p;
      kony.model.updateView(this, "backgroundcolor", p)
    });
    this.borderwidth = f.borderWidth;
    defineGetter(this, "borderWidth", function() {
      return this.borderwidth
    });
    defineSetter(this, "borderWidth", function(p) {
      this.borderwidth = p;
      kony.model.updateView(this, "borderwidth", p)
    });
    this.bordercolor = f.borderColor;
    defineGetter(this, "borderColor", function(p) {
      return this.bordercolor
    });
    defineSetter(this, "borderColor", function(p) {
      this.bordercolor = p;
      kony.model.updateView(this, "bordercolor", p)
    });
    this.cornerradius = f.cornerRadius;
    defineGetter(this, "cornerRadius", function() {
      return this.cornerradius
    });
    defineSetter(this, "cornerRadius", function(p) {
      this.cornerradius = p;
      kony.model.updateView(this, "cornerradius", p)
    });
    kony.ui.Widget.prototype.setGetterSetter.call(this);
    this.onTouchStart = f.onTouchStart;
    this.onTouchMove = f.onTouchMove;
    this.onTouchEnd = f.onTouchEnd;
    this.layouttype = n.layoutType || kony.flex.VBOX_LAYOUT;
    this.layoutmeta = n.layoutMeta;
    this.gridCell = n.gridCell;
    this.onhover = i.onHover;
    if (kony.appinit.isIE7 || kony.appinit.isIE8) {
      this.margin = g;
      this.padding = k;
      this.skin = o;
      this.accessibilityConfig = this.accessibilityconfig;
      this.centerx = f.centerX;
      this.centery = f.centerY;
      this.top = j;
      this.right = l;
      this.bottom = b;
      this.left = e;
      this.height = m;
      this.width = c;
      this.zindex = f.zIndex;
      this.minwidth = f.minWidth;
      this.maxwidth = f.maxWidth;
      this.minheight = f.minHeight;
      this.maxheight = f.maxHeight
    }
  },
  ContainerWidget: function(c, b, a) {
    kony.ui.ContainerWidget.baseConstructor.call(this, c, b, a);
    if (this.name != "kony.ui.FlexContainer") {
      this.orientation = c.orientation || constants.BOX_LAYOUT_HORIZONTAL
    }
    this.percent = (b.percent === undefined) ? true : b.percent;
    if (this.percent === false) {
      this.widgetdirection = b.layoutAlignment
    }
    this.ownchildrenref = [];
    this.children = []
  },
  GroupWidget: function(c, b, a) {
    kony.ui.GroupWidget.baseConstructor.call(this, c, b, a);
    this.onselection = c.onSelection;
    this.masterdata = c.masterData;
    this.masterdatamap = c.masterDataMap;
    this.selectedkeyvalue = null;
    this.selectedkey = c.selectedKey || null;
    kony.ui.GroupWidget.prototype.setGetterSetter.call(this)
  },
  createAnimation: function(a) {
    return new $KW.Animator(a)
  },
  makeAffineTransform: function() {
    return new $KW.Transform()
  },
  enableCapturingAnimationRuntimeData: function() {
    $KG.appbehaviors.captureAniamtionData = true
  },
  disableCapturingAnimationRuntimeData: function() {
    $KG.appbehaviors.captureAniamtionData = false
  }
};
kony.inherits(kony.ui.GroupWidget, kony.ui.Widget);
kony.inherits(kony.ui.ContainerWidget, kony.ui.Widget);
kony.ui.Widget.prototype.setVisibility = function(a) {
  $KW.Widget.setvisibility(this, a)
};
kony.ui.Widget.prototype.setFocus = function() {
  $KW.Widget.setfocus(this)
};
kony.ui.Widget.prototype.setEnabled = function(a) {
  $KW.Widget.setenabled(this, a)
};
kony.ui.Widget.prototype.addGestureRecognizer = function(c, b, a) {
  return ($KW.Widget.addgesturerecognizer(this, c, b, a))
};
kony.ui.Widget.prototype.setGestureRecognizer = function(c, b, a) {
  return ($KW.Widget.setgesturerecognizer(this, c, b, a))
};
kony.ui.Widget.prototype.removeGestureRecognizer = function(a) {
  $KW.Widget.removegesturerecognizer(this, a)
};
kony.ui.Widget.prototype.toString = function() {
  return JSON.stringify(this, $KU.jsonReplacer)
};
kony.ui.Widget.prototype.removeFromParent = function() {
  if (!this.parent) {
    return
  }
  if (this.parent.id == this.pf) {
    formWidgetExtendRemove.call(this.parent, this)
  } else {
    boxWidgetExtendRemove.call(this.parent, this)
  }
};
kony.ui.Widget.prototype.setWidgetFrame = function(b, a) {
  $KW.Utils.setWidgetFrame(this, b, a)
};
kony.ui.Widget.prototype.animate = function(c, b, a) {
  if (c) {
    c.animate && c.animate(this, b, a)
  }
};
kony.ui.Widget.prototype.getPreferredSize = function(a) {
  return $KW.Widget.getPreferredSize(this, a)
};
kony.ui.Widget.prototype.convertPointToWidget = function(a, b) {
  return $KW.Widget.convertPointToWidget(this, a, b)
};
kony.ui.Widget.prototype.convertPointFromWidget = function(a, b) {
  return $KW.Widget.convertPointFromWidget(this, a, b)
};
kony.ui.Widget.prototype.setGetterSetter = function() {
  defineGetter(this, "contentAlignment", function() {
    return this.contentalignment
  });
  defineSetter(this, "contentAlignment", function(b) {
    var a = this.contentalignment;
    this.contentalignment = b;
    kony.model.updateView(this, "contentalignment", b, a)
  });
  defineGetter(this, "containerWeight", function() {
    return this.containerweight
  });
  defineSetter(this, "containerWeight", function(b) {
    var a = this.containerweight;
    this.containerweight = b;
    kony.model.updateView(this, "containerweight", b, a)
  });
  defineGetter(this, "focusSkin", function() {
    return this.focusskin
  });
  defineSetter(this, "focusSkin", function(b) {
    var a = this.focusskin;
    this.focusskin = b;
    kony.model.updateView(this, "focusskin", b, a)
  });
  defineGetter(this, "hoverSkin", function() {
    return this.hoverskin
  });
  defineSetter(this, "hoverSkin", function(b) {
    var a = this.hoverskin;
    this.hoverskin = b;
    kony.model.updateView(this, "hoverskin", b, a)
  });
  defineGetter(this, "isVisible", function() {
    return this.isvisible
  });
  defineSetter(this, "isVisible", function(b) {
    var a = this.isvisible;
    this.isvisible = b;
    (a != b) && kony.model.updateView(this, "isvisible", b)
  });
  defineGetter(this, "blockedUISkin", function() {
    return this.blockeduiskin
  });
  defineSetter(this, "blockedUISkin", function(a) {
    this.blockeduiskin = a
  });
  defineGetter(this, "onClick", function() {
    return this.onclick
  });
  defineSetter(this, "onClick", function(a) {
    this.onclick = a
  });
  defineGetter(this, "onTouchStart", function() {
    return this.ontouchstart
  });
  defineSetter(this, "onTouchStart", function(a) {
    this.ontouchstart = a;
    kony.model.updateView(this, "touchstart", a)
  });
  defineGetter(this, "onTouchMove", function() {
    return this.ontouchmove
  });
  defineSetter(this, "onTouchMove", function(a) {
    this.ontouchmove = a;
    kony.model.updateView(this, "touchmove", a)
  });
  defineGetter(this, "onTouchEnd", function() {
    return this.ontouchend
  });
  defineSetter(this, "onTouchEnd", function(a) {
    this.ontouchend = a;
    kony.model.updateView(this, "touchend", a)
  });
  defineGetter(this, "onHover", function() {
    return this.onhover
  });
  defineSetter(this, "onHover", function(a) {
    this.onhover = a;
    new $KI.HoverInit(this)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.contentAlignment = this.contentalignment;
    this.containerWeight = this.containerweight;
    this.focusSkin = this.focusskin;
    this.isVisible = this.isvisible;
    this.blockedUISkin = this.blockeduiskin;
    this.onClick = this.onclick;
    this.accessibilityConfig = this.accessibilityconfig
  }
};
kony.ui.ContainerWidget.prototype.add = function(a) {
  containerWidgetExtendAdd.call(this, a)
};
kony.ui.ContainerWidget.prototype.addAt = function(b, a) {
  containerWidgetExtendAddAt.call(this, b, a)
};
kony.ui.ContainerWidget.prototype.remove = function(a) {
  containerWidgetExtendRemove.call(this, a)
};
kony.ui.ContainerWidget.prototype.removeAt = function(a) {
  return containerWidgetExtendRemoveAt.call(this, a)
};
kony.ui.ContainerWidget.prototype.removeAll = function(a) {
  return containerWidgetExtendRemoveAll.call(this, a)
};
kony.ui.ContainerWidget.prototype.widgets = function() {
  return this.ownchildrenref
};
kony.ui.ContainerWidget.prototype.setparent = function(a) {
  containerWidgetExtendSetParent.call(this, a)
};
kony.ui.ContainerWidget.prototype.createhierarchy = function(a) {
  containerWidgetExtendCreateHierarchy.call(this, a)
};
kony.ui.ContainerWidget.prototype.removeReferences = function(a) {
  containerWidgetExtendRemoveReferences.call(this, a)
};
kony.ui.GroupWidget.prototype.setGetterSetter = function() {
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "masterData", function() {
    return this.masterdata
  });
  defineSetter(this, "masterData", function(a) {
    this.masterdata = a;
    $KW[this.wType]["updateView"](this, "masterdata", a)
  });
  defineGetter(this, "masterDataMap", function() {
    return this.masterdatamap
  });
  defineSetter(this, "masterDataMap", function(a) {
    this.masterdatamap = a;
    $KW[this.wType]["updateView"](this, "masterdatamap", a)
  });
  defineGetter(this, "selectedKey", function() {
    return this.selectedkey
  });
  defineSetter(this, "selectedKey", function(a) {
    this.selectedkey = a;
    $KW[this.wType]["updateView"](this, "selectedkey", a)
  });
  defineGetter(this, "selectedKeyValue", function() {
    return this.selectedkeyvalue
  });
  defineSetter(this, "selectedKeyValue", function() {});
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSelection = this.onselection;
    this.masterData = this.masterdata;
    this.masterDataMap = this.masterdatamap;
    this.selectedKey = this.selectedkey;
    this.selectedKeyValue = this.selectedkeyvalue
  }
};
_konyConstNS = IndexJL ? konyLua : kony.ui;
kony.ui.Form2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Form2"))
  }
  this.layouttype = c.layoutType || b.layoutType || kony.flex.VBOX_LAYOUT;
  if (this.layouttype == kony.flex.VBOX_LAYOUT || this.layouttype == constants.CONTAINER_LAYOUT_GRID) {
    kony.ui.Form2.baseConstructor.call(this, c, b, a)
  } else {
    kony.ui.FlexScrollContainer.call(this, c, b, a);
    $KU.extend(Object.getPrototypeOf ? Object.getPrototypeOf(this) : this.constructor.prototype, kony.ui.FlexScrollContainer.prototype)
  }
  this.type = c.type;
  this.needAppMenu = this.needappmenu = c.needAppMenu === undefined ? true : (c.needAppMenu && true);
  this.enabledForIdleTimeout = this.enabledforidletimeout = c.enabledForIdleTimeout || a.enabledForIdleTimeout || false;
  this.headers = c.headers && c.headers.splice(0, c.headers.length);
  this.footers = c.footers && c.footers.splice(0, c.footers.length);
  this.addWidgets = c.addWidgets;
  this.onDestroy = c.onDestroy;
  this.init = c.init;
  this.preshow = c.preShow;
  this.postshow = c.postShow;
  this.onhide = c.onHide || a.onHide;
  this.onorientationchange = c.onOrientationChange;
  defineGetter(this, "layoutType", function() {
    return this.layouttype
  });
  this.displayOrientation = b.displayOrientation || constants.FORM_DISPLAY_ORIENTATION_BOTH;
  this.resetFocusToTop = a.resetFocusToTop;
  this.useTransform = a.useTransform;
  this.retainScrollPosition = this.retainscrollposition = a.retainScrollPosition || false;
  this.dockableAppmenu = this.dockableappmenu = a.dockableAppmenu;
  this.dockableHeader = this.dockableheader = a.dockableHeader;
  this.dockableFooter = this.dockablefooter = a.dockableFooter;
  this.intransitionconfig = a.inTransitionConfig;
  this.outtransitionconfig = a.outTransitionConfig;
  this.allboxes = [];
  this.wType = "Form";
  this.addWidgetsdone = this.initdone = false;
  if (!this.addWidgets) {
    this.addWidgetsdone = true
  }
  this.name = "kony.ui.Form2";
  $KG.allforms[this.id] = this;
  defineGetter(this, "layoutType", function() {
    return this.layouttype
  });
  var e = c.title;
  defineGetter(this, "title", function() {
    return e
  });
  defineSetter(this, "title", function(f) {
    e = f;
    $KW[this.wType]["updateView"](this, "title", f)
  });
  c.i18n_title && (this.i18n_title = c.i18n_title);
  kony.ui.Form2.prototype.setGetterSetter();
  this.headers && this.commonHeaderFooterSetup("headers");
  this.footers && this.commonHeaderFooterSetup("footers");
  var d = c.addWidgets;
  defineGetter(this, "addWidgets", function() {
    return d
  });
  defineSetter(this, "addWidgets", function(f) {
    d = f;
    this.addWidgetsdone = false
  });
  this.formgetter = function() {
    var g = c.id;
    var f = this;
    defineGetter(window, g, function() {
      if (!f.addWidgetsdone) {
        f.addWidgetsdone = true;
        f.ownchildrenref = [];
        f.children = [];
        f.addWidgets && f.addWidgets(f)
      }
      return f
    })
  };
  this.formsetter = function() {
    var g = c.id;
    var f = this;
    defineSetter(window, g, function() {
      return f
    })
  };
  this.formgetter();
  this.formsetter();
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.title = e;
    this.addWidgets = d
  }
  this.ondeviceback = a.onDeviceBack;
  defineGetter(this, "onDeviceBack", function() {
    return this.ondeviceback
  });
  defineSetter(this, "onDeviceBack", function(f) {
    this.ondeviceback = f
  })
};
kony.inherits(kony.ui.Form2, kony.ui.ContainerWidget);
kony.ui.Form2.prototype.add = function() {
  var a = [].slice.call(arguments);
  formWidgetExtendAdd.call(this, a)
};
kony.ui.Form2.prototype.addAt = function(b, a) {
  formWidgetExtendAddAt.call(this, b, a)
};
kony.ui.Form2.prototype.destroy = function() {
  this.onDestroy && this.onDestroy(this);
  var b = this.widgets();
  for (var a = 0; a < b.length; a++) {
    removeAllReferences(b[a]);
    if (b[a] instanceof _konyConstNS.ContainerWidget) {
      delete this[b[a].id]
    }
  }
  this.addWidgetsdone = false;
  this.initdone = false;
  this.ownchildrenref = [];
  this.children = []
};
kony.ui.Form2.prototype.remove = function(a) {
  formWidgetExtendRemove.call(this, a)
};
kony.ui.Form2.prototype.removeAt = function(a) {
  return formWidgetExtendRemoveAt.call(this, a)
};
kony.ui.Form2.prototype.removeAll = function() {
  formWidgetExtendRemoveAll.call(this)
};
kony.ui.Form2.prototype.show = function() {
  if (!this.addWidgetsdone) {
    this.addWidgetsdone = true;
    this.ownchildrenref = [];
    this.children = [];
    if (this.addWidgets) {
      if (typeof this.addWidgets == "string") {
        window[this.addWidgets](this)
      } else {
        if (typeof this.addWidgets == "function") {
          this.addWidgets(this)
        }
      }
    }
  }
  if (this.name == "kony.ui.Form") {
    !this.masterdataloaddone && this.masterdataload && this.masterdataload.call(this);
    !this.transactionaldataloaddone && this.transactionaldataload && this.transactionaldataload.call(this);
    this.transactionaldataloaddone = this.masterdataloaddone = true
  } else {
    !this.initdone && this.init && this.init(this);
    this.initdone = true
  }
  $KW.Form.show(this)
};
kony.ui.Form2.prototype.scrollToWidget = function(a) {
  $KW.Form.scrollToWidget(this, a)
};
kony.ui.Form2.prototype.scrollToBeginning = function() {
  $KW.Form.scrollToBeginning(this)
};
kony.ui.Form2.prototype.scrollToEnd = function() {
  $KW.Form.scrollToEnd(this)
};
kony.ui.Form2.prototype.widgets = function() {
  return kony.ui.ContainerWidget.prototype.widgets.call(this)
};
kony.ui.Form2.prototype.createFormLevelHierarchy = function(a) {
  formWidgetExtendCreateFormLevelHierarchy.call(this, a)
};
kony.ui.Form2.prototype.commonHeaderFooterSetup = function(a) {
  formWidgetExtendCommonHeaderFooterSetup.call(this, a)
};
kony.ui.Form2.prototype.setGetterSetter = function() {
  defineGetter(this, "preShow", function() {
    return this.preshow
  });
  defineSetter(this, "preShow", function(a) {
    this.preshow = a
  });
  defineGetter(this, "postShow", function() {
    return this.postshow
  });
  defineSetter(this, "postShow", function(a) {
    this.postshow = a
  });
  defineGetter(this, "onHide", function() {
    return this.onhide
  });
  defineSetter(this, "onHide", function(a) {
    this.onhide = a
  });
  defineGetter(this, "onOrientationChange", function() {
    return this.onorientationchange
  });
  defineSetter(this, "onOrientationChange", function(a) {
    this.onorientationchange = a
  });
  defineGetter(this, "inTransitionConfig", function() {
    return this.intransitionconfig
  });
  defineSetter(this, "inTransitionConfig", function(a) {
    this.intransitionconfig = a
  });
  defineGetter(this, "outTransitionConfig", function() {
    return this.outtransitionconfig
  });
  defineSetter(this, "outTransitionConfig", function(a) {
    this.outtransitionconfig = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.preShow = this.preshow;
    this.postShow = this.postshow;
    this.onHide = this.onhide;
    this.onOrientationChange = this.onorientationchange;
    this.inTransitionConfig = this.intransitionconfig;
    this.outTransitionConfig = this.outtransitionconfig
  }
};
kony.ui.Form2.getallboxes = function(a) {
  var b = a;
  if (!(a instanceof Array)) {
    b = [a]
  }
  formWidgetExtendGetAllBoxes.call(this, b)
};
kony.ui.Form2.addHeaderorFooter = function() {
  formWidgetExtendaddHeaderorFooter.call(this, arguments)
};
kony.ui.Form = function(c, b, a) {
  kony.ui.Form.baseConstructor.call(this, c, b, a);
  this.transactionaldataload = c.transactionalDataLoad;
  this.masterdataload = c.masterDataLoad;
  this.transactionaldataloaddone = this.masterdataloaddone = false;
  this.type = a.formType;
  this.preShow = this.preshow = a.preShow;
  this.postShow = this.postshow = a.postShow;
  this.onHide = this.onhide = a.onHide;
  this.needAppMenu = this.needappmenu = a.needAppLevelMenu === undefined ? true : (a.needAppLevelMenu && true);
  this.headers = a.globalHeaders && a.globalHeaders.splice(0);
  this.footers = a.globalFooters && a.globalFooters.splice(0);
  this.headers && this.commonHeaderFooterSetup("headers");
  this.footers && this.commonHeaderFooterSetup("footers");
  this.name = "kony.ui.Form"
};
kony.inherits(kony.ui.Form, kony.ui.Form2);
kony.ui.Box = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("HBox"))
  }
  kony.ui.Box.baseConstructor.call(this, d, b, a);
  this.position = a && a.position;
  this.name = "kony.ui.Box";
  this.allboxes = [];
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  if (this.orientation == constants.BOX_LAYOUT_HORIZONTAL) {
    this.wType = "HBox"
  } else {
    this.wType = "VBox"
  }
  var c = a.backgroundimage;
  defineGetter(this, "backgroundimage", function() {
    return c
  });
  defineSetter(this, "backgroundimage", function(e) {
    c = e;
    kony.model.updateView(this, "backgroundimage", e)
  })
};
kony.inherits(kony.ui.Box, kony.ui.ContainerWidget);
kony.ui.Box.prototype.add = function() {
  var a = [].slice.call(arguments);
  boxWidgetExtendAdd.call(this, a)
};
kony.ui.Box.prototype.addAt = function(b, a) {
  boxWidgetExtendAddAt.call(this, b, a)
};
kony.ui.Box.prototype.remove = function(a) {
  boxWidgetExtendRemove.call(this, a)
};
kony.ui.Box.prototype.removeAt = function(a) {
  return boxWidgetExtendRemoveAt.call(this, a)
};
kony.ui.Box.prototype.widgets = function() {
  return kony.ui.ContainerWidget.prototype.widgets.call(this)
};
kony.ui.Box.prototype.updateBoxWeight = function(a) {
  boxWidgetExtendUpdateBoxWeight.call(this, a)
};
kony.ui.Button = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Button"))
  }
  kony.ui.Button.baseConstructor.call(this, c, b, a);
  this.displaytext = (b.displayText === undefined) ? true : (b.displayText && true);
  this.rawBytes = c.rawBytes;
  this.canUpdateUI = true;
  this.wType = "Button";
  this.name = "kony.ui.Button";
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  this.tooltip = a.toolTip;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d;
    this.toolTip = this.tooltip
  } else {
    defineGetter(this, "toolTip", function() {
      return this.tooltip
    });
    defineSetter(this, "toolTip", function(e) {
      this.tooltip = e;
      kony.model.updateView(this, "tooltip", e)
    })
  }
};
kony.inherits(kony.ui.Button, kony.ui.Widget);
kony.ui.Label = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Label"))
  }
  kony.ui.Label.baseConstructor.call(this, d, b, a);
  this.canUpdateUI = true;
  this.wType = "Label";
  this.name = "kony.ui.Label";
  var e = d.text || "";
  defineGetter(this, "text", function() {
    return e
  });
  defineSetter(this, "text", function(g) {
    var f = e;
    e = g;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", g);
      $KU.setLayoutConfig(this, g, f)
    }
  });
  var c = a.textCopyable;
  defineGetter(this, "textCopyable", function() {
    return c
  });
  defineSetter(this, "textCopyable", function(f) {
    c = f;
    $KW[this.wType]["updateView"](this, "textCopyable", f)
  });
  this.linespacing = d.lineSpacing;
  defineGetter(this, "lineSpacing", function() {
    return this.linespacing
  });
  defineSetter(this, "lineSpacing", function(f) {
    this.linespacing = f;
    $KW[this.wType]["updateView"](this, "linespacing", f)
  });
  this.tooltip = a.toolTip || "";
  defineGetter(this, "toolTip", function() {
    return this.tooltip
  });
  defineSetter(this, "toolTip", function(f) {
    $KW[this.wType]["updateView"](this, "tooltip", f)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = e
  }
};
kony.inherits(kony.ui.Label, kony.ui.Widget);
kony.ui.Line = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Line"))
  }
  kony.ui.Line.baseConstructor.call(this, d, b, a);
  this.wType = "Line";
  this.name = "kony.ui.Line";
  var c = b.thickness;
  defineGetter(this, "thickness", function() {
    return c
  });
  defineSetter(this, "thickness", function(e) {
    c = e;
    $KW[this.wType]["updateView"](this, "thickness", e)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.thickness = c
  }
};
kony.inherits(kony.ui.Line, kony.ui.Widget);
kony.ui.Link = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Link"))
  }
  kony.ui.Link.baseConstructor.call(this, c, b, a);
  this.canUpdateUI = true;
  this.wType = "Link";
  this.name = "kony.ui.Link";
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  this.tooltip = a.toolTip;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d;
    this.toolTip = this.tooltip
  } else {
    defineGetter(this, "toolTip", function() {
      return this.tooltip
    });
    defineSetter(this, "toolTip", function(e) {
      this.tooltip = e;
      kony.model.updateView(this, "tooltip", e)
    })
  }
};
kony.inherits(kony.ui.Link, kony.ui.Widget);
kony.ui.Switch = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Switch"))
  }
  kony.ui.Switch.baseConstructor.call(this, c, b, a);
  this.skin = c.skin;
  this.leftsidetext = c.leftSideText;
  this.rightsidetext = c.rightSideText;
  this.wType = "Switch";
  this.name = "kony.ui.Switch";
  this.onslide = c.onSlide || null;
  this.selectedindex = (c.selectedIndex == IndexJL) ? IndexJL : IndexJL + 1;
  this.setGetterSetter()
};
kony.inherits(kony.ui.Switch, kony.ui.Widget);
kony.ui.Switch.prototype.setGetterSetter = function() {
  defineGetter(this, "onSlide", function() {
    return this.onslide
  });
  defineSetter(this, "onSlide", function(a) {
    this.onslide = a
  });
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(b) {
    var a = this.selectedindex;
    this.selectedindex = b;
    $KW[this.wType]["updateView"](this, "selectedindex", b, a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSlide = this.onslide;
    this.selectedIndex = this.selectedindex
  }
};
kony.ui.Phone = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Phone"))
  }
  kony.ui.Phone.baseConstructor.call(this, c, b, a);
  this.canUpdateUI = true;
  this.wType = "Phone";
  this.name = "kony.ui.Phone";
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d
  }
};
kony.inherits(kony.ui.Phone, kony.ui.Widget);
kony.ui.CustomWidget = function(e, b, a) {
  kony.ui.CustomWidget.baseConstructor.call(this, e, b, a);
  var d = function(f, h, g) {
    defineGetter(f, h, function() {
      return g[h]
    });
    defineSetter(f, h, function(n) {
      var i = g[h];
      g[h] = n;
      var l = g.widgetName.split("."),
        m = window;
      for (var k = 0; k < l.length; k++) {
        m = m[l[k]]
      }
      m.modelChange(f, h, g[h])
    })
  };
  this.wType = "TPW";
  for (var c in a) {
    d(this, c, a)
  }
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    for (var c in a) {
      this[c] = a[c]
    }
  }
};
kony.inherits(kony.ui.CustomWidget, kony.ui.Widget);
kony.ui.Alert = function(c, b, a) {
  $KI.window.alert(c, b, a)
};
kony.ui.Camera = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Camera"))
  }
  kony.ui.Camera.baseConstructor.call(this, c, b, a);
  this.wType = "Camera"
};
kony.inherits(kony.ui.Camera, kony.ui.Widget);
kony.ui.Calendar = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Calendar"))
  }
  kony.ui.Calendar.baseConstructor.call(this, d, b, a);
  this.wType = "Calendar";
  this.name = "kony.ui.Calendar";
  this.datecomponents = d.dateComponents || [];
  this.dateformat = this.format = d.dateFormat || constants.CALENDAR_DATE_FORMAT_DEFAULT;
  this.formatteddate = this.date;
  this.startdate = d.validStartDate;
  this.enddate = d.validEndDate;
  this.validstartdate = d.validStartDate;
  this.validenddate = d.validEndDate;
  this.viewtype = this.advview = d.viewType || constants.CALENDAR_VIEW_TYPE_DEFAULT;
  this.viewconfig = d.viewConfig;
  this.calendaricon = this.Image = d.calendarIcon;
  this.onselection = d.onSelection;
  this.titleonpopup = this.title = a.titleOnPopup;
  this.noofmonths = a.noOfMonths || a.noofmonths || 1;
  this.dateeditable = true;
  this.calimgheight = a.calImgHeight;
  defineGetter(this, "calImgHeight", function() {
    return this.calimgheight
  });
  defineSetter(this, "calImgHeight", function(f) {
    this.calimgheight = f
  });
  var e = d.placeholder;
  defineGetter(this, "placeholder", function() {
    return e
  });
  defineSetter(this, "placeholder", function(f) {
    e = f;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "placeholder", f)
  });
  defineGetter(this, "dateEditable", function() {
    return this.dateeditable
  });
  defineSetter(this, "dateEditable", function(f) {
    if (!f == true || !!f == true) {
      this.dateeditable = f;
      this.canUpdateUI && $KW[this.wType]["updateView"](this, "dateeditable", f)
    }
  });
  var c = d.date;
  defineGetter(this, "date", function() {
    $KW.Calendar.updateCalDOMNode(this, false);
    if (this.formatteddate) {
      return this.formatteddate
    } else {
      return null
    }
  });
  defineSetter(this, "date", function(g) {
    this.Date = g;
    if (!g || !g.length) {
      return false
    }
    if (typeof g == "string") {
      var f = $KW.Calendar.__dp.getDat(g, this)
    } else {
      var f = {
        dd: g[0 + IndexJL],
        mm: g[1 + IndexJL],
        yyyy: g[2 + IndexJL]
      }
    }
    if (g && g.length) {
      this.day = f.dd;
      this.month = f.mm;
      this.year = f.yyyy || f.yy;
      if (!this.datecomponents) {
        this.datecomponents = []
      }
      this.datecomponents[IndexJL + 0] = f.dd;
      this.datecomponents[IndexJL + 1] = f.mm;
      this.datecomponents[IndexJL + 2] = f.yyyy || f.yy;
      this.datecomponents[IndexJL + 3] = 0;
      this.datecomponents[IndexJL + 4] = 0;
      this.datecomponents[IndexJL + 5] = 0
    } else {
      this.day = this.month = this.year = null
    }
    this.hour = this.minutes = this.seconds = 0;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "date", g)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.placeholder = e;
    this.date = c
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.Calendar, kony.ui.Widget);
kony.ui.Calendar.prototype.setGetterSetter = function() {
  defineGetter(this, "titleOnPopup", function() {
    return this.title
  });
  defineSetter(this, "titleOnPopup", function(a) {
    this.titleonpopup = this.title = a
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "calendarIcon", function() {
    return this.calendaricon
  });
  defineSetter(this, "calendarIcon", function(a) {
    this.calendaricon = this.Image = a;
    $KW[this.wType]["updateView"](this, "calendaricon", a)
  });
  defineGetter(this, "viewConfig", function() {
    return this.viewconfig
  });
  defineSetter(this, "viewConfig", function(a) {
    this.viewconfig = a;
    $KW[this.wType]["updateView"](this, "viewconfig", a)
  });
  defineGetter(this, "viewType", function() {
    return this.advview
  });
  defineSetter(this, "viewType", function(a) {
    this.advview = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "validEndDate", function() {
    return this.enddate
  });
  defineSetter(this, "validEndDate", function(a) {
    this.enddate = a;
    $KW[this.wType]["updateView"](this, "validenddate", a)
  });
  defineGetter(this, "validStartDate", function() {
    return this.startdate
  });
  defineSetter(this, "validStartDate", function(a) {
    this.startdate = a;
    $KW[this.wType]["updateView"](this, "validstartdate", a)
  });
  defineGetter(this, "dateFormat", function() {
    return this.format
  });
  defineSetter(this, "dateFormat", function(a) {
    this.dateformat = this.format = a;
    $KW[this.wType]["updateView"](this, "dateformat", a);
    $KW[this.wType]["updateView"](this, "placeholder", this.placeholder || this.dateformat || this.format)
  });
  defineGetter(this, "dateComponents", function() {
    if (this.hour === undefined) {
      this.hour = this.datecomponents[3]
    }
    if (this.minutes === undefined) {
      this.minutes = this.datecomponents[4]
    }
    if (this.seconds === undefined) {
      this.seconds = this.datecomponents[5]
    }
    return [this.day, this.month, this.year, this.hour, this.minutes, this.seconds]
  });
  defineSetter(this, "dateComponents", function(a) {
    this.datecomponents = this.date = a.slice(0, 3);
    $KW[this.wType]["updateView"](this, "datecomponents", a)
  });
  defineGetter(this, "formattedDate", function() {
    $KW.Calendar.updateCalDOMNode(this, false);
    return this.formatteddate
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.titleOnPopup = this.title;
    this.onSelection = this.onselection;
    this.calendarIcon = this.calendaricon;
    this.viewConfig = this.viewconfig;
    this.viewType = this.viewtype;
    this.validEndDate = this.enddate;
    this.validStartDate = this.startdate;
    this.dateFormat = this.dateformat;
    this.dateComponents = this.datecomponents;
    this.formattedDate = this.formatteddate;
    this.noOfMonths = this.noofmonths;
    this.dateEditable = this.dateeditable
  } else {
    defineGetter(this, "noOfMonths", function() {
      return this.noofmonths
    });
    defineSetter(this, "noOfMonths", function(a) {
      this.noofmonths = a
    })
  }
};
kony.ui.Calendar.prototype.setEnabled = function(c, b, a) {
  if (typeof c == "boolean") {
    $KW.Widget.setenabled(this, c);
    return false
  } else {
    $KW.Calendar.setEnabled(this, c, 0, b, a)
  }
};
kony.ui.Calendar.prototype.displayedMonth = function(b, a) {
  $KW.Calendar.displayedMonth(this, b, a)
};
kony.ui.Calendar.prototype.navigateToPreviousMonth = function() {
  $KW.Calendar.navigateToPreviousMonth(this)
};
kony.ui.Calendar.prototype.navigateToNextMonth = function() {
  $KW.Calendar.navigateToNextMonth(this)
};
kony.ui.Calendar.prototype.enableRangeOfDates = function(c, a, d, b) {
  $KW.Calendar.setEnabled(this, c, a, d, b)
};
kony.ui.Calendar.prototype.setEnableAll = function() {
  $KW.Calendar.setEnableAll(this)
};
kony.ui.Calendar.prototype.setDatesSkin = function(b, a) {
  $KW.Calendar.setDateSkin(this, b, a, true)
};
kony.ui.Calendar.prototype.clear = function() {
  $KW.Calendar.clear(this)
};
kony.ui.Calendar.prototype.setContext = function(a) {
  $KW.Calendar.setcontext(this, a)
};
kony.ui.DataGrid = function(f, b, a) {
  if (arguments.length < 3) {
    f = b = a = $KU.mergeDefaults(f, $KU.getAllDefaults("DataGrid"))
  }
  kony.ui.DataGrid.baseConstructor.call(this, f, b, a);
  this.focusedindex = this.focuseditem = this.selecteditems = this.selectedindices = null;
  this.headerskin = f.headerSkin;
  this.rownormalskin = f.rowNormalSkin;
  this.rowfocusskin = f.rowFocusSkin;
  this.rowalternateskin = f.rowAlternateSkin;
  this.showcolumnheaders = f.showColumnHeaders;
  this.columnheadersconfig = f.columnHeadersConfig;
  this.onrowselected = f.onRowSelected;
  this.ismultiselect = f.isMultiSelect;
  this.gridlinecolor = a.gridlineColor;
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.selectedcellindex = this.selectedcellitem = null;
  this.enablescrollbar = a.enableScrollBar;
  this.containerheight = a.containerHeight;
  this.containerheightinpixel = a.containerHeightInPixel;
  this.dockingheader = a.dockingHeader;
  defineGetter(this, "enableScrollBar", function() {
    return this.enablescrollbar
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineGetter(this, "containerHeightInPixel", function() {
    return this.containerheightinpixel
  });
  defineGetter(this, "dockingHeader", function() {
    return this.dockingheader
  });
  this.allowcolumnresize = a.allowColumnResize;
  defineGetter(this, "allowColumnResize", function() {
    return this.allowcolumnresize
  });
  var g = f.data;
  defineGetter(this, "data", function() {
    return g
  });
  defineSetter(this, "data", function(i) {
    g = i;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", i)
  });
  this.rowcount = (g && g.length - IndexJL) || 0;
  this.wType = "DataGrid";
  this.name = "kony.ui.DataGrid";
  this.canUpdateUI = true;
  this.selectedcellindex = this.selectedcellitem = null;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = g
  }
  var d = f.columnHeadersConfig;
  if (d) {
    var h = [];
    for (var e = 0; e < d.length; e++) {
      var c = {};
      c.columnid = d[e].columnID;
      c.columntype = d[e].columnType;
      c.columnheadertext = d[e].columnHeaderText;
      c.columnheadertemplate = d[e].columnHeaderTemplate;
      c.columndatatemplate = d[e].columnDataTemplate;
      c.columnwidthinpercentage = d[e].columnWidthInPercentage;
      c.columncontentalignment = d[e].columnContentAlignment;
      c.columnonclick = d[e].columnOnClick;
      h.push(c)
    }
    this.columnheadersconfig = h
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.DataGrid, kony.ui.Widget);
kony.ui.DataGrid.prototype.setGetterSetter = function() {
  defineGetter(this, "rowNormalSkin", function() {
    return this.rownormalskin
  });
  defineSetter(this, "rowNormalSkin", function(b) {
    var a = this.rownormalskin;
    this.rownormalskin = b;
    $KW[this.wType]["updateView"](this, "rownormalskin", b, a)
  });
  defineGetter(this, "headerSkin", function() {
    return this.headerskin
  });
  defineSetter(this, "headerSkin", function(a) {
    this.headerskin = a;
    $KW[this.wType]["updateView"](this, "headerskin", a)
  });
  defineGetter(this, "isMultiSelect", function() {
    return this.ismultiselect
  });
  defineSetter(this, "isMultiSelect", function(a) {
    this.ismultiselect = a;
    $KW[this.wType]["updateView"](this, "ismultiselect", a)
  });
  defineGetter(this, "rowFocusSkin", function() {
    return this.rowfocusskin
  });
  defineSetter(this, "rowFocusSkin", function(a) {
    this.rowfocusskin = a
  });
  defineGetter(this, "rowAlternateSkin", function() {
    return this.rowalternateskin
  });
  defineSetter(this, "rowAlternateSkin", function(a) {
    this.rowalternateskin = a;
    $KW[this.wType]["updateView"](this, "rowalternateskin", a)
  });
  defineGetter(this, "showColumnHeaders", function() {
    return this.showcolumnheaders
  });
  defineSetter(this, "showColumnHeaders", function(a) {
    this.showcolumnheaders = a;
    $KW[this.wType]["updateView"](this, "showcolumnheaders", a)
  });
  defineGetter(this, "columnHeadersConfig", function() {
    return this.columnheadersconfig
  });
  defineSetter(this, "columnHeadersConfig", function(b) {
    if (b) {
      var d = [];
      for (var c = 0; c < b.length; c++) {
        var a = {};
        a.columnid = b[c].columnid || b[c].columnID;
        a.columntype = b[c].columntype || b[c].columnType;
        a.columnheadertext = b[c].columnheadertext || b[c].columnHeaderText;
        a.columnheadertemplate = b[c].columnheadertemplate || b[c].columnHeaderTemplate;
        a.columndatatemplate = b[c].columndatatemplate || b[c].columnDataTemplate;
        a.columnwidthinpercentage = b[c].columnwidthinpercentage || b[c].columnWidthInPercentage;
        a.columncontentalignment = b[c].columncontentalignment || b[c].columnContentAlignment;
        a.columnonclick = b[c].columnonclick || b[c].columnOnClick;
        d.push(a)
      }
      this.columnheadersconfig = d
    }
    $KW[this.wType]["updateView"](this, "columnheadersconfig", b)
  });
  defineGetter(this, "gridlineColor", function() {
    return this.gridlinecolor
  });
  defineSetter(this, "gridlineColor", function(a) {
    this.gridlinecolor = a;
    $KW[this.wType]["updateView"](this, "gridlinecolor", a)
  });
  defineSetter(this, "onRowSelected", function(a) {
    this.onrowselected = a
  });
  defineGetter(this, "selectedIndex", function() {
    return this.focusedindex
  });
  defineGetter(this, "selectedItem", function() {
    return this.focuseditem
  });
  defineGetter(this, "selectedItems", function() {
    return this.selecteditems
  });
  defineGetter(this, "selectedIndices", function() {
    return this.selectedindices
  });
  defineGetter(this, "rowCount", function() {
    return this.rowcount
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.rowNormalSkin = this.rownormalskin;
    this.headerSkin = this.headerskin;
    this.isMultiSelect = this.ismultiselect;
    this.rowFocusSkin = this.rowfocusskin;
    this.rowAlternateSkin = this.rowalternateskin;
    this.showColumnHeaders = this.showcolumnheaders;
    this.columnHeadersConfig = this.columnheadersconfig;
    this.gridlineColor = this.gridlinecolor;
    this.onRowSelected = this.onrowselected;
    this.selectedIndex = this.focusedindex;
    this.selectedItem = this.focuseditem;
    this.selectedItems = this.selecteditems;
    this.selectedIndices = this.selectedindices;
    this.rowCount = this.rowcount;
    this.selectedCellIndex = this.selectedcellindex;
    this.selectedCellItem = this.selectedcellitem
  } else {
    defineGetter(this, "selectedCellIndex", function() {
      return this.selectedcellindex
    });
    defineGetter(this, "selectedCellItem", function() {
      return this.selectedcellitem
    })
  }
};
kony.ui.DataGrid.prototype.applyCellSkin = function(a, b, c) {
  $KW.DataGrid.applyCellSkin(this, a, b, c)
};
kony.ui.DataGrid.prototype.setData = function(a) {
  $KW.DataGrid.setData(this, a)
};
kony.ui.DataGrid.prototype.setDataAt = function(b, a) {
  $KW.DataGrid.setDataAt(this, b, a)
};
kony.ui.DataGrid.prototype.addDataAt = function(b, a) {
  $KW.DataGrid.addDataAt(this, b, a)
};
kony.ui.DataGrid.prototype.addAll = function(a) {
  $KW.DataGrid.addAll(this, a)
};
kony.ui.DataGrid.prototype.removeAt = function(a) {
  $KW.DataGrid.removeAt(this, a)
};
kony.ui.DataGrid.prototype.removeAll = function() {
  $KW.DataGrid.removeAll(this)
};
kony.ui.DataGrid.prototype.selectAllRows = function(a) {
  $KW.DataGrid.selectAll(this, a)
};
kony.ui.DataGrid.prototype.setCellDataAt = function(c, a, b) {
  $KW.DataGrid.setCellData(this, c, a, b)
};
kony.ui.DataGrid.prototype.setHeaderCellDataAt = function(a, b) {
  $KW.DataGrid.setHeaderCellDataAt(this, a, b)
};
kony.ui.CheckBoxGroup = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("CheckBoxGroup"))
  }
  kony.ui.CheckBoxGroup.baseConstructor.call(this, c, b, a);
  this.itemorientation = b.itemOrientation || constants.CHECKBOX_ITEM_ORIENTATION_VERTICAL;
  this.wType = "CheckBoxGroup";
  this.name = "kony.ui.CheckBoxGroup";
  this.selectedkeys = c.selectedKeys || null;
  this.selectedkeyvalues = null;
  this.viewtype = a.viewType || "defaultview";
  if (this.viewtype != "defaultview") {
    this.wType = "CheckBoxGroupViews"
  }
  this.size = a.size || 18;
  this.checkedimage = a.checkedImage || "checkboxselected.png";
  this.uncheckedimage = a.uncheckedImage || "checkboxnormal.png";
  kony.ui.CheckBoxGroup.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.CheckBoxGroup, kony.ui.GroupWidget);
kony.ui.CheckBoxGroup.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedKeys", function() {
    return this.selectedkeys
  });
  defineSetter(this, "selectedKeys", function(a) {
    this.selectedkeys = a;
    $KW[this.wType]["updateView"](this, "selectedkeys", a)
  });
  defineGetter(this, "selectedKeyValues", function() {
    return this.selectedkeyvalues
  });
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "checkedImage", function(a) {
    this.checkedimage = a;
    $KW[this.wType]["updateView"](this, "checkedimage", a)
  });
  defineGetter(this, "checkedImage", function() {
    return this.checkedimage
  });
  defineSetter(this, "uncheckedImage", function(a) {
    this.uncheckedimage = a;
    $KW[this.wType]["updateView"](this, "uncheckedimage", a)
  });
  defineGetter(this, "uncheckedImage", function() {
    return this.uncheckedimage
  });
  defineSetter(this, "dimension", function(a) {
    this.size = a;
    $KW[this.wType]["updateView"](this, "size", a)
  });
  defineGetter(this, "dimension", function() {
    return this.size
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedKeys = this.selectedkeys;
    this.selectedKeyValues = this.selectedkeyvalues;
    this.viewType = this.viewtype;
    this.checkedImage = this.checkedimage;
    this.uncheckedImage = this.unchekedimage
  }
};
kony.ui.ComboBox = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("ComboBox"))
  }
  kony.ui.ComboBox.baseConstructor.call(this, c, b, a);
  this.wType = "ComboBox";
  this.name = "kony.ui.ComboBox";
  this.viewtype = a.viewType;
  this.autosuggest = a.autoSuggest || false;
  this.editableareaskin = a.editableAreaSkin || "";
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.viewType = this.viewtype;
    this.autoSuggest = this.autosuggest;
    this.editableAreaSkin = this.editableareaskin
  } else {
    defineGetter(this, "viewType", function() {
      return this.viewtype
    });
    defineSetter(this, "viewType", function(d) {
      this.viewtype = d;
      $KW[this.wType]["updateView"](this, "viewtype", d)
    });
    defineGetter(this, "autoSuggest", function() {
      return this.autosuggest
    });
    defineSetter(this, "autoSuggest", function(d) {
      this.autosuggest = d;
      $KW[this.wType]["updateView"](this, "autosuggest", d)
    });
    defineGetter(this, "editableAreaSkin", function() {
      return this.editableareaskin
    });
    defineSetter(this, "editableAreaSkin", function(d) {
      this.editableareaskin = d;
      $KW[this.wType]["updateView"](this, "editableareaskin", d)
    })
  }
};
kony.inherits(kony.ui.ComboBox, kony.ui.GroupWidget);
kony.ui.ListBox = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("ListBox"))
  }
  kony.ui.ListBox.baseConstructor.call(this, c, b, a);
  this.wType = "ListBox";
  this.name = "kony.ui.ListBox";
  this.selectedkeys = a.selectedKeys || null;
  this.selectedkeyvalues = null;
  defineGetter(this, "selectedKeys", function() {
    return this.selectedkeys
  });
  defineSetter(this, "selectedKeys", function(d) {
    this.selectedkeys = d;
    $KW[this.wType]["updateView"](this, "selectedkeys", d)
  });
  defineGetter(this, "selectedKeyValues", function() {
    return this.selectedkeyvalues
  });
  this.multiple = a.multiSelect;
  this.multiselectrows = a.multiSelectRows;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.multiSelect = this.multiple;
    this.selectedKeys = this.selectedkeys;
    this.selectedKeyValues = this.selectedkeyvalues;
    this.multiSelectRows = this.multiselectrows
  } else {
    defineGetter(this, "multiSelectRows", function() {
      return this.multiselectrows
    });
    defineSetter(this, "multiSelectRows", function(d) {
      this.multiselectrows = d;
      $KW[this.wType]["updateView"](this, "multiselectrows", d)
    })
  }
};
kony.inherits(kony.ui.ListBox, kony.ui.GroupWidget);
kony.ui.RadioButtonGroup = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("RadioButtonGroup"))
  }
  kony.ui.RadioButtonGroup.baseConstructor.call(this, c, b, a);
  this.itemorientation = b.itemOrientation || constants.RADIOGROUP_ITEM_ORIENTATION_VERTICAL;
  this.wType = "RadioButtonGroup";
  this.name = "kony.ui.RadioButtonGroup";
  this.viewtype = a.viewType || "defaultview";
  this.size = a.size || 18;
  this.checkedimage = a.checkedImage || "radiobuttonselected.png";
  this.uncheckedimage = a.uncheckedImage || "radiobuttonnormal.png";
  kony.ui.RadioButtonGroup.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.RadioButtonGroup, kony.ui.GroupWidget);
kony.ui.RadioButtonGroup.prototype.setGetterSetter = function() {
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "checkedImage", function(a) {
    this.checkedimage = a;
    $KW[this.wType]["updateView"](this, "checkedimage", a)
  });
  defineGetter(this, "checkedImage", function() {
    return this.checkedimage
  });
  defineSetter(this, "uncheckedImage", function(a) {
    this.uncheckedimage = a;
    $KW[this.wType]["updateView"](this, "uncheckedimage", a)
  });
  defineGetter(this, "uncheckedImage", function() {
    return this.uncheckedimage
  });
  defineSetter(this, "dimension", function(a) {
    this.size = a;
    $KW[this.wType]["updateView"](this, "size", a)
  });
  defineGetter(this, "dimension", function() {
    return this.size
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.viewType = this.viewtype;
    this.checkedImage = this.checkedimage;
    this.uncheckedImage = this.unchekedimage
  }
};
kony.ui.PickerView = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("PickerView"))
  }
  kony.ui.PickerView.baseConstructor.call(this, c, b, a);
  this.wType = "PickerView";
  this.name = "kony.ui.PickerView";
  this.onselect = c.onSelect;
  this.setGetterSetter()
};
kony.inherits(kony.ui.PickerView, kony.ui.CheckBoxGroup);
kony.ui.PickerView.prototype.setComponentData = function(b, a) {
  $KW.PickerView.setcomponentdata(this, b, a)
};
kony.ui.PickerView.prototype.setSelectedKeyInComponent = function(a, b) {
  $KW.PickerView.setselectedkeyincomponent(this, a, b)
};
kony.ui.PickerView.prototype.setGetterSetter = function() {
  defineGetter(this, "onSelect", function() {
    return this.onselect
  });
  defineSetter(this, "onSelect", function(a) {
    this.onselect = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSelect = this.onselect
  }
};
kony.ui.Image2 = function(d, c, b) {
  if (arguments.length < 3) {
    d = c = b = $KU.mergeDefaults(d, $KU.getAllDefaults("Image2"))
  }
  kony.ui.Image2.baseConstructor.call(this, d, c, b);
  this.ondownloadcomplete = d.onDownloadComplete;
  this.imageWhileDownloading = this.imagewhiledownloading = d.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = d.imageWhenFailed;
  this.referencewidth = c.referenceWidth;
  this.referenceheight = c.referenceHeight;
  this.imagescalemode = (typeof c.imageScaleMode == "undefined") ? constants.IMAGE_SCALE_MODE_MAINTAIN_ASPECT_RATIO : c.imageScaleMode;
  this.canUpdateUI = true;
  this.skin = d.skin;
  this.wType = "Image";
  this.name = "kony.ui.Image2";
  var e = d.src;
  if (e) {
    this.srcType = 1
  }
  defineGetter(this, "src", function() {
    return e
  });
  defineSetter(this, "src", function(g) {
    this.srctype = 1;
    var f = this.src;
    e = g;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "src", g, f)
  });
  var a = null;
  defineGetter(this, "base64", function() {
    return a
  });
  defineSetter(this, "base64", function(f) {
    this.srcType = 2;
    a = f;
    $KW[this.wType]["updateView"](this, "base64", f)
  });
  this.tooltip = b.toolTip;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.base64 = a;
    this.src = e;
    this.toolTip = this.tooltip
  } else {
    defineGetter(this, "toolTip", function() {
      return this.tooltip
    });
    defineSetter(this, "toolTip", function(f) {
      this.tooltip = f;
      kony.model.updateView(this, "tooltip", f)
    })
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.Image2, kony.ui.Widget);
kony.ui.Image2.prototype.setGetterSetter = function() {
  defineGetter(this, "imageScaleMode", function() {
    return this.imagescalemode
  });
  defineSetter(this, "imageScaleMode", function(a) {
    this.imagescalemode = a;
    $KW[this.wType]["updateView"](this, "imagescalemode", a)
  });
  defineGetter(this, "referenceHeight", function() {
    return this.referenceheight
  });
  defineSetter(this, "referenceHeight", function(a) {
    this.referenceheight = a;
    $KW[this.wType]["updateView"](this, "referenceheight", a)
  });
  defineGetter(this, "referenceWidth", function() {
    return this.referencewidth
  });
  defineSetter(this, "referenceWidth", function(a) {
    this.referencewidth = a;
    $KW[this.wType]["updateView"](this, "referencewidth", a)
  });
  defineGetter(this, "onDownloadComplete", function() {
    return this.ondownloadcomplete
  });
  defineSetter(this, "onDownloadComplete", function(a) {
    this.ondownloadcomplete = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.referenceWidth = this.referencewidth;
    this.referenceHeight = this.referenceheight;
    this.imageScaleMode = this.imagescalemode;
    this.onDownloadComplete = this.ondownloadcomplete
  }
};
kony.ui.Image = function(c, b, a) {
  kony.ui.Image.baseConstructor.call(this, c, b, a);
  this.scaleMode = this.scalemode = a.scaleMode;
  this.heightwidth = a.heightWidth;
  this.imageWhileDownloading = this.imagewhiledownloading = a.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = a.imageWhenFailed;
  this.skin = c.skin;
  this.name = "kony.ui.Image"
};
kony.inherits(kony.ui.Image, kony.ui.Image2);
kony.ui.ImageGallery2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("ImageGallery2"))
  }
  kony.ui.ImageGallery2.baseConstructor.call(this, c, b, a);
  this.imageWhileDownloading = this.imagewhiledownloading = c.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = c.imageWhenFailed;
  this.spaceBetweenImages = this.spacebetweenimages = c.spaceBetweenImages;
  this.selectedindex = c.selectedIndex || null;
  this.onselection = c.onSelection;
  this.referencewidth = b.referenceWidth;
  this.referenceheight = b.referenceHeight;
  this.imagescalemode = b.imageScaleMode;
  this.wType = "IGallery";
  this.name = "kony.ui.ImageGallery2";
  this.canUpdateUI = true;
  this.selecteditem = null;
  var d = c.data;
  if (d) {
    this.masterdata = d[0];
    this.key = d[1]
  }
  defineGetter(this, "data", function() {
    return d
  });
  defineSetter(this, "data", function(e) {
    d = e;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", e)
  });
  this.viewtype = a.viewType;
  this.noofrowsperpage = a.noofRowsPerPage || 1;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = d;
    this.noofRowsPerPage = this.noofrowsperpage;
    this.viewType = this.viewtype
  } else {
    defineGetter(this, "viewType", function() {
      return this.viewtype
    });
    defineSetter(this, "viewType", function(e) {
      this.viewtype = e;
      $KW[this.wType]["updateView"](this, "viewtype", e)
    });
    defineGetter(this, "noofRowsPerPage", function() {
      return this.noofrowsperpage
    });
    defineSetter(this, "noofRowsPerPage", function(e) {
      this.noofrowsperpage = e;
      $KW[this.wType]["updateView"](this, "noofrowsperpage", e)
    })
  }
  kony.ui.ImageGallery2.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.ImageGallery2, kony.ui.Widget);
kony.ui.ImageGallery2.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(a) {
    this.selectedindex = a;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "referenceWidth", function() {
    return this.referencewidth
  });
  defineSetter(this, "referenceWidth", function(a) {
    this.referencewidth = a;
    $KW[this.wType]["updateView"](this, "referencewidth", a)
  });
  defineGetter(this, "referenceHeight", function() {
    return this.referenceheight
  });
  defineSetter(this, "referenceHeight", function(a) {
    this.referenceheight = a;
    $KW[this.wType]["updateView"](this, "referenceheight", a)
  });
  defineGetter(this, "imageScaleMode", function() {
    return this.imagescalemode
  });
  defineSetter(this, "imageScaleMode", function(a) {
    this.imagescalemode = a;
    $KW[this.wType]["updateView"](this, "imagescalemode", a)
  });
  defineGetter(this, "selectedItem", function() {
    return this.selecteditem
  });
  defineSetter(this, "selectedItem", function() {});
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedIndex = this.selectedindex;
    this.selectedItem = this.selecteditem;
    this.onSelection = this.onselection;
    this.referenceWidth = this.referencewidth;
    this.referenceHeight = this.referenceheight;
    this.imageScaleMode = this.imagescalemode
  }
};
kony.ui.ImageGallery2.prototype.addAll = function(b, a) {
  $KW.IGallery.addAll(this, b, a)
};
kony.ui.ImageGallery2.prototype.setData = function(b, a) {
  $KW.IGallery.setData(this, b, a)
};
kony.ui.ImageGallery2.prototype.setDataAt = function(b, a) {
  $KW.IGallery.setDataAt(this, b, a)
};
kony.ui.ImageGallery2.prototype.addDataAt = function(b, a) {
  $KW.IGallery.addDataAt(this, b, a)
};
kony.ui.ImageGallery2.prototype.removeAt = function(a) {
  $KW.IGallery.removeAt(this, a)
};
kony.ui.ImageGallery2.prototype.removeAll = function() {
  $KW.IGallery.removeAll(this)
};
kony.ui.ImageGallery = function(c, b, a) {
  kony.ui.ImageGallery.baseConstructor.call(this, c, b, a);
  this.itemsperrow = a.itemsPerRow;
  this.heightwidth = a.heightWidth;
  this.name = "kony.ui.ImageGallery";
  this.focuseditem = null;
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  this.focusedindex = c.focusedIndex || null;
  this.setGetterSetter()
};
kony.ui.ImageGallery.prototype.setGetterSetter = function() {
  defineGetter(this, "focusedIndex", function() {
    return this.focusedindex
  });
  defineSetter(this, "focusedIndex", function(a) {
    this.focusedindex = a;
    $KW[this.wType]["updateView"](this, "focusedindex", a)
  });
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.focusedIndex = this.focusedindex;
    this.focusedItem = this.focuseditem
  }
};
kony.inherits(kony.ui.ImageGallery, kony.ui.ImageGallery2);
kony.ui.HorizontalImageStrip2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("HorizontalImageStrip2"))
  }
  kony.ui.HorizontalImageStrip2.baseConstructor.call(this, c, b, a);
  this.imageWhileDownloading = this.imagewhiledownloading = c.imageWhileDownloading;
  this.imageWhenFailed = this.imagewhenfailed = c.imageWhenFailed;
  this.spaceBetweenImages = this.spacebetweenimages = c.spaceBetweenImages;
  this.showArrows = this.showarrows = c.showArrows || false;
  this.showScrollbars = this.showscrollbars = c.showScrollbars || false;
  this.viewtype = c.viewType || constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW;
  this.referencewidth = b.referenceWidth;
  this.referenceheight = b.referenceHeight;
  this.imagescalemode = b.imageScaleMode;
  this.selectedindex = c.selectedIndex;
  this.selecteditem = null;
  var d = c.arrowConfig || null;
  if (d) {
    this.leftarrowimage = d.leftArrowImage || "";
    this.rightarrowimage = d.rightArrowImage || ""
  }
  this.wType = "HStrip";
  this.name = "kony.ui.HorizontalImageStrip2";
  this.canUpdateUI = true;
  this.onselection = c.onSelection;
  var e = c.data;
  if (e) {
    this.masterdata = e[0];
    this.key = e[1]
  }
  defineGetter(this, "data", function() {
    return e
  });
  defineSetter(this, "data", function(f) {
    e = f;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", f)
  });
  this.viewconfig = c.viewConfig || null;
  this.scrollbounce = this.viewconfig && this.viewconfig.stripviewConfig && this.viewconfig.stripviewConfig.enableScrollBounce;
  kony.ui.HorizontalImageStrip2.prototype.setGetterSetter.call(this);
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = e
  }
};
kony.inherits(kony.ui.HorizontalImageStrip2, kony.ui.Widget);
kony.ui.HorizontalImageStrip2.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(a) {
    this.selectedindex = a;
    $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "selectedItem", function() {
    return this.selecteditem
  });
  defineSetter(this, "selectedItem", function() {});
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "viewConfig", function() {
    return this.viewconfig
  });
  defineSetter(this, "viewConfig", function(a) {
    this.viewconfig = a;
    $KW[this.wType]["updateView"](this, "viewconfig", a)
  });
  defineGetter(this, "referenceWidth", function() {
    return this.referencewidth
  });
  defineSetter(this, "referenceWidth", function(a) {
    this.referencewidth = a;
    $KW[this.wType]["updateView"](this, "referencewidth", a)
  });
  defineGetter(this, "referenceHeight", function() {
    return this.referenceheight
  });
  defineSetter(this, "referenceHeight", function(a) {
    this.referenceheight = a;
    $KW[this.wType]["updateView"](this, "referenceheight", a)
  });
  defineGetter(this, "imageScaleMode", function() {
    return this.imagescalemode
  });
  defineSetter(this, "imageScaleMode", function(a) {
    this.imagescalemode = a;
    $KW[this.wType]["updateView"](this, "imagescalemode", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedIndex = this.selectedindex;
    this.selectedItem = this.selecteditem;
    this.onSelection = this.onselection;
    this.viewType = this.viewtype;
    this.referenceWidth = this.referencewidth;
    this.referenceHeight = this.referenceheight;
    this.imageScaleMode = this.imagescalemode
  }
};
kony.ui.HorizontalImageStrip2.prototype.addAll = function(b, a) {
  $KW.HStrip.addAll(this, b, a)
};
kony.ui.HorizontalImageStrip2.prototype.removeAt = function(a) {
  $KW.HStrip.removeAt(this, a)
};
kony.ui.HorizontalImageStrip2.prototype.removeAll = function() {
  $KW.HStrip.removeAll(this)
};
kony.ui.HorizontalImageStrip2.prototype.setData = function(b, a) {
  $KW.HStrip.setData(this, b, a)
};
kony.ui.HorizontalImageStrip2.prototype.setDataAt = function(b, a) {
  $KW.HStrip.setDataAt(this, b, a)
};
kony.ui.HorizontalImageStrip2.prototype.addDataAt = function(b, a) {
  $KW.HStrip.addDataAt(this, b, a)
};
kony.ui.HorizontalImageStrip = function(c, b, a) {
  kony.ui.HorizontalImageStrip.baseConstructor.call(this, c, b, a);
  this.viewtype = this.view = a.view || constants.HORIZONTAL_IMAGESTRIP_VIEW_TYPE_STRIPVIEW;
  this.showArrows = this.showarrows = a.showArrows;
  this.scrollBounce = this.scrollbounce = a.scrollBounce;
  this.heightWidth = this.heightwidth = a.heightWidth;
  this.imageWhenFailed = this.imagewhenfailed = a.imageWhenFailed;
  this.imageWhileDownloading = this.imagewhiledownloading = a.imageWhileDownloading;
  this.spaceBetweenImages = this.spacebetweenimages = a.spaceBetweenImages;
  this.name = "kony.ui.HorizontalImageStrip";
  this.focuseditem = null;
  this.focusedindex = c.focusedIndex || null;
  this.setGetterSetter()
};
kony.inherits(kony.ui.HorizontalImageStrip, kony.ui.HorizontalImageStrip2);
kony.ui.HorizontalImageStrip.prototype.setGetterSetter = function() {
  defineGetter(this, "focusedIndex", function() {
    return this.focusedindex
  });
  defineSetter(this, "focusedIndex", function(a) {
    this.focusedindex = a;
    $KW[this.wType]["updateView"](this, "focusedindex", a)
  });
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.focusedIndex = this.focusedindex;
    this.focusedItem = this.focuseditem
  }
};
kony.ui.Map = function(d, c, b) {
  if (arguments.length < 3) {
    d = c = b = $KU.mergeDefaults(d, $KU.getAllDefaults("Map"))
  }
  kony.ui.Map.baseConstructor.call(this, d, c, b);
  this.provider = d.provider || constants.MAP_PROVIDER_GOOGLE;
  this.mapKey = d.mapKey;
  this.mapClientId = d.clientId;
  this.navControlsImageConfig = b.navControlsImageConfig;
  this.mapSource = this.mapsrc = b.mapSource;
  this.screenLevelWidget = d.screenLevelWidget;
  this.defaultpinimage = d.defaultPinImage;
  this.locationdata = d.locationData;
  this.zoomlevel = b.zoomLevel;
  this.markers = [];
  this.displaymaptypecontrols = true;
  this.onpinclick = d.onPinClick;
  this.onselection = d.onSelection;
  this.containerheight = c.containerHeight;
  this.containerheightreference = c.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(f) {
    this.containerheight = f;
    kony.model.updateView(this, "containerheight", f)
  });
  defineGetter(this, "displayMapTypeControls", function() {
    return this.displaymaptypecontrols
  });
  defineSetter(this, "displayMapTypeControls", function(f) {
    this.displaymaptypecontrols = f
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(f) {
    this.containerheightreference = f;
    kony.model.updateView(this, "containerheightreference", f)
  });
  this.wType = "Map";
  this.name = "kony.ui.Map";
  var a = b.address;
  defineGetter(this, "address", function() {
    return a
  });
  defineSetter(this, "address", function(f) {
    a = f;
    $KW[this.wType]["updateView"](this, "address", f)
  });
  this.calloutPostion = d.calloutPostion;
  this.widgetdatamapforcallout = d.widgetDataMapForCallout;
  defineGetter(this, "widgetDataMapForCallout", function() {
    return this.widgetdatamapforcallout
  });
  defineSetter(this, "widgetDataMapForCallout", function(f) {
    this.widgetdatamapforcallout = f
  });
  this.callouttemplate = d.calloutTemplate;
  this.calloutwidth = d.calloutWidth;
  defineGetter(this, "calloutTemplate", function() {
    return this.callouttemplate
  });
  defineSetter(this, "calloutTemplate", function(f) {
    this.callouttemplate = f
  });
  defineGetter(this, "calloutWidth", function() {
    return this.calloutwidth
  });
  defineSetter(this, "calloutWidth", function(f) {
    this.calloutwidth = f;
    $KW.Map.setUpInteractiveCanvasMap()
  });
  var e = b.mode || constants.MAP_VIEW_MODE_NORMAL;
  defineGetter(this, "mode", function() {
    return e
  });
  defineSetter(this, "mode", function(f) {
    e = f;
    $KW[this.wType]["updateView"](this, "mode", f)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.address = a;
    this.mode = e
  }
  this.setGetterSetter();
  d.locationData && $KW[this.wType]["updateView"](this, "locationdata", d.locationData)
};
kony.inherits(kony.ui.Map, kony.ui.Widget);
kony.ui.Map.prototype.setGetterSetter = function() {
  defineGetter(this, "zoomLevel", function() {
    return this.zoomlevel
  });
  defineSetter(this, "zoomLevel", function(a) {
    this.zoomlevel = a;
    $KW[this.wType]["updateView"](this, "zoomlevel", a)
  });
  defineGetter(this, "locationData", function() {
    return this.locationdata
  });
  defineSetter(this, "locationData", function(a) {
    this.locationdata = a;
    $KW[this.wType]["updateView"](this, "locationdata", a)
  });
  defineGetter(this, "defaultPinImage", function() {
    return this.defaultpinimage
  });
  defineSetter(this, "defaultPinImage", function(a) {
    this.defaultpinimage = a;
    $KW[this.wType]["updateView"](this, "defaultpinimage", a)
  });
  defineGetter(this, "onPinClick", function() {
    return this.onpinclick
  });
  defineSetter(this, "onPinClick", function(a) {
    this.onpinclick = a
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.onSelection = this.onselection;
    this.onPinClick = this.onpinclick;
    this.defaultPinImage = this.defaultpinimage;
    this.locationData = this.locationdata;
    this.zoomLevel = this.zoomlevel
  }
};
kony.ui.Map.prototype.navigateTo = function(b, a) {
  $KW.Map.navigateTo(this, b, a)
};
kony.ui.Map.prototype.navigateToLocation = function(c, a, b) {
  $KW.Map.navigateToLocation(this, c, a, b)
};
kony.ui.Map.prototype.routeLocations = function(c, d, a, b) {
  $KW.Map.routeLocations(this, c, d, a, b)
};
kony.ui.Map.prototype.dismissCallout = function(b, a) {
  $KW.Map.dismissCallout(this, b, a)
};
kony.ui.Browser = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Browser"))
  }
  kony.ui.Browser.baseConstructor.call(this, c, b, a);
  this.onSuccess = c.onSuccess;
  this.onFailure = c.onFailure;
  this.screenLevelWidget = c.screenLevelWidget;
  this.enableZoom = c.enableZoom;
  this.detectTelNumber = c.detectTelNumber;
  this.readconfig = function(d) {
    this.url = d.URL;
    this.method = d.requestMethod;
    this.data = d.requestData
  };
  c.requestURLConfig && this.readconfig(c.requestURLConfig);
  this.requesturlconfig = c.requestURLConfig;
  this.htmlstring = c.htmlString;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  this.wType = "Browser";
  this.name = "kony.ui.Browser";
  this.setGetterSetter()
};
kony.inherits(kony.ui.Browser, kony.ui.Widget);
kony.ui.Browser.prototype.setGetterSetter = function() {
  defineGetter(this, "htmlString", function() {
    return this.htmlstring
  });
  defineSetter(this, "htmlString", function(a) {
    this.htmlstring = a;
    $KW[this.wType]["updateView"](this, "htmlstring", a)
  });
  defineGetter(this, "requestURLConfig", function() {
    return this.requesturlconfig
  });
  defineSetter(this, "requestURLConfig", function(a) {
    this.requesturlconfig = a;
    this.readconfig(a);
    $KW[this.wType]["updateView"](this, "requesturlconfig", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.htmlString = this.htmlstring;
    this.requestURLConfig = this.requesturlconfig
  }
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  })
};
kony.ui.Browser.prototype.reload = kony.ui.Browser.prototype.goForward = kony.ui.Browser.prototype.goBack = kony.ui.Browser.prototype.canGoBack = kony.ui.Browser.prototype.canGoForward = kony.ui.Browser.prototype.clearHistory = function() {
  console.warn("Browser Methods are not supported in SPA")
};
kony.ui.Browser.prototype.evaluateJavaScript = function(b) {
  console.log("executing javascript in " + this.id + " window handler");
  var c = document.createElement("script");
  c.innerHTML = this.id + "Err = null; try{" + b + "}catch(e){" + this.id + "Err=e}";
  if ($KG["webView" + this.id] && !$KG["webView" + this.id].closed) {
    var a = document.createElement("a");
    a.href = this.url;
    if (window.location.origin != a.origin) {
      throw {
        errorCode: "104",
        name: "Not supported Error",
        message: "Not supported Error"
      }
    }
    $KG["webView" + this.id].document.head.appendChild(c);
    if ($KG["webView" + this.id][this.id + "Err"] != null) {
      throw {
        errorCode: "106",
        name: "Unknown Error",
        message: "Unknown Error"
      }
    }
  } else {
    document.head.appendChild(c);
    if (window[this.id + "Err"] != null) {
      throw {
        errorCode: "106",
        name: "Unknown Error",
        message: "Unknown Error"
      }
    }
  }
  return null
};
kony.ui.Browser.prototype.evaluateJavaScriptAsync = function(a) {
  return null
};
kony.ui.RichText = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("RichText"))
  }
  kony.ui.RichText.baseConstructor.call(this, c, b, a);
  var d = c.text || "";
  defineGetter(this, "text", function() {
    return d
  });
  defineSetter(this, "text", function(f) {
    var e = d;
    d = f;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", f);
      $KU.setLayoutConfig(this, f, e)
    }
  });
  this.linkskin = c.linkSkin;
  this.linkfocusskin = a.linkFocusSkin;
  defineGetter(this, "linkSkin", function() {
    return this.linkskin
  });
  defineSetter(this, "linkSkin", function(e) {
    this.linkskin = e;
    $KW[this.wType]["updateView"](this, "linkskin", e)
  });
  defineGetter(this, "linkFocusSkin", function() {
    return this.linkfocusskin
  });
  defineSetter(this, "linkFocusSkin", function(e) {
    this.linkfocusskin = e;
    $KW[this.wType]["updateView"](this, "linkfocusskin", e)
  });
  this.canUpdateUI = true;
  this.wType = "RichText";
  this.name = "kony.ui.RichText";
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = d
  }
};
kony.inherits(kony.ui.RichText, kony.ui.Widget);
kony.ui.ScrollBox = function(d, c, b) {
  if (arguments.length < 3) {
    d = c = b = $KU.mergeDefaults(d, $KU.getAllDefaults("ScrollBox"))
  }
  kony.ui.ScrollBox.baseConstructor.call(this, d, c, b);
  this.totalWt = 0;
  this.position = d.position || constants.BOX_POSITION_AS_NORMAL;
  this.enableScrollByPage = d.enableScrollByPage || false;
  this.scrollDirection = this.scrolldirection = d.scrollDirection || constants.SCROLLBOX_SCROLL_HORIZONTAL;
  this.showscrollbars = d.showScrollbars === undefined ? true : d.showScrollbars;
  this.scrollbar = this.showscrollbars ? "scrollbar" : "none";
  this.containerheight = c.containerHeight;
  this.containerheightreference = c.containerHeightReference;
  this.wType = "ScrollBox";
  this.name = "kony.ui.ScrollBox";
  var a = (b.scrollArrowConfig && (b.scrollArrowConfig[0] || b.scrollArrowConfig[1] || b.scrollArrowConfig[2] || b.scrollArrowConfig[3])) ? b.scrollArrowConfig : null;
  if (a) {
    this.scrollbar = "arrows";
    if (a.length >= 4) {
      this.leftarrowimage = a[0];
      this.toparrowimage = a[1];
      this.rightarrowimage = a[2];
      this.bottomarrowimage = a[3]
    }
  }
  this.scrollingevents = d.scrollingEvents || null;
  if (this.scrollingevents) {
    this.scrollingevents.onpush = d.scrollingEvents.onPush;
    this.scrollingevents.onpull = d.scrollingEvents.onPull;
    this.scrollingevents.onreachingbeginning = d.scrollingEvents.onReachingBegining;
    this.scrollingevents.onreachingend = d.scrollingEvents.onReachingEnd
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.ScrollBox, kony.ui.Box);
kony.ui.ScrollBox.prototype.setGetterSetter = function() {
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    $KW[this.wType]["updateView"](this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    $KW[this.wType]["updateView"](this, "containerheightreference", a)
  });
  defineGetter(this, "showScrollbars", function() {
    return this.showscrollbars
  });
  defineSetter(this, "showScrollbars", function(a) {
    this.showscrollbars = a;
    $KW[this.wType]["updateView"](this, "showscrollbars", a)
  });
  defineGetter(this, "scrollingEvents", function() {
    return this.scrollingevents
  });
  defineSetter(this, "scrollingEvents", function(a) {
    this.scrollingevents = a;
    if (a) {
      this.scrollingevents.onpush = a.onPush;
      this.scrollingevents.onpull = a.onPull;
      this.scrollingevents.onreachingbeginning = a.onReachingBegining;
      this.scrollingevents.onreachingend = a.onReachingEnd
    }
  });
  this.scrollingevents = this.scrollingevents || {};
  this.scrollingevents.scrollObj = this;
  if (this.scrollingevents) {
    defineGetter(this.scrollingEvents, "onPush", function() {
      return this.onpush
    });
    defineSetter(this.scrollingEvents, "onPush", function(a) {
      this.onpush = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onpush", a)
    });
    defineGetter(this.scrollingEvents, "onPull", function() {
      return this.onpull
    });
    defineSetter(this.scrollingEvents, "onPull", function(a) {
      this.onpull = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onpull", a)
    });
    defineGetter(this.scrollingEvents, "onReachingBegining", function() {
      return this.onreachingbeginning
    });
    defineSetter(this.scrollingEvents, "onReachingBegining", function(a) {
      this.onreachingbeginning = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onreachingbeginning", a)
    });
    defineGetter(this.scrollingEvents, "onReachingEnd", function() {
      return this.onreachingend
    });
    defineSetter(this.scrollingEvents, "onReachingEnd", function(a) {
      this.onreachingend = a;
      $KW[this.scrollObj.wType]["updateView"](this.scrollObj, "onreachingend", a)
    })
  }
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.containerheight = this.containerheight;
    this.containerheightreference = this.containerheightreference;
    this.showScrollbars = this.showscrollbars;
    this.scrollingEvents = this.scrollingevents;
    if (this.scrollingEvents) {
      this.scrollingEvents.onPush = this.scrollingevents.onpush;
      this.scrollingEvents.onPull = this.scrollingevents.onpull;
      this.scrollingEvents.onReachingBeginning = this.scrollingevents.onreachingbegining;
      this.scrollingEvents.onReachingEnd = this.scrollingevents.onreachingend
    }
  }
};
kony.ui.ScrollBox.prototype.scrollToBeginning = function() {
  $KW.ScrollBox.scrollToBeginning(this)
};
kony.ui.ScrollBox.prototype.scrollToEnd = function() {
  $KW.ScrollBox.scrollToEnd(this)
};
kony.ui.FlexContainer = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("FlexContainer"))
  }
  this.name = "kony.ui.FlexContainer";
  kony.ui.FlexContainer.baseConstructor.call(this, c, b, a);
  this.wType = "FlexContainer";
  this.allboxes = [];
  this.autogrowMode = c.autogrowMode;
  this.autogrowHeight = false;
  this.canMeasureChildrenHeight = true;
  this.layouttype = c.layoutType || kony.flex.FREE_FORM;
  defineGetter(this, "layoutType", function() {
    return this.layouttype
  });
  this.clipbounds = (typeof c.clipBounds == "undefined") ? true : c.clipBounds;
  defineGetter(this, "clipBounds", function() {
    return this.clipbounds
  });
  defineSetter(this, "clipBounds", function(d) {
    this.clipbounds = d;
    $KW[this.wType]["updateView"](this, "clipbounds", d)
  });
  this.dolayout = c.doLayout;
  defineGetter(this, "doLayout", function() {
    return this.dolayout
  });
  defineSetter(this, "doLayout", function(d) {
    this.dolayout = d
  })
};
kony.inherits(kony.ui.FlexContainer, kony.ui.ContainerWidget);
kony.ui.FlexContainer.prototype.add = function() {
  var a = [].slice.call(arguments);
  boxWidgetExtendAdd.call(this, a)
};
kony.ui.FlexContainer.prototype.addAt = function(b, a) {
  boxWidgetExtendAddAt.call(this, b, a)
};
kony.ui.FlexContainer.prototype.addAll = function(b, a) {
  boxWidgetExtendAddAt.call(this, b, a)
};
kony.ui.FlexContainer.prototype.remove = function(a) {
  boxWidgetExtendRemove.call(this, a)
};
kony.ui.FlexContainer.prototype.removeAt = function(a) {
  return boxWidgetExtendRemoveAt.call(this, a)
};
kony.ui.FlexContainer.prototype.removeAll = function() {
  boxWidgetExtendRemoveAll.call(this)
};
kony.ui.FlexContainer.prototype.widgets = function() {
  return kony.ui.ContainerWidget.prototype.widgets.call(this)
};
kony.ui.FlexContainer.prototype.forceLayout = function() {
  $KW.FlexContainer.forceLayout(this)
};
kony.ui.FlexContainer.prototype.setDefaultUnit = function(a) {
  this.defaultunit = a
};
kony.ui.FlexScrollContainer = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("FlexScrollContainer"))
  }
  this.name = "kony.ui.FlexScrollContainer";
  kony.ui.FlexScrollContainer.baseConstructor.call(this, c, b, a);
  this.wType = "FlexScrollContainer";
  this.allboxes = [];
  this.enablescrolling = (typeof c.enableScrolling == "undefined") ? true : c.enableScrolling;
  defineGetter(this, "enableScrolling", function() {
    return this.enablescrolling
  });
  defineSetter(this, "enableScrolling", function(d) {
    this.enablescrolling = d;
    $KW[this.wType]["updateView"](this, "enableScrolling", d)
  });
  this.scrolldirection = (typeof c.scrollDirection == "undefined") ? kony.flex.SCROLL_HORIZONTAL : c.scrollDirection;
  defineGetter(this, "scrollDirection", function() {
    return this.scrolldirection
  });
  defineSetter(this, "scrollDirection", function(d) {
    this.scrolldirection = d;
    $KW[this.wType]["updateView"](this, "scrollDirection", d)
  });
  this.contentoffset = c.contentOffset;
  defineGetter(this, "contentOffset", function() {
    return this.contentoffset
  });
  defineSetter(this, "contentOffset", function(d) {
    this.contentoffset = d;
    $KW.FlexScrollContainer.updateView(this, "contentOffset", d)
  });
  this.contentsize = c.contentSize;
  defineGetter(this, "contentSize", function() {
    return this.contentsize
  });
  defineSetter(this, "contentSize", function(d) {
    this.contentsize = d
  });
  defineGetter(this, "contentOffsetMeasured", function() {
    return $KW.FlexScrollContainer.getContentOffsetMeasured(this)
  });
  defineSetter(this, "contentOffsetMeasured", function(d) {});
  this.contentsize = c.contentSize;
  defineGetter(this, "contentSizeMeasured", function() {
    return $KW.FlexScrollContainer.getContentSizeMeasured(this)
  });
  defineSetter(this, "contentSizeMeasured", function(d) {});
  this.bounce = (typeof c.bounces == "undefined") ? true : c.bounces;
  defineGetter(this, "bounces", function() {
    return this.bounce
  });
  defineSetter(this, "bounces", function(d) {
    this.bounce = d;
    $KW[this.wType]["updateView"](this, "bounces", d)
  });
  this.allowhorizontalbounce = (typeof c.allowHorizontalBounce == "undefined") ? true : c.allowHorizontalBounce;
  defineGetter(this, "allowHorizontalBounce", function() {
    return this.allowhorizontalbounce
  });
  defineSetter(this, "allowHorizontalBounce", function(d) {
    this.allowhorizontalbounce = d;
    $KW[this.wType]["updateView"](this, "allowHorizontalBounce", d)
  });
  this.allowverticalbounce = (typeof c.allowVerticalBounce == "undefined") ? true : c.allowVerticalBounce;
  defineGetter(this, "allowVerticalBounce", function() {
    return this.allowverticalbounce
  });
  defineSetter(this, "allowVerticalBounce", function(d) {
    this.allowverticalbounce = d;
    $KW[this.wType]["updateView"](this, "allowVerticalBounce", d)
  });
  this.horizontalscrollindicator = (typeof c.horizontalScrollIndicator == "undefined") ? true : c.horizontalScrollIndicator;
  defineGetter(this, "horizontalScrollIndicator", function() {
    return this.horizontalscrollindicator
  });
  defineSetter(this, "horizontalScrollIndicator", function(d) {
    this.horizontalscrollindicator = d;
    $KW[this.wType]["updateView"](this, "horizontalScrollIndicator", d)
  });
  this.verticalscrollindicator = (typeof c.verticalScrollIndicator == "undefined") ? true : c.verticalScrollIndicator;
  defineGetter(this, "verticalScrollIndicator", function() {
    return this.verticalscrollindicator
  });
  defineSetter(this, "verticalScrollIndicator", function(d) {
    this.verticalscrollindicator = d;
    $KW[this.wType]["updateView"](this, "verticalScrollIndicator", d)
  });
  this.pagineenabled = (typeof c.pagineEnabled == "undefined") ? false : c.pagineEnabled;
  defineGetter(this, "pagineEnabled", function() {
    return this.pagineenabled
  });
  defineSetter(this, "pagineEnabled", function(d) {
    this.pagineenabled = d
  });
  this.dragg = false;
  defineGetter(this, "dragging", function() {
    var d = this.pf + "_" + this.id + "_scroller";
    if ($KG[d]) {
      return $KG[d].dragging
    }
    return false
  });
  defineSetter(this, "dragging", function(d) {});
  defineGetter(this, "tracking", function() {
    var d = this.pf + "_" + this.id + "_scroller";
    if ($KG[d]) {
      return $KG[d].tracking
    }
    return false
  });
  defineSetter(this, "tracking", function(d) {});
  defineGetter(this, "decelerating", function() {
    var d = this.pf + "_" + this.id + "_scroller";
    if ($KG[d]) {
      return !this.tracking && $KG[d].animating
    }
    return false
  });
  defineSetter(this, "decelerating", function(d) {});
  this.onscrollstart = c.onScrollStart;
  defineGetter(this, "onScrollStart", function() {
    return this.onscrollstart
  });
  defineSetter(this, "onScrollStart", function(d) {
    this.onscrollstart = d;
    $KW[this.wType]["updateView"](this, "onScrollStart", d)
  });
  this.onscrolltouchreleased = c.onScrollTouchReleased;
  defineGetter(this, "onScrollTouchReleased", function() {
    return this.onscrolltouchreleased
  });
  defineSetter(this, "onScrollTouchReleased", function(d) {
    this.onscrolltouchreleased = d;
    $KW[this.wType]["updateView"](this, "onScrollTouchReleased", d)
  });
  this.onscrolling = c.onScrolling;
  defineGetter(this, "onScrolling", function() {
    return this.onscrolling
  });
  defineSetter(this, "onScrolling", function(d) {
    this.onscrolling = d;
    $KW[this.wType]["updateView"](this, "onScrolling", d)
  });
  this.ondecelerationstarted = c.onDecelerationStarted;
  defineGetter(this, "onDecelerationStarted", function() {
    return this.ondecelerationstarted
  });
  defineSetter(this, "onDecelerationStarted", function(d) {
    this.ondecelerationstarted = d;
    $KW[this.wType]["updateView"](this, "onDecelerationStarted", d)
  });
  this.onscrollend = c.onScrollEnd;
  defineGetter(this, "onScrollEnd", function() {
    return this.onscrollend
  });
  defineSetter(this, "onScrollEnd", function(d) {
    this.onscrollend = d;
    $KW[this.wType]["updateView"](this, "onScrollEnd", d)
  })
};
kony.inherits(kony.ui.FlexScrollContainer, kony.ui.FlexContainer);
kony.ui.FlexScrollContainer.prototype.forceLayout = function() {
  $KW.FlexScrollContainer.forceLayout(this)
};
kony.ui.FlexScrollContainer.prototype.setContentOffset = function(a, b) {
  $KW.FlexScrollContainer.setContentOffSet(this, a, b)
};
kony.ui.FlexScrollContainer.prototype.scrollToWidget = function(b, a) {
  $KW.FlexScrollContainer.scrollToWidget(this, b, a)
};
kony.ui.FlexScrollContainer.prototype.scrollToEnd = function() {
  $KW.FlexScrollContainer.scrollToEnd(this)
};
kony.ui.SegmentedUI2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("SegmentedUI2"))
  }
  kony.ui.SegmentedUI2.baseConstructor.call(this, c, b, a);
  this.groupcells = c.groupCells || false;
  this.screenLevelWidget = c.screenLevelWidget || false;
  this.widgetskin = c.widgetSkin;
  this.skin = c.skin;
  this.rowskin = c.rowSkin;
  this.focusskin = c.rowFocusSkin;
  this.askin = c.alternateRowSkin;
  this.sectionheaderskin = c.sectionHeaderSkin;
  this.widgetdatamap = c.widgetDataMap;
  this.rowtemplate = c.rowTemplate;
  this.sectionheadertemplate = c.sectionHeaderTemplate;
  this.separatorrequired = c.separatorRequired || false;
  this.separatorthickness = c.separatorThickness;
  this.separatorcolor = c.separatorColor;
  this.viewtype = c.viewType;
  this.autogrowMode = c.autogrowMode;
  this.onrowclick = c.onRowClick;
  this.retainselection = c.retainSelection || false;
  this.needpageindicator = c.needPageIndicator || false;
  this.pageondotimage = c.pageOnDotImage || false;
  this.pageoffdotimage = c.pageOffDotImage || false;
  this.onswipe = c.onSwipe;
  this.showscrollbars = c.showScrollbars;
  this.scrollingevents = c.scrollingEvents || false;
  this.selectionbehavior = c.selectionBehavior || constants.SEGUI_DEFAULT_BEHAVIOR;
  this.selectionbehaviorconfig = c.selectionBehaviorConfig;
  this.selectedindex = c.selectedIndex || null;
  this.selecteditems = null;
  this.selectedindices = c.selectedIndices || null;
  this.selectedrowindex = c.selectedRowIndex || null;
  this.selectedrowindices = c.selectedRowIndices || null;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  this.onrowclick = c.onRowClick;
  var d = c.data;
  defineGetter(this, "data", function() {
    return d
  });
  defineSetter(this, "data", function(e) {
    d = e;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", e)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = d;
    this.rowskin = this.skin;
    this.rowfocusskin = this.focusskin;
    this.alternaterowskin = this.askin
  }
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.setGetterSetter();
  this.wType = "Segment";
  this.name = "kony.ui.SegmentedUI2";
  this.canUpdateUI = true
};
kony.inherits(kony.ui.SegmentedUI2, kony.ui.Widget);
kony.ui.SegmentedUI2.prototype.setGetterSetter = function() {
  defineGetter(this, "widgetSkin", function() {
    return this.widgetskin
  });
  defineSetter(this, "widgetSkin", function(b) {
    var a = this.widgetskin;
    this.widgetskin = b;
    $KW[this.wType]["updateView"](this, "widgetskin", b, a)
  });
  defineGetter(this, "rowSkin", function() {
    return this.rowskin
  });
  defineSetter(this, "rowSkin", function(b) {
    var a = this.skin;
    this.rowskin = b;
    $KW[this.wType]["updateView"](this, "rowskin", b, a)
  });
  defineGetter(this, "rowFocusSkin", function() {
    return this.focusskin
  });
  defineSetter(this, "rowFocusSkin", function(b) {
    var a = this.focusskin;
    this.focusskin = b;
    kony.model.updateView(this, "focusskin", b)
  });
  defineGetter(this, "alternateRowSkin", function() {
    return this.askin
  });
  defineSetter(this, "alternateRowSkin", function(b) {
    var a = this.askin;
    this.askin = b;
    $KW[this.wType]["updateView"](this, "askin", b, a)
  });
  defineGetter(this, "sectionHeaderSkin", function() {
    return this.sectionheaderskin
  });
  defineSetter(this, "sectionHeaderSkin", function(b) {
    var a = this.sectionheaderskin;
    this.sectionheaderskin = b;
    $KW[this.wType]["updateView"](this, "sectionskin", b, a)
  });
  defineGetter(this, "widgetDataMap", function() {
    return this.widgetdatamap
  });
  defineSetter(this, "widgetDataMap", function(a) {
    this.widgetdatamap = a
  });
  defineGetter(this, "rowTemplate", function() {
    return this.rowtemplate
  });
  defineSetter(this, "rowTemplate", function(a) {
    this.rowtemplate = a
  });
  defineGetter(this, "sectionHeaderTemplate", function() {
    return this.sectionheadertemplate
  });
  defineSetter(this, "sectionHeaderTemplate", function(a) {
    this.sectionheadertemplate = a
  });
  defineGetter(this, "separatorRequired", function() {
    return this.separatorrequired
  });
  defineSetter(this, "separatorRequired", function(a) {
    this.separatorrequired = a;
    $KW[this.wType]["updateView"](this, "separatorrequired", a)
  });
  defineGetter(this, "separatorThickness", function() {
    return this.separatorthickness
  });
  defineSetter(this, "separatorThickness", function(a) {
    this.separatorthickness = a;
    $KW[this.wType]["updateView"](this, "separatorthickness", a)
  });
  defineGetter(this, "separatorColor", function() {
    return this.separatorcolor
  });
  defineSetter(this, "separatorColor", function(a) {
    this.separatorcolor = a;
    $KW[this.wType]["updateView"](this, "separatorcolor", a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(b) {
    var a = this.viewtype;
    this.viewtype = b;
    $KW[this.wType]["updateView"](this, "viewtype", b, a)
  });
  defineGetter(this, "onRowClick", function() {
    return this.onrowclick
  });
  defineSetter(this, "onRowClick", function(a) {
    this.onrowclick = a
  });
  defineGetter(this, "retainSelection", function() {
    return this.retainselection
  });
  defineSetter(this, "retainSelection", function(a) {
    this.retainselection = a
  });
  defineGetter(this, "needPageIndicator", function() {
    return this.needpageindicator
  });
  defineSetter(this, "needPageIndicator", function(a) {
    this.needpageindicator = a;
    $KW[this.wType]["updateView"](this, "needpageindicator", a)
  });
  defineGetter(this, "pageOnDotImage", function() {
    return this.pageondotimage
  });
  defineSetter(this, "pageOnDotImage", function(a) {
    this.pageondotimage = a;
    $KW[this.wType]["updateView"](this, "pageondotimage", a)
  });
  defineGetter(this, "pageOffDotImage", function() {
    return this.pageoffdotimage
  });
  defineSetter(this, "pageOffDotImage", function(a) {
    this.pageoffdotimage = a;
    $KW[this.wType]["updateView"](this, "pageoffdotimage", a)
  });
  defineGetter(this, "onSwipe", function() {
    return this.onswipe
  });
  defineSetter(this, "onSwipe", function(a) {
    this.onswipe = a
  });
  defineGetter(this, "showScrollbars", function() {
    return this.showscrollbars
  });
  defineSetter(this, "showScrollbars", function(a) {
    this.showscrollbars = a
  });
  defineGetter(this, "scrollingEvents", function() {
    return this.scrollingevents
  });
  defineSetter(this, "scrollingEvents", function(a) {
    this.scrollingevents = a;
    $KW[this.wType]["updateView"](this, "scrollingevents", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  defineGetter(this, "selectionBehavior", function() {
    return this.selectionbehavior
  });
  defineSetter(this, "selectionBehavior", function(b) {
    var a = this.selectionbehavior;
    this.selectionbehavior = b;
    $KW[this.wType]["updateView"](this, "selectionbehavior", b, a)
  });
  defineGetter(this, "selectionBehaviorConfig", function() {
    return this.selectionbehaviorconfig
  });
  defineSetter(this, "selectionBehaviorConfig", function(a) {
    this.selectionbehaviorconfig = a;
    $KW[this.wType]["updateView"](this, "selectionbehaviorconfig", a)
  });
  defineGetter(this, "selectedIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedIndex", function(a) {
    this.selectedindex = a;
    $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "selectedItems", function() {
    return this.selecteditems
  });
  defineGetter(this, "selectedIndices", function() {
    return this.selectedindices
  });
  defineSetter(this, "selectedIndices", function(a) {
    this.selectedindices = a;
    $KW[this.wType]["updateView"](this, "selectedindices", a)
  });
  defineGetter(this, "selectedRowIndex", function() {
    return this.selectedrowindex
  });
  defineSetter(this, "selectedRowIndex", function(a) {
    this.selectedrowindex = a;
    $KW[this.wType]["updateView"](this, "selectedindex", a)
  });
  defineGetter(this, "selectedRowIndices", function() {
    return this.selectedrowindices
  });
  defineSetter(this, "selectedRowIndices", function(a) {
    this.selectedrowindices = a;
    $KW[this.wType]["updateView"](this, "selectedindices", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.widgetSkin = this.widgetskin;
    this.rowSkin = this.skin;
    this.rowFocusSkin = this.focusskin;
    this.alternateRowSkin = this.askin;
    this.sectionHeaderSkin = this.sectionheaderskin;
    this.widgetDataMap = this.widgetdatamap;
    this.rowTemplate = this.rowtemplate;
    this.sectionHeaderTemplate = this.sectionHeaderTemplate;
    this.separatorRequired = this.separatorrequired;
    this.separatorThickness = this.separatorthickness;
    this.separatorColor = this.separatorcolor;
    this.viewType = this.viewtype;
    this.onRowClick = this.onrowclick;
    this.retainSelection = this.retainselection;
    this.needPageIndicator = this.needpageindicator;
    this.pageOnDotImage = this.pageondotimage;
    this.pageOffDotImage = this.pageoffdotimage;
    this.onSwipe = this.onswipe;
    this.showScrollbars = this.showscrollbars;
    this.scrollingEvents = this.scrollingevents;
    this.selectionBehavior = this.selectionbehavior;
    this.selectionBehaviorConfig = this.selectionbehaviorconfig;
    this.selectedIndex = this.selectedindex;
    this.selectedItems = this.selecteditems;
    this.selectedIndices = this.selectedindices;
    this.selectedRowIndex = this.selectedrowindex;
    this.selectedRowIndices = this.selectedrowindices
  }
};
kony.ui.SegmentedUI2.prototype.addAll = function(a) {
  $KW.Segment.addAll(this, a)
};
kony.ui.SegmentedUI2.prototype.addDataAt = function(a, c, b) {
  $KW.Segment.addDataAt(this, a, c, b)
};
kony.ui.SegmentedUI2.prototype.addSectionAt = function(a, b) {
  $KW.Segment.addSectionAt(this, a, b)
};
kony.ui.SegmentedUI2.prototype.removeAll = function() {
  $KW.Segment.removeAll(this)
};
kony.ui.SegmentedUI2.prototype.removeAt = function(b, a) {
  $KW.Segment.removeAt(this, b, a)
};
kony.ui.SegmentedUI2.prototype.removeSectionAt = function(a) {
  $KW.Segment.removeSectionAt(this, a)
};
kony.ui.SegmentedUI2.prototype.setData = function(a) {
  $KW.Segment.setData(this, a)
};
kony.ui.SegmentedUI2.prototype.setDataAt = function(a, c, b) {
  $KW.Segment.setDataAt(this, a, c, b)
};
kony.ui.SegmentedUI2.prototype.setSectionAt = function(a, b) {
  $KW.Segment.setSectionAt(this, a, b)
};
kony.ui.SegmentedUI2.prototype.setDataWithSections = function(a) {
  $KW.Segment.setDataWithSections(this, a)
};
kony.ui.SegmentedUI = function(c, b, a) {
  kony.ui.SegmentedUI.baseConstructor.call(this, c, b, a);
  this.skin = c.skin;
  this.askin = c.aSkin;
  this.sectionheaderskin = a.secSkin;
  this.name = "kony.ui.SegmentedUI";
  retainSelection = a.retainSelection || false;
  viewType = this.viewtype = a.view;
  selectionBehavior = this.selectionbehavior = a.behavior || constants.SEGUI_DEFAULT_BEHAVIOR;
  separatorThickness = this.separatorthickness = a.sepThickness;
  separatorColor = this.separatorcolor = a.sepColor;
  onRowClick = this.onrowclick = c.onClick;
  this.separatorrequired = true;
  this.focuseditem = null;
  defineGetter(this, "focusedItem", function() {
    return this.focuseditem
  });
  this.focusedindex = c.focusedIndex || null;
  defineGetter(this, "focusedIndex", function() {
    return this.focusedindex
  });
  defineSetter(this, "focusedIndex", function(d) {
    this.focusedindex = d;
    $KW[this.wType]["updateView"](this, "focusedindex", d)
  });
  this.needpageindicator = a.isPageIndicatorNeeded || null;
  defineGetter(this, "isPageIndicatorNeeded", function() {
    return this.needpageindicator
  });
  defineSetter(this, "isPageIndicatorNeeded", function(d) {
    this.needpageindicator = d;
    $KW[this.wType]["updateView"](this, "needpageindicator", d)
  })
};
kony.inherits(kony.ui.SegmentedUI, kony.ui.SegmentedUI2);
kony.ui.TextBox2 = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("TextBox2"))
  }
  kony.ui.TextBox2.baseConstructor.call(this, d, b, a);
  this.autoCorrect = this.autocorrect = a.autoCorrect || false;
  this.autoComplete = this.autocomplete = a.autoComplete || false;
  this.pattern = a.pattern;
  this.secureTextEntry = this.securetextentry = d.secureTextEntry;
  this.maxtextlength = d.maxTextLength;
  this.textinputmode = d.textInputMode || constants.TEXTBOX_INPUT_MODE_ANY;
  this.keyboardtype = d.keyBoardStyle || constants.TEXTBOX_KEY_BOARD_STYLE_DEFAULT;
  this.containerheightmode = b.containerHeightMode || constants.TEXTBOX_DEFAULT_PLATFORM_HEIGHT;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference;
  this.ondone = d.onDone;
  this.onkeydown = a.onKeyDown;
  this.onkeyup = a.onKeyUp;
  this.onbeginediting = a.onBeginEditing;
  this.onendediting = a.onEndEditing;
  this.ontextchange = d.onTextChange || a.onTextChange;
  this.autocapitalize = d.autoCapitalize || constants.TEXTBOX_AUTO_CAPITALIZE_NONE;
  var g = d.text || "";
  defineGetter(this, "text", function() {
    return g
  });
  defineSetter(this, "text", function(h) {
    g = h;
    if (this.canUpdateUI) {
      this.i18n_text = "";
      $KW[this.wType]["updateView"](this, "text", h)
    }
  });
  var f = d.placeholder || "";
  defineGetter(this, "placeholder", function() {
    return f
  });
  defineSetter(this, "placeholder", function(h) {
    f = h;
    $KW[this.wType]["updateView"](this, "placeholder", h)
  });
  var e = a.pattern;
  defineGetter(this, "pattern", function() {
    return e
  });
  defineSetter(this, "pattern", function(h) {
    e = h;
    $KW[this.wType]["updateView"](this, "pattern", h)
  });
  var c = a.name || "";
  defineGetter(this, "name", function() {
    return c
  });
  defineSetter(this, "name", function(h) {
    c = h;
    $KW[this.wType]["updateView"](this, "name", h)
  });
  this.canUpdateUI = true;
  this.wType = "TextField";
  this.__name = "kony.ui.TextBox2";
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.text = g;
    this.placeholder = f
  }
  kony.ui.TextBox2.prototype.setGetterSetter.call(this)
};
kony.inherits(kony.ui.TextBox2, kony.ui.Widget);
kony.ui.TextBox2.prototype.setGetterSetter = function() {
  defineGetter(this, "maxTextLength", function() {
    return this.maxtextlength
  });
  defineSetter(this, "maxTextLength", function(a) {
    this.maxtextlength = a;
    $KW[this.wType]["updateView"](this, "maxtextlength", a)
  });
  defineGetter(this, "textInputMode", function() {
    return this.textinputmode || this.mode
  });
  defineSetter(this, "textInputMode", function(a) {
    this.textinputmode = this.mode = a;
    $KW[this.wType]["updateView"](this, "textinputmode", a)
  });
  defineGetter(this, "keyBoardStyle", function() {
    return this.keyboardtype
  });
  defineSetter(this, "keyBoardStyle", function(a) {
    this.keyboardtype = a;
    $KW[this.wType]["updateView"](this, "keyboardtype", a)
  });
  defineGetter(this, "onDone", function() {
    return this.ondone
  });
  defineSetter(this, "onDone", function(a) {
    this.ondone = a
  });
  defineGetter(this, "onBeginEditing", function() {
    return this.onbeginediting
  });
  defineSetter(this, "onBeginEditing", function(a) {
    this.onbeginediting = a
  });
  defineGetter(this, "onEndEditing", function() {
    return this.onendediting
  });
  defineSetter(this, "onEndEditing", function(a) {
    this.onendediting = a
  });
  defineGetter(this, "onTextChange", function() {
    return this.ontextchange
  });
  defineSetter(this, "onTextChange", function(a) {
    this.ontextchange = a
  });
  defineGetter(this, "autoCapitalize", function() {
    return this.autocapitalize
  });
  defineSetter(this, "autoCapitalize", function(a) {
    this.autocapitalize = a;
    $KW[this.wType]["updateView"](this, "autocapitalize", a)
  });
  defineGetter(this, "containerHeightMode", function() {
    return this.containerheightmode
  });
  defineSetter(this, "containerHeightMode", function(a) {
    this.containerheightmode = a;
    $KW[this.wType]["updateView"](this, "containerheightmode", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    $KW[this.wType]["updateView"](this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    $KW[this.wType]["updateView"](this, "containerheightreference", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.maxTextLength = this.maxtextlength;
    this.textInputMode = this.textinputmode;
    this.keyBoardStyle = this.keyboardtype;
    this.onDone = this.ondone;
    this.onTextChange = this.ontextchange;
    this.autoCapitalize = this.autocapitalize
  }
};
kony.ui.TextBox = function(c, b, a) {
  kony.ui.TextBox.baseConstructor.call(this, c, b, a);
  this.placeholder = a.placeholder;
  this.autocapitalize = a.autoCapitalize;
  this.keyboardtype = a.keyBoardType;
  this.ondone = a.onDone;
  this.__name = "kony.ui.TextBox"
};
kony.inherits(kony.ui.TextBox, kony.ui.TextBox2);
kony.ui.TextArea2 = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("TextArea2"))
  }
  kony.ui.TextArea2.baseConstructor.call(this, c, b, a);
  this.wType = "TextArea";
  this.name = "kony.ui.TextArea2";
  this.numberofvisiblelines = c.numberOfVisibleLines;
  this.setGetterSetter()
};
kony.inherits(kony.ui.TextArea2, kony.ui.TextBox2);
kony.ui.TextArea2.prototype.setGetterSetter = function() {
  defineGetter(this, "numberOfVisibleLines", function() {
    return this.numberofvisiblelines
  });
  defineSetter(this, "numberOfVisibleLines", function(a) {
    this.numberofvisiblelines = a;
    $KW[this.wType]["updateView"](this, "numberofvisiblelines", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.numberOfVisibleLines = this.numberofvisiblelines
  }
};
kony.ui.TextArea = function(c, b, a) {
  kony.ui.TextArea.baseConstructor.call(this, c, b, a);
  this.numberofrows = a.numberOfRows;
  this.name = "kony.ui.TextArea"
};
kony.inherits(kony.ui.TextArea, kony.ui.TextArea2);
kony.ui.Popup = function(f, c, b) {
  if (arguments.length < 3) {
    f = c = b = $KU.mergeDefaults(f, $KU.getAllDefaults("Popup"))
  }
  kony.ui.Popup.baseConstructor.call(this, f, c, b);
  this.wType = "Popup";
  this.name = "kony.ui.Popup";
  this.containerheight = c.containerHeight;
  this.containerheightreference = c.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  this.draggable = b.draggable;
  this.resizable = b.resizable;
  this.minimizeonlostfocus = b.minimizeOnLostFocus;
  this.retaindisplayonlostfocus = b.retainDisplayOnLostFocus;
  var e = b.titleBarConfig;
  if (e) {
    this.titlebarconfig = {};
    this.titlebarconfig.minicon = e.minIcon;
    this.titlebarconfig.maxicon = e.maxIcon;
    this.titlebarconfig.closeicon = e.closeIcon;
    this.titlebarconfig.skin = e.titleBarSkin
  }
  var a = this.inTransitionConfig || this.intransitionconfig,
    d = this.outTransitionConfig || this.outtransitionconfig;
  if (a) {
    this.ptranIn = this.ptran = a.popupTransition
  }
  if (d) {
    this.ptranOut = d.popupTransition
  }
  this.ismodal = f.isModal;
  this.transparencybehindthepopup = f.transparencyBehindThePopup;
  this.setGetterSetter()
};
kony.inherits(kony.ui.Popup, kony.ui.Form2);
kony.ui.Popup.prototype.setGetterSetter = function() {
  defineGetter(this, "isModal", function() {
    return this.ismodal
  });
  defineSetter(this, "isModal", function(a) {
    this.ismodal = a;
    $KW[this.wType]["updateView"](this, "ismodal", a)
  });
  defineGetter(this, "transparencyBehindThePopup", function() {
    return this.transparencybehindthepopup
  });
  defineSetter(this, "transparencyBehindThePopup", function(a) {
    this.transparencybehindthepopup = a;
    $KW[this.wType]["updateView"](this, "transparencybehindthepopup", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  defineGetter(this, "retainDisplayOnLostFocus", function() {
    return this.retaindisplayonlostfocus
  });
  defineSetter(this, "retainDisplayOnLostFocus", function(a) {
    this.retaindisplayonlostfocus = a
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightreference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightreference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.isModal = this.ismodal;
    this.transparencyBehindThePopup = this.transparencybehindthepopup
  }
};
kony.ui.Popup.prototype.destroy = function() {
  this.onDestroy && this.onDestroy(this);
  $KW.Popup.dismiss(this);
  this.addWidgetsdone = false;
  this.initdone = false;
  this.ownchildrenref = [];
  this.children = []
};
kony.ui.Popup.prototype.dismiss = function() {
  $KW.Popup.dismiss(this)
};
kony.ui.Popup.prototype.show = function() {
  if (!this.addWidgetsdone) {
    this.addWidgetsdone = true;
    this.addWidgets && this.addWidgets(this)
  }!this.initdone && this.init && this.init(this);
  this.initdone = true;
  $KW.Popup.show(this)
};
kony.ui.Popup.prototype.setContext = function(a) {
  $KW.Popup.setcontext(this, a)
};
kony.ui.Popup.prototype.scrollToBeginning = function() {
  $KW.Popup.scrollToBeginning(this)
};
kony.ui.Popup.prototype.scrollToEnd = function() {
  $KW.Popup.scrollToEnd(this)
};
kony.ui.Popup.prototype.scrollToWidget = function(a) {
  $KW.Popup.scrollToWidget(this, a)
};
kony.ui.TabPane = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("TabPane"))
  }
  kony.ui.TabPane.baseConstructor.call(this, d, b, a);
  this.wType = "TabPane";
  this.name = "kony.ui.TabPane";
  this.screenLevelWidget = d.screenLevelWidget || false;
  this.activeskin = d.activeSkin;
  this.activefocusskin = d.activeFocusSkin;
  this.inactiveskin = d.inactiveSkin;
  this.viewtype = d.viewType;
  this.viewconfig = d.viewConfig;
  if (d.viewConfig && d.viewConfig.collapsibleViewConfig) {
    this.viewconfig.collapsibleviewconfig = this.viewconfig.collapsibleViewConfig;
    this.viewconfig.collapsibleviewconfig.onclick = this.viewconfig.collapsibleviewconfig.onClick;
    this.viewconfig.collapsibleviewconfig.expandedimage = this.viewconfig.collapsibleviewconfig.expandedImage;
    this.viewconfig.collapsibleviewconfig.collapsedimage = this.viewconfig.collapsibleviewconfig.collapsedImage;
    this.viewconfig.collapsibleviewconfig.imageposition = this.viewconfig.collapsibleviewconfig.imagePosition;
    this.viewconfig.collapsibleviewconfig.tabnamealignment = this.viewconfig.collapsibleviewconfig.tabNameAlignment;
    this.viewconfig.collapsibleviewconfig.toggletabs = this.viewconfig.collapsibleviewconfig.toggleTabs
  }
  this.ontabclick = d.onTabClick;
  this.retainpositionintab = d.retainPositionInTab;
  this.needpageindicator = d.needPageIndicator;
  this.selectedtabindex = d.selectedTabIndex;
  this.containerheight = b.containerHeight;
  this.containerheightreference = b.containerHeightReference || constants.CONTAINER_HEIGHT_BY_FORM_REFERENCE;
  if (d.viewConfig && d.viewConfig.collapsibleViewConfig) {
    var c = d.viewConfig.collapsibleViewConfig;
    this.collapsedimage = c.expandedImage;
    this.expandedimage = c.collapsedImage;
    this.toggletabs = c.toggleTabs;
    this.imageposition = c.imagePosition;
    this.tabnamealignment = c.tabNameAlignment
  }
  if (d.viewConfig && d.viewConfig.pageViewConfig) {
    var e = d.viewConfig.pageViewConfig;
    this.pageondotimage = e.pageOnDotImage;
    this.pageoffdotimage = e.pageOffDotImage;
    this.needpageindicator = e.needPageIndicator
  }
  this.activetabs = d.activetabs;
  if ((this.viewtype == constants.TABPANE_VIEW_TYPE_TABVIEW || this.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) && (!this.activetabs || (this.activetabs && this.activetabs.length == 0))) {
    this.activetabs = [0];
    this.activetab = 0
  }
  if (this.activetabs && this.activetabs.length > 0) {
    this.activetab = this.activetabs[0]
  }
  this.setGetterSetter()
};
kony.inherits(kony.ui.TabPane, kony.ui.ContainerWidget);
kony.ui.TabPane.prototype.setGetterSetter = function() {
  defineGetter(this, "activeSkin", function() {
    return this.activeskin
  });
  defineSetter(this, "activeSkin", function(b) {
    var a = this.activeskin;
    this.activeskin = b;
    $KW[this.wType]["updateView"](this, "activeskin", b, a)
  });
  defineGetter(this, "activeFocusSkin", function() {
    return this.activefocusskin
  });
  defineSetter(this, "activeFocusSkin", function(b) {
    var a = this.activefocusskin;
    this.activefocusskin = b;
    kony.model.updateView(this, "activefocusskin", b, a)
  });
  defineGetter(this, "inactiveSkin", function() {
    return this.inactiveskin
  });
  defineSetter(this, "inactiveSkin", function(b) {
    var a = this.inactiveskin;
    this.inactiveskin = b;
    $KW[this.wType]["updateView"](this, "inactiveskin", b, a)
  });
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(a) {
    this.viewtype = a;
    if ((this.viewtype == constants.TABPANE_VIEW_TYPE_TABVIEW || this.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) && (!this.activetabs || (this.activetabs && this.activetabs.length == 0))) {
      this.activetabs = [0];
      this.activetab = 0
    }
    if (this.activetabs && this.activetabs.length > 0) {
      this.activetab = this.activetabs[0]
    }
    $KW[this.wType]["updateView"](this, "viewtype", a)
  });
  defineGetter(this, "containerHeight", function() {
    return this.containerheight
  });
  defineSetter(this, "containerHeight", function(a) {
    this.containerheight = a;
    kony.model.updateView(this, "containerheight", a)
  });
  defineGetter(this, "containerHeightReference", function() {
    return this.containerheightreference
  });
  defineSetter(this, "containerHeightReference", function(a) {
    this.containerheightreference = a;
    kony.model.updateView(this, "containerheightreference", a)
  });
  defineGetter(this, "viewConfig", function() {
    return this.viewconfig
  });
  defineSetter(this, "viewConfig", function(a) {
    this.viewconfig = a;
    $KW[this.wType]["updateView"](this, "viewconfig", a)
  });
  defineGetter(this, "onTabClick", function() {
    return this.ontabclick
  });
  defineSetter(this, "onTabClick", function(a) {
    this.ontabclick = a;
    $KW[this.wType]["updateView"](this, "ontabclick", a)
  });
  defineGetter(this, "retainPositionInTab", function() {
    return this.retainpositionintab
  });
  defineSetter(this, "retainPositionInTab", function(a) {
    this.retainpositionintab = a;
    $KW[this.wType]["updateView"](this, "retainpositionintab", a)
  });
  defineGetter(this, "needPageIndicator", function() {
    return this.needpageindicator
  });
  defineSetter(this, "needPageIndicator", function(a) {
    this.needpageindicator = a;
    $KW[this.wType]["updateView"](this, "needpageindicator", a)
  });
  defineGetter(this, "selectedTabIndex", function() {
    return this.selectedtabindex
  });
  defineSetter(this, "selectedTabIndex", function(a) {
    this.selectedtabindex = a;
    $KW[this.wType]["updateView"](this, "selectedtabindex", a)
  });
  defineGetter(this, "activeTabs", function() {
    return this.activetabs
  });
  defineSetter(this, "activeTabs", function(a) {
    this.activetabs = a;
    if ((this.viewtype == constants.TABPANE_VIEW_TYPE_TABVIEW || this.viewtype == constants.TABPANE_VIEW_TYPE_PAGEVIEW) && (!a || (a && a.length == 0))) {
      this.activetabs = [0];
      this.activetab = 0
    }
    if (this.activetabs && this.activetabs.length > 0) {
      this.activetab = this.activetabs[0]
    }
    $KW[this.wType]["updateView"](this, "activetabs", a)
  });
  defineGetter(this, "activeTab", function() {
    return this.activetabs[0]
  });
  defineSetter(this, "activeTab", function(a) {
    this.activetabs[0] = a;
    $KW[this.wType]["updateView"](this, "activetab", a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.activeSkin = this.activeskin;
    this.activeFocusSkin = this.activefocusskin;
    this.inactiveSkin = this.inactiveskin;
    this.viewType = this.viewtype;
    this.viewConfig = this.viewconfig;
    this.onTabClick = this.ontabclick;
    this.retainPositionInTab = this.retainpositionintab;
    this.needPageIndicator = this.needpageindicator;
    this.selectedTabIndex = this.selectedtabindex;
    this.activeTabs = this.activetabs;
    this.activetab = this.activetab
  }
};
kony.ui.TabPane.prototype.addTab = function(a, e, c, d, f) {
  var b;
  if (arguments.callee.arguments.length == 3) {
    b = e;
    b.id = a;
    b.header = c;
    kony.ui.Form2.prototype.createFormLevelHierarchy.call(b.header, [b.header]);
    b.header.isheader = true;
    kony.ui.ContainerWidget.prototype.createhierarchy.call(b.header, b.header.ownchildrenref)
  } else {
    b = d;
    b.id = a;
    b.tabname = e;
    b.image = c;
    b.oninit = f
  }
  this.allboxes = [];
  b.name = "kony.ui.Tab";
  var g = "true";
  if (g == "true") {
    kony.ui.ContainerWidget.prototype.add.call(this, [b])
  }
  kony.ui.Form2.prototype.createFormLevelHierarchy.call(this, [b]);
  kony.ui.ContainerWidget.prototype.createhierarchy.call(this, b.ownchildrenref);
  $KW.TabPane.addChildTab(this, b)
};
kony.ui.TabPane.prototype.addTabAt = function(c, g, e, f, b) {
  var d;
  if (arguments.callee.arguments.length == 4) {
    d = g;
    d.id = c;
    d.header = e;
    kony.ui.Form2.prototype.createFormLevelHierarchy.call(d.header, [d.header]);
    d.header.isheader = true;
    b = f;
    kony.ui.ContainerWidget.prototype.createhierarchy.call(d.header, d.header.ownchildrenref)
  } else {
    d = f;
    d.id = c;
    d.tabname = g;
    d.image = e
  }
  this.allboxes = [];
  d.name = "kony.ui.Tab";
  var a = "true";
  if (a == "true") {
    kony.ui.ContainerWidget.prototype.addAt.call(this, d, b)
  }
  kony.ui.Form2.prototype.createFormLevelHierarchy.call(this, [d]);
  kony.ui.ContainerWidget.prototype.createhierarchy.call(this, d.ownchildrenref);
  $KW.TabPane.addChildTabAt(this, d, b)
};
kony.ui.TabPane.prototype.removeTabAt = function(a) {
  $KW.TabPane.removeTabAt(this, a)
};
kony.ui.TabPane.prototype.removeTabById = function(a) {
  $KW.TabPane.removeTabById(this, a)
};
kony.ui.TabPane.prototype.setTabName = function(a, b) {
  $KW.TabPane.setTabName(this, a, b)
};
kony.ui.Slider = function(c, b, a) {
  if (arguments.length < 3) {
    c = b = a = $KU.mergeDefaults(c, $KU.getAllDefaults("Slider"))
  }
  kony.ui.Slider.baseConstructor.call(this, c, b, a);
  this.min = c.min;
  this.max = c.max;
  this.step = c.step;
  this.onslide = c.onSlide;
  this.onselection = c.onSelection;
  this.leftskin = c.leftSkin;
  this.rightskin = c.rightSkin;
  this.thumbimage = c.thumbImage;
  this.focusthumbimage = c.focusThumbImage;
  this.selectedvalue = c.selectedValue || Math.abs((c.min + (c.min - c.max) / 2));
  this.widgetalignment = b.widgetAlignment;
  var d = (!b.margin) ? [0, 0, 0, 0] : b.margin;
  this.margin = d;
  this.minlabel = a.minLabel;
  this.maxlabel = a.maxLabel;
  this.minlabelskin = a.minLabelSkin;
  this.maxlabelskin = a.maxLabelSkin;
  this.thickness = a.thickness;
  this.view = a.viewType;
  this.orientation = a.orientation;
  this.wType = "Slider";
  this.name = "kony.ui.Slider";
  this.setGetterSetter()
};
kony.inherits(kony.ui.Slider, kony.ui.Widget);
kony.ui.Slider.prototype.setGetterSetter = function() {
  defineGetter(this, "selectedValue", function() {
    return this.selectedvalue
  });
  defineSetter(this, "selectedValue", function(a) {
    this.selectedvalue = a;
    $KW[this.wType]["updateView"](this, "selectedvalue", a)
  });
  defineGetter(this, "focusThumbImage", function() {
    return this.focusthumbimage
  });
  defineSetter(this, "focusThumbImage", function(a) {
    this.focusthumbimage = a;
    $KW[this.wType]["updateView"](this, "focusthumbimage", a)
  });
  defineGetter(this, "thumbImage", function() {
    return this.thumbimage
  });
  defineSetter(this, "thumbImage", function(a) {
    this.thumbimage = a;
    $KW[this.wType]["updateView"](this, "thumbimage", a)
  });
  defineGetter(this, "rightSkin", function() {
    return this.rightskin
  });
  defineSetter(this, "rightSkin", function(a) {
    $KW[this.wType]["updateView"](this, "rightskin", a, this.rightskin)
  });
  defineGetter(this, "leftSkin", function() {
    return this.leftskin
  });
  defineSetter(this, "leftSkin", function(a) {
    $KW[this.wType]["updateView"](this, "leftskin", a, this.leftskin)
  });
  defineGetter(this, "minLabel", function() {
    return this.minlabel
  });
  defineSetter(this, "minLabel", function(a) {
    $KW[this.wType]["updateView"](this, "minlabel", a, this.minlabel)
  });
  defineGetter(this, "maxLabel", function() {
    return this.maxlabel
  });
  defineSetter(this, "maxLabel", function(a) {
    $KW[this.wType]["updateView"](this, "maxlabel", a, this.maxlabel)
  });
  defineGetter(this, "maxLabelSkin", function() {
    return this.maxlabelskin
  });
  defineSetter(this, "maxLabelSkin", function(a) {
    $KW[this.wType]["updateView"](this, "maxlabelskin", a, this.maxlabelskin)
  });
  defineGetter(this, "minLabelSkin", function() {
    return this.minlabelskin
  });
  defineSetter(this, "minLabelSkin", function(a) {
    $KW[this.wType]["updateView"](this, "minlabelskin", a, this.minlabelskin)
  });
  defineGetter(this, "onSelection", function() {
    return this.onselection
  });
  defineSetter(this, "onSelection", function(a) {
    this.onselection = a
  });
  defineGetter(this, "onSlide", function() {
    return this.onslide
  });
  defineSetter(this, "onSlide", function(a) {
    this.onslide = a
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.selectedValue = this.selectedvalue;
    this.focusThumbImage = this.focusthumbimage;
    this.thumbImage = this.thumbimage;
    this.rightSkin = this.rightskin;
    this.leftSkin = this.leftskin;
    this.onSelection = this.onselection;
    this.onSlide = this.onslide
  }
};
kony.ui.Video = function(d, b, a) {
  if (arguments.length < 3) {
    d = b = a = $KU.mergeDefaults(d, $KU.getAllDefaults("Video"))
  }
  kony.ui.Video.baseConstructor.call(this, d, b, a);
  this.wType = "Video";
  this.name = "kony.ui.Video";
  var e = d.source;
  defineGetter(this, "source", function() {
    return e
  });
  defineSetter(this, "source", function(g) {
    e = g;
    $KW[this.wType]["updateView"](this, "source", g)
  });
  var c = a.controls;
  this.controls = a.controls;
  defineGetter(this, "controls", function() {
    return c
  });
  defineSetter(this, "controls", function(g) {
    c = g;
    $KW[this.wType]["updateView"](this, "controls", g)
  });
  var f = a.poster;
  defineGetter(this, "poster", function() {
    return f
  });
  defineSetter(this, "poster", function(g) {
    f = g;
    $KW[this.wType]["updateView"](this, "poster", g)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.source = e;
    this.controls = c;
    this.poster = f
  }
};
kony.inherits(kony.ui.Video, kony.ui.Widget);
kony.ui.MenuContainer = function(d, b, a) {
  kony.ui.MenuContainer.baseConstructor.call(this, d, b, a);
  this.viewtype = a.viewType;
  this.menutemplate = d.menuItemTemplate;
  this.widgetdatamap = d.widgetDataMap || null;
  this.data = d.data || null;
  this.selectedindex = d.selectedMenuIndex || null;
  this.selecteditem = d.selectedMenuItem || null;
  this.activeskin = d.activeSkin || "";
  this.hoverskin = d.hoverSkin || "";
  this.onclick = d.onClick || null;
  this.expandedimage = a.expandedImage;
  this.collapsedimage = a.collapsedImage;
  this.contextmenu = a.contextMenu;
  defineGetter(this, "contextMenu", function() {
    return this.contextmenu
  });
  this.onrightclick = a.onRightClick;
  defineGetter(this, "onRightClick", function() {
    return this.onrightclick
  });
  var e = d.data;
  defineGetter(this, "data", function() {
    return e
  });
  defineSetter(this, "data", function(g) {
    e = g;
    this.canUpdateUI && $KW[this.wType]["updateView"](this, "data", g)
  });
  var c = a.orientation;
  defineGetter(this, "orientation", function() {
    return c
  });
  defineSetter(this, "orientation", function(h) {
    var g = c;
    c = h;
    $KW[this.wType]["updateView"](this, "orientation", h, g)
  });
  var f = d.info || null;
  defineGetter(this, "info", function() {
    return f
  });
  defineSetter(this, "info", function(h) {
    var g = f;
    f = h;
    $KW[this.wType]["updateView"](this, "info", h, g)
  });
  this.setGetterSetter();
  this.wType = "MenuContainer";
  this.name = "kony.ui.MenuContainer";
  this.canUpdateUI = true;
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.data = e;
    this.info = f;
    this.orientation = c
  }
};
kony.inherits(kony.ui.MenuContainer, kony.ui.Widget);
kony.ui.MenuContainer.prototype.setGetterSetter = function() {
  defineGetter(this, "viewType", function() {
    return this.viewtype
  });
  defineSetter(this, "viewType", function(b) {
    var a = this.viewtype;
    this.viewtype = b;
    $KW[this.wType]["updateView"](this, "viewtype", b, a)
  });
  defineGetter(this, "menuItemTemplate", function() {
    return this.menutemplate
  });
  defineSetter(this, "menuItemTemplate", function(b) {
    var a = this.menutemplate;
    this.menutemplate = b;
    $KW[this.wType]["updateView"](this, "menutemplate", b, a)
  });
  defineGetter(this, "widgetDataMap", function() {
    return this.widgetdatamap
  });
  defineSetter(this, "widgetDataMap", function(b) {
    var a = this.widgetdatamap;
    this.widgetdatamap = b
  });
  defineGetter(this, "selectedMenuIndex", function() {
    return this.selectedindex
  });
  defineSetter(this, "selectedMenuIndex", function(b) {
    var a = this.selectedindex;
    this.selectedindex = b;
    $KW[this.wType]["updateView"](this, "selectedindex", b, a)
  });
  defineGetter(this, "selectedMenuItem", function() {
    return this.selecteditem
  });
  defineGetter(this, "onClick", function() {
    return this.onclick
  });
  defineSetter(this, "onClick", function(a) {
    this.onclick = a
  });
  defineGetter(this, "activeSkin", function() {
    return this.activeskin
  });
  defineSetter(this, "activeSkin", function(b) {
    var a = this.activeskin;
    this.activeskin = b;
    $KW[this.wType]["updateView"](this, "activeskin", b, a)
  });
  defineGetter(this, "hoverSkin", function() {
    return this.hoverskin
  });
  defineSetter(this, "hoverSkin", function(b) {
    var a = this.hoverskin;
    this.hoverskin = b;
    $KW[this.wType]["updateView"](this, "hoverskin", b, a)
  });
  if (kony.appinit.isIE7 || kony.appinit.isIE8) {
    this.viewType = this.viewtype;
    this.menuItemTemplate = this.menutemplate;
    this.widgetDataMap = this.widgetdatamap;
    this.selectedMenuIndex = this.selectedindex;
    this.selectedMenuItem = this.selecteditem;
    this.onClick = this.onclick;
    this.activeSkin = this.activeskin;
    this.hoverSkin = this.hoverskin
  }
};
kony.ui.MenuContainer.prototype.setData = function(a) {
  $KW.MenuContainer.setData(this, a)
};
kony.ui.MenuContainer.prototype.setDataAt = function(a, b) {
  $KW.MenuContainer.setDataAt(this, a, b)
};
kony.ui.MenuContainer.prototype.addAll = function(a) {
  $KW.MenuContainer.addAll(this, a)
};
kony.ui.MenuContainer.prototype.addDataAt = function(a, b) {
  $KW.MenuContainer.addDataAt(this, a, b)
};
kony.ui.MenuContainer.prototype.removeAll = function() {
  $KW.MenuContainer.removeAll(this)
};
kony.ui.MenuContainer.prototype.removeAt = function(a) {
  $KW.MenuContainer.removeAt(this, a)
};
kony.type = function(b) {
  var a = $KI.type(b);
  if (a == "table" || a == "object") {
    a = b.name == undefined ? a : b.name
  }
  return a
};
if ($KI.crypto) {
  kony.crypto = {
    newKey: $KI.crypto.newkey,
    saveKey: $KI.crypto.savekey,
    createHash: $KI.crypto.createhash,
    retrievePublicKey: $KI.crypto.retrievepublickey,
    deleteKey: $KI.crypto.deletekey,
    readKey: $KI.crypto.readkey,
    encrypt: $KI.crypto.encrypt,
    decrypt: $KI.crypto.decrypt
  }
}
if ($KI.db) {
  kony.db = {
    openDatabase: $KI.db.opendatabase,
    transaction: $KI.db.transaction,
    readTransaction: $KI.db.readtransaction,
    executeSql: $KI.db.executesql,
    sqlResultsetRowItem: $KI.db.sqlresultsetrowitem,
    changeVersion: $KI.db.changeversion
  }
}
if ($KI.ds) {
  kony.ds = {
    "delete": $KI.ds.Delete,
    remove: $KI.ds.Delete,
    read: $KI.ds.read,
    save: $KI.ds.save
  }
}
if ($KI.i18n) {
  kony.i18n = {
    deleteResourceBundle: $KI.i18n.deleteresourcebundle,
    getLocalizedString: $KI.i18n.getlocalizedstring,
    getCurrentLocale: $KI.i18n.getcurrentlocale,
    isResourceBundlePresent: $KI.i18n.isresourcebundlepresent,
    setCurrentLocale: $KI.i18n.setcurrentlocale,
    setCurrentLocaleAsync: $KI.i18n.setcurrentlocaleasync,
    setDefaultLocale: $KI.i18n.setdefaultlocale,
    setDefaultLocaleAsync: $KI.i18n.setdefaultlocaleasync,
    setResourceBundle: $KI.i18n.setresourcebundle,
    updateResourceBundle: $KI.i18n.updateresourcebundle,
    getCurrentDeviceLocale: $KI.i18n.getcurrentdevicelocale,
    getSupportedLocales: $KI.i18n.getsupportedlocales,
    isLocaleSupportedByDevice: $KI.i18n.islocalesupportedbydevice
  }
}
if ($KI.localstorage) {
  kony.store = {
    key: $KI.localstorage.key,
    getItem: $KI.localstorage.getitem,
    removeItem: $KI.localstorage.removeitem,
    setItem: $KI.localstorage.setitem,
    clear: $KI.localstorage.clear,
    length: $KI.localstorage.length
  }
}
if ($KI.geolocation) {
  kony.location = {
    clearWatch: $KI.geolocation.clearwatch,
    getCurrentPosition: $KI.geolocation.getcurrentposition,
    watchPosition: $KI.geolocation.watchposition
  }
}
if ($KI.os) {
  kony.os = {
    toNumber: $KI.os.tonumber,
    toCurrency: $KI.os.tocurrency,
    freeMemory: $KI.os.freememory,
    userAgent: $KI.os.useragent,
    deviceInfo: $KI.os.platform,
    hasGPSSupport: $KI.os.hasgpssupport,
    hasCameraSupport: $KI.os.hascamerasupport,
    hasTouchSupport: $KI.os.hastouchsupport,
    hasOrientationSupport: $KI.os.hasorientationsupport,
    hasAccelerometerSupport: $KI.os.hasaccelerometersupport,
    getDeviceCurrentOrientation: $KI.os.getdevicecurrentorientation,
    httpheaders: $KI.os.httpheaders,
    getApplicationMode: $KI.os.getapplicationmode,
    setApplicationMode: $KI.os.setapplicationmode,
    setApplicationScrollMode: $KI.os.setapplicationscrollmode,
    getAppContext: $KI.os.getappcontext,
    print: $KI.os.print
  }
}
if ($KI.net) {
  kony.net = {
    HttpRequest: $KI.net.HttpRequest,
    FormData: $KI.net.FormData,
    invokeServiceAsync: $KI.net.invokeserviceasync,
    invokeService: $KI.net.invokeService,
    cancel: $KI.net.cancel,
    isNetworkAvailable: $KI.net.isNetworkAvailable,
    setNetworkCallbacks: $KI.net.setNetworkCallbacks,
    getActiveNetworkType: $KI.net.getActiveNetworkType,
    getCookies: $KI.net.getCookies,
    clearCookies: $KI.net.clearCookies
  }
}
if ($KI.phone) {
  kony.phone = {
    sendSMS: $KI.phone.sendsms,
    dial: $KI.phone.dial,
    openEmail: $KI.phone.openemail,
    openMediaGallery: $KI.phone.openmediagallery
  }
}
if ($KI.string) {
  kony.string = {
    rep: $KI.string.rep,
    reverse: $KI.string.reverse,
    trim: $KI.string.trim,
    equalsIgnoreCase: $KI.string.equalsignorecase,
    startsWith: $KI.string.startswith,
    endsWith: $KI.string.endswith,
    isNumeric: $KI.string.isnumeric,
    containsChars: $KI.string.containschars,
    containsOnlyGivenChars: $KI.string.containsonlygivenchars,
    containsNoGivenChars: $KI.string.containsnogivenchars,
    isAsciiAlpha: $KI.string.isasciialpha,
    isAsciiAlphaNumeric: $KI.string.isasciialphanumeric,
    isValidEmail: $KI.string.isvalidemail
  }
}
if ($KI.timer) {
  kony.timer = {
    schedule: $KI.timer.schedule,
    cancel: $KI.timer.cancel,
    setCallBack: $KI.timer.setcallback
  }
}
if ($KI.themes) {
  kony.theme = {
    createTheme: $KI.themes.createtheme,
    deleteTheme: $KI.themes.deletetheme,
    getCurrentThemeData: $KI.themes.getcurrentthemedata,
    getCurrentTheme: $KI.themes.getcurrenttheme,
    getAllThemes: $KI.themes.allthemes,
    isThemePresent: $KI.themes.isthemepresent,
    setCurrentTheme: $KI.themes.setcurrenttheme,
    packagedthemes: $KI.themes.packagedthemes
  }
}
kony.stream = {
  registerDataStream: tobeimplemented,
  deregisterDataStream: tobeimplemented,
  setCallback: tobeimplemented
};
kony.convertToBase64 = $KI.converttobase64;
kony.convertToRawBytes = $KI.converttorawbytes;
kony.print = $KI.print;
kony.props = {};
kony.props.getProperty = $KI.props.getProperty;
kony.application = {
  createAppMenu: $KW.Appmenu && $KW.Appmenu.createappmenu,
  setCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.setcurrentappmenu,
  getCurrentAppMenu: $KW.Appmenu && $KW.Appmenu.getcurrentappmenu,
  setAppMenuFocusByID: $KW.Appmenu && $KW.Appmenu.setappmenufocusbyid,
  addAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.addappmenuitemat,
  removeAppMenuItemAt: $KW.Appmenu && $KW.Appmenu.removeappmenuitemat,
  setAppMenu: $KW.Appmenu && $KW.Appmenu.setappmenu,
  setAppMenuFocusIndex: $KW.Appmenu && $KW.Appmenu.setappmenufocusindex,
  showAppMenuItems: $KW.Appmenu && $KW.Appmenu.showappmenuitems,
  hideAppMenuItems: $KW.Appmenu && $KW.Appmenu.hideappmenuitems,
  setBMState: kony.bm.setBMState,
  resetBMState: kony.bm.resetBMState,
  getBMState: kony.bm.getBMState,
  getFormId: kony.bm.getFormId,
  addBMState: kony.bm.addBMState,
  removeBMState: kony.bm.removeBMState,
  exit: $KI.exit,
  getPreviousForm: $KW.Form && $KW.Form.getPreviousForm,
  getCurrentForm: $KW.Form && $KW.Form.getCurrentForm,
  removeGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.removegesturerecognizerforallforms,
  setGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.setgesturerecognizerforallforms,
  addGestureRecognizerForAllForms: $KW.Widget && $KW.Widget.addgesturerecognizerforallforms,
  getApplicationMode: $KI.os && $KI.os.getapplicationmode,
  setApplicationMode: $KI.os && $KI.os.setapplicationmode,
  setApplicationInitializationEvents: $KI.setappevents,
  registerForIdleTimeout: $KI.appevents && $KI.appevents.registerforidletimeout,
  unregisterForIdleTimeout: $KI.appevents && $KI.appevents.unregisterforidletimeout,
  setApplicationBadgeValue: tobeimplemented,
  getApplicationBadgeValue: tobeimplemented,
  setAppMenuBadgeValue: tobeimplemented,
  getAppMenuBadgeValue: tobeimplemented,
  appReset: $KI.appreset,
  setAppHeaders: $KI.setappheaders,
  setAppFooters: $KI.setappfooters,
  setApplicationCallbacks: $KI.setapplicationcallbacks,
  setApplicationBehaviors: $KI.setapplicationbehaviors,
  showLoadingScreen: $KI.window && $KI.window.showLoadingScreen,
  dismissLoadingScreen: $KI.window && $KI.window.dismissLoadingScreen,
  setupWidgetDataRecording: $KI.setupWidgetDataRecording,
  openURL: $KI.window.openURL,
  openMediaURL: $KI.window.openURL
};

function tobeimplemented() {
  console.warn("API to be implemented Yet")
};
